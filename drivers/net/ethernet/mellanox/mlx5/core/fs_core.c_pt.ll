; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c_pt.bc'
source_filename = "../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+mlx5_create_flow_table\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_create_flow_table\09\09\09\09"
module asm "\09.long\09__crc_mlx5_create_flow_table\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_create_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_create_flow_table\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_create_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_create_lag_demux_flow_table\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_create_lag_demux_flow_table\09\09\09\09"
module asm "\09.long\09__crc_mlx5_create_lag_demux_flow_table\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_create_lag_demux_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_create_lag_demux_flow_table\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_create_lag_demux_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_create_auto_grouped_flow_table\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_create_auto_grouped_flow_table\09\09\09\09"
module asm "\09.long\09__crc_mlx5_create_auto_grouped_flow_table\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_create_auto_grouped_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_create_auto_grouped_flow_table\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_create_auto_grouped_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_create_flow_group\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_create_flow_group\09\09\09\09"
module asm "\09.long\09__crc_mlx5_create_flow_group\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_create_flow_group:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_create_flow_group\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_create_flow_group:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_add_flow_rules\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_add_flow_rules\09\09\09\09"
module asm "\09.long\09__crc_mlx5_add_flow_rules\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_add_flow_rules:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_add_flow_rules\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_add_flow_rules:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_del_flow_rules\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_del_flow_rules\09\09\09\09"
module asm "\09.long\09__crc_mlx5_del_flow_rules\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_del_flow_rules:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_del_flow_rules\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_del_flow_rules:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_destroy_flow_table\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_destroy_flow_table\09\09\09\09"
module asm "\09.long\09__crc_mlx5_destroy_flow_table\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_destroy_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_destroy_flow_table\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_destroy_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_destroy_flow_group\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_destroy_flow_group\09\09\09\09"
module asm "\09.long\09__crc_mlx5_destroy_flow_group\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_destroy_flow_group:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_destroy_flow_group\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_destroy_flow_group:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_get_fdb_sub_ns\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_get_fdb_sub_ns\09\09\09\09"
module asm "\09.long\09__crc_mlx5_get_fdb_sub_ns\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_get_fdb_sub_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_get_fdb_sub_ns\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_get_fdb_sub_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_get_flow_namespace\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_get_flow_namespace\09\09\09\09"
module asm "\09.long\09__crc_mlx5_get_flow_namespace\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_get_flow_namespace:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_get_flow_namespace\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_get_flow_namespace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_fs_add_rx_underlay_qpn\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_fs_add_rx_underlay_qpn\09\09\09\09"
module asm "\09.long\09__crc_mlx5_fs_add_rx_underlay_qpn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_fs_add_rx_underlay_qpn:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_fs_add_rx_underlay_qpn\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_fs_add_rx_underlay_qpn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_fs_remove_rx_underlay_qpn\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_fs_remove_rx_underlay_qpn\09\09\09\09"
module asm "\09.long\09__crc_mlx5_fs_remove_rx_underlay_qpn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_fs_remove_rx_underlay_qpn:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_fs_remove_rx_underlay_qpn\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_fs_remove_rx_underlay_qpn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_modify_header_alloc\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_modify_header_alloc\09\09\09\09"
module asm "\09.long\09__crc_mlx5_modify_header_alloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_modify_header_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_modify_header_alloc\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_modify_header_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_modify_header_dealloc\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_modify_header_dealloc\09\09\09\09"
module asm "\09.long\09__crc_mlx5_modify_header_dealloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_modify_header_dealloc:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_modify_header_dealloc\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_modify_header_dealloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_packet_reformat_alloc\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_packet_reformat_alloc\09\09\09\09"
module asm "\09.long\09__crc_mlx5_packet_reformat_alloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_packet_reformat_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_packet_reformat_alloc\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_packet_reformat_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mlx5_packet_reformat_dealloc\22, \22a\22\09"
module asm "\09.weak\09__crc_mlx5_packet_reformat_dealloc\09\09\09\09"
module asm "\09.long\09__crc_mlx5_packet_reformat_dealloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mlx5_packet_reformat_dealloc:\09\09\09\09\09"
module asm "\09.asciz \09\22mlx5_packet_reformat_dealloc\22\09\09\09\09\09"
module asm "__kstrtabns_mlx5_packet_reformat_dealloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.mlx5_flow_spec = type { i8, [128 x i32], [128 x i32], %struct.mlx5_flow_context }
%struct.mlx5_flow_context = type { i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, ptr, ptr, ptr }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.126 }
%struct.atomic_t = type { i32 }
%union.anon.126 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.init_tree_node = type { i32, ptr, i32, %struct.node_caps, i32, i32, i32, i32, i32 }
%struct.node_caps = type { i32, ptr }
%struct.fs_node = type { %struct.list_head, %struct.list_head, i32, ptr, ptr, %struct.rw_semaphore, %struct.refcount_struct, i8, ptr, ptr, %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon }
%union.anon = type { i32 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.mlx5_flow_handle = type { i32, [0 x ptr] }
%struct.mlx5_flow_rule = type { %struct.fs_node, ptr, %struct.mlx5_flow_destination, %struct.list_head, i32 }
%struct.mlx5_flow_destination = type { i32, %union.anon.130 }
%union.anon.130 = type { %struct.anon.131 }
%struct.anon.131 = type { i16, i16, ptr, i8 }
%struct.fs_fte = type { %struct.fs_node, %struct.mlx5_fs_dr_rule, [112 x i32], i32, i32, %struct.mlx5_flow_context, %struct.mlx5_flow_act, i32, ptr, %struct.rhash_head, i32 }
%struct.mlx5_fs_dr_rule = type { ptr, ptr, i32 }
%struct.mlx5_flow_act = type { i32, ptr, ptr, %union.anon.165, i32, [2 x %struct.mlx5_fs_vlan], ptr }
%union.anon.165 = type { i32 }
%struct.mlx5_fs_vlan = type { i16, i16, i8 }
%struct.rhash_head = type { ptr }
%struct.mlx5_flow_root_namespace = type { %struct.mlx5_flow_namespace, i32, %struct.mlx5_fs_dr_domain, i32, ptr, ptr, %struct.mutex, %struct.list_head, ptr }
%struct.mlx5_flow_namespace = type { %struct.fs_node, i32 }
%struct.mlx5_fs_dr_domain = type { ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.mlx5_flow_cmds = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mlx5_pkt_reformat = type { i32, i32, %union.anon.132 }
%union.anon.132 = type { %struct.mlx5_fs_dr_action }
%struct.mlx5_fs_dr_action = type { ptr }
%struct.mlx5_flow_table_attr = type { i32, i32, i32, i32, ptr, %struct.anon.193 }
%struct.anon.193 = type { i32, i32 }
%struct.fs_prio = type { %struct.fs_node, i32, i32, i32, i32 }
%struct.mlx5_flow_table = type { %struct.fs_node, %struct.mlx5_fs_dr_table, i32, i16, i32, i32, i32, i32, %struct.anon.129, %struct.mutex, %struct.list_head, i32, %struct.rhltable, i32, ptr }
%struct.mlx5_fs_dr_table = type { ptr, ptr }
%struct.anon.129 = type { i8, i32, i32, i32, i32 }
%struct.rhltable = type { %struct.rhashtable }
%struct.rhashtable = type { ptr, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.mlx5_core_dev = type { ptr, i32, ptr, %struct.mutex, i32, i8, [64 x i8], %struct.mlx5_cmd, %struct.anon.128, ptr, i64, i32, ptr, i32, i32, %struct.mutex, i32, %struct.mlx5_priv, %struct.mlx5_profile, i32, %struct.mlx5e_resources, ptr, ptr, ptr, %struct.anon.155, ptr, ptr, %struct.mlx5_clock, ptr, ptr, ptr, i32, ptr }
%struct.mlx5_cmd = type { %struct.mlx5_nb, i32, ptr, i32, i32, ptr, i32, i16, i8, i8, i32, i32, ptr, %struct.spinlock, %struct.spinlock, i8, i32, [32 x i8], ptr, %struct.semaphore, %struct.semaphore, i32, i16, [32 x ptr], ptr, %struct.mlx5_cmd_debug, [5 x %struct.cmd_msg_cache], i32, ptr }
%struct.mlx5_nb = type { %struct.notifier_block, i8 }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.mlx5_cmd_debug = type { ptr, ptr, ptr, i8, i16, i16 }
%struct.cmd_msg_cache = type { %struct.spinlock, %struct.list_head, i32, i32 }
%struct.anon.128 = type { [38 x ptr], [20 x i32], [3 x [18 x i32]], [64 x i32], [18 x i32], i8 }
%struct.mlx5_priv = type { ptr, ptr, %struct.mlx5_nb, ptr, %struct.xarray, i32, %struct.atomic_t, %struct.list_head, i32, i32, %struct.mlx5_core_health, %struct.list_head, ptr, ptr, ptr, ptr, %struct.mutex, i32, %struct.mutex, %struct.list_head, ptr, %struct.list_head, %struct.spinlock, ptr, i32, ptr, ptr, ptr, ptr, %struct.mlx5_core_sriov, ptr, i32, ptr, ptr, %struct.mlx5_core_roce, %struct.mlx5_fc_stats, %struct.mlx5_rl_table, ptr, %struct.mlx5_bfreg_data, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.mlx5_core_health = type { ptr, ptr, %struct.timer_list, i32, i32, i8, i32, i32, %struct.spinlock, ptr, i32, %struct.work_struct, %struct.work_struct, ptr, ptr, %struct.delayed_work }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.mlx5_core_sriov = type { ptr, i32, i16 }
%struct.mlx5_core_roce = type { ptr, ptr, ptr }
%struct.mlx5_fc_stats = type { %struct.spinlock, %struct.idr, %struct.list_head, %struct.llist_head, %struct.llist_head, ptr, %struct.delayed_work, i32, i32, ptr, i32, i32, i8, i32, %struct.mlx5_fc_pool }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.llist_head = type { ptr }
%struct.mlx5_fc_pool = type { ptr, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32 }
%struct.mlx5_rl_table = type { %struct.mutex, i16, i32, i32, ptr, i64 }
%struct.mlx5_bfreg_data = type { %struct.mlx5_bfreg_head, %struct.mlx5_bfreg_head }
%struct.mlx5_bfreg_head = type { %struct.mutex, %struct.list_head }
%struct.mlx5_profile = type { i64, i8, [23 x %struct.anon.133] }
%struct.anon.133 = type { i32, i32 }
%struct.mlx5e_resources = type { %struct.mlx5e_hw_objs, %struct.devlink_port, ptr }
%struct.mlx5e_hw_objs = type { i32, %struct.mlx5_td, i32, %struct.mlx5_sq_bfreg }
%struct.mlx5_td = type { %struct.mutex, %struct.list_head, i32 }
%struct.mlx5_sq_bfreg = type { ptr, ptr, i8, i32, i32 }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, %struct.spinlock, i32, i32, ptr, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex, ptr }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.134 }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%union.anon.134 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.anon.155 = type { %struct.mlx5_rsvd_gids, i32 }
%struct.mlx5_rsvd_gids = type { i32, i32, %struct.ida }
%struct.ida = type { %struct.xarray }
%struct.mlx5_clock = type { %struct.mlx5_nb, %struct.seqlock_t, %struct.hwtstamp_config, ptr, %struct.ptp_clock_info, %struct.mlx5_pps, %struct.mlx5_timer }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.ptp_clock_info = type { ptr, [32 x i8], i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mlx5_pps = type { [8 x i8], %struct.work_struct, [8 x i64], i8 }
%struct.mlx5_timer = type { %struct.cyclecounter, %struct.timecounter, i32, i32, %struct.delayed_work }
%struct.cyclecounter = type { ptr, i64, i32, i32 }
%struct.timecounter = type { ptr, i64, i64, i64, i64 }
%struct.mlx5_ft_underlay_qp = type { %struct.list_head, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.109, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%struct.llist_node = type { ptr }
%union.anon.20 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.22 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.109 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.mlx5_flow_steering = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32 }
%struct.mlx5_flow_group = type { %struct.fs_node, %struct.mlx5_fs_dr_matcher, %struct.mlx5_flow_group_mask, i32, i32, %struct.ida, i32, %struct.rhashtable, %struct.rhlist_head }
%struct.mlx5_fs_dr_matcher = type { ptr }
%struct.mlx5_flow_group_mask = type { i8, [112 x i32] }
%struct.rhlist_head = type { %struct.rhash_head, ptr }
%struct.match_list = type { %struct.list_head, ptr }
%struct.mlx5_flow_definer = type { i32, i32 }
%struct.rhashtable_compare_arg = type { ptr, ptr }
%struct.bucket_table = type { i32, i32, i32, %struct.list_head, %struct.callback_head, ptr, %struct.lockdep_map, [68 x i8], [0 x ptr] }

@.str = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"drivers/net/ethernet/mellanox/mlx5/core/fs_core.c\00", [46 x i8] zeroinitializer }, align 32
@find_root._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str, i32 456, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\014mlx5: flow steering node is not in tree or garbaged\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"find_root\00", [22 x i8] zeroinitializer }, align 32
@find_root._entry_ptr = internal global ptr @find_root._entry, section ".printk_index", align 4
@__kstrtab_mlx5_create_flow_table = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_create_flow_table = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_create_flow_table = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_create_flow_table to i32), ptr @__kstrtab_mlx5_create_flow_table, ptr @__kstrtabns_mlx5_create_flow_table }, section "___ksymtab+mlx5_create_flow_table", align 4
@__kstrtab_mlx5_create_lag_demux_flow_table = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_create_lag_demux_flow_table = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_create_lag_demux_flow_table = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_create_lag_demux_flow_table to i32), ptr @__kstrtab_mlx5_create_lag_demux_flow_table, ptr @__kstrtabns_mlx5_create_lag_demux_flow_table }, section "___ksymtab+mlx5_create_lag_demux_flow_table", align 4
@__kstrtab_mlx5_create_auto_grouped_flow_table = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_create_auto_grouped_flow_table = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_create_auto_grouped_flow_table = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_create_auto_grouped_flow_table to i32), ptr @__kstrtab_mlx5_create_auto_grouped_flow_table, ptr @__kstrtabns_mlx5_create_auto_grouped_flow_table }, section "___ksymtab+mlx5_create_auto_grouped_flow_table", align 4
@__kstrtab_mlx5_create_flow_group = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_create_flow_group = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_create_flow_group = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_create_flow_group to i32), ptr @__kstrtab_mlx5_create_flow_group, ptr @__kstrtabns_mlx5_create_flow_group }, section "___ksymtab+mlx5_create_flow_group", align 4
@mlx5_add_flow_rules.zero_spec = internal constant { %struct.mlx5_flow_spec, [272 x i8] } zeroinitializer, align 32
@__kstrtab_mlx5_add_flow_rules = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_add_flow_rules = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_add_flow_rules = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_add_flow_rules to i32), ptr @__kstrtab_mlx5_add_flow_rules, ptr @__kstrtabns_mlx5_add_flow_rules }, section "___ksymtab+mlx5_add_flow_rules", align 4
@__kstrtab_mlx5_del_flow_rules = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_del_flow_rules = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_del_flow_rules = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_del_flow_rules to i32), ptr @__kstrtab_mlx5_del_flow_rules, ptr @__kstrtabns_mlx5_del_flow_rules }, section "___ksymtab+mlx5_del_flow_rules", align 4
@mlx5_destroy_flow_table._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.3, ptr @.str.4, ptr @.str, i32 2185, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"%s:%d:(pid %d): Flow table %d wasn't destroyed, refcount > 1\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mlx5_destroy_flow_table\00", [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@mlx5_destroy_flow_table._entry_ptr = internal global ptr @mlx5_destroy_flow_table._entry, section ".printk_index", align 4
@__kstrtab_mlx5_destroy_flow_table = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_destroy_flow_table = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_destroy_flow_table = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_destroy_flow_table to i32), ptr @__kstrtab_mlx5_destroy_flow_table, ptr @__kstrtabns_mlx5_destroy_flow_table }, section "___ksymtab+mlx5_destroy_flow_table", align 4
@mlx5_destroy_flow_group._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.8, ptr @.str, i32 2196, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"%s:%d:(pid %d): Flow group %d wasn't destroyed, refcount > 1\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mlx5_destroy_flow_group\00", [40 x i8] zeroinitializer }, align 32
@mlx5_destroy_flow_group._entry_ptr = internal global ptr @mlx5_destroy_flow_group._entry, section ".printk_index", align 4
@__kstrtab_mlx5_destroy_flow_group = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_destroy_flow_group = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_destroy_flow_group = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_destroy_flow_group to i32), ptr @__kstrtab_mlx5_destroy_flow_group, ptr @__kstrtabns_mlx5_destroy_flow_group }, section "___ksymtab+mlx5_destroy_flow_group", align 4
@__kstrtab_mlx5_get_fdb_sub_ns = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_get_fdb_sub_ns = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_get_fdb_sub_ns = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_get_fdb_sub_ns to i32), ptr @__kstrtab_mlx5_get_fdb_sub_ns, ptr @__kstrtabns_mlx5_get_fdb_sub_ns }, section "___ksymtab+mlx5_get_fdb_sub_ns", align 4
@__kstrtab_mlx5_get_flow_namespace = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_get_flow_namespace = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_get_flow_namespace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_get_flow_namespace to i32), ptr @__kstrtab_mlx5_get_flow_namespace, ptr @__kstrtabns_mlx5_get_flow_namespace }, section "___ksymtab+mlx5_get_flow_namespace", align 4
@.str.9 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"mlx5_fs_fgs\00", [20 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mlx5_fs_ftes\00", [19 x i8] zeroinitializer }, align 32
@mlx5_fs_add_rx_underlay_qpn._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.11, ptr @.str.12, ptr @.str, i32 3186, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"%s:%d:(pid %d): Failed adding underlay QPN (%u) to root FT err(%d)\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"mlx5_fs_add_rx_underlay_qpn\00", [36 x i8] zeroinitializer }, align 32
@mlx5_fs_add_rx_underlay_qpn._entry_ptr = internal global ptr @mlx5_fs_add_rx_underlay_qpn._entry, section ".printk_index", align 4
@__kstrtab_mlx5_fs_add_rx_underlay_qpn = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_fs_add_rx_underlay_qpn = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_fs_add_rx_underlay_qpn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_fs_add_rx_underlay_qpn to i32), ptr @__kstrtab_mlx5_fs_add_rx_underlay_qpn, ptr @__kstrtabns_mlx5_fs_add_rx_underlay_qpn }, section "___ksymtab+mlx5_fs_add_rx_underlay_qpn", align 4
@mlx5_fs_remove_rx_underlay_qpn._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.14, ptr @.str, i32 3221, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"%s:%d:(pid %d): Failed finding underlay qp (%u) in qpn list\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"mlx5_fs_remove_rx_underlay_qpn\00", [33 x i8] zeroinitializer }, align 32
@mlx5_fs_remove_rx_underlay_qpn._entry_ptr = internal global ptr @mlx5_fs_remove_rx_underlay_qpn._entry, section ".printk_index", align 4
@mlx5_fs_remove_rx_underlay_qpn._entry.15 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @.str.14, ptr @.str, i32 3230, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"%s:%d:(pid %d): Failed removing underlay QPN (%u) from root FT err(%d)\0A\00", [56 x i8] zeroinitializer }, align 32
@mlx5_fs_remove_rx_underlay_qpn._entry_ptr.17 = internal global ptr @mlx5_fs_remove_rx_underlay_qpn._entry.15, section ".printk_index", align 4
@__kstrtab_mlx5_fs_remove_rx_underlay_qpn = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_fs_remove_rx_underlay_qpn = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_fs_remove_rx_underlay_qpn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_fs_remove_rx_underlay_qpn to i32), ptr @__kstrtab_mlx5_fs_remove_rx_underlay_qpn, ptr @__kstrtabns_mlx5_fs_remove_rx_underlay_qpn }, section "___ksymtab+mlx5_fs_remove_rx_underlay_qpn", align 4
@__kstrtab_mlx5_modify_header_alloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_modify_header_alloc = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_modify_header_alloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_modify_header_alloc to i32), ptr @__kstrtab_mlx5_modify_header_alloc, ptr @__kstrtabns_mlx5_modify_header_alloc }, section "___ksymtab+mlx5_modify_header_alloc", align 4
@__kstrtab_mlx5_modify_header_dealloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_modify_header_dealloc = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_modify_header_dealloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_modify_header_dealloc to i32), ptr @__kstrtab_mlx5_modify_header_dealloc, ptr @__kstrtabns_mlx5_modify_header_dealloc }, section "___ksymtab+mlx5_modify_header_dealloc", align 4
@__kstrtab_mlx5_packet_reformat_alloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_packet_reformat_alloc = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_packet_reformat_alloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_packet_reformat_alloc to i32), ptr @__kstrtab_mlx5_packet_reformat_alloc, ptr @__kstrtabns_mlx5_packet_reformat_alloc }, section "___ksymtab+mlx5_packet_reformat_alloc", align 4
@__kstrtab_mlx5_packet_reformat_dealloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_mlx5_packet_reformat_dealloc = external dso_local constant [0 x i8], align 1
@__ksymtab_mlx5_packet_reformat_dealloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mlx5_packet_reformat_dealloc to i32), ptr @__kstrtab_mlx5_packet_reformat_dealloc, ptr @__kstrtabns_mlx5_packet_reformat_dealloc }, section "___ksymtab+mlx5_packet_reformat_dealloc", align 4
@mlx5_create_match_definer._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.19, ptr @.str, i32 3368, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"%s:%d:(pid %d): Failed to create match definer (%d)\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"mlx5_create_match_definer\00", [38 x i8] zeroinitializer }, align 32
@mlx5_create_match_definer._entry_ptr = internal global ptr @mlx5_create_match_definer._entry, section ".printk_index", align 4
@mlx5_flow_namespace_set_peer._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.21, ptr @.str, i32 3394, ptr @.str.22, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"%s:%d:(pid %d): Can't peer namespace of different steering mode\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"mlx5_flow_namespace_set_peer\00", [35 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@mlx5_flow_namespace_set_peer._entry_ptr = internal global ptr @mlx5_flow_namespace_set_peer._entry, section ".printk_index", align 4
@mlx5_flow_namespace_set_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.24, ptr @.str, i32 3433, ptr @.str.22, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"%s:%d:(pid %d): Failed to create flow namespace (%d)\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"mlx5_flow_namespace_set_mode\00", [35 x i8] zeroinitializer }, align 32
@mlx5_flow_namespace_set_mode._entry_ptr = internal global ptr @mlx5_flow_namespace_set_mode._entry, section ".printk_index", align 4
@__mlx5_create_flow_table._entry = internal constant %struct.pi_entry { ptr @.str.25, ptr @.str.26, ptr @.str, i32 1110, ptr null, ptr null }, align 1
@.str.25 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013mlx5: flow steering failed to find root of namespace\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"__mlx5_create_flow_table\00", [39 x i8] zeroinitializer }, align 32
@__mlx5_create_flow_table._entry_ptr = internal global ptr @__mlx5_create_flow_table._entry, section ".printk_index", align 4
@rhash_fg = internal constant { %struct.rhashtable_params, [36 x i8] } { %struct.rhashtable_params { i16 0, i16 452, i16 148, i16 892, i32 0, i16 1, i8 1, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@alloc_flow_table.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.27 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"&ft->lock\00", [22 x i8] zeroinitializer }, align 32
@tree_init_node.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.28 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&node->lock\00", [20 x i8] zeroinitializer }, align 32
@del_hw_flow_table._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.30, ptr @.str, i32 507, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"%s:%d:(pid %d): flow steering can't destroy ft\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"del_hw_flow_table\00", [46 x i8] zeroinitializer }, align 32
@del_hw_flow_table._entry_ptr = internal global ptr @del_hw_flow_table._entry, section ".printk_index", align 4
@__tracepoint_mlx5_fs_del_ft = external dso_local global %struct.tracepoint, align 4
@.str.31 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h\00", [35 x i8] zeroinitializer }, align 32
@trace_mlx5_fs_del_ft.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.32 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.33 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@connect_fts_in_prio._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.35, ptr @.str, i32 910, ptr @.str.22, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"%s:%d:(pid %d): Failed to modify flow table id %d, type %d, err %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"connect_fts_in_prio\00", [44 x i8] zeroinitializer }, align 32
@connect_fts_in_prio._entry_ptr = internal global ptr @connect_fts_in_prio._entry, section ".printk_index", align 4
@connect_fwd_rules._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.37, ptr @.str, i32 1051, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013mlx5_core: failed to modify rule to point on flow table %d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"connect_fwd_rules\00", [46 x i8] zeroinitializer }, align 32
@connect_fwd_rules._entry_ptr = internal global ptr @connect_fwd_rules._entry, section ".printk_index", align 4
@update_root_ft_create._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.39, ptr @.str, i32 967, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"%s:%d:(pid %d): Update root flow table of id(%u) qpn(%d) failed\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"update_root_ft_create\00", [42 x i8] zeroinitializer }, align 32
@update_root_ft_create._entry_ptr = internal global ptr @update_root_ft_create._entry, section ".printk_index", align 4
@__tracepoint_mlx5_fs_add_ft = external dso_local global %struct.tracepoint, align 4
@trace_mlx5_fs_add_ft.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rhash_fte = internal constant { %struct.rhashtable_params, [36 x i8] } { %struct.rhashtable_params { i16 0, i16 448, i16 156, i16 668, i32 0, i16 1, i8 1, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@xa_init_flags.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.40 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&xa->xa_lock\00", [19 x i8] zeroinitializer }, align 32
@__rhashtable_insert_fast.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.41 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/linux/rhashtable.h\00", [37 x i8] zeroinitializer }, align 32
@__rhashtable_insert_fast.__warned.42 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.43 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"suspicious rcu_dereference_protected() usage\00", [51 x i8] zeroinitializer }, align 32
@__rhashtable_insert_fast.__warned.44 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.45 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.47 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@rht_ptr.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@del_hw_flow_group._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.49, ptr @.str, i32 645, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"%s:%d:(pid %d): flow steering can't destroy fg %d of ft %d\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"del_hw_flow_group\00", [46 x i8] zeroinitializer }, align 32
@del_hw_flow_group._entry_ptr = internal global ptr @del_hw_flow_group._entry, section ".printk_index", align 4
@__tracepoint_mlx5_fs_del_fg = external dso_local global %struct.tracepoint, align 4
@trace_mlx5_fs_del_fg.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rhashtable_remove_fast.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rhashtable_remove_fast.__warned.50 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rhashtable_remove_fast_one.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rhashtable_remove_fast_one.__warned.51 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rhashtable_remove_fast_one.__warned.52 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rhashtable_remove_fast_one.__warned.53 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rhashtable_remove_fast_one.__warned.54 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_mlx5_fs_add_fg = external dso_local global %struct.tracepoint, align 4
@trace_mlx5_fs_add_fg.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@check_valid_spec._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.56, ptr @.str, i32 441, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\014mlx5_core: match_value differs from match_criteria\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"check_valid_spec\00", [47 x i8] zeroinitializer }, align 32
@check_valid_spec._entry_ptr = internal global ptr @check_valid_spec._entry, section ".printk_index", align 4
@__rhashtable_lookup.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rhashtable_lookup.__warned.57 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rht_ptr_rcu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@check_conflicting_ftes._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.58, ptr @.str.59, ptr @.str, i32 1591, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"%s:%d:(pid %d): Found two FTEs with conflicting actions\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"check_conflicting_ftes\00", [41 x i8] zeroinitializer }, align 32
@check_conflicting_ftes._entry_ptr = internal global ptr @check_conflicting_ftes._entry, section ".printk_index", align 4
@check_conflicting_ftes._entry.60 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.59, ptr @.str, i32 1600, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"%s:%d:(pid %d): FTE flow tag %u already exists with different flow tag %u\0A\00", [53 x i8] zeroinitializer }, align 32
@check_conflicting_ftes._entry_ptr.62 = internal global ptr @check_conflicting_ftes._entry.60, section ".printk_index", align 4
@__tracepoint_mlx5_fs_del_rule = external dso_local global %struct.tracepoint, align 4
@trace_mlx5_fs_del_rule.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_mlx5_fs_set_fte = external dso_local global %struct.tracepoint, align 4
@trace_mlx5_fs_set_fte.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_mlx5_fs_add_rule = external dso_local global %struct.tracepoint, align 4
@trace_mlx5_fs_add_rule.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@modify_fte._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str, i32 543, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"%s:%d:(pid %d): %s can't del rule fg id=%d fte_index=%d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"modify_fte\00", [21 x i8] zeroinitializer }, align 32
@modify_fte._entry_ptr = internal global ptr @modify_fte._entry, section ".printk_index", align 4
@del_hw_fte._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.66, ptr @.str, i32 607, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"%s:%d:(pid %d): flow steering can't delete fte in index %d of flow group id %d\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"del_hw_fte\00", [21 x i8] zeroinitializer }, align 32
@del_hw_fte._entry_ptr = internal global ptr @del_hw_fte._entry, section ".printk_index", align 4
@__tracepoint_mlx5_fs_del_fte = external dso_local global %struct.tracepoint, align 4
@trace_mlx5_fs_del_fte.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@disconnect_flow_table._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.68, ptr @.str, i32 2167, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"%s:%d:(pid %d): Failed to disconnect flow table %d\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"disconnect_flow_table\00", [42 x i8] zeroinitializer }, align 32
@disconnect_flow_table._entry_ptr = internal global ptr @disconnect_flow_table._entry, section ".printk_index", align 4
@update_root_ft_destroy._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.69, ptr @.str, i32 2132, ptr @.str.5, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"update_root_ft_destroy\00", [41 x i8] zeroinitializer }, align 32
@update_root_ft_destroy._entry_ptr = internal global ptr @update_root_ft_destroy._entry, section ".printk_index", align 4
@create_root_ns.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.70 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&root_ns->chain_lock\00", [43 x i8] zeroinitializer }, align 32
@.compoundliteral = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.71 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 33, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.72 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.71, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.73 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.74 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.75 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.74, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 1, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.76 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.75, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.77 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.78 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.79 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.78, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 2, i32 0, i32 2, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.80 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.79, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.81 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.82 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.83 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.82, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 11, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.84 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.83, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.85 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.86 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.87 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.88 = internal global { [2 x %struct.init_tree_node], [48 x i8] } { [2 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.86, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 1, i32 0, i32 2, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.87, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 1, i32 0, i32 7, i32 0 }], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.89 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.88, i32 2, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.90 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.91 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.90, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 1, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.92 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.91, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.93 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.94 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.95 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.94, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 1, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.96 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.95, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.97 = internal global { [7 x %struct.init_tree_node], [72 x i8] } { [7 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.72, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.73 }, i32 53, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.76, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.77 }, i32 57, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.80, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.81 }, i32 56, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.84, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.85 }, i32 19, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.89, i32 1, %struct.node_caps zeroinitializer, i32 8, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.92, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.93 }, i32 53, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.96, i32 1, %struct.node_caps zeroinitializer, i32 54, i32 0, i32 0, i32 0, i32 0 }], [72 x i8] zeroinitializer }, align 32
@create_anchor_flow_table._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.99, ptr @.str, i32 2606, ptr @.str.22, ptr @.str.6 }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"%s:%d:(pid %d): Failed to create last anchor flow table\00", [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"create_anchor_flow_table\00", [39 x i8] zeroinitializer }, align 32
@create_anchor_flow_table._entry_ptr = internal global ptr @create_anchor_flow_table._entry, section ".printk_index", align 4
@.compoundliteral.100 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.101 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.100, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 2, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.102 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.101, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.103 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.104 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.105 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.104, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 16, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.106 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.105, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.107 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.108 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.109 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.108, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 1, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.110 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.109, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 2 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.111 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.112 = internal global { [3 x %struct.init_tree_node], [40 x i8] } { [3 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.102, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.103 }, i32 19, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.106, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.107 }, i32 16, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.110, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.111 }, i32 17, i32 0, i32 0, i32 0, i32 0 }], [40 x i8] zeroinitializer }, align 32
@.compoundliteral.113 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.114 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.113, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 1, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.115 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.114, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.116 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 515, i32 516, i32 517, i32 518], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.117 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.118 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.117, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 33, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.119 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.118, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.120 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 2563, i32 2564, i32 2565, i32 2566], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.121 = internal global { [2 x %struct.init_tree_node], [48 x i8] } { [2 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.115, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.116 }, i32 34, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.119, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.120 }, i32 33, i32 0, i32 0, i32 0, i32 0 }], [48 x i8] zeroinitializer }, align 32
@.compoundliteral.122 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.123 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.122, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 33, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.124 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.123, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.125 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 2051, i32 2052, i32 2053, i32 2054], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.126 = internal global { [0 x %struct.init_tree_node], [32 x i8] } zeroinitializer, align 32
@.compoundliteral.127 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.126, i32 0, %struct.node_caps zeroinitializer, i32 0, i32 1, i32 0, i32 1, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.128 = internal global { [1 x %struct.init_tree_node], [56 x i8] } { [1 x %struct.init_tree_node] [%struct.init_tree_node { i32 0, ptr @.compoundliteral.127, i32 1, %struct.node_caps zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0 }], [56 x i8] zeroinitializer }, align 32
@.compoundliteral.129 = internal global { [4 x i32], [16 x i8] } { [4 x i32] [i32 2051, i32 2052, i32 2053, i32 2054], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.130 = internal global { [2 x %struct.init_tree_node], [48 x i8] } { [2 x %struct.init_tree_node] [%struct.init_tree_node { i32 1, ptr @.compoundliteral.124, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.125 }, i32 33, i32 0, i32 0, i32 0, i32 0 }, %struct.init_tree_node { i32 1, ptr @.compoundliteral.128, i32 1, %struct.node_caps { i32 4, ptr @.compoundliteral.129 }, i32 1, i32 0, i32 0, i32 0, i32 0 }], [48 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 6, i64 8, i64 257]
@__sancov_gen_cov_switch_values.131 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 6]
@__sancov_gen_cov_switch_values.132 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4]
@__sancov_gen_cov_switch_values.133 = internal global [4 x i64] [i64 2, i64 32, i64 4294967285, i64 4294967294]
@__sancov_gen_cov_switch_values.134 = internal global [14 x i64] [i64 12, i64 32, i64 7, i64 8, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20]
@__sancov_gen_cov_switch_values.135 = internal global [4 x i64] [i64 2, i64 32, i64 9, i64 10]
@__sancov_gen_cov_switch_values.136 = internal global [4 x i64] [i64 2, i64 32, i64 9, i64 10]
@__sancov_gen_cov_switch_values.137 = internal global [14 x i64] [i64 12, i64 32, i64 7, i64 8, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20]
@__sancov_gen_cov_switch_values.139 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@___asan_gen_.142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 455, i32 6 }
@___asan_gen_.151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 456, i32 3 }
@___asan_gen_.152 = private unnamed_addr constant [10 x i8] c"zero_spec\00", align 1
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 1988, i32 37 }
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 2184, i32 3 }
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 2195, i32 3 }
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 3093, i32 42 }
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 3096, i32 43 }
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 3185, i32 3 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 3220, i32 3 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 3229, i32 3 }
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 3368, i32 3 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 3393, i32 3 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 3432, i32 3 }
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 1110, i32 3 }
@___asan_gen_.245 = private unnamed_addr constant [9 x i8] c"rhash_fg\00", align 1
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 287, i32 39 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 813, i32 2 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 322, i32 2 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 507, i32 4 }
@___asan_gen_.273 = private unnamed_addr constant [64 x i8] c"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h\00", align 1
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.273, i32 83, i32 1 }
@___asan_gen_.276 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.276, i32 108, i32 2 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 908, i32 4 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 1050, i32 4 }
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 965, i32 3 }
@___asan_gen_.305 = private unnamed_addr constant [10 x i8] c"rhash_fte\00", align 1
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 279, i32 39 }
@___asan_gen_.312 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.312, i32 378, i32 2 }
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.318, i32 715, i32 8 }
@___asan_gen_.318 = private unnamed_addr constant [30 x i8] c"../include/linux/rhashtable.h\00", align 1
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.318, i32 755, i32 10 }
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.327, i32 695, i32 2 }
@___asan_gen_.327 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.327, i32 723, i32 2 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 644, i32 3 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 441, i32 4 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 1590, i32 3 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 1597, i32 3 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 541, i32 3 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 605, i32 4 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 2166, i32 3 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 2130, i32 3 }
@___asan_gen_.395 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 2532, i32 2 }
@___asan_gen_.401 = private unnamed_addr constant [17 x i8] c".compoundliteral\00", align 1
@___asan_gen_.402 = private unnamed_addr constant [20 x i8] c".compoundliteral.71\00", align 1
@___asan_gen_.403 = private unnamed_addr constant [20 x i8] c".compoundliteral.72\00", align 1
@___asan_gen_.404 = private unnamed_addr constant [20 x i8] c".compoundliteral.73\00", align 1
@___asan_gen_.405 = private unnamed_addr constant [20 x i8] c".compoundliteral.74\00", align 1
@___asan_gen_.406 = private unnamed_addr constant [20 x i8] c".compoundliteral.75\00", align 1
@___asan_gen_.407 = private unnamed_addr constant [20 x i8] c".compoundliteral.76\00", align 1
@___asan_gen_.408 = private unnamed_addr constant [20 x i8] c".compoundliteral.77\00", align 1
@___asan_gen_.409 = private unnamed_addr constant [20 x i8] c".compoundliteral.78\00", align 1
@___asan_gen_.410 = private unnamed_addr constant [20 x i8] c".compoundliteral.79\00", align 1
@___asan_gen_.411 = private unnamed_addr constant [20 x i8] c".compoundliteral.80\00", align 1
@___asan_gen_.412 = private unnamed_addr constant [20 x i8] c".compoundliteral.81\00", align 1
@___asan_gen_.413 = private unnamed_addr constant [20 x i8] c".compoundliteral.82\00", align 1
@___asan_gen_.414 = private unnamed_addr constant [20 x i8] c".compoundliteral.83\00", align 1
@___asan_gen_.415 = private unnamed_addr constant [20 x i8] c".compoundliteral.84\00", align 1
@___asan_gen_.416 = private unnamed_addr constant [20 x i8] c".compoundliteral.85\00", align 1
@___asan_gen_.417 = private unnamed_addr constant [20 x i8] c".compoundliteral.86\00", align 1
@___asan_gen_.418 = private unnamed_addr constant [20 x i8] c".compoundliteral.87\00", align 1
@___asan_gen_.419 = private unnamed_addr constant [20 x i8] c".compoundliteral.88\00", align 1
@___asan_gen_.420 = private unnamed_addr constant [20 x i8] c".compoundliteral.89\00", align 1
@___asan_gen_.421 = private unnamed_addr constant [20 x i8] c".compoundliteral.90\00", align 1
@___asan_gen_.422 = private unnamed_addr constant [20 x i8] c".compoundliteral.91\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [20 x i8] c".compoundliteral.92\00", align 1
@___asan_gen_.424 = private unnamed_addr constant [20 x i8] c".compoundliteral.93\00", align 1
@___asan_gen_.425 = private unnamed_addr constant [20 x i8] c".compoundliteral.94\00", align 1
@___asan_gen_.426 = private unnamed_addr constant [20 x i8] c".compoundliteral.95\00", align 1
@___asan_gen_.427 = private unnamed_addr constant [20 x i8] c".compoundliteral.96\00", align 1
@___asan_gen_.428 = private unnamed_addr constant [20 x i8] c".compoundliteral.97\00", align 1
@___asan_gen_.429 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.435 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.436 = private constant [53 x i8] c"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c\00", align 1
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.436, i32 2606, i32 3 }
@___asan_gen_.438 = private unnamed_addr constant [21 x i8] c".compoundliteral.100\00", align 1
@___asan_gen_.439 = private unnamed_addr constant [21 x i8] c".compoundliteral.101\00", align 1
@___asan_gen_.440 = private unnamed_addr constant [21 x i8] c".compoundliteral.102\00", align 1
@___asan_gen_.441 = private unnamed_addr constant [21 x i8] c".compoundliteral.103\00", align 1
@___asan_gen_.442 = private unnamed_addr constant [21 x i8] c".compoundliteral.104\00", align 1
@___asan_gen_.443 = private unnamed_addr constant [21 x i8] c".compoundliteral.105\00", align 1
@___asan_gen_.444 = private unnamed_addr constant [21 x i8] c".compoundliteral.106\00", align 1
@___asan_gen_.445 = private unnamed_addr constant [21 x i8] c".compoundliteral.107\00", align 1
@___asan_gen_.446 = private unnamed_addr constant [21 x i8] c".compoundliteral.108\00", align 1
@___asan_gen_.447 = private unnamed_addr constant [21 x i8] c".compoundliteral.109\00", align 1
@___asan_gen_.448 = private unnamed_addr constant [21 x i8] c".compoundliteral.110\00", align 1
@___asan_gen_.449 = private unnamed_addr constant [21 x i8] c".compoundliteral.111\00", align 1
@___asan_gen_.450 = private unnamed_addr constant [21 x i8] c".compoundliteral.112\00", align 1
@___asan_gen_.451 = private unnamed_addr constant [21 x i8] c".compoundliteral.113\00", align 1
@___asan_gen_.452 = private unnamed_addr constant [21 x i8] c".compoundliteral.114\00", align 1
@___asan_gen_.453 = private unnamed_addr constant [21 x i8] c".compoundliteral.115\00", align 1
@___asan_gen_.454 = private unnamed_addr constant [21 x i8] c".compoundliteral.116\00", align 1
@___asan_gen_.455 = private unnamed_addr constant [21 x i8] c".compoundliteral.117\00", align 1
@___asan_gen_.456 = private unnamed_addr constant [21 x i8] c".compoundliteral.118\00", align 1
@___asan_gen_.457 = private unnamed_addr constant [21 x i8] c".compoundliteral.119\00", align 1
@___asan_gen_.458 = private unnamed_addr constant [21 x i8] c".compoundliteral.120\00", align 1
@___asan_gen_.459 = private unnamed_addr constant [21 x i8] c".compoundliteral.121\00", align 1
@___asan_gen_.460 = private unnamed_addr constant [21 x i8] c".compoundliteral.122\00", align 1
@___asan_gen_.461 = private unnamed_addr constant [21 x i8] c".compoundliteral.123\00", align 1
@___asan_gen_.462 = private unnamed_addr constant [21 x i8] c".compoundliteral.124\00", align 1
@___asan_gen_.463 = private unnamed_addr constant [21 x i8] c".compoundliteral.125\00", align 1
@___asan_gen_.464 = private unnamed_addr constant [21 x i8] c".compoundliteral.126\00", align 1
@___asan_gen_.465 = private unnamed_addr constant [21 x i8] c".compoundliteral.127\00", align 1
@___asan_gen_.466 = private unnamed_addr constant [21 x i8] c".compoundliteral.128\00", align 1
@___asan_gen_.467 = private unnamed_addr constant [21 x i8] c".compoundliteral.129\00", align 1
@___asan_gen_.468 = private unnamed_addr constant [21 x i8] c".compoundliteral.130\00", align 1
@llvm.compiler.used = appending global [189 x ptr] [ptr @__ksymtab_mlx5_add_flow_rules, ptr @__ksymtab_mlx5_create_auto_grouped_flow_table, ptr @__ksymtab_mlx5_create_flow_group, ptr @__ksymtab_mlx5_create_flow_table, ptr @__ksymtab_mlx5_create_lag_demux_flow_table, ptr @__ksymtab_mlx5_del_flow_rules, ptr @__ksymtab_mlx5_destroy_flow_group, ptr @__ksymtab_mlx5_destroy_flow_table, ptr @__ksymtab_mlx5_fs_add_rx_underlay_qpn, ptr @__ksymtab_mlx5_fs_remove_rx_underlay_qpn, ptr @__ksymtab_mlx5_get_fdb_sub_ns, ptr @__ksymtab_mlx5_get_flow_namespace, ptr @__ksymtab_mlx5_modify_header_alloc, ptr @__ksymtab_mlx5_modify_header_dealloc, ptr @__ksymtab_mlx5_packet_reformat_alloc, ptr @__ksymtab_mlx5_packet_reformat_dealloc, ptr @__mlx5_create_flow_table._entry, ptr @__mlx5_create_flow_table._entry_ptr, ptr @check_conflicting_ftes._entry, ptr @check_conflicting_ftes._entry.60, ptr @check_conflicting_ftes._entry_ptr, ptr @check_conflicting_ftes._entry_ptr.62, ptr @check_valid_spec._entry, ptr @check_valid_spec._entry_ptr, ptr @connect_fts_in_prio._entry, ptr @connect_fts_in_prio._entry_ptr, ptr @connect_fwd_rules._entry, ptr @connect_fwd_rules._entry_ptr, ptr @create_anchor_flow_table._entry, ptr @create_anchor_flow_table._entry_ptr, ptr @del_hw_flow_group._entry, ptr @del_hw_flow_group._entry_ptr, ptr @del_hw_flow_table._entry, ptr @del_hw_flow_table._entry_ptr, ptr @del_hw_fte._entry, ptr @del_hw_fte._entry_ptr, ptr @disconnect_flow_table._entry, ptr @disconnect_flow_table._entry_ptr, ptr @find_root._entry, ptr @find_root._entry_ptr, ptr @mlx5_create_match_definer._entry, ptr @mlx5_create_match_definer._entry_ptr, ptr @mlx5_destroy_flow_group._entry, ptr @mlx5_destroy_flow_group._entry_ptr, ptr @mlx5_destroy_flow_table._entry, ptr @mlx5_destroy_flow_table._entry_ptr, ptr @mlx5_flow_namespace_set_mode._entry, ptr @mlx5_flow_namespace_set_mode._entry_ptr, ptr @mlx5_flow_namespace_set_peer._entry, ptr @mlx5_flow_namespace_set_peer._entry_ptr, ptr @mlx5_fs_add_rx_underlay_qpn._entry, ptr @mlx5_fs_add_rx_underlay_qpn._entry_ptr, ptr @mlx5_fs_remove_rx_underlay_qpn._entry, ptr @mlx5_fs_remove_rx_underlay_qpn._entry.15, ptr @mlx5_fs_remove_rx_underlay_qpn._entry_ptr, ptr @mlx5_fs_remove_rx_underlay_qpn._entry_ptr.17, ptr @modify_fte._entry, ptr @modify_fte._entry_ptr, ptr @update_root_ft_create._entry, ptr @update_root_ft_create._entry_ptr, ptr @update_root_ft_destroy._entry, ptr @update_root_ft_destroy._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @mlx5_add_flow_rules.zero_spec, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.16, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @rhash_fg, ptr @alloc_flow_table.__key, ptr @.str.27, ptr @tree_init_node.__key, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @rhash_fte, ptr @xa_init_flags.__key, ptr @.str.40, ptr @.str.41, ptr @.str.43, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.55, ptr @.str.56, ptr @.str.58, ptr @.str.59, ptr @.str.61, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @create_root_ns.__key, ptr @.str.70, ptr @.compoundliteral, ptr @.compoundliteral.71, ptr @.compoundliteral.72, ptr @.compoundliteral.73, ptr @.compoundliteral.74, ptr @.compoundliteral.75, ptr @.compoundliteral.76, ptr @.compoundliteral.77, ptr @.compoundliteral.78, ptr @.compoundliteral.79, ptr @.compoundliteral.80, ptr @.compoundliteral.81, ptr @.compoundliteral.82, ptr @.compoundliteral.83, ptr @.compoundliteral.84, ptr @.compoundliteral.85, ptr @.compoundliteral.86, ptr @.compoundliteral.87, ptr @.compoundliteral.88, ptr @.compoundliteral.89, ptr @.compoundliteral.90, ptr @.compoundliteral.91, ptr @.compoundliteral.92, ptr @.compoundliteral.93, ptr @.compoundliteral.94, ptr @.compoundliteral.95, ptr @.compoundliteral.96, ptr @.compoundliteral.97, ptr @.str.98, ptr @.str.99, ptr @.compoundliteral.100, ptr @.compoundliteral.101, ptr @.compoundliteral.102, ptr @.compoundliteral.103, ptr @.compoundliteral.104, ptr @.compoundliteral.105, ptr @.compoundliteral.106, ptr @.compoundliteral.107, ptr @.compoundliteral.108, ptr @.compoundliteral.109, ptr @.compoundliteral.110, ptr @.compoundliteral.111, ptr @.compoundliteral.112, ptr @.compoundliteral.113, ptr @.compoundliteral.114, ptr @.compoundliteral.115, ptr @.compoundliteral.116, ptr @.compoundliteral.117, ptr @.compoundliteral.118, ptr @.compoundliteral.119, ptr @.compoundliteral.120, ptr @.compoundliteral.121, ptr @.compoundliteral.122, ptr @.compoundliteral.123, ptr @.compoundliteral.124, ptr @.compoundliteral.125, ptr @.compoundliteral.126, ptr @.compoundliteral.127, ptr @.compoundliteral.128, ptr @.compoundliteral.129, ptr @.compoundliteral.130], section "llvm.metadata"
@0 = internal global [149 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_root._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_add_flow_rules.zero_spec to i32), i32 1040, i32 1312, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_destroy_flow_table._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_destroy_flow_group._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_fs_add_rx_underlay_qpn._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_fs_remove_rx_underlay_qpn._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_fs_remove_rx_underlay_qpn._entry.15 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_create_match_definer._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_flow_namespace_set_peer._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_flow_namespace_set_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rhash_fg to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_flow_table.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tree_init_node.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @del_hw_flow_table._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @connect_fts_in_prio._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @connect_fwd_rules._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @update_root_ft_create._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rhash_fte to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xa_init_flags.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @del_hw_flow_group._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_valid_spec._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_conflicting_ftes._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_conflicting_ftes._entry.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modify_fte._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @del_hw_fte._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @disconnect_flow_table._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @update_root_ft_destroy._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @create_root_ns.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.71 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.72 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.73 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.74 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.75 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.76 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.77 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.78 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.79 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.80 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.81 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.82 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.83 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.84 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.85 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.86 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.87 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.88 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.89 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.90 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.91 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.92 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.93 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.94 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.95 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.96 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.97 to i32), i32 280, i32 352, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @create_anchor_flow_table._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.100 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.101 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.102 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.103 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.104 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.105 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.106 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.107 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.108 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.109 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.110 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.111 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.112 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.113 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.114 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.115 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.116 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.117 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.118 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.119 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.120 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.121 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.122 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.123 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.124 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.125 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.126 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.127 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.128 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.129 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.130 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @find_root(ptr nocapture noundef readonly %node) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1 = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 4
  %0 = ptrtoint ptr %root1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1, align 4
  %type = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not = icmp eq i32 %3, 0
  br i1 %cmp.not, label %entry.cleanup_crit_edge, label %do.end, !prof !259

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %do.end ], [ %1, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_modify_rule_destination(ptr nocapture noundef readonly %handle, ptr nocapture noundef readonly %new_dest, ptr noundef readnone %old_dest) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %old_dest, null
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %handle, align 4
  br i1 %tobool.not, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp422 = icmp sgt i32 %1, 0
  br i1 %cmp422, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.not = icmp eq i32 %1, 1
  br i1 %cmp.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %rule = getelementptr inbounds %struct.mlx5_flow_handle, ptr %handle, i32 0, i32 1
  %2 = ptrtoint ptr %rule to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rule, align 4
  br label %cleanup.sink.split

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.023, 1
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %for.cond.cleanup_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.023 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx6 = getelementptr %struct.mlx5_flow_handle, ptr %handle, i32 0, i32 1, i32 %i.023
  %4 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx6, align 4
  %dest_attr = getelementptr inbounds %struct.mlx5_flow_rule, ptr %5, i32 0, i32 2
  %call7 = tail call fastcc zeroext i1 @mlx5_flow_dests_cmp(ptr noundef %new_dest, ptr noundef %dest_attr)
  br i1 %call7, label %for.body.cleanup.sink.split_crit_edge, label %for.cond

for.body.cleanup.sink.split_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %for.body.cleanup.sink.split_crit_edge, %if.end
  %.lcssa.sink = phi ptr [ %3, %if.end ], [ %5, %for.body.cleanup.sink.split_crit_edge ]
  %call11 = tail call fastcc i32 @_mlx5_modify_rule_destination(ptr noundef %.lcssa.sink, ptr noundef %new_dest)
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %for.cond.cleanup_crit_edge, %if.then.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.then.cleanup_crit_edge ], [ -22, %for.cond.preheader.cleanup_crit_edge ], [ %call11, %cleanup.sink.split ], [ -22, %for.cond.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_mlx5_modify_rule_destination(ptr nocapture noundef %rule, ptr nocapture noundef readonly %dest) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %parent = getelementptr inbounds %struct.fs_node, ptr %rule, i32 0, i32 3
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 4
  %action = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %action, align 4
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.down_write_ref_node.exit_crit_edge, label %if.then.i

if.end.down_write_ref_node.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %down_write_ref_node.exit

if.then.i:                                        ; preds = %if.end
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 5
  tail call void @down_write(ptr noundef %lock.i) #14
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %5 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %.not.i.i.i.i = icmp sgt i32 %5, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.down_write_ref_node.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %down_write_ref_node.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #14
  br label %down_write_ref_node.exit

down_write_ref_node.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge, %if.end.down_write_ref_node.exit_crit_edge
  %parent5 = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %parent5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent5, align 4
  %parent10 = getelementptr inbounds %struct.fs_node, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %parent10 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent10, align 4
  %dest_attr = getelementptr inbounds %struct.mlx5_flow_rule, ptr %rule, i32 0, i32 2
  %10 = call ptr @memcpy(ptr %dest_attr, ptr %dest, i32 16)
  %root1.i = getelementptr inbounds %struct.fs_node, ptr %9, i32 0, i32 4
  %11 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %root1.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.not.i = icmp eq i32 %14, 0
  br i1 %cmp.not.i, label %down_write_ref_node.exit.find_root.exit_crit_edge, label %do.end.i, !prof !259

down_write_ref_node.exit.find_root.exit_crit_edge: ; preds = %down_write_ref_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %down_write_ref_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %down_write_ref_node.exit.find_root.exit_crit_edge
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %12, %down_write_ref_node.exit.find_root.exit_crit_edge ]
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i, i32 0, i32 8
  %15 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cmds, align 4
  %update_fte = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %16, i32 0, i32 6
  %17 = ptrtoint ptr %update_fte to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %update_fte, align 4
  %call14 = tail call i32 %18(ptr noundef %retval.0.i, ptr noundef %9, ptr noundef %7, i32 noundef 4, ptr noundef %1) #14
  %refcount.i29 = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i29, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i29, i32 1, i32 3, i32 1) #14
  %19 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i29, ptr %refcount.i29, i32 1, ptr elementtype(i32) %refcount.i29) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i30 = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i30)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i30, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %find_root.exit.up_write_ref_node.exit_crit_edge, !prof !261

find_root.exit.up_write_ref_node.exit_crit_edge:  ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit

if.then3.i.i.i:                                   ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i29, i32 noundef 4) #14
  br label %up_write_ref_node.exit

up_write_ref_node.exit:                           ; preds = %if.then3.i.i.i, %find_root.exit.up_write_ref_node.exit_crit_edge
  %lock.i31 = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 5
  tail call void @up_write(ptr noundef %lock.i31) #14
  br label %cleanup

cleanup:                                          ; preds = %up_write_ref_node.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call14, %up_write_ref_node.exit ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @mlx5_flow_dests_cmp(ptr nocapture noundef readonly %d1, ptr nocapture noundef readonly %d2) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %d1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %d1, align 4
  %2 = ptrtoint ptr %d2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %d2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %entry.if.end63_crit_edge

entry.if.end63_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

if.then:                                          ; preds = %entry
  %4 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values)
  switch i32 %1, label %if.then.if.end63_crit_edge [
    i32 0, label %if.then.land.lhs.true_crit_edge
    i32 8, label %if.then.land.lhs.true_crit_edge91
    i32 1, label %if.then.land.lhs.true38_crit_edge
    i32 2, label %if.then.land.lhs.true45_crit_edge
    i32 257, label %land.lhs.true52
    i32 6, label %if.then.land.lhs.true59_crit_edge
  ]

if.then.land.lhs.true59_crit_edge:                ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true59

if.then.land.lhs.true45_crit_edge:                ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true45

if.then.land.lhs.true38_crit_edge:                ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true38

if.then.land.lhs.true_crit_edge91:                ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

if.then.land.lhs.true_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

if.then.if.end63_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

land.lhs.true:                                    ; preds = %if.then.land.lhs.true_crit_edge, %if.then.land.lhs.true_crit_edge91
  %5 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d1, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %5, align 4
  %8 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d2, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %8, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %7, i16 %10)
  %cmp8 = icmp eq i16 %7, %10
  br i1 %cmp8, label %land.lhs.true10, label %land.lhs.true.lor.lhs.false34_crit_edge

land.lhs.true.lor.lhs.false34_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false34

land.lhs.true10:                                  ; preds = %land.lhs.true
  %flags = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d1, i32 0, i32 1, i32 0, i32 3
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %flags, align 4
  %flags12 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d2, i32 0, i32 1, i32 0, i32 3
  %13 = ptrtoint ptr %flags12 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %flags12, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %12, i8 %14)
  %cmp14 = icmp eq i8 %12, %14
  br i1 %cmp14, label %land.lhs.true16, label %land.lhs.true10.lor.lhs.false34_crit_edge

land.lhs.true10.lor.lhs.false34_crit_edge:        ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false34

land.lhs.true16:                                  ; preds = %land.lhs.true10
  %15 = and i8 %12, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not = icmp eq i8 %15, 0
  br i1 %tobool.not, label %land.lhs.true16.land.lhs.true24_crit_edge, label %cond.true

land.lhs.true16.land.lhs.true24_crit_edge:        ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true24

cond.true:                                        ; preds = %land.lhs.true16
  %vhca_id = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d1, i32 0, i32 1, i32 0, i32 1
  %16 = ptrtoint ptr %vhca_id to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vhca_id, align 2
  %vhca_id20 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d2, i32 0, i32 1, i32 0, i32 1
  %18 = ptrtoint ptr %vhca_id20 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vhca_id20, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %17, i16 %19)
  %cmp22 = icmp eq i16 %17, %19
  br i1 %cmp22, label %cond.true.land.lhs.true24_crit_edge, label %cond.true.lor.lhs.false34_crit_edge

cond.true.lor.lhs.false34_crit_edge:              ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false34

cond.true.land.lhs.true24_crit_edge:              ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true24

land.lhs.true24:                                  ; preds = %cond.true.land.lhs.true24_crit_edge, %land.lhs.true16.land.lhs.true24_crit_edge
  %20 = and i8 %12, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool28.not = icmp eq i8 %20, 0
  br i1 %tobool28.not, label %land.lhs.true24.return_crit_edge, label %cond.true29

land.lhs.true24.return_crit_edge:                 ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

cond.true29:                                      ; preds = %land.lhs.true24
  %pkt_reformat = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d1, i32 0, i32 1, i32 0, i32 2
  %21 = ptrtoint ptr %pkt_reformat to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pkt_reformat, align 4
  %23 = getelementptr inbounds %struct.mlx5_pkt_reformat, ptr %22, i32 0, i32 2
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %pkt_reformat30 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d2, i32 0, i32 1, i32 0, i32 2
  %26 = ptrtoint ptr %pkt_reformat30 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pkt_reformat30, align 4
  %28 = getelementptr inbounds %struct.mlx5_pkt_reformat, ptr %27, i32 0, i32 2
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %25, i32 %30)
  %cmp31 = icmp eq i32 %25, %30
  br i1 %cmp31, label %cond.true29.return_crit_edge, label %cond.true29.lor.lhs.false34_crit_edge

cond.true29.lor.lhs.false34_crit_edge:            ; preds = %cond.true29
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false34

cond.true29.return_crit_edge:                     ; preds = %cond.true29
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

lor.lhs.false34:                                  ; preds = %cond.true29.lor.lhs.false34_crit_edge, %cond.true.lor.lhs.false34_crit_edge, %land.lhs.true10.lor.lhs.false34_crit_edge, %land.lhs.true.lor.lhs.false34_crit_edge
  %31 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.131)
  switch i32 %1, label %lor.lhs.false34.if.end63_crit_edge [
    i32 1, label %lor.lhs.false34.land.lhs.true38_crit_edge
    i32 2, label %lor.lhs.false34.land.lhs.true45_crit_edge
    i32 6, label %lor.lhs.false34.land.lhs.true59_crit_edge
  ]

lor.lhs.false34.land.lhs.true59_crit_edge:        ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true59

lor.lhs.false34.land.lhs.true45_crit_edge:        ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true45

lor.lhs.false34.land.lhs.true38_crit_edge:        ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true38

lor.lhs.false34.if.end63_crit_edge:               ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

land.lhs.true38:                                  ; preds = %lor.lhs.false34.land.lhs.true38_crit_edge, %if.then.land.lhs.true38_crit_edge
  %32 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d1, i32 0, i32 1
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 4
  %35 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d2, i32 0, i32 1
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %cmp39 = icmp eq ptr %34, %37
  br i1 %cmp39, label %land.lhs.true38.return_crit_edge, label %land.lhs.true38.if.end63_crit_edge

land.lhs.true38.if.end63_crit_edge:               ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

land.lhs.true38.return_crit_edge:                 ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

land.lhs.true45:                                  ; preds = %lor.lhs.false34.land.lhs.true45_crit_edge, %if.then.land.lhs.true45_crit_edge
  %38 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d1, i32 0, i32 1
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 4
  %41 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d2, i32 0, i32 1
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %41, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %43)
  %cmp46 = icmp eq i32 %40, %43
  br i1 %cmp46, label %land.lhs.true45.return_crit_edge, label %land.lhs.true45.if.end63_crit_edge

land.lhs.true45.if.end63_crit_edge:               ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

land.lhs.true45.return_crit_edge:                 ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

land.lhs.true52:                                  ; preds = %if.then
  %44 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d1, i32 0, i32 1
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %47 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d2, i32 0, i32 1
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %47, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %46, i32 %49)
  %cmp53 = icmp eq i32 %46, %49
  br i1 %cmp53, label %land.lhs.true52.return_crit_edge, label %land.lhs.true52.if.end63_crit_edge

land.lhs.true52.if.end63_crit_edge:               ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

land.lhs.true52.return_crit_edge:                 ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

land.lhs.true59:                                  ; preds = %lor.lhs.false34.land.lhs.true59_crit_edge, %if.then.land.lhs.true59_crit_edge
  %50 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d1, i32 0, i32 1
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %50, align 4
  %53 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %d2, i32 0, i32 1
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %53, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %55)
  %cmp60 = icmp eq i32 %52, %55
  br i1 %cmp60, label %land.lhs.true59.return_crit_edge, label %land.lhs.true59.if.end63_crit_edge

land.lhs.true59.if.end63_crit_edge:               ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

land.lhs.true59.return_crit_edge:                 ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end63:                                         ; preds = %land.lhs.true59.if.end63_crit_edge, %land.lhs.true52.if.end63_crit_edge, %land.lhs.true45.if.end63_crit_edge, %land.lhs.true38.if.end63_crit_edge, %lor.lhs.false34.if.end63_crit_edge, %if.then.if.end63_crit_edge, %entry.if.end63_crit_edge
  br label %return

return:                                           ; preds = %if.end63, %land.lhs.true59.return_crit_edge, %land.lhs.true52.return_crit_edge, %land.lhs.true45.return_crit_edge, %land.lhs.true38.return_crit_edge, %cond.true29.return_crit_edge, %land.lhs.true24.return_crit_edge
  %retval.0 = phi i1 [ false, %if.end63 ], [ true, %land.lhs.true24.return_crit_edge ], [ true, %land.lhs.true59.return_crit_edge ], [ true, %land.lhs.true52.return_crit_edge ], [ true, %land.lhs.true45.return_crit_edge ], [ true, %land.lhs.true38.return_crit_edge ], [ true, %cond.true29.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_create_flow_table(ptr noundef %ns, ptr nocapture noundef %ft_attr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__mlx5_create_flow_table(ptr noundef %ns, ptr noundef %ft_attr, i32 noundef 0, i16 noundef zeroext 0)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__mlx5_create_flow_table(ptr noundef %ns, ptr nocapture noundef %ft_attr, i32 noundef %op_mod, i16 noundef zeroext %vport) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i = getelementptr inbounds %struct.fs_node, ptr %ns, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i, label %find_root.exit, label %find_root.exit.thread, !prof !259

find_root.exit.thread:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %do.end

find_root.exit:                                   ; preds = %entry
  %flags = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %and = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %find_root.exit.do.end_crit_edge, label %if.end

find_root.exit.do.end_crit_edge:                  ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %find_root.exit.do.end_crit_edge, %find_root.exit.thread
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.25) #17
  br label %cleanup

if.end:                                           ; preds = %find_root.exit
  %chain_lock = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %chain_lock, i32 noundef 0) #14
  %6 = ptrtoint ptr %ft_attr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ft_attr, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %ns, i32 0, i32 1
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end
  %iter_prio.0.in.i = phi ptr [ %children.i, %if.end ], [ %iter_prio.0.i, %for.body.i.for.cond.i_crit_edge ]
  %8 = ptrtoint ptr %iter_prio.0.in.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %iter_prio.0.i = load ptr, ptr %iter_prio.0.in.i, align 4
  %cmp.not.i110 = icmp eq ptr %iter_prio.0.i, %children.i
  br i1 %cmp.not.i110, label %for.cond.i.unlock_root_crit_edge, label %for.body.i

for.cond.i.unlock_root_crit_edge:                 ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock_root

for.body.i:                                       ; preds = %for.cond.i
  %prio4.i = getelementptr inbounds %struct.fs_prio, ptr %iter_prio.0.i, i32 0, i32 3
  %9 = ptrtoint ptr %prio4.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %prio4.i, align 4
  %cmp5.i = icmp eq i32 %10, %7
  br i1 %cmp5.i, label %find_prio.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i

find_prio.exit:                                   ; preds = %for.body.i
  %tobool5.not = icmp eq ptr %iter_prio.0.i, null
  br i1 %tobool5.not, label %find_prio.exit.unlock_root_crit_edge, label %if.end7

find_prio.exit.unlock_root_crit_edge:             ; preds = %find_prio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock_root

if.end7:                                          ; preds = %find_prio.exit
  br i1 %tobool.not, label %if.then9, label %if.end7.if.end13_crit_edge

if.end7.if.end13_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.then9:                                         ; preds = %if.end7
  %level = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 2
  %11 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %level, align 4
  %num_levels = getelementptr inbounds %struct.fs_prio, ptr %iter_prio.0.i, i32 0, i32 1
  %13 = ptrtoint ptr %num_levels to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_levels, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %14)
  %cmp.not = icmp ult i32 %12, %14
  br i1 %cmp.not, label %if.end11, label %if.then9.unlock_root_crit_edge

if.then9.unlock_root_crit_edge:                   ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock_root

if.end11:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  %start_level = getelementptr inbounds %struct.fs_prio, ptr %iter_prio.0.i, i32 0, i32 2
  %15 = ptrtoint ptr %start_level to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %start_level, align 4
  %add = add i32 %16, %12
  %17 = ptrtoint ptr %level to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %add, ptr %level, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.end11, %if.end7.if.end13_crit_edge
  %level14 = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 2
  %18 = ptrtoint ptr %level14 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %level14, align 4
  %table_type = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 3
  %20 = ptrtoint ptr %table_type to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %table_type, align 4
  %22 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %24 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %24, i32 noundef 3520, i32 noundef 536) #18
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end13.if.then18_crit_edge, label %if.end.i

if.end13.if.then18_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18

if.end.i:                                         ; preds = %if.end13
  %fgs_hash.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 12
  %call2.i = tail call i32 @rhltable_init(ptr noundef %fgs_hash.i, ptr noundef nonnull @rhash_fg) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %if.end6.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #14
  %25 = inttoptr i32 %call2.i to ptr
  br label %alloc_flow_table.exit

if.end6.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %level7.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 5
  %26 = ptrtoint ptr %level7.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %19, ptr %level7.i, align 4
  %type.i112 = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i, i32 0, i32 2
  %27 = ptrtoint ptr %type.i112 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 3, ptr %type.i112, align 8
  %op_mod8.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 7
  %28 = ptrtoint ptr %op_mod8.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %op_mod, ptr %op_mod8.i, align 4
  %type9.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 6
  %29 = ptrtoint ptr %type9.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %21, ptr %type9.i, align 8
  %vport10.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 3
  %30 = ptrtoint ptr %vport10.i to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %vport, ptr %vport10.i, align 4
  %flags11.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 11
  %31 = ptrtoint ptr %flags11.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %23, ptr %flags11.i, align 8
  %fwd_rules.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 10
  %32 = ptrtoint ptr %fwd_rules.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %fwd_rules.i, ptr %fwd_rules.i, align 8
  %prev.i.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 10, i32 1
  %33 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %fwd_rules.i, ptr %prev.i.i, align 4
  %lock.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %call7.i.i.i, i32 0, i32 9
  tail call void @__mutex_init(ptr noundef %lock.i, ptr noundef nonnull @.str.27, ptr noundef nonnull @alloc_flow_table.__key) #14
  br label %alloc_flow_table.exit

alloc_flow_table.exit:                            ; preds = %if.end6.i, %if.then4.i
  %retval.0.i113 = phi ptr [ %25, %if.then4.i ], [ %call7.i.i.i, %if.end6.i ]
  %cmp.i = icmp ugt ptr %retval.0.i113, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %alloc_flow_table.exit.if.then18_crit_edge, label %if.end20

alloc_flow_table.exit.if.then18_crit_edge:        ; preds = %alloc_flow_table.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18

if.then18:                                        ; preds = %alloc_flow_table.exit.if.then18_crit_edge, %if.end13.if.then18_crit_edge
  %retval.0.i113145 = phi ptr [ %retval.0.i113, %alloc_flow_table.exit.if.then18_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end13.if.then18_crit_edge ]
  %34 = ptrtoint ptr %retval.0.i113145 to i32
  br label %unlock_root

if.end20:                                         ; preds = %alloc_flow_table.exit
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i113, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  %35 = ptrtoint ptr %refcount.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 1, ptr %refcount.i, align 4
  %36 = ptrtoint ptr %retval.0.i113 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %retval.0.i113, ptr %retval.0.i113, align 4
  %prev.i.i114 = getelementptr inbounds %struct.list_head, ptr %retval.0.i113, i32 0, i32 1
  %37 = ptrtoint ptr %prev.i.i114 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %retval.0.i113, ptr %prev.i.i114, align 4
  %children.i115 = getelementptr inbounds %struct.fs_node, ptr %retval.0.i113, i32 0, i32 1
  %38 = ptrtoint ptr %children.i115 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %children.i115, ptr %children.i115, align 4
  %prev.i9.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i113, i32 0, i32 1, i32 1
  %39 = ptrtoint ptr %prev.i9.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %children.i115, ptr %prev.i9.i, align 4
  %lock.i116 = getelementptr inbounds %struct.fs_node, ptr %retval.0.i113, i32 0, i32 5
  tail call void @__init_rwsem(ptr noundef %lock.i116, ptr noundef nonnull @.str.28, ptr noundef nonnull @tree_init_node.__key) #14
  %del_hw_func1.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i113, i32 0, i32 8
  %40 = ptrtoint ptr %del_hw_func1.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @del_hw_flow_table, ptr %del_hw_func1.i, align 4
  %del_sw_func2.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i113, i32 0, i32 9
  %41 = ptrtoint ptr %del_sw_func2.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @del_sw_flow_table, ptr %del_sw_func2.i, align 4
  %active.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i113, i32 0, i32 7
  %42 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 0, ptr %active.i, align 4
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  %next_ft23 = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 4
  %43 = ptrtoint ptr %next_ft23 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %next_ft23, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end20
  %parent.0.in11.i.i = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 3
  %45 = ptrtoint ptr %parent.0.in11.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %parent.012.i.i = load ptr, ptr %parent.0.in11.i.i, align 4
  %tobool3.not13.i.i = icmp eq ptr %parent.012.i.i, null
  br i1 %tobool3.not13.i.i, label %cond.false.cond.end_crit_edge, label %cond.false.while.body.i.i_crit_edge

cond.false.while.body.i.i_crit_edge:              ; preds = %cond.false
  br label %while.body.i.i

cond.false.cond.end_crit_edge:                    ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %cond.false.while.body.i.i_crit_edge
  %parent.015.i.i = phi ptr [ %parent.0.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ %parent.012.i.i, %cond.false.while.body.i.i_crit_edge ]
  %curr_node.014.i.i = phi ptr [ %parent.015.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ %iter_prio.0.i, %cond.false.while.body.i.i_crit_edge ]
  %call.i.i = tail call fastcc ptr @find_closest_ft_recursive(ptr noundef nonnull %parent.015.i.i, ptr noundef nonnull %curr_node.014.i.i, i1 noundef zeroext false) #14
  %parent.0.in.i.i = getelementptr inbounds %struct.fs_node, ptr %parent.015.i.i, i32 0, i32 3
  %46 = ptrtoint ptr %parent.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %parent.0.i.i = load ptr, ptr %parent.0.in.i.i, align 4
  %tobool.not.i.i = icmp ne ptr %call.i.i, null
  %tobool3.not.i.i = icmp eq ptr %parent.0.i.i, null
  %or.cond.i.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool3.not.i.i
  br i1 %or.cond.i.i, label %while.body.i.i.cond.end_crit_edge, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

while.body.i.i.cond.end_crit_edge:                ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.end:                                         ; preds = %while.body.i.i.cond.end_crit_edge, %cond.false.cond.end_crit_edge, %cond.true
  %cond = phi ptr [ %44, %cond.true ], [ null, %cond.false.cond.end_crit_edge ], [ %call.i.i, %while.body.i.i.cond.end_crit_edge ]
  %def_miss_action = getelementptr inbounds %struct.mlx5_flow_namespace, ptr %ns, i32 0, i32 1
  %47 = ptrtoint ptr %def_miss_action to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %def_miss_action, align 4
  %def_miss_action25 = getelementptr inbounds %struct.mlx5_flow_table, ptr %retval.0.i113, i32 0, i32 13
  %49 = ptrtoint ptr %def_miss_action25 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %def_miss_action25, align 4
  %ns26 = getelementptr inbounds %struct.mlx5_flow_table, ptr %retval.0.i113, i32 0, i32 14
  %50 = ptrtoint ptr %ns26 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %ns, ptr %ns26, align 4
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 8
  %51 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %cmds, align 4
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %52, align 4
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 1
  %55 = ptrtoint ptr %max_fte to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %max_fte, align 4
  %call27 = tail call i32 %54(ptr noundef nonnull %1, ptr noundef %retval.0.i113, i32 noundef %56, ptr noundef %cond) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end30, label %cond.end.free_ft_crit_edge

cond.end.free_ft_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %free_ft

if.end30:                                         ; preds = %cond.end
  br i1 %tobool.not, label %if.then32, label %if.then.i124

if.then32:                                        ; preds = %if.end30
  %dev = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 4
  %57 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %dev, align 4
  %children.i117 = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 1
  %59 = ptrtoint ptr %children.i117 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile ptr, ptr %children.i117, align 4
  %cmp.not.i118 = icmp eq ptr %60, %children.i117
  %tobool.not45.i = icmp eq ptr %60, null
  %tobool.not.i119 = or i1 %cmp.not.i118, %tobool.not45.i
  br i1 %tobool.not.i119, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then32
  %level.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %60, i32 0, i32 5
  %61 = ptrtoint ptr %level.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %level.i, align 4
  %level3.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %retval.0.i113, i32 0, i32 5
  %63 = ptrtoint ptr %level3.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %level3.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %62, i32 %64)
  %cmp4.i = icmp ugt i32 %62, %64
  br i1 %cmp4.i, label %if.then.thread.i, label %lor.lhs.false.i.if.end17.i_crit_edge

lor.lhs.false.i.if.end17.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

if.then.i:                                        ; preds = %if.then32
  %call.i120 = tail call fastcc i32 @connect_prev_fts(ptr noundef %58, ptr noundef %retval.0.i113, ptr noundef nonnull %iter_prio.0.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i120)
  %tobool5.not.i = icmp eq i32 %call.i120, 0
  br i1 %tobool5.not.i, label %cond.false9.i, label %if.then.i.destroy_ft_crit_edge

if.then.i.destroy_ft_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %destroy_ft

if.then.thread.i:                                 ; preds = %lor.lhs.false.i
  %call43.i = tail call fastcc i32 @connect_prev_fts(ptr noundef %58, ptr noundef %retval.0.i113, ptr noundef nonnull %iter_prio.0.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43.i)
  %tobool5.not44.i = icmp eq i32 %call43.i, 0
  br i1 %tobool5.not44.i, label %if.then.thread.i.cond.end11.i_crit_edge, label %if.then.thread.i.destroy_ft_crit_edge

if.then.thread.i.destroy_ft_crit_edge:            ; preds = %if.then.thread.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %destroy_ft

if.then.thread.i.cond.end11.i_crit_edge:          ; preds = %if.then.thread.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end11.i

cond.false9.i:                                    ; preds = %if.then.i
  %parent.0.in11.i.i.i = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 3
  %65 = ptrtoint ptr %parent.0.in11.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %parent.012.i.i.i = load ptr, ptr %parent.0.in11.i.i.i, align 4
  %tobool3.not13.i.i.i = icmp eq ptr %parent.012.i.i.i, null
  br i1 %tobool3.not13.i.i.i, label %cond.false9.i.cond.end11.i_crit_edge, label %cond.false9.i.while.body.i.i.i_crit_edge

cond.false9.i.while.body.i.i.i_crit_edge:         ; preds = %cond.false9.i
  br label %while.body.i.i.i

cond.false9.i.cond.end11.i_crit_edge:             ; preds = %cond.false9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end11.i

while.body.i.i.i:                                 ; preds = %while.body.i.i.i.while.body.i.i.i_crit_edge, %cond.false9.i.while.body.i.i.i_crit_edge
  %parent.015.i.i.i = phi ptr [ %parent.0.i.i.i, %while.body.i.i.i.while.body.i.i.i_crit_edge ], [ %parent.012.i.i.i, %cond.false9.i.while.body.i.i.i_crit_edge ]
  %curr_node.014.i.i.i = phi ptr [ %parent.015.i.i.i, %while.body.i.i.i.while.body.i.i.i_crit_edge ], [ %iter_prio.0.i, %cond.false9.i.while.body.i.i.i_crit_edge ]
  %call.i.i.i = tail call fastcc ptr @find_closest_ft_recursive(ptr noundef nonnull %parent.015.i.i.i, ptr noundef %curr_node.014.i.i.i, i1 noundef zeroext false) #14
  %parent.0.in.i.i.i = getelementptr inbounds %struct.fs_node, ptr %parent.015.i.i.i, i32 0, i32 3
  %66 = ptrtoint ptr %parent.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %parent.0.i.i.i = load ptr, ptr %parent.0.in.i.i.i, align 4
  %tobool.not.i.i.i = icmp ne ptr %call.i.i.i, null
  %tobool3.not.i.i.i = icmp eq ptr %parent.0.i.i.i, null
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool3.not.i.i.i
  br i1 %or.cond.i.i.i, label %while.body.i.i.i.cond.end11.i_crit_edge, label %while.body.i.i.i.while.body.i.i.i_crit_edge

while.body.i.i.i.while.body.i.i.i_crit_edge:      ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

while.body.i.i.i.cond.end11.i_crit_edge:          ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end11.i

cond.end11.i:                                     ; preds = %while.body.i.i.i.cond.end11.i_crit_edge, %cond.false9.i.cond.end11.i_crit_edge, %if.then.thread.i.cond.end11.i_crit_edge
  %cond12.i = phi ptr [ null, %cond.false9.i.cond.end11.i_crit_edge ], [ %60, %if.then.thread.i.cond.end11.i_crit_edge ], [ %call.i.i.i, %while.body.i.i.i.cond.end11.i_crit_edge ]
  tail call fastcc void @connect_fwd_rules(ptr noundef %retval.0.i113, ptr noundef %cond12.i) #14
  br label %if.end17.i

if.end17.i:                                       ; preds = %cond.end11.i, %lor.lhs.false.i.if.end17.i_crit_edge
  %arrayidx.i = getelementptr %struct.mlx5_core_dev, ptr %58, i32 0, i32 8, i32 0, i32 7
  %67 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %arrayidx.i, align 4
  %add.ptr18.i = getelementptr i32, ptr %68, i32 16
  %69 = ptrtoint ptr %add.ptr18.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %add.ptr18.i, align 4
  %71 = and i32 %70, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool19.not.i = icmp eq i32 %71, 0
  br i1 %tobool19.not.i, label %if.end17.i.if.then41.critedge_crit_edge, label %if.then20.i

if.end17.i.if.then41.critedge_crit_edge:          ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then41.critedge

if.then20.i:                                      ; preds = %if.end17.i
  %root1.i.i.i = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 4
  %72 = ptrtoint ptr %root1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %root1.i.i.i, align 4
  %type.i.i.i = getelementptr inbounds %struct.fs_node, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %cmp.not.i.i.i = icmp eq i32 %75, 0
  br i1 %cmp.not.i.i.i, label %if.then20.i.find_root.exit.i.i_crit_edge, label %do.end.i.i.i, !prof !259

if.then20.i.find_root.exit.i.i_crit_edge:         ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit.i.i

do.end.i.i.i:                                     ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i42.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit.i.i

find_root.exit.i.i:                               ; preds = %do.end.i.i.i, %if.then20.i.find_root.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ null, %do.end.i.i.i ], [ %73, %if.then20.i.find_root.exit.i.i_crit_edge ]
  %root_ft.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i.i, i32 0, i32 5
  %76 = ptrtoint ptr %root_ft.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %root_ft.i.i, align 4
  %tobool.not.i.i121 = icmp eq ptr %77, null
  br i1 %tobool.not.i.i121, label %find_root.exit.i.i.if.end.i.i_crit_edge, label %if.then.i.i

find_root.exit.i.i.if.end.i.i_crit_edge:          ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %level.i.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %77, i32 0, i32 5
  %78 = ptrtoint ptr %level.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %level.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %find_root.exit.i.i.if.end.i.i_crit_edge
  %min_level.0.i.i = phi i32 [ %79, %if.then.i.i ], [ 2147483647, %find_root.exit.i.i.if.end.i.i_crit_edge ]
  %level2.i.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %retval.0.i113, i32 0, i32 5
  %80 = ptrtoint ptr %level2.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %level2.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %81, i32 %min_level.0.i.i)
  %cmp.not.i.i = icmp ult i32 %81, %min_level.0.i.i
  br i1 %cmp.not.i.i, label %if.end4.i.i, label %if.end.i.i.if.then41.critedge_crit_edge

if.end.i.i.if.then41.critedge_crit_edge:          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then41.critedge

if.end4.i.i:                                      ; preds = %if.end.i.i
  %underlay_qpns.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i.i, i32 0, i32 7
  %82 = ptrtoint ptr %underlay_qpns.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile ptr, ptr %underlay_qpns.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %83, %underlay_qpns.i.i
  %cmds.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i.i, i32 0, i32 8
  br i1 %cmp.i.not.i.i, label %if.end24.i.i, label %if.end4.i.i.for.cond.i.i_crit_edge

if.end4.i.i.for.cond.i.i_crit_edge:               ; preds = %if.end4.i.i
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %if.end4.i.i.for.cond.i.i_crit_edge
  %uqp.0.in.i.i = phi ptr [ %uqp.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ %underlay_qpns.i.i, %if.end4.i.i.for.cond.i.i_crit_edge ]
  %84 = ptrtoint ptr %uqp.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %uqp.0.i.i = load ptr, ptr %uqp.0.in.i.i, align 4
  %cmp11.not.i.i = icmp eq ptr %uqp.0.i.i, %underlay_qpns.i.i
  br i1 %cmp11.not.i.i, label %for.cond.i.i.if.else28.i.i_crit_edge, label %for.body.i.i

for.cond.i.i.if.else28.i.i_crit_edge:             ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else28.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %qpn12.i.i = getelementptr inbounds %struct.mlx5_ft_underlay_qp, ptr %uqp.0.i.i, i32 0, i32 1
  %85 = ptrtoint ptr %qpn12.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %qpn12.i.i, align 4
  %87 = ptrtoint ptr %cmds.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %cmds.i.i, align 4
  %update_root_ft14.i.i = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %88, i32 0, i32 8
  %89 = ptrtoint ptr %update_root_ft14.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %update_root_ft14.i.i, align 4
  %call15.i.i = tail call i32 %90(ptr noundef %retval.0.i.i.i, ptr noundef %retval.0.i113, i32 noundef %86, i1 noundef zeroext false) #14
  %tobool16.not.i.i = icmp eq i32 %call15.i.i, 0
  br i1 %tobool16.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %for.body.i.i.do.end.i.i_crit_edge

for.body.i.i.do.end.i.i_crit_edge:                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i.i

if.end24.i.i:                                     ; preds = %if.end4.i.i
  %91 = ptrtoint ptr %cmds.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %cmds.i.i, align 4
  %update_root_ft.i.i = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %92, i32 0, i32 8
  %93 = ptrtoint ptr %update_root_ft.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %update_root_ft.i.i, align 4
  %call8.i.i = tail call i32 %94(ptr noundef %retval.0.i.i.i, ptr noundef %retval.0.i113, i32 noundef 0, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %tobool25.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool25.not.i.i, label %if.end24.i.i.if.else28.i.i_crit_edge, label %if.end24.i.i.do.end.i.i_crit_edge

if.end24.i.i.do.end.i.i_crit_edge:                ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i.i

if.end24.i.i.if.else28.i.i_crit_edge:             ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else28.i.i

do.end.i.i:                                       ; preds = %if.end24.i.i.do.end.i.i_crit_edge, %for.body.i.i.do.end.i.i_crit_edge
  %qpn.164.i.i = phi i32 [ 0, %if.end24.i.i.do.end.i.i_crit_edge ], [ %86, %for.body.i.i.do.end.i.i_crit_edge ]
  %err.163.i.i = phi i32 [ %call8.i.i, %if.end24.i.i.do.end.i.i_crit_edge ], [ %call15.i.i, %for.body.i.i.do.end.i.i_crit_edge ]
  %dev.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i.i, i32 0, i32 4
  %95 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %dev.i.i, align 4
  %97 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %96, align 8
  %99 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %99, -16384
  %100 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %100, i32 0, i32 2
  %101 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %task.i.i, align 8
  %pid.i.i = getelementptr inbounds %struct.task_struct, ptr %102, i32 0, i32 68
  %103 = ptrtoint ptr %pid.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %pid.i.i, align 8
  %id.i.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %retval.0.i113, i32 0, i32 2
  %105 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %id.i.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %98, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.39, i32 noundef 967, i32 noundef %104, i32 noundef %106, i32 noundef %qpn.164.i.i) #17
  br label %destroy_ft

if.else28.i.i:                                    ; preds = %if.end24.i.i.if.else28.i.i_crit_edge, %for.cond.i.i.if.else28.i.i_crit_edge
  %107 = ptrtoint ptr %root_ft.i.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %retval.0.i113, ptr %root_ft.i.i, align 4
  br label %if.then41.critedge

if.then41.critedge:                               ; preds = %if.else28.i.i, %if.end.i.i.if.then41.critedge_crit_edge, %if.end17.i.if.then41.critedge_crit_edge
  %108 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %108)
  store i8 1, ptr %active.i, align 4
  tail call fastcc void @down_write_ref_node(ptr noundef nonnull %iter_prio.0.i, i1 noundef zeroext false)
  tail call fastcc void @tree_add_node(ptr noundef %retval.0.i113, ptr noundef nonnull %iter_prio.0.i)
  tail call fastcc void @list_add_flow_table(ptr noundef %retval.0.i113, ptr noundef nonnull %iter_prio.0.i)
  br label %if.end48

if.then.i124:                                     ; preds = %if.end30
  %109 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 1, ptr %active.i, align 4
  %lock.i125 = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 5
  tail call void @down_write(ptr noundef %lock.i125) #14
  %refcount.i126 = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i126, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i126, i32 1, i32 3, i32 1) #14
  %110 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i126, ptr %refcount.i126, i32 1, ptr elementtype(i32) %refcount.i126) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %110, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i124.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i124.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.then.i124
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i124
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %111 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %111)
  %.not.i.i.i.i = icmp sgt i32 %111, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.down_write_ref_node.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %down_write_ref_node.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i124.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i124.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i126, i32 noundef %.sink.i.i.i.i) #14
  br label %down_write_ref_node.exit

down_write_ref_node.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge
  %root45 = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 4
  %112 = ptrtoint ptr %root45 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %root45, align 4
  %root47 = getelementptr inbounds %struct.fs_node, ptr %retval.0.i113, i32 0, i32 4
  %114 = ptrtoint ptr %root47 to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %113, ptr %root47, align 4
  br label %if.end48

if.end48:                                         ; preds = %down_write_ref_node.exit, %if.then41.critedge
  %num_ft = getelementptr inbounds %struct.fs_prio, ptr %iter_prio.0.i, i32 0, i32 4
  %115 = ptrtoint ptr %num_ft to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %num_ft, align 4
  %inc = add i32 %116, 1
  store i32 %inc, ptr %num_ft, align 4
  %refcount.i128 = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i128, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i128, i32 1, i32 3, i32 1) #14
  %117 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i128, ptr %refcount.i128, i32 1, ptr elementtype(i32) %refcount.i128) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i129 = extractvalue { i32, i32, i32 } %117, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i129)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i129, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.end48.up_write_ref_node.exit_crit_edge, !prof !261

if.end48.up_write_ref_node.exit_crit_edge:        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit

if.then3.i.i.i:                                   ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i128, i32 noundef 4) #14
  br label %up_write_ref_node.exit

up_write_ref_node.exit:                           ; preds = %if.then3.i.i.i, %if.end48.up_write_ref_node.exit_crit_edge
  %lock.i130 = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 5
  tail call void @up_write(ptr noundef %lock.i130) #14
  tail call void @mutex_unlock(ptr noundef %chain_lock) #14
  tail call fastcc void @trace_mlx5_fs_add_ft(ptr noundef %retval.0.i113)
  br label %cleanup

destroy_ft:                                       ; preds = %do.end.i.i, %if.then.thread.i.destroy_ft_crit_edge, %if.then.i.destroy_ft_crit_edge
  %retval.0.i122 = phi i32 [ %call.i120, %if.then.i.destroy_ft_crit_edge ], [ %call43.i, %if.then.thread.i.destroy_ft_crit_edge ], [ %err.163.i.i, %do.end.i.i ]
  %118 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %cmds, align 4
  %destroy_flow_table = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %119, i32 0, i32 1
  %120 = ptrtoint ptr %destroy_flow_table to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %destroy_flow_table, align 4
  %call52 = tail call i32 %121(ptr noundef nonnull %1, ptr noundef %retval.0.i113) #14
  br label %free_ft

free_ft:                                          ; preds = %destroy_ft, %cond.end.free_ft_crit_edge
  %err.0 = phi i32 [ %call27, %cond.end.free_ft_crit_edge ], [ %retval.0.i122, %destroy_ft ]
  %fgs_hash = getelementptr inbounds %struct.mlx5_flow_table, ptr %retval.0.i113, i32 0, i32 12
  tail call void @rhashtable_free_and_destroy(ptr noundef %fgs_hash, ptr noundef null, ptr noundef null) #14
  tail call void @kfree(ptr noundef %retval.0.i113) #14
  br label %unlock_root

unlock_root:                                      ; preds = %free_ft, %if.then18, %if.then9.unlock_root_crit_edge, %find_prio.exit.unlock_root_crit_edge, %for.cond.i.unlock_root_crit_edge
  %err.1 = phi i32 [ %34, %if.then18 ], [ %err.0, %free_ft ], [ -22, %find_prio.exit.unlock_root_crit_edge ], [ -28, %if.then9.unlock_root_crit_edge ], [ -22, %for.cond.i.unlock_root_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %chain_lock) #14
  %122 = inttoptr i32 %err.1 to ptr
  br label %cleanup

cleanup:                                          ; preds = %unlock_root, %up_write_ref_node.exit, %do.end
  %retval.0 = phi ptr [ %122, %unlock_root ], [ %retval.0.i113, %up_write_ref_node.exit ], [ inttoptr (i32 -19 to ptr), %do.end ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_create_vport_flow_table(ptr noundef %ns, ptr nocapture noundef %ft_attr, i16 noundef zeroext %vport) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__mlx5_create_flow_table(ptr noundef %ns, ptr noundef %ft_attr, i32 noundef 0, i16 noundef zeroext %vport)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_create_lag_demux_flow_table(ptr noundef %ns, i32 noundef %prio, i32 noundef %level) #0 align 64 {
entry:
  %ft_attr = alloca %struct.mlx5_flow_table_attr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %ft_attr) #14
  %0 = getelementptr inbounds i8, ptr %ft_attr, i32 12
  %1 = call ptr @memset(ptr %0, i32 0, i32 16)
  %level1 = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 2
  %2 = ptrtoint ptr %level1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %level, ptr %level1, align 4
  %3 = ptrtoint ptr %ft_attr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %prio, ptr %ft_attr, align 4
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 1
  %4 = ptrtoint ptr %max_fte to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %max_fte, align 4
  %call = call fastcc ptr @__mlx5_create_flow_table(ptr noundef %ns, ptr noundef nonnull %ft_attr, i32 noundef 1, i16 noundef zeroext 0)
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %ft_attr) #14
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_create_auto_grouped_flow_table(ptr noundef %ns, ptr nocapture noundef %ft_attr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %autogroup = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 5
  %num_reserved_entries1 = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr, i32 0, i32 5, i32 1
  %0 = ptrtoint ptr %num_reserved_entries1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_reserved_entries1, align 4
  %2 = ptrtoint ptr %autogroup to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %autogroup, align 4
  %call.i = tail call fastcc ptr @__mlx5_create_flow_table(ptr noundef %ns, ptr noundef %ft_attr, i32 noundef 0, i16 noundef zeroext 0) #14
  %cmp.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table, ptr %call.i, i32 0, i32 4
  %4 = ptrtoint ptr %max_fte to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %max_fte, align 4
  %sub = sub i32 %5, %1
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %sub)
  %cmp = icmp sgt i32 %3, %sub
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %1)
  %cmp8 = icmp ult i32 %5, %1
  %or.cond = or i1 %cmp8, %cmp
  br i1 %or.cond, label %err_validate, label %if.end10

if.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %add = add i32 %3, 1
  %div = sdiv i32 %sub, %add
  call void @__sanitizer_cov_trace_const_cmp4(i32 16777216, i32 %div)
  %cmp11 = icmp ugt i32 %div, 16777216
  %div1347 = lshr i32 %sub, 24
  %sub14 = add nsw i32 %div1347, -1
  %max_num_groups.0 = select i1 %cmp11, i32 %sub14, i32 %3
  %autogroup16 = getelementptr inbounds %struct.mlx5_flow_table, ptr %call.i, i32 0, i32 8
  %6 = ptrtoint ptr %autogroup16 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 1, ptr %autogroup16, align 4
  %required_groups = getelementptr inbounds %struct.mlx5_flow_table, ptr %call.i, i32 0, i32 8, i32 1
  %7 = ptrtoint ptr %required_groups to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %max_num_groups.0, ptr %required_groups, align 4
  %max_fte19 = getelementptr inbounds %struct.mlx5_flow_table, ptr %call.i, i32 0, i32 8, i32 4
  %8 = ptrtoint ptr %max_fte19 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %sub, ptr %max_fte19, align 4
  %add20 = add i32 %max_num_groups.0, 1
  %div21 = sdiv i32 %sub, %add20
  %group_size = getelementptr inbounds %struct.mlx5_flow_table, ptr %call.i, i32 0, i32 8, i32 2
  %9 = ptrtoint ptr %group_size to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %div21, ptr %group_size, align 4
  br label %cleanup

err_validate:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call23 = tail call i32 @mlx5_destroy_flow_table(ptr noundef %call.i)
  br label %cleanup

cleanup:                                          ; preds = %err_validate, %if.end10, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -28 to ptr), %err_validate ], [ %call.i, %if.end10 ], [ %call.i, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_destroy_flow_table(ptr noundef %ft) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i, label %entry.find_root.exit_crit_edge, label %do.end.i, !prof !259

entry.find_root.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %entry.find_root.exit_crit_edge
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %1, %entry.find_root.exit_crit_edge ]
  %chain_lock = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %chain_lock, i32 noundef 0) #14
  %flags = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 11
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %and = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %find_root.exit.if.end5_crit_edge

find_root.exit.if.end5_crit_edge:                 ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.then:                                          ; preds = %find_root.exit
  %6 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %root1.i, align 4
  %type.i.i.i = getelementptr inbounds %struct.fs_node, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp.not.i.i.i = icmp eq i32 %9, 0
  br i1 %cmp.not.i.i.i, label %find_root.exit.i.i, label %find_root.exit.thread.i.i, !prof !259

find_root.exit.thread.i.i:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit.i

find_root.exit.i.i:                               ; preds = %if.then
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %find_root.exit.i.i.get_dev.exit.i_crit_edge, label %if.then.i.i

find_root.exit.i.i.get_dev.exit.i_crit_edge:      ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit.i

if.then.i.i:                                      ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %7, i32 0, i32 4
  %10 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev.i.i, align 4
  br label %get_dev.exit.i

get_dev.exit.i:                                   ; preds = %if.then.i.i, %find_root.exit.i.i.get_dev.exit.i_crit_edge, %find_root.exit.thread.i.i
  %retval.0.i.i = phi ptr [ %11, %if.then.i.i ], [ null, %find_root.exit.i.i.get_dev.exit.i_crit_edge ], [ null, %find_root.exit.thread.i.i ]
  %12 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %root1.i, align 4
  %type.i.i38.i = getelementptr inbounds %struct.fs_node, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %type.i.i38.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %type.i.i38.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp.not.i.i39.i = icmp eq i32 %15, 0
  br i1 %cmp.not.i.i39.i, label %get_dev.exit.i.find_root.exit.i41.i_crit_edge, label %do.end.i.i.i, !prof !259

get_dev.exit.i.find_root.exit.i41.i_crit_edge:    ; preds = %get_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit.i41.i

do.end.i.i.i:                                     ; preds = %get_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i40.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit.i41.i

find_root.exit.i41.i:                             ; preds = %do.end.i.i.i, %get_dev.exit.i.find_root.exit.i41.i_crit_edge
  %retval.0.i.i.i = phi ptr [ null, %do.end.i.i.i ], [ %13, %get_dev.exit.i.find_root.exit.i41.i_crit_edge ]
  %root_ft.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i.i, i32 0, i32 5
  %16 = ptrtoint ptr %root_ft.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %root_ft.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %17, %ft
  br i1 %cmp.not.i.i, label %if.end.i.i, label %find_root.exit.i41.i.update_root_ft_destroy.exit.i_crit_edge

find_root.exit.i41.i.update_root_ft_destroy.exit.i_crit_edge: ; preds = %find_root.exit.i41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %update_root_ft_destroy.exit.i

if.end.i.i:                                       ; preds = %find_root.exit.i41.i
  %parent.i.i.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 3
  %18 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i.i.i, align 4
  %children.i.i.i = getelementptr inbounds %struct.fs_node, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %ft to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ft, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %21, %children.i.i.i
  br i1 %cmp.i.not.i.i.i, label %if.end.i.i.i, label %if.end.i.i.find_next_ft.exit.i.i_crit_edge

if.end.i.i.find_next_ft.exit.i.i_crit_edge:       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_next_ft.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end.i.i
  %parent.0.in11.i.i.i.i.i = getelementptr inbounds %struct.fs_node, ptr %19, i32 0, i32 3
  %22 = ptrtoint ptr %parent.0.in11.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %parent.012.i.i.i.i.i = load ptr, ptr %parent.0.in11.i.i.i.i.i, align 4
  %tobool3.not13.i.i.i.i.i = icmp eq ptr %parent.012.i.i.i.i.i, null
  br i1 %tobool3.not13.i.i.i.i.i, label %if.end.i.i.i.if.then2.i.i_crit_edge, label %if.end.i.i.i.while.body.i.i.i.i.i_crit_edge

if.end.i.i.i.while.body.i.i.i.i.i_crit_edge:      ; preds = %if.end.i.i.i
  br label %while.body.i.i.i.i.i

if.end.i.i.i.if.then2.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then2.i.i

while.body.i.i.i.i.i:                             ; preds = %while.body.i.i.i.i.i.while.body.i.i.i.i.i_crit_edge, %if.end.i.i.i.while.body.i.i.i.i.i_crit_edge
  %parent.015.i.i.i.i.i = phi ptr [ %parent.0.i.i.i.i.i, %while.body.i.i.i.i.i.while.body.i.i.i.i.i_crit_edge ], [ %parent.012.i.i.i.i.i, %if.end.i.i.i.while.body.i.i.i.i.i_crit_edge ]
  %curr_node.014.i.i.i.i.i = phi ptr [ %parent.015.i.i.i.i.i, %while.body.i.i.i.i.i.while.body.i.i.i.i.i_crit_edge ], [ %19, %if.end.i.i.i.while.body.i.i.i.i.i_crit_edge ]
  %call.i.i.i.i.i = tail call fastcc ptr @find_closest_ft_recursive(ptr noundef nonnull %parent.015.i.i.i.i.i, ptr noundef %curr_node.014.i.i.i.i.i, i1 noundef zeroext false) #14
  %parent.0.in.i.i.i.i.i = getelementptr inbounds %struct.fs_node, ptr %parent.015.i.i.i.i.i, i32 0, i32 3
  %23 = ptrtoint ptr %parent.0.in.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %parent.0.i.i.i.i.i = load ptr, ptr %parent.0.in.i.i.i.i.i, align 4
  %tobool.not.i.i.i.i.i = icmp ne ptr %call.i.i.i.i.i, null
  %tobool3.not.i.i.i.i.i = icmp eq ptr %parent.0.i.i.i.i.i, null
  %or.cond.i.i.i.i.i = select i1 %tobool.not.i.i.i.i.i, i1 true, i1 %tobool3.not.i.i.i.i.i
  br i1 %or.cond.i.i.i.i.i, label %while.body.i.i.i.i.i.find_next_ft.exit.i.i_crit_edge, label %while.body.i.i.i.i.i.while.body.i.i.i.i.i_crit_edge

while.body.i.i.i.i.i.while.body.i.i.i.i.i_crit_edge: ; preds = %while.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i.i

while.body.i.i.i.i.i.find_next_ft.exit.i.i_crit_edge: ; preds = %while.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_next_ft.exit.i.i

find_next_ft.exit.i.i:                            ; preds = %while.body.i.i.i.i.i.find_next_ft.exit.i.i_crit_edge, %if.end.i.i.find_next_ft.exit.i.i_crit_edge
  %retval.0.i1.i.i = phi ptr [ %21, %if.end.i.i.find_next_ft.exit.i.i_crit_edge ], [ %call.i.i.i.i.i, %while.body.i.i.i.i.i.find_next_ft.exit.i.i_crit_edge ]
  %tobool.not.i42.i = icmp eq ptr %retval.0.i1.i.i, null
  br i1 %tobool.not.i42.i, label %find_next_ft.exit.i.i.if.then2.i.i_crit_edge, label %if.end4.i.i

find_next_ft.exit.i.i.if.then2.i.i_crit_edge:     ; preds = %find_next_ft.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then2.i.i

if.then2.i.i:                                     ; preds = %find_next_ft.exit.i.i.if.then2.i.i_crit_edge, %if.end.i.i.i.if.then2.i.i_crit_edge
  %24 = ptrtoint ptr %root_ft.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %root_ft.i.i, align 4
  br label %update_root_ft_destroy.exit.i

if.end4.i.i:                                      ; preds = %find_next_ft.exit.i.i
  %underlay_qpns.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i.i, i32 0, i32 7
  %25 = ptrtoint ptr %underlay_qpns.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %underlay_qpns.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %26, %underlay_qpns.i.i
  %cmds.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i.i, i32 0, i32 8
  br i1 %cmp.i.not.i.i, label %if.end24.i.i, label %if.end4.i.i.for.cond.i.i_crit_edge

if.end4.i.i.for.cond.i.i_crit_edge:               ; preds = %if.end4.i.i
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %if.end4.i.i.for.cond.i.i_crit_edge
  %uqp.0.in.i.i = phi ptr [ %uqp.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ %underlay_qpns.i.i, %if.end4.i.i.for.cond.i.i_crit_edge ]
  %27 = ptrtoint ptr %uqp.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %uqp.0.i.i = load ptr, ptr %uqp.0.in.i.i, align 4
  %cmp11.not.i.i = icmp eq ptr %uqp.0.i.i, %underlay_qpns.i.i
  br i1 %cmp11.not.i.i, label %for.cond.i.i.if.else28.i.i_crit_edge, label %for.body.i.i

for.cond.i.i.if.else28.i.i_crit_edge:             ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else28.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %qpn12.i.i = getelementptr inbounds %struct.mlx5_ft_underlay_qp, ptr %uqp.0.i.i, i32 0, i32 1
  %28 = ptrtoint ptr %qpn12.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %qpn12.i.i, align 4
  %30 = ptrtoint ptr %cmds.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cmds.i.i, align 4
  %update_root_ft14.i.i = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %31, i32 0, i32 8
  %32 = ptrtoint ptr %update_root_ft14.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %update_root_ft14.i.i, align 4
  %call15.i.i = tail call i32 %33(ptr noundef %retval.0.i.i.i, ptr noundef nonnull %retval.0.i1.i.i, i32 noundef %29, i1 noundef zeroext false) #14
  %tobool16.not.i.i = icmp eq i32 %call15.i.i, 0
  br i1 %tobool16.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %for.body.i.i.do.end.i.i_crit_edge

for.body.i.i.do.end.i.i_crit_edge:                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i.i

if.end24.i.i:                                     ; preds = %if.end4.i.i
  %34 = ptrtoint ptr %cmds.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %cmds.i.i, align 4
  %update_root_ft.i.i = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %35, i32 0, i32 8
  %36 = ptrtoint ptr %update_root_ft.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %update_root_ft.i.i, align 4
  %call8.i.i = tail call i32 %37(ptr noundef %retval.0.i.i.i, ptr noundef nonnull %retval.0.i1.i.i, i32 noundef 0, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %tobool25.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool25.not.i.i, label %if.end24.i.i.if.else28.i.i_crit_edge, label %if.end24.i.i.do.end.i.i_crit_edge

if.end24.i.i.do.end.i.i_crit_edge:                ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i.i

if.end24.i.i.if.else28.i.i_crit_edge:             ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else28.i.i

do.end.i.i:                                       ; preds = %if.end24.i.i.do.end.i.i_crit_edge, %for.body.i.i.do.end.i.i_crit_edge
  %qpn.115.i.i = phi i32 [ 0, %if.end24.i.i.do.end.i.i_crit_edge ], [ %29, %for.body.i.i.do.end.i.i_crit_edge ]
  %dev.i43.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i.i, i32 0, i32 4
  %38 = ptrtoint ptr %dev.i43.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %dev.i43.i, align 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 8
  %42 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 2
  %44 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %task.i.i, align 8
  %pid.i.i = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 68
  %46 = ptrtoint ptr %pid.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %pid.i.i, align 8
  %id.i.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 2
  %48 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %id.i.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %41, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.69, i32 noundef 2132, i32 noundef %47, i32 noundef %49, i32 noundef %qpn.115.i.i) #17
  br label %update_root_ft_destroy.exit.i

if.else28.i.i:                                    ; preds = %if.end24.i.i.if.else28.i.i_crit_edge, %for.cond.i.i.if.else28.i.i_crit_edge
  %50 = ptrtoint ptr %root_ft.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %retval.0.i1.i.i, ptr %root_ft.i.i, align 4
  br label %update_root_ft_destroy.exit.i

update_root_ft_destroy.exit.i:                    ; preds = %if.else28.i.i, %do.end.i.i, %if.then2.i.i, %find_root.exit.i41.i.update_root_ft_destroy.exit.i_crit_edge
  %parent.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 3
  %51 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %parent.i, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %children.i, align 4
  %cmp.i = icmp eq ptr %54, %ft
  br i1 %cmp.i, label %if.end8.i, label %update_root_ft_destroy.exit.i.if.end5_crit_edge

update_root_ft_destroy.exit.i.if.end5_crit_edge:  ; preds = %update_root_ft_destroy.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.end8.i:                                        ; preds = %update_root_ft_destroy.exit.i
  %55 = ptrtoint ptr %ft to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %ft, align 4
  %cmp.i.not.i44.i = icmp eq ptr %56, %children.i
  br i1 %cmp.i.not.i44.i, label %if.end.i45.i, label %if.end8.i.find_next_ft.exit.i_crit_edge

if.end8.i.find_next_ft.exit.i_crit_edge:          ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_next_ft.exit.i

if.end.i45.i:                                     ; preds = %if.end8.i
  %parent.0.in11.i.i.i.i = getelementptr inbounds %struct.fs_node, ptr %52, i32 0, i32 3
  %57 = ptrtoint ptr %parent.0.in11.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %parent.012.i.i.i.i = load ptr, ptr %parent.0.in11.i.i.i.i, align 4
  %tobool3.not13.i.i.i.i = icmp eq ptr %parent.012.i.i.i.i, null
  br i1 %tobool3.not13.i.i.i.i, label %if.end.i45.i.find_next_ft.exit.i_crit_edge, label %if.end.i45.i.while.body.i.i.i.i_crit_edge

if.end.i45.i.while.body.i.i.i.i_crit_edge:        ; preds = %if.end.i45.i
  br label %while.body.i.i.i.i

if.end.i45.i.find_next_ft.exit.i_crit_edge:       ; preds = %if.end.i45.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_next_ft.exit.i

while.body.i.i.i.i:                               ; preds = %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge, %if.end.i45.i.while.body.i.i.i.i_crit_edge
  %parent.015.i.i.i.i = phi ptr [ %parent.0.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %parent.012.i.i.i.i, %if.end.i45.i.while.body.i.i.i.i_crit_edge ]
  %curr_node.014.i.i.i.i = phi ptr [ %parent.015.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %52, %if.end.i45.i.while.body.i.i.i.i_crit_edge ]
  %call.i.i.i.i = tail call fastcc ptr @find_closest_ft_recursive(ptr noundef nonnull %parent.015.i.i.i.i, ptr noundef %curr_node.014.i.i.i.i, i1 noundef zeroext false) #14
  %parent.0.in.i.i.i.i = getelementptr inbounds %struct.fs_node, ptr %parent.015.i.i.i.i, i32 0, i32 3
  %58 = ptrtoint ptr %parent.0.in.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %parent.0.i.i.i.i = load ptr, ptr %parent.0.in.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp ne ptr %call.i.i.i.i, null
  %tobool3.not.i.i.i.i = icmp eq ptr %parent.0.i.i.i.i, null
  %or.cond.i.i.i.i = select i1 %tobool.not.i.i.i.i, i1 true, i1 %tobool3.not.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %while.body.i.i.i.i.find_next_ft.exit.i_crit_edge, label %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge

while.body.i.i.i.i.while.body.i.i.i.i_crit_edge:  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i

while.body.i.i.i.i.find_next_ft.exit.i_crit_edge: ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_next_ft.exit.i

find_next_ft.exit.i:                              ; preds = %while.body.i.i.i.i.find_next_ft.exit.i_crit_edge, %if.end.i45.i.find_next_ft.exit.i_crit_edge, %if.end8.i.find_next_ft.exit.i_crit_edge
  %retval.0.i46.i = phi ptr [ %56, %if.end8.i.find_next_ft.exit.i_crit_edge ], [ null, %if.end.i45.i.find_next_ft.exit.i_crit_edge ], [ %call.i.i.i.i, %while.body.i.i.i.i.find_next_ft.exit.i_crit_edge ]
  tail call fastcc void @connect_fwd_rules(ptr noundef %retval.0.i46.i, ptr noundef %ft) #14
  %call14.i = tail call fastcc i32 @connect_prev_fts(ptr noundef %retval.0.i.i, ptr noundef %retval.0.i46.i, ptr noundef %52) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %find_next_ft.exit.i.if.end5_crit_edge, label %if.then3

find_next_ft.exit.i.if.end5_crit_edge:            ; preds = %find_next_ft.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.then3:                                         ; preds = %find_next_ft.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %59 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %retval.0.i.i, align 8
  %61 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 2
  %63 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %64, i32 0, i32 68
  %65 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %pid.i, align 8
  %id.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 2
  %67 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %id.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %60, ptr noundef nonnull @.str.67, ptr noundef nonnull @.str.68, i32 noundef 2167, i32 noundef %66, i32 noundef %68) #17
  br label %cleanup

if.end5:                                          ; preds = %find_next_ft.exit.i.if.end5_crit_edge, %update_root_ft_destroy.exit.i.if.end5_crit_edge, %find_root.exit.if.end5_crit_edge
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 6
  %call.i.i.i.i27 = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcount.i, i32 noundef 4) #14
  %69 = ptrtoint ptr %refcount.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %refcount.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %70)
  %cmp.i28 = icmp ugt i32 %70, 1
  br i1 %cmp.i28, label %if.then.i, label %tree_remove_node.exit

if.then.i:                                        ; preds = %if.end5
  %call.i.i.i.i.i29 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %71 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %71, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.i.do.end_crit_edge, !prof !261

if.then.i.do.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then3.i.i.i:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 4) #14
  br label %do.end

tree_remove_node.exit:                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @tree_put_node(ptr noundef %ft, i1 noundef zeroext false) #14
  br label %cleanup

do.end:                                           ; preds = %if.then3.i.i.i, %if.then.i.do.end_crit_edge
  %72 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %root1.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %cmp.not.i.i31 = icmp eq i32 %75, 0
  br i1 %cmp.not.i.i31, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit

find_root.exit.i:                                 ; preds = %do.end
  %tobool.not.i = icmp eq ptr %73, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_dev.exit_crit_edge, label %if.then.i32

find_root.exit.i.get_dev.exit_crit_edge:          ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit

if.then.i32:                                      ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %73, i32 0, i32 4
  %76 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %dev.i, align 4
  br label %get_dev.exit

get_dev.exit:                                     ; preds = %if.then.i32, %find_root.exit.i.get_dev.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i33 = phi ptr [ %77, %if.then.i32 ], [ null, %find_root.exit.i.get_dev.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  %78 = ptrtoint ptr %retval.0.i33 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %retval.0.i33, align 8
  %80 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %80, -16384
  %81 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 2
  %82 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %83, i32 0, i32 68
  %84 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %pid, align 8
  %id = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 2
  %86 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %id, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %79, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4, i32 noundef 2185, i32 noundef %85, i32 noundef %87) #17
  br label %cleanup

cleanup:                                          ; preds = %get_dev.exit, %tree_remove_node.exit, %if.then3
  %err.036 = phi i32 [ %call14.i, %if.then3 ], [ 0, %tree_remove_node.exit ], [ 0, %get_dev.exit ]
  tail call void @mutex_unlock(ptr noundef %chain_lock) #14
  ret i32 %err.036
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_create_flow_group(ptr noundef %ft, ptr noundef %fg_in) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i, label %entry.find_root.exit_crit_edge, label %do.end.i, !prof !259

entry.find_root.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %entry.find_root.exit_crit_edge
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %1, %entry.find_root.exit_crit_edge ]
  %add.ptr = getelementptr i8, ptr %fg_in, i32 64
  %add.ptr1 = getelementptr i32, ptr %fg_in, i32 15
  %4 = ptrtoint ptr %add.ptr1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr1, align 4
  %conv = trunc i32 %5 to i8
  %add.ptr2 = getelementptr i32, ptr %fg_in, i32 7
  %6 = ptrtoint ptr %add.ptr2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr2, align 4
  %add.ptr5 = getelementptr i32, ptr %fg_in, i32 9
  %8 = ptrtoint ptr %add.ptr5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %add.ptr5, align 4
  %autogroup = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 8
  %10 = ptrtoint ptr %autogroup to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %autogroup, align 4, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  br i1 %tobool.not, label %find_root.exit.if.end_crit_edge, label %land.lhs.true

find_root.exit.if.end_crit_edge:                  ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %find_root.exit
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 8, i32 4
  %12 = ptrtoint ptr %max_fte to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %max_fte, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %13)
  %cmp = icmp ult i32 %7, %13
  br i1 %cmp, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %find_root.exit.if.end_crit_edge
  %tobool.not.i = icmp eq ptr %ft, null
  br i1 %tobool.not.i, label %if.end.down_write_ref_node.exit_crit_edge, label %if.then.i

if.end.down_write_ref_node.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %down_write_ref_node.exit

if.then.i:                                        ; preds = %if.end
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 5
  tail call void @down_write(ptr noundef %lock.i) #14
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %15 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %.not.i.i.i.i = icmp sgt i32 %15, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.down_write_ref_node.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %down_write_ref_node.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #14
  br label %down_write_ref_node.exit

down_write_ref_node.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge, %if.end.down_write_ref_node.exit_crit_edge
  %prev = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev, align 4
  %call14 = tail call fastcc ptr @alloc_insert_flow_group(ptr noundef %ft, i8 noundef zeroext %conv, ptr noundef %add.ptr, i32 noundef %7, i32 noundef %9, ptr noundef %17)
  %refcount.i53 = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i53, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i53, i32 1, i32 3, i32 1) #14
  %18 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i53, ptr %refcount.i53, i32 1, ptr elementtype(i32) %refcount.i53) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i54 = extractvalue { i32, i32, i32 } %18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i54)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i54, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %down_write_ref_node.exit.up_write_ref_node.exit_crit_edge, !prof !261

down_write_ref_node.exit.up_write_ref_node.exit_crit_edge: ; preds = %down_write_ref_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit

if.then3.i.i.i:                                   ; preds = %down_write_ref_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i53, i32 noundef 4) #14
  br label %up_write_ref_node.exit

up_write_ref_node.exit:                           ; preds = %if.then3.i.i.i, %down_write_ref_node.exit.up_write_ref_node.exit_crit_edge
  %lock.i55 = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 5
  tail call void @up_write(ptr noundef %lock.i55) #14
  %cmp.i = icmp ugt ptr %call14, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %up_write_ref_node.exit.cleanup_crit_edge, label %if.end18

up_write_ref_node.exit.cleanup_crit_edge:         ; preds = %up_write_ref_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18:                                         ; preds = %up_write_ref_node.exit
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i, i32 0, i32 8
  %19 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cmds, align 4
  %create_flow_group = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %create_flow_group to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %create_flow_group, align 4
  %call19 = tail call i32 %22(ptr noundef %retval.0.i, ptr noundef %ft, ptr noundef %fg_in, ptr noundef %call14) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end24, label %if.then21

if.then21:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @tree_put_node(ptr noundef %call14, i1 noundef zeroext false)
  %23 = inttoptr i32 %call19 to ptr
  br label %cleanup

if.end24:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @trace_mlx5_fs_add_fg(ptr noundef %call14)
  %active26 = getelementptr inbounds %struct.fs_node, ptr %call14, i32 0, i32 7
  %24 = ptrtoint ptr %active26 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 1, ptr %active26, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.then21, %up_write_ref_node.exit.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi ptr [ %23, %if.then21 ], [ %call14, %if.end24 ], [ %call14, %up_write_ref_node.exit.cleanup_crit_edge ], [ inttoptr (i32 -1 to ptr), %land.lhs.true.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @down_write_ref_node(ptr noundef %node, i1 noundef zeroext %locked) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %node, null
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %if.then

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.then:                                          ; preds = %entry
  br i1 %locked, label %if.then.if.end_crit_edge, label %if.then2

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %lock = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 5
  tail call void @down_write(ptr noundef %lock) #14
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then.if.end_crit_edge
  %refcount = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #14
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #14, !srcloc !260
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.end.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !261

if.end.if.end15.sink.split.i.i.i_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %if.end
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.if.end3_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !259

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.if.end3_crit_edge:                  ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %if.end.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %if.end.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i) #14
  br label %if.end3

if.end3:                                          ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.if.end3_crit_edge, %entry.if.end3_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @alloc_insert_flow_group(ptr noundef %ft, i8 noundef zeroext %match_criteria_enable, ptr nocapture noundef readonly %match_criteria, i32 noundef %start_index, i32 noundef %end_index, ptr noundef %prev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i32 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_steering.exit

find_root.exit.i:                                 ; preds = %entry
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_steering.exit_crit_edge, label %if.then.i

find_root.exit.i.get_steering.exit_crit_edge:     ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_steering.exit

if.then.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev.i, align 4
  %steering.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %5, i32 0, i32 17, i32 26
  %6 = ptrtoint ptr %steering.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %steering.i, align 4
  br label %get_steering.exit

get_steering.exit:                                ; preds = %if.then.i, %find_root.exit.i.get_steering.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i = phi ptr [ %7, %if.then.i ], [ null, %find_root.exit.i.get_steering.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  %fgs_cache.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %retval.0.i, i32 0, i32 2
  %8 = ptrtoint ptr %fgs_cache.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fgs_cache.i, align 4
  %call.i.i33 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %9, i32 noundef 3520) #14
  %tobool.not.i34 = icmp eq ptr %call.i.i33, null
  br i1 %tobool.not.i34, label %get_steering.exit.cleanup_crit_edge, label %if.end.i

get_steering.exit.cleanup_crit_edge:              ; preds = %get_steering.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %get_steering.exit
  %ftes_hash.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %call.i.i33, i32 0, i32 7
  %call2.i = tail call i32 @rhashtable_init(ptr noundef %ftes_hash.i, ptr noundef nonnull @rhash_fte) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %if.end7.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %fgs_cache.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %fgs_cache.i, align 4
  tail call void @kmem_cache_free(ptr noundef %11, ptr noundef nonnull %call.i.i33) #14
  %12 = inttoptr i32 %call2.i to ptr
  br label %alloc_flow_group.exit

if.end7.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %fte_allocator.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %call.i.i33, i32 0, i32 5
  tail call void @__raw_spin_lock_init(ptr noundef %fte_allocator.i, ptr noundef nonnull @.str.40, ptr noundef nonnull @xa_init_flags.__key, i16 noundef signext 3) #14
  %xa_flags.i.i.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %call.i.i33, i32 0, i32 5, i32 0, i32 1
  %13 = ptrtoint ptr %xa_flags.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 67108869, ptr %xa_flags.i.i.i, align 4
  %xa_head.i.i.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %call.i.i33, i32 0, i32 5, i32 0, i32 2
  %14 = ptrtoint ptr %xa_head.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %xa_head.i.i.i, align 8
  %mask.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %call.i.i33, i32 0, i32 2
  %15 = ptrtoint ptr %mask.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %match_criteria_enable, ptr %mask.i, align 4
  %match_criteria10.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %call.i.i33, i32 0, i32 2, i32 1
  %16 = call ptr @memcpy(ptr %match_criteria10.i, ptr %match_criteria, i32 448)
  %type.i = getelementptr inbounds %struct.fs_node, ptr %call.i.i33, i32 0, i32 2
  %17 = ptrtoint ptr %type.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 4, ptr %type.i, align 8
  %start_index11.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %call.i.i33, i32 0, i32 3
  %18 = ptrtoint ptr %start_index11.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %start_index, ptr %start_index11.i, align 8
  %sub.i = sub i32 1, %start_index
  %add.i = add i32 %sub.i, %end_index
  %max_ftes.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %call.i.i33, i32 0, i32 4
  %19 = ptrtoint ptr %max_ftes.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %add.i, ptr %max_ftes.i, align 4
  br label %alloc_flow_group.exit

alloc_flow_group.exit:                            ; preds = %if.end7.i, %if.then4.i
  %retval.0.i35 = phi ptr [ %12, %if.then4.i ], [ %call.i.i33, %if.end7.i ]
  %cmp.i = icmp ugt ptr %retval.0.i35, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %alloc_flow_group.exit.cleanup_crit_edge, label %if.end

alloc_flow_group.exit.cleanup_crit_edge:          ; preds = %alloc_flow_group.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %alloc_flow_group.exit
  %fgs_hash = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 12
  %hash = getelementptr inbounds %struct.mlx5_flow_group, ptr %retval.0.i35, i32 0, i32 8
  %head_offset.i.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 12, i32 0, i32 3, i32 3
  %20 = ptrtoint ptr %head_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %head_offset.i.i, align 2
  %conv.i.i = zext i16 %21 to i32
  %idx.neg.i.i = sub nsw i32 0, %conv.i.i
  %add.ptr.i.i = getelementptr i8, ptr %hash, i32 %idx.neg.i.i
  %add.ptr.i = getelementptr i8, ptr %add.ptr.i.i, i32 148
  %call.i.i36 = tail call fastcc ptr @__rhashtable_insert_fast(ptr noundef %fgs_hash, ptr noundef %add.ptr.i, ptr noundef %hash, [7 x i32] [i32 452, i32 9700220, i32 0, i32 65792, i32 0, i32 0, i32 0], i1 noundef zeroext true) #14
  %tobool.not = icmp eq ptr %call.i.i36, null
  br i1 %tobool.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %ftes_hash.i37 = getelementptr inbounds %struct.mlx5_flow_group, ptr %retval.0.i35, i32 0, i32 7
  tail call void @rhashtable_destroy(ptr noundef %ftes_hash.i37) #14
  %22 = ptrtoint ptr %fgs_cache.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %fgs_cache.i, align 4
  tail call void @kmem_cache_free(ptr noundef %23, ptr noundef %retval.0.i35) #14
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  %24 = ptrtoint ptr %refcount.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 1, ptr %refcount.i, align 4
  %25 = ptrtoint ptr %retval.0.i35 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %retval.0.i35, ptr %retval.0.i35, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %retval.0.i35, i32 0, i32 1
  %26 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %retval.0.i35, ptr %prev.i.i, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 1
  %27 = ptrtoint ptr %children.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %children.i, ptr %children.i, align 4
  %prev.i9.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %prev.i9.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %children.i, ptr %prev.i9.i, align 4
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 5
  tail call void @__init_rwsem(ptr noundef %lock.i, ptr noundef nonnull @.str.28, ptr noundef nonnull @tree_init_node.__key) #14
  %del_hw_func1.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 8
  %29 = ptrtoint ptr %del_hw_func1.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @del_hw_flow_group, ptr %del_hw_func1.i, align 4
  %del_sw_func2.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 9
  %30 = ptrtoint ptr %del_sw_func2.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr @del_sw_flow_group, ptr %del_sw_func2.i, align 4
  %active.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 7
  %31 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 0, ptr %active.i, align 4
  %tobool.not.i39 = icmp eq ptr %ft, null
  br i1 %tobool.not.i39, label %if.then3.critedge.i, label %if.then.i41

if.then.i41:                                      ; preds = %if.end6
  %refcount.i40 = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i40, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i40, i32 1, i32 3, i32 1) #14
  %32 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i40, ptr %refcount.i40, i32 1, ptr elementtype(i32) %refcount.i40) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %32, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i41.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i41.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.then.i41
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i41
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %33 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %33)
  %.not.i.i.i.i = icmp sgt i32 %33, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i41.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i41.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i40, i32 noundef %.sink.i.i.i.i) #14
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %parent1.c.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 3
  %34 = ptrtoint ptr %parent1.c.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %ft, ptr %parent1.c.i, align 4
  %35 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %root1.i.i, align 4
  br label %tree_add_node.exit

if.then3.critedge.i:                              ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  %parent1.c14.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 3
  %37 = ptrtoint ptr %parent1.c14.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %parent1.c14.i, align 4
  br label %tree_add_node.exit

tree_add_node.exit:                               ; preds = %if.then3.critedge.i, %refcount_inc.exit.i
  %.sink.i = phi ptr [ %36, %refcount_inc.exit.i ], [ %retval.0.i35, %if.then3.critedge.i ]
  %root5.i = getelementptr inbounds %struct.fs_node, ptr %retval.0.i35, i32 0, i32 4
  %38 = ptrtoint ptr %root5.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %.sink.i, ptr %root5.i, align 4
  %39 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %prev, align 4
  %call.i.i42 = tail call zeroext i1 @__list_add_valid(ptr noundef %retval.0.i35, ptr noundef %prev, ptr noundef %40) #14
  br i1 %call.i.i42, label %if.end.i.i, label %tree_add_node.exit.list_add.exit_crit_edge

tree_add_node.exit.list_add.exit_crit_edge:       ; preds = %tree_add_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_add.exit

if.end.i.i:                                       ; preds = %tree_add_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %retval.0.i35, ptr %prev1.i.i, align 4
  %42 = ptrtoint ptr %retval.0.i35 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %40, ptr %retval.0.i35, align 4
  %43 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %prev, ptr %prev.i.i, align 4
  %44 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %retval.0.i35, ptr %prev, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %tree_add_node.exit.list_add.exit_crit_edge
  %version = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %version, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %version, i32 1, i32 3, i32 1) #14
  %45 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %version, ptr %version, i32 1, ptr elementtype(i32) %version) #14, !srcloc !265
  br label %cleanup

cleanup:                                          ; preds = %list_add.exit, %if.then4, %alloc_flow_group.exit.cleanup_crit_edge, %get_steering.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %call.i.i36, %if.then4 ], [ %retval.0.i35, %list_add.exit ], [ %retval.0.i35, %alloc_flow_group.exit.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %get_steering.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @up_write_ref_node(ptr noundef %node, i1 noundef zeroext %locked) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %refcount = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #14
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #14, !srcloc !263
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp slt i32 %asmresult.i.i.i.i.i, 2
  br i1 %cmp.i.i, label %if.then3.i.i, label %entry.refcount_dec.exit_crit_edge, !prof !261

entry.refcount_dec.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_dec.exit

if.then3.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 4) #14
  br label %refcount_dec.exit

refcount_dec.exit:                                ; preds = %if.then3.i.i, %entry.refcount_dec.exit_crit_edge
  br i1 %locked, label %refcount_dec.exit.if.end_crit_edge, label %if.then

refcount_dec.exit.if.end_crit_edge:               ; preds = %refcount_dec.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %refcount_dec.exit
  call void @__sanitizer_cov_trace_pc() #16
  %lock = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 5
  tail call void @up_write(ptr noundef %lock) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %refcount_dec.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @tree_put_node(ptr noundef %node, i1 noundef zeroext %locked) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end11.tailrecurse_crit_edge, %entry
  %node.tr = phi ptr [ %node, %entry ], [ %1, %if.end11.tailrecurse_crit_edge ]
  %parent = getelementptr inbounds %struct.fs_node, ptr %node.tr, i32 0, i32 3
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 4
  %refcount = getelementptr inbounds %struct.fs_node, ptr %node.tr, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #14
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %tailrecurse
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end11_crit_edge, label %if.then10.i.i.i, !prof !259

if.end5.i.i.i.if.end11_crit_edge:                 ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #14
  br label %if.end11

if.then:                                          ; preds = %tailrecurse
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !266
  %del_hw_func = getelementptr inbounds %struct.fs_node, ptr %node.tr, i32 0, i32 8
  %3 = ptrtoint ptr %del_hw_func to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %del_hw_func, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %if.then.if.end_crit_edge, label %if.then1

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then1:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %4(ptr noundef %node.tr) #14
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then.if.end_crit_edge
  %tobool3.not = icmp eq ptr %1, null
  br i1 %tobool3.not, label %if.end11.thread, label %if.then.i

if.then.i:                                        ; preds = %if.end
  br i1 %locked, label %if.then.i.if.end.i_crit_edge, label %if.then2.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 5
  tail call void @down_write(ptr noundef %lock.i) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i.if.end.i_crit_edge
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i34 = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i34)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i34, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.end.i.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i34, 1
  %6 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i34
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %.not.i.i.i.i = icmp sgt i32 %6, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.down_write_ref_node.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %down_write_ref_node.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #14
  br label %down_write_ref_node.exit

down_write_ref_node.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %node.tr) #14
  br i1 %call.i.i, label %if.end.i.i, label %down_write_ref_node.exit.list_del_init.exit_crit_edge

down_write_ref_node.exit.list_del_init.exit_crit_edge: ; preds = %down_write_ref_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %down_write_ref_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %node.tr, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %node.tr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %node.tr, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %down_write_ref_node.exit.list_del_init.exit_crit_edge
  %13 = ptrtoint ptr %node.tr to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %node.tr, ptr %node.tr, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %node.tr, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %node.tr, ptr %prev.i3.i, align 4
  %del_sw_func.c = getelementptr inbounds %struct.fs_node, ptr %node.tr, i32 0, i32 9
  %15 = ptrtoint ptr %del_sw_func.c to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %del_sw_func.c, align 4
  tail call void %16(ptr noundef %node.tr) #14
  %call.i.i.i.i.i36 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %17 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i37 = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i37)
  %cmp.i.i.i38 = icmp slt i32 %asmresult.i.i.i.i.i.i37, 2
  br i1 %cmp.i.i.i38, label %if.then3.i.i.i, label %list_del_init.exit.refcount_dec.exit.i_crit_edge, !prof !261

list_del_init.exit.refcount_dec.exit.i_crit_edge: ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_dec.exit.i

if.then3.i.i.i:                                   ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 4) #14
  br label %refcount_dec.exit.i

refcount_dec.exit.i:                              ; preds = %if.then3.i.i.i, %list_del_init.exit.refcount_dec.exit.i_crit_edge
  br i1 %locked, label %refcount_dec.exit.i.if.end11_crit_edge, label %if.then.i40

refcount_dec.exit.i.if.end11_crit_edge:           ; preds = %refcount_dec.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then.i40:                                      ; preds = %refcount_dec.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %lock.i39 = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 5
  tail call void @up_write(ptr noundef %lock.i39) #14
  br label %if.end11

if.end11.thread:                                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %del_sw_func.c33 = getelementptr inbounds %struct.fs_node, ptr %node.tr, i32 0, i32 9
  %18 = ptrtoint ptr %del_sw_func.c33 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %del_sw_func.c33, align 4
  tail call void %19(ptr noundef %node.tr) #14
  br label %if.end16

if.end11:                                         ; preds = %if.then.i40, %refcount_dec.exit.i.if.end11_crit_edge, %if.then10.i.i.i, %if.end5.i.i.i.if.end11_crit_edge
  %node.addr.0 = phi ptr [ null, %refcount_dec.exit.i.if.end11_crit_edge ], [ null, %if.then.i40 ], [ %node.tr, %if.end5.i.i.i.if.end11_crit_edge ], [ %node.tr, %if.then10.i.i.i ]
  %tobool12.not = icmp ne ptr %node.addr.0, null
  %tobool13.not = icmp eq ptr %1, null
  %or.cond = select i1 %tobool12.not, i1 true, i1 %tobool13.not
  br i1 %or.cond, label %if.end11.if.end16_crit_edge, label %if.end11.tailrecurse_crit_edge

if.end11.tailrecurse_crit_edge:                   ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %tailrecurse

if.end11.if.end16_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.end16:                                         ; preds = %if.end11.if.end16_crit_edge, %if.end11.thread
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mlx5_fs_add_fg(ptr noundef %fg) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_fg, i32 0, i32 1), ptr blockaddress(@trace_mlx5_fs_add_fg, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !267

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !259

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !268
  %call42 = tail call i32 @__traceiter_mlx5_fs_add_fg(ptr noundef null, ptr noundef %fg) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !269
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !259

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_fg, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_fg, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mlx5_fs_add_fg.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_mlx5_fs_add_fg.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 148, ptr noundef nonnull @.str.32) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !271
  %31 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_add_flow_rules(ptr noundef %ft, ptr noundef %spec, ptr nocapture noundef %flow_act, ptr noundef %dest, i32 noundef %num_dest) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i, label %entry.find_root.exit_crit_edge, label %do.end.i, !prof !259

entry.find_root.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %entry.find_root.exit_crit_edge
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %1, %entry.find_root.exit_crit_edge ]
  %4 = ptrtoint ptr %flow_act to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flow_act, align 4
  %tobool.not = icmp eq ptr %spec, null
  %spec.store.select = select i1 %tobool.not, ptr @mlx5_add_flow_rules.zero_spec, ptr %spec
  %and.i = and i32 %5, 589824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then2, label %if.end4

if.then2:                                         ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call3 = tail call fastcc ptr @_mlx5_add_flow_rules(ptr noundef %ft, ptr noundef %spec.store.select, ptr noundef %flow_act, ptr noundef %dest, i32 noundef %num_dest)
  br label %cleanup

if.end4:                                          ; preds = %find_root.exit
  %type.i97 = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 6
  %6 = ptrtoint ptr %type.i97 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i97, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.i = icmp eq i32 %7, 0
  br i1 %cmp.i, label %land.rhs.i, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.rhs.i:                                       ; preds = %if.end4
  %8 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %root1.i, align 4
  %type.i.i.i = getelementptr inbounds %struct.fs_node, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp.not.i.i.i = icmp eq i32 %11, 0
  br i1 %cmp.not.i.i.i, label %find_root.exit.i.i, label %find_root.exit.thread.i.i, !prof !259

find_root.exit.thread.i.i:                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %fwd_next_prio_supported.exit

find_root.exit.i.i:                               ; preds = %land.rhs.i
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %find_root.exit.i.i.fwd_next_prio_supported.exit_crit_edge, label %if.then.i.i

find_root.exit.i.i.fwd_next_prio_supported.exit_crit_edge: ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwd_next_prio_supported.exit

if.then.i.i:                                      ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %9, i32 0, i32 4
  %12 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev.i.i, align 4
  br label %fwd_next_prio_supported.exit

fwd_next_prio_supported.exit:                     ; preds = %if.then.i.i, %find_root.exit.i.i.fwd_next_prio_supported.exit_crit_edge, %find_root.exit.thread.i.i
  %retval.0.i.i = phi ptr [ %13, %if.then.i.i ], [ null, %find_root.exit.i.i.fwd_next_prio_supported.exit_crit_edge ], [ null, %find_root.exit.thread.i.i ]
  %arrayidx.i = getelementptr %struct.mlx5_core_dev, ptr %retval.0.i.i, i32 0, i32 8, i32 0, i32 7
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.i, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i98 = icmp slt i32 %17, 0
  br i1 %tobool.i98, label %if.end8, label %fwd_next_prio_supported.exit.cleanup_crit_edge

fwd_next_prio_supported.exit.cleanup_crit_edge:   ; preds = %fwd_next_prio_supported.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %fwd_next_prio_supported.exit
  %chain_lock = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %chain_lock, i32 noundef 0) #14
  %18 = ptrtoint ptr %flow_act to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flow_act, align 4
  %and.i99 = and i32 %19, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i99)
  %tobool.not.i = icmp eq i32 %and.i99, 0
  br i1 %tobool.not.i, label %if.end8.cond.end.i_crit_edge, label %cond.true.i

if.end8.cond.end.i_crit_edge:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i

cond.true.i:                                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %ns.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 14
  %20 = ptrtoint ptr %ns.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ns.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.end8.cond.end.i_crit_edge
  %.pn.i = phi ptr [ %21, %cond.true.i ], [ %ft, %if.end8.cond.end.i_crit_edge ]
  %cond.in.i = getelementptr inbounds %struct.fs_node, ptr %.pn.i, i32 0, i32 3
  %22 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %cond.i = load ptr, ptr %cond.in.i, align 4
  %parent.0.in11.i.i.i = getelementptr inbounds %struct.fs_node, ptr %cond.i, i32 0, i32 3
  %23 = ptrtoint ptr %parent.0.in11.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %parent.012.i.i.i = load ptr, ptr %parent.0.in11.i.i.i, align 4
  %tobool3.not13.i.i.i = icmp eq ptr %parent.012.i.i.i, null
  br i1 %tobool3.not13.i.i.i, label %cond.end.i.unlock_crit_edge, label %cond.end.i.while.body.i.i.i_crit_edge

cond.end.i.while.body.i.i.i_crit_edge:            ; preds = %cond.end.i
  br label %while.body.i.i.i

cond.end.i.unlock_crit_edge:                      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

while.body.i.i.i:                                 ; preds = %while.body.i.i.i.while.body.i.i.i_crit_edge, %cond.end.i.while.body.i.i.i_crit_edge
  %parent.015.i.i.i = phi ptr [ %parent.0.i.i.i, %while.body.i.i.i.while.body.i.i.i_crit_edge ], [ %parent.012.i.i.i, %cond.end.i.while.body.i.i.i_crit_edge ]
  %curr_node.014.i.i.i = phi ptr [ %parent.015.i.i.i, %while.body.i.i.i.while.body.i.i.i_crit_edge ], [ %cond.i, %cond.end.i.while.body.i.i.i_crit_edge ]
  %call.i.i.i100 = tail call fastcc ptr @find_closest_ft_recursive(ptr noundef nonnull %parent.015.i.i.i, ptr noundef %curr_node.014.i.i.i, i1 noundef zeroext false) #14
  %parent.0.in.i.i.i = getelementptr inbounds %struct.fs_node, ptr %parent.015.i.i.i, i32 0, i32 3
  %24 = ptrtoint ptr %parent.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %parent.0.i.i.i = load ptr, ptr %parent.0.in.i.i.i, align 4
  %tobool.not.i.i.i = icmp ne ptr %call.i.i.i100, null
  %tobool3.not.i.i.i = icmp eq ptr %parent.0.i.i.i, null
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool3.not.i.i.i
  br i1 %or.cond.i.i.i, label %find_next_fwd_ft.exit, label %while.body.i.i.i.while.body.i.i.i_crit_edge

while.body.i.i.i.while.body.i.i.i_crit_edge:      ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

find_next_fwd_ft.exit:                            ; preds = %while.body.i.i.i
  %tobool10.not = icmp eq ptr %call.i.i.i100, null
  br i1 %tobool10.not, label %find_next_fwd_ft.exit.unlock_crit_edge, label %if.end13

find_next_fwd_ft.exit.unlock_crit_edge:           ; preds = %find_next_fwd_ft.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

if.end13:                                         ; preds = %find_next_fwd_ft.exit
  %add = add i32 %num_dest, 1
  %25 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %add, i32 16) #14
  %26 = extractvalue { i32, i1 } %25, 1
  br i1 %26, label %if.end13.unlock_crit_edge, label %if.end7.i.i, !prof !261

if.end13.unlock_crit_edge:                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

if.end7.i.i:                                      ; preds = %if.end13
  %27 = extractvalue { i32, i1 } %25, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %27, i32 noundef 3520) #19
  %tobool15.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool15.not, label %if.end7.i.i.unlock_crit_edge, label %for.cond.preheader

if.end7.i.i.unlock_crit_edge:                     ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

for.cond.preheader:                               ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_dest)
  %cmp109 = icmp sgt i32 %num_dest, 0
  br i1 %cmp109, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0110 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.mlx5_flow_destination, ptr %call8.i.i, i32 %i.0110
  %arrayidx19 = getelementptr %struct.mlx5_flow_destination, ptr %dest, i32 %i.0110
  %28 = call ptr @memcpy(ptr %arrayidx, ptr %arrayidx19, i32 16)
  %inc = add nuw nsw i32 %i.0110, 1
  %exitcond.not = icmp eq i32 %inc, %num_dest
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %for.cond.preheader.for.end_crit_edge ], [ %num_dest, %for.body.for.end_crit_edge ]
  %arrayidx20 = getelementptr %struct.mlx5_flow_destination, ptr %call8.i.i, i32 %i.0.lcssa
  %29 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 1, ptr %arrayidx20, align 16
  %30 = getelementptr %struct.mlx5_flow_destination, ptr %call8.i.i, i32 %i.0.lcssa, i32 1
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call.i.i.i100, ptr %30, align 4
  %32 = ptrtoint ptr %flow_act to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flow_act, align 4
  %and = and i32 %33, -589829
  %or = or i32 %and, 4
  store i32 %or, ptr %flow_act, align 4
  %call25 = tail call fastcc ptr @_mlx5_add_flow_rules(ptr noundef %ft, ptr noundef %spec.store.select, ptr noundef %flow_act, ptr noundef nonnull %call8.i.i, i32 noundef %add)
  %cmp.i102 = icmp ugt ptr %call25, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i102, label %for.end.unlock_crit_edge, label %if.end28

for.end.unlock_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

if.end28:                                         ; preds = %for.end
  %arrayidx29 = getelementptr %struct.mlx5_flow_handle, ptr %call25, i32 0, i32 1, i32 %num_dest
  %34 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx29, align 4
  %next_ft30 = getelementptr inbounds %struct.mlx5_flow_rule, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %next_ft30 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile ptr, ptr %next_ft30, align 4
  %cmp.i103.not = icmp eq ptr %37, %next_ft30
  br i1 %cmp.i103.not, label %if.then33, label %if.end28.unlock_crit_edge

if.end28.unlock_crit_edge:                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

if.then33:                                        ; preds = %if.end28
  %lock = getelementptr inbounds %struct.mlx5_flow_table, ptr %call.i.i.i100, i32 0, i32 9
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #14
  %38 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx29, align 4
  %next_ft37 = getelementptr inbounds %struct.mlx5_flow_rule, ptr %39, i32 0, i32 3
  %fwd_rules = getelementptr inbounds %struct.mlx5_flow_table, ptr %call.i.i.i100, i32 0, i32 10
  %40 = ptrtoint ptr %fwd_rules to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %fwd_rules, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %next_ft37, ptr noundef %fwd_rules, ptr noundef %41) #14
  br i1 %call.i.i, label %if.end.i.i104, label %if.then33.list_add.exit_crit_edge

if.then33.list_add.exit_crit_edge:                ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_add.exit

if.end.i.i104:                                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #16
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %next_ft37, ptr %prev1.i.i, align 4
  %43 = ptrtoint ptr %next_ft37 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %41, ptr %next_ft37, align 4
  %prev3.i.i = getelementptr inbounds %struct.mlx5_flow_rule, ptr %39, i32 0, i32 3, i32 1
  %44 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %fwd_rules, ptr %prev3.i.i, align 4
  %45 = ptrtoint ptr %fwd_rules to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %next_ft37, ptr %fwd_rules, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i104, %if.then33.list_add.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #14
  %46 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx29, align 4
  %sw_action42 = getelementptr inbounds %struct.mlx5_flow_rule, ptr %47, i32 0, i32 4
  %48 = ptrtoint ptr %sw_action42 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %5, ptr %sw_action42, align 4
  %49 = load ptr, ptr %arrayidx29, align 4
  %ft46 = getelementptr inbounds %struct.mlx5_flow_rule, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %ft46 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %ft, ptr %ft46, align 4
  br label %unlock

unlock:                                           ; preds = %list_add.exit, %if.end28.unlock_crit_edge, %for.end.unlock_crit_edge, %if.end7.i.i.unlock_crit_edge, %if.end13.unlock_crit_edge, %find_next_fwd_ft.exit.unlock_crit_edge, %cond.end.i.unlock_crit_edge
  %gen_dest.0 = phi ptr [ %call8.i.i, %for.end.unlock_crit_edge ], [ %call8.i.i, %list_add.exit ], [ %call8.i.i, %if.end28.unlock_crit_edge ], [ null, %find_next_fwd_ft.exit.unlock_crit_edge ], [ null, %if.end7.i.i.unlock_crit_edge ], [ null, %cond.end.i.unlock_crit_edge ], [ null, %if.end13.unlock_crit_edge ]
  %handle.0 = phi ptr [ %call25, %for.end.unlock_crit_edge ], [ %call25, %list_add.exit ], [ %call25, %if.end28.unlock_crit_edge ], [ inttoptr (i32 -95 to ptr), %find_next_fwd_ft.exit.unlock_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end7.i.i.unlock_crit_edge ], [ inttoptr (i32 -95 to ptr), %cond.end.i.unlock_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end13.unlock_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %chain_lock) #14
  tail call void @kfree(ptr noundef %gen_dest.0) #14
  br label %cleanup

cleanup:                                          ; preds = %unlock, %fwd_next_prio_supported.exit.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.then2
  %retval.0 = phi ptr [ %handle.0, %unlock ], [ %call3, %if.then2 ], [ inttoptr (i32 -95 to ptr), %fwd_next_prio_supported.exit.cleanup_crit_edge ], [ inttoptr (i32 -95 to ptr), %if.end4.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @_mlx5_add_flow_rules(ptr noundef %ft, ptr noundef %spec, ptr nocapture noundef readonly %flow_act, ptr noundef %dest, i32 noundef %dest_num) unnamed_addr #0 align 64 {
entry:
  %match_head = alloca %struct.match_list, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i159 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_steering.exit

find_root.exit.i:                                 ; preds = %entry
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_steering.exit_crit_edge, label %if.then.i

find_root.exit.i.get_steering.exit_crit_edge:     ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_steering.exit

if.then.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev.i, align 4
  %steering.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %5, i32 0, i32 17, i32 26
  %6 = ptrtoint ptr %steering.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %steering.i, align 4
  br label %get_steering.exit

get_steering.exit:                                ; preds = %if.then.i, %find_root.exit.i.get_steering.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i = phi ptr [ %7, %if.then.i ], [ null, %find_root.exit.i.get_steering.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %match_head) #14
  %8 = ptrtoint ptr %match_head to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 -1 to ptr), ptr %match_head, align 4, !annotation !272
  %9 = getelementptr inbounds %struct.list_head, ptr %match_head, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 -1 to ptr), ptr %9, align 4, !annotation !272
  %11 = getelementptr inbounds %struct.match_list, ptr %match_head, i32 0, i32 1
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 -1 to ptr), ptr %11, align 4, !annotation !272
  %arrayidx.i312 = getelementptr %struct.mlx5_flow_spec, ptr %spec, i32 0, i32 2, i32 0
  %13 = ptrtoint ptr %arrayidx.i312 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i312, align 4
  %arrayidx1.i313 = getelementptr %struct.mlx5_flow_spec, ptr %spec, i32 0, i32 1, i32 0
  %15 = ptrtoint ptr %arrayidx1.i313 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx1.i313, align 4
  %neg.i314 = xor i32 %16, -1
  %and.i315 = and i32 %14, %neg.i314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i315)
  %tobool.not.i160316 = icmp eq i32 %and.i315, 0
  br i1 %tobool.not.i160316, label %get_steering.exit.for.cond.i_crit_edge, label %do.end.i.thread

get_steering.exit.for.cond.i_crit_edge:           ; preds = %get_steering.exit
  br label %for.cond.i

do.end.i.thread:                                  ; preds = %get_steering.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call.i340 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.55) #17
  br label %cleanup

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %get_steering.exit.for.cond.i_crit_edge
  %i.08.i317 = phi i32 [ %inc.i, %for.body.i.for.cond.i_crit_edge ], [ 0, %get_steering.exit.for.cond.i_crit_edge ]
  %inc.i = add nuw nsw i32 %i.08.i317, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 112, i32 %inc.i)
  %exitcond.not.i = icmp eq i32 %inc.i, 112
  br i1 %exitcond.not.i, label %check_valid_spec.exit, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %arrayidx.i = getelementptr %struct.mlx5_flow_spec, ptr %spec, i32 0, i32 2, i32 %inc.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i, align 4
  %arrayidx1.i = getelementptr %struct.mlx5_flow_spec, ptr %spec, i32 0, i32 1, i32 %inc.i
  %19 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx1.i, align 4
  %neg.i = xor i32 %20, -1
  %and.i = and i32 %18, %neg.i
  %tobool.not.i160 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i160, label %for.body.i.for.cond.i_crit_edge, label %do.end.i

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i

do.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 111, i32 %i.08.i317)
  %cmp.i.le = icmp ult i32 %i.08.i317, 111
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.55) #17
  br i1 %cmp.i.le, label %do.end.i.cleanup_crit_edge, label %do.end.i.for.cond.preheader_crit_edge

do.end.i.for.cond.preheader_crit_edge:            ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

do.end.i.cleanup_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

check_valid_spec.exit:                            ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 111, i32 %i.08.i317)
  %cmp.i.le350 = icmp ult i32 %i.08.i317, 111
  br i1 %cmp.i.le350, label %check_valid_spec.exit.cleanup_crit_edge, label %check_valid_spec.exit.for.cond.preheader_crit_edge

check_valid_spec.exit.for.cond.preheader_crit_edge: ; preds = %check_valid_spec.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

check_valid_spec.exit.cleanup_crit_edge:          ; preds = %check_valid_spec.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %check_valid_spec.exit.for.cond.preheader_crit_edge, %do.end.i.for.cond.preheader_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dest_num)
  %cmp318 = icmp sgt i32 %dest_num, 0
  br i1 %cmp318, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %flags.i = getelementptr inbounds %struct.mlx5_flow_act, ptr %flow_act, i32 0, i32 4
  %21 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags.i, align 4
  %and.i161 = and i32 %22, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %tobool.not.i162 = icmp eq i32 %and.i161, 0
  %23 = ptrtoint ptr %flow_act to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flow_act, align 4
  %and.i.i = and i32 %24, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.i.not = icmp eq i32 %and.i.i, 0
  %and3.i = and i32 %24, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  %type9.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 6
  %level29.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 5
  %tobool.not.not.i = xor i1 %tobool.not.i162, true
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0319 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.mlx5_flow_destination, ptr %dest, i32 %i.0319
  %tobool2.not.i = icmp eq ptr %arrayidx, null
  br i1 %tobool2.not.i, label %for.body.if.end.i_crit_edge, label %land.lhs.true.i

for.body.if.end.i_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %for.body
  %25 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %26)
  %cmp.i163 = icmp eq i32 %26, 256
  br i1 %cmp.i163, label %dest_is_valid.exit, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %for.body.if.end.i_crit_edge
  br i1 %tobool4.not.i, label %if.end.i.for.inc_crit_edge, label %if.end6.i

if.end.i.for.inc_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end6.i:                                        ; preds = %if.end.i
  br i1 %tobool.not.i162, label %if.end6.i.if.end24.i_crit_edge, label %if.then8.i

if.end6.i.if.end24.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24.i

if.then8.i:                                       ; preds = %if.end6.i
  %27 = ptrtoint ptr %type9.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %type9.i, align 4
  %29 = zext i32 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.132)
  switch i32 %28, label %if.then8.i.cleanup_crit_edge [
    i32 4, label %if.then8.i.if.end15.i_crit_edge
    i32 0, label %if.then8.i.if.end15.i_crit_edge378
  ]

if.then8.i.if.end15.i_crit_edge378:               ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.then8.i.if.end15.i_crit_edge:                  ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.then8.i.cleanup_crit_edge:                     ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15.i:                                       ; preds = %if.then8.i.if.end15.i_crit_edge, %if.then8.i.if.end15.i_crit_edge378
  %30 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %31)
  %cmp17.i = icmp eq i32 %31, 1
  br i1 %cmp17.i, label %land.lhs.true18.i, label %if.end15.i.if.end24.i_crit_edge

if.end15.i.if.end24.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24.i

land.lhs.true18.i:                                ; preds = %if.end15.i
  %32 = getelementptr %struct.mlx5_flow_destination, ptr %dest, i32 %i.0319, i32 1
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 4
  %type20.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %34, i32 0, i32 6
  %35 = ptrtoint ptr %type20.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %type20.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %36)
  %cmp21.not.i = icmp ne i32 %28, %36
  %brmerge48.i = or i1 %tobool2.not.i, %cmp21.not.i
  br i1 %brmerge48.i, label %land.lhs.true18.i.cleanup_crit_edge, label %land.lhs.true18.i.lor.lhs.false.i_crit_edge

land.lhs.true18.i.lor.lhs.false.i_crit_edge:      ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false.i

land.lhs.true18.i.cleanup_crit_edge:              ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end24.i:                                       ; preds = %if.end15.i.if.end24.i_crit_edge, %if.end6.i.if.end24.i_crit_edge
  br i1 %tobool2.not.i, label %if.end24.i.cleanup_crit_edge, label %if.end24.i.lor.lhs.false.i_crit_edge

if.end24.i.lor.lhs.false.i_crit_edge:             ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false.i

if.end24.i.cleanup_crit_edge:                     ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %if.end24.i.lor.lhs.false.i_crit_edge, %land.lhs.true18.i.lor.lhs.false.i_crit_edge
  %37 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %38)
  %cmp27.i = icmp eq i32 %38, 1
  br i1 %cmp27.i, label %land.lhs.true28.i, label %lor.lhs.false.i.for.inc_crit_edge

lor.lhs.false.i.for.inc_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

land.lhs.true28.i:                                ; preds = %lor.lhs.false.i
  %39 = getelementptr %struct.mlx5_flow_destination, ptr %dest, i32 %i.0319, i32 1
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %level.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %41, i32 0, i32 5
  %42 = ptrtoint ptr %level.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %level.i, align 4
  %44 = ptrtoint ptr %level29.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %level29.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %45)
  %cmp30.not.i = icmp ugt i32 %43, %45
  %brmerge.i = select i1 %cmp30.not.i, i1 true, i1 %tobool.not.not.i
  br i1 %brmerge.i, label %land.lhs.true28.i.for.inc_crit_edge, label %land.lhs.true28.i.cleanup_crit_edge

land.lhs.true28.i.cleanup_crit_edge:              ; preds = %land.lhs.true28.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true28.i.for.inc_crit_edge:              ; preds = %land.lhs.true28.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

dest_is_valid.exit:                               ; preds = %land.lhs.true.i
  br i1 %tobool.i.i.not, label %dest_is_valid.exit.cleanup_crit_edge, label %dest_is_valid.exit.for.inc_crit_edge

dest_is_valid.exit.for.inc_crit_edge:             ; preds = %dest_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

dest_is_valid.exit.cleanup_crit_edge:             ; preds = %dest_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc:                                          ; preds = %dest_is_valid.exit.for.inc_crit_edge, %land.lhs.true28.i.for.inc_crit_edge, %lor.lhs.false.i.for.inc_crit_edge, %if.end.i.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0319, 1
  %exitcond.not = icmp eq i32 %inc, %dest_num
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %tobool.not.i166 = icmp eq ptr %ft, null
  br i1 %tobool.not.i166, label %for.end.nested_down_read_ref_node.exit_crit_edge, label %if.then.i167

for.end.nested_down_read_ref_node.exit_crit_edge: ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %nested_down_read_ref_node.exit

if.then.i167:                                     ; preds = %for.end
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 5
  tail call void @down_read_nested(ptr noundef %lock.i, i32 noundef 0) #14
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %46 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %46, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i167.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i167.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.then.i167
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i167
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %47 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %47)
  %.not.i.i.i.i = icmp sgt i32 %47, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.nested_down_read_ref_node.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.nested_down_read_ref_node.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nested_down_read_ref_node.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i167.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i167.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #14
  br label %nested_down_read_ref_node.exit

nested_down_read_ref_node.exit:                   ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.nested_down_read_ref_node.exit_crit_edge, %for.end.nested_down_read_ref_node.exit_crit_edge
  %version9 = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 10
  %fgs_hash.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 12
  %refcount.i185 = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 6
  %lock.i190 = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 5
  %flags.i194 = getelementptr inbounds %struct.mlx5_flow_act, ptr %flow_act, i32 0, i32 4
  br label %search_again_locked

search_again_locked:                              ; preds = %search_again_locked.backedge, %nested_down_read_ref_node.exit
  %take_write.0.off0 = phi i1 [ false, %nested_down_read_ref_node.exit ], [ true, %search_again_locked.backedge ]
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %version9, i32 noundef 4) #14
  %48 = ptrtoint ptr %version9 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %version9, align 4
  %50 = call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i.i = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i169 = add i32 %53, 1
  store volatile i32 %add.i.i.i.i169, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !273
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i.i170 = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i.i170, label %search_again_locked.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

search_again_locked.rcu_read_lock.exit.i_crit_edge: ; preds = %search_again_locked
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %search_again_locked
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.46) #14
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %search_again_locked.rcu_read_lock.exit.i_crit_edge
  %54 = ptrtoint ptr %match_head to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %match_head, ptr %match_head, align 4
  %55 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %match_head, ptr %9, align 4
  %call.i38.i = call fastcc ptr @__rhashtable_lookup(ptr noundef %fgs_hash.i, ptr noundef %spec, [7 x i32] [i32 452, i32 9700220, i32 0, i32 65792, i32 0, i32 0, i32 0]) #14
  %tobool.not61.i = icmp eq ptr %call.i38.i, null
  br i1 %tobool.not61.i, label %rcu_read_lock.exit.i.for.end.i_crit_edge, label %rcu_read_lock.exit.i.land.rhs.i_crit_edge

rcu_read_lock.exit.i.land.rhs.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  br label %land.rhs.i

rcu_read_lock.exit.i.for.end.i_crit_edge:         ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

land.rhs.i:                                       ; preds = %for.inc.i.land.rhs.i_crit_edge, %rcu_read_lock.exit.i.land.rhs.i_crit_edge
  %tmp.062.i = phi ptr [ %82, %for.inc.i.land.rhs.i_crit_edge ], [ %call.i38.i, %rcu_read_lock.exit.i.land.rhs.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %tmp.062.i, i32 -892
  %call5.i = call fastcc i32 @tree_get_node(ptr noundef %add.ptr.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.rhs.i.for.inc.i_crit_edge, label %if.end.i171, !prof !261

land.rhs.i.for.inc.i_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end.i171:                                      ; preds = %land.rhs.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %56 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %56, i32 noundef 2592, i32 noundef 12) #18
  %tobool11.not.i = icmp eq ptr %call7.i.i, null
  br i1 %tobool11.not.i, label %if.then12.i, label %if.end14.i

if.then12.i:                                      ; preds = %if.end.i171
  %call.i39.i = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i39.i, label %if.then12.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i42.i

if.then12.i.rcu_read_unlock.exit.i_crit_edge:     ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit.i

land.lhs.true.i42.i:                              ; preds = %if.then12.i
  %call1.i40.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i40.i)
  %tobool.not.i41.i = icmp eq i32 %call1.i40.i, 0
  br i1 %tobool.not.i41.i, label %land.lhs.true.i42.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i44.i

land.lhs.true.i42.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i44.i:                             ; preds = %land.lhs.true.i42.i
  %.b4.i43.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i43.i, label %land.lhs.true2.i44.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i45.i

land.lhs.true2.i44.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i44.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit.i

if.then.i45.i:                                    ; preds = %land.lhs.true2.i44.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.47) #14
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i45.i, %land.lhs.true2.i44.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i42.i.rcu_read_unlock.exit.i_crit_edge, %if.then12.i.rcu_read_unlock.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !274
  %57 = call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i46.i = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i.i.i.i46.i to ptr
  %preempt_count.i.i.i.i47.i = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %preempt_count.i.i.i.i47.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %preempt_count.i.i.i.i47.i, align 4
  %sub.i.i.i.i = add i32 %60, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i47.i, align 4
  call void @rcu_read_unlock_strict() #14
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  %61 = ptrtoint ptr %match_head to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %match_head, align 4
  %cmp.not20.i.i = icmp eq ptr %62, %match_head
  br i1 %cmp.not20.i.i, label %rcu_read_unlock.exit.i.if.then13_crit_edge, label %rcu_read_unlock.exit.i.for.body.i.i_crit_edge

rcu_read_unlock.exit.i.for.body.i.i_crit_edge:    ; preds = %rcu_read_unlock.exit.i
  br label %for.body.i.i

rcu_read_unlock.exit.i.if.then13_crit_edge:       ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13

for.body.i.i:                                     ; preds = %list_del.exit.i.i.for.body.i.i_crit_edge, %rcu_read_unlock.exit.i.for.body.i.i_crit_edge
  %iter.021.i.i = phi ptr [ %match_tmp.0.i.i, %list_del.exit.i.i.for.body.i.i_crit_edge ], [ %62, %rcu_read_unlock.exit.i.for.body.i.i_crit_edge ]
  %63 = ptrtoint ptr %iter.021.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %match_tmp.0.i.i = load ptr, ptr %iter.021.i.i, align 4
  %g.i.i = getelementptr inbounds %struct.match_list, ptr %iter.021.i.i, i32 0, i32 1
  %64 = ptrtoint ptr %g.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %g.i.i, align 4
  call fastcc void @tree_put_node(ptr noundef %65, i1 noundef zeroext %take_write.0.off0) #14
  %call.i.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %iter.021.i.i) #14
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %for.body.i.i.list_del.exit.i.i_crit_edge

for.body.i.i.list_del.exit.i.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit.i.i

if.end.i.i.i.i:                                   ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %iter.021.i.i, i32 0, i32 1
  %66 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %prev.i.i.i.i, align 4
  %68 = ptrtoint ptr %iter.021.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %iter.021.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %67, ptr %prev1.i.i.i.i.i, align 4
  %71 = ptrtoint ptr %67 to i32
  call void @__asan_store4_noabort(i32 %71)
  store volatile ptr %69, ptr %67, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i.i, %for.body.i.i.list_del.exit.i.i_crit_edge
  %72 = ptrtoint ptr %iter.021.i.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr inttoptr (i32 256 to ptr), ptr %iter.021.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %iter.021.i.i, i32 0, i32 1
  %73 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  call void @kfree(ptr noundef %iter.021.i.i) #14
  %cmp.not.i.i172 = icmp eq ptr %match_tmp.0.i.i, %match_head
  br i1 %cmp.not.i.i172, label %list_del.exit.i.i.if.then13_crit_edge, label %list_del.exit.i.i.for.body.i.i_crit_edge

list_del.exit.i.i.for.body.i.i_crit_edge:         ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

list_del.exit.i.i.if.then13_crit_edge:            ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13

if.end14.i:                                       ; preds = %if.end.i171
  %g15.i = getelementptr inbounds %struct.match_list, ptr %call7.i.i, i32 0, i32 1
  %74 = ptrtoint ptr %g15.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %add.ptr.i, ptr %g15.i, align 8
  %75 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %9, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %76, ptr noundef nonnull %match_head) #14
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end14.i.for.inc.i_crit_edge

if.end14.i.for.inc.i_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end.i.i.i:                                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  %77 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %call7.i.i, ptr %9, align 4
  %78 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %match_head, ptr %call7.i.i, align 8
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %79 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %76, ptr %prev3.i.i.i, align 4
  %80 = ptrtoint ptr %76 to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile ptr %call7.i.i, ptr %76, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.i.i, %if.end14.i.for.inc.i_crit_edge, %land.rhs.i.for.inc.i_crit_edge
  %next.i = getelementptr inbounds %struct.rhlist_head, ptr %tmp.062.i, i32 0, i32 1
  %81 = ptrtoint ptr %next.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile ptr, ptr %next.i, align 4
  %tobool.not.i173 = icmp eq ptr %82, null
  br i1 %tobool.not.i173, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.land.rhs.i_crit_edge

for.inc.i.land.rhs.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %rcu_read_lock.exit.i.for.end.i_crit_edge
  %call.i49.i = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i49.i, label %for.end.i.if.end20_crit_edge, label %land.lhs.true.i52.i

for.end.i.if.end20_crit_edge:                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

land.lhs.true.i52.i:                              ; preds = %for.end.i
  %call1.i50.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i50.i)
  %tobool.not.i51.i = icmp eq i32 %call1.i50.i, 0
  br i1 %tobool.not.i51.i, label %land.lhs.true.i52.i.if.end20_crit_edge, label %land.lhs.true2.i54.i

land.lhs.true.i52.i.if.end20_crit_edge:           ; preds = %land.lhs.true.i52.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

land.lhs.true2.i54.i:                             ; preds = %land.lhs.true.i52.i
  %.b4.i53.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i53.i, label %land.lhs.true2.i54.i.if.end20_crit_edge, label %if.then.i55.i

land.lhs.true2.i54.i.if.end20_crit_edge:          ; preds = %land.lhs.true2.i54.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

if.then.i55.i:                                    ; preds = %land.lhs.true2.i54.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.47) #14
  br label %if.end20

if.then13:                                        ; preds = %list_del.exit.i.i.if.then13_crit_edge, %rcu_read_unlock.exit.i.if.then13_crit_edge
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i185, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14
  call void @llvm.prefetch.p0(ptr %refcount.i185, i32 1, i32 3, i32 1) #14
  %83 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i185, ptr %refcount.i185, i32 1, ptr elementtype(i32) %refcount.i185) #14
  %asmresult.i.i.i.i.i.i175 = extractvalue { i32, i32, i32 } %83, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i175)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i175, 2
  br i1 %take_write.0.off0, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.then13
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then15.up_write_ref_node.exit_crit_edge, !prof !261

if.then15.up_write_ref_node.exit_crit_edge:       ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit

if.then3.i.i.i:                                   ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i185, i32 noundef 4) #14
  br label %up_write_ref_node.exit

up_write_ref_node.exit:                           ; preds = %if.then3.i.i.i, %if.then15.up_write_ref_node.exit_crit_edge
  call void @up_write(ptr noundef %lock.i190) #14
  br label %cleanup

if.else:                                          ; preds = %if.then13
  br i1 %cmp.i.i.i, label %if.then3.i.i.i183, label %if.else.up_read_ref_node.exit_crit_edge, !prof !261

if.else.up_read_ref_node.exit_crit_edge:          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_read_ref_node.exit

if.then3.i.i.i183:                                ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i185, i32 noundef 4) #14
  br label %up_read_ref_node.exit

up_read_ref_node.exit:                            ; preds = %if.then3.i.i.i183, %if.else.up_read_ref_node.exit_crit_edge
  call void @up_read(ptr noundef %lock.i190) #14
  br label %cleanup

if.end20:                                         ; preds = %if.then.i55.i, %land.lhs.true2.i54.i.if.end20_crit_edge, %land.lhs.true.i52.i.if.end20_crit_edge, %for.end.i.if.end20_crit_edge
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !274
  %84 = call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i56.i = and i32 %84, -16384
  %85 = inttoptr i32 %and.i.i.i.i.i56.i to ptr
  %preempt_count.i.i.i.i57.i = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %preempt_count.i.i.i.i57.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %preempt_count.i.i.i.i57.i, align 4
  %sub.i.i.i58.i = add i32 %87, -1
  store volatile i32 %sub.i.i.i58.i, ptr %preempt_count.i.i.i.i57.i, align 4
  call void @rcu_read_unlock_strict() #14
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  br i1 %take_write.0.off0, label %if.end20.if.end24_crit_edge, label %if.then22

if.end20.if.end24_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then22:                                        ; preds = %if.end20
  %call.i.i.i.i.i186 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i185, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  call void @llvm.prefetch.p0(ptr %refcount.i185, i32 1, i32 3, i32 1) #14
  %88 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i185, ptr %refcount.i185, i32 1, ptr elementtype(i32) %refcount.i185) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i187 = extractvalue { i32, i32, i32 } %88, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i187)
  %cmp.i.i.i188 = icmp slt i32 %asmresult.i.i.i.i.i.i187, 2
  br i1 %cmp.i.i.i188, label %if.then3.i.i.i189, label %if.then22.up_read_ref_node.exit191_crit_edge, !prof !261

if.then22.up_read_ref_node.exit191_crit_edge:     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_read_ref_node.exit191

if.then3.i.i.i189:                                ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i185, i32 noundef 4) #14
  br label %up_read_ref_node.exit191

up_read_ref_node.exit191:                         ; preds = %if.then3.i.i.i189, %if.then22.up_read_ref_node.exit191_crit_edge
  call void @up_read(ptr noundef %lock.i190) #14
  br label %if.end24

if.end24:                                         ; preds = %up_read_ref_node.exit191, %if.end20.if.end24_crit_edge
  %89 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %root1.i.i, align 4
  %type.i.i.i = getelementptr inbounds %struct.fs_node, ptr %90, i32 0, i32 2
  %91 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %cmp.not.i.i.i = icmp eq i32 %92, 0
  br i1 %cmp.not.i.i.i, label %find_root.exit.i.i, label %find_root.exit.thread.i.i, !prof !259

find_root.exit.thread.i.i:                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i133.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_steering.exit.i

find_root.exit.i.i:                               ; preds = %if.end24
  %tobool.not.i.i192 = icmp eq ptr %90, null
  br i1 %tobool.not.i.i192, label %find_root.exit.i.i.get_steering.exit.i_crit_edge, label %if.then.i.i193

find_root.exit.i.i.get_steering.exit.i_crit_edge: ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_steering.exit.i

if.then.i.i193:                                   ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %90, i32 0, i32 4
  %93 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %dev.i.i, align 4
  %steering.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %94, i32 0, i32 17, i32 26
  %95 = ptrtoint ptr %steering.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %steering.i.i, align 4
  br label %get_steering.exit.i

get_steering.exit.i:                              ; preds = %if.then.i.i193, %find_root.exit.i.i.get_steering.exit.i_crit_edge, %find_root.exit.thread.i.i
  %retval.0.i.i = phi ptr [ %96, %if.then.i.i193 ], [ null, %find_root.exit.i.i.get_steering.exit.i_crit_edge ], [ null, %find_root.exit.thread.i.i ]
  %call1.i = call fastcc ptr @alloc_fte(ptr noundef %ft, ptr noundef %spec, ptr noundef %flow_act) #14
  %cmp.i.i = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %get_steering.exit.i.try_add_to_existing_fg.exit_crit_edge, label %get_steering.exit.i.search_again_locked.i_crit_edge

get_steering.exit.i.search_again_locked.i_crit_edge: ; preds = %get_steering.exit.i
  br label %search_again_locked.i

get_steering.exit.i.try_add_to_existing_fg.exit_crit_edge: ; preds = %get_steering.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %try_add_to_existing_fg.exit

search_again_locked.i:                            ; preds = %matched_fgs_get_version.exit151.i.search_again_locked.i_crit_edge, %get_steering.exit.i.search_again_locked.i_crit_edge
  %version.0.i = phi i64 [ %version.1.i, %matched_fgs_get_version.exit151.i.search_again_locked.i_crit_edge ], [ 0, %get_steering.exit.i.search_again_locked.i_crit_edge ]
  %take_write.0.off0.i = phi i1 [ true, %matched_fgs_get_version.exit151.i.search_again_locked.i_crit_edge ], [ false, %get_steering.exit.i.search_again_locked.i_crit_edge ]
  %97 = ptrtoint ptr %flags.i194 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %flags.i194, align 4
  %and.i195 = and i32 %98, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i195)
  %tobool.not.i196 = icmp eq i32 %and.i195, 0
  br i1 %tobool.not.i196, label %if.end5.i, label %search_again_locked.i.skip_search.i_crit_edge

search_again_locked.i.skip_search.i_crit_edge:    ; preds = %search_again_locked.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %skip_search.i

if.end5.i:                                        ; preds = %search_again_locked.i
  %99 = ptrtoint ptr %match_head to i32
  call void @__asan_load4_noabort(i32 %99)
  %iter.011.i.i = load ptr, ptr %match_head, align 4
  %cmp.not12.i.i = icmp eq ptr %iter.011.i.i, %match_head
  br i1 %cmp.not12.i.i, label %if.end5.i.matched_fgs_get_version.exit.i_crit_edge, label %if.end5.i.for.body.i.i200_crit_edge

if.end5.i.for.body.i.i200_crit_edge:              ; preds = %if.end5.i
  br label %for.body.i.i200

if.end5.i.matched_fgs_get_version.exit.i_crit_edge: ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %matched_fgs_get_version.exit.i

for.body.i.i200:                                  ; preds = %for.body.i.i200.for.body.i.i200_crit_edge, %if.end5.i.for.body.i.i200_crit_edge
  %iter.014.i.i = phi ptr [ %iter.0.i.i, %for.body.i.i200.for.body.i.i200_crit_edge ], [ %iter.011.i.i, %if.end5.i.for.body.i.i200_crit_edge ]
  %version.013.i.i = phi i64 [ %add.i.i, %for.body.i.i200.for.body.i.i200_crit_edge ], [ 0, %if.end5.i.for.body.i.i200_crit_edge ]
  %g.i.i197 = getelementptr inbounds %struct.match_list, ptr %iter.014.i.i, i32 0, i32 1
  %100 = ptrtoint ptr %g.i.i197 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %g.i.i197, align 4
  %version1.i.i = getelementptr inbounds %struct.fs_node, ptr %101, i32 0, i32 10
  %call.i.i.i.i198 = call zeroext i1 @__kasan_check_read(ptr noundef %version1.i.i, i32 noundef 4) #14
  %102 = ptrtoint ptr %version1.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile i32, ptr %version1.i.i, align 4
  %conv.i.i = sext i32 %103 to i64
  %add.i.i = add i64 %version.013.i.i, %conv.i.i
  %104 = ptrtoint ptr %iter.014.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %iter.0.i.i = load ptr, ptr %iter.014.i.i, align 4
  %cmp.not.i.i199 = icmp eq ptr %iter.0.i.i, %match_head
  br i1 %cmp.not.i.i199, label %for.body.i.i200.matched_fgs_get_version.exit.i_crit_edge, label %for.body.i.i200.for.body.i.i200_crit_edge

for.body.i.i200.for.body.i.i200_crit_edge:        ; preds = %for.body.i.i200
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i200

for.body.i.i200.matched_fgs_get_version.exit.i_crit_edge: ; preds = %for.body.i.i200
  call void @__sanitizer_cov_trace_pc() #16
  br label %matched_fgs_get_version.exit.i

matched_fgs_get_version.exit.i:                   ; preds = %for.body.i.i200.matched_fgs_get_version.exit.i_crit_edge, %if.end5.i.matched_fgs_get_version.exit.i_crit_edge
  %version.0.lcssa.i.i = phi i64 [ 0, %if.end5.i.matched_fgs_get_version.exit.i_crit_edge ], [ %add.i.i, %for.body.i.i200.matched_fgs_get_version.exit.i_crit_edge ]
  br label %for.cond.i201

for.cond.i201:                                    ; preds = %lookup_fte_locked.exit.i.for.cond.i201_crit_edge, %matched_fgs_get_version.exit.i
  %iter.0.in.i = phi ptr [ %match_head, %matched_fgs_get_version.exit.i ], [ %iter.0.i, %lookup_fte_locked.exit.i.for.cond.i201_crit_edge ]
  %105 = ptrtoint ptr %iter.0.in.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %iter.0.i = load ptr, ptr %iter.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %iter.0.i, %match_head
  br i1 %cmp.not.i, label %for.cond.i201.skip_search.i_crit_edge, label %for.body.i202

for.cond.i201.skip_search.i_crit_edge:            ; preds = %for.cond.i201
  call void @__sanitizer_cov_trace_pc() #16
  br label %skip_search.i

for.body.i202:                                    ; preds = %for.cond.i201
  %g7.i = getelementptr inbounds %struct.match_list, ptr %iter.0.i, i32 0, i32 1
  %106 = ptrtoint ptr %g7.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %g7.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %107, null
  br i1 %take_write.0.off0.i, label %if.then.i134.i, label %if.else.i.i

if.then.i134.i:                                   ; preds = %for.body.i202
  br i1 %tobool.not.i.i.i, label %if.then.i134.i.if.end.i.i_crit_edge, label %if.then.i.i.i

if.then.i134.i.if.end.i.i_crit_edge:              ; preds = %if.then.i134.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

if.then.i.i.i:                                    ; preds = %if.then.i134.i
  %lock.i.i.i = getelementptr inbounds %struct.fs_node, ptr %107, i32 0, i32 5
  call void @down_write_nested(ptr noundef %lock.i.i.i, i32 noundef 1) #14
  %refcount.i.i.i = getelementptr inbounds %struct.fs_node, ptr %107, i32 0, i32 6
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refcount.i.i.i, i32 1, i32 3, i32 1) #14
  %108 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i.i, ptr %refcount.i.i.i, i32 1, ptr elementtype(i32) %refcount.i.i.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %108, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i.i, label %if.then.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i.i, !prof !261

if.then.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i:                              ; preds = %if.then.i.i.i
  %add.i.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i.i, 1
  %109 = or i32 %add.i.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %109)
  %.not.i.i.i.i.i.i = icmp sgt i32 %109, -1
  br i1 %.not.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.if.end.i.i_crit_edge, label %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i.if.end.i.i_crit_edge:         ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

if.end15.sink.split.i.i.i.i.i.i:                  ; preds = %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, %if.then.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i.i = phi i32 [ 2, %if.then.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i.i.i, i32 noundef %.sink.i.i.i.i.i.i) #14
  br label %if.end.i.i

if.else.i.i:                                      ; preds = %for.body.i202
  br i1 %tobool.not.i.i.i, label %if.else.i.i.if.end.i.i_crit_edge, label %if.then.i42.i.i

if.else.i.i.if.end.i.i_crit_edge:                 ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

if.then.i42.i.i:                                  ; preds = %if.else.i.i
  %lock.i37.i.i = getelementptr inbounds %struct.fs_node, ptr %107, i32 0, i32 5
  call void @down_read_nested(ptr noundef %lock.i37.i.i, i32 noundef 1) #14
  %refcount.i38.i.i = getelementptr inbounds %struct.fs_node, ptr %107, i32 0, i32 6
  %call.i.i.i.i.i.i39.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i38.i.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refcount.i38.i.i, i32 1, i32 3, i32 1) #14
  %110 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i38.i.i, ptr %refcount.i38.i.i, i32 1, ptr elementtype(i32) %refcount.i38.i.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i40.i.i = extractvalue { i32, i32, i32 } %110, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i40.i.i)
  %tobool1.not.i.i.i.i41.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i40.i.i, 0
  br i1 %tobool1.not.i.i.i.i41.i.i, label %if.then.i42.i.i.if.end15.sink.split.i.i.i.i47.i.i_crit_edge, label %if.else.i.i.i.i45.i.i, !prof !261

if.then.i42.i.i.if.end15.sink.split.i.i.i.i47.i.i_crit_edge: ; preds = %if.then.i42.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i47.i.i

if.else.i.i.i.i45.i.i:                            ; preds = %if.then.i42.i.i
  %add.i.i.i.i43.i.i = add i32 %asmresult.i.i.i.i.i.i40.i.i, 1
  %111 = or i32 %add.i.i.i.i43.i.i, %asmresult.i.i.i.i.i.i40.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %111)
  %.not.i.i.i.i44.i.i = icmp sgt i32 %111, -1
  br i1 %.not.i.i.i.i44.i.i, label %if.else.i.i.i.i45.i.i.if.end.i.i_crit_edge, label %if.else.i.i.i.i45.i.i.if.end15.sink.split.i.i.i.i47.i.i_crit_edge, !prof !259

if.else.i.i.i.i45.i.i.if.end15.sink.split.i.i.i.i47.i.i_crit_edge: ; preds = %if.else.i.i.i.i45.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i47.i.i

if.else.i.i.i.i45.i.i.if.end.i.i_crit_edge:       ; preds = %if.else.i.i.i.i45.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

if.end15.sink.split.i.i.i.i47.i.i:                ; preds = %if.else.i.i.i.i45.i.i.if.end15.sink.split.i.i.i.i47.i.i_crit_edge, %if.then.i42.i.i.if.end15.sink.split.i.i.i.i47.i.i_crit_edge
  %.sink.i.i.i.i46.i.i = phi i32 [ 2, %if.then.i42.i.i.if.end15.sink.split.i.i.i.i47.i.i_crit_edge ], [ 1, %if.else.i.i.i.i45.i.i.if.end15.sink.split.i.i.i.i47.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i38.i.i, i32 noundef %.sink.i.i.i.i46.i.i) #14
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.end15.sink.split.i.i.i.i47.i.i, %if.else.i.i.i.i45.i.i.if.end.i.i_crit_edge, %if.else.i.i.if.end.i.i_crit_edge, %if.end15.sink.split.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.if.end.i.i_crit_edge, %if.then.i134.i.if.end.i.i_crit_edge
  %ftes_hash.i.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %107, i32 0, i32 7
  %112 = call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i.i.i.i = and i32 %112, -16384
  %113 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %113, i32 0, i32 1
  %114 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i48.i.i = add i32 %115, 1
  store volatile i32 %add.i.i.i.i48.i.i, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !273
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i.i.i135.i = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i.i.i135.i, label %if.end.i.i.rcu_read_lock.exit.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.end.i.i.rcu_read_lock.exit.i.i.i_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end.i.i
  %call1.i.i.i.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, label %land.lhs.true2.i.i.i.i

land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i.i.i

land.lhs.true2.i.i.i.i:                           ; preds = %land.lhs.true.i.i.i.i
  %.b4.i.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i.i, label %land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.46) #14
  br label %rcu_read_lock.exit.i.i.i

rcu_read_lock.exit.i.i.i:                         ; preds = %if.then.i.i.i.i, %land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, %if.end.i.i.rcu_read_lock.exit.i.i.i_crit_edge
  %call.i1.i.i.i = call fastcc ptr @__rhashtable_lookup(ptr noundef %ftes_hash.i.i, ptr noundef %arrayidx.i312, [7 x i32] [i32 448, i32 10224284, i32 0, i32 65792, i32 0, i32 0, i32 0]) #14
  %tobool.not.i2.i.i.i = icmp eq ptr %call.i1.i.i.i, null
  br i1 %tobool.not.i2.i.i.i, label %rcu_read_lock.exit.i.i.i.rhashtable_lookup.exit.i.i.i_crit_edge, label %cond.true.i.i.i.i

rcu_read_lock.exit.i.i.i.rhashtable_lookup.exit.i.i.i_crit_edge: ; preds = %rcu_read_lock.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rhashtable_lookup.exit.i.i.i

cond.true.i.i.i.i:                                ; preds = %rcu_read_lock.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %head_offset.i.i.i.i.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %107, i32 0, i32 7, i32 3, i32 3
  %116 = ptrtoint ptr %head_offset.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %116)
  %117 = load i16, ptr %head_offset.i.i.i.i.i, align 2
  %conv.i.i.i.i.i = zext i16 %117 to i32
  %idx.neg.i.i.i.i.i = sub nsw i32 0, %conv.i.i.i.i.i
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %call.i1.i.i.i, i32 %idx.neg.i.i.i.i.i
  br label %rhashtable_lookup.exit.i.i.i

rhashtable_lookup.exit.i.i.i:                     ; preds = %cond.true.i.i.i.i, %rcu_read_lock.exit.i.i.i.rhashtable_lookup.exit.i.i.i_crit_edge
  %cond.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i.i, %cond.true.i.i.i.i ], [ null, %rcu_read_lock.exit.i.i.i.rhashtable_lookup.exit.i.i.i_crit_edge ]
  %call.i3.i.i.i = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i3.i.i.i, label %rhashtable_lookup.exit.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge, label %land.lhs.true.i6.i.i.i

rhashtable_lookup.exit.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge: ; preds = %rhashtable_lookup.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rhashtable_lookup_fast.exit.i.i

land.lhs.true.i6.i.i.i:                           ; preds = %rhashtable_lookup.exit.i.i.i
  %call1.i4.i.i.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i.i.i)
  %tobool.not.i5.i.i.i = icmp eq i32 %call1.i4.i.i.i, 0
  br i1 %tobool.not.i5.i.i.i, label %land.lhs.true.i6.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge, label %land.lhs.true2.i8.i.i.i

land.lhs.true.i6.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge: ; preds = %land.lhs.true.i6.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rhashtable_lookup_fast.exit.i.i

land.lhs.true2.i8.i.i.i:                          ; preds = %land.lhs.true.i6.i.i.i
  %.b4.i7.i.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i.i.i, label %land.lhs.true2.i8.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge, label %if.then.i9.i.i.i

land.lhs.true2.i8.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i8.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rhashtable_lookup_fast.exit.i.i

if.then.i9.i.i.i:                                 ; preds = %land.lhs.true2.i8.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.47) #14
  br label %rhashtable_lookup_fast.exit.i.i

rhashtable_lookup_fast.exit.i.i:                  ; preds = %if.then.i9.i.i.i, %land.lhs.true2.i8.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge, %land.lhs.true.i6.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge, %rhashtable_lookup.exit.i.i.i.rhashtable_lookup_fast.exit.i.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !274
  %118 = call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i10.i.i.i = and i32 %118, -16384
  %119 = inttoptr i32 %and.i.i.i.i.i10.i.i.i to ptr
  %preempt_count.i.i.i.i11.i.i.i = getelementptr inbounds %struct.thread_info, ptr %119, i32 0, i32 1
  %120 = ptrtoint ptr %preempt_count.i.i.i.i11.i.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %preempt_count.i.i.i.i11.i.i.i, align 4
  %sub.i.i.i.i.i.i = add i32 %121, -1
  store volatile i32 %sub.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i11.i.i.i, align 4
  call void @rcu_read_unlock_strict() #14
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  %tobool2.not.i.i = icmp eq ptr %cond.i.i.i.i, null
  br i1 %tobool2.not.i.i, label %rhashtable_lookup_fast.exit.i.i.out.i.i_crit_edge, label %lor.lhs.false.i.i

rhashtable_lookup_fast.exit.i.i.out.i.i_crit_edge: ; preds = %rhashtable_lookup_fast.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.i.i

lor.lhs.false.i.i:                                ; preds = %rhashtable_lookup_fast.exit.i.i
  %call4.i.i = call fastcc i32 @tree_get_node(ptr noundef nonnull %cond.i.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %lor.lhs.false.i.i.out.i.i_crit_edge, label %if.end7.i.i

lor.lhs.false.i.i.out.i.i_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.i.i

if.end7.i.i:                                      ; preds = %lor.lhs.false.i.i
  %active.i.i = getelementptr inbounds %struct.fs_node, ptr %cond.i.i.i.i, i32 0, i32 7
  %122 = ptrtoint ptr %active.i.i to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %active.i.i, align 4, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %123)
  %tobool9.not.i.i = icmp eq i8 %123, 0
  br i1 %tobool9.not.i.i, label %if.then10.i.i, label %if.then.i55.i.i

if.then10.i.i:                                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @tree_put_node(ptr noundef nonnull %cond.i.i.i.i, i1 noundef zeroext false) #14
  br label %out.i.i

if.then.i55.i.i:                                  ; preds = %if.end7.i.i
  %lock.i50.i.i = getelementptr inbounds %struct.fs_node, ptr %cond.i.i.i.i, i32 0, i32 5
  call void @down_write_nested(ptr noundef %lock.i50.i.i, i32 noundef 2) #14
  %refcount.i51.i.i = getelementptr inbounds %struct.fs_node, ptr %cond.i.i.i.i, i32 0, i32 6
  %call.i.i.i.i.i.i52.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i51.i.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refcount.i51.i.i, i32 1, i32 3, i32 1) #14
  %124 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i51.i.i, ptr %refcount.i51.i.i, i32 1, ptr elementtype(i32) %refcount.i51.i.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i53.i.i = extractvalue { i32, i32, i32 } %124, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i53.i.i)
  %tobool1.not.i.i.i.i54.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i53.i.i, 0
  br i1 %tobool1.not.i.i.i.i54.i.i, label %if.then.i55.i.i.if.end15.sink.split.i.i.i.i60.i.i_crit_edge, label %if.else.i.i.i.i58.i.i, !prof !261

if.then.i55.i.i.if.end15.sink.split.i.i.i.i60.i.i_crit_edge: ; preds = %if.then.i55.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i60.i.i

if.else.i.i.i.i58.i.i:                            ; preds = %if.then.i55.i.i
  %add.i.i.i.i56.i.i = add i32 %asmresult.i.i.i.i.i.i53.i.i, 1
  %125 = or i32 %add.i.i.i.i56.i.i, %asmresult.i.i.i.i.i.i53.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %125)
  %.not.i.i.i.i57.i.i = icmp sgt i32 %125, -1
  br i1 %.not.i.i.i.i57.i.i, label %if.else.i.i.i.i58.i.i.out.i.i_crit_edge, label %if.else.i.i.i.i58.i.i.if.end15.sink.split.i.i.i.i60.i.i_crit_edge, !prof !259

if.else.i.i.i.i58.i.i.if.end15.sink.split.i.i.i.i60.i.i_crit_edge: ; preds = %if.else.i.i.i.i58.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i60.i.i

if.else.i.i.i.i58.i.i.out.i.i_crit_edge:          ; preds = %if.else.i.i.i.i58.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.i.i

if.end15.sink.split.i.i.i.i60.i.i:                ; preds = %if.else.i.i.i.i58.i.i.if.end15.sink.split.i.i.i.i60.i.i_crit_edge, %if.then.i55.i.i.if.end15.sink.split.i.i.i.i60.i.i_crit_edge
  %.sink.i.i.i.i59.i.i = phi i32 [ 2, %if.then.i55.i.i.if.end15.sink.split.i.i.i.i60.i.i_crit_edge ], [ 1, %if.else.i.i.i.i58.i.i.if.end15.sink.split.i.i.i.i60.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i51.i.i, i32 noundef %.sink.i.i.i.i59.i.i) #14
  br label %out.i.i

out.i.i:                                          ; preds = %if.end15.sink.split.i.i.i.i60.i.i, %if.else.i.i.i.i58.i.i.out.i.i_crit_edge, %if.then10.i.i, %lor.lhs.false.i.i.out.i.i_crit_edge, %rhashtable_lookup_fast.exit.i.i.out.i.i_crit_edge
  %fte_tmp.0.i.i = phi ptr [ null, %if.then10.i.i ], [ null, %lor.lhs.false.i.i.out.i.i_crit_edge ], [ null, %rhashtable_lookup_fast.exit.i.i.out.i.i_crit_edge ], [ %cond.i.i.i.i, %if.else.i.i.i.i58.i.i.out.i.i_crit_edge ], [ %cond.i.i.i.i, %if.end15.sink.split.i.i.i.i60.i.i ]
  %refcount.i62.i.i = getelementptr inbounds %struct.fs_node, ptr %107, i32 0, i32 6
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i62.i.i, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14
  call void @llvm.prefetch.p0(ptr %refcount.i62.i.i, i32 1, i32 3, i32 1) #14
  %126 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i62.i.i, ptr %refcount.i62.i.i, i32 1, ptr elementtype(i32) %refcount.i62.i.i) #14
  %asmresult.i.i.i.i.i.i63.i.i = extractvalue { i32, i32, i32 } %126, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i63.i.i)
  %cmp.i.i.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i63.i.i, 2
  br i1 %take_write.0.off0.i, label %if.then15.i.i, label %if.else17.i.i

if.then15.i.i:                                    ; preds = %out.i.i
  br i1 %cmp.i.i.i.i.i, label %if.then3.i.i.i.i.i, label %if.then15.i.i.up_write_ref_node.exit.i.i_crit_edge, !prof !261

if.then15.i.i.up_write_ref_node.exit.i.i_crit_edge: ; preds = %if.then15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit.i.i

if.then3.i.i.i.i.i:                               ; preds = %if.then15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i62.i.i, i32 noundef 4) #14
  br label %up_write_ref_node.exit.i.i

up_write_ref_node.exit.i.i:                       ; preds = %if.then3.i.i.i.i.i, %if.then15.i.i.up_write_ref_node.exit.i.i_crit_edge
  %lock.i64.i.i = getelementptr inbounds %struct.fs_node, ptr %107, i32 0, i32 5
  call void @up_write(ptr noundef %lock.i64.i.i) #14
  br label %lookup_fte_locked.exit.i

if.else17.i.i:                                    ; preds = %out.i.i
  br i1 %cmp.i.i.i.i.i, label %if.then3.i.i.i70.i.i, label %if.else17.i.i.up_read_ref_node.exit.i.i_crit_edge, !prof !261

if.else17.i.i.up_read_ref_node.exit.i.i_crit_edge: ; preds = %if.else17.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_read_ref_node.exit.i.i

if.then3.i.i.i70.i.i:                             ; preds = %if.else17.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i62.i.i, i32 noundef 4) #14
  br label %up_read_ref_node.exit.i.i

up_read_ref_node.exit.i.i:                        ; preds = %if.then3.i.i.i70.i.i, %if.else17.i.i.up_read_ref_node.exit.i.i_crit_edge
  %lock.i71.i.i = getelementptr inbounds %struct.fs_node, ptr %107, i32 0, i32 5
  call void @up_read(ptr noundef %lock.i71.i.i) #14
  br label %lookup_fte_locked.exit.i

lookup_fte_locked.exit.i:                         ; preds = %up_read_ref_node.exit.i.i, %up_write_ref_node.exit.i.i
  %tobool10.not.i = icmp eq ptr %fte_tmp.0.i.i, null
  br i1 %tobool10.not.i, label %lookup_fte_locked.exit.i.for.cond.i201_crit_edge, label %if.end12.i

lookup_fte_locked.exit.i.for.cond.i201_crit_edge: ; preds = %lookup_fte_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i201

if.end12.i:                                       ; preds = %lookup_fte_locked.exit.i
  %call13.i = call fastcc ptr @add_rule_fg(ptr noundef %107, ptr noundef %spec, ptr noundef %flow_act, ptr noundef %dest, i32 noundef %dest_num, ptr noundef nonnull %fte_tmp.0.i.i) #14
  %refcount.i.i = getelementptr inbounds %struct.fs_node, ptr %fte_tmp.0.i.i, i32 0, i32 6
  %call.i.i.i.i.i.i203 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  call void @llvm.prefetch.p0(ptr %refcount.i.i, i32 1, i32 3, i32 1) #14
  %127 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i, ptr %refcount.i.i, i32 1, ptr elementtype(i32) %refcount.i.i) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %127, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i.i, label %if.then3.i.i.i.i, label %if.end12.i.cleanup.thread.i_crit_edge, !prof !261

if.end12.i.cleanup.thread.i_crit_edge:            ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i

if.then3.i.i.i.i:                                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i.i, i32 noundef 4) #14
  br label %cleanup.thread.i

cleanup.thread.i:                                 ; preds = %if.then3.i.i.i.i, %if.end12.i.cleanup.thread.i_crit_edge
  %lock.i.i = getelementptr inbounds %struct.fs_node, ptr %fte_tmp.0.i.i, i32 0, i32 5
  call void @up_write(ptr noundef %lock.i.i) #14
  call fastcc void @tree_put_node(ptr noundef nonnull %fte_tmp.0.i.i, i1 noundef zeroext false) #14
  %ftes_cache.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %retval.0.i.i, i32 0, i32 3
  %128 = ptrtoint ptr %ftes_cache.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %ftes_cache.i, align 4
  call void @kmem_cache_free(ptr noundef %129, ptr noundef %call1.i) #14
  br label %try_add_to_existing_fg.exit

skip_search.i:                                    ; preds = %for.cond.i201.skip_search.i_crit_edge, %search_again_locked.i.skip_search.i_crit_edge
  %version.1.i = phi i64 [ %version.0.i, %search_again_locked.i.skip_search.i_crit_edge ], [ %version.0.lcssa.i.i, %for.cond.i201.skip_search.i_crit_edge ]
  %call.i.i.i204 = call zeroext i1 @__kasan_check_read(ptr noundef %version9, i32 noundef 4) #14
  %130 = ptrtoint ptr %version9 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %version9, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %131, i32 %49)
  %cmp24.not.i = icmp eq i32 %131, %49
  br i1 %cmp24.not.i, label %if.end27.i, label %skip_search.i.out.i_crit_edge

skip_search.i.out.i_crit_edge:                    ; preds = %skip_search.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.i

if.end27.i:                                       ; preds = %skip_search.i
  %132 = ptrtoint ptr %flags.i194 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %flags.i194, align 4
  %and29.i = and i32 %133, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i)
  %tobool30.not.i = icmp eq i32 %and29.i, 0
  br i1 %tobool30.not.i, label %land.lhs.true.i205, label %if.end27.i.if.end34.i206_crit_edge

if.end27.i.if.end34.i206_crit_edge:               ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34.i206

land.lhs.true.i205:                               ; preds = %if.end27.i
  %134 = ptrtoint ptr %match_head to i32
  call void @__asan_load4_noabort(i32 %134)
  %iter.011.i138.i = load ptr, ptr %match_head, align 4
  %cmp.not12.i139.i = icmp eq ptr %iter.011.i138.i, %match_head
  br i1 %cmp.not12.i139.i, label %land.lhs.true.i205.matched_fgs_get_version.exit151.i_crit_edge, label %land.lhs.true.i205.for.body.i149.i_crit_edge

land.lhs.true.i205.for.body.i149.i_crit_edge:     ; preds = %land.lhs.true.i205
  br label %for.body.i149.i

land.lhs.true.i205.matched_fgs_get_version.exit151.i_crit_edge: ; preds = %land.lhs.true.i205
  call void @__sanitizer_cov_trace_pc() #16
  br label %matched_fgs_get_version.exit151.i

for.body.i149.i:                                  ; preds = %for.body.i149.i.for.body.i149.i_crit_edge, %land.lhs.true.i205.for.body.i149.i_crit_edge
  %iter.014.i140.i = phi ptr [ %iter.0.i147.i, %for.body.i149.i.for.body.i149.i_crit_edge ], [ %iter.011.i138.i, %land.lhs.true.i205.for.body.i149.i_crit_edge ]
  %version.013.i141.i = phi i64 [ %add.i146.i, %for.body.i149.i.for.body.i149.i_crit_edge ], [ 0, %land.lhs.true.i205.for.body.i149.i_crit_edge ]
  %g.i142.i = getelementptr inbounds %struct.match_list, ptr %iter.014.i140.i, i32 0, i32 1
  %135 = ptrtoint ptr %g.i142.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %g.i142.i, align 4
  %version1.i143.i = getelementptr inbounds %struct.fs_node, ptr %136, i32 0, i32 10
  %call.i.i.i144.i = call zeroext i1 @__kasan_check_read(ptr noundef %version1.i143.i, i32 noundef 4) #14
  %137 = ptrtoint ptr %version1.i143.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %version1.i143.i, align 4
  %conv.i145.i = sext i32 %138 to i64
  %add.i146.i = add i64 %version.013.i141.i, %conv.i145.i
  %139 = ptrtoint ptr %iter.014.i140.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %iter.0.i147.i = load ptr, ptr %iter.014.i140.i, align 4
  %cmp.not.i148.i = icmp eq ptr %iter.0.i147.i, %match_head
  br i1 %cmp.not.i148.i, label %for.body.i149.i.matched_fgs_get_version.exit151.i_crit_edge, label %for.body.i149.i.for.body.i149.i_crit_edge

for.body.i149.i.for.body.i149.i_crit_edge:        ; preds = %for.body.i149.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i149.i

for.body.i149.i.matched_fgs_get_version.exit151.i_crit_edge: ; preds = %for.body.i149.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %matched_fgs_get_version.exit151.i

matched_fgs_get_version.exit151.i:                ; preds = %for.body.i149.i.matched_fgs_get_version.exit151.i_crit_edge, %land.lhs.true.i205.matched_fgs_get_version.exit151.i_crit_edge
  %version.0.lcssa.i150.i = phi i64 [ 0, %land.lhs.true.i205.matched_fgs_get_version.exit151.i_crit_edge ], [ %add.i146.i, %for.body.i149.i.matched_fgs_get_version.exit151.i_crit_edge ]
  %cmp32.not.i = icmp eq i64 %version.1.i, %version.0.lcssa.i150.i
  br i1 %cmp32.not.i, label %matched_fgs_get_version.exit151.i.if.end34.i206_crit_edge, label %matched_fgs_get_version.exit151.i.search_again_locked.i_crit_edge

matched_fgs_get_version.exit151.i.search_again_locked.i_crit_edge: ; preds = %matched_fgs_get_version.exit151.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again_locked.i

matched_fgs_get_version.exit151.i.if.end34.i206_crit_edge: ; preds = %matched_fgs_get_version.exit151.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34.i206

if.end34.i206:                                    ; preds = %matched_fgs_get_version.exit151.i.if.end34.i206_crit_edge, %if.end27.i.if.end34.i206_crit_edge
  %140 = ptrtoint ptr %match_head to i32
  call void @__asan_load4_noabort(i32 %140)
  %iter.1183.i = load ptr, ptr %match_head, align 4
  %cmp41.not184.i = icmp eq ptr %iter.1183.i, %match_head
  br i1 %cmp41.not184.i, label %if.end34.i206.out.i_crit_edge, label %if.end34.i206.for.body43.i_crit_edge

if.end34.i206.for.body43.i_crit_edge:             ; preds = %if.end34.i206
  br label %for.body43.i

if.end34.i206.out.i_crit_edge:                    ; preds = %if.end34.i206
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.i

for.body43.i:                                     ; preds = %for.inc69.i.for.body43.i_crit_edge, %if.end34.i206.for.body43.i_crit_edge
  %iter.1185.i = phi ptr [ %iter.1.i, %for.inc69.i.for.body43.i_crit_edge ], [ %iter.1183.i, %if.end34.i206.for.body43.i_crit_edge ]
  %g44.i = getelementptr inbounds %struct.match_list, ptr %iter.1185.i, i32 0, i32 1
  %141 = ptrtoint ptr %g44.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %g44.i, align 4
  %tobool.not.i152.i = icmp eq ptr %142, null
  br i1 %tobool.not.i152.i, label %for.body43.i.nested_down_write_ref_node.exit.i_crit_edge, label %if.then.i157.i

for.body43.i.nested_down_write_ref_node.exit.i_crit_edge: ; preds = %for.body43.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nested_down_write_ref_node.exit.i

if.then.i157.i:                                   ; preds = %for.body43.i
  %lock.i153.i = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 5
  call void @down_write_nested(ptr noundef %lock.i153.i, i32 noundef 1) #14
  %refcount.i154.i = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 6
  %call.i.i.i.i.i.i155.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i154.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refcount.i154.i, i32 1, i32 3, i32 1) #14
  %143 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i154.i, ptr %refcount.i154.i, i32 1, ptr elementtype(i32) %refcount.i154.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i156.i = extractvalue { i32, i32, i32 } %143, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i156.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i156.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i157.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !261

if.then.i157.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i157.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i157.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i156.i, 1
  %144 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i156.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %144)
  %.not.i.i.i.i.i = icmp sgt i32 %144, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.nested_down_write_ref_node.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.nested_down_write_ref_node.exit.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nested_down_write_ref_node.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i157.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i157.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i154.i, i32 noundef %.sink.i.i.i.i.i) #14
  br label %nested_down_write_ref_node.exit.i

nested_down_write_ref_node.exit.i:                ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.nested_down_write_ref_node.exit.i_crit_edge, %for.body43.i.nested_down_write_ref_node.exit.i_crit_edge
  %active.i = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 7
  %145 = ptrtoint ptr %active.i to i32
  call void @__asan_load1_noabort(i32 %145)
  %146 = load i8, ptr %active.i, align 4, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %146)
  %tobool47.not.i = icmp eq i8 %146, 0
  br i1 %tobool47.not.i, label %if.then48.i, label %if.end50.i

if.then48.i:                                      ; preds = %nested_down_write_ref_node.exit.i
  %refcount.i159.i = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 6
  %call.i.i.i.i.i160.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i159.i, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  call void @llvm.prefetch.p0(ptr %refcount.i159.i, i32 1, i32 3, i32 1) #14
  %147 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i159.i, ptr %refcount.i159.i, i32 1, ptr elementtype(i32) %refcount.i159.i) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i161.i = extractvalue { i32, i32, i32 } %147, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i161.i)
  %cmp.i.i.i162.i = icmp slt i32 %asmresult.i.i.i.i.i.i161.i, 2
  br i1 %cmp.i.i.i162.i, label %if.then3.i.i.i163.i, label %if.then48.i.up_write_ref_node.exit167.i_crit_edge, !prof !261

if.then48.i.up_write_ref_node.exit167.i_crit_edge: ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit167.i

if.then3.i.i.i163.i:                              ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i159.i, i32 noundef 4) #14
  br label %up_write_ref_node.exit167.i

up_write_ref_node.exit167.i:                      ; preds = %if.then3.i.i.i163.i, %if.then48.i.up_write_ref_node.exit167.i_crit_edge
  %lock.i164.i = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 5
  call void @up_write(ptr noundef %lock.i164.i) #14
  br label %for.inc69.i

if.end50.i:                                       ; preds = %nested_down_write_ref_node.exit.i
  %call51.i = call fastcc i32 @insert_fte(ptr noundef %142, ptr noundef %call1.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51.i)
  %tobool52.not.i = icmp eq i32 %call51.i, 0
  br i1 %tobool52.not.i, label %if.end60.i, label %if.then53.i

if.then53.i:                                      ; preds = %if.end50.i
  %refcount.i168.i = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 6
  %call.i.i.i.i.i169.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i168.i, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  call void @llvm.prefetch.p0(ptr %refcount.i168.i, i32 1, i32 3, i32 1) #14
  %148 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i168.i, ptr %refcount.i168.i, i32 1, ptr elementtype(i32) %refcount.i168.i) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i170.i = extractvalue { i32, i32, i32 } %148, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i170.i)
  %cmp.i.i.i171.i = icmp slt i32 %asmresult.i.i.i.i.i.i170.i, 2
  br i1 %cmp.i.i.i171.i, label %if.then3.i.i.i172.i, label %if.then53.i.up_write_ref_node.exit176.i_crit_edge, !prof !261

if.then53.i.up_write_ref_node.exit176.i_crit_edge: ; preds = %if.then53.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit176.i

if.then3.i.i.i172.i:                              ; preds = %if.then53.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i168.i, i32 noundef 4) #14
  br label %up_write_ref_node.exit176.i

up_write_ref_node.exit176.i:                      ; preds = %if.then3.i.i.i172.i, %if.then53.i.up_write_ref_node.exit176.i_crit_edge
  %lock.i173.i = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 5
  call void @up_write(ptr noundef %lock.i173.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -28, i32 %call51.i)
  %cmp55.i = icmp eq i32 %call51.i, -28
  br i1 %cmp55.i, label %up_write_ref_node.exit176.i.for.inc69.i_crit_edge, label %if.end57.i

up_write_ref_node.exit176.i.for.inc69.i_crit_edge: ; preds = %up_write_ref_node.exit176.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc69.i

if.end57.i:                                       ; preds = %up_write_ref_node.exit176.i
  call void @__sanitizer_cov_trace_pc() #16
  %ftes_cache58.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %retval.0.i.i, i32 0, i32 3
  %149 = ptrtoint ptr %ftes_cache58.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %ftes_cache58.i, align 4
  call void @kmem_cache_free(ptr noundef %150, ptr noundef %call1.i) #14
  %151 = inttoptr i32 %call51.i to ptr
  br label %try_add_to_existing_fg.exit

if.end60.i:                                       ; preds = %if.end50.i
  %tobool.not.i276 = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i276, label %if.end60.i.nested_down_write_ref_node.exit289_crit_edge, label %if.then.i282

if.end60.i.nested_down_write_ref_node.exit289_crit_edge: ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nested_down_write_ref_node.exit289

if.then.i282:                                     ; preds = %if.end60.i
  %lock.i277 = getelementptr inbounds %struct.fs_node, ptr %call1.i, i32 0, i32 5
  call void @down_write_nested(ptr noundef %lock.i277, i32 noundef 2) #14
  %refcount.i278 = getelementptr inbounds %struct.fs_node, ptr %call1.i, i32 0, i32 6
  %call.i.i.i.i.i.i279 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i278, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refcount.i278, i32 1, i32 3, i32 1) #14
  %152 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i278, ptr %refcount.i278, i32 1, ptr elementtype(i32) %refcount.i278) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i280 = extractvalue { i32, i32, i32 } %152, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i280)
  %tobool1.not.i.i.i.i281 = icmp eq i32 %asmresult.i.i.i.i.i.i280, 0
  br i1 %tobool1.not.i.i.i.i281, label %if.then.i282.if.end15.sink.split.i.i.i.i287_crit_edge, label %if.else.i.i.i.i285, !prof !261

if.then.i282.if.end15.sink.split.i.i.i.i287_crit_edge: ; preds = %if.then.i282
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i287

if.else.i.i.i.i285:                               ; preds = %if.then.i282
  %add.i.i.i.i283 = add i32 %asmresult.i.i.i.i.i.i280, 1
  %153 = or i32 %add.i.i.i.i283, %asmresult.i.i.i.i.i.i280
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %153)
  %.not.i.i.i.i284 = icmp sgt i32 %153, -1
  br i1 %.not.i.i.i.i284, label %if.else.i.i.i.i285.nested_down_write_ref_node.exit289_crit_edge, label %if.else.i.i.i.i285.if.end15.sink.split.i.i.i.i287_crit_edge, !prof !259

if.else.i.i.i.i285.if.end15.sink.split.i.i.i.i287_crit_edge: ; preds = %if.else.i.i.i.i285
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i287

if.else.i.i.i.i285.nested_down_write_ref_node.exit289_crit_edge: ; preds = %if.else.i.i.i.i285
  call void @__sanitizer_cov_trace_pc() #16
  br label %nested_down_write_ref_node.exit289

if.end15.sink.split.i.i.i.i287:                   ; preds = %if.else.i.i.i.i285.if.end15.sink.split.i.i.i.i287_crit_edge, %if.then.i282.if.end15.sink.split.i.i.i.i287_crit_edge
  %.sink.i.i.i.i286 = phi i32 [ 2, %if.then.i282.if.end15.sink.split.i.i.i.i287_crit_edge ], [ 1, %if.else.i.i.i.i285.if.end15.sink.split.i.i.i.i287_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i278, i32 noundef %.sink.i.i.i.i286) #14
  br label %nested_down_write_ref_node.exit289

nested_down_write_ref_node.exit289:               ; preds = %if.end15.sink.split.i.i.i.i287, %if.else.i.i.i.i285.nested_down_write_ref_node.exit289_crit_edge, %if.end60.i.nested_down_write_ref_node.exit289_crit_edge
  %refcount.i267 = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 6
  %call.i.i.i.i.i268 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i267, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  call void @llvm.prefetch.p0(ptr %refcount.i267, i32 1, i32 3, i32 1) #14
  %154 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i267, ptr %refcount.i267, i32 1, ptr elementtype(i32) %refcount.i267) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i269 = extractvalue { i32, i32, i32 } %154, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i269)
  %cmp.i.i.i270 = icmp slt i32 %asmresult.i.i.i.i.i.i269, 2
  br i1 %cmp.i.i.i270, label %if.then3.i.i.i271, label %nested_down_write_ref_node.exit289.up_write_ref_node.exit275_crit_edge, !prof !261

nested_down_write_ref_node.exit289.up_write_ref_node.exit275_crit_edge: ; preds = %nested_down_write_ref_node.exit289
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit275

if.then3.i.i.i271:                                ; preds = %nested_down_write_ref_node.exit289
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i267, i32 noundef 4) #14
  br label %up_write_ref_node.exit275

up_write_ref_node.exit275:                        ; preds = %if.then3.i.i.i271, %nested_down_write_ref_node.exit289.up_write_ref_node.exit275_crit_edge
  %lock.i272 = getelementptr inbounds %struct.fs_node, ptr %142, i32 0, i32 5
  call void @up_write(ptr noundef %lock.i272) #14
  %call63.i = call fastcc ptr @add_rule_fg(ptr noundef %142, ptr noundef %spec, ptr noundef %flow_act, ptr noundef %dest, i32 noundef %dest_num, ptr noundef %call1.i) #14
  %refcount.i258 = getelementptr inbounds %struct.fs_node, ptr %call1.i, i32 0, i32 6
  %call.i.i.i.i.i259 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i258, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  call void @llvm.prefetch.p0(ptr %refcount.i258, i32 1, i32 3, i32 1) #14
  %155 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i258, ptr %refcount.i258, i32 1, ptr elementtype(i32) %refcount.i258) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i260 = extractvalue { i32, i32, i32 } %155, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i260)
  %cmp.i.i.i261 = icmp slt i32 %asmresult.i.i.i.i.i.i260, 2
  br i1 %cmp.i.i.i261, label %if.then3.i.i.i262, label %up_write_ref_node.exit275.up_write_ref_node.exit266_crit_edge, !prof !261

up_write_ref_node.exit275.up_write_ref_node.exit266_crit_edge: ; preds = %up_write_ref_node.exit275
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit266

if.then3.i.i.i262:                                ; preds = %up_write_ref_node.exit275
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i258, i32 noundef 4) #14
  br label %up_write_ref_node.exit266

up_write_ref_node.exit266:                        ; preds = %if.then3.i.i.i262, %up_write_ref_node.exit275.up_write_ref_node.exit266_crit_edge
  %lock.i263 = getelementptr inbounds %struct.fs_node, ptr %call1.i, i32 0, i32 5
  call void @up_write(ptr noundef %lock.i263) #14
  %cmp.i177.i = icmp ugt ptr %call63.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i177.i, label %if.then66.i, label %up_write_ref_node.exit266.try_add_to_existing_fg.exit_crit_edge

up_write_ref_node.exit266.try_add_to_existing_fg.exit_crit_edge: ; preds = %up_write_ref_node.exit266
  call void @__sanitizer_cov_trace_pc() #16
  br label %try_add_to_existing_fg.exit

if.then66.i:                                      ; preds = %up_write_ref_node.exit266
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @tree_put_node(ptr noundef %call1.i, i1 noundef zeroext false) #14
  br label %try_add_to_existing_fg.exit

for.inc69.i:                                      ; preds = %up_write_ref_node.exit176.i.for.inc69.i_crit_edge, %up_write_ref_node.exit167.i
  %156 = ptrtoint ptr %iter.1185.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %iter.1.i = load ptr, ptr %iter.1185.i, align 4
  %cmp41.not.i = icmp eq ptr %iter.1.i, %match_head
  br i1 %cmp41.not.i, label %for.inc69.i.out.i_crit_edge, label %for.inc69.i.for.body43.i_crit_edge

for.inc69.i.for.body43.i_crit_edge:               ; preds = %for.inc69.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body43.i

for.inc69.i.out.i_crit_edge:                      ; preds = %for.inc69.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.i

out.i:                                            ; preds = %for.inc69.i.out.i_crit_edge, %if.end34.i206.out.i_crit_edge, %skip_search.i.out.i_crit_edge
  %rule.0.i = phi ptr [ inttoptr (i32 -2 to ptr), %if.end34.i206.out.i_crit_edge ], [ inttoptr (i32 -2 to ptr), %for.inc69.i.out.i_crit_edge ], [ inttoptr (i32 -11 to ptr), %skip_search.i.out.i_crit_edge ]
  %ftes_cache77.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %retval.0.i.i, i32 0, i32 3
  %157 = ptrtoint ptr %ftes_cache77.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %ftes_cache77.i, align 4
  call void @kmem_cache_free(ptr noundef %158, ptr noundef %call1.i) #14
  br label %try_add_to_existing_fg.exit

try_add_to_existing_fg.exit:                      ; preds = %out.i, %if.then66.i, %up_write_ref_node.exit266.try_add_to_existing_fg.exit_crit_edge, %if.end57.i, %cleanup.thread.i, %get_steering.exit.i.try_add_to_existing_fg.exit_crit_edge
  %retval.4.i = phi ptr [ %rule.0.i, %out.i ], [ %151, %if.end57.i ], [ %call63.i, %if.then66.i ], [ %call63.i, %up_write_ref_node.exit266.try_add_to_existing_fg.exit_crit_edge ], [ inttoptr (i32 -12 to ptr), %get_steering.exit.i.try_add_to_existing_fg.exit_crit_edge ], [ %call13.i, %cleanup.thread.i ]
  %159 = ptrtoint ptr %match_head to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %match_head, align 4
  %cmp.not20.i = icmp eq ptr %160, %match_head
  br i1 %cmp.not20.i, label %try_add_to_existing_fg.exit.free_match_list.exit_crit_edge, label %try_add_to_existing_fg.exit.for.body.i208_crit_edge

try_add_to_existing_fg.exit.for.body.i208_crit_edge: ; preds = %try_add_to_existing_fg.exit
  br label %for.body.i208

try_add_to_existing_fg.exit.free_match_list.exit_crit_edge: ; preds = %try_add_to_existing_fg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %free_match_list.exit

for.body.i208:                                    ; preds = %list_del.exit.i.for.body.i208_crit_edge, %try_add_to_existing_fg.exit.for.body.i208_crit_edge
  %iter.021.i = phi ptr [ %match_tmp.0.i, %list_del.exit.i.for.body.i208_crit_edge ], [ %160, %try_add_to_existing_fg.exit.for.body.i208_crit_edge ]
  %161 = ptrtoint ptr %iter.021.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %match_tmp.0.i = load ptr, ptr %iter.021.i, align 4
  %g.i = getelementptr inbounds %struct.match_list, ptr %iter.021.i, i32 0, i32 1
  %162 = ptrtoint ptr %g.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %g.i, align 4
  call fastcc void @tree_put_node(ptr noundef %163, i1 noundef zeroext %take_write.0.off0) #14
  %call.i.i.i207 = call zeroext i1 @__list_del_entry_valid(ptr noundef %iter.021.i) #14
  br i1 %call.i.i.i207, label %if.end.i.i.i210, label %for.body.i208.list_del.exit.i_crit_edge

for.body.i208.list_del.exit.i_crit_edge:          ; preds = %for.body.i208
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit.i

if.end.i.i.i210:                                  ; preds = %for.body.i208
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i209 = getelementptr inbounds %struct.list_head, ptr %iter.021.i, i32 0, i32 1
  %164 = ptrtoint ptr %prev.i.i.i209 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %prev.i.i.i209, align 4
  %166 = ptrtoint ptr %iter.021.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %iter.021.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %167, i32 0, i32 1
  %168 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store ptr %165, ptr %prev1.i.i.i.i, align 4
  %169 = ptrtoint ptr %165 to i32
  call void @__asan_store4_noabort(i32 %169)
  store volatile ptr %167, ptr %165, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i210, %for.body.i208.list_del.exit.i_crit_edge
  %170 = ptrtoint ptr %iter.021.i to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr inttoptr (i32 256 to ptr), ptr %iter.021.i, align 4
  %prev.i.i211 = getelementptr inbounds %struct.list_head, ptr %iter.021.i, i32 0, i32 1
  %171 = ptrtoint ptr %prev.i.i211 to i32
  call void @__asan_store4_noabort(i32 %171)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i211, align 4
  call void @kfree(ptr noundef %iter.021.i) #14
  %cmp.not.i212 = icmp eq ptr %match_tmp.0.i, %match_head
  br i1 %cmp.not.i212, label %list_del.exit.i.free_match_list.exit_crit_edge, label %list_del.exit.i.for.body.i208_crit_edge

list_del.exit.i.for.body.i208_crit_edge:          ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i208

list_del.exit.i.free_match_list.exit_crit_edge:   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %free_match_list.exit

free_match_list.exit:                             ; preds = %list_del.exit.i.free_match_list.exit_crit_edge, %try_add_to_existing_fg.exit.free_match_list.exit_crit_edge
  %cmp.i214 = icmp ugt ptr %retval.4.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i214, label %lor.lhs.false, label %free_match_list.exit.if.then32_crit_edge

free_match_list.exit.if.then32_crit_edge:         ; preds = %free_match_list.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then32

lor.lhs.false:                                    ; preds = %free_match_list.exit
  %magicptr = ptrtoint ptr %retval.4.i to i32
  %172 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %172, ptr @__sancov_gen_cov_switch_values.133)
  switch i32 %magicptr, label %lor.lhs.false.if.then32_crit_edge [
    i32 -2, label %lor.lhs.false.if.end37_crit_edge
    i32 -11, label %lor.lhs.false.if.end37_crit_edge379
  ]

lor.lhs.false.if.end37_crit_edge379:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37

lor.lhs.false.if.end37_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37

lor.lhs.false.if.then32_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then32

if.then32:                                        ; preds = %lor.lhs.false.if.then32_crit_edge, %free_match_list.exit.if.then32_crit_edge
  br i1 %take_write.0.off0, label %if.then34, label %if.then32.cleanup_crit_edge

if.then32.cleanup_crit_edge:                      ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then34:                                        ; preds = %if.then32
  %call.i.i.i.i.i216 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i185, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  call void @llvm.prefetch.p0(ptr %refcount.i185, i32 1, i32 3, i32 1) #14
  %173 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i185, ptr %refcount.i185, i32 1, ptr elementtype(i32) %refcount.i185) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i217 = extractvalue { i32, i32, i32 } %173, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i217)
  %cmp.i.i.i218 = icmp slt i32 %asmresult.i.i.i.i.i.i217, 2
  br i1 %cmp.i.i.i218, label %if.then3.i.i.i219, label %if.then34.up_write_ref_node.exit223_crit_edge, !prof !261

if.then34.up_write_ref_node.exit223_crit_edge:    ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit223

if.then3.i.i.i219:                                ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i185, i32 noundef 4) #14
  br label %up_write_ref_node.exit223

up_write_ref_node.exit223:                        ; preds = %if.then3.i.i.i219, %if.then34.up_write_ref_node.exit223_crit_edge
  call void @up_write(ptr noundef %lock.i190) #14
  br label %cleanup

if.end37:                                         ; preds = %lor.lhs.false.if.end37_crit_edge, %lor.lhs.false.if.end37_crit_edge379
  %brmerge = or i1 %tobool.not.i166, %take_write.0.off0
  br i1 %brmerge, label %if.end37.if.end41_crit_edge, label %if.then.i230

if.end37.if.end41_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41

if.then.i230:                                     ; preds = %if.end37
  call void @down_write_nested(ptr noundef %lock.i190, i32 noundef 0) #14
  %call.i.i.i.i.i.i227 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i185, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refcount.i185, i32 1, i32 3, i32 1) #14
  %174 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i185, ptr %refcount.i185, i32 1, ptr elementtype(i32) %refcount.i185) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i228 = extractvalue { i32, i32, i32 } %174, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i228)
  %tobool1.not.i.i.i.i229 = icmp eq i32 %asmresult.i.i.i.i.i.i228, 0
  br i1 %tobool1.not.i.i.i.i229, label %if.then.i230.if.end15.sink.split.i.i.i.i235_crit_edge, label %if.else.i.i.i.i233, !prof !261

if.then.i230.if.end15.sink.split.i.i.i.i235_crit_edge: ; preds = %if.then.i230
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i235

if.else.i.i.i.i233:                               ; preds = %if.then.i230
  %add.i.i.i.i231 = add i32 %asmresult.i.i.i.i.i.i228, 1
  %175 = or i32 %add.i.i.i.i231, %asmresult.i.i.i.i.i.i228
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %175)
  %.not.i.i.i.i232 = icmp sgt i32 %175, -1
  br i1 %.not.i.i.i.i232, label %if.else.i.i.i.i233.if.end41_crit_edge, label %if.else.i.i.i.i233.if.end15.sink.split.i.i.i.i235_crit_edge, !prof !259

if.else.i.i.i.i233.if.end15.sink.split.i.i.i.i235_crit_edge: ; preds = %if.else.i.i.i.i233
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i235

if.else.i.i.i.i233.if.end41_crit_edge:            ; preds = %if.else.i.i.i.i233
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41

if.end15.sink.split.i.i.i.i235:                   ; preds = %if.else.i.i.i.i233.if.end15.sink.split.i.i.i.i235_crit_edge, %if.then.i230.if.end15.sink.split.i.i.i.i235_crit_edge
  %.sink.i.i.i.i234 = phi i32 [ 2, %if.then.i230.if.end15.sink.split.i.i.i.i235_crit_edge ], [ 1, %if.else.i.i.i.i233.if.end15.sink.split.i.i.i.i235_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i185, i32 noundef %.sink.i.i.i.i234) #14
  br label %if.end41

if.end41:                                         ; preds = %if.end15.sink.split.i.i.i.i235, %if.else.i.i.i.i233.if.end41_crit_edge, %if.end37.if.end41_crit_edge
  %cmp43 = icmp eq ptr %retval.4.i, inttoptr (i32 -11 to ptr)
  br i1 %cmp43, label %if.end41.search_again_locked.backedge_crit_edge, label %lor.lhs.false44

if.end41.search_again_locked.backedge_crit_edge:  ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again_locked.backedge

lor.lhs.false44:                                  ; preds = %if.end41
  %call.i.i158 = call zeroext i1 @__kasan_check_read(ptr noundef %version9, i32 noundef 4) #14
  %176 = ptrtoint ptr %version9 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load volatile i32, ptr %version9, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %177)
  %cmp48.not = icmp eq i32 %49, %177
  br i1 %cmp48.not, label %if.end50, label %lor.lhs.false44.search_again_locked.backedge_crit_edge

lor.lhs.false44.search_again_locked.backedge_crit_edge: ; preds = %lor.lhs.false44
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again_locked.backedge

search_again_locked.backedge:                     ; preds = %lor.lhs.false44.search_again_locked.backedge_crit_edge, %if.end41.search_again_locked.backedge_crit_edge
  br label %search_again_locked

if.end50:                                         ; preds = %lor.lhs.false44
  %children.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 1
  %autogroup.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 8
  %max_fte1.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 8, i32 4
  %178 = ptrtoint ptr %max_fte1.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %max_fte1.i, align 4
  %180 = ptrtoint ptr %autogroup.i to i32
  call void @__asan_load1_noabort(i32 %180)
  %181 = load i8, ptr %autogroup.i, align 4, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %181)
  %tobool.not.i237 = icmp eq i8 %181, 0
  br i1 %tobool.not.i237, label %if.end50.if.then53_crit_edge, label %if.end.i239

if.end50.if.then53_crit_edge:                     ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then53

if.end.i239:                                      ; preds = %if.end50
  %num_groups.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 8, i32 3
  %182 = ptrtoint ptr %num_groups.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %num_groups.i, align 4
  %required_groups.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 8, i32 1
  %184 = ptrtoint ptr %required_groups.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %required_groups.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %183, i32 %185)
  %cmp.i238 = icmp ult i32 %183, %185
  br i1 %cmp.i238, label %if.end8.i, label %if.end.i239.if.end8.thread.i_crit_edge

if.end.i239.if.end8.thread.i_crit_edge:           ; preds = %if.end.i239
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.thread.i

if.end8.i:                                        ; preds = %if.end.i239
  %group_size7.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 8, i32 2
  %186 = ptrtoint ptr %group_size7.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %group_size7.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %187)
  %cmp9.i240 = icmp eq i32 %187, 0
  br i1 %cmp9.i240, label %if.end8.i.if.end8.thread.i_crit_edge, label %if.end8.i._crit_edge

if.end8.i._crit_edge:                             ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %188

if.end8.i.if.end8.thread.i_crit_edge:             ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.thread.i

if.end8.thread.i:                                 ; preds = %if.end8.i.if.end8.thread.i_crit_edge, %if.end.i239.if.end8.thread.i_crit_edge
  br label %188

188:                                              ; preds = %if.end8.thread.i, %if.end8.i._crit_edge
  %189 = phi i32 [ 1, %if.end8.thread.i ], [ %187, %if.end8.i._crit_edge ]
  %190 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %fg.079.i = load ptr, ptr %children.i, align 4
  %cmp17.not80.i = icmp eq ptr %fg.079.i, %children.i
  br i1 %cmp17.not80.i, label %.for.end.i242_crit_edge, label %for.body.i241.preheader

.for.end.i242_crit_edge:                          ; preds = %188
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i242

for.body.i241.preheader:                          ; preds = %188
  %start_index.i323 = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg.079.i, i32 0, i32 3
  %191 = ptrtoint ptr %start_index.i323 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %start_index.i323, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %189, i32 %192)
  %cmp18.i324 = icmp ugt i32 %189, %192
  br i1 %cmp18.i324, label %for.body.i241.preheader.if.then19.i_crit_edge, label %for.body.i241.preheader.for.end.i242_crit_edge

for.body.i241.preheader.for.end.i242_crit_edge:   ; preds = %for.body.i241.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i242

for.body.i241.preheader.if.then19.i_crit_edge:    ; preds = %for.body.i241.preheader
  br label %if.then19.i

for.body.i241:                                    ; preds = %if.then19.i
  %add.i = add i32 %add21.i, %189
  %start_index.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg.0.i, i32 0, i32 3
  %193 = ptrtoint ptr %start_index.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %start_index.i, align 4
  %cmp18.i = icmp ugt i32 %add.i, %194
  br i1 %cmp18.i, label %for.body.i241.if.then19.i_crit_edge, label %for.body.i241.for.end.i242_crit_edge

for.body.i241.for.end.i242_crit_edge:             ; preds = %for.body.i241
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i242

for.body.i241.if.then19.i_crit_edge:              ; preds = %for.body.i241
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then19.i

if.then19.i:                                      ; preds = %for.body.i241.if.then19.i_crit_edge, %for.body.i241.preheader.if.then19.i_crit_edge
  %195 = phi i32 [ %194, %for.body.i241.if.then19.i_crit_edge ], [ %192, %for.body.i241.preheader.if.then19.i_crit_edge ]
  %fg.083.i325 = phi ptr [ %fg.0.i, %for.body.i241.if.then19.i_crit_edge ], [ %fg.079.i, %for.body.i241.preheader.if.then19.i_crit_edge ]
  %max_ftes.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg.083.i325, i32 0, i32 4
  %196 = ptrtoint ptr %max_ftes.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %max_ftes.i, align 4
  %add21.i = add i32 %197, %195
  %198 = ptrtoint ptr %fg.083.i325 to i32
  call void @__asan_load4_noabort(i32 %198)
  %fg.0.i = load ptr, ptr %fg.083.i325, align 4
  %cmp17.not.i = icmp eq ptr %fg.0.i, %children.i
  br i1 %cmp17.not.i, label %if.then19.i.for.end.i242_crit_edge, label %for.body.i241

if.then19.i.for.end.i242_crit_edge:               ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i242

for.end.i242:                                     ; preds = %if.then19.i.for.end.i242_crit_edge, %for.body.i241.for.end.i242_crit_edge, %for.body.i241.preheader.for.end.i242_crit_edge, %.for.end.i242_crit_edge
  %candidate_index.0.lcssa.i = phi i32 [ 0, %.for.end.i242_crit_edge ], [ 0, %for.body.i241.preheader.for.end.i242_crit_edge ], [ %add21.i, %if.then19.i.for.end.i242_crit_edge ], [ %add21.i, %for.body.i241.for.end.i242_crit_edge ]
  %prev.0.lcssa.i = phi ptr [ %children.i, %.for.end.i242_crit_edge ], [ %children.i, %for.body.i241.preheader.for.end.i242_crit_edge ], [ %fg.083.i325, %if.then19.i.for.end.i242_crit_edge ], [ %fg.083.i325, %for.body.i241.for.end.i242_crit_edge ]
  %add31.i = add i32 %candidate_index.0.lcssa.i, %189
  call void @__sanitizer_cov_trace_cmp4(i32 %add31.i, i32 %179)
  %cmp32.i = icmp ugt i32 %add31.i, %179
  br i1 %cmp32.i, label %for.end.i242.if.then53_crit_edge, label %if.end35.i

for.end.i242.if.then53_crit_edge:                 ; preds = %for.end.i242
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then53

if.end35.i:                                       ; preds = %for.end.i242
  %199 = ptrtoint ptr %spec to i32
  call void @__asan_load1_noabort(i32 %199)
  %200 = load i8, ptr %spec, align 4
  %sub.i = add i32 %add31.i, -1
  %call37.i = call fastcc ptr @alloc_insert_flow_group(ptr noundef %ft, i8 noundef zeroext %200, ptr noundef %arrayidx1.i313, i32 noundef %candidate_index.0.lcssa.i, i32 noundef %sub.i, ptr noundef %prev.0.lcssa.i) #14
  %cmp.i.i243 = icmp ugt ptr %call37.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i243, label %if.end35.i.if.then53_crit_edge, label %if.end40.i

if.end35.i.if.then53_crit_edge:                   ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then53

if.end40.i:                                       ; preds = %if.end35.i
  %group_size42.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 8, i32 2
  %201 = ptrtoint ptr %group_size42.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %group_size42.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %189, i32 %202)
  %cmp43.i = icmp eq i32 %189, %202
  br i1 %cmp43.i, label %if.then44.i, label %if.end40.i.if.end56_crit_edge

if.end40.i.if.end56_crit_edge:                    ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end56

if.then44.i:                                      ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #16
  %203 = ptrtoint ptr %num_groups.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %num_groups.i, align 4
  %inc.i244 = add i32 %204, 1
  store i32 %inc.i244, ptr %num_groups.i, align 4
  br label %if.end56

if.then53:                                        ; preds = %if.end35.i.if.then53_crit_edge, %for.end.i242.if.then53_crit_edge, %if.end50.if.then53_crit_edge
  %retval.0.i245301 = phi ptr [ inttoptr (i32 -28 to ptr), %for.end.i242.if.then53_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.end50.if.then53_crit_edge ], [ %call37.i, %if.end35.i.if.then53_crit_edge ]
  %call.i.i.i.i.i248 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i185, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  call void @llvm.prefetch.p0(ptr %refcount.i185, i32 1, i32 3, i32 1) #14
  %205 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i185, ptr %refcount.i185, i32 1, ptr elementtype(i32) %refcount.i185) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i249 = extractvalue { i32, i32, i32 } %205, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i249)
  %cmp.i.i.i250 = icmp slt i32 %asmresult.i.i.i.i.i.i249, 2
  br i1 %cmp.i.i.i250, label %if.then3.i.i.i251, label %if.then53.up_write_ref_node.exit255_crit_edge, !prof !261

if.then53.up_write_ref_node.exit255_crit_edge:    ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit255

if.then3.i.i.i251:                                ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount.i185, i32 noundef 4) #14
  br label %up_write_ref_node.exit255

up_write_ref_node.exit255:                        ; preds = %if.then3.i.i.i251, %if.then53.up_write_ref_node.exit255_crit_edge
  call void @up_write(ptr noundef %lock.i190) #14
  br label %cleanup

if.end56:                                         ; preds = %if.then44.i, %if.end40.i.if.end56_crit_edge
  %call57 = call fastcc ptr @alloc_fte(ptr noundef %ft, ptr noundef %spec, ptr noundef %flow_act)
  %cmp.i256 = icmp ugt ptr %call57, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i256, label %if.then59, label %if.end62

if.then59:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @up_write_ref_node(ptr noundef %ft, i1 noundef zeroext false)
  %206 = ptrtoint ptr %call57 to i32
  br label %err_alloc_fte

if.end62:                                         ; preds = %if.end56
  call fastcc void @nested_down_write_ref_node(ptr noundef %call37.i, i32 noundef 1)
  call fastcc void @up_write_ref_node(ptr noundef %ft, i1 noundef zeroext false)
  %call65 = call fastcc i32 @create_auto_flow_group(ptr noundef %ft, ptr noundef %call37.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %if.end68, label %if.end62.err_release_fg_crit_edge

if.end62.err_release_fg_crit_edge:                ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_release_fg

if.end68:                                         ; preds = %if.end62
  %call69 = call fastcc i32 @insert_fte(ptr noundef %call37.i, ptr noundef %call57)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call69)
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %if.end72, label %if.end68.err_release_fg_crit_edge

if.end68.err_release_fg_crit_edge:                ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_release_fg

if.end72:                                         ; preds = %if.end68
  call fastcc void @nested_down_write_ref_node(ptr noundef %call57, i32 noundef 2)
  call fastcc void @up_write_ref_node(ptr noundef %call37.i, i1 noundef zeroext false)
  %call75 = call fastcc ptr @add_rule_fg(ptr noundef %call37.i, ptr noundef %spec, ptr noundef %flow_act, ptr noundef %dest, i32 noundef %dest_num, ptr noundef %call57)
  call fastcc void @up_write_ref_node(ptr noundef %call57, i1 noundef zeroext false)
  %cmp.i257 = icmp ugt ptr %call75, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i257, label %if.then78, label %if.end72.if.end80_crit_edge

if.end72.if.end80_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end80

if.then78:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @tree_put_node(ptr noundef %call57, i1 noundef zeroext false)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %if.end72.if.end80_crit_edge
  call fastcc void @tree_put_node(ptr noundef %call37.i, i1 noundef zeroext false)
  br label %cleanup

err_release_fg:                                   ; preds = %if.end68.err_release_fg_crit_edge, %if.end62.err_release_fg_crit_edge
  %err.0 = phi i32 [ %call65, %if.end62.err_release_fg_crit_edge ], [ %call69, %if.end68.err_release_fg_crit_edge ]
  call fastcc void @up_write_ref_node(ptr noundef %call37.i, i1 noundef zeroext false)
  %ftes_cache = getelementptr inbounds %struct.mlx5_flow_steering, ptr %retval.0.i, i32 0, i32 3
  %207 = ptrtoint ptr %ftes_cache to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %ftes_cache, align 4
  call void @kmem_cache_free(ptr noundef %208, ptr noundef %call57) #14
  br label %err_alloc_fte

err_alloc_fte:                                    ; preds = %err_release_fg, %if.then59
  %err.1 = phi i32 [ %206, %if.then59 ], [ %err.0, %err_release_fg ]
  call fastcc void @tree_put_node(ptr noundef %call37.i, i1 noundef zeroext false)
  %209 = inttoptr i32 %err.1 to ptr
  br label %cleanup

cleanup:                                          ; preds = %err_alloc_fte, %if.end80, %up_write_ref_node.exit255, %up_write_ref_node.exit223, %if.then32.cleanup_crit_edge, %up_read_ref_node.exit, %up_write_ref_node.exit, %dest_is_valid.exit.cleanup_crit_edge, %land.lhs.true28.i.cleanup_crit_edge, %if.end24.i.cleanup_crit_edge, %land.lhs.true18.i.cleanup_crit_edge, %if.then8.i.cleanup_crit_edge, %check_valid_spec.exit.cleanup_crit_edge, %do.end.i.cleanup_crit_edge, %do.end.i.thread
  %retval.0 = phi ptr [ %retval.0.i245301, %up_write_ref_node.exit255 ], [ %209, %err_alloc_fte ], [ %call75, %if.end80 ], [ %retval.4.i, %up_write_ref_node.exit223 ], [ %retval.4.i, %if.then32.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %check_valid_spec.exit.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %up_read_ref_node.exit ], [ inttoptr (i32 -12 to ptr), %up_write_ref_node.exit ], [ inttoptr (i32 -22 to ptr), %do.end.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %do.end.i.thread ], [ inttoptr (i32 -22 to ptr), %dest_is_valid.exit.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then8.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %land.lhs.true18.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %land.lhs.true28.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end24.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %match_head) #14
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_del_flow_rules(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %rule = getelementptr inbounds %struct.mlx5_flow_handle, ptr %handle, i32 0, i32 1
  %0 = ptrtoint ptr %rule to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rule, align 4
  %parent = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.down_write_ref_node.exit_crit_edge, label %if.then.i

entry.down_write_ref_node.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %down_write_ref_node.exit

if.then.i:                                        ; preds = %entry
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 5
  tail call void @down_write(ptr noundef %lock.i) #14
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %5 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %.not.i.i.i.i = icmp sgt i32 %5, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.down_write_ref_node.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %down_write_ref_node.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #14
  br label %down_write_ref_node.exit

down_write_ref_node.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.down_write_ref_node.exit_crit_edge, %entry.down_write_ref_node.exit_crit_edge
  %6 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %handle, align 4
  %i.067 = add i32 %7, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.067)
  %cmp68 = icmp sgt i32 %i.067, -1
  br i1 %cmp68, label %down_write_ref_node.exit.for.body_crit_edge, label %down_write_ref_node.exit.for.end_crit_edge

down_write_ref_node.exit.for.end_crit_edge:       ; preds = %down_write_ref_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

down_write_ref_node.exit.for.body_crit_edge:      ; preds = %down_write_ref_node.exit
  br label %for.body

for.body:                                         ; preds = %tree_remove_node.exit.for.body_crit_edge, %down_write_ref_node.exit.for.body_crit_edge
  %i.069 = phi i32 [ %i.0, %tree_remove_node.exit.for.body_crit_edge ], [ %i.067, %down_write_ref_node.exit.for.body_crit_edge ]
  %arrayidx3 = getelementptr %struct.mlx5_flow_handle, ptr %handle, i32 0, i32 1, i32 %i.069
  %8 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx3, align 4
  %refcount.i35 = getelementptr inbounds %struct.fs_node, ptr %9, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcount.i35, i32 noundef 4) #14
  %10 = ptrtoint ptr %refcount.i35 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %refcount.i35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp.i = icmp ugt i32 %11, 1
  br i1 %cmp.i, label %if.then.i37, label %if.end.i

if.then.i37:                                      ; preds = %for.body
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i35, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i35, i32 1, i32 3, i32 1) #14
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i35, ptr %refcount.i35, i32 1, ptr elementtype(i32) %refcount.i35) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i36 = extractvalue { i32, i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i36)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i36, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.i37.tree_remove_node.exit_crit_edge, !prof !261

if.then.i37.tree_remove_node.exit_crit_edge:      ; preds = %if.then.i37
  call void @__sanitizer_cov_trace_pc() #16
  br label %tree_remove_node.exit

if.then3.i.i.i:                                   ; preds = %if.then.i37
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i35, i32 noundef 4) #14
  br label %tree_remove_node.exit

if.end.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @tree_put_node(ptr noundef %9, i1 noundef zeroext true) #14
  br label %tree_remove_node.exit

tree_remove_node.exit:                            ; preds = %if.end.i, %if.then3.i.i.i, %if.then.i37.tree_remove_node.exit_crit_edge
  %i.0 = add i32 %i.069, -1
  %cmp = icmp sgt i32 %i.0, -1
  br i1 %cmp, label %tree_remove_node.exit.for.body_crit_edge, label %tree_remove_node.exit.for.end_crit_edge

tree_remove_node.exit.for.end_crit_edge:          ; preds = %tree_remove_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

tree_remove_node.exit.for.body_crit_edge:         ; preds = %tree_remove_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %tree_remove_node.exit.for.end_crit_edge, %down_write_ref_node.exit.for.end_crit_edge
  %dests_size = getelementptr inbounds %struct.fs_fte, ptr %3, i32 0, i32 3
  %13 = ptrtoint ptr %dests_size to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %dests_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not = icmp eq i32 %14, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %for.end
  %modify_mask = getelementptr inbounds %struct.fs_fte, ptr %3, i32 0, i32 10
  %15 = ptrtoint ptr %modify_mask to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %modify_mask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool5.not = icmp eq i32 %16, 0
  br i1 %tobool5.not, label %if.then.if.end_crit_edge, label %if.then6

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then6:                                         ; preds = %if.then
  %parent.i = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 3
  %17 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %parent.i, align 4
  %parent3.i = getelementptr inbounds %struct.fs_node, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %parent3.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %parent3.i, align 4
  %root1.i.i.i = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 4
  %21 = ptrtoint ptr %root1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %root1.i.i.i, align 4
  %type.i.i.i = getelementptr inbounds %struct.fs_node, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp.not.i.i.i = icmp eq i32 %24, 0
  br i1 %cmp.not.i.i.i, label %find_root.exit.i.i, label %find_root.exit.thread.i.i, !prof !259

find_root.exit.thread.i.i:                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit.i

find_root.exit.i.i:                               ; preds = %if.then6
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %find_root.exit.i.i.get_dev.exit.i_crit_edge, label %if.then.i.i

find_root.exit.i.i.get_dev.exit.i_crit_edge:      ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit.i

if.then.i.i:                                      ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %22, i32 0, i32 4
  %25 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dev.i.i, align 4
  br label %get_dev.exit.i

get_dev.exit.i:                                   ; preds = %if.then.i.i, %find_root.exit.i.i.get_dev.exit.i_crit_edge, %find_root.exit.thread.i.i
  %retval.0.i.i = phi ptr [ %26, %if.then.i.i ], [ null, %find_root.exit.i.i.get_dev.exit.i_crit_edge ], [ null, %find_root.exit.thread.i.i ]
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %20, i32 0, i32 4
  %27 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp.not.i.i = icmp eq i32 %30, 0
  br i1 %cmp.not.i.i, label %get_dev.exit.i.find_root.exit.i_crit_edge, label %do.end.i.i, !prof !259

get_dev.exit.i.find_root.exit.i_crit_edge:        ; preds = %get_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit.i

do.end.i.i:                                       ; preds = %get_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit.i

find_root.exit.i:                                 ; preds = %do.end.i.i, %get_dev.exit.i.find_root.exit.i_crit_edge
  %retval.0.i21.i = phi ptr [ null, %do.end.i.i ], [ %28, %get_dev.exit.i.find_root.exit.i_crit_edge ]
  %cmds.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i21.i, i32 0, i32 8
  %31 = ptrtoint ptr %cmds.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %cmds.i, align 4
  %update_fte.i = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %32, i32 0, i32 6
  %33 = ptrtoint ptr %update_fte.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %update_fte.i, align 4
  %35 = ptrtoint ptr %modify_mask to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %modify_mask, align 4
  %call9.i = tail call i32 %34(ptr noundef %retval.0.i21.i, ptr noundef %20, ptr noundef %18, i32 noundef %36, ptr noundef %3) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool.not.i38 = icmp eq i32 %call9.i, 0
  br i1 %tobool.not.i38, label %find_root.exit.i.modify_fte.exit_crit_edge, label %do.end.i

find_root.exit.i.modify_fte.exit_crit_edge:       ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %modify_fte.exit

do.end.i:                                         ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %37 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %retval.0.i.i, align 8
  %39 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %42, i32 0, i32 68
  %43 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %pid.i, align 8
  %id.i = getelementptr inbounds %struct.mlx5_flow_group, ptr %18, i32 0, i32 6
  %45 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %id.i, align 4
  %index.i = getelementptr inbounds %struct.fs_fte, ptr %3, i32 0, i32 4
  %47 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %index.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %38, ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.64, i32 noundef 543, i32 noundef %44, ptr noundef nonnull @.str.64, i32 noundef %46, i32 noundef %48) #17
  br label %modify_fte.exit

modify_fte.exit:                                  ; preds = %do.end.i, %find_root.exit.i.modify_fte.exit_crit_edge
  %49 = ptrtoint ptr %modify_mask to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %modify_mask, align 4
  br label %if.end

if.end:                                           ; preds = %modify_fte.exit, %if.then.if.end_crit_edge
  %refcount.i40 = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 6
  %call.i.i.i.i.i41 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i40, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i40, i32 1, i32 3, i32 1) #14
  %50 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i40, ptr %refcount.i40, i32 1, ptr elementtype(i32) %refcount.i40) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i42 = extractvalue { i32, i32, i32 } %50, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i42)
  %cmp.i.i.i43 = icmp slt i32 %asmresult.i.i.i.i.i.i42, 2
  br i1 %cmp.i.i.i43, label %if.then3.i.i.i44, label %if.end.up_write_ref_node.exit_crit_edge, !prof !261

if.end.up_write_ref_node.exit_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit

if.then3.i.i.i44:                                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i40, i32 noundef 4) #14
  br label %up_write_ref_node.exit

up_write_ref_node.exit:                           ; preds = %if.then3.i.i.i44, %if.end.up_write_ref_node.exit_crit_edge
  %lock.i45 = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 5
  tail call void @up_write(ptr noundef %lock.i45) #14
  br label %if.end19

if.else:                                          ; preds = %for.end
  %children = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 1
  %51 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %children, align 4
  %cmp.i48.not = icmp eq ptr %52, %children
  br i1 %cmp.i48.not, label %if.then11, label %if.else16

if.then11:                                        ; preds = %if.else
  tail call void @del_hw_fte(ptr noundef %3)
  %del_hw_func = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 8
  %53 = ptrtoint ptr %del_hw_func to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %del_hw_func, align 4
  %refcount.i49 = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 6
  %call.i.i.i.i.i50 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i49, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i49, i32 1, i32 3, i32 1) #14
  %54 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i49, ptr %refcount.i49, i32 1, ptr elementtype(i32) %refcount.i49) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i51 = extractvalue { i32, i32, i32 } %54, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i51)
  %cmp.i.i.i52 = icmp slt i32 %asmresult.i.i.i.i.i.i51, 2
  br i1 %cmp.i.i.i52, label %if.then3.i.i.i53, label %if.then11.up_write_ref_node.exit57_crit_edge, !prof !261

if.then11.up_write_ref_node.exit57_crit_edge:     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit57

if.then3.i.i.i53:                                 ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i49, i32 noundef 4) #14
  br label %up_write_ref_node.exit57

up_write_ref_node.exit57:                         ; preds = %if.then3.i.i.i53, %if.then11.up_write_ref_node.exit57_crit_edge
  %lock.i54 = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 5
  tail call void @up_write(ptr noundef %lock.i54) #14
  tail call fastcc void @tree_put_node(ptr noundef %3, i1 noundef zeroext false)
  br label %if.end19

if.else16:                                        ; preds = %if.else
  %refcount.i58 = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 6
  %call.i.i.i.i.i59 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i58, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i58, i32 1, i32 3, i32 1) #14
  %55 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i58, ptr %refcount.i58, i32 1, ptr elementtype(i32) %refcount.i58) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i60 = extractvalue { i32, i32, i32 } %55, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i60)
  %cmp.i.i.i61 = icmp slt i32 %asmresult.i.i.i.i.i.i60, 2
  br i1 %cmp.i.i.i61, label %if.then3.i.i.i62, label %if.else16.up_write_ref_node.exit66_crit_edge, !prof !261

if.else16.up_write_ref_node.exit66_crit_edge:     ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #16
  br label %up_write_ref_node.exit66

if.then3.i.i.i62:                                 ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i58, i32 noundef 4) #14
  br label %up_write_ref_node.exit66

up_write_ref_node.exit66:                         ; preds = %if.then3.i.i.i62, %if.else16.up_write_ref_node.exit66_crit_edge
  %lock.i63 = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 5
  tail call void @up_write(ptr noundef %lock.i63) #14
  br label %if.end19

if.end19:                                         ; preds = %up_write_ref_node.exit66, %up_write_ref_node.exit57, %up_write_ref_node.exit
  tail call void @kfree(ptr noundef %handle) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_hw_fte(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %parent = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 3
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 4
  %parent7 = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %parent7 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent7, align 4
  tail call fastcc void @trace_mlx5_fs_del_fte(ptr noundef %node)
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.not.i.i = icmp eq i32 %7, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit

find_root.exit.i:                                 ; preds = %entry
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_dev.exit_crit_edge, label %if.then.i

find_root.exit.i.get_dev.exit_crit_edge:          ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit

if.then.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %5, i32 0, i32 4
  %8 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev.i, align 4
  br label %get_dev.exit

get_dev.exit:                                     ; preds = %if.then.i, %find_root.exit.i.get_dev.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i = phi ptr [ %9, %if.then.i ], [ null, %find_root.exit.i.get_dev.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  %10 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %root1.i.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp.not.i = icmp eq i32 %13, 0
  br i1 %cmp.not.i, label %get_dev.exit.find_root.exit_crit_edge, label %do.end.i, !prof !259

get_dev.exit.find_root.exit_crit_edge:            ; preds = %get_dev.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %get_dev.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %get_dev.exit.find_root.exit_crit_edge
  %retval.0.i28 = phi ptr [ null, %do.end.i ], [ %11, %get_dev.exit.find_root.exit_crit_edge ]
  %active = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 7
  %14 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %active, align 4, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not = icmp eq i8 %15, 0
  br i1 %tobool.not, label %find_root.exit.if.end18_crit_edge, label %if.then

find_root.exit.if.end18_crit_edge:                ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18

if.then:                                          ; preds = %find_root.exit
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i28, i32 0, i32 8
  %16 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cmds, align 4
  %delete_fte = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %17, i32 0, i32 7
  %18 = ptrtoint ptr %delete_fte to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %delete_fte, align 4
  %call13 = tail call i32 %19(ptr noundef %retval.0.i28, ptr noundef %3, ptr noundef %node) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.then.if.end_crit_edge, label %do.end

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %20 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %retval.0.i, align 8
  %22 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 68
  %26 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %pid, align 8
  %index = getelementptr inbounds %struct.fs_fte, ptr %node, i32 0, i32 4
  %28 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %index, align 4
  %id = getelementptr inbounds %struct.mlx5_flow_group, ptr %1, i32 0, i32 6
  %30 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %id, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %21, ptr noundef nonnull @.str.65, ptr noundef nonnull @.str.66, i32 noundef 607, i32 noundef %27, i32 noundef %29, i32 noundef %31) #17
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then.if.end_crit_edge
  %32 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 0, ptr %active, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.end, %find_root.exit.if.end18_crit_edge
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_destroy_flow_group(ptr noundef %fg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcount.i, i32 noundef 4) #14
  %0 = ptrtoint ptr %refcount.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %refcount.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp ugt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %tree_remove_node.exit

if.then.i:                                        ; preds = %entry
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.i.do.end_crit_edge, !prof !261

if.then.i.do.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then3.i.i.i:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 4) #14
  br label %do.end

tree_remove_node.exit:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @tree_put_node(ptr noundef %fg, i1 noundef zeroext false) #14
  br label %if.end

do.end:                                           ; preds = %if.then3.i.i.i, %if.then.i.do.end_crit_edge
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 4
  %3 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.not.i.i = icmp eq i32 %6, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit

find_root.exit.i:                                 ; preds = %do.end
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_dev.exit_crit_edge, label %if.then.i6

find_root.exit.i.get_dev.exit_crit_edge:          ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit

if.then.i6:                                       ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %4, i32 0, i32 4
  %7 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev.i, align 4
  br label %get_dev.exit

get_dev.exit:                                     ; preds = %if.then.i6, %find_root.exit.i.get_dev.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i7 = phi ptr [ %8, %if.then.i6 ], [ null, %find_root.exit.i.get_dev.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  %9 = ptrtoint ptr %retval.0.i7 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %retval.0.i7, align 8
  %11 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 68
  %15 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pid, align 8
  %id = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 6
  %17 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %id, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %10, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.8, i32 noundef 2196, i32 noundef %16, i32 noundef %18) #17
  br label %if.end

if.end:                                           ; preds = %get_dev.exit, %tree_remove_node.exit
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @mlx5_get_fdb_sub_ns(ptr nocapture noundef readonly %dev, i32 noundef %n) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering1 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %fdb_sub_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %fdb_sub_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fdb_sub_ns, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx = getelementptr ptr, ptr %3, i32 %n
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %5, %if.end ], [ null, %lor.lhs.false.cleanup_crit_edge ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_get_flow_namespace(ptr nocapture noundef readonly %dev, i32 noundef %type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering1 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.134)
  switch i32 %type, label %sw.default [
    i32 8, label %sw.bb
    i32 18, label %sw.bb7
    i32 11, label %sw.bb13
    i32 12, label %sw.bb19
    i32 7, label %sw.bb25
    i32 13, label %if.end.sw.bb27_crit_edge
    i32 14, label %if.end.sw.bb27_crit_edge109
    i32 15, label %sw.bb28
    i32 16, label %sw.bb29
    i32 17, label %sw.bb31
    i32 19, label %sw.bb32
    i32 20, label %sw.bb34
  ]

if.end.sw.bb27_crit_edge109:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb27

if.end.sw.bb27_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb27

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %fdb_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 5
  br label %cleanup.sink.split

sw.bb7:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %port_sel_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 14
  br label %cleanup.sink.split

sw.bb13:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %sniffer_rx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 10
  br label %cleanup.sink.split

sw.bb19:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %sniffer_tx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 9
  br label %cleanup.sink.split

sw.bb25:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %fdb_root_ns26 = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 5
  br label %sw.epilog

sw.bb27:                                          ; preds = %if.end.sw.bb27_crit_edge, %if.end.sw.bb27_crit_edge109
  %egress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 13
  %sub = add nsw i32 %type, -13
  br label %sw.epilog

sw.bb28:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_rx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 11
  br label %sw.epilog

sw.bb29:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_rx_root_ns30 = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 11
  br label %sw.epilog

sw.bb31:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_tx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 12
  br label %sw.epilog

sw.bb32:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_rx_root_ns33 = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 11
  br label %sw.epilog

sw.bb34:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_tx_root_ns35 = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 12
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %type)
  %switch.i = icmp ult i32 %type, 7
  br i1 %switch.i, label %sw.default.if.end51_crit_edge, label %do.end, !prof !259

sw.default.if.end51_crit_edge:                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end51

do.end:                                           ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2286, i32 noundef 9, ptr noundef null) #14
  br label %if.end51

if.end51:                                         ; preds = %do.end, %sw.default.if.end51_crit_edge
  %root_ns58 = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end51, %sw.bb34, %sw.bb32, %sw.bb31, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb25
  %prio.0 = phi i32 [ %type, %if.end51 ], [ 0, %sw.bb34 ], [ 0, %sw.bb32 ], [ 0, %sw.bb31 ], [ 2, %sw.bb29 ], [ 1, %sw.bb28 ], [ %sub, %sw.bb27 ], [ 0, %sw.bb25 ]
  %root_ns.0.in = phi ptr [ %root_ns58, %if.end51 ], [ %rdma_tx_root_ns35, %sw.bb34 ], [ %rdma_rx_root_ns33, %sw.bb32 ], [ %rdma_tx_root_ns, %sw.bb31 ], [ %rdma_rx_root_ns30, %sw.bb29 ], [ %rdma_rx_root_ns, %sw.bb28 ], [ %egress_root_ns, %sw.bb27 ], [ %fdb_root_ns26, %sw.bb25 ]
  %3 = ptrtoint ptr %root_ns.0.in to i32
  call void @__asan_load4_noabort(i32 %3)
  %root_ns.0 = load ptr, ptr %root_ns.0.in, align 4
  %tobool59.not = icmp eq ptr %root_ns.0, null
  br i1 %tobool59.not, label %sw.epilog.cleanup_crit_edge, label %if.end61

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end61:                                         ; preds = %sw.epilog
  %children.i = getelementptr inbounds %struct.fs_node, ptr %root_ns.0, i32 0, i32 1
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end61
  %iter_prio.0.in.i = phi ptr [ %children.i, %if.end61 ], [ %iter_prio.0.i, %for.body.i.for.cond.i_crit_edge ]
  %4 = ptrtoint ptr %iter_prio.0.in.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %iter_prio.0.i = load ptr, ptr %iter_prio.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %iter_prio.0.i, %children.i
  br i1 %cmp.not.i, label %for.cond.i.cleanup_crit_edge, label %for.body.i

for.cond.i.cleanup_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.i:                                       ; preds = %for.cond.i
  %prio4.i = getelementptr inbounds %struct.fs_prio, ptr %iter_prio.0.i, i32 0, i32 3
  %5 = ptrtoint ptr %prio4.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %prio4.i, align 4
  %cmp5.i = icmp eq i32 %6, %prio.0
  br i1 %cmp5.i, label %find_prio.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i

find_prio.exit:                                   ; preds = %for.body.i
  %tobool64.not = icmp eq ptr %iter_prio.0.i, null
  br i1 %tobool64.not, label %find_prio.exit.cleanup_crit_edge, label %if.end66

find_prio.exit.cleanup_crit_edge:                 ; preds = %find_prio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end66:                                         ; preds = %find_prio.exit
  call void @__sanitizer_cov_trace_pc() #16
  %children = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i, i32 0, i32 1
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end66, %sw.bb19, %sw.bb13, %sw.bb7, %sw.bb
  %sniffer_tx_root_ns.sink = phi ptr [ %sniffer_tx_root_ns, %sw.bb19 ], [ %sniffer_rx_root_ns, %sw.bb13 ], [ %port_sel_root_ns, %sw.bb7 ], [ %fdb_root_ns, %sw.bb ], [ %children, %if.end66 ]
  %7 = ptrtoint ptr %sniffer_tx_root_ns.sink to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sniffer_tx_root_ns.sink, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %find_prio.exit.cleanup_crit_edge, %for.cond.i.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %sw.epilog.cleanup_crit_edge ], [ null, %find_prio.exit.cleanup_crit_edge ], [ %8, %cleanup.sink.split ], [ null, %for.cond.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @mlx5_get_flow_vport_acl_namespace(ptr nocapture noundef readonly %dev, i32 noundef %type, i32 noundef %vport) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering1 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.135)
  switch i32 %type, label %if.end.cleanup_crit_edge [
    i32 9, label %sw.bb
    i32 10, label %sw.bb10
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb:                                            ; preds = %if.end
  %esw_egress_acl_vports = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 15
  %3 = ptrtoint ptr %esw_egress_acl_vports to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %esw_egress_acl_vports, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %vport)
  %cmp.not = icmp sgt i32 %4, %vport
  br i1 %cmp.not, label %if.end3, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %sw.bb
  %esw_egress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 7
  %5 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %esw_egress_root_ns, align 4
  %tobool4.not = icmp eq ptr %6, null
  br i1 %tobool4.not, label %if.end3.if.else_crit_edge, label %land.lhs.true

if.end3.if.else_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %if.end3
  %arrayidx = getelementptr ptr, ptr %6, i32 %vport
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %tobool6.not = icmp eq ptr %8, null
  br i1 %tobool6.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end3.if.else_crit_edge
  br label %cleanup

sw.bb10:                                          ; preds = %if.end
  %esw_ingress_acl_vports = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 16
  %9 = ptrtoint ptr %esw_ingress_acl_vports to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %esw_ingress_acl_vports, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %vport)
  %cmp11.not = icmp sgt i32 %10, %vport
  br i1 %cmp11.not, label %if.end13, label %sw.bb10.cleanup_crit_edge

sw.bb10.cleanup_crit_edge:                        ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end13:                                         ; preds = %sw.bb10
  %esw_ingress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 8
  %11 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %esw_ingress_root_ns, align 4
  %tobool14.not = icmp eq ptr %12, null
  br i1 %tobool14.not, label %if.end13.if.else23_crit_edge, label %land.lhs.true15

if.end13.if.else23_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else23

land.lhs.true15:                                  ; preds = %if.end13
  %arrayidx17 = getelementptr ptr, ptr %12, i32 %vport
  %13 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx17, align 4
  %tobool18.not = icmp eq ptr %14, null
  br i1 %tobool18.not, label %land.lhs.true15.if.else23_crit_edge, label %land.lhs.true15.cleanup_crit_edge

land.lhs.true15.cleanup_crit_edge:                ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true15.if.else23_crit_edge:              ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else23

if.else23:                                        ; preds = %land.lhs.true15.if.else23_crit_edge, %if.end13.if.else23_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.else23, %land.lhs.true15.cleanup_crit_edge, %sw.bb10.cleanup_crit_edge, %if.else, %land.lhs.true.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.else23 ], [ null, %if.else ], [ null, %entry.cleanup_crit_edge ], [ null, %sw.bb.cleanup_crit_edge ], [ %8, %land.lhs.true.cleanup_crit_edge ], [ null, %sw.bb10.cleanup_crit_edge ], [ %14, %land.lhs.true15.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_cleanup_fs(ptr noundef %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering1 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1, align 4
  %root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %root_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root_ns, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.cleanup_root_ns.exit_crit_edge, label %if.end.i

entry.cleanup_root_ns.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %3) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i, %entry.cleanup_root_ns.exit_crit_edge
  %fdb_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fdb_root_ns, align 4
  %tobool.not.i19 = icmp eq ptr %5, null
  br i1 %tobool.not.i19, label %cleanup_root_ns.exit.cleanup_root_ns.exit21_crit_edge, label %if.end.i20

cleanup_root_ns.exit.cleanup_root_ns.exit21_crit_edge: ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit21

if.end.i20:                                       ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %5) #14
  br label %cleanup_root_ns.exit21

cleanup_root_ns.exit21:                           ; preds = %if.end.i20, %cleanup_root_ns.exit.cleanup_root_ns.exit21_crit_edge
  %6 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %fdb_root_ns, align 4
  %fdb_sub_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 6
  %7 = ptrtoint ptr %fdb_sub_ns to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fdb_sub_ns, align 4
  tail call void @kfree(ptr noundef %8) #14
  %9 = ptrtoint ptr %fdb_sub_ns to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %fdb_sub_ns, align 4
  %port_sel_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 14
  %10 = ptrtoint ptr %port_sel_root_ns to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %port_sel_root_ns, align 4
  %tobool.not.i22 = icmp eq ptr %11, null
  br i1 %tobool.not.i22, label %cleanup_root_ns.exit21.cleanup_root_ns.exit24_crit_edge, label %if.end.i23

cleanup_root_ns.exit21.cleanup_root_ns.exit24_crit_edge: ; preds = %cleanup_root_ns.exit21
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit24

if.end.i23:                                       ; preds = %cleanup_root_ns.exit21
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %11) #14
  br label %cleanup_root_ns.exit24

cleanup_root_ns.exit24:                           ; preds = %if.end.i23, %cleanup_root_ns.exit21.cleanup_root_ns.exit24_crit_edge
  %sniffer_rx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 10
  %12 = ptrtoint ptr %sniffer_rx_root_ns to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sniffer_rx_root_ns, align 4
  %tobool.not.i25 = icmp eq ptr %13, null
  br i1 %tobool.not.i25, label %cleanup_root_ns.exit24.cleanup_root_ns.exit27_crit_edge, label %if.end.i26

cleanup_root_ns.exit24.cleanup_root_ns.exit27_crit_edge: ; preds = %cleanup_root_ns.exit24
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit27

if.end.i26:                                       ; preds = %cleanup_root_ns.exit24
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %13) #14
  br label %cleanup_root_ns.exit27

cleanup_root_ns.exit27:                           ; preds = %if.end.i26, %cleanup_root_ns.exit24.cleanup_root_ns.exit27_crit_edge
  %sniffer_tx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 9
  %14 = ptrtoint ptr %sniffer_tx_root_ns to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sniffer_tx_root_ns, align 4
  %tobool.not.i28 = icmp eq ptr %15, null
  br i1 %tobool.not.i28, label %cleanup_root_ns.exit27.cleanup_root_ns.exit30_crit_edge, label %if.end.i29

cleanup_root_ns.exit27.cleanup_root_ns.exit30_crit_edge: ; preds = %cleanup_root_ns.exit27
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit30

if.end.i29:                                       ; preds = %cleanup_root_ns.exit27
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %15) #14
  br label %cleanup_root_ns.exit30

cleanup_root_ns.exit30:                           ; preds = %if.end.i29, %cleanup_root_ns.exit27.cleanup_root_ns.exit30_crit_edge
  %rdma_rx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 11
  %16 = ptrtoint ptr %rdma_rx_root_ns to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rdma_rx_root_ns, align 4
  %tobool.not.i31 = icmp eq ptr %17, null
  br i1 %tobool.not.i31, label %cleanup_root_ns.exit30.cleanup_root_ns.exit33_crit_edge, label %if.end.i32

cleanup_root_ns.exit30.cleanup_root_ns.exit33_crit_edge: ; preds = %cleanup_root_ns.exit30
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit33

if.end.i32:                                       ; preds = %cleanup_root_ns.exit30
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %17) #14
  br label %cleanup_root_ns.exit33

cleanup_root_ns.exit33:                           ; preds = %if.end.i32, %cleanup_root_ns.exit30.cleanup_root_ns.exit33_crit_edge
  %rdma_tx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 12
  %18 = ptrtoint ptr %rdma_tx_root_ns to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %rdma_tx_root_ns, align 4
  %tobool.not.i34 = icmp eq ptr %19, null
  br i1 %tobool.not.i34, label %cleanup_root_ns.exit33.cleanup_root_ns.exit36_crit_edge, label %if.end.i35

cleanup_root_ns.exit33.cleanup_root_ns.exit36_crit_edge: ; preds = %cleanup_root_ns.exit33
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit36

if.end.i35:                                       ; preds = %cleanup_root_ns.exit33
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %19) #14
  br label %cleanup_root_ns.exit36

cleanup_root_ns.exit36:                           ; preds = %if.end.i35, %cleanup_root_ns.exit33.cleanup_root_ns.exit36_crit_edge
  %egress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 13
  %20 = ptrtoint ptr %egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %egress_root_ns, align 4
  %tobool.not.i37 = icmp eq ptr %21, null
  br i1 %tobool.not.i37, label %cleanup_root_ns.exit36.cleanup_root_ns.exit39_crit_edge, label %if.end.i38

cleanup_root_ns.exit36.cleanup_root_ns.exit39_crit_edge: ; preds = %cleanup_root_ns.exit36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit39

if.end.i38:                                       ; preds = %cleanup_root_ns.exit36
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %21) #14
  br label %cleanup_root_ns.exit39

cleanup_root_ns.exit39:                           ; preds = %if.end.i38, %cleanup_root_ns.exit36.cleanup_root_ns.exit39_crit_edge
  tail call void @mlx5_cleanup_fc_stats(ptr noundef %dev) #14
  %ftes_cache = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 3
  %22 = ptrtoint ptr %ftes_cache to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ftes_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %23) #14
  %fgs_cache = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 2
  %24 = ptrtoint ptr %fgs_cache to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fgs_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %25) #14
  tail call void @mlx5_ft_pool_destroy(ptr noundef %dev) #14
  tail call void @kfree(ptr noundef %1) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_cleanup_fc_stats(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ft_pool_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_fs_egress_acls_init(ptr nocapture noundef readonly %dev, i32 noundef %total_vports) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering1 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1, align 4
  %2 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %total_vports, i32 4) #14
  %3 = extractvalue { i32, i1 } %2, 1
  br i1 %3, label %kcalloc.exit.thread, label %if.end7.i.i, !prof !261

kcalloc.exit.thread:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %esw_egress_root_ns37 = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %esw_egress_root_ns37 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %esw_egress_root_ns37, align 4
  br label %cleanup

if.end7.i.i:                                      ; preds = %entry
  %5 = extractvalue { i32, i1 } %2, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %5, i32 noundef 3520) #19
  %esw_egress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call8.i.i, ptr %esw_egress_root_ns, align 4
  %tobool.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not, label %if.end7.i.i.cleanup_crit_edge, label %for.cond.preheader

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %total_vports)
  %cmp42.not = icmp eq i32 %total_vports, 0
  br i1 %cmp42.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.043 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %call.i = tail call fastcc ptr @create_root_ns(ptr noundef %1, i32 noundef 2) #14
  %7 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %esw_egress_root_ns, align 4
  %arrayidx.i = getelementptr ptr, ptr %8, i32 %i.043
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call.i, ptr %arrayidx.i, align 4
  %10 = load ptr, ptr %esw_egress_root_ns, align 4
  %arrayidx2.i = getelementptr ptr, ptr %10, i32 %i.043
  %11 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx2.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %for.body.for.cond7.preheader_crit_edge, label %if.end.i

for.body.for.cond7.preheader_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond7.preheader

if.end.i:                                         ; preds = %for.body
  %call.i.i = tail call fastcc ptr @_fs_create_prio(ptr noundef nonnull %12, i32 noundef 0, i32 noundef 1, i32 noundef 1) #14
  %cmp.i.i.i33.not = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i33.not, label %for.cond7.preheader.split.loop.exit59, label %for.inc

for.cond7.preheader.split.loop.exit59:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %13 = ptrtoint ptr %call.i.i to i32
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond7.preheader.split.loop.exit59, %for.body.for.cond7.preheader_crit_edge
  %retval.0.i57 = phi i32 [ %13, %for.cond7.preheader.split.loop.exit59 ], [ -12, %for.body.for.cond7.preheader_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.043)
  %cmp846.not = icmp eq i32 %i.043, 0
  br i1 %cmp846.not, label %for.cond7.preheader.for.end13_crit_edge, label %for.cond7.preheader.for.body9_crit_edge

for.cond7.preheader.for.body9_crit_edge:          ; preds = %for.cond7.preheader
  br label %for.body9

for.cond7.preheader.for.end13_crit_edge:          ; preds = %for.cond7.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end13

for.inc:                                          ; preds = %if.end.i
  %inc = add nuw nsw i32 %i.043, 1
  %exitcond.not = icmp eq i32 %inc, %total_vports
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %esw_egress_acl_vports = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 15
  %14 = ptrtoint ptr %esw_egress_acl_vports to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %total_vports, ptr %esw_egress_acl_vports, align 4
  br label %cleanup

for.body9:                                        ; preds = %cleanup_root_ns.exit.for.body9_crit_edge, %for.cond7.preheader.for.body9_crit_edge
  %i.147.in = phi i32 [ %i.147, %cleanup_root_ns.exit.for.body9_crit_edge ], [ %i.043, %for.cond7.preheader.for.body9_crit_edge ]
  %i.147 = add nsw i32 %i.147.in, -1
  %15 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %esw_egress_root_ns, align 4
  %arrayidx = getelementptr ptr, ptr %16, i32 %i.147
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx, align 4
  %tobool.not.i34 = icmp eq ptr %18, null
  br i1 %tobool.not.i34, label %for.body9.cleanup_root_ns.exit_crit_edge, label %if.end.i35

for.body9.cleanup_root_ns.exit_crit_edge:         ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i35:                                       ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %18) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i35, %for.body9.cleanup_root_ns.exit_crit_edge
  %cmp8 = icmp sgt i32 %i.147.in, 1
  br i1 %cmp8, label %cleanup_root_ns.exit.for.body9_crit_edge, label %cleanup_root_ns.exit.for.end13_crit_edge

cleanup_root_ns.exit.for.end13_crit_edge:         ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end13

cleanup_root_ns.exit.for.body9_crit_edge:         ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body9

for.end13:                                        ; preds = %cleanup_root_ns.exit.for.end13_crit_edge, %for.cond7.preheader.for.end13_crit_edge
  %19 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %esw_egress_root_ns, align 4
  tail call void @kfree(ptr noundef %20) #14
  %21 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %esw_egress_root_ns, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end13, %for.end, %if.end7.i.i.cleanup_crit_edge, %kcalloc.exit.thread
  %retval.0 = phi i32 [ %retval.0.i57, %for.end13 ], [ 0, %for.end ], [ -12, %if.end7.i.i.cleanup_crit_edge ], [ -12, %kcalloc.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_fs_egress_acls_cleanup(ptr nocapture noundef readonly %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering1 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1, align 4
  %esw_egress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %esw_egress_root_ns, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %esw_egress_acl_vports = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 15
  %4 = ptrtoint ptr %esw_egress_acl_vports to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %esw_egress_acl_vports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp12 = icmp sgt i32 %5, 0
  br i1 %cmp12, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %cleanup_root_ns.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.013 = phi i32 [ %inc, %cleanup_root_ns.exit.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %6 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %esw_egress_root_ns, align 4
  %arrayidx = getelementptr ptr, ptr %7, i32 %i.013
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %for.body.cleanup_root_ns.exit_crit_edge, label %if.end.i

for.body.cleanup_root_ns.exit_crit_edge:          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %9) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i, %for.body.cleanup_root_ns.exit_crit_edge
  %inc = add nuw nsw i32 %i.013, 1
  %10 = ptrtoint ptr %esw_egress_acl_vports to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %esw_egress_acl_vports, align 4
  %cmp = icmp slt i32 %inc, %11
  br i1 %cmp, label %cleanup_root_ns.exit.for.body_crit_edge, label %cleanup_root_ns.exit.for.end_crit_edge

cleanup_root_ns.exit.for.end_crit_edge:           ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

cleanup_root_ns.exit.for.body_crit_edge:          ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %cleanup_root_ns.exit.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %12 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %esw_egress_root_ns, align 4
  tail call void @kfree(ptr noundef %13) #14
  %14 = ptrtoint ptr %esw_egress_root_ns to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %esw_egress_root_ns, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_fs_ingress_acls_init(ptr nocapture noundef readonly %dev, i32 noundef %total_vports) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering1 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1, align 4
  %2 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %total_vports, i32 4) #14
  %3 = extractvalue { i32, i1 } %2, 1
  br i1 %3, label %kcalloc.exit.thread, label %if.end7.i.i, !prof !261

kcalloc.exit.thread:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %esw_ingress_root_ns37 = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 8
  %4 = ptrtoint ptr %esw_ingress_root_ns37 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %esw_ingress_root_ns37, align 4
  br label %cleanup

if.end7.i.i:                                      ; preds = %entry
  %5 = extractvalue { i32, i1 } %2, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %5, i32 noundef 3520) #19
  %esw_ingress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call8.i.i, ptr %esw_ingress_root_ns, align 4
  %tobool.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not, label %if.end7.i.i.cleanup_crit_edge, label %for.cond.preheader

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %total_vports)
  %cmp42.not = icmp eq i32 %total_vports, 0
  br i1 %cmp42.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.043 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %call.i = tail call fastcc ptr @create_root_ns(ptr noundef %1, i32 noundef 3) #14
  %7 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %esw_ingress_root_ns, align 4
  %arrayidx.i = getelementptr ptr, ptr %8, i32 %i.043
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call.i, ptr %arrayidx.i, align 4
  %10 = load ptr, ptr %esw_ingress_root_ns, align 4
  %arrayidx2.i = getelementptr ptr, ptr %10, i32 %i.043
  %11 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx2.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %for.body.for.cond7.preheader_crit_edge, label %if.end.i

for.body.for.cond7.preheader_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond7.preheader

if.end.i:                                         ; preds = %for.body
  %call.i.i = tail call fastcc ptr @_fs_create_prio(ptr noundef nonnull %12, i32 noundef 0, i32 noundef 1, i32 noundef 1) #14
  %cmp.i.i.i33.not = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i33.not, label %for.cond7.preheader.split.loop.exit59, label %for.inc

for.cond7.preheader.split.loop.exit59:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %13 = ptrtoint ptr %call.i.i to i32
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond7.preheader.split.loop.exit59, %for.body.for.cond7.preheader_crit_edge
  %retval.0.i57 = phi i32 [ %13, %for.cond7.preheader.split.loop.exit59 ], [ -12, %for.body.for.cond7.preheader_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.043)
  %cmp846.not = icmp eq i32 %i.043, 0
  br i1 %cmp846.not, label %for.cond7.preheader.for.end13_crit_edge, label %for.cond7.preheader.for.body9_crit_edge

for.cond7.preheader.for.body9_crit_edge:          ; preds = %for.cond7.preheader
  br label %for.body9

for.cond7.preheader.for.end13_crit_edge:          ; preds = %for.cond7.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end13

for.inc:                                          ; preds = %if.end.i
  %inc = add nuw nsw i32 %i.043, 1
  %exitcond.not = icmp eq i32 %inc, %total_vports
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %esw_ingress_acl_vports = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 16
  %14 = ptrtoint ptr %esw_ingress_acl_vports to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %total_vports, ptr %esw_ingress_acl_vports, align 4
  br label %cleanup

for.body9:                                        ; preds = %cleanup_root_ns.exit.for.body9_crit_edge, %for.cond7.preheader.for.body9_crit_edge
  %i.147.in = phi i32 [ %i.147, %cleanup_root_ns.exit.for.body9_crit_edge ], [ %i.043, %for.cond7.preheader.for.body9_crit_edge ]
  %i.147 = add nsw i32 %i.147.in, -1
  %15 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %esw_ingress_root_ns, align 4
  %arrayidx = getelementptr ptr, ptr %16, i32 %i.147
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx, align 4
  %tobool.not.i34 = icmp eq ptr %18, null
  br i1 %tobool.not.i34, label %for.body9.cleanup_root_ns.exit_crit_edge, label %if.end.i35

for.body9.cleanup_root_ns.exit_crit_edge:         ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i35:                                       ; preds = %for.body9
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %18) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i35, %for.body9.cleanup_root_ns.exit_crit_edge
  %cmp8 = icmp sgt i32 %i.147.in, 1
  br i1 %cmp8, label %cleanup_root_ns.exit.for.body9_crit_edge, label %cleanup_root_ns.exit.for.end13_crit_edge

cleanup_root_ns.exit.for.end13_crit_edge:         ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end13

cleanup_root_ns.exit.for.body9_crit_edge:         ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body9

for.end13:                                        ; preds = %cleanup_root_ns.exit.for.end13_crit_edge, %for.cond7.preheader.for.end13_crit_edge
  %19 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %esw_ingress_root_ns, align 4
  tail call void @kfree(ptr noundef %20) #14
  %21 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %esw_ingress_root_ns, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end13, %for.end, %if.end7.i.i.cleanup_crit_edge, %kcalloc.exit.thread
  %retval.0 = phi i32 [ %retval.0.i57, %for.end13 ], [ 0, %for.end ], [ -12, %if.end7.i.i.cleanup_crit_edge ], [ -12, %kcalloc.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_fs_ingress_acls_cleanup(ptr nocapture noundef readonly %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering1 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1, align 4
  %esw_ingress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %esw_ingress_root_ns, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %esw_ingress_acl_vports = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 16
  %4 = ptrtoint ptr %esw_ingress_acl_vports to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %esw_ingress_acl_vports, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp12 = icmp sgt i32 %5, 0
  br i1 %cmp12, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %cleanup_root_ns.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.013 = phi i32 [ %inc, %cleanup_root_ns.exit.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %6 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %esw_ingress_root_ns, align 4
  %arrayidx = getelementptr ptr, ptr %7, i32 %i.013
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %for.body.cleanup_root_ns.exit_crit_edge, label %if.end.i

for.body.cleanup_root_ns.exit_crit_edge:          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %9) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i, %for.body.cleanup_root_ns.exit_crit_edge
  %inc = add nuw nsw i32 %i.013, 1
  %10 = ptrtoint ptr %esw_ingress_acl_vports to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %esw_ingress_acl_vports, align 4
  %cmp = icmp slt i32 %inc, %11
  br i1 %cmp, label %cleanup_root_ns.exit.for.body_crit_edge, label %cleanup_root_ns.exit.for.end_crit_edge

cleanup_root_ns.exit.for.end_crit_edge:           ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

cleanup_root_ns.exit.for.body_crit_edge:          ; preds = %cleanup_root_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %cleanup_root_ns.exit.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %12 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %esw_ingress_root_ns, align 4
  tail call void @kfree(ptr noundef %13) #14
  %14 = ptrtoint ptr %esw_ingress_root_ns to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %esw_ingress_root_ns, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_init_fs(ptr noundef %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mlx5_init_fc_stats(ptr noundef %dev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @mlx5_ft_pool_init(ptr noundef %dev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 68) #18
  %tobool6.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool6.not, label %if.end4.err199_crit_edge, label %if.end8

if.end4.err199_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.end8:                                          ; preds = %if.end4
  %1 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %dev, ptr %call7.i.i, align 8
  %steering10 = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %2 = ptrtoint ptr %steering10 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call7.i.i, ptr %steering10, align 4
  %call11 = tail call zeroext i1 @mlx5_fs_dr_is_supported(ptr noundef %dev) #14
  %spec.select = zext i1 %call11 to i32
  %3 = getelementptr inbounds %struct.mlx5_flow_steering, ptr %call7.i.i, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %spec.select, ptr %3, align 4
  %call15 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.9, i32 noundef 900, i32 noundef 0, i32 noundef 0, ptr noundef null) #14
  %fgs_cache = getelementptr inbounds %struct.mlx5_flow_steering, ptr %call7.i.i, i32 0, i32 2
  %5 = ptrtoint ptr %fgs_cache to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call15, ptr %fgs_cache, align 8
  %call16 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.10, i32 noundef 676, i32 noundef 0, i32 noundef 0, ptr noundef null) #14
  %ftes_cache = getelementptr inbounds %struct.mlx5_flow_steering, ptr %call7.i.i, i32 0, i32 3
  %6 = ptrtoint ptr %ftes_cache to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call16, ptr %ftes_cache, align 4
  %tobool18.not = icmp eq ptr %call16, null
  br i1 %tobool18.not, label %if.end8.err199_crit_edge, label %lor.lhs.false

if.end8.err199_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

lor.lhs.false:                                    ; preds = %if.end8
  %7 = ptrtoint ptr %fgs_cache to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fgs_cache, align 8
  %tobool20.not = icmp eq ptr %8, null
  br i1 %tobool20.not, label %lor.lhs.false.err199_crit_edge, label %if.end22

lor.lhs.false.err199_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.end22:                                         ; preds = %lor.lhs.false
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 8
  %9 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %10, i32 13
  %11 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %add.ptr, align 4
  %13 = and i32 %12, 33555200
  call void @__sanitizer_cov_trace_const_cmp4(i32 33554688, i32 %13)
  %.not = icmp eq i32 %13, 33554688
  br i1 %.not, label %if.end22.land.lhs.true52_crit_edge, label %lor.lhs.false32

if.end22.land.lhs.true52_crit_edge:               ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true52

lor.lhs.false32:                                  ; preds = %if.end22
  %14 = and i32 %12, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp41 = icmp eq i32 %14, 0
  br i1 %cmp41, label %land.lhs.true42, label %lor.lhs.false32.if.end67_crit_edge

lor.lhs.false32.if.end67_crit_edge:               ; preds = %lor.lhs.false32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

land.lhs.true42:                                  ; preds = %lor.lhs.false32
  %add.ptr48 = getelementptr i32, ptr %10, i32 16
  %15 = ptrtoint ptr %add.ptr48 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %add.ptr48, align 4
  %17 = and i32 %16, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool51.not = icmp eq i32 %17, 0
  br i1 %tobool51.not, label %land.lhs.true42.if.end67_crit_edge, label %land.lhs.true42.land.lhs.true52_crit_edge

land.lhs.true42.land.lhs.true52_crit_edge:        ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true52

land.lhs.true42.if.end67_crit_edge:               ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

land.lhs.true52:                                  ; preds = %land.lhs.true42.land.lhs.true52_crit_edge, %if.end22.land.lhs.true52_crit_edge
  %arrayidx55 = getelementptr %struct.mlx5_core_dev, ptr %dev, i32 0, i32 8, i32 0, i32 7
  %18 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx55, align 4
  %add.ptr58 = getelementptr i32, ptr %19, i32 16
  %20 = ptrtoint ptr %add.ptr58 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %add.ptr58, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %tobool61.not = icmp sgt i32 %21, -1
  br i1 %tobool61.not, label %land.lhs.true52.if.end67_crit_edge, label %if.then62

land.lhs.true52.if.end67_crit_edge:               ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.then62:                                        ; preds = %land.lhs.true52
  %call63 = tail call fastcc i32 @init_root_ns(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.then62.if.end67_crit_edge, label %if.then62.err199_crit_edge

if.then62.err199_crit_edge:                       ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.then62.if.end67_crit_edge:                     ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.end67:                                         ; preds = %if.then62.if.end67_crit_edge, %land.lhs.true52.if.end67_crit_edge, %land.lhs.true42.if.end67_crit_edge, %lor.lhs.false32.if.end67_crit_edge
  %22 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %caps, align 8
  %add.ptr73 = getelementptr i32, ptr %23, i32 13
  %24 = ptrtoint ptr %add.ptr73 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %add.ptr73, align 4
  %26 = and i32 %25, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool76.not = icmp eq i32 %26, 0
  br i1 %tobool76.not, label %if.end67.if.end93_crit_edge, label %if.then77

if.end67.if.end93_crit_edge:                      ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end93

if.then77:                                        ; preds = %if.end67
  %arrayidx80 = getelementptr %struct.mlx5_core_dev, ptr %dev, i32 0, i32 8, i32 0, i32 8
  %27 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx80, align 8
  %add.ptr83 = getelementptr i32, ptr %28, i32 16
  %29 = ptrtoint ptr %add.ptr83 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %add.ptr83, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %30)
  %tobool86.not = icmp sgt i32 %30, -1
  br i1 %tobool86.not, label %if.then77.if.end93_crit_edge, label %if.then87

if.then77.if.end93_crit_edge:                     ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end93

if.then87:                                        ; preds = %if.then77
  %call88 = tail call fastcc i32 @init_fdb_root_ns(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call88)
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %if.then87.if.end93_crit_edge, label %if.then87.err199_crit_edge

if.then87.err199_crit_edge:                       ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.then87.if.end93_crit_edge:                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end93

if.end93:                                         ; preds = %if.then87.if.end93_crit_edge, %if.then77.if.end93_crit_edge, %if.end67.if.end93_crit_edge
  %arrayidx96 = getelementptr %struct.mlx5_core_dev, ptr %dev, i32 0, i32 8, i32 0, i32 7
  %31 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx96, align 4
  %add.ptr99 = getelementptr i32, ptr %32, i32 48
  %33 = ptrtoint ptr %add.ptr99 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %add.ptr99, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %tobool102.not = icmp sgt i32 %34, -1
  br i1 %tobool102.not, label %if.end93.if.end108_crit_edge, label %if.then103

if.end93.if.end108_crit_edge:                     ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end108

if.then103:                                       ; preds = %if.end93
  %call104 = tail call fastcc i32 @init_sniffer_rx_root_ns(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104)
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %if.then103.if.end108_crit_edge, label %if.then103.err199_crit_edge

if.then103.err199_crit_edge:                      ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.then103.if.end108_crit_edge:                   ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end108

if.end108:                                        ; preds = %if.then103.if.end108_crit_edge, %if.end93.if.end108_crit_edge
  %35 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx96, align 4
  %add.ptr114 = getelementptr i32, ptr %36, i32 96
  %37 = ptrtoint ptr %add.ptr114 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %add.ptr114, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %38)
  %tobool117.not = icmp sgt i32 %38, -1
  br i1 %tobool117.not, label %if.end108.if.end123_crit_edge, label %if.then118

if.end108.if.end123_crit_edge:                    ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end123

if.then118:                                       ; preds = %if.end108
  %call119 = tail call fastcc i32 @init_sniffer_tx_root_ns(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call119)
  %tobool120.not = icmp eq i32 %call119, 0
  br i1 %tobool120.not, label %if.then118.if.end123_crit_edge, label %if.then118.err199_crit_edge

if.then118.err199_crit_edge:                      ; preds = %if.then118
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.then118.if.end123_crit_edge:                   ; preds = %if.then118
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end123

if.end123:                                        ; preds = %if.then118.if.end123_crit_edge, %if.end108.if.end123_crit_edge
  %arrayidx126 = getelementptr %struct.mlx5_core_dev, ptr %dev, i32 0, i32 8, i32 0, i32 37
  %39 = ptrtoint ptr %arrayidx126 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx126, align 4
  %add.ptr129 = getelementptr i32, ptr %40, i32 16
  %41 = ptrtoint ptr %add.ptr129 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %add.ptr129, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %42)
  %tobool132.not = icmp sgt i32 %42, -1
  br i1 %tobool132.not, label %if.end123.if.end138_crit_edge, label %if.then133

if.end123.if.end138_crit_edge:                    ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end138

if.then133:                                       ; preds = %if.end123
  %call134 = tail call fastcc i32 @init_port_sel_root_ns(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call134)
  %tobool135.not = icmp eq i32 %call134, 0
  br i1 %tobool135.not, label %if.then133.if.end138_crit_edge, label %if.then133.err199_crit_edge

if.then133.err199_crit_edge:                      ; preds = %if.then133
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.then133.if.end138_crit_edge:                   ; preds = %if.then133
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end138

if.end138:                                        ; preds = %if.then133.if.end138_crit_edge, %if.end123.if.end138_crit_edge
  %43 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx96, align 4
  %add.ptr144 = getelementptr i32, ptr %44, i32 32
  %45 = ptrtoint ptr %add.ptr144 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %add.ptr144, align 4
  %47 = and i32 %46, -2147483392
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483392, i32 %47)
  %.not250 = icmp eq i32 %47, -2147483392
  br i1 %.not250, label %if.then158, label %if.end138.if.end163_crit_edge

if.end138.if.end163_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end163

if.then158:                                       ; preds = %if.end138
  %call159 = tail call fastcc i32 @init_rdma_rx_root_ns(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call159)
  %tobool160.not = icmp eq i32 %call159, 0
  br i1 %tobool160.not, label %if.then158.if.end163_crit_edge, label %if.then158.err199_crit_edge

if.then158.err199_crit_edge:                      ; preds = %if.then158
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.then158.if.end163_crit_edge:                   ; preds = %if.then158
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end163

if.end163:                                        ; preds = %if.then158.if.end163_crit_edge, %if.end138.if.end163_crit_edge
  %48 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx96, align 4
  %add.ptr169 = getelementptr i32, ptr %49, i32 80
  %50 = ptrtoint ptr %add.ptr169 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %add.ptr169, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %51)
  %tobool172.not = icmp sgt i32 %51, -1
  br i1 %tobool172.not, label %if.end163.if.end178_crit_edge, label %if.then173

if.end163.if.end178_crit_edge:                    ; preds = %if.end163
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end178

if.then173:                                       ; preds = %if.end163
  %call174 = tail call fastcc i32 @init_rdma_tx_root_ns(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call174)
  %tobool175.not = icmp eq i32 %call174, 0
  br i1 %tobool175.not, label %if.then173.if.end178_crit_edge, label %if.then173.err199_crit_edge

if.then173.err199_crit_edge:                      ; preds = %if.then173
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.then173.if.end178_crit_edge:                   ; preds = %if.then173
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end178

if.end178:                                        ; preds = %if.then173.if.end178_crit_edge, %if.end163.if.end178_crit_edge
  %52 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %call7.i.i, align 8
  %call180 = tail call i32 @mlx5_fpga_ipsec_device_caps(ptr noundef %53) #14
  %and181 = and i32 %call180, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and181)
  %tobool182.not = icmp eq i32 %and181, 0
  br i1 %tobool182.not, label %lor.lhs.false183, label %if.end178.if.then193_crit_edge

if.end178.if.then193_crit_edge:                   ; preds = %if.end178
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then193

lor.lhs.false183:                                 ; preds = %if.end178
  %54 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx96, align 4
  %add.ptr189 = getelementptr i32, ptr %55, i32 64
  %56 = ptrtoint ptr %add.ptr189 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %add.ptr189, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %57)
  %tobool192.not = icmp sgt i32 %57, -1
  br i1 %tobool192.not, label %lor.lhs.false183.cleanup_crit_edge, label %lor.lhs.false183.if.then193_crit_edge

lor.lhs.false183.if.then193_crit_edge:            ; preds = %lor.lhs.false183
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then193

lor.lhs.false183.cleanup_crit_edge:               ; preds = %lor.lhs.false183
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then193:                                       ; preds = %lor.lhs.false183.if.then193_crit_edge, %if.end178.if.then193_crit_edge
  %call194 = tail call fastcc i32 @init_egress_root_ns(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call194)
  %tobool195.not = icmp eq i32 %call194, 0
  br i1 %tobool195.not, label %if.then193.cleanup_crit_edge, label %if.then193.err199_crit_edge

if.then193.err199_crit_edge:                      ; preds = %if.then193
  call void @__sanitizer_cov_trace_pc() #16
  br label %err199

if.then193.cleanup_crit_edge:                     ; preds = %if.then193
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

err199:                                           ; preds = %if.then193.err199_crit_edge, %if.then173.err199_crit_edge, %if.then158.err199_crit_edge, %if.then133.err199_crit_edge, %if.then118.err199_crit_edge, %if.then103.err199_crit_edge, %if.then87.err199_crit_edge, %if.then62.err199_crit_edge, %lor.lhs.false.err199_crit_edge, %if.end8.err199_crit_edge, %if.end4.err199_crit_edge
  %err.0 = phi i32 [ %call63, %if.then62.err199_crit_edge ], [ %call88, %if.then87.err199_crit_edge ], [ %call104, %if.then103.err199_crit_edge ], [ %call119, %if.then118.err199_crit_edge ], [ %call134, %if.then133.err199_crit_edge ], [ %call159, %if.then158.err199_crit_edge ], [ %call174, %if.then173.err199_crit_edge ], [ %call194, %if.then193.err199_crit_edge ], [ -12, %if.end4.err199_crit_edge ], [ -12, %lor.lhs.false.err199_crit_edge ], [ -12, %if.end8.err199_crit_edge ]
  tail call void @mlx5_cleanup_fs(ptr noundef %dev)
  br label %cleanup

cleanup:                                          ; preds = %err199, %if.then193.cleanup_crit_edge, %lor.lhs.false183.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %err199 ], [ %call, %entry.cleanup_crit_edge ], [ %call1, %if.end.cleanup_crit_edge ], [ 0, %if.then193.cleanup_crit_edge ], [ 0, %lor.lhs.false183.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_init_fc_stats(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ft_pool_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mlx5_fs_dr_is_supported(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_root_ns(ptr nocapture noundef %steering) unnamed_addr #0 align 64 {
entry:
  %ft_attr.i = alloca %struct.mlx5_flow_table_attr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @create_root_ns(ptr noundef %steering, i32 noundef 0)
  %root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 4
  %0 = ptrtoint ptr %root_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %root_ns, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.body.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.i:                                       ; preds = %for.body.i
  %call.i.1 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([7 x %struct.init_tree_node], ptr @.compoundliteral.97, i32 0, i32 1), ptr noundef nonnull %call, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1)
  %tobool.not.i.1 = icmp eq i32 %call.i.1, 0
  br i1 %tobool.not.i.1, label %for.cond.i.1, label %for.cond.i.out_err_crit_edge

for.cond.i.out_err_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.1:                                     ; preds = %for.cond.i
  %call.i.2 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([7 x %struct.init_tree_node], ptr @.compoundliteral.97, i32 0, i32 2), ptr noundef nonnull %call, i32 noundef 2) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.2)
  %tobool.not.i.2 = icmp eq i32 %call.i.2, 0
  br i1 %tobool.not.i.2, label %for.cond.i.2, label %for.cond.i.1.out_err_crit_edge

for.cond.i.1.out_err_crit_edge:                   ; preds = %for.cond.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %call.i.3 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([7 x %struct.init_tree_node], ptr @.compoundliteral.97, i32 0, i32 3), ptr noundef nonnull %call, i32 noundef 3) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.3)
  %tobool.not.i.3 = icmp eq i32 %call.i.3, 0
  br i1 %tobool.not.i.3, label %for.cond.i.3, label %for.cond.i.2.out_err_crit_edge

for.cond.i.2.out_err_crit_edge:                   ; preds = %for.cond.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.3:                                     ; preds = %for.cond.i.2
  %call.i.4 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([7 x %struct.init_tree_node], ptr @.compoundliteral.97, i32 0, i32 4), ptr noundef nonnull %call, i32 noundef 4) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.4)
  %tobool.not.i.4 = icmp eq i32 %call.i.4, 0
  br i1 %tobool.not.i.4, label %for.cond.i.4, label %for.cond.i.3.out_err_crit_edge

for.cond.i.3.out_err_crit_edge:                   ; preds = %for.cond.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.4:                                     ; preds = %for.cond.i.3
  %call.i.5 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([7 x %struct.init_tree_node], ptr @.compoundliteral.97, i32 0, i32 5), ptr noundef nonnull %call, i32 noundef 5) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.5)
  %tobool.not.i.5 = icmp eq i32 %call.i.5, 0
  br i1 %tobool.not.i.5, label %for.cond.i.5, label %for.cond.i.4.out_err_crit_edge

for.cond.i.4.out_err_crit_edge:                   ; preds = %for.cond.i.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.5:                                     ; preds = %for.cond.i.4
  %call.i.6 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([7 x %struct.init_tree_node], ptr @.compoundliteral.97, i32 0, i32 6), ptr noundef nonnull %call, i32 noundef 6) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.6)
  %tobool.not.i.6 = icmp eq i32 %call.i.6, 0
  br i1 %tobool.not.i.6, label %for.cond.i.6, label %for.cond.i.5.out_err_crit_edge

for.cond.i.5.out_err_crit_edge:                   ; preds = %for.cond.i.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.6:                                     ; preds = %for.cond.i.5
  %1 = ptrtoint ptr %root_ns to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %root_ns, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %prio.016.i = load ptr, ptr %children.i, align 4
  %cmp.not17.i = icmp eq ptr %prio.016.i, %children.i
  br i1 %cmp.not17.i, label %for.cond.i.6.set_prio_attrs.exit_crit_edge, label %for.cond.i.6.for.body.i24_crit_edge

for.cond.i.6.for.body.i24_crit_edge:              ; preds = %for.cond.i.6
  br label %for.body.i24

for.cond.i.6.set_prio_attrs.exit_crit_edge:       ; preds = %for.cond.i.6
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_prio_attrs.exit

for.body.i:                                       ; preds = %entry
  %call.i = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef nonnull @.compoundliteral.97, ptr noundef nonnull %call, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %for.cond.i, label %for.body.i.out_err_crit_edge

for.body.i.out_err_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.body.i24:                                     ; preds = %for.body.i24.for.body.i24_crit_edge, %for.cond.i.6.for.body.i24_crit_edge
  %prio.019.i = phi ptr [ %prio.0.i, %for.body.i24.for.body.i24_crit_edge ], [ %prio.016.i, %for.cond.i.6.for.body.i24_crit_edge ]
  %start_level.018.i = phi i32 [ %add.i, %for.body.i24.for.body.i24_crit_edge ], [ 0, %for.cond.i.6.for.body.i24_crit_edge ]
  tail call fastcc void @set_prio_attrs_in_prio(ptr noundef %prio.019.i, i32 noundef %start_level.018.i) #14
  %num_levels.i = getelementptr inbounds %struct.fs_prio, ptr %prio.019.i, i32 0, i32 1
  %4 = ptrtoint ptr %num_levels.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_levels.i, align 4
  %add.i = add i32 %5, %start_level.018.i
  %6 = ptrtoint ptr %prio.019.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %prio.0.i = load ptr, ptr %prio.019.i, align 4
  %cmp.not.i = icmp eq ptr %prio.0.i, %children.i
  br i1 %cmp.not.i, label %for.body.i24.set_prio_attrs.exit_crit_edge, label %for.body.i24.for.body.i24_crit_edge

for.body.i24.for.body.i24_crit_edge:              ; preds = %for.body.i24
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i24

for.body.i24.set_prio_attrs.exit_crit_edge:       ; preds = %for.body.i24
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_prio_attrs.exit

set_prio_attrs.exit:                              ; preds = %for.body.i24.set_prio_attrs.exit_crit_edge, %for.cond.i.6.set_prio_attrs.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %ft_attr.i) #14
  %7 = getelementptr inbounds i8, ptr %ft_attr.i, i32 12
  %8 = call ptr @memset(ptr %7, i32 0, i32 16)
  %9 = ptrtoint ptr %steering to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %steering, align 4
  %steering1.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %10, i32 0, i32 17, i32 26
  %11 = ptrtoint ptr %steering1.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %steering1.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i, label %set_prio_attrs.exit.create_anchor_flow_table.exit.thread32_crit_edge, label %if.end.i.i

set_prio_attrs.exit.create_anchor_flow_table.exit.thread32_crit_edge: ; preds = %set_prio_attrs.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_anchor_flow_table.exit.thread32

if.end.i.i:                                       ; preds = %set_prio_attrs.exit
  %root_ns58.i.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %12, i32 0, i32 4
  %13 = ptrtoint ptr %root_ns58.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %root_ns.0.i.i = load ptr, ptr %root_ns58.i.i, align 4
  %tobool59.not.i.i = icmp eq ptr %root_ns.0.i.i, null
  br i1 %tobool59.not.i.i, label %if.end.i.i.create_anchor_flow_table.exit.thread32_crit_edge, label %if.end61.i.i

if.end.i.i.create_anchor_flow_table.exit.thread32_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_anchor_flow_table.exit.thread32

if.end61.i.i:                                     ; preds = %if.end.i.i
  %children.i.i.i = getelementptr inbounds %struct.fs_node, ptr %root_ns.0.i.i, i32 0, i32 1
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.end61.i.i
  %iter_prio.0.in.i.i.i = phi ptr [ %children.i.i.i, %if.end61.i.i ], [ %iter_prio.0.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %14 = ptrtoint ptr %iter_prio.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %iter_prio.0.i.i.i = load ptr, ptr %iter_prio.0.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %iter_prio.0.i.i.i, %children.i.i.i
  br i1 %cmp.not.i.i.i, label %for.cond.i.i.i.create_anchor_flow_table.exit.thread32_crit_edge, label %for.body.i.i.i

for.cond.i.i.i.create_anchor_flow_table.exit.thread32_crit_edge: ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_anchor_flow_table.exit.thread32

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %prio4.i.i.i = getelementptr inbounds %struct.fs_prio, ptr %iter_prio.0.i.i.i, i32 0, i32 3
  %15 = ptrtoint ptr %prio4.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %prio4.i.i.i, align 4
  %cmp5.i.i.i = icmp eq i32 %16, 6
  br i1 %cmp5.i.i.i, label %find_prio.exit.i.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i.i.i

find_prio.exit.i.i:                               ; preds = %for.body.i.i.i
  %tobool64.not.i.i = icmp eq ptr %iter_prio.0.i.i.i, null
  br i1 %tobool64.not.i.i, label %find_prio.exit.i.i.create_anchor_flow_table.exit.thread32_crit_edge, label %mlx5_get_flow_namespace.exit.i

find_prio.exit.i.i.create_anchor_flow_table.exit.thread32_crit_edge: ; preds = %find_prio.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_anchor_flow_table.exit.thread32

mlx5_get_flow_namespace.exit.i:                   ; preds = %find_prio.exit.i.i
  %children.i.i = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i.i.i, i32 0, i32 1
  %17 = ptrtoint ptr %children.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %children.i.i, align 4
  %tobool.not.i25 = icmp eq ptr %18, null
  br i1 %tobool.not.i25, label %mlx5_get_flow_namespace.exit.i.create_anchor_flow_table.exit.thread32_crit_edge, label %if.end23.i, !prof !261

mlx5_get_flow_namespace.exit.i.create_anchor_flow_table.exit.thread32_crit_edge: ; preds = %mlx5_get_flow_namespace.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_anchor_flow_table.exit.thread32

create_anchor_flow_table.exit.thread32:           ; preds = %mlx5_get_flow_namespace.exit.i.create_anchor_flow_table.exit.thread32_crit_edge, %find_prio.exit.i.i.create_anchor_flow_table.exit.thread32_crit_edge, %for.cond.i.i.i.create_anchor_flow_table.exit.thread32_crit_edge, %if.end.i.i.create_anchor_flow_table.exit.thread32_crit_edge, %set_prio_attrs.exit.create_anchor_flow_table.exit.thread32_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2597, i32 noundef 9, ptr noundef null) #14
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %ft_attr.i) #14
  br label %out_err

if.end23.i:                                       ; preds = %mlx5_get_flow_namespace.exit.i
  %max_fte.i = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr.i, i32 0, i32 1
  %19 = ptrtoint ptr %max_fte.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 1, ptr %max_fte.i, align 4
  %level.i = getelementptr inbounds %struct.mlx5_flow_table_attr, ptr %ft_attr.i, i32 0, i32 2
  %20 = ptrtoint ptr %level.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %level.i, align 4
  %21 = ptrtoint ptr %ft_attr.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %ft_attr.i, align 4
  %call.i.i = call fastcc ptr @__mlx5_create_flow_table(ptr noundef nonnull %18, ptr noundef nonnull %ft_attr.i, i32 noundef 0, i16 noundef zeroext 0) #14
  %cmp.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %create_anchor_flow_table.exit, label %create_anchor_flow_table.exit.thread

create_anchor_flow_table.exit.thread:             ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %ft_attr.i) #14
  br label %cleanup

create_anchor_flow_table.exit:                    ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  %22 = ptrtoint ptr %steering to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %steering, align 4
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 8
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 68
  %30 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pid.i, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %25, ptr noundef nonnull @.str.98, ptr noundef nonnull @.str.99, i32 noundef 2606, i32 noundef %31) #17
  %32 = ptrtoint ptr %call.i.i to i32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %ft_attr.i) #14
  br label %out_err

out_err:                                          ; preds = %create_anchor_flow_table.exit, %create_anchor_flow_table.exit.thread32, %for.body.i.out_err_crit_edge, %for.cond.i.5.out_err_crit_edge, %for.cond.i.4.out_err_crit_edge, %for.cond.i.3.out_err_crit_edge, %for.cond.i.2.out_err_crit_edge, %for.cond.i.1.out_err_crit_edge, %for.cond.i.out_err_crit_edge
  %err.0 = phi i32 [ %32, %create_anchor_flow_table.exit ], [ -22, %create_anchor_flow_table.exit.thread32 ], [ %call.i, %for.body.i.out_err_crit_edge ], [ %call.i.1, %for.cond.i.out_err_crit_edge ], [ %call.i.2, %for.cond.i.1.out_err_crit_edge ], [ %call.i.3, %for.cond.i.2.out_err_crit_edge ], [ %call.i.4, %for.cond.i.3.out_err_crit_edge ], [ %call.i.5, %for.cond.i.4.out_err_crit_edge ], [ %call.i.6, %for.cond.i.5.out_err_crit_edge ]
  %33 = ptrtoint ptr %root_ns to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %root_ns, align 4
  %tobool.not.i27 = icmp eq ptr %34, null
  br i1 %tobool.not.i27, label %out_err.cleanup_root_ns.exit_crit_edge, label %if.end.i

out_err.cleanup_root_ns.exit_crit_edge:           ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i:                                         ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %34) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i, %out_err.cleanup_root_ns.exit_crit_edge
  %35 = ptrtoint ptr %root_ns to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %root_ns, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup_root_ns.exit, %create_anchor_flow_table.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %cleanup_root_ns.exit ], [ -12, %entry.cleanup_crit_edge ], [ 0, %create_anchor_flow_table.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_fdb_root_ns(ptr nocapture noundef %steering) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @create_root_ns(ptr noundef %steering, i32 noundef 4)
  %fdb_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 5
  %0 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %fdb_root_ns, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i.i = tail call fastcc ptr @_fs_create_prio(ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0, i32 noundef 1) #14
  %cmp.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end.create_fdb_bypass.exit_crit_edge, label %if.end.i

if.end.create_fdb_bypass.exit_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

if.end.i:                                         ; preds = %if.end
  %call4.i = tail call fastcc ptr @fs_create_namespace(ptr noundef %call.i.i, i32 noundef 0) #14
  %cmp.i24.i = icmp ugt ptr %call4.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i24.i, label %if.end.i.create_fdb_bypass.exit_crit_edge, label %for.body.preheader.i

if.end.i.create_fdb_bypass.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.body.preheader.i:                             ; preds = %if.end.i
  %call.i25.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 0, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.i = icmp ugt ptr %call.i25.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.i, label %for.body.preheader.i.create_fdb_bypass.exit_crit_edge, label %for.cond.i

for.body.preheader.i.create_fdb_bypass.exit_crit_edge: ; preds = %for.body.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.i:                                       ; preds = %for.body.preheader.i
  %call.i25.1.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 1, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.1.i = icmp ugt ptr %call.i25.1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.1.i, label %for.cond.i.create_fdb_bypass.exit_crit_edge, label %for.cond.1.i

for.cond.i.create_fdb_bypass.exit_crit_edge:      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.1.i:                                     ; preds = %for.cond.i
  %call.i25.2.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 2, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.2.i = icmp ugt ptr %call.i25.2.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.2.i, label %for.cond.1.i.create_fdb_bypass.exit_crit_edge, label %for.cond.2.i

for.cond.1.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.2.i:                                     ; preds = %for.cond.1.i
  %call.i25.3.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 3, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.3.i = icmp ugt ptr %call.i25.3.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.3.i, label %for.cond.2.i.create_fdb_bypass.exit_crit_edge, label %for.cond.3.i

for.cond.2.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.3.i:                                     ; preds = %for.cond.2.i
  %call.i25.4.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 4, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.4.i = icmp ugt ptr %call.i25.4.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.4.i, label %for.cond.3.i.create_fdb_bypass.exit_crit_edge, label %for.cond.4.i

for.cond.3.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.4.i:                                     ; preds = %for.cond.3.i
  %call.i25.5.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 5, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.5.i = icmp ugt ptr %call.i25.5.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.5.i, label %for.cond.4.i.create_fdb_bypass.exit_crit_edge, label %for.cond.5.i

for.cond.4.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.5.i:                                     ; preds = %for.cond.4.i
  %call.i25.6.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 6, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.6.i = icmp ugt ptr %call.i25.6.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.6.i, label %for.cond.5.i.create_fdb_bypass.exit_crit_edge, label %for.cond.6.i

for.cond.5.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.6.i:                                     ; preds = %for.cond.5.i
  %call.i25.7.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 7, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.7.i = icmp ugt ptr %call.i25.7.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.7.i, label %for.cond.6.i.create_fdb_bypass.exit_crit_edge, label %for.cond.7.i

for.cond.6.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.7.i:                                     ; preds = %for.cond.6.i
  %call.i25.8.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 8, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.8.i = icmp ugt ptr %call.i25.8.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.8.i, label %for.cond.7.i.create_fdb_bypass.exit_crit_edge, label %for.cond.8.i

for.cond.7.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.8.i:                                     ; preds = %for.cond.7.i
  %call.i25.9.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 9, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.9.i = icmp ugt ptr %call.i25.9.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.9.i, label %for.cond.8.i.create_fdb_bypass.exit_crit_edge, label %for.cond.9.i

for.cond.8.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.9.i:                                     ; preds = %for.cond.8.i
  %call.i25.10.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 10, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.10.i = icmp ugt ptr %call.i25.10.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.10.i, label %for.cond.9.i.create_fdb_bypass.exit_crit_edge, label %for.cond.10.i

for.cond.9.i.create_fdb_bypass.exit_crit_edge:    ; preds = %for.cond.9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.10.i:                                    ; preds = %for.cond.9.i
  %call.i25.11.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 11, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.11.i = icmp ugt ptr %call.i25.11.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.11.i, label %for.cond.10.i.create_fdb_bypass.exit_crit_edge, label %for.cond.11.i

for.cond.10.i.create_fdb_bypass.exit_crit_edge:   ; preds = %for.cond.10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.11.i:                                    ; preds = %for.cond.10.i
  %call.i25.12.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 12, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.12.i = icmp ugt ptr %call.i25.12.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.12.i, label %for.cond.11.i.create_fdb_bypass.exit_crit_edge, label %for.cond.12.i

for.cond.11.i.create_fdb_bypass.exit_crit_edge:   ; preds = %for.cond.11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.12.i:                                    ; preds = %for.cond.11.i
  %call.i25.13.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 13, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.13.i = icmp ugt ptr %call.i25.13.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.13.i, label %for.cond.12.i.create_fdb_bypass.exit_crit_edge, label %for.cond.13.i

for.cond.12.i.create_fdb_bypass.exit_crit_edge:   ; preds = %for.cond.12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.13.i:                                    ; preds = %for.cond.12.i
  %call.i25.14.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 14, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.14.i = icmp ugt ptr %call.i25.14.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.14.i, label %for.cond.13.i.create_fdb_bypass.exit_crit_edge, label %for.cond.14.i

for.cond.13.i.create_fdb_bypass.exit_crit_edge:   ; preds = %for.cond.13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

for.cond.14.i:                                    ; preds = %for.cond.13.i
  %call.i25.15.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call4.i, i32 noundef 15, i32 noundef 1, i32 noundef 1) #14
  %cmp.i26.15.i = icmp ugt ptr %call.i25.15.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26.15.i, label %for.cond.14.i.create_fdb_bypass.exit_crit_edge, label %for.cond.14.i.if.end5_crit_edge

for.cond.14.i.if.end5_crit_edge:                  ; preds = %for.cond.14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

for.cond.14.i.create_fdb_bypass.exit_crit_edge:   ; preds = %for.cond.14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_bypass.exit

create_fdb_bypass.exit:                           ; preds = %for.cond.14.i.create_fdb_bypass.exit_crit_edge, %for.cond.13.i.create_fdb_bypass.exit_crit_edge, %for.cond.12.i.create_fdb_bypass.exit_crit_edge, %for.cond.11.i.create_fdb_bypass.exit_crit_edge, %for.cond.10.i.create_fdb_bypass.exit_crit_edge, %for.cond.9.i.create_fdb_bypass.exit_crit_edge, %for.cond.8.i.create_fdb_bypass.exit_crit_edge, %for.cond.7.i.create_fdb_bypass.exit_crit_edge, %for.cond.6.i.create_fdb_bypass.exit_crit_edge, %for.cond.5.i.create_fdb_bypass.exit_crit_edge, %for.cond.4.i.create_fdb_bypass.exit_crit_edge, %for.cond.3.i.create_fdb_bypass.exit_crit_edge, %for.cond.2.i.create_fdb_bypass.exit_crit_edge, %for.cond.1.i.create_fdb_bypass.exit_crit_edge, %for.cond.i.create_fdb_bypass.exit_crit_edge, %for.body.preheader.i.create_fdb_bypass.exit_crit_edge, %if.end.i.create_fdb_bypass.exit_crit_edge, %if.end.create_fdb_bypass.exit_crit_edge
  %retval.0.i.in = phi ptr [ %call.i.i, %if.end.create_fdb_bypass.exit_crit_edge ], [ %call4.i, %if.end.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.i, %for.body.preheader.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.1.i, %for.cond.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.2.i, %for.cond.1.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.3.i, %for.cond.2.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.4.i, %for.cond.3.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.5.i, %for.cond.4.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.6.i, %for.cond.5.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.7.i, %for.cond.6.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.8.i, %for.cond.7.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.9.i, %for.cond.8.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.10.i, %for.cond.9.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.11.i, %for.cond.10.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.12.i, %for.cond.11.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.13.i, %for.cond.12.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.14.i, %for.cond.13.i.create_fdb_bypass.exit_crit_edge ], [ %call.i25.15.i, %for.cond.14.i.create_fdb_bypass.exit_crit_edge ]
  %retval.0.i = ptrtoint ptr %retval.0.i.in to i32
  %tobool3.not = icmp eq ptr %retval.0.i.in, null
  br i1 %tobool3.not, label %create_fdb_bypass.exit.if.end5_crit_edge, label %create_fdb_bypass.exit.out_err_crit_edge

create_fdb_bypass.exit.out_err_crit_edge:         ; preds = %create_fdb_bypass.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

create_fdb_bypass.exit.if.end5_crit_edge:         ; preds = %create_fdb_bypass.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.end5:                                          ; preds = %create_fdb_bypass.exit.if.end5_crit_edge, %for.cond.14.i.if.end5_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 20) #18
  %fdb_sub_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 6
  %2 = ptrtoint ptr %fdb_sub_ns.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call7.i.i.i.i, ptr %fdb_sub_ns.i, align 4
  %tobool.not.i = icmp eq ptr %call7.i.i.i.i, null
  br i1 %tobool.not.i, label %if.end5.out_err_crit_edge, label %if.end.i64

if.end5.out_err_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

if.end.i64:                                       ; preds = %if.end5
  %call2.i = tail call fastcc i32 @create_fdb_chains(ptr noundef %steering, i32 noundef 1, i32 noundef 4) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %create_fdb_fast_path.exit, label %if.end.i64.out_err_crit_edge

if.end.i64.out_err_crit_edge:                     ; preds = %if.end.i64
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

create_fdb_fast_path.exit:                        ; preds = %if.end.i64
  %call6.i = tail call fastcc i32 @create_fdb_chains(ptr noundef %steering, i32 noundef 2, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not, label %if.end9, label %create_fdb_fast_path.exit.out_err_crit_edge

create_fdb_fast_path.exit.out_err_crit_edge:      ; preds = %create_fdb_fast_path.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

if.end9:                                          ; preds = %create_fdb_fast_path.exit
  %3 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fdb_root_ns, align 4
  %call.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %4, i32 noundef 3, i32 noundef 1, i32 noundef 1) #14
  %cmp.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %5 = ptrtoint ptr %call.i to i32
  br label %out_err

if.end15:                                         ; preds = %if.end9
  %6 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fdb_root_ns, align 4
  %call.i66 = tail call fastcc ptr @_fs_create_prio(ptr noundef %7, i32 noundef 4, i32 noundef 3, i32 noundef 1) #14
  %cmp.i67 = icmp ugt ptr %call.i66, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i67, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  %8 = ptrtoint ptr %call.i66 to i32
  br label %out_err

if.end22:                                         ; preds = %if.end15
  %9 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fdb_root_ns, align 4
  %call.i68 = tail call fastcc ptr @_fs_create_prio(ptr noundef %10, i32 noundef 5, i32 noundef 1, i32 noundef 1) #14
  %cmp.i69 = icmp ugt ptr %call.i68, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i69, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %call.i68 to i32
  br label %out_err

if.end29:                                         ; preds = %if.end22
  %12 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %fdb_root_ns, align 4
  %call.i70 = tail call fastcc ptr @_fs_create_prio(ptr noundef %13, i32 noundef 6, i32 noundef 1, i32 noundef 1) #14
  %cmp.i71 = icmp ugt ptr %call.i70, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i71, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %14 = ptrtoint ptr %call.i70 to i32
  br label %out_err

if.end36:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %fdb_root_ns, align 4
  tail call fastcc void @set_prio_attrs(ptr noundef %16)
  br label %cleanup

out_err:                                          ; preds = %if.then34, %if.then27, %if.then20, %if.then13, %create_fdb_fast_path.exit.out_err_crit_edge, %if.end.i64.out_err_crit_edge, %if.end5.out_err_crit_edge, %create_fdb_bypass.exit.out_err_crit_edge
  %err.0 = phi i32 [ %retval.0.i, %create_fdb_bypass.exit.out_err_crit_edge ], [ %call6.i, %create_fdb_fast_path.exit.out_err_crit_edge ], [ %5, %if.then13 ], [ %8, %if.then20 ], [ %11, %if.then27 ], [ %14, %if.then34 ], [ %call2.i, %if.end.i64.out_err_crit_edge ], [ -12, %if.end5.out_err_crit_edge ]
  %17 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %fdb_root_ns, align 4
  %tobool.not.i72 = icmp eq ptr %18, null
  br i1 %tobool.not.i72, label %out_err.cleanup_root_ns.exit_crit_edge, label %if.end.i73

out_err.cleanup_root_ns.exit_crit_edge:           ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i73:                                       ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %18) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i73, %out_err.cleanup_root_ns.exit_crit_edge
  %fdb_sub_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 6
  %19 = ptrtoint ptr %fdb_sub_ns to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %fdb_sub_ns, align 4
  tail call void @kfree(ptr noundef %20) #14
  %21 = ptrtoint ptr %fdb_sub_ns to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %fdb_sub_ns, align 4
  %22 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %fdb_root_ns, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup_root_ns.exit, %if.end36, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %cleanup_root_ns.exit ], [ 0, %if.end36 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_sniffer_rx_root_ns(ptr nocapture noundef %steering) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @create_root_ns(ptr noundef %steering, i32 noundef 5)
  %sniffer_rx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 10
  %0 = ptrtoint ptr %sniffer_rx_root_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %sniffer_rx_root_ns, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call fastcc ptr @_fs_create_prio(ptr noundef nonnull %call, i32 noundef 0, i32 noundef 1, i32 noundef 1) #14
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  %1 = ptrtoint ptr %call.i to i32
  %spec.select.i = select i1 %cmp.i.i, i32 %1, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %spec.select.i, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_sniffer_tx_root_ns(ptr nocapture noundef %steering) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @create_root_ns(ptr noundef %steering, i32 noundef 6)
  %sniffer_tx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 9
  %0 = ptrtoint ptr %sniffer_tx_root_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %sniffer_tx_root_ns, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call fastcc ptr @_fs_create_prio(ptr noundef nonnull %call, i32 noundef 0, i32 noundef 1, i32 noundef 1) #14
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  %1 = ptrtoint ptr %call.i to i32
  %spec.select.i = select i1 %cmp.i.i, i32 %1, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %spec.select.i, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_port_sel_root_ns(ptr nocapture noundef %steering) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @create_root_ns(ptr noundef %steering, i32 noundef 9)
  %port_sel_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 14
  %0 = ptrtoint ptr %port_sel_root_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %port_sel_root_ns, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call fastcc ptr @_fs_create_prio(ptr noundef nonnull %call, i32 noundef 0, i32 noundef 3, i32 noundef 1) #14
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  %1 = ptrtoint ptr %call.i to i32
  %spec.select.i = select i1 %cmp.i.i, i32 %1, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %spec.select.i, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_rdma_rx_root_ns(ptr nocapture noundef %steering) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @create_root_ns(ptr noundef %steering, i32 noundef 7)
  %rdma_rx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 11
  %0 = ptrtoint ptr %rdma_rx_root_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %rdma_rx_root_ns, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.body.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.i:                                       ; preds = %for.body.i
  %call.i.1 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([3 x %struct.init_tree_node], ptr @.compoundliteral.112, i32 0, i32 1), ptr noundef nonnull %call, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1)
  %tobool.not.i.1 = icmp eq i32 %call.i.1, 0
  br i1 %tobool.not.i.1, label %for.cond.i.1, label %for.cond.i.out_err_crit_edge

for.cond.i.out_err_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.1:                                     ; preds = %for.cond.i
  %call.i.2 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([3 x %struct.init_tree_node], ptr @.compoundliteral.112, i32 0, i32 2), ptr noundef nonnull %call, i32 noundef 2) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.2)
  %tobool.not.i.2 = icmp eq i32 %call.i.2, 0
  br i1 %tobool.not.i.2, label %for.cond.i.2, label %for.cond.i.1.out_err_crit_edge

for.cond.i.1.out_err_crit_edge:                   ; preds = %for.cond.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.2:                                     ; preds = %for.cond.i.1
  %1 = ptrtoint ptr %rdma_rx_root_ns to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdma_rx_root_ns, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %prio.016.i = load ptr, ptr %children.i, align 4
  %cmp.not17.i = icmp eq ptr %prio.016.i, %children.i
  br i1 %cmp.not17.i, label %for.cond.i.2.cleanup_crit_edge, label %for.cond.i.2.for.body.i18_crit_edge

for.cond.i.2.for.body.i18_crit_edge:              ; preds = %for.cond.i.2
  br label %for.body.i18

for.cond.i.2.cleanup_crit_edge:                   ; preds = %for.cond.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.i:                                       ; preds = %entry
  %call.i = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef nonnull @.compoundliteral.112, ptr noundef nonnull %call, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %for.cond.i, label %for.body.i.out_err_crit_edge

for.body.i.out_err_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.body.i18:                                     ; preds = %for.body.i18.for.body.i18_crit_edge, %for.cond.i.2.for.body.i18_crit_edge
  %prio.019.i = phi ptr [ %prio.0.i, %for.body.i18.for.body.i18_crit_edge ], [ %prio.016.i, %for.cond.i.2.for.body.i18_crit_edge ]
  %start_level.018.i = phi i32 [ %add.i, %for.body.i18.for.body.i18_crit_edge ], [ 0, %for.cond.i.2.for.body.i18_crit_edge ]
  tail call fastcc void @set_prio_attrs_in_prio(ptr noundef %prio.019.i, i32 noundef %start_level.018.i) #14
  %num_levels.i = getelementptr inbounds %struct.fs_prio, ptr %prio.019.i, i32 0, i32 1
  %4 = ptrtoint ptr %num_levels.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_levels.i, align 4
  %add.i = add i32 %5, %start_level.018.i
  %6 = ptrtoint ptr %prio.019.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %prio.0.i = load ptr, ptr %prio.019.i, align 4
  %cmp.not.i = icmp eq ptr %prio.0.i, %children.i
  br i1 %cmp.not.i, label %for.body.i18.cleanup_crit_edge, label %for.body.i18.for.body.i18_crit_edge

for.body.i18.for.body.i18_crit_edge:              ; preds = %for.body.i18
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i18

for.body.i18.cleanup_crit_edge:                   ; preds = %for.body.i18
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

out_err:                                          ; preds = %for.body.i.out_err_crit_edge, %for.cond.i.1.out_err_crit_edge, %for.cond.i.out_err_crit_edge
  %call.i.lcssa = phi i32 [ %call.i, %for.body.i.out_err_crit_edge ], [ %call.i.1, %for.cond.i.out_err_crit_edge ], [ %call.i.2, %for.cond.i.1.out_err_crit_edge ]
  %7 = ptrtoint ptr %rdma_rx_root_ns to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rdma_rx_root_ns, align 4
  %tobool.not.i19 = icmp eq ptr %8, null
  br i1 %tobool.not.i19, label %out_err.cleanup_root_ns.exit_crit_edge, label %if.end.i

out_err.cleanup_root_ns.exit_crit_edge:           ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i:                                         ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %8) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i, %out_err.cleanup_root_ns.exit_crit_edge
  %9 = ptrtoint ptr %rdma_rx_root_ns to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %rdma_rx_root_ns, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup_root_ns.exit, %for.body.i18.cleanup_crit_edge, %for.cond.i.2.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.lcssa, %cleanup_root_ns.exit ], [ -12, %entry.cleanup_crit_edge ], [ 0, %for.cond.i.2.cleanup_crit_edge ], [ 0, %for.body.i18.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_rdma_tx_root_ns(ptr nocapture noundef %steering) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @create_root_ns(ptr noundef %steering, i32 noundef 8)
  %rdma_tx_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 12
  %0 = ptrtoint ptr %rdma_tx_root_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %rdma_tx_root_ns, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.body.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.i:                                       ; preds = %for.body.i
  %call.i.1 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([2 x %struct.init_tree_node], ptr @.compoundliteral.121, i32 0, i32 1), ptr noundef nonnull %call, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1)
  %tobool.not.i.1 = icmp eq i32 %call.i.1, 0
  br i1 %tobool.not.i.1, label %for.cond.i.1, label %for.cond.i.out_err_crit_edge

for.cond.i.out_err_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.cond.i.1:                                     ; preds = %for.cond.i
  %1 = ptrtoint ptr %rdma_tx_root_ns to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdma_tx_root_ns, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %prio.016.i = load ptr, ptr %children.i, align 4
  %cmp.not17.i = icmp eq ptr %prio.016.i, %children.i
  br i1 %cmp.not17.i, label %for.cond.i.1.cleanup_crit_edge, label %for.cond.i.1.for.body.i18_crit_edge

for.cond.i.1.for.body.i18_crit_edge:              ; preds = %for.cond.i.1
  br label %for.body.i18

for.cond.i.1.cleanup_crit_edge:                   ; preds = %for.cond.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.i:                                       ; preds = %entry
  %call.i = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef nonnull @.compoundliteral.121, ptr noundef nonnull %call, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %for.cond.i, label %for.body.i.out_err_crit_edge

for.body.i.out_err_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_err

for.body.i18:                                     ; preds = %for.body.i18.for.body.i18_crit_edge, %for.cond.i.1.for.body.i18_crit_edge
  %prio.019.i = phi ptr [ %prio.0.i, %for.body.i18.for.body.i18_crit_edge ], [ %prio.016.i, %for.cond.i.1.for.body.i18_crit_edge ]
  %start_level.018.i = phi i32 [ %add.i, %for.body.i18.for.body.i18_crit_edge ], [ 0, %for.cond.i.1.for.body.i18_crit_edge ]
  tail call fastcc void @set_prio_attrs_in_prio(ptr noundef %prio.019.i, i32 noundef %start_level.018.i) #14
  %num_levels.i = getelementptr inbounds %struct.fs_prio, ptr %prio.019.i, i32 0, i32 1
  %4 = ptrtoint ptr %num_levels.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_levels.i, align 4
  %add.i = add i32 %5, %start_level.018.i
  %6 = ptrtoint ptr %prio.019.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %prio.0.i = load ptr, ptr %prio.019.i, align 4
  %cmp.not.i = icmp eq ptr %prio.0.i, %children.i
  br i1 %cmp.not.i, label %for.body.i18.cleanup_crit_edge, label %for.body.i18.for.body.i18_crit_edge

for.body.i18.for.body.i18_crit_edge:              ; preds = %for.body.i18
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i18

for.body.i18.cleanup_crit_edge:                   ; preds = %for.body.i18
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

out_err:                                          ; preds = %for.body.i.out_err_crit_edge, %for.cond.i.out_err_crit_edge
  %call.i.lcssa = phi i32 [ %call.i, %for.body.i.out_err_crit_edge ], [ %call.i.1, %for.cond.i.out_err_crit_edge ]
  %7 = ptrtoint ptr %rdma_tx_root_ns to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rdma_tx_root_ns, align 4
  %tobool.not.i19 = icmp eq ptr %8, null
  br i1 %tobool.not.i19, label %out_err.cleanup_root_ns.exit_crit_edge, label %if.end.i

out_err.cleanup_root_ns.exit_crit_edge:           ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i:                                         ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %8) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i, %out_err.cleanup_root_ns.exit_crit_edge
  %9 = ptrtoint ptr %rdma_tx_root_ns to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %rdma_tx_root_ns, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup_root_ns.exit, %for.body.i18.cleanup_crit_edge, %for.cond.i.1.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.lcssa, %cleanup_root_ns.exit ], [ -12, %entry.cleanup_crit_edge ], [ 0, %for.cond.i.1.cleanup_crit_edge ], [ 0, %for.body.i18.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_fpga_ipsec_device_caps(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_egress_root_ns(ptr nocapture noundef %steering) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @create_root_ns(ptr noundef %steering, i32 noundef 1)
  %egress_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 13
  %0 = ptrtoint ptr %egress_root_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %egress_root_ns, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup10_crit_edge, label %for.body.i

entry.cleanup10_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup10

for.cond.i:                                       ; preds = %for.body.i
  %call.i.1 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef getelementptr inbounds ([2 x %struct.init_tree_node], ptr @.compoundliteral.130, i32 0, i32 1), ptr noundef nonnull %call, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.1)
  %tobool.not.i.1 = icmp eq i32 %call.i.1, 0
  br i1 %tobool.not.i.1, label %for.cond.i.1, label %for.cond.i.cleanup_crit_edge

for.cond.i.cleanup_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.i.1:                                     ; preds = %for.cond.i
  %1 = ptrtoint ptr %egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %egress_root_ns, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %prio.016.i = load ptr, ptr %children.i, align 4
  %cmp.not17.i = icmp eq ptr %prio.016.i, %children.i
  br i1 %cmp.not17.i, label %for.cond.i.1.cleanup10_crit_edge, label %for.cond.i.1.for.body.i19_crit_edge

for.cond.i.1.for.body.i19_crit_edge:              ; preds = %for.cond.i.1
  br label %for.body.i19

for.cond.i.1.cleanup10_crit_edge:                 ; preds = %for.cond.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup10

for.body.i:                                       ; preds = %entry
  %call.i = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef nonnull @.compoundliteral.130, ptr noundef nonnull %call, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %for.cond.i, label %for.body.i.cleanup_crit_edge

for.body.i.cleanup_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.i19:                                     ; preds = %for.body.i19.for.body.i19_crit_edge, %for.cond.i.1.for.body.i19_crit_edge
  %prio.019.i = phi ptr [ %prio.0.i, %for.body.i19.for.body.i19_crit_edge ], [ %prio.016.i, %for.cond.i.1.for.body.i19_crit_edge ]
  %start_level.018.i = phi i32 [ %add.i, %for.body.i19.for.body.i19_crit_edge ], [ 0, %for.cond.i.1.for.body.i19_crit_edge ]
  tail call fastcc void @set_prio_attrs_in_prio(ptr noundef %prio.019.i, i32 noundef %start_level.018.i) #14
  %num_levels.i = getelementptr inbounds %struct.fs_prio, ptr %prio.019.i, i32 0, i32 1
  %4 = ptrtoint ptr %num_levels.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_levels.i, align 4
  %add.i = add i32 %5, %start_level.018.i
  %6 = ptrtoint ptr %prio.019.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %prio.0.i = load ptr, ptr %prio.019.i, align 4
  %cmp.not.i = icmp eq ptr %prio.0.i, %children.i
  br i1 %cmp.not.i, label %for.body.i19.cleanup10_crit_edge, label %for.body.i19.for.body.i19_crit_edge

for.body.i19.for.body.i19_crit_edge:              ; preds = %for.body.i19
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i19

for.body.i19.cleanup10_crit_edge:                 ; preds = %for.body.i19
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup10

cleanup:                                          ; preds = %for.body.i.cleanup_crit_edge, %for.cond.i.cleanup_crit_edge
  %call.i.lcssa = phi i32 [ %call.i, %for.body.i.cleanup_crit_edge ], [ %call.i.1, %for.cond.i.cleanup_crit_edge ]
  %7 = ptrtoint ptr %egress_root_ns to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %egress_root_ns, align 4
  %tobool.not.i20 = icmp eq ptr %8, null
  br i1 %tobool.not.i20, label %cleanup.cleanup_root_ns.exit_crit_edge, label %if.end.i

cleanup.cleanup_root_ns.exit_crit_edge:           ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_root_ns.exit

if.end.i:                                         ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @clean_tree(ptr noundef nonnull %8) #14
  br label %cleanup_root_ns.exit

cleanup_root_ns.exit:                             ; preds = %if.end.i, %cleanup.cleanup_root_ns.exit_crit_edge
  %9 = ptrtoint ptr %egress_root_ns to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %egress_root_ns, align 4
  br label %cleanup10

cleanup10:                                        ; preds = %cleanup_root_ns.exit, %for.body.i19.cleanup10_crit_edge, %for.cond.i.1.cleanup10_crit_edge, %entry.cleanup10_crit_edge
  %retval.0 = phi i32 [ %call.i.lcssa, %cleanup_root_ns.exit ], [ -12, %entry.cleanup10_crit_edge ], [ 0, %for.cond.i.1.cleanup10_crit_edge ], [ 0, %for.body.i19.cleanup10_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_fs_add_rx_underlay_qpn(ptr nocapture noundef readonly %dev, i32 noundef %underlay_qpn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering, align 4
  %root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %root_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root_ns, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %4 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3520, i32 noundef 12) #18
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %chain_lock = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %chain_lock, i32 noundef 0) #14
  %root_ft = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 5
  %5 = ptrtoint ptr %root_ft to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %root_ft, align 4
  %tobool1.not = icmp eq ptr %6, null
  br i1 %tobool1.not, label %if.end.update_ft_fail_crit_edge, label %if.end3

if.end.update_ft_fail_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %update_ft_fail

if.end3:                                          ; preds = %if.end
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 8
  %7 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cmds, align 4
  %update_root_ft = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %8, i32 0, i32 8
  %9 = ptrtoint ptr %update_root_ft to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %update_root_ft, align 4
  %call5 = tail call i32 %10(ptr noundef %3, ptr noundef nonnull %6, i32 noundef %underlay_qpn, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end9, label %do.end

do.end:                                           ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev, align 8
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 68
  %17 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %12, ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12, i32 noundef 3186, i32 noundef %18, i32 noundef %underlay_qpn, i32 noundef %call5) #17
  br label %update_ft_fail

if.end9:                                          ; preds = %if.end3
  %qpn = getelementptr inbounds %struct.mlx5_ft_underlay_qp, ptr %call7.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %qpn to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %underlay_qpn, ptr %qpn, align 8
  %underlay_qpns = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 7
  %prev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 7, i32 1
  %20 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %21, ptr noundef %underlay_qpns) #14
  br i1 %call.i.i, label %if.end.i.i, label %if.end9.list_add_tail.exit_crit_edge

if.end9.list_add_tail.exit_crit_edge:             ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call7.i.i, ptr %prev.i, align 4
  %23 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %underlay_qpns, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %24 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev3.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %call7.i.i, ptr %21, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end9.list_add_tail.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %chain_lock) #14
  br label %cleanup

update_ft_fail:                                   ; preds = %do.end, %if.end.update_ft_fail_crit_edge
  %err.0 = phi i32 [ %call5, %do.end ], [ -22, %if.end.update_ft_fail_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %chain_lock) #14
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %update_ft_fail, %list_add_tail.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %update_ft_fail ], [ 0, %list_add_tail.exit ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_fs_remove_rx_underlay_qpn(ptr nocapture noundef readonly %dev, i32 noundef %underlay_qpn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %steering = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering, align 4
  %root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %root_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root_ns, align 4
  %chain_lock = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %chain_lock, i32 noundef 0) #14
  %underlay_qpns = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 7
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %uqp.0.in = phi ptr [ %underlay_qpns, %entry ], [ %uqp.0, %for.body.for.cond_crit_edge ]
  %4 = ptrtoint ptr %uqp.0.in to i32
  call void @__asan_load4_noabort(i32 %4)
  %uqp.0 = load ptr, ptr %uqp.0.in, align 4
  %cmp.not = icmp eq ptr %uqp.0, %underlay_qpns
  br i1 %cmp.not, label %do.end.critedge, label %for.body

for.body:                                         ; preds = %for.cond
  %qpn = getelementptr inbounds %struct.mlx5_ft_underlay_qp, ptr %uqp.0, i32 0, i32 1
  %5 = ptrtoint ptr %qpn to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %qpn, align 4
  %cmp2 = icmp eq i32 %6, %underlay_qpn
  br i1 %cmp2, label %if.end9, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond

do.end.critedge:                                  ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev, align 8
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 68
  %13 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %8, ptr noundef nonnull @.str.13, ptr noundef nonnull @.str.14, i32 noundef 3221, i32 noundef %14, i32 noundef %underlay_qpn) #17
  tail call void @mutex_unlock(ptr noundef %chain_lock) #14
  br label %cleanup

if.end9:                                          ; preds = %for.body
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 8
  %15 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cmds, align 4
  %update_root_ft = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %16, i32 0, i32 8
  %17 = ptrtoint ptr %update_root_ft to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %update_root_ft, align 4
  %root_ft = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 5
  %19 = ptrtoint ptr %root_ft to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %root_ft, align 4
  %call10 = tail call i32 %18(ptr noundef %3, ptr noundef %20, i32 noundef %underlay_qpn, i1 noundef zeroext true) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end9.if.end20_crit_edge, label %do.end15

if.end9.if.end20_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

do.end15:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %21 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev, align 8
  %23 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i45 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i45 to ptr
  %task18 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %task18 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task18, align 8
  %pid19 = getelementptr inbounds %struct.task_struct, ptr %26, i32 0, i32 68
  %27 = ptrtoint ptr %pid19 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %pid19, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %22, ptr noundef nonnull @.str.16, ptr noundef nonnull @.str.14, i32 noundef 3230, i32 noundef %28, i32 noundef %underlay_qpn, i32 noundef %call10) #17
  br label %if.end20

if.end20:                                         ; preds = %do.end15, %if.end9.if.end20_crit_edge
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %uqp.0) #14
  br i1 %call.i.i, label %if.end.i.i, label %if.end20.list_del.exit_crit_edge

if.end20.list_del.exit_crit_edge:                 ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %uqp.0, i32 0, i32 1
  %29 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i.i, align 4
  %31 = ptrtoint ptr %uqp.0 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %uqp.0, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev1.i.i.i, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %32, ptr %30, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end20.list_del.exit_crit_edge
  %35 = ptrtoint ptr %uqp.0 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr inttoptr (i32 256 to ptr), ptr %uqp.0, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %uqp.0, i32 0, i32 1
  %36 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef %chain_lock) #14
  tail call void @kfree(ptr noundef %uqp.0) #14
  br label %cleanup

cleanup:                                          ; preds = %list_del.exit, %do.end.critedge
  %retval.0 = phi i32 [ 0, %list_del.exit ], [ -22, %do.end.critedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_modify_header_alloc(ptr nocapture noundef readonly %dev, i8 noundef zeroext %ns_type, i8 noundef zeroext %num_actions, ptr noundef %modify_actions) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i8 %ns_type to i32
  %call = tail call fastcc ptr @get_root_namespace(ptr noundef %dev, i32 noundef %conv)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 8) #18
  %tobool3.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %1 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %conv, ptr %call7.i.i, align 8
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call, i32 0, i32 8
  %2 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cmds, align 4
  %modify_header_alloc = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %modify_header_alloc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %modify_header_alloc, align 4
  %call9 = tail call i32 %5(ptr noundef nonnull %call, i8 noundef zeroext %ns_type, i8 noundef zeroext %num_actions, ptr noundef %modify_actions, ptr noundef nonnull %call7.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end6.cleanup_crit_edge, label %if.then11

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then11:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  %6 = inttoptr i32 %call9 to ptr
  br label %cleanup

cleanup:                                          ; preds = %if.then11, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %6, %if.then11 ], [ %call7.i.i, %if.end6.cleanup_crit_edge ], [ inttoptr (i32 -95 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_root_namespace(ptr nocapture noundef readonly %dev, i32 noundef %ns_type) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ns_type.off = add i32 %ns_type, -9
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %ns_type.off)
  %switch = icmp ult i32 %ns_type.off, 2
  %steering1.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %dev, i32 0, i32 17, i32 26
  %0 = ptrtoint ptr %steering1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering1.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %switch, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br i1 %tobool.not.i, label %if.then.cleanup_crit_edge, label %if.end.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %if.then
  %2 = zext i32 %ns_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.136)
  switch i32 %ns_type, label %if.end.i.cleanup_crit_edge [
    i32 9, label %sw.bb.i
    i32 10, label %sw.bb10.i
  ]

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end.i
  %esw_egress_acl_vports.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 15
  %3 = ptrtoint ptr %esw_egress_acl_vports.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %esw_egress_acl_vports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.not.i = icmp sgt i32 %4, 0
  br i1 %cmp.not.i, label %if.end3.i, label %sw.bb.i.cleanup_crit_edge

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3.i:                                        ; preds = %sw.bb.i
  %esw_egress_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 7
  %5 = ptrtoint ptr %esw_egress_root_ns.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %esw_egress_root_ns.i, align 4
  %tobool4.not.i = icmp eq ptr %6, null
  br i1 %tobool4.not.i, label %if.end3.i.cleanup_crit_edge, label %land.lhs.true.i

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end3.i
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool6.not.i = icmp eq ptr %8, null
  br i1 %tobool6.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %land.lhs.true.i.if.end4_crit_edge

land.lhs.true.i.if.end4_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb10.i:                                        ; preds = %if.end.i
  %esw_ingress_acl_vports.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 16
  %9 = ptrtoint ptr %esw_ingress_acl_vports.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %esw_ingress_acl_vports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp11.not.i = icmp sgt i32 %10, 0
  br i1 %cmp11.not.i, label %if.end13.i, label %sw.bb10.i.cleanup_crit_edge

sw.bb10.i.cleanup_crit_edge:                      ; preds = %sw.bb10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end13.i:                                       ; preds = %sw.bb10.i
  %esw_ingress_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 8
  %11 = ptrtoint ptr %esw_ingress_root_ns.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %esw_ingress_root_ns.i, align 4
  %tobool14.not.i = icmp eq ptr %12, null
  br i1 %tobool14.not.i, label %if.end13.i.cleanup_crit_edge, label %land.lhs.true15.i

if.end13.i.cleanup_crit_edge:                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true15.i:                                ; preds = %if.end13.i
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %tobool18.not.i = icmp eq ptr %14, null
  br i1 %tobool18.not.i, label %land.lhs.true15.i.cleanup_crit_edge, label %land.lhs.true15.i.if.end4_crit_edge

land.lhs.true15.i.if.end4_crit_edge:              ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

land.lhs.true15.i.cleanup_crit_edge:              ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else:                                          ; preds = %entry
  br i1 %tobool.not.i, label %if.else.cleanup_crit_edge, label %if.end.i13

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i13:                                       ; preds = %if.else
  %15 = zext i32 %ns_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.137)
  switch i32 %ns_type, label %sw.default.i [
    i32 8, label %sw.bb.i14
    i32 18, label %sw.bb7.i
    i32 11, label %sw.bb13.i
    i32 12, label %sw.bb19.i
    i32 7, label %sw.bb25.i
    i32 13, label %if.end.i13.sw.bb27.i_crit_edge
    i32 14, label %if.end.i13.sw.bb27.i_crit_edge32
    i32 15, label %sw.bb28.i
    i32 16, label %sw.bb29.i
    i32 17, label %sw.bb31.i
    i32 19, label %sw.bb32.i
    i32 20, label %sw.bb34.i
  ]

if.end.i13.sw.bb27.i_crit_edge32:                 ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb27.i

if.end.i13.sw.bb27.i_crit_edge:                   ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb27.i

sw.bb.i14:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %fdb_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 5
  br label %if.end

sw.bb7.i:                                         ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %port_sel_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 14
  br label %if.end

sw.bb13.i:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %sniffer_rx_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 10
  br label %if.end

sw.bb19.i:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %sniffer_tx_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 9
  br label %if.end

sw.bb25.i:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %fdb_root_ns26.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 5
  br label %sw.epilog.i

sw.bb27.i:                                        ; preds = %if.end.i13.sw.bb27.i_crit_edge, %if.end.i13.sw.bb27.i_crit_edge32
  %egress_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 13
  %sub.i = add nsw i32 %ns_type, -13
  br label %sw.epilog.i

sw.bb28.i:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_rx_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 11
  br label %sw.epilog.i

sw.bb29.i:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_rx_root_ns30.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 11
  br label %sw.epilog.i

sw.bb31.i:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_tx_root_ns.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 12
  br label %sw.epilog.i

sw.bb32.i:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_rx_root_ns33.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 11
  br label %sw.epilog.i

sw.bb34.i:                                        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #16
  %rdma_tx_root_ns35.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 12
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %ns_type)
  %switch.i.i = icmp ult i32 %ns_type, 7
  br i1 %switch.i.i, label %sw.default.i.if.end51.i_crit_edge, label %do.end.i, !prof !259

sw.default.i.if.end51.i_crit_edge:                ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end51.i

do.end.i:                                         ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2286, i32 noundef 9, ptr noundef null) #14
  br label %if.end51.i

if.end51.i:                                       ; preds = %do.end.i, %sw.default.i.if.end51.i_crit_edge
  %root_ns58.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %1, i32 0, i32 4
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.end51.i, %sw.bb34.i, %sw.bb32.i, %sw.bb31.i, %sw.bb29.i, %sw.bb28.i, %sw.bb27.i, %sw.bb25.i
  %prio.0.i = phi i32 [ %ns_type, %if.end51.i ], [ 0, %sw.bb34.i ], [ 0, %sw.bb32.i ], [ 0, %sw.bb31.i ], [ 2, %sw.bb29.i ], [ 1, %sw.bb28.i ], [ %sub.i, %sw.bb27.i ], [ 0, %sw.bb25.i ]
  %root_ns.0.in.i = phi ptr [ %root_ns58.i, %if.end51.i ], [ %rdma_tx_root_ns35.i, %sw.bb34.i ], [ %rdma_rx_root_ns33.i, %sw.bb32.i ], [ %rdma_tx_root_ns.i, %sw.bb31.i ], [ %rdma_rx_root_ns30.i, %sw.bb29.i ], [ %rdma_rx_root_ns.i, %sw.bb28.i ], [ %egress_root_ns.i, %sw.bb27.i ], [ %fdb_root_ns26.i, %sw.bb25.i ]
  %16 = ptrtoint ptr %root_ns.0.in.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %root_ns.0.i = load ptr, ptr %root_ns.0.in.i, align 4
  %tobool59.not.i = icmp eq ptr %root_ns.0.i, null
  br i1 %tobool59.not.i, label %sw.epilog.i.cleanup_crit_edge, label %if.end61.i

sw.epilog.i.cleanup_crit_edge:                    ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end61.i:                                       ; preds = %sw.epilog.i
  %children.i.i = getelementptr inbounds %struct.fs_node, ptr %root_ns.0.i, i32 0, i32 1
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %if.end61.i
  %iter_prio.0.in.i.i = phi ptr [ %children.i.i, %if.end61.i ], [ %iter_prio.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %17 = ptrtoint ptr %iter_prio.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %iter_prio.0.i.i = load ptr, ptr %iter_prio.0.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %iter_prio.0.i.i, %children.i.i
  br i1 %cmp.not.i.i, label %for.cond.i.i.cleanup_crit_edge, label %for.body.i.i

for.cond.i.i.cleanup_crit_edge:                   ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.i.i:                                     ; preds = %for.cond.i.i
  %prio4.i.i = getelementptr inbounds %struct.fs_prio, ptr %iter_prio.0.i.i, i32 0, i32 3
  %18 = ptrtoint ptr %prio4.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %prio4.i.i, align 4
  %cmp5.i.i = icmp eq i32 %19, %prio.0.i
  br i1 %cmp5.i.i, label %find_prio.exit.i, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i.i

find_prio.exit.i:                                 ; preds = %for.body.i.i
  %tobool64.not.i = icmp eq ptr %iter_prio.0.i.i, null
  br i1 %tobool64.not.i, label %find_prio.exit.i.cleanup_crit_edge, label %if.end66.i

find_prio.exit.i.cleanup_crit_edge:               ; preds = %find_prio.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end66.i:                                       ; preds = %find_prio.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %children.i = getelementptr inbounds %struct.fs_node, ptr %iter_prio.0.i.i, i32 0, i32 1
  br label %if.end

if.end:                                           ; preds = %if.end66.i, %sw.bb19.i, %sw.bb13.i, %sw.bb7.i, %sw.bb.i14
  %sniffer_tx_root_ns.sink.i = phi ptr [ %sniffer_tx_root_ns.i, %sw.bb19.i ], [ %sniffer_rx_root_ns.i, %sw.bb13.i ], [ %port_sel_root_ns.i, %sw.bb7.i ], [ %fdb_root_ns.i, %sw.bb.i14 ], [ %children.i, %if.end66.i ]
  %20 = ptrtoint ptr %sniffer_tx_root_ns.sink.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sniffer_tx_root_ns.sink.i, align 4
  %tobool.not = icmp eq ptr %21, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end.if.end4_crit_edge, %land.lhs.true15.i.if.end4_crit_edge, %land.lhs.true.i.if.end4_crit_edge
  %ns.025 = phi ptr [ %21, %if.end.if.end4_crit_edge ], [ %14, %land.lhs.true15.i.if.end4_crit_edge ], [ %8, %land.lhs.true.i.if.end4_crit_edge ]
  %root1.i = getelementptr inbounds %struct.fs_node, ptr %ns.025, i32 0, i32 4
  %22 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %root1.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.not.i16 = icmp eq i32 %25, 0
  br i1 %cmp.not.i16, label %if.end4.cleanup_crit_edge, label %do.end.i17, !prof !259

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end.i17:                                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end.i17, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %find_prio.exit.i.cleanup_crit_edge, %for.cond.i.i.cleanup_crit_edge, %sw.epilog.i.cleanup_crit_edge, %if.else.cleanup_crit_edge, %land.lhs.true15.i.cleanup_crit_edge, %if.end13.i.cleanup_crit_edge, %sw.bb10.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %sw.bb.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.end.cleanup_crit_edge ], [ null, %do.end.i17 ], [ %23, %if.end4.cleanup_crit_edge ], [ null, %if.then.cleanup_crit_edge ], [ null, %sw.bb.i.cleanup_crit_edge ], [ null, %sw.bb10.i.cleanup_crit_edge ], [ null, %if.end.i.cleanup_crit_edge ], [ null, %if.else.cleanup_crit_edge ], [ null, %sw.epilog.i.cleanup_crit_edge ], [ null, %find_prio.exit.i.cleanup_crit_edge ], [ null, %land.lhs.true.i.cleanup_crit_edge ], [ null, %if.end3.i.cleanup_crit_edge ], [ null, %land.lhs.true15.i.cleanup_crit_edge ], [ null, %if.end13.i.cleanup_crit_edge ], [ null, %for.cond.i.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_modify_header_dealloc(ptr nocapture noundef readonly %dev, ptr noundef %modify_hdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %modify_hdr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %modify_hdr, align 4
  %call = tail call fastcc ptr @get_root_namespace(ptr noundef %dev, i32 noundef %1)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end, label %if.end23, !prof !261

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3294, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end23:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call, i32 0, i32 8
  %2 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cmds, align 4
  %modify_header_dealloc = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %modify_header_dealloc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %modify_header_dealloc, align 4
  tail call void %5(ptr noundef nonnull %call, ptr noundef %modify_hdr) #14
  tail call void @kfree(ptr noundef %modify_hdr) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_packet_reformat_alloc(ptr nocapture noundef readonly %dev, ptr noundef %params, i32 noundef %ns_type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @get_root_namespace(ptr noundef %dev, i32 noundef %ns_type)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 12) #18
  %tobool3.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %1 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %ns_type, ptr %call7.i.i, align 8
  %2 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %params, align 4
  %reformat_type = getelementptr inbounds %struct.mlx5_pkt_reformat, ptr %call7.i.i, i32 0, i32 1
  %4 = ptrtoint ptr %reformat_type to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %reformat_type, align 4
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call, i32 0, i32 8
  %5 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cmds, align 4
  %packet_reformat_alloc = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %6, i32 0, i32 9
  %7 = ptrtoint ptr %packet_reformat_alloc to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %packet_reformat_alloc, align 4
  %call8 = tail call i32 %8(ptr noundef nonnull %call, ptr noundef %params, i32 noundef %ns_type, ptr noundef nonnull %call7.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end6.cleanup_crit_edge, label %if.then10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then10:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  %9 = inttoptr i32 %call8 to ptr
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %9, %if.then10 ], [ %call7.i.i, %if.end6.cleanup_crit_edge ], [ inttoptr (i32 -95 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_packet_reformat_dealloc(ptr nocapture noundef readonly %dev, ptr noundef %pkt_reformat) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pkt_reformat to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pkt_reformat, align 4
  %call = tail call fastcc ptr @get_root_namespace(ptr noundef %dev, i32 noundef %1)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end, label %if.end23, !prof !261

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3336, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end23:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call, i32 0, i32 8
  %2 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cmds, align 4
  %packet_reformat_dealloc = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %packet_reformat_dealloc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %packet_reformat_dealloc, align 4
  tail call void %5(ptr noundef nonnull %call, ptr noundef %pkt_reformat) #14
  tail call void @kfree(ptr noundef %pkt_reformat) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %do.end
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @mlx5_get_match_definer_id(ptr nocapture noundef readonly %definer) local_unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %id = getelementptr inbounds %struct.mlx5_flow_definer, ptr %definer, i32 0, i32 1
  %0 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id, align 4
  ret i32 %1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_create_match_definer(ptr nocapture noundef readonly %dev, i32 noundef %ns_type, i16 noundef zeroext %format_id, ptr noundef %match_mask) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @get_root_namespace(ptr noundef %dev, i32 noundef %ns_type)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 8) #18
  %tobool3.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %1 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %ns_type, ptr %call7.i.i, align 8
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call, i32 0, i32 8
  %2 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cmds, align 4
  %create_match_definer = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %3, i32 0, i32 16
  %4 = ptrtoint ptr %create_match_definer to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %create_match_definer, align 4
  %call8 = tail call i32 %5(ptr noundef nonnull %call, i16 noundef zeroext %format_id, ptr noundef %match_mask) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp = icmp slt i32 %call8, 0
  br i1 %cmp, label %do.end, label %if.end13

do.end:                                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  %dev10 = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call, i32 0, i32 4
  %6 = ptrtoint ptr %dev10 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev10, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 8
  %10 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 68
  %14 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %9, ptr noundef nonnull @.str.18, ptr noundef nonnull @.str.19, i32 noundef 3368, i32 noundef %15, i32 noundef %call8) #17
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  %16 = inttoptr i32 %call8 to ptr
  br label %cleanup

if.end13:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  %id14 = getelementptr inbounds %struct.mlx5_flow_definer, ptr %call7.i.i, i32 0, i32 1
  %17 = ptrtoint ptr %id14 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %call8, ptr %id14, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %16, %do.end ], [ %call7.i.i, %if.end13 ], [ inttoptr (i32 -95 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_destroy_match_definer(ptr nocapture noundef readonly %dev, ptr noundef %definer) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %definer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %definer, align 4
  %call = tail call fastcc ptr @get_root_namespace(ptr noundef %dev, i32 noundef %1)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end, label %if.end23, !prof !261

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3382, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end23:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call, i32 0, i32 8
  %2 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cmds, align 4
  %destroy_match_definer = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %3, i32 0, i32 17
  %4 = ptrtoint ptr %destroy_match_definer to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %destroy_match_definer, align 4
  %id = getelementptr inbounds %struct.mlx5_flow_definer, ptr %definer, i32 0, i32 1
  %6 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %id, align 4
  %call24 = tail call i32 %5(ptr noundef nonnull %call, i32 noundef %7) #14
  tail call void @kfree(ptr noundef %definer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_flow_namespace_set_peer(ptr noundef %ns, ptr noundef %peer_ns) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %peer_ns, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %mode = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %ns, i32 0, i32 1
  %0 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mode, align 4
  %mode1 = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %peer_ns, i32 0, i32 1
  %2 = ptrtoint ptr %mode1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mode1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp eq i32 %1, %3
  br i1 %cmp.not, label %land.lhs.true.if.end_crit_edge, label %do.end

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %ns, i32 0, i32 4
  %4 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  %8 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 68
  %12 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %7, ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.21, i32 noundef 3394, i32 noundef %13) #17
  br label %return

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %ns, i32 0, i32 8
  %14 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cmds, align 4
  %set_peer = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %15, i32 0, i32 13
  %16 = ptrtoint ptr %set_peer to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %set_peer, align 4
  %call2 = tail call i32 %17(ptr noundef %ns, ptr noundef %peer_ns) #14
  br label %return

return:                                           ; preds = %if.end, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_flow_namespace_set_mode(ptr noundef readonly %ns, i32 noundef %mode) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i = getelementptr inbounds %struct.fs_node, ptr %ns, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i, label %entry.find_root.exit_crit_edge, label %do.end.i, !prof !259

entry.find_root.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %entry.find_root.exit_crit_edge
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %1, %entry.find_root.exit_crit_edge ]
  %cmp.not = icmp eq ptr %retval.0.i, %ns
  br i1 %cmp.not, label %if.end, label %find_root.exit.cleanup_crit_edge

find_root.exit.cleanup_crit_edge:                 ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %find_root.exit
  %table_type = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %ns, i32 0, i32 3
  %4 = ptrtoint ptr %table_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %table_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %5)
  %cmp2.not = icmp eq i32 %5, 4
  br i1 %cmp2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %mode5 = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %ns, i32 0, i32 1
  %6 = ptrtoint ptr %mode5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mode5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %mode)
  %cmp6 = icmp eq i32 %7, %mode
  br i1 %cmp6, label %if.end4.cleanup_crit_edge, label %if.end8

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mode)
  %cmp9 = icmp eq i32 %mode, 1
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %call11 = tail call ptr @mlx5_fs_cmd_get_dr_cmds() #14
  br label %if.end13

if.else:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %call12 = tail call ptr @mlx5_fs_cmd_get_fw_cmds() #14
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  %cmds.0 = phi ptr [ %call11, %if.then10 ], [ %call12, %if.else ]
  %tobool.not = icmp eq ptr %cmds.0, null
  br i1 %tobool.not, label %if.end13.cleanup_crit_edge, label %if.end15

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15:                                         ; preds = %if.end13
  %create_ns = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %cmds.0, i32 0, i32 14
  %8 = ptrtoint ptr %create_ns to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %create_ns, align 4
  %call16 = tail call i32 %9(ptr noundef %ns) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end20, label %do.end

do.end:                                           ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %ns, i32 0, i32 4
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 68
  %18 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.24, i32 noundef 3433, i32 noundef %19, i32 noundef %call16) #17
  br label %cleanup

if.end20:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  %cmds21 = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %ns, i32 0, i32 8
  %20 = ptrtoint ptr %cmds21 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cmds21, align 4
  %destroy_ns = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %21, i32 0, i32 15
  %22 = ptrtoint ptr %destroy_ns to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %destroy_ns, align 4
  %call22 = tail call i32 %23(ptr noundef %ns) #14
  %24 = ptrtoint ptr %cmds21 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %cmds.0, ptr %cmds21, align 4
  %25 = ptrtoint ptr %mode5 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %mode, ptr %mode5, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %do.end, %if.end13.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %find_root.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call16, %do.end ], [ 0, %if.end20 ], [ -22, %find_root.exit.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ], [ -95, %if.end13.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_fs_cmd_get_dr_cmds() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_fs_cmd_get_fw_cmds() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_hw_flow_table(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit

find_root.exit.i:                                 ; preds = %entry
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_dev.exit_crit_edge, label %if.then.i

find_root.exit.i.get_dev.exit_crit_edge:          ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit

if.then.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev.i, align 4
  br label %get_dev.exit

get_dev.exit:                                     ; preds = %if.then.i, %find_root.exit.i.get_dev.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i = phi ptr [ %5, %if.then.i ], [ null, %find_root.exit.i.get_dev.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  %6 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %root1.i.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp.not.i = icmp eq i32 %9, 0
  br i1 %cmp.not.i, label %get_dev.exit.find_root.exit_crit_edge, label %do.end.i, !prof !259

get_dev.exit.find_root.exit_crit_edge:            ; preds = %get_dev.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %get_dev.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %get_dev.exit.find_root.exit_crit_edge
  %retval.0.i14 = phi ptr [ null, %do.end.i ], [ %7, %get_dev.exit.find_root.exit_crit_edge ]
  tail call fastcc void @trace_mlx5_fs_del_ft(ptr noundef %node)
  %active = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 7
  %10 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %active, align 4, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  br i1 %tobool.not, label %find_root.exit.if.end8_crit_edge, label %if.then

find_root.exit.if.end8_crit_edge:                 ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.then:                                          ; preds = %find_root.exit
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i14, i32 0, i32 8
  %12 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cmds, align 4
  %destroy_flow_table = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %destroy_flow_table to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %destroy_flow_table, align 4
  %call4 = tail call i32 %15(ptr noundef %retval.0.i14, ptr noundef %node) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.then.if.end8_crit_edge, label %do.end

if.then.if.end8_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i, align 8
  %18 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 68
  %22 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %17, ptr noundef nonnull @.str.29, ptr noundef nonnull @.str.30, i32 noundef 507, i32 noundef %23) #17
  br label %if.end8

if.end8:                                          ; preds = %do.end, %if.then.if.end8_crit_edge, %find_root.exit.if.end8_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_sw_flow_table(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fgs_hash = getelementptr inbounds %struct.mlx5_flow_table, ptr %node, i32 0, i32 12
  tail call void @rhashtable_free_and_destroy(ptr noundef %fgs_hash, ptr noundef null, ptr noundef null) #14
  %parent = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 3
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %num_ft = getelementptr inbounds %struct.fs_prio, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %num_ft to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_ft, align 4
  %dec = add i32 %3, -1
  store i32 %dec, ptr %num_ft, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @kfree(ptr noundef %node) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @tree_add_node(ptr noundef %node, ptr noundef %parent) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %parent, null
  br i1 %tobool.not, label %if.then3.critedge, label %if.then

if.then:                                          ; preds = %entry
  %refcount = getelementptr inbounds %struct.fs_node, ptr %parent, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #14
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #14, !srcloc !260
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.then.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !261

if.then.if.end15.sink.split.i.i.i_crit_edge:      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %if.then
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.refcount_inc.exit_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !259

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i) #14
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.refcount_inc.exit_crit_edge
  %parent1.c = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 3
  %2 = ptrtoint ptr %parent1.c to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %parent, ptr %parent1.c, align 4
  %root4 = getelementptr inbounds %struct.fs_node, ptr %parent, i32 0, i32 4
  %3 = ptrtoint ptr %root4 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %root4, align 4
  br label %if.end6

if.then3.critedge:                                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %parent1.c14 = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 3
  %5 = ptrtoint ptr %parent1.c14 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %parent1.c14, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then3.critedge, %refcount_inc.exit
  %.sink = phi ptr [ %4, %refcount_inc.exit ], [ %node, %if.then3.critedge ]
  %root5 = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 4
  %6 = ptrtoint ptr %root5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %.sink, ptr %root5, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_add_flow_table(ptr noundef %ft, ptr noundef %prio) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %children = getelementptr inbounds %struct.fs_node, ptr %prio, i32 0, i32 1
  %level6 = getelementptr inbounds %struct.mlx5_flow_table, ptr %ft, i32 0, i32 5
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %prev.0 = phi ptr [ %children, %entry ], [ %iter.0, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %prev.0 to i32
  call void @__asan_load4_noabort(i32 %0)
  %iter.0 = load ptr, ptr %prev.0, align 4
  %cmp.not = icmp eq ptr %iter.0, %children
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.cond
  %level = getelementptr inbounds %struct.mlx5_flow_table, ptr %iter.0, i32 0, i32 5
  %1 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %level, align 4
  %3 = ptrtoint ptr %level6 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %level6, align 4
  %cmp7 = icmp ugt i32 %2, %4
  br i1 %cmp7, label %for.body.for.end_crit_edge, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.for.end_crit_edge
  %iter.0.lcssa = phi ptr [ %iter.0, %for.body.for.end_crit_edge ], [ %children, %for.cond.for.end_crit_edge ]
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %ft, ptr noundef %prev.0, ptr noundef %iter.0.lcssa) #14
  br i1 %call.i.i, label %if.end.i.i, label %for.end.list_add.exit_crit_edge

for.end.list_add.exit_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_add.exit

if.end.i.i:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %iter.0.lcssa, i32 0, i32 1
  %5 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %ft, ptr %prev1.i.i, align 4
  %6 = ptrtoint ptr %ft to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %iter.0.lcssa, ptr %ft, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %ft, i32 0, i32 1
  %7 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %prev.0, ptr %prev3.i.i, align 4
  %8 = ptrtoint ptr %prev.0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %ft, ptr %prev.0, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %for.end.list_add.exit_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mlx5_fs_add_ft(ptr noundef %ft) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_ft, i32 0, i32 1), ptr blockaddress(@trace_mlx5_fs_add_ft, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !267

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !259

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !275
  %call42 = tail call i32 @__traceiter_mlx5_fs_add_ft(ptr noundef null, ptr noundef %ft) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !276
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !259

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_ft, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_ft, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mlx5_fs_add_ft.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_mlx5_fs_add_ft.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 81, ptr noundef nonnull @.str.32) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !271
  %31 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rhltable_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_rwsem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mlx5_fs_del_ft(ptr noundef %ft) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_ft, i32 0, i32 1), ptr blockaddress(@trace_mlx5_fs_del_ft, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !267

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !259

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !277
  %call42 = tail call i32 @__traceiter_mlx5_fs_del_ft(ptr noundef null, ptr noundef %ft) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !278
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !259

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_ft, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_ft, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mlx5_fs_del_ft.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_mlx5_fs_del_ft.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 97, ptr noundef nonnull @.str.32) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !271
  %31 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mlx5_fs_del_ft(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_closest_ft_recursive(ptr noundef readonly %root, ptr nocapture noundef readonly %start, i1 noundef zeroext %reverse) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %root, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.fs_node, ptr %root, i32 0, i32 2
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %prev = getelementptr inbounds %struct.list_head, ptr %start, i32 0, i32 1
  %cond.in = select i1 %reverse, ptr %prev, ptr %start
  %children = getelementptr inbounds %struct.fs_node, ptr %root, i32 0, i32 1
  %2 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %iter.054 = load ptr, ptr %cond.in, align 4
  %cmp10.not55 = icmp eq ptr %iter.054, %children
  br i1 %cmp10.not55, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %iter.056 = phi ptr [ %iter.0, %for.inc.for.body_crit_edge ], [ %iter.054, %if.end.for.body_crit_edge ]
  %type11 = getelementptr inbounds %struct.fs_node, ptr %iter.056, i32 0, i32 2
  %3 = ptrtoint ptr %type11 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %type11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %4)
  %cmp12 = icmp eq i32 %4, 3
  br i1 %cmp12, label %for.body.cleanup_crit_edge, label %if.end17

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %for.body
  %children18 = getelementptr inbounds %struct.fs_node, ptr %iter.056, i32 0, i32 1
  %call = tail call fastcc ptr @find_closest_ft_recursive(ptr noundef %iter.056, ptr noundef %children18, i1 noundef zeroext %reverse)
  %tobool20.not = icmp eq ptr %call, null
  br i1 %tobool20.not, label %for.inc, label %if.end17.cleanup_crit_edge

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc:                                          ; preds = %if.end17
  %prev27 = getelementptr inbounds %struct.list_head, ptr %iter.056, i32 0, i32 1
  %cond37.in = select i1 %reverse, ptr %prev27, ptr %iter.056
  %5 = ptrtoint ptr %cond37.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %iter.0 = load ptr, ptr %cond37.in, align 4
  %cmp10.not = icmp eq ptr %iter.0, %children
  br i1 %cmp10.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end17.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %lor.lhs.false.cleanup_crit_edge ], [ null, %entry.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ], [ %iter.056, %for.body.cleanup_crit_edge ], [ %call, %if.end17.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @connect_prev_fts(ptr nocapture noundef readonly %dev, ptr noundef %ft, ptr nocapture noundef readonly %prio) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %parent.0.in11.i.i = getelementptr inbounds %struct.fs_node, ptr %prio, i32 0, i32 3
  %0 = ptrtoint ptr %parent.0.in11.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %parent.012.i.i = load ptr, ptr %parent.0.in11.i.i, align 4
  %tobool3.not13.i.i = icmp eq ptr %parent.012.i.i, null
  br i1 %tobool3.not13.i.i, label %entry.cleanup_crit_edge, label %entry.while.body.i.i_crit_edge

entry.while.body.i.i_crit_edge:                   ; preds = %entry
  br label %while.body.i.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %entry.while.body.i.i_crit_edge
  %parent.015.i.i = phi ptr [ %parent.0.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ %parent.012.i.i, %entry.while.body.i.i_crit_edge ]
  %curr_node.014.i.i = phi ptr [ %parent.015.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ %prio, %entry.while.body.i.i_crit_edge ]
  %call.i.i = tail call fastcc ptr @find_closest_ft_recursive(ptr noundef nonnull %parent.015.i.i, ptr noundef %curr_node.014.i.i, i1 noundef zeroext true) #14
  %parent.0.in.i.i = getelementptr inbounds %struct.fs_node, ptr %parent.015.i.i, i32 0, i32 3
  %1 = ptrtoint ptr %parent.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %parent.0.i.i = load ptr, ptr %parent.0.in.i.i, align 4
  %tobool.not.i.i = icmp ne ptr %call.i.i, null
  %tobool3.not.i.i = icmp eq ptr %parent.0.i.i, null
  %or.cond.i.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool3.not.i.i
  br i1 %or.cond.i.i, label %find_prev_chained_ft.exit, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

find_prev_chained_ft.exit:                        ; preds = %while.body.i.i
  %tobool.not = icmp eq ptr %call.i.i, null
  br i1 %tobool.not, label %find_prev_chained_ft.exit.cleanup_crit_edge, label %if.then

find_prev_chained_ft.exit.cleanup_crit_edge:      ; preds = %find_prev_chained_ft.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then:                                          ; preds = %find_prev_chained_ft.exit
  %parent = getelementptr inbounds %struct.fs_node, ptr %call.i.i, i32 0, i32 3
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 4
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.not.i.i = icmp eq i32 %7, 0
  br i1 %cmp.not.i.i, label %if.then.find_root.exit.i_crit_edge, label %do.end.i.i, !prof !259

if.then.find_root.exit.i_crit_edge:               ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit.i

do.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit.i

find_root.exit.i:                                 ; preds = %do.end.i.i, %if.then.find_root.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ null, %do.end.i.i ], [ %5, %if.then.find_root.exit.i_crit_edge ]
  %children.i = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 1
  %cmds.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i.i, i32 0, i32 8
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %find_root.exit.i
  %iter.0.in.i = phi ptr [ %children.i, %find_root.exit.i ], [ %iter.0.i, %for.body.i.for.cond.i_crit_edge ]
  %8 = ptrtoint ptr %iter.0.in.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %iter.0.i = load ptr, ptr %iter.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %iter.0.i, %children.i
  br i1 %cmp.not.i, label %for.cond.i.cleanup_crit_edge, label %for.body.i

for.cond.i.cleanup_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.i:                                       ; preds = %for.cond.i
  %9 = ptrtoint ptr %cmds.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cmds.i, align 4
  %modify_flow_table.i = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %modify_flow_table.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %modify_flow_table.i, align 4
  %call5.i = tail call i32 %12(ptr noundef %retval.0.i.i, ptr noundef %iter.0.i, ptr noundef %ft) #14
  %tobool.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool.not.i, label %for.body.i.for.cond.i_crit_edge, label %do.end.i

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i

do.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %13 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev, align 8
  %15 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 68
  %19 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pid.i, align 8
  %id.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %iter.0.i, i32 0, i32 2
  %21 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %id.i, align 4
  %type.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %iter.0.i, i32 0, i32 6
  %23 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %type.i, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %14, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35, i32 noundef 910, i32 noundef %20, i32 noundef %22, i32 noundef %24, i32 noundef %call5.i) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end.i, %for.cond.i.cleanup_crit_edge, %find_prev_chained_ft.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %find_prev_chained_ft.exit.cleanup_crit_edge ], [ %call5.i, %do.end.i ], [ 0, %entry.cleanup_crit_edge ], [ 0, %for.cond.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @connect_fwd_rules(ptr noundef %new_next_ft, ptr noundef %old_next_ft) unnamed_addr #0 align 64 {
entry:
  %dest = alloca %struct.mlx5_flow_destination, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %dest) #14
  %0 = getelementptr inbounds i8, ptr %dest, i32 8
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %1, i32 8)
  store i64 0, ptr %0, align 4
  %tobool.not = icmp eq ptr %new_next_ft, null
  %tobool1.not = icmp eq ptr %old_next_ft, null
  %or.cond = or i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %dest to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %dest, align 4
  %3 = getelementptr inbounds %struct.mlx5_flow_destination, ptr %dest, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %new_next_ft, ptr %3, align 4
  %lock = getelementptr inbounds %struct.mlx5_flow_table, ptr %old_next_ft, i32 0, i32 9
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #14
  %fwd_rules = getelementptr inbounds %struct.mlx5_flow_table, ptr %old_next_ft, i32 0, i32 10
  %fwd_rules2 = getelementptr inbounds %struct.mlx5_flow_table, ptr %new_next_ft, i32 0, i32 10
  %5 = ptrtoint ptr %fwd_rules to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %fwd_rules, align 4
  %cmp.i.not.i = icmp eq ptr %6, %fwd_rules
  br i1 %cmp.i.not.i, label %if.end.list_splice_init.exit_crit_edge, label %if.then.i

if.end.list_splice_init.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_splice_init.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %fwd_rules2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fwd_rules2, align 4
  %prev2.i.i = getelementptr inbounds %struct.mlx5_flow_table, ptr %old_next_ft, i32 0, i32 10, i32 1
  %9 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %11 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %fwd_rules2, ptr %prev3.i.i, align 4
  store ptr %6, ptr %fwd_rules2, align 4
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %8, ptr %10, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %13 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev6.i.i, align 4
  %14 = ptrtoint ptr %fwd_rules to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %fwd_rules, ptr %fwd_rules, align 4
  store ptr %fwd_rules, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i, %if.end.list_splice_init.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #14
  %15 = ptrtoint ptr %fwd_rules2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn1 = load ptr, ptr %fwd_rules2, align 4
  %cmp.not3 = icmp eq ptr %.pn1, %fwd_rules2
  br i1 %cmp.not3, label %list_splice_init.exit.cleanup_crit_edge, label %for.body.lr.ph

list_splice_init.exit.cleanup_crit_edge:          ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph:                                   ; preds = %list_splice_init.exit
  %ns7 = getelementptr inbounds %struct.mlx5_flow_table, ptr %new_next_ft, i32 0, i32 14
  %id = getelementptr inbounds %struct.mlx5_flow_table, ptr %new_next_ft, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn4 = phi ptr [ %.pn1, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %iter.05 = getelementptr i8, ptr %.pn4, i32 -164
  %sw_action = getelementptr i8, ptr %.pn4, i32 8
  %16 = ptrtoint ptr %sw_action to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sw_action, align 4
  %and = and i32 %17, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %for.body.if.end10_crit_edge, label %land.lhs.true

for.body.if.end10_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

land.lhs.true:                                    ; preds = %for.body
  %ft = getelementptr i8, ptr %.pn4, i32 -20
  %18 = ptrtoint ptr %ft to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ft, align 4
  %ns = getelementptr inbounds %struct.mlx5_flow_table, ptr %19, i32 0, i32 14
  %20 = ptrtoint ptr %ns to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ns, align 4
  %22 = ptrtoint ptr %ns7 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ns7, align 4
  %cmp8 = icmp eq ptr %21, %23
  br i1 %cmp8, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.if.end10_crit_edge

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end10:                                         ; preds = %land.lhs.true.if.end10_crit_edge, %for.body.if.end10_crit_edge
  %call = call fastcc i32 @_mlx5_modify_rule_destination(ptr noundef %iter.05, ptr noundef nonnull %dest)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool11.not = icmp eq i32 %call, 0
  br i1 %tobool11.not, label %if.end10.for.inc_crit_edge, label %do.end

if.end10.for.inc_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

do.end:                                           ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %id, align 4
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36, i32 noundef %25) #17
  br label %for.inc

for.inc:                                          ; preds = %do.end, %if.end10.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge
  %26 = ptrtoint ptr %.pn4 to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn = load ptr, ptr %.pn4, align 4
  %cmp.not = icmp eq ptr %.pn, %fwd_rules2
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %list_splice_init.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dest) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mlx5_fs_add_ft(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rhashtable_free_and_destroy(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_hw_flow_group(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %parent = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 3
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 4
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.not.i.i = icmp eq i32 %5, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit

find_root.exit.i:                                 ; preds = %entry
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_dev.exit_crit_edge, label %if.then.i

find_root.exit.i.get_dev.exit_crit_edge:          ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit

if.then.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %3, i32 0, i32 4
  %6 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev.i, align 4
  br label %get_dev.exit

get_dev.exit:                                     ; preds = %if.then.i, %find_root.exit.i.get_dev.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i = phi ptr [ %7, %if.then.i ], [ null, %find_root.exit.i.get_dev.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  tail call fastcc void @trace_mlx5_fs_del_fg(ptr noundef %node)
  %8 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %root1.i.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp.not.i = icmp eq i32 %11, 0
  br i1 %cmp.not.i, label %get_dev.exit.find_root.exit_crit_edge, label %do.end.i, !prof !259

get_dev.exit.find_root.exit_crit_edge:            ; preds = %get_dev.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %get_dev.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %get_dev.exit.find_root.exit_crit_edge
  %retval.0.i21 = phi ptr [ null, %do.end.i ], [ %9, %get_dev.exit.find_root.exit_crit_edge ]
  %active = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 7
  %12 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %active, align 4, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not = icmp eq i8 %13, 0
  br i1 %tobool.not, label %find_root.exit.if.end_crit_edge, label %land.lhs.true

find_root.exit.if.end_crit_edge:                  ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %find_root.exit
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i21, i32 0, i32 8
  %14 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cmds, align 4
  %destroy_flow_group = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %15, i32 0, i32 4
  %16 = ptrtoint ptr %destroy_flow_group to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %destroy_flow_group, align 4
  %call9 = tail call i32 %17(ptr noundef %retval.0.i21, ptr noundef %1, ptr noundef %node) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %land.lhs.true.if.end_crit_edge, label %do.end

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %retval.0.i, align 8
  %20 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 68
  %24 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %pid, align 8
  %id = getelementptr inbounds %struct.mlx5_flow_group, ptr %node, i32 0, i32 6
  %26 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %id, align 4
  %id12 = getelementptr inbounds %struct.mlx5_flow_table, ptr %1, i32 0, i32 2
  %28 = ptrtoint ptr %id12 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %id12, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %19, ptr noundef nonnull @.str.48, ptr noundef nonnull @.str.49, i32 noundef 645, i32 noundef %25, i32 noundef %27, i32 noundef %29) #17
  br label %if.end

if.end:                                           ; preds = %do.end, %land.lhs.true.if.end_crit_edge, %find_root.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_sw_flow_group(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_steering.exit

find_root.exit.i:                                 ; preds = %entry
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_steering.exit_crit_edge, label %if.then.i

find_root.exit.i.get_steering.exit_crit_edge:     ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_steering.exit

if.then.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev.i, align 4
  %steering.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %5, i32 0, i32 17, i32 26
  %6 = ptrtoint ptr %steering.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %steering.i, align 4
  br label %get_steering.exit

get_steering.exit:                                ; preds = %if.then.i, %find_root.exit.i.get_steering.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i = phi ptr [ %7, %if.then.i ], [ null, %find_root.exit.i.get_steering.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  %parent = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 3
  %8 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent, align 4
  %ftes_hash = getelementptr inbounds %struct.mlx5_flow_group, ptr %node, i32 0, i32 7
  tail call void @rhashtable_destroy(ptr noundef %ftes_hash) #14
  %fte_allocator = getelementptr inbounds %struct.mlx5_flow_group, ptr %node, i32 0, i32 5
  tail call void @ida_destroy(ptr noundef %fte_allocator) #14
  %autogroup = getelementptr inbounds %struct.mlx5_flow_table, ptr %9, i32 0, i32 8
  %10 = ptrtoint ptr %autogroup to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %autogroup, align 4, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  br i1 %tobool.not, label %get_steering.exit.if.end_crit_edge, label %land.lhs.true

get_steering.exit.if.end_crit_edge:               ; preds = %get_steering.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %get_steering.exit
  %max_ftes = getelementptr inbounds %struct.mlx5_flow_group, ptr %node, i32 0, i32 4
  %12 = ptrtoint ptr %max_ftes to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %max_ftes, align 4
  %group_size = getelementptr inbounds %struct.mlx5_flow_table, ptr %9, i32 0, i32 8, i32 2
  %14 = ptrtoint ptr %group_size to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %group_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %15)
  %cmp = icmp eq i32 %13, %15
  br i1 %cmp, label %land.lhs.true6, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true6:                                   ; preds = %land.lhs.true
  %start_index = getelementptr inbounds %struct.mlx5_flow_group, ptr %node, i32 0, i32 3
  %16 = ptrtoint ptr %start_index to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %start_index, align 4
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table, ptr %9, i32 0, i32 8, i32 4
  %18 = ptrtoint ptr %max_fte to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %max_fte, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp8 = icmp ult i32 %17, %19
  br i1 %cmp8, label %if.then, label %land.lhs.true6.if.end_crit_edge

land.lhs.true6.if.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #16
  %num_groups = getelementptr inbounds %struct.mlx5_flow_table, ptr %9, i32 0, i32 8, i32 3
  %20 = ptrtoint ptr %num_groups to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_groups, align 4
  %dec = add i32 %21, -1
  store i32 %dec, ptr %num_groups, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true6.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %get_steering.exit.if.end_crit_edge
  %fgs_hash = getelementptr inbounds %struct.mlx5_flow_table, ptr %9, i32 0, i32 12
  %hash = getelementptr inbounds %struct.mlx5_flow_group, ptr %node, i32 0, i32 8
  %call.i = tail call fastcc i32 @__rhashtable_remove_fast(ptr noundef %fgs_hash, ptr noundef %hash, [7 x i32] [i32 452, i32 9700220, i32 0, i32 65792, i32 0, i32 0, i32 0], i1 noundef zeroext true) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool11.not = icmp eq i32 %call.i, 0
  br i1 %tobool11.not, label %if.end.if.end26_crit_edge, label %do.end, !prof !259

if.end.if.end26_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 667, i32 noundef 9, ptr noundef null) #14
  br label %if.end26

if.end26:                                         ; preds = %do.end, %if.end.if.end26_crit_edge
  %fgs_cache = getelementptr inbounds %struct.mlx5_flow_steering, ptr %retval.0.i, i32 0, i32 2
  %22 = ptrtoint ptr %fgs_cache to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %fgs_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %23, ptr noundef %node) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rhashtable_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__rhashtable_insert_fast(ptr noundef %ht, ptr noundef %key, ptr noundef %obj, [7 x i32] %params.coerce, i1 noundef zeroext %rhlist) unnamed_addr #5 align 64 {
entry:
  %arg = alloca %struct.rhashtable_compare_arg, align 4
  call void @__sanitizer_cov_trace_pc() #16
  %params.coerce.fca.6.extract = extractvalue [7 x i32] %params.coerce, 6
  %0 = inttoptr i32 %params.coerce.fca.6.extract to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg) #14
  %1 = getelementptr inbounds %struct.rhashtable_compare_arg, ptr %arg, i32 0, i32 1
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %ht, ptr %arg, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %key, ptr %1, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !273
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.46) #14
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %8 = ptrtoint ptr %ht to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %ht, align 4
  %call = tail call i32 @lockdep_rht_mutex_is_held(ptr noundef %ht) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false, label %rcu_read_lock.exit.do.end12_crit_edge

rcu_read_lock.exit.do.end12_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end12

lor.lhs.false:                                    ; preds = %rcu_read_lock.exit
  %call5 = tail call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true, label %lor.lhs.false.do.end12_crit_edge

lor.lhs.false.do.end12_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end12

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call7 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true.do.end12_crit_edge, label %land.lhs.true9

land.lhs.true.do.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end12

land.lhs.true9:                                   ; preds = %land.lhs.true
  %.b285 = load i1, ptr @__rhashtable_insert_fast.__warned, align 1
  br i1 %.b285, label %land.lhs.true9.do.end12_crit_edge, label %if.then

land.lhs.true9.do.end12_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end12

if.then:                                          ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_insert_fast.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 715, ptr noundef nonnull @.str.32) #14
  br label %do.end12

do.end12:                                         ; preds = %if.then, %land.lhs.true9.do.end12_crit_edge, %land.lhs.true.do.end12_crit_edge, %lor.lhs.false.do.end12_crit_edge, %rcu_read_lock.exit.do.end12_crit_edge
  %params.coerce.fca.5.extract.i = extractvalue [7 x i32] %params.coerce, 5
  %10 = inttoptr i32 %params.coerce.fca.5.extract.i to ptr
  %head_offset.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 3
  %11 = ptrtoint ptr %head_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %head_offset.i.i, align 2
  %conv.i.i = zext i16 %12 to i32
  %idx.neg.i.i = sub nsw i32 0, %conv.i.i
  %add.ptr.i.i = getelementptr i8, ptr %obj, i32 %idx.neg.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %params.coerce.fca.5.extract.i)
  %tobool.not.i286 = icmp eq i32 %params.coerce.fca.5.extract.i, 0
  br i1 %tobool.not.i286, label %if.then.i.i.i, label %cond.true.i, !prof !261

cond.true.i:                                      ; preds = %do.end12
  %params.coerce.fca.0.extract.i = extractvalue [7 x i32] %params.coerce, 0
  %conv.i = and i32 %params.coerce.fca.0.extract.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i)
  %tobool4.not.i = icmp eq i32 %conv.i, 0
  br i1 %tobool4.not.i, label %cond.false.i, label %cond.true.i.cond.end.i_crit_edge

cond.true.i.cond.end.i_crit_edge:                 ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i

cond.false.i:                                     ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #16
  %key_len6.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 1
  %13 = ptrtoint ptr %key_len6.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %key_len6.i, align 2
  %conv7.i = zext i16 %14 to i32
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i.cond.end.i_crit_edge
  %cond.i = phi i32 [ %conv7.i, %cond.false.i ], [ %conv.i, %cond.true.i.cond.end.i_crit_edge ]
  %hash_rnd.i = getelementptr inbounds %struct.bucket_table, ptr %9, i32 0, i32 2
  %15 = ptrtoint ptr %hash_rnd.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %hash_rnd.i, align 8
  %call8.i = tail call i32 %10(ptr noundef %add.ptr.i.i, i32 noundef %cond.i, i32 noundef %16) #14
  br label %rht_head_hashfn.exit

if.then.i.i.i:                                    ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #16
  %hash_rnd.i.i = getelementptr inbounds %struct.bucket_table, ptr %9, i32 0, i32 2
  %17 = ptrtoint ptr %hash_rnd.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %hash_rnd.i.i, align 8
  %params.coerce.fca.1.extract.i = extractvalue [7 x i32] %params.coerce, 1
  %params.sroa.3.4.extract.shift.i = lshr i32 %params.coerce.fca.1.extract.i, 16
  %add.ptr.i = getelementptr i8, ptr %add.ptr.i.i, i32 %params.sroa.3.4.extract.shift.i
  %hashfn.i.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 7
  %19 = ptrtoint ptr %hashfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hashfn.i.i.i, align 4
  %key_len1.i.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 1
  %21 = ptrtoint ptr %key_len1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %key_len1.i.i.i, align 4
  %call.i.i.i = tail call i32 %20(ptr noundef %add.ptr.i, i32 noundef %22, i32 noundef %18) #14
  br label %rht_head_hashfn.exit

rht_head_hashfn.exit:                             ; preds = %if.then.i.i.i, %cond.end.i
  %hash.2.i.i.sink.i = phi i32 [ %call8.i, %cond.end.i ], [ %call.i.i.i, %if.then.i.i.i ]
  %23 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %9, align 128
  %sub.i.i.i = add i32 %24, -1
  %and.i3.i.i = and i32 %sub.i.i.i, %hash.2.i.i.sink.i
  %nest.i = getelementptr inbounds %struct.bucket_table, ptr %9, i32 0, i32 1
  %25 = ptrtoint ptr %nest.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %nest.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i287 = icmp eq i32 %26, 0
  br i1 %tobool.not.i287, label %cond.false.i290, label %cond.true.i289, !prof !259

cond.true.i289:                                   ; preds = %rht_head_hashfn.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call.i288 = tail call ptr @rht_bucket_nested_insert(ptr noundef %ht, ptr noundef %9, i32 noundef %and.i3.i.i) #14
  br label %rht_bucket_insert.exit

cond.false.i290:                                  ; preds = %rht_head_hashfn.exit
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.bucket_table, ptr %9, i32 0, i32 8, i32 %and.i3.i.i
  br label %rht_bucket_insert.exit

rht_bucket_insert.exit:                           ; preds = %cond.false.i290, %cond.true.i289
  %cond.i291 = phi ptr [ %call.i288, %cond.true.i289 ], [ %arrayidx.i, %cond.false.i290 ]
  %tobool17.not = icmp eq ptr %cond.i291, null
  br i1 %tobool17.not, label %rht_bucket_insert.exit.out_crit_edge, label %if.end19

rht_bucket_insert.exit.out_crit_edge:             ; preds = %rht_bucket_insert.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end19:                                         ; preds = %rht_bucket_insert.exit
  tail call fastcc void @rht_lock(ptr noundef %9, ptr noundef nonnull %cond.i291)
  %future_tbl = getelementptr inbounds %struct.bucket_table, ptr %9, i32 0, i32 5
  %27 = ptrtoint ptr %future_tbl to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %future_tbl, align 4
  %tobool25.not = icmp eq ptr %28, null
  br i1 %tobool25.not, label %if.end30, label %if.end19.slow_path_crit_edge, !prof !259

if.end19.slow_path_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %slow_path

slow_path:                                        ; preds = %rht_grow_above_100.exit.slow_path_crit_edge, %for.end.slow_path_crit_edge, %if.end19.slow_path_crit_edge
  call fastcc void @rht_unlock(ptr noundef %9, ptr noundef nonnull %cond.i291)
  %call.i293 = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i293, label %slow_path.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i296

slow_path.rcu_read_unlock.exit_crit_edge:         ; preds = %slow_path
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true.i296:                               ; preds = %slow_path
  %call1.i294 = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i294)
  %tobool.not.i295 = icmp eq i32 %call1.i294, 0
  br i1 %tobool.not.i295, label %land.lhs.true.i296.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i298

land.lhs.true.i296.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i296
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true2.i298:                              ; preds = %land.lhs.true.i296
  %.b4.i297 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i297, label %land.lhs.true2.i298.rcu_read_unlock.exit_crit_edge, label %if.then.i299

land.lhs.true2.i298.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i298
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

if.then.i299:                                     ; preds = %land.lhs.true2.i298
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.47) #14
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i299, %land.lhs.true2.i298.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i296.rcu_read_unlock.exit_crit_edge, %slow_path.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !274
  %29 = call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i300 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i300 to ptr
  %preempt_count.i.i.i.i301 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i301 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i301, align 4
  %sub.i.i.i302 = add i32 %32, -1
  store volatile i32 %sub.i.i.i302, ptr %preempt_count.i.i.i.i301, align 4
  call void @rcu_read_unlock_strict() #14
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  %call29 = call ptr @rhashtable_insert_slow(ptr noundef %ht, ptr noundef %key, ptr noundef %obj) #14
  br label %cleanup210

if.end30:                                         ; preds = %if.end19
  %call.i303 = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %9, i32 noundef %and.i3.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i303)
  %tobool.not.i304 = icmp eq i32 %call.i303, 0
  br i1 %tobool.not.i304, label %land.lhs.true.i306, label %if.end30.rht_ptr.exit_crit_edge

if.end30.rht_ptr.exit_crit_edge:                  ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit

land.lhs.true.i306:                               ; preds = %if.end30
  %call1.i305 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i305)
  %tobool2.not.i = icmp eq i32 %call1.i305, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i306.rht_ptr.exit_crit_edge, label %land.lhs.true3.i

land.lhs.true.i306.rht_ptr.exit_crit_edge:        ; preds = %land.lhs.true.i306
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i306
  %.b7.i = load i1, ptr @rht_ptr.__warned, align 1
  br i1 %.b7.i, label %land.lhs.true3.i.rht_ptr.exit_crit_edge, label %if.then.i307

land.lhs.true3.i.rht_ptr.exit_crit_edge:          ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit

if.then.i307:                                     ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rht_ptr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 377, ptr noundef nonnull @.str.43) #14
  br label %rht_ptr.exit

rht_ptr.exit:                                     ; preds = %if.then.i307, %land.lhs.true3.i.rht_ptr.exit_crit_edge, %land.lhs.true.i306.rht_ptr.exit_crit_edge, %if.end30.rht_ptr.exit_crit_edge
  %33 = ptrtoint ptr %cond.i291 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %cond.i291, align 4
  %35 = ptrtoint ptr %34 to i32
  %and.i.i = and i32 %35, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %36 = ptrtoint ptr %cond.i291 to i32
  %or.i.i = or i32 %36, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 %or.i.i, i32 %and.i.i
  %and.i375 = and i32 %cond.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i375)
  %tobool.i.not376 = icmp eq i32 %and.i375, 0
  br i1 %tobool.i.not376, label %for.body.lr.ph, label %rht_ptr.exit.if.end152_crit_edge

rht_ptr.exit.if.end152_crit_edge:                 ; preds = %rht_ptr.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end152

for.body.lr.ph:                                   ; preds = %rht_ptr.exit
  %37 = inttoptr i32 %cond.i.i to ptr
  %tobool35.not = icmp eq ptr %key, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %params.coerce.fca.6.extract)
  %tobool37.not = icmp eq i32 %params.coerce.fca.6.extract, 0
  br label %for.body

for.body:                                         ; preds = %do.end147.for.body_crit_edge, %for.body.lr.ph
  %pprev.0379 = phi ptr [ null, %for.body.lr.ph ], [ %head.0378, %do.end147.for.body_crit_edge ]
  %head.0378 = phi ptr [ %37, %for.body.lr.ph ], [ %56, %do.end147.for.body_crit_edge ]
  %elasticity.0377 = phi i32 [ 16, %for.body.lr.ph ], [ %dec, %do.end147.for.body_crit_edge ]
  %dec = add i32 %elasticity.0377, -1
  br i1 %tobool35.not, label %for.body.do.body136_crit_edge, label %lor.lhs.false36

for.body.do.body136_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body136

lor.lhs.false36:                                  ; preds = %for.body
  %38 = ptrtoint ptr %head_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %head_offset.i.i, align 2
  %conv.i311 = zext i16 %39 to i32
  %idx.neg.i312 = sub nsw i32 0, %conv.i311
  %add.ptr.i313 = getelementptr i8, ptr %head.0378, i32 %idx.neg.i312
  br i1 %tobool37.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %lor.lhs.false36
  %call40 = call i32 %0(ptr noundef nonnull %arg, ptr noundef %add.ptr.i313) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %cond.true.if.end46_crit_edge, label %cond.true.do.body136_crit_edge

cond.true.do.body136_crit_edge:                   ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body136

cond.true.if.end46_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

cond.false:                                       ; preds = %lor.lhs.false36
  %40 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arg, align 4
  %key_offset.i = getelementptr inbounds %struct.rhashtable, ptr %41, i32 0, i32 3, i32 2
  %42 = ptrtoint ptr %key_offset.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %key_offset.i, align 4
  %conv.i314 = zext i16 %43 to i32
  %add.ptr.i315 = getelementptr i8, ptr %add.ptr.i313, i32 %conv.i314
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %1, align 4
  %key_len.i = getelementptr inbounds %struct.rhashtable, ptr %41, i32 0, i32 3, i32 1
  %46 = ptrtoint ptr %key_len.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %key_len.i, align 2
  %conv3.i = zext i16 %47 to i32
  %bcmp = call i32 @bcmp(ptr %add.ptr.i315, ptr %45, i32 %conv3.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool44.not = icmp eq i32 %bcmp, 0
  br i1 %tobool44.not, label %cond.false.if.end46_crit_edge, label %cond.false.do.body136_crit_edge

cond.false.do.body136_crit_edge:                  ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body136

cond.false.if.end46_crit_edge:                    ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.end46:                                         ; preds = %cond.false.if.end46_crit_edge, %cond.true.if.end46_crit_edge
  %48 = ptrtoint ptr %head_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %head_offset.i.i, align 2
  %conv.i318 = zext i16 %49 to i32
  %idx.neg.i319 = sub nsw i32 0, %conv.i318
  %add.ptr.i320 = getelementptr i8, ptr %head.0378, i32 %idx.neg.i319
  br i1 %rhlist, label %if.end50, label %if.end46.out_unlock_crit_edge

if.end46.out_unlock_crit_edge:                    ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_unlock

if.end50:                                         ; preds = %if.end46
  %next61 = getelementptr inbounds %struct.rhlist_head, ptr %obj, i32 0, i32 1
  %50 = ptrtoint ptr %next61 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %head.0378, ptr %next61, align 4
  %call69 = call i32 @lockdep_rht_bucket_is_held(ptr noundef %9, i32 noundef %and.i3.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call69)
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %land.lhs.true71, label %if.end50.do.end79_crit_edge

if.end50.do.end79_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end79

land.lhs.true71:                                  ; preds = %if.end50
  %call72 = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %land.lhs.true71.do.end79_crit_edge, label %land.lhs.true74

land.lhs.true71.do.end79_crit_edge:               ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end79

land.lhs.true74:                                  ; preds = %land.lhs.true71
  %.b281284 = load i1, ptr @__rhashtable_insert_fast.__warned.42, align 1
  br i1 %.b281284, label %land.lhs.true74.do.end79_crit_edge, label %if.then76

land.lhs.true74.do.end79_crit_edge:               ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end79

if.then76:                                        ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_insert_fast.__warned.42, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 755, ptr noundef nonnull @.str.43) #14
  br label %do.end79

do.end79:                                         ; preds = %if.then76, %land.lhs.true74.do.end79_crit_edge, %land.lhs.true71.do.end79_crit_edge, %if.end50.do.end79_crit_edge
  %51 = ptrtoint ptr %head.0378 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %head.0378, align 4
  %53 = ptrtoint ptr %obj to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %52, ptr %obj, align 4
  %tobool95.not = icmp eq ptr %pprev.0379, null
  br i1 %tobool95.not, label %if.else133, label %do.body97

do.body97:                                        ; preds = %do.end79
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !279
  %54 = ptrtoint ptr %pprev.0379 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %obj, ptr %pprev.0379, align 4
  call fastcc void @rht_unlock(ptr noundef %9, ptr noundef nonnull %cond.i291)
  br label %out

if.else133:                                       ; preds = %do.end79
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @rht_assign_unlock(ptr noundef %9, ptr noundef nonnull %cond.i291, ptr noundef %obj)
  br label %out

do.body136:                                       ; preds = %cond.false.do.body136_crit_edge, %cond.true.do.body136_crit_edge, %for.body.do.body136_crit_edge
  %call137 = call i32 @lockdep_rht_bucket_is_held(ptr noundef %9, i32 noundef %and.i3.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call137)
  %tobool138.not = icmp eq i32 %call137, 0
  br i1 %tobool138.not, label %land.lhs.true139, label %do.body136.do.end147_crit_edge

do.body136.do.end147_crit_edge:                   ; preds = %do.body136
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end147

land.lhs.true139:                                 ; preds = %do.body136
  %call140 = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call140)
  %tobool141.not = icmp eq i32 %call140, 0
  br i1 %tobool141.not, label %land.lhs.true139.do.end147_crit_edge, label %land.lhs.true142

land.lhs.true139.do.end147_crit_edge:             ; preds = %land.lhs.true139
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end147

land.lhs.true142:                                 ; preds = %land.lhs.true139
  %.b282283 = load i1, ptr @__rhashtable_insert_fast.__warned.44, align 1
  br i1 %.b282283, label %land.lhs.true142.do.end147_crit_edge, label %if.then144

land.lhs.true142.do.end147_crit_edge:             ; preds = %land.lhs.true142
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end147

if.then144:                                       ; preds = %land.lhs.true142
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_insert_fast.__warned.44, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 732, ptr noundef nonnull @.str.43) #14
  br label %do.end147

do.end147:                                        ; preds = %if.then144, %land.lhs.true142.do.end147_crit_edge, %land.lhs.true139.do.end147_crit_edge, %do.body136.do.end147_crit_edge
  %55 = ptrtoint ptr %head.0378 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %head.0378, align 4
  %57 = ptrtoint ptr %56 to i32
  %and.i = and i32 %57, 1
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %do.end147.for.body_crit_edge, label %for.end

do.end147.for.body_crit_edge:                     ; preds = %do.end147
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %do.end147
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec)
  %phi.cmp = icmp slt i32 %dec, 1
  br i1 %phi.cmp, label %for.end.slow_path_crit_edge, label %for.end.if.end152_crit_edge

for.end.if.end152_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end152

for.end.slow_path_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %slow_path

if.end152:                                        ; preds = %for.end.if.end152_crit_edge, %rht_ptr.exit.if.end152_crit_edge
  %nelems.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 8
  %call.i.i.i321 = call zeroext i1 @__kasan_check_read(ptr noundef %nelems.i, i32 noundef 4) #14
  %58 = ptrtoint ptr %nelems.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %nelems.i, align 4
  %max_elems.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 2
  %60 = ptrtoint ptr %max_elems.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %max_elems.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %59, i32 %61)
  %cmp.i.not = icmp ult i32 %59, %61
  br i1 %cmp.i.not, label %if.end162, label %if.end152.out_unlock_crit_edge, !prof !259

if.end152.out_unlock_crit_edge:                   ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_unlock

if.end162:                                        ; preds = %if.end152
  %call.i.i.i323 = call zeroext i1 @__kasan_check_read(ptr noundef %nelems.i, i32 noundef 4) #14
  %62 = ptrtoint ptr %nelems.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %nelems.i, align 4
  %64 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %9, align 128
  call void @__sanitizer_cov_trace_cmp4(i32 %63, i32 %65)
  %cmp.i324 = icmp ugt i32 %63, %65
  br i1 %cmp.i324, label %rht_grow_above_100.exit, label %if.end162.if.end171_crit_edge

if.end162.if.end171_crit_edge:                    ; preds = %if.end162
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end171

rht_grow_above_100.exit:                          ; preds = %if.end162
  %max_size.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 4
  %66 = ptrtoint ptr %max_size.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %max_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool.not.i325 = icmp eq i32 %67, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %65, i32 %67)
  %cmp4.i = icmp ult i32 %65, %67
  %spec.select.i = select i1 %tobool.not.i325, i1 true, i1 %cmp4.i
  br i1 %spec.select.i, label %rht_grow_above_100.exit.slow_path_crit_edge, label %rht_grow_above_100.exit.if.end171_crit_edge, !prof !261

rht_grow_above_100.exit.if.end171_crit_edge:      ; preds = %rht_grow_above_100.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end171

rht_grow_above_100.exit.slow_path_crit_edge:      ; preds = %rht_grow_above_100.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %slow_path

if.end171:                                        ; preds = %rht_grow_above_100.exit.if.end171_crit_edge, %if.end162.if.end171_crit_edge
  %call.i326 = call i32 @lockdep_rht_bucket_is_held(ptr noundef %9, i32 noundef %and.i3.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i326)
  %tobool.not.i327 = icmp eq i32 %call.i326, 0
  br i1 %tobool.not.i327, label %land.lhs.true.i330, label %if.end171.rht_ptr.exit338_crit_edge

if.end171.rht_ptr.exit338_crit_edge:              ; preds = %if.end171
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit338

land.lhs.true.i330:                               ; preds = %if.end171
  %call1.i328 = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i328)
  %tobool2.not.i329 = icmp eq i32 %call1.i328, 0
  br i1 %tobool2.not.i329, label %land.lhs.true.i330.rht_ptr.exit338_crit_edge, label %land.lhs.true3.i332

land.lhs.true.i330.rht_ptr.exit338_crit_edge:     ; preds = %land.lhs.true.i330
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit338

land.lhs.true3.i332:                              ; preds = %land.lhs.true.i330
  %.b7.i331 = load i1, ptr @rht_ptr.__warned, align 1
  br i1 %.b7.i331, label %land.lhs.true3.i332.rht_ptr.exit338_crit_edge, label %if.then.i333

land.lhs.true3.i332.rht_ptr.exit338_crit_edge:    ; preds = %land.lhs.true3.i332
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit338

if.then.i333:                                     ; preds = %land.lhs.true3.i332
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rht_ptr.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 377, ptr noundef nonnull @.str.43) #14
  br label %rht_ptr.exit338

rht_ptr.exit338:                                  ; preds = %if.then.i333, %land.lhs.true3.i332.rht_ptr.exit338_crit_edge, %land.lhs.true.i330.rht_ptr.exit338_crit_edge, %if.end171.rht_ptr.exit338_crit_edge
  %68 = ptrtoint ptr %cond.i291 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %cond.i291, align 4
  %70 = ptrtoint ptr %69 to i32
  %and.i.i334 = and i32 %70, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i334)
  %tobool.not.i.i335 = icmp eq i32 %and.i.i334, 0
  %cond.i.i337 = select i1 %tobool.not.i.i335, i32 %or.i.i, i32 %and.i.i334
  %71 = inttoptr i32 %cond.i.i337 to ptr
  %72 = ptrtoint ptr %obj to i32
  call void @__asan_store4_noabort(i32 %72)
  store volatile ptr %71, ptr %obj, align 4
  br i1 %rhlist, label %if.then187, label %rht_ptr.exit338.if.end205_crit_edge

rht_ptr.exit338.if.end205_crit_edge:              ; preds = %rht_ptr.exit338
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end205

if.then187:                                       ; preds = %rht_ptr.exit338
  call void @__sanitizer_cov_trace_pc() #16
  %next198 = getelementptr inbounds %struct.rhlist_head, ptr %obj, i32 0, i32 1
  %73 = ptrtoint ptr %next198 to i32
  call void @__asan_store4_noabort(i32 %73)
  store volatile ptr null, ptr %next198, align 4
  br label %if.end205

if.end205:                                        ; preds = %if.then187, %rht_ptr.exit338.if.end205_crit_edge
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %nelems.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %nelems.i, i32 1, i32 3, i32 1) #14
  %74 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nelems.i, ptr %nelems.i, i32 1, ptr elementtype(i32) %nelems.i) #14, !srcloc !265
  call fastcc void @rht_assign_unlock(ptr noundef %9, ptr noundef nonnull %cond.i291, ptr noundef %obj)
  %call.i.i.i340 = call zeroext i1 @__kasan_check_read(ptr noundef %nelems.i, i32 noundef 4) #14
  %75 = ptrtoint ptr %nelems.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %nelems.i, align 4
  %77 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %9, align 128
  %div8.i = lshr i32 %78, 2
  %mul.i = mul nuw i32 %div8.i, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %76, i32 %mul.i)
  %cmp.i341 = icmp ugt i32 %76, %mul.i
  br i1 %cmp.i341, label %rht_grow_above_75.exit, label %if.end205.out_crit_edge

if.end205.out_crit_edge:                          ; preds = %if.end205
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

rht_grow_above_75.exit:                           ; preds = %if.end205
  %max_size.i342 = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 4
  %79 = ptrtoint ptr %max_size.i342 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %max_size.i342, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.not.i343 = icmp eq i32 %80, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %78, i32 %80)
  %cmp4.i344 = icmp ult i32 %78, %80
  %spec.select.i345 = select i1 %tobool.not.i343, i1 true, i1 %cmp4.i344
  br i1 %spec.select.i345, label %if.then207, label %rht_grow_above_75.exit.out_crit_edge

rht_grow_above_75.exit.out_crit_edge:             ; preds = %rht_grow_above_75.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.then207:                                       ; preds = %rht_grow_above_75.exit
  call void @__sanitizer_cov_trace_pc() #16
  %run_work = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %81 = load ptr, ptr @system_wq, align 4
  %call.i.i347 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %81, ptr noundef %run_work) #14
  br label %out

out:                                              ; preds = %out_unlock, %if.then207, %rht_grow_above_75.exit.out_crit_edge, %if.end205.out_crit_edge, %if.else133, %do.body97, %rht_bucket_insert.exit.out_crit_edge
  %data.2 = phi ptr [ %data.3, %out_unlock ], [ inttoptr (i32 -12 to ptr), %rht_bucket_insert.exit.out_crit_edge ], [ null, %if.then207 ], [ null, %rht_grow_above_75.exit.out_crit_edge ], [ null, %if.else133 ], [ null, %do.body97 ], [ null, %if.end205.out_crit_edge ]
  %call.i348 = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i348, label %out.rcu_read_unlock.exit358_crit_edge, label %land.lhs.true.i351

out.rcu_read_unlock.exit358_crit_edge:            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit358

land.lhs.true.i351:                               ; preds = %out
  %call1.i349 = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i349)
  %tobool.not.i350 = icmp eq i32 %call1.i349, 0
  br i1 %tobool.not.i350, label %land.lhs.true.i351.rcu_read_unlock.exit358_crit_edge, label %land.lhs.true2.i353

land.lhs.true.i351.rcu_read_unlock.exit358_crit_edge: ; preds = %land.lhs.true.i351
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit358

land.lhs.true2.i353:                              ; preds = %land.lhs.true.i351
  %.b4.i352 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i352, label %land.lhs.true2.i353.rcu_read_unlock.exit358_crit_edge, label %if.then.i354

land.lhs.true2.i353.rcu_read_unlock.exit358_crit_edge: ; preds = %land.lhs.true2.i353
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit358

if.then.i354:                                     ; preds = %land.lhs.true2.i353
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.47) #14
  br label %rcu_read_unlock.exit358

rcu_read_unlock.exit358:                          ; preds = %if.then.i354, %land.lhs.true2.i353.rcu_read_unlock.exit358_crit_edge, %land.lhs.true.i351.rcu_read_unlock.exit358_crit_edge, %out.rcu_read_unlock.exit358_crit_edge
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !274
  %82 = call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i355 = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i.i.i.i355 to ptr
  %preempt_count.i.i.i.i356 = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %preempt_count.i.i.i.i356 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %preempt_count.i.i.i.i356, align 4
  %sub.i.i.i357 = add i32 %85, -1
  store volatile i32 %sub.i.i.i357, ptr %preempt_count.i.i.i.i356, align 4
  call void @rcu_read_unlock_strict() #14
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  br label %cleanup210

out_unlock:                                       ; preds = %if.end152.out_unlock_crit_edge, %if.end46.out_unlock_crit_edge
  %data.3 = phi ptr [ inttoptr (i32 -7 to ptr), %if.end152.out_unlock_crit_edge ], [ %add.ptr.i320, %if.end46.out_unlock_crit_edge ]
  call fastcc void @rht_unlock(ptr noundef %9, ptr noundef nonnull %cond.i291)
  br label %out

cleanup210:                                       ; preds = %rcu_read_unlock.exit358, %rcu_read_unlock.exit
  %retval.0 = phi ptr [ %call29, %rcu_read_unlock.exit ], [ %data.2, %rcu_read_unlock.exit358 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg) #14
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lockdep_rht_mutex_is_held(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rht_lock(ptr noundef %tbl, ptr noundef %bkt) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @local_bh_disable()
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %3, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !280
  br label %while.cond.i

while.cond.i:                                     ; preds = %do.body14.i, %entry
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %bkt, i32 noundef 4) #14
  %4 = ptrtoint ptr %bkt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %bkt, align 4
  %and.i.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %test_and_set_bit_lock.exit.i, label %while.cond.i.do.body2.i_crit_edge, !prof !281

while.cond.i.do.body2.i_crit_edge:                ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2.i

test_and_set_bit_lock.exit.i:                     ; preds = %while.cond.i
  tail call void @llvm.prefetch.p0(ptr %bkt, i32 1, i32 3, i32 1) #14
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bkt, ptr %bkt, i32 1, ptr elementtype(i32) %bkt) #14, !srcloc !282
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !283
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %phi.cmp.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %phi.cmp.i.not.i, label %__here, label %test_and_set_bit_lock.exit.i.do.body2.i_crit_edge, !prof !259

test_and_set_bit_lock.exit.i.do.body2.i_crit_edge: ; preds = %test_and_set_bit_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2.i

do.body2.i:                                       ; preds = %test_and_set_bit_lock.exit.i.do.body2.i_crit_edge, %while.cond.i.do.body2.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !284
  %7 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i1.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i1.i to ptr
  %preempt_count.i.i2.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i2.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i2.i, align 4
  %sub.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i2.i, align 4
  br label %do.body4.i

do.body4.i:                                       ; preds = %do.body4.i.do.body4.i_crit_edge, %do.body2.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !285
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #14, !srcloc !286
  %11 = ptrtoint ptr %bkt to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %bkt, align 4
  %and1.i.i = and i32 %12, 1
  %tobool12.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool12.not.i, label %do.body14.i, label %do.body4.i.do.body4.i_crit_edge

do.body4.i.do.body4.i_crit_edge:                  ; preds = %do.body4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body4.i

do.body14.i:                                      ; preds = %do.body4.i
  call void @__sanitizer_cov_trace_pc() #16
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i3.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i3.i to ptr
  %preempt_count.i.i4.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i4.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i4.i, align 4
  %add.i5.i = add i32 %16, 1
  store volatile i32 %add.i5.i, ptr %preempt_count.i.i4.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !287
  br label %while.cond.i

__here:                                           ; preds = %test_and_set_bit_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dep_map = getelementptr inbounds %struct.bucket_table, ptr %tbl, i32 0, i32 6
  tail call void @lock_acquire(ptr noundef %dep_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rht_lock, %__here) to i32)) #14
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rht_unlock(ptr noundef %tbl, ptr noundef %bkt) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  %dep_map = getelementptr inbounds %struct.bucket_table, ptr %tbl, i32 0, i32 6
  tail call void @lock_release(ptr noundef %dep_map, i32 noundef ptrtoint (ptr blockaddress(@rht_unlock, %__here) to i32)) #14
  %0 = ptrtoint ptr %bkt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %bkt, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %do.body4.i, label %bit_spin_unlock.exit, !prof !261

do.body4.i:                                       ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/bit_spinlock.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 60, 0\0A.popsection", ""() #14, !srcloc !288
  unreachable

bit_spin_unlock.exit:                             ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %bkt, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !289
  tail call void @llvm.prefetch.p0(ptr %bkt, i32 1, i32 3, i32 1) #14
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bkt, ptr %bkt, i32 1, ptr elementtype(i32) %bkt) #14, !srcloc !290
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !291
  %3 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %6, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call fastcc void @local_bh_enable()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rhashtable_insert_slow(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lockdep_rht_bucket_is_held(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rht_assign_unlock(ptr noundef %tbl, ptr noundef %bkt, ptr noundef %obj) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %obj to i32
  %and.i = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  %spec.select = select i1 %tobool.i.not, ptr %obj, ptr null
  %dep_map = getelementptr inbounds %struct.bucket_table, ptr %tbl, i32 0, i32 6
  tail call void @lock_release(ptr noundef %dep_map, i32 noundef ptrtoint (ptr blockaddress(@rht_assign_unlock, %__here) to i32)) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !292
  %1 = ptrtoint ptr %bkt to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %spec.select, ptr %bkt, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !293
  %2 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %sub.i = add i32 %5, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i, align 4
  tail call fastcc void @local_bh_enable()
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rht_bucket_nested_insert(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rhashtable_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mlx5_fs_del_fg(ptr noundef %fg) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_fg, i32 0, i32 1), ptr blockaddress(@trace_mlx5_fs_del_fg, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !267

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !259

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !294
  %call42 = tail call i32 @__traceiter_mlx5_fs_del_fg(ptr noundef null, ptr noundef %fg) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !295
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !259

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_fg, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_fg, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mlx5_fs_del_fg.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_mlx5_fs_del_fg.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 164, ptr noundef nonnull @.str.32) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !271
  %31 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mlx5_fs_del_fg(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__rhashtable_remove_fast(ptr noundef %ht, ptr noundef %obj, [7 x i32] %params.coerce, i1 noundef zeroext %rhlist) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !273
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.46) #14
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = ptrtoint ptr %ht to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %ht, align 4
  %call = tail call i32 @lockdep_rht_mutex_is_held(ptr noundef %ht) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false, label %rcu_read_lock.exit.do.end10_crit_edge

rcu_read_lock.exit.do.end10_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end10

lor.lhs.false:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true, label %lor.lhs.false.do.end10_crit_edge

lor.lhs.false.do.end10_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end10

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call5 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true.do.end10_crit_edge, label %land.lhs.true7

land.lhs.true.do.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end10

land.lhs.true7:                                   ; preds = %land.lhs.true
  %.b42 = load i1, ptr @__rhashtable_remove_fast.__warned, align 1
  br i1 %.b42, label %land.lhs.true7.do.end10_crit_edge, label %if.then

land.lhs.true7.do.end10_crit_edge:                ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end10

if.then:                                          ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_remove_fast.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 1076, ptr noundef nonnull @.str.32) #14
  br label %do.end10

do.end10:                                         ; preds = %if.then, %land.lhs.true7.do.end10_crit_edge, %land.lhs.true.do.end10_crit_edge, %lor.lhs.false.do.end10_crit_edge, %rcu_read_lock.exit.do.end10_crit_edge
  %params.coerce.fca.0.extract.i.i = extractvalue [7 x i32] %params.coerce, 0
  %params.coerce.fca.5.extract.i.i = extractvalue [7 x i32] %params.coerce, 5
  %6 = inttoptr i32 %params.coerce.fca.5.extract.i.i to ptr
  %head_offset.i.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %params.coerce.fca.5.extract.i.i)
  %tobool.not.i.i = icmp eq i32 %params.coerce.fca.5.extract.i.i, 0
  %conv.i.i = and i32 %params.coerce.fca.0.extract.i.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i.i)
  %tobool4.not.i.i = icmp eq i32 %conv.i.i, 0
  %key_len6.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 1
  %params.coerce.fca.1.extract.i.i = extractvalue [7 x i32] %params.coerce, 1
  %params.sroa.3.4.extract.shift.i.i = lshr i32 %params.coerce.fca.1.extract.i.i, 16
  %hashfn.i.i.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 7
  %key_len1.i.i.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 1
  br label %while.cond

while.cond:                                       ; preds = %do.end33.while.cond_crit_edge, %do.end10
  %tbl.0 = phi ptr [ %5, %do.end10 ], [ %53, %do.end33.while.cond_crit_edge ]
  %7 = ptrtoint ptr %head_offset.i.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %head_offset.i.i.i, align 2
  %conv.i.i.i = zext i16 %8 to i32
  %idx.neg.i.i.i = sub nsw i32 0, %conv.i.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %obj, i32 %idx.neg.i.i.i
  br i1 %tobool.not.i.i, label %if.then.i.i.i.i, label %cond.true.i.i, !prof !261

cond.true.i.i:                                    ; preds = %while.cond
  br i1 %tobool4.not.i.i, label %cond.false.i.i, label %cond.true.i.i.cond.end.i.i_crit_edge

cond.true.i.i.cond.end.i.i_crit_edge:             ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i.i

cond.false.i.i:                                   ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %key_len6.i.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %key_len6.i.i, align 2
  %conv7.i.i = zext i16 %10 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.true.i.i.cond.end.i.i_crit_edge
  %cond.i.i = phi i32 [ %conv7.i.i, %cond.false.i.i ], [ %conv.i.i, %cond.true.i.i.cond.end.i.i_crit_edge ]
  %hash_rnd.i.i = getelementptr inbounds %struct.bucket_table, ptr %tbl.0, i32 0, i32 2
  %11 = ptrtoint ptr %hash_rnd.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %hash_rnd.i.i, align 8
  %call8.i.i = tail call i32 %6(ptr noundef %add.ptr.i.i.i, i32 noundef %cond.i.i, i32 noundef %12) #14
  br label %rht_head_hashfn.exit.i

if.then.i.i.i.i:                                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  %hash_rnd.i.i.i = getelementptr inbounds %struct.bucket_table, ptr %tbl.0, i32 0, i32 2
  %13 = ptrtoint ptr %hash_rnd.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %hash_rnd.i.i.i, align 8
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %params.sroa.3.4.extract.shift.i.i
  %15 = ptrtoint ptr %hashfn.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hashfn.i.i.i.i, align 4
  %17 = ptrtoint ptr %key_len1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %key_len1.i.i.i.i, align 4
  %call.i.i.i.i = tail call i32 %16(ptr noundef %add.ptr.i.i, i32 noundef %18, i32 noundef %14) #14
  br label %rht_head_hashfn.exit.i

rht_head_hashfn.exit.i:                           ; preds = %if.then.i.i.i.i, %cond.end.i.i
  %hash.2.i.i.sink.i.i = phi i32 [ %call8.i.i, %cond.end.i.i ], [ %call.i.i.i.i, %if.then.i.i.i.i ]
  %19 = ptrtoint ptr %tbl.0 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %tbl.0, align 128
  %sub.i.i.i.i = add i32 %20, -1
  %and.i3.i.i.i = and i32 %sub.i.i.i.i, %hash.2.i.i.sink.i.i
  %nest.i.i = getelementptr inbounds %struct.bucket_table, ptr %tbl.0, i32 0, i32 1
  %21 = ptrtoint ptr %nest.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %nest.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i237.i = icmp eq i32 %22, 0
  br i1 %tobool.not.i237.i, label %cond.false.i239.i, label %cond.true.i238.i, !prof !259

cond.true.i238.i:                                 ; preds = %rht_head_hashfn.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i = tail call ptr @__rht_bucket_nested(ptr noundef %tbl.0, i32 noundef %and.i3.i.i.i) #14
  br label %rht_bucket_var.exit.i

cond.false.i239.i:                                ; preds = %rht_head_hashfn.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i = getelementptr %struct.bucket_table, ptr %tbl.0, i32 0, i32 8, i32 %and.i3.i.i.i
  br label %rht_bucket_var.exit.i

rht_bucket_var.exit.i:                            ; preds = %cond.false.i239.i, %cond.true.i238.i
  %cond.i240.i = phi ptr [ %call.i.i, %cond.true.i238.i ], [ %arrayidx.i.i, %cond.false.i239.i ]
  %tobool.not.i43 = icmp eq ptr %cond.i240.i, null
  br i1 %tobool.not.i43, label %rht_bucket_var.exit.i.land.rhs_crit_edge, label %if.end.i

rht_bucket_var.exit.i.land.rhs_crit_edge:         ; preds = %rht_bucket_var.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs

if.end.i:                                         ; preds = %rht_bucket_var.exit.i
  tail call fastcc void @rht_lock(ptr noundef %tbl.0, ptr noundef nonnull %cond.i240.i) #14
  %call.i242.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %tbl.0, i32 noundef %and.i3.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i242.i)
  %tobool.not.i243.i = icmp eq i32 %call.i242.i, 0
  br i1 %tobool.not.i243.i, label %land.lhs.true.i.i, label %if.end.i.rht_ptr.exit.i_crit_edge

if.end.i.rht_ptr.exit.i_crit_edge:                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.rht_ptr.exit.i_crit_edge, label %land.lhs.true3.i.i

land.lhs.true.i.i.rht_ptr.exit.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i.i
  %.b7.i.i = load i1, ptr @rht_ptr.__warned, align 1
  br i1 %.b7.i.i, label %land.lhs.true3.i.i.rht_ptr.exit.i_crit_edge, label %if.then.i.i

land.lhs.true3.i.i.rht_ptr.exit.i_crit_edge:      ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rht_ptr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 377, ptr noundef nonnull @.str.43) #14
  br label %rht_ptr.exit.i

rht_ptr.exit.i:                                   ; preds = %if.then.i.i, %land.lhs.true3.i.i.rht_ptr.exit.i_crit_edge, %land.lhs.true.i.i.rht_ptr.exit.i_crit_edge, %if.end.i.rht_ptr.exit.i_crit_edge
  %23 = ptrtoint ptr %cond.i240.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %cond.i240.i, align 4
  %25 = ptrtoint ptr %24 to i32
  %and.i.i.i = and i32 %25, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  %26 = ptrtoint ptr %cond.i240.i to i32
  %or.i.i.i = or i32 %26, 1
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 %or.i.i.i, i32 %and.i.i.i
  %and.i266.i = and i32 %cond.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i266.i)
  %tobool.i.not267.i = icmp eq i32 %and.i266.i, 0
  br i1 %tobool.i.not267.i, label %for.body.preheader.i, label %rht_ptr.exit.i.__rhashtable_remove_fast_one.exit.thread63_crit_edge

rht_ptr.exit.i.__rhashtable_remove_fast_one.exit.thread63_crit_edge: ; preds = %rht_ptr.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__rhashtable_remove_fast_one.exit.thread63

for.body.preheader.i:                             ; preds = %rht_ptr.exit.i
  %27 = inttoptr i32 %cond.i.i.i to ptr
  %cmp.not.i76 = icmp eq ptr %27, %obj
  br i1 %cmp.not.i76, label %for.body.preheader.i.do.body54.i_crit_edge, label %for.body.preheader.i.if.then4.i_crit_edge

for.body.preheader.i.if.then4.i_crit_edge:        ; preds = %for.body.preheader.i
  br label %if.then4.i

for.body.preheader.i.do.body54.i_crit_edge:       ; preds = %for.body.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body54.i

for.body.i:                                       ; preds = %do.end156.i
  %cmp.not.i = icmp eq ptr %37, %obj
  br i1 %cmp.not.i, label %for.body.i.do.body54.i_crit_edge, label %for.body.i.if.then4.i_crit_edge

for.body.i.if.then4.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then4.i

for.body.i.do.body54.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body54.i

if.then4.i:                                       ; preds = %for.body.i.if.then4.i_crit_edge, %for.body.preheader.i.if.then4.i_crit_edge
  %he.0268.i77 = phi ptr [ %37, %for.body.i.if.then4.i_crit_edge ], [ %27, %for.body.preheader.i.if.then4.i_crit_edge ]
  br i1 %rhlist, label %if.then4.i.do.body.i_crit_edge, label %if.then4.i.do.body145.i_crit_edge

if.then4.i.do.body145.i_crit_edge:                ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body145.i

if.then4.i.do.body.i_crit_edge:                   ; preds = %if.then4.i
  br label %do.body.i

do.body.i:                                        ; preds = %do.end.i.do.body.i_crit_edge, %if.then4.i.do.body.i_crit_edge
  %list.0.i = phi ptr [ %29, %do.end.i.do.body.i_crit_edge ], [ %he.0268.i77, %if.then4.i.do.body.i_crit_edge ]
  %next8.i = getelementptr inbounds %struct.rhlist_head, ptr %list.0.i, i32 0, i32 1
  %call10.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %tbl.0, i32 noundef %and.i3.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %land.lhs.true.i44, label %do.body.i.do.end.i_crit_edge

do.body.i.do.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

land.lhs.true.i44:                                ; preds = %do.body.i
  %call12.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %land.lhs.true.i44.do.end.i_crit_edge, label %land.lhs.true14.i

land.lhs.true.i44.do.end.i_crit_edge:             ; preds = %land.lhs.true.i44
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

land.lhs.true14.i:                                ; preds = %land.lhs.true.i44
  %.b236.i = load i1, ptr @__rhashtable_remove_fast_one.__warned, align 1
  br i1 %.b236.i, label %land.lhs.true14.i.do.end.i_crit_edge, label %if.then16.i

land.lhs.true14.i.do.end.i_crit_edge:             ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

if.then16.i:                                      ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_remove_fast_one.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 1020, ptr noundef nonnull @.str.43) #14
  br label %do.end.i

do.end.i:                                         ; preds = %if.then16.i, %land.lhs.true14.i.do.end.i_crit_edge, %land.lhs.true.i44.do.end.i_crit_edge, %do.body.i.do.end.i_crit_edge
  %28 = ptrtoint ptr %next8.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %next8.i, align 4
  %tobool21.not.i = icmp eq ptr %29, null
  %cmp22.not.i = icmp eq ptr %29, %obj
  %or.cond.i = or i1 %tobool21.not.i, %cmp22.not.i
  br i1 %or.cond.i, label %do.end23.i, label %do.end.i.do.body.i_crit_edge

do.end.i.do.body.i_crit_edge:                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

do.end23.i:                                       ; preds = %do.end.i
  br i1 %tobool21.not.i, label %do.end23.i.do.body145.i_crit_edge, label %do.body27.i

do.end23.i.do.body145.i_crit_edge:                ; preds = %do.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body145.i

do.body27.i:                                      ; preds = %do.end23.i
  %call28.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %tbl.0, i32 noundef %and.i3.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i)
  %tobool29.not.i = icmp eq i32 %call28.i, 0
  br i1 %tobool29.not.i, label %land.lhs.true30.i, label %do.body27.i.__rhashtable_remove_fast_one.exit_crit_edge

do.body27.i.__rhashtable_remove_fast_one.exit_crit_edge: ; preds = %do.body27.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__rhashtable_remove_fast_one.exit

land.lhs.true30.i:                                ; preds = %do.body27.i
  %call31.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31.i)
  %tobool32.not.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.not.i, label %land.lhs.true30.i.__rhashtable_remove_fast_one.exit_crit_edge, label %land.lhs.true33.i

land.lhs.true30.i.__rhashtable_remove_fast_one.exit_crit_edge: ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__rhashtable_remove_fast_one.exit

land.lhs.true33.i:                                ; preds = %land.lhs.true30.i
  %.b228235.i = load i1, ptr @__rhashtable_remove_fast_one.__warned.51, align 1
  br i1 %.b228235.i, label %land.lhs.true33.i.__rhashtable_remove_fast_one.exit_crit_edge, label %if.then35.i

land.lhs.true33.i.__rhashtable_remove_fast_one.exit_crit_edge: ; preds = %land.lhs.true33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__rhashtable_remove_fast_one.exit

if.then35.i:                                      ; preds = %land.lhs.true33.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_remove_fast_one.__warned.51, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 1026, ptr noundef nonnull @.str.43) #14
  br label %__rhashtable_remove_fast_one.exit

do.body54.i:                                      ; preds = %for.body.i.do.body54.i_crit_edge, %for.body.preheader.i.do.body54.i_crit_edge
  %pprev.0269.i.lcssa = phi ptr [ %he.0268.i77, %for.body.i.do.body54.i_crit_edge ], [ null, %for.body.preheader.i.do.body54.i_crit_edge ]
  %call55.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %tbl.0, i32 noundef %and.i3.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55.i)
  %tobool56.not.i = icmp eq i32 %call55.i, 0
  br i1 %tobool56.not.i, label %land.lhs.true57.i, label %do.body54.i.do.end65.i_crit_edge

do.body54.i.do.end65.i_crit_edge:                 ; preds = %do.body54.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end65.i

land.lhs.true57.i:                                ; preds = %do.body54.i
  %call58.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58.i)
  %tobool59.not.i = icmp eq i32 %call58.i, 0
  br i1 %tobool59.not.i, label %land.lhs.true57.i.do.end65.i_crit_edge, label %land.lhs.true60.i

land.lhs.true57.i.do.end65.i_crit_edge:           ; preds = %land.lhs.true57.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end65.i

land.lhs.true60.i:                                ; preds = %land.lhs.true57.i
  %.b229234.i = load i1, ptr @__rhashtable_remove_fast_one.__warned.52, align 1
  br i1 %.b229234.i, label %land.lhs.true60.i.do.end65.i_crit_edge, label %if.then62.i

land.lhs.true60.i.do.end65.i_crit_edge:           ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end65.i

if.then62.i:                                      ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_remove_fast_one.__warned.52, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 1032, ptr noundef nonnull @.str.43) #14
  br label %do.end65.i

do.end65.i:                                       ; preds = %if.then62.i, %land.lhs.true60.i.do.end65.i_crit_edge, %land.lhs.true57.i.do.end65.i_crit_edge, %do.body54.i.do.end65.i_crit_edge
  %30 = ptrtoint ptr %obj to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %obj, align 4
  br i1 %rhlist, label %do.body70.i, label %do.end65.i.if.end102.i_crit_edge

do.end65.i.if.end102.i_crit_edge:                 ; preds = %do.end65.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end102.i

do.body70.i:                                      ; preds = %do.end65.i
  %call71.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %tbl.0, i32 noundef %and.i3.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71.i)
  %tobool72.not.i = icmp eq i32 %call71.i, 0
  br i1 %tobool72.not.i, label %land.lhs.true73.i, label %do.body70.i.do.end81.i_crit_edge

do.body70.i.do.end81.i_crit_edge:                 ; preds = %do.body70.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end81.i

land.lhs.true73.i:                                ; preds = %do.body70.i
  %call74.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74.i)
  %tobool75.not.i = icmp eq i32 %call74.i, 0
  br i1 %tobool75.not.i, label %land.lhs.true73.i.do.end81.i_crit_edge, label %land.lhs.true76.i

land.lhs.true73.i.do.end81.i_crit_edge:           ; preds = %land.lhs.true73.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end81.i

land.lhs.true76.i:                                ; preds = %land.lhs.true73.i
  %.b230233.i = load i1, ptr @__rhashtable_remove_fast_one.__warned.53, align 1
  br i1 %.b230233.i, label %land.lhs.true76.i.do.end81.i_crit_edge, label %if.then78.i

land.lhs.true76.i.do.end81.i_crit_edge:           ; preds = %land.lhs.true76.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end81.i

if.then78.i:                                      ; preds = %land.lhs.true76.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_remove_fast_one.__warned.53, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 1036, ptr noundef nonnull @.str.43) #14
  br label %do.end81.i

do.end81.i:                                       ; preds = %if.then78.i, %land.lhs.true76.i.do.end81.i_crit_edge, %land.lhs.true73.i.do.end81.i_crit_edge, %do.body70.i.do.end81.i_crit_edge
  %next83.i = getelementptr inbounds %struct.rhlist_head, ptr %obj, i32 0, i32 1
  %32 = ptrtoint ptr %next83.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %next83.i, align 4
  %tobool84.not.i = icmp eq ptr %33, null
  br i1 %tobool84.not.i, label %do.end81.i.if.end102.i_crit_edge, label %do.body91.i

do.end81.i.if.end102.i_crit_edge:                 ; preds = %do.end81.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end102.i

do.body91.i:                                      ; preds = %do.end81.i
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %31, ptr %33, align 4
  br label %if.end102.i

if.end102.i:                                      ; preds = %do.body91.i, %do.end81.i.if.end102.i_crit_edge, %do.end65.i.if.end102.i_crit_edge
  %cmp159.i = phi i1 [ true, %do.end81.i.if.end102.i_crit_edge ], [ false, %do.body91.i ], [ true, %do.end65.i.if.end102.i_crit_edge ]
  %obj.addr.1.i = phi ptr [ %31, %do.end81.i.if.end102.i_crit_edge ], [ %33, %do.body91.i ], [ %31, %do.end65.i.if.end102.i_crit_edge ]
  %tobool103.not.i = icmp eq ptr %pprev.0269.i.lcssa, null
  br i1 %tobool103.not.i, label %if.else142.i, label %do.body105.i

do.body105.i:                                     ; preds = %if.end102.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !296
  %35 = ptrtoint ptr %pprev.0269.i.lcssa to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %obj.addr.1.i, ptr %pprev.0269.i.lcssa, align 4
  tail call fastcc void @rht_unlock(ptr noundef %tbl.0, ptr noundef nonnull %cond.i240.i) #14
  br label %unlocked.i

if.else142.i:                                     ; preds = %if.end102.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @rht_assign_unlock(ptr noundef %tbl.0, ptr noundef nonnull %cond.i240.i, ptr noundef %obj.addr.1.i) #14
  br label %unlocked.i

do.body145.i:                                     ; preds = %do.end23.i.do.body145.i_crit_edge, %if.then4.i.do.body145.i_crit_edge
  %call146.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %tbl.0, i32 noundef %and.i3.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call146.i)
  %tobool147.not.i = icmp eq i32 %call146.i, 0
  br i1 %tobool147.not.i, label %land.lhs.true148.i, label %do.body145.i.do.end156.i_crit_edge

do.body145.i.do.end156.i_crit_edge:               ; preds = %do.body145.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end156.i

land.lhs.true148.i:                               ; preds = %do.body145.i
  %call149.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call149.i)
  %tobool150.not.i = icmp eq i32 %call149.i, 0
  br i1 %tobool150.not.i, label %land.lhs.true148.i.do.end156.i_crit_edge, label %land.lhs.true151.i

land.lhs.true148.i.do.end156.i_crit_edge:         ; preds = %land.lhs.true148.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end156.i

land.lhs.true151.i:                               ; preds = %land.lhs.true148.i
  %.b231232.i = load i1, ptr @__rhashtable_remove_fast_one.__warned.54, align 1
  br i1 %.b231232.i, label %land.lhs.true151.i.do.end156.i_crit_edge, label %if.then153.i

land.lhs.true151.i.do.end156.i_crit_edge:         ; preds = %land.lhs.true151.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end156.i

if.then153.i:                                     ; preds = %land.lhs.true151.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_remove_fast_one.__warned.54, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 1004, ptr noundef nonnull @.str.43) #14
  br label %do.end156.i

do.end156.i:                                      ; preds = %if.then153.i, %land.lhs.true151.i.do.end156.i_crit_edge, %land.lhs.true148.i.do.end156.i_crit_edge, %do.body145.i.do.end156.i_crit_edge
  %36 = ptrtoint ptr %he.0268.i77 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %he.0268.i77, align 4
  %38 = ptrtoint ptr %37 to i32
  %and.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %for.body.i, label %do.end156.i.__rhashtable_remove_fast_one.exit.thread63_crit_edge

do.end156.i.__rhashtable_remove_fast_one.exit.thread63_crit_edge: ; preds = %do.end156.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__rhashtable_remove_fast_one.exit.thread63

unlocked.i:                                       ; preds = %if.else142.i, %do.body105.i
  br i1 %cmp159.i, label %if.then160.i, label %unlocked.i.while.end_crit_edge

unlocked.i.while.end_crit_edge:                   ; preds = %unlocked.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.then160.i:                                     ; preds = %unlocked.i
  %nelems.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nelems.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %nelems.i, i32 1, i32 3, i32 1) #14
  %39 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nelems.i, ptr %nelems.i, i32 1, ptr elementtype(i32) %nelems.i) #14, !srcloc !297
  %automatic_shrinking.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 6
  %40 = ptrtoint ptr %automatic_shrinking.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %automatic_shrinking.i, align 2, !range !264
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool161.not.i = icmp eq i8 %41, 0
  br i1 %tobool161.not.i, label %if.then160.i.while.end_crit_edge, label %land.rhs162.i

if.then160.i.while.end_crit_edge:                 ; preds = %if.then160.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

land.rhs162.i:                                    ; preds = %if.then160.i
  %call.i.i.i244.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nelems.i, i32 noundef 4) #14
  %42 = ptrtoint ptr %nelems.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %nelems.i, align 4
  %44 = ptrtoint ptr %tbl.0 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %tbl.0, align 128
  %mul.i.i = mul i32 %45, 3
  %div.i.i = udiv i32 %mul.i.i, 10
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %div.i.i)
  %cmp.i.i = icmp ult i32 %43, %div.i.i
  br i1 %cmp.i.i, label %rht_shrink_below_30.exit.i, label %land.rhs162.i.while.end_crit_edge

land.rhs162.i.while.end_crit_edge:                ; preds = %land.rhs162.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

rht_shrink_below_30.exit.i:                       ; preds = %land.rhs162.i
  %min_size.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 5
  %46 = ptrtoint ptr %min_size.i.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %min_size.i.i, align 4
  %conv.i245.i = zext i16 %47 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %45, i32 %conv.i245.i)
  %cmp2.i.i = icmp ugt i32 %45, %conv.i245.i
  br i1 %cmp2.i.i, label %if.then168.i, label %rht_shrink_below_30.exit.i.while.end_crit_edge, !prof !261

rht_shrink_below_30.exit.i.while.end_crit_edge:   ; preds = %rht_shrink_below_30.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.then168.i:                                     ; preds = %rht_shrink_below_30.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %run_work.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %48 = load ptr, ptr @system_wq, align 4
  %call.i.i246.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %48, ptr noundef %run_work.i) #14
  br label %while.end

__rhashtable_remove_fast_one.exit.thread63:       ; preds = %do.end156.i.__rhashtable_remove_fast_one.exit.thread63_crit_edge, %rht_ptr.exit.i.__rhashtable_remove_fast_one.exit.thread63_crit_edge
  tail call fastcc void @rht_unlock(ptr noundef %tbl.0, ptr noundef nonnull %cond.i240.i) #14
  br label %land.rhs

__rhashtable_remove_fast_one.exit:                ; preds = %if.then35.i, %land.lhs.true33.i.__rhashtable_remove_fast_one.exit_crit_edge, %land.lhs.true30.i.__rhashtable_remove_fast_one.exit_crit_edge, %do.body27.i.__rhashtable_remove_fast_one.exit_crit_edge
  %next40.i = getelementptr inbounds %struct.rhlist_head, ptr %29, i32 0, i32 1
  %49 = ptrtoint ptr %next40.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %next40.i, align 4
  %51 = ptrtoint ptr %next8.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %50, ptr %next8.i, align 4
  tail call fastcc void @rht_unlock(ptr noundef %tbl.0, ptr noundef nonnull %cond.i240.i) #14
  br label %while.end

land.rhs:                                         ; preds = %__rhashtable_remove_fast_one.exit.thread63, %rht_bucket_var.exit.i.land.rhs_crit_edge
  %future_tbl = getelementptr inbounds %struct.bucket_table, ptr %tbl.0, i32 0, i32 5
  %52 = ptrtoint ptr %future_tbl to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %future_tbl, align 4
  %call20 = tail call i32 @lockdep_rht_mutex_is_held(ptr noundef %ht) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %lor.lhs.false22, label %land.rhs.do.end33_crit_edge

land.rhs.do.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end33

lor.lhs.false22:                                  ; preds = %land.rhs
  %call23 = tail call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %land.lhs.true25, label %lor.lhs.false22.do.end33_crit_edge

lor.lhs.false22.do.end33_crit_edge:               ; preds = %lor.lhs.false22
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end33

land.lhs.true25:                                  ; preds = %lor.lhs.false22
  %call26 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %land.lhs.true25.do.end33_crit_edge, label %land.lhs.true28

land.lhs.true25.do.end33_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end33

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %.b4041 = load i1, ptr @__rhashtable_remove_fast.__warned.50, align 1
  br i1 %.b4041, label %land.lhs.true28.do.end33_crit_edge, label %if.then30

land.lhs.true28.do.end33_crit_edge:               ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end33

if.then30:                                        ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_remove_fast.__warned.50, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 1085, ptr noundef nonnull @.str.32) #14
  br label %do.end33

do.end33:                                         ; preds = %if.then30, %land.lhs.true28.do.end33_crit_edge, %land.lhs.true25.do.end33_crit_edge, %lor.lhs.false22.do.end33_crit_edge, %land.rhs.do.end33_crit_edge
  %tobool35.not = icmp eq ptr %53, null
  br i1 %tobool35.not, label %do.end33.while.end_crit_edge, label %do.end33.while.cond_crit_edge

do.end33.while.cond_crit_edge:                    ; preds = %do.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

do.end33.while.end_crit_edge:                     ; preds = %do.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %do.end33.while.end_crit_edge, %__rhashtable_remove_fast_one.exit, %if.then168.i, %rht_shrink_below_30.exit.i.while.end_crit_edge, %land.rhs162.i.while.end_crit_edge, %if.then160.i.while.end_crit_edge, %unlocked.i.while.end_crit_edge
  %retval.0.i57 = phi i32 [ 0, %__rhashtable_remove_fast_one.exit ], [ 0, %unlocked.i.while.end_crit_edge ], [ 0, %if.then160.i.while.end_crit_edge ], [ 0, %if.then168.i ], [ 0, %rht_shrink_below_30.exit.i.while.end_crit_edge ], [ 0, %land.rhs162.i.while.end_crit_edge ], [ -2, %do.end33.while.end_crit_edge ]
  %call.i45 = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i45, label %while.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i48

while.end.rcu_read_unlock.exit_crit_edge:         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true.i48:                                ; preds = %while.end
  %call1.i46 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i46)
  %tobool.not.i47 = icmp eq i32 %call1.i46, 0
  br i1 %tobool.not.i47, label %land.lhs.true.i48.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i50

land.lhs.true.i48.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i48
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true2.i50:                               ; preds = %land.lhs.true.i48
  %.b4.i49 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i49, label %land.lhs.true2.i50.rcu_read_unlock.exit_crit_edge, label %if.then.i51

land.lhs.true2.i50.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i50
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

if.then.i51:                                      ; preds = %land.lhs.true2.i50
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.47) #14
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i51, %land.lhs.true2.i50.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i48.rcu_read_unlock.exit_crit_edge, %while.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !274
  %54 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i.i52 = and i32 %54, -16384
  %55 = inttoptr i32 %and.i.i.i.i.i52 to ptr
  %preempt_count.i.i.i.i53 = getelementptr inbounds %struct.thread_info, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %preempt_count.i.i.i.i53 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %preempt_count.i.i.i.i53, align 4
  %sub.i.i.i = add i32 %57, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i53, align 4
  tail call void @rcu_read_unlock_strict() #14
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  ret i32 %retval.0.i57
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__rht_bucket_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mlx5_fs_add_fg(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nested_down_write_ref_node(ptr noundef %node, i32 noundef %class) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %node, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %lock = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 5
  tail call void @down_write_nested(ptr noundef %lock, i32 noundef %class) #14
  %refcount = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #14
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #14, !srcloc !260
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.then.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !261

if.then.if.end15.sink.split.i.i.i_crit_edge:      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %if.then
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.if.end_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !259

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.if.end_crit_edge:                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef %.sink.i.i.i) #14
  br label %if.end

if.end:                                           ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @alloc_fte(ptr nocapture noundef readonly %ft, ptr nocapture noundef readonly %spec, ptr nocapture noundef readonly %flow_act) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_steering.exit

find_root.exit.i:                                 ; preds = %entry
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_steering.exit_crit_edge, label %if.then.i

find_root.exit.i.get_steering.exit_crit_edge:     ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_steering.exit

if.then.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev.i, align 4
  %steering.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %5, i32 0, i32 17, i32 26
  %6 = ptrtoint ptr %steering.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %steering.i, align 4
  br label %get_steering.exit

get_steering.exit:                                ; preds = %if.then.i, %find_root.exit.i.get_steering.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i = phi ptr [ %7, %if.then.i ], [ null, %find_root.exit.i.get_steering.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  %ftes_cache = getelementptr inbounds %struct.mlx5_flow_steering, ptr %retval.0.i, i32 0, i32 3
  %8 = ptrtoint ptr %ftes_cache to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ftes_cache, align 4
  %call.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %9, i32 noundef 3520) #14
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %get_steering.exit.cleanup_crit_edge, label %if.end

get_steering.exit.cleanup_crit_edge:              ; preds = %get_steering.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %get_steering.exit
  call void @__sanitizer_cov_trace_pc() #16
  %val = getelementptr inbounds %struct.fs_fte, ptr %call.i, i32 0, i32 2
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, ptr %spec, i32 0, i32 2
  %10 = call ptr @memcpy(ptr %val, ptr %match_value, i32 448)
  %type = getelementptr inbounds %struct.fs_node, ptr %call.i, i32 0, i32 2
  %11 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 5, ptr %type, align 8
  %action = getelementptr inbounds %struct.fs_fte, ptr %call.i, i32 0, i32 6
  %12 = call ptr @memcpy(ptr %action, ptr %flow_act, i32 36)
  %flow_context = getelementptr inbounds %struct.fs_fte, ptr %call.i, i32 0, i32 5
  %flow_context4 = getelementptr inbounds %struct.mlx5_flow_spec, ptr %spec, i32 0, i32 3
  %13 = call ptr @memcpy(ptr %flow_context, ptr %flow_context4, i32 12)
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %call.i, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  %14 = ptrtoint ptr %refcount.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile i32 1, ptr %refcount.i, align 4
  %15 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %call.i, ptr %call.i, align 8
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call.i, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call.i, ptr %prev.i.i, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %call.i, i32 0, i32 1
  %17 = ptrtoint ptr %children.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %children.i, ptr %children.i, align 8
  %prev.i9.i = getelementptr inbounds %struct.fs_node, ptr %call.i, i32 0, i32 1, i32 1
  %18 = ptrtoint ptr %prev.i9.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %children.i, ptr %prev.i9.i, align 4
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %call.i, i32 0, i32 5
  tail call void @__init_rwsem(ptr noundef %lock.i, ptr noundef nonnull @.str.28, ptr noundef nonnull @tree_init_node.__key) #14
  %del_hw_func1.i = getelementptr inbounds %struct.fs_node, ptr %call.i, i32 0, i32 8
  %19 = ptrtoint ptr %del_hw_func1.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @del_hw_fte, ptr %del_hw_func1.i, align 4
  %del_sw_func2.i = getelementptr inbounds %struct.fs_node, ptr %call.i, i32 0, i32 9
  %20 = ptrtoint ptr %del_sw_func2.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @del_sw_fte, ptr %del_sw_func2.i, align 8
  %active.i = getelementptr inbounds %struct.fs_node, ptr %call.i, i32 0, i32 7
  %21 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %active.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %get_steering.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %call.i, %if.end ], [ inttoptr (i32 -12 to ptr), %get_steering.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @create_auto_flow_group(ptr noundef %ft, ptr noundef %fg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i = getelementptr inbounds %struct.fs_node, ptr %ft, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i, align 4
  %type.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i, label %entry.find_root.exit_crit_edge, label %do.end.i, !prof !259

entry.find_root.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit

find_root.exit:                                   ; preds = %do.end.i, %entry.find_root.exit_crit_edge
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %1, %entry.find_root.exit_crit_edge ]
  %call.i.i = tail call noalias ptr @kvmalloc_node(i32 noundef 1024, i32 noundef 3520, i32 noundef -1) #19
  %tobool.not = icmp eq ptr %call.i.i, null
  br i1 %tobool.not, label %find_root.exit.cleanup_crit_edge, label %do.body

find_root.exit.cleanup_crit_edge:                 ; preds = %find_root.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body:                                          ; preds = %find_root.exit
  %mask = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 2
  %4 = ptrtoint ptr %mask to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %mask, align 4
  %conv = zext i8 %5 to i32
  %add.ptr = getelementptr i32, ptr %call.i.i, i32 15
  %6 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr, align 4
  %and = and i32 %7, -256
  %or = or i32 %and, %conv
  store i32 %or, ptr %add.ptr, align 4
  %start_index = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 3
  %8 = ptrtoint ptr %start_index to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %start_index, align 4
  %add.ptr12 = getelementptr i32, ptr %call.i.i, i32 7
  %10 = ptrtoint ptr %add.ptr12 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %add.ptr12, align 4
  %max_ftes = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 4
  %11 = ptrtoint ptr %max_ftes to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %max_ftes, align 4
  %add = add i32 %9, -1
  %sub = add i32 %add, %12
  %add.ptr26 = getelementptr i32, ptr %call.i.i, i32 9
  %13 = ptrtoint ptr %add.ptr26 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub, ptr %add.ptr26, align 4
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 2, i32 1
  %add.ptr36 = getelementptr %struct.mlx5_flow_group, ptr %fg, i32 0, i32 2, i32 1, i32 17
  %14 = ptrtoint ptr %add.ptr36 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %add.ptr36, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %15)
  %tobool38 = icmp ugt i32 %15, 65535
  %add.ptr47 = getelementptr i32, ptr %call.i.i, i32 6
  %16 = ptrtoint ptr %add.ptr47 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %add.ptr47, align 4
  %and48 = and i32 %17, 2147483647
  %shl50 = select i1 %tobool38, i32 -2147483648, i32 0
  %or51 = or i32 %and48, %shl50
  store i32 %or51, ptr %add.ptr47, align 4
  %add.ptr55 = getelementptr i8, ptr %call.i.i, i32 64
  %18 = call ptr @memcpy(ptr %add.ptr55, ptr %match_criteria, i32 448)
  %cmds = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i, i32 0, i32 8
  %19 = ptrtoint ptr %cmds to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cmds, align 4
  %create_flow_group = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %create_flow_group to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %create_flow_group, align 4
  %call59 = tail call i32 %22(ptr noundef %retval.0.i, ptr noundef %ft, ptr noundef nonnull %call.i.i, ptr noundef %fg) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %if.then61, label %do.body.if.end63_crit_edge

do.body.if.end63_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

if.then61:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %active = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 7
  %23 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 1, ptr %active, align 4
  tail call fastcc void @trace_mlx5_fs_add_fg(ptr noundef %fg)
  br label %if.end63

if.end63:                                         ; preds = %if.then61, %do.body.if.end63_crit_edge
  tail call void @kvfree(ptr noundef nonnull %call.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end63, %find_root.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call59, %if.end63 ], [ -12, %find_root.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @insert_fte(ptr noundef %fg, ptr noundef %fte) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fte_allocator = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 5
  %max_ftes = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 4
  %0 = ptrtoint ptr %max_ftes to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %max_ftes, align 4
  %sub = add i32 %1, -1
  %call.i = tail call i32 @ida_alloc_range(ptr noundef %fte_allocator, i32 noundef 0, i32 noundef %sub, i32 noundef 3264) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %start_index = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 3
  %2 = ptrtoint ptr %start_index to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %start_index, align 4
  %add = add i32 %3, %call.i
  %index1 = getelementptr inbounds %struct.fs_fte, ptr %fte, i32 0, i32 4
  %4 = ptrtoint ptr %index1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %add, ptr %index1, align 4
  %ftes_hash = getelementptr inbounds %struct.mlx5_flow_group, ptr %fg, i32 0, i32 7
  %hash = getelementptr inbounds %struct.fs_fte, ptr %fte, i32 0, i32 9
  %call.i29 = tail call fastcc ptr @__rhashtable_insert_fast(ptr noundef %ftes_hash, ptr noundef null, ptr noundef %hash, [7 x i32] [i32 448, i32 10224284, i32 0, i32 65792, i32 0, i32 0, i32 0], i1 noundef zeroext false) #14
  %cmp.i.i = icmp ugt ptr %call.i29, inttoptr (i32 -4096 to ptr)
  %5 = ptrtoint ptr %call.i29 to i32
  %cmp.i = icmp eq ptr %call.i29, null
  %cond.i = select i1 %cmp.i, i32 0, i32 -17
  %retval.0.i = select i1 %cmp.i.i, i32 %5, i32 %cond.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %if.end4, label %err_ida_remove

if.end4:                                          ; preds = %if.end
  %tobool.not.i = icmp eq ptr %fg, null
  br i1 %tobool.not.i, label %if.then3.critedge.i, label %if.then.i

if.then.i:                                        ; preds = %if.end4
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %7 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %.not.i.i.i.i = icmp sgt i32 %7, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #14
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %parent1.c.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 3
  %8 = ptrtoint ptr %parent1.c.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %fg, ptr %parent1.c.i, align 4
  %root4.i = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 4
  %9 = ptrtoint ptr %root4.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %root4.i, align 4
  br label %tree_add_node.exit

if.then3.critedge.i:                              ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  %parent1.c14.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 3
  %11 = ptrtoint ptr %parent1.c14.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %parent1.c14.i, align 4
  br label %tree_add_node.exit

tree_add_node.exit:                               ; preds = %if.then3.critedge.i, %refcount_inc.exit.i
  %.sink.i = phi ptr [ %10, %refcount_inc.exit.i ], [ %fte, %if.then3.critedge.i ]
  %root5.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 4
  %12 = ptrtoint ptr %root5.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %.sink.i, ptr %root5.i, align 4
  %children = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 1, i32 1
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %fte, ptr noundef %14, ptr noundef %children) #14
  br i1 %call.i.i, label %if.end.i.i, label %tree_add_node.exit.cleanup_crit_edge

tree_add_node.exit.cleanup_crit_edge:             ; preds = %tree_add_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i.i:                                       ; preds = %tree_add_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %fte, ptr %prev.i, align 4
  %16 = ptrtoint ptr %fte to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %children, ptr %fte, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %fte, i32 0, i32 1
  %17 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev3.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %fte, ptr %14, align 4
  br label %cleanup

err_ida_remove:                                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @ida_free(ptr noundef %fte_allocator, i32 noundef %call.i) #14
  br label %cleanup

cleanup:                                          ; preds = %err_ida_remove, %if.end.i.i, %tree_add_node.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %err_ida_remove ], [ %call.i, %entry.cleanup_crit_edge ], [ 0, %tree_add_node.exit.cleanup_crit_edge ], [ 0, %if.end.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @add_rule_fg(ptr noundef %fg, ptr nocapture noundef readonly %spec, ptr nocapture noundef readonly %flow_act, ptr noundef readonly %dest, i32 noundef %dest_num, ptr noundef %fte) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %flow_context = getelementptr inbounds %struct.mlx5_flow_spec, ptr %spec, i32 0, i32 3
  %0 = ptrtoint ptr %flow_act to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flow_act, align 4
  %action1.i = getelementptr inbounds %struct.fs_fte, ptr %fte, i32 0, i32 6
  %2 = ptrtoint ptr %action1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %action1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %1)
  %cmp.i.i = icmp eq i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %3)
  %cmp1.i.i = icmp eq i32 %3, 8
  %or.cond.i.i = or i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %entry.if.end.i_crit_edge, label %check_conflicting_actions.exit.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

check_conflicting_actions.exit.i:                 ; preds = %entry
  %xor.i.i = xor i32 %3, %1
  %and.i.i = and i32 %xor.i.i, 3570
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.not.i, label %check_conflicting_actions.exit.i.if.end.i_crit_edge, label %do.end.i

check_conflicting_actions.exit.i.if.end.i_crit_edge: ; preds = %check_conflicting_actions.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

do.end.i:                                         ; preds = %check_conflicting_actions.exit.i
  %root1.i.i.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 4
  %4 = ptrtoint ptr %root1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root1.i.i.i, align 4
  %type.i.i.i = getelementptr inbounds %struct.fs_node, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.not.i.i.i = icmp eq i32 %7, 0
  br i1 %cmp.not.i.i.i, label %find_root.exit.i.i, label %find_root.exit.thread.i.i, !prof !259

find_root.exit.thread.i.i:                        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit.i

find_root.exit.i.i:                               ; preds = %do.end.i
  %tobool.not.i26.i = icmp eq ptr %5, null
  br i1 %tobool.not.i26.i, label %find_root.exit.i.i.get_dev.exit.i_crit_edge, label %if.then.i.i

find_root.exit.i.i.get_dev.exit.i_crit_edge:      ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit.i

if.then.i.i:                                      ; preds = %find_root.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %5, i32 0, i32 4
  %8 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev.i.i, align 4
  br label %get_dev.exit.i

get_dev.exit.i:                                   ; preds = %if.then.i.i, %find_root.exit.i.i.get_dev.exit.i_crit_edge, %find_root.exit.thread.i.i
  %retval.0.i27.i = phi ptr [ %9, %if.then.i.i ], [ null, %find_root.exit.i.i.get_dev.exit.i_crit_edge ], [ null, %find_root.exit.thread.i.i ]
  %10 = ptrtoint ptr %retval.0.i27.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %retval.0.i27.i, align 8
  %12 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i28.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i28.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 68
  %16 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pid.i, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %11, ptr noundef nonnull @.str.58, ptr noundef nonnull @.str.59, i32 noundef 1591, i32 noundef %17) #17
  br label %cleanup

if.end.i:                                         ; preds = %check_conflicting_actions.exit.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %18 = ptrtoint ptr %flow_context to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flow_context, align 4
  %and.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i.if.end_crit_edge, label %land.lhs.true.i

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.i:                                  ; preds = %if.end.i
  %flow_tag.i = getelementptr inbounds %struct.fs_fte, ptr %fte, i32 0, i32 5, i32 1
  %20 = ptrtoint ptr %flow_tag.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flow_tag.i, align 4
  %flow_tag6.i = getelementptr inbounds %struct.mlx5_flow_spec, ptr %spec, i32 0, i32 3, i32 1
  %22 = ptrtoint ptr %flow_tag6.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flow_tag6.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %23)
  %cmp.not.i = icmp eq i32 %21, %23
  br i1 %cmp.not.i, label %land.lhs.true.i.if.end_crit_edge, label %do.end9.i

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end9.i:                                        ; preds = %land.lhs.true.i
  %root1.i.i29.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 4
  %24 = ptrtoint ptr %root1.i.i29.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %root1.i.i29.i, align 4
  %type.i.i30.i = getelementptr inbounds %struct.fs_node, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %type.i.i30.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %type.i.i30.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp.not.i.i31.i = icmp eq i32 %27, 0
  br i1 %cmp.not.i.i31.i, label %find_root.exit.i35.i, label %find_root.exit.thread.i33.i, !prof !259

find_root.exit.thread.i33.i:                      ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i32.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_dev.exit39.i

find_root.exit.i35.i:                             ; preds = %do.end9.i
  %tobool.not.i34.i = icmp eq ptr %25, null
  br i1 %tobool.not.i34.i, label %find_root.exit.i35.i.get_dev.exit39.i_crit_edge, label %if.then.i37.i

find_root.exit.i35.i.get_dev.exit39.i_crit_edge:  ; preds = %find_root.exit.i35.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_dev.exit39.i

if.then.i37.i:                                    ; preds = %find_root.exit.i35.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i36.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %25, i32 0, i32 4
  %28 = ptrtoint ptr %dev.i36.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev.i36.i, align 4
  br label %get_dev.exit39.i

get_dev.exit39.i:                                 ; preds = %if.then.i37.i, %find_root.exit.i35.i.get_dev.exit39.i_crit_edge, %find_root.exit.thread.i33.i
  %retval.0.i38.i = phi ptr [ %29, %if.then.i37.i ], [ null, %find_root.exit.i35.i.get_dev.exit39.i_crit_edge ], [ null, %find_root.exit.thread.i33.i ]
  %30 = ptrtoint ptr %retval.0.i38.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %retval.0.i38.i, align 8
  %32 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i40.i = and i32 %32, -16384
  %33 = inttoptr i32 %and.i40.i to ptr
  %task14.i = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task14.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task14.i, align 8
  %pid15.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 68
  %36 = ptrtoint ptr %pid15.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %pid15.i, align 8
  %38 = ptrtoint ptr %flow_tag.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flow_tag.i, align 4
  %40 = ptrtoint ptr %flow_tag6.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flow_tag6.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %31, ptr noundef nonnull @.str.61, ptr noundef nonnull @.str.59, i32 noundef 1600, i32 noundef %37, i32 noundef %39, i32 noundef %41) #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.i.if.end_crit_edge, %if.end.i.if.end_crit_edge
  %42 = ptrtoint ptr %action1.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %action1.i, align 4
  %44 = ptrtoint ptr %flow_act to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %flow_act, align 4
  %or = or i32 %45, %43
  store i32 %or, ptr %action1.i, align 4
  %46 = load i32, ptr %flow_act, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %46)
  %cmp = icmp ne i32 %43, %46
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dest_num)
  %tobool.not.i.i = icmp eq i32 %dest_num, 0
  %spec.select.i.i = select i1 %tobool.not.i.i, i32 1, i32 %dest_num
  %47 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %spec.select.i.i, i32 4) #14
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %spec.select.i.i.i.i = tail call i32 @llvm.uadd.sat.i32(i32 %49, i32 4) #14
  %retval.0.i.i.i.i = select i1 %48, i32 -1, i32 %spec.select.i.i.i.i
  %call9.i.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %retval.0.i.i.i.i, i32 noundef 3520) #19
  %tobool.not.i.i.i = icmp eq ptr %call9.i.i.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end.if.then9_crit_edge, label %alloc_handle.exit.i.i

if.end.if.then9_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

alloc_handle.exit.i.i:                            ; preds = %if.end
  %50 = ptrtoint ptr %call9.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %spec.select.i.i, ptr %call9.i.i.i.i.i, align 128
  %tobool3.not.i.i = icmp eq ptr %dest, null
  %children.i.i.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 1
  %prev.i.i.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 1, i32 1
  %dests_size.i.i = getelementptr inbounds %struct.fs_fte, ptr %fte, i32 0, i32 3
  %smax.i.i = tail call i32 @llvm.smax.i32(i32 %dest_num, i32 1) #14
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %rule_found.i.i.do.body.i.i_crit_edge, %alloc_handle.exit.i.i
  %modify_mask.0.i = phi i32 [ 0, %alloc_handle.exit.i.i ], [ %modify_mask.1.i, %rule_found.i.i.do.body.i.i_crit_edge ]
  %new_rule.0.i = phi i8 [ 0, %alloc_handle.exit.i.i ], [ %new_rule.1.i, %rule_found.i.i.do.body.i.i_crit_edge ]
  %i.0.i.i = phi i32 [ 0, %alloc_handle.exit.i.i ], [ %inc39.i.i, %rule_found.i.i.do.body.i.i_crit_edge ]
  br i1 %tobool3.not.i.i, label %do.body.i.i.if.end9.i.i_crit_edge, label %if.then4.i.i

do.body.i.i.if.end9.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i.i

if.then4.i.i:                                     ; preds = %do.body.i.i
  %add.ptr.i.i = getelementptr %struct.mlx5_flow_destination, ptr %dest, i32 %i.0.i.i
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.then4.i.i
  %rule.0.in.i.i.i = phi ptr [ %children.i.i.i, %if.then4.i.i ], [ %rule.0.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %51 = ptrtoint ptr %rule.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %rule.0.i.i.i = load ptr, ptr %rule.0.in.i.i.i, align 4
  %cmp.not.i.i.i47 = icmp eq ptr %rule.0.i.i.i, %children.i.i.i
  br i1 %cmp.not.i.i.i47, label %for.cond.i.i.i.if.end9.i.i_crit_edge, label %for.body.i.i.i

for.cond.i.i.i.if.end9.i.i_crit_edge:             ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %dest_attr.i.i.i = getelementptr inbounds %struct.mlx5_flow_rule, ptr %rule.0.i.i.i, i32 0, i32 2
  %call.i.i45.i = tail call fastcc zeroext i1 @mlx5_flow_dests_cmp(ptr noundef %dest_attr.i.i.i, ptr noundef %add.ptr.i.i) #14
  br i1 %call.i.i45.i, label %find_flow_rule.exit.i.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i.i.i

find_flow_rule.exit.i.i:                          ; preds = %for.body.i.i.i
  %tobool6.not.i.i = icmp eq ptr %rule.0.i.i.i, null
  br i1 %tobool6.not.i.i, label %find_flow_rule.exit.i.i.if.end9.i.i_crit_edge, label %if.then7.i.i

find_flow_rule.exit.i.i.if.end9.i.i_crit_edge:    ; preds = %find_flow_rule.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i.i

if.then7.i.i:                                     ; preds = %find_flow_rule.exit.i.i
  %refcount.i.i = getelementptr inbounds %struct.fs_node, ptr %rule.0.i.i.i, i32 0, i32 6
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i.i, i32 1, i32 3, i32 1) #14
  %52 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i, ptr %refcount.i.i, i32 1, ptr elementtype(i32) %refcount.i.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %52, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then7.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !261

if.then7.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then7.i.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %53 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %53)
  %.not.i.i.i.i.i = icmp sgt i32 %53, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.rule_found.i.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.rule_found.i.i_crit_edge:       ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rule_found.i.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then7.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then7.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i.i, i32 noundef %.sink.i.i.i.i.i) #14
  br label %rule_found.i.i

if.end9.i.i:                                      ; preds = %find_flow_rule.exit.i.i.if.end9.i.i_crit_edge, %for.cond.i.i.i.if.end9.i.i_crit_edge, %do.body.i.i.if.end9.i.i_crit_edge
  %add.ptr10.i.i = getelementptr %struct.mlx5_flow_destination, ptr %dest, i32 %i.0.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %54 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i.i76.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %54, i32 noundef 3520, i32 noundef 176) #18
  %tobool.not.i77.i.i = icmp eq ptr %call7.i.i.i76.i.i, null
  br i1 %tobool.not.i77.i.i, label %free_rules.i.i, label %if.end.i78.i.i

if.end.i78.i.i:                                   ; preds = %if.end9.i.i
  %next_ft.i.i.i = getelementptr inbounds %struct.mlx5_flow_rule, ptr %call7.i.i.i76.i.i, i32 0, i32 3
  %55 = ptrtoint ptr %next_ft.i.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile ptr %next_ft.i.i.i, ptr %next_ft.i.i.i, align 4
  %prev.i.i.i.i = getelementptr inbounds %struct.mlx5_flow_rule, ptr %call7.i.i.i76.i.i, i32 0, i32 3, i32 1
  %56 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %next_ft.i.i.i, ptr %prev.i.i.i.i, align 8
  %type.i.i.i48 = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i76.i.i, i32 0, i32 2
  %57 = ptrtoint ptr %type.i.i.i48 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 6, ptr %type.i.i.i48, align 8
  %tobool1.not.i.i.i = icmp eq ptr %add.ptr10.i.i, null
  br i1 %tobool1.not.i.i.i, label %if.end.i78.i.i.if.end14.i.i_crit_edge, label %if.then2.i.i.i

if.end.i78.i.i.if.end14.i.i_crit_edge:            ; preds = %if.end.i78.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i.i

if.then2.i.i.i:                                   ; preds = %if.end.i78.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %dest_attr.i79.i.i = getelementptr inbounds %struct.mlx5_flow_rule, ptr %call7.i.i.i76.i.i, i32 0, i32 2
  %58 = call ptr @memcpy(ptr %dest_attr.i79.i.i, ptr %add.ptr10.i.i, i32 16)
  br label %if.end14.i.i

if.end14.i.i:                                     ; preds = %if.then2.i.i.i, %if.end.i78.i.i.if.end14.i.i_crit_edge
  %refcount.i.i.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i76.i.i, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i.i, i32 noundef 4) #14
  %59 = ptrtoint ptr %refcount.i.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile i32 1, ptr %refcount.i.i.i, align 4
  %60 = ptrtoint ptr %call7.i.i.i76.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile ptr %call7.i.i.i76.i.i, ptr %call7.i.i.i76.i.i, align 8
  %prev.i.i80.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i76.i.i, i32 0, i32 1
  %61 = ptrtoint ptr %prev.i.i80.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %call7.i.i.i76.i.i, ptr %prev.i.i80.i.i, align 4
  %children.i81.i.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i76.i.i, i32 0, i32 1
  %62 = ptrtoint ptr %children.i81.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store volatile ptr %children.i81.i.i, ptr %children.i81.i.i, align 8
  %prev.i9.i.i.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i76.i.i, i32 0, i32 1, i32 1
  %63 = ptrtoint ptr %prev.i9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %children.i81.i.i, ptr %prev.i9.i.i.i, align 4
  %lock.i.i.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i76.i.i, i32 0, i32 5
  tail call void @__init_rwsem(ptr noundef %lock.i.i.i, ptr noundef nonnull @.str.28, ptr noundef nonnull @tree_init_node.__key) #14
  %del_hw_func1.i.i.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i76.i.i, i32 0, i32 8
  %64 = ptrtoint ptr %del_hw_func1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr null, ptr %del_hw_func1.i.i.i, align 4
  %del_sw_func2.i.i.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i76.i.i, i32 0, i32 9
  %65 = ptrtoint ptr %del_sw_func2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr @del_sw_hw_rule, ptr %del_sw_func2.i.i.i, align 8
  %active.i.i.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i.i76.i.i, i32 0, i32 7
  %66 = ptrtoint ptr %active.i.i.i to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 0, ptr %active.i.i.i, align 8
  br i1 %tobool3.not.i.i, label %rule_found.critedge.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %if.end14.i.i
  %67 = ptrtoint ptr %add.ptr10.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %add.ptr10.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %68)
  %cmp.not.i.i = icmp eq i32 %68, 1
  br i1 %cmp.not.i.i, label %if.then27.critedge74.i.i, label %if.then18.i.i

if.then18.i.i:                                    ; preds = %land.lhs.true.i.i
  %69 = ptrtoint ptr %children.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %children.i.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i76.i.i, ptr noundef %children.i.i.i, ptr noundef %70) #14
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.then18.i.i.if.then27.i.i_crit_edge

if.then18.i.i.if.then27.i.i_crit_edge:            ; preds = %if.then18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then27.i.i

if.end.i.i.i.i:                                   ; preds = %if.then18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %70, i32 0, i32 1
  br label %if.then27.sink.split.i.i

if.then27.critedge74.i.i:                         ; preds = %land.lhs.true.i.i
  %71 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %prev.i.i.i, align 4
  %call.i.i82.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i76.i.i, ptr noundef %72, ptr noundef %children.i.i.i) #14
  br i1 %call.i.i82.i.i, label %if.then27.critedge74.i.i.if.then27.sink.split.i.i_crit_edge, label %if.then27.critedge74.i.i.if.then27.i.i_crit_edge

if.then27.critedge74.i.i.if.then27.i.i_crit_edge: ; preds = %if.then27.critedge74.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then27.i.i

if.then27.critedge74.i.i.if.then27.sink.split.i.i_crit_edge: ; preds = %if.then27.critedge74.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then27.sink.split.i.i

if.then27.sink.split.i.i:                         ; preds = %if.then27.critedge74.i.i.if.then27.sink.split.i.i_crit_edge, %if.end.i.i.i.i
  %prev.i.sink.i.i = phi ptr [ %prev1.i.i.i.i, %if.end.i.i.i.i ], [ %prev.i.i.i, %if.then27.critedge74.i.i.if.then27.sink.split.i.i_crit_edge ]
  %children.i.sink.i.i = phi ptr [ %70, %if.end.i.i.i.i ], [ %children.i.i.i, %if.then27.critedge74.i.i.if.then27.sink.split.i.i_crit_edge ]
  %.sink100.i.i = phi ptr [ %children.i.i.i, %if.end.i.i.i.i ], [ %72, %if.then27.critedge74.i.i.if.then27.sink.split.i.i_crit_edge ]
  %73 = ptrtoint ptr %prev.i.sink.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %call7.i.i.i76.i.i, ptr %prev.i.sink.i.i, align 4
  %74 = ptrtoint ptr %call7.i.i.i76.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %children.i.sink.i.i, ptr %call7.i.i.i76.i.i, align 8
  %75 = ptrtoint ptr %prev.i.i80.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %.sink100.i.i, ptr %prev.i.i80.i.i, align 4
  %76 = ptrtoint ptr %.sink100.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile ptr %call7.i.i.i76.i.i, ptr %.sink100.i.i, align 4
  br label %if.then27.i.i

if.then27.i.i:                                    ; preds = %if.then27.sink.split.i.i, %if.then27.critedge74.i.i.if.then27.i.i_crit_edge, %if.then18.i.i.if.then27.i.i_crit_edge
  %77 = ptrtoint ptr %dests_size.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %dests_size.i.i, align 4
  %inc.i.i = add i32 %78, 1
  store i32 %inc.i.i, ptr %dests_size.i.i, align 4
  %79 = ptrtoint ptr %add.ptr10.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %add.ptr10.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %80)
  %cmp30.i.i = icmp eq i32 %80, 256
  %..i.i = select i1 %cmp30.i.i, i32 8, i32 4
  %or.i.i = or i32 %..i.i, %modify_mask.0.i
  br label %rule_found.i.i

rule_found.critedge.i.i:                          ; preds = %if.end14.i.i
  %81 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %prev.i.i.i, align 4
  %call.i.i86.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i76.i.i, ptr noundef %82, ptr noundef %children.i.i.i) #14
  br i1 %call.i.i86.i.i, label %if.end.i.i88.i.i, label %rule_found.critedge.i.i.rule_found.i.i_crit_edge

rule_found.critedge.i.i.rule_found.i.i_crit_edge: ; preds = %rule_found.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rule_found.i.i

if.end.i.i88.i.i:                                 ; preds = %rule_found.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %83 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %call7.i.i.i76.i.i, ptr %prev.i.i.i, align 4
  %84 = ptrtoint ptr %call7.i.i.i76.i.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %children.i.i.i, ptr %call7.i.i.i76.i.i, align 8
  %85 = ptrtoint ptr %prev.i.i80.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %82, ptr %prev.i.i80.i.i, align 4
  %86 = ptrtoint ptr %82 to i32
  call void @__asan_store4_noabort(i32 %86)
  store volatile ptr %call7.i.i.i76.i.i, ptr %82, align 4
  br label %rule_found.i.i

rule_found.i.i:                                   ; preds = %if.end.i.i88.i.i, %rule_found.critedge.i.i.rule_found.i.i_crit_edge, %if.then27.i.i, %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.rule_found.i.i_crit_edge
  %modify_mask.1.i = phi i32 [ %modify_mask.0.i, %if.end.i.i88.i.i ], [ %modify_mask.0.i, %rule_found.critedge.i.i.rule_found.i.i_crit_edge ], [ %or.i.i, %if.then27.i.i ], [ %modify_mask.0.i, %if.end15.sink.split.i.i.i.i.i ], [ %modify_mask.0.i, %if.else.i.i.i.i.i.rule_found.i.i_crit_edge ]
  %new_rule.1.i = phi i8 [ 1, %if.end.i.i88.i.i ], [ 1, %rule_found.critedge.i.i.rule_found.i.i_crit_edge ], [ 1, %if.then27.i.i ], [ %new_rule.0.i, %if.end15.sink.split.i.i.i.i.i ], [ %new_rule.0.i, %if.else.i.i.i.i.i.rule_found.i.i_crit_edge ]
  %rule.0.i.i = phi ptr [ %call7.i.i.i76.i.i, %if.end.i.i88.i.i ], [ %call7.i.i.i76.i.i, %rule_found.critedge.i.i.rule_found.i.i_crit_edge ], [ %call7.i.i.i76.i.i, %if.then27.i.i ], [ %rule.0.i.i.i, %if.end15.sink.split.i.i.i.i.i ], [ %rule.0.i.i.i, %if.else.i.i.i.i.i.rule_found.i.i_crit_edge ]
  %arrayidx38.i.i = getelementptr %struct.mlx5_flow_handle, ptr %call9.i.i.i.i.i, i32 0, i32 1, i32 %i.0.i.i
  %87 = ptrtoint ptr %arrayidx38.i.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %rule.0.i.i, ptr %arrayidx38.i.i, align 4
  %inc39.i.i = add nuw nsw i32 %i.0.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc39.i.i, %smax.i.i
  br i1 %exitcond.not.i.i, label %create_flow_handle.exit.i, label %rule_found.i.i.do.body.i.i_crit_edge

rule_found.i.i.do.body.i.i_crit_edge:             ; preds = %rule_found.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i.i

free_rules.i.i:                                   ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @destroy_flow_handle(ptr noundef %fte, ptr noundef nonnull %call9.i.i.i.i.i, i32 noundef %i.0.i.i) #14
  br label %if.then9

create_flow_handle.exit.i:                        ; preds = %rule_found.i.i
  %cmp.i.i49 = icmp ugt ptr %call9.i.i.i.i.i, inttoptr (i32 -4096 to ptr)
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %new_rule.1.i)
  %tobool.not.i50 = icmp eq i8 %new_rule.1.i, 0
  %or.cond.i = select i1 %cmp.i.i49, i1 true, i1 %tobool.not.i50
  br i1 %or.cond.i, label %create_flow_handle.exit.i.add_rule_fte.exit_crit_edge, label %if.end.i51

create_flow_handle.exit.i.add_rule_fte.exit_crit_edge: ; preds = %create_flow_handle.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %add_rule_fte.exit

if.end.i51:                                       ; preds = %create_flow_handle.exit.i
  %or.i = zext i1 %cmp to i32
  %spec.select.i = or i32 %modify_mask.1.i, %or.i
  %parent.i = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 3
  %88 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %parent.i, align 4
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 4
  %90 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %91, i32 0, i32 2
  %92 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %93)
  %cmp.not.i46.i = icmp eq i32 %93, 0
  br i1 %cmp.not.i46.i, label %if.end.i51.find_root.exit.i_crit_edge, label %do.end.i.i, !prof !259

if.end.i51.find_root.exit.i_crit_edge:            ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_root.exit.i

do.end.i.i:                                       ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %find_root.exit.i

find_root.exit.i:                                 ; preds = %do.end.i.i, %if.end.i51.find_root.exit.i_crit_edge
  %retval.0.i47.i = phi ptr [ null, %do.end.i.i ], [ %91, %if.end.i51.find_root.exit.i_crit_edge ]
  %status.i = getelementptr inbounds %struct.fs_fte, ptr %fte, i32 0, i32 7
  %94 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %status.i, align 4
  %and.i52 = and i32 %95, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i52)
  %tobool7.not.i = icmp eq i32 %and.i52, 0
  %cmds.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %retval.0.i47.i, i32 0, i32 8
  %96 = ptrtoint ptr %cmds.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %cmds.i, align 4
  br i1 %tobool7.not.i, label %if.then8.i, label %if.else.i

if.then8.i:                                       ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %create_fte.i = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %97, i32 0, i32 5
  %98 = ptrtoint ptr %create_fte.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %create_fte.i, align 4
  %call9.i = tail call i32 %99(ptr noundef %retval.0.i47.i, ptr noundef %89, ptr noundef %fg, ptr noundef %fte) #14
  br label %if.end12.i

if.else.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %update_fte.i = getelementptr inbounds %struct.mlx5_flow_cmds, ptr %97, i32 0, i32 6
  %100 = ptrtoint ptr %update_fte.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %update_fte.i, align 4
  %call11.i = tail call i32 %101(ptr noundef %retval.0.i47.i, ptr noundef %89, ptr noundef %fg, i32 noundef %spec.select.i, ptr noundef %fte) #14
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %if.then8.i
  %err.0.i = phi i32 [ %call11.i, %if.else.i ], [ %call9.i, %if.then8.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0.i)
  %tobool13.not.i = icmp eq i32 %err.0.i, 0
  br i1 %tobool13.not.i, label %if.end15.i, label %free_handle.i

if.end15.i:                                       ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  %active.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 7
  %102 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %102)
  store i8 1, ptr %active.i, align 4
  %103 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %status.i, align 4
  %or18.i = or i32 %104, 1
  store i32 %or18.i, ptr %status.i, align 4
  %version.i = getelementptr inbounds %struct.fs_node, ptr %fg, i32 0, i32 10
  %call.i.i.i53 = tail call zeroext i1 @__kasan_check_write(ptr noundef %version.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %version.i, i32 1, i32 3, i32 1) #14
  %105 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %version.i, ptr %version.i, i32 1, ptr elementtype(i32) %version.i) #14, !srcloc !265
  br label %add_rule_fte.exit

free_handle.i:                                    ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  %106 = ptrtoint ptr %call9.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %call9.i.i.i.i.i, align 128
  tail call fastcc void @destroy_flow_handle(ptr noundef %fte, ptr noundef nonnull %call9.i.i.i.i.i, i32 noundef %107) #14
  %108 = inttoptr i32 %err.0.i to ptr
  br label %add_rule_fte.exit

add_rule_fte.exit:                                ; preds = %free_handle.i, %if.end15.i, %create_flow_handle.exit.i.add_rule_fte.exit_crit_edge
  %retval.0.i54 = phi ptr [ %108, %free_handle.i ], [ %call9.i.i.i.i.i, %create_flow_handle.exit.i.add_rule_fte.exit_crit_edge ], [ %call9.i.i.i.i.i, %if.end15.i ]
  %cmp.i = icmp ugt ptr %retval.0.i54, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %add_rule_fte.exit.if.then9_crit_edge, label %if.end12

add_rule_fte.exit.if.then9_crit_edge:             ; preds = %add_rule_fte.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.then9:                                         ; preds = %add_rule_fte.exit.if.then9_crit_edge, %free_rules.i.i, %if.end.if.then9_crit_edge
  %retval.0.i5462 = phi ptr [ %retval.0.i54, %add_rule_fte.exit.if.then9_crit_edge ], [ inttoptr (i32 -12 to ptr), %free_rules.i.i ], [ inttoptr (i32 -12 to ptr), %if.end.if.then9_crit_edge ]
  %109 = ptrtoint ptr %action1.i to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %43, ptr %action1.i, align 4
  br label %cleanup

if.end12:                                         ; preds = %add_rule_fte.exit
  tail call fastcc void @trace_mlx5_fs_set_fte(ptr noundef %fte)
  %110 = ptrtoint ptr %retval.0.i54 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %retval.0.i54, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %111)
  %cmp1366 = icmp sgt i32 %111, 0
  br i1 %cmp1366, label %for.body.lr.ph, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end12
  %tobool.not.i56 = icmp eq ptr %fte, null
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 6
  %root4.i = getelementptr inbounds %struct.fs_node, ptr %fte, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.067 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.mlx5_flow_handle, ptr %retval.0.i54, i32 0, i32 1, i32 %i.067
  %112 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %arrayidx, align 4
  %refcount = getelementptr inbounds %struct.fs_node, ptr %113, i32 0, i32 6
  %call.i.i.i55 = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcount, i32 noundef 4) #14
  %114 = ptrtoint ptr %refcount to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %115)
  %cmp15 = icmp eq i32 %115, 1
  br i1 %cmp15, label %if.then16, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then16:                                        ; preds = %for.body
  %116 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %arrayidx, align 4
  br i1 %tobool.not.i56, label %if.then3.critedge.i, label %if.then.i

if.then.i:                                        ; preds = %if.then16
  %call.i.i.i.i.i.i57 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %118 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %118, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %119 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %119)
  %.not.i.i.i.i = icmp sgt i32 %119, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #14
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %parent1.c.i = getelementptr inbounds %struct.fs_node, ptr %117, i32 0, i32 3
  %120 = ptrtoint ptr %parent1.c.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr %fte, ptr %parent1.c.i, align 4
  %121 = ptrtoint ptr %root4.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %root4.i, align 4
  br label %tree_add_node.exit

if.then3.critedge.i:                              ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #16
  %parent1.c14.i = getelementptr inbounds %struct.fs_node, ptr %117, i32 0, i32 3
  %123 = ptrtoint ptr %parent1.c14.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr null, ptr %parent1.c14.i, align 4
  br label %tree_add_node.exit

tree_add_node.exit:                               ; preds = %if.then3.critedge.i, %refcount_inc.exit.i
  %.sink.i = phi ptr [ %122, %refcount_inc.exit.i ], [ %117, %if.then3.critedge.i ]
  %root5.i = getelementptr inbounds %struct.fs_node, ptr %117, i32 0, i32 4
  %124 = ptrtoint ptr %root5.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store ptr %.sink.i, ptr %root5.i, align 4
  %125 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @trace_mlx5_fs_add_rule(ptr noundef %126)
  br label %for.inc

for.inc:                                          ; preds = %tree_add_node.exit, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.067, 1
  %127 = ptrtoint ptr %retval.0.i54 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %retval.0.i54, align 4
  %cmp13 = icmp slt i32 %inc, %128
  br i1 %cmp13, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.then9, %get_dev.exit39.i, %get_dev.exit.i
  %retval.0 = phi ptr [ %retval.0.i5462, %if.then9 ], [ inttoptr (i32 -17 to ptr), %get_dev.exit39.i ], [ inttoptr (i32 -17 to ptr), %get_dev.exit.i ], [ %retval.0.i54, %if.end12.cleanup_crit_edge ], [ %retval.0.i54, %for.inc.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tree_get_node(ptr noundef %node) unnamed_addr #0 align 64 {
entry:
  %old.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %refcount = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i) #14
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcount, i32 noundef 4) #14
  %0 = ptrtoint ptr %refcount to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %refcount, align 4
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, %entry
  %2 = phi i32 [ %1, %entry ], [ %asmresult3.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge ]
  %3 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %old.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i.i.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i.i.i, label %do.body.i.i.i.if.end4.i.i.i_crit_edge, label %do.cond.i.i.i

do.body.i.i.i.if.end4.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i.i.i

do.cond.i.i.i:                                    ; preds = %do.body.i.i.i
  %add.i.i.i = add i32 %2, 1
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #14
  %call.i3.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i, i32 noundef 4) #14
  %4 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %old.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #14
  br label %do.body.i.i.i.i.i.i

do.body.i.i.i.i.i.i:                              ; preds = %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i
  %6 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 %5, i32 %add.i.i.i, ptr elementtype(i32) %refcount) #14, !srcloc !298
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %6, 0
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i, label %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i:       ; preds = %do.body.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i = extractvalue { i32, i32 } %6, 1
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i, %5
  br i1 %cmp.not.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, !prof !259

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, %do.body.i.i.i.if.end4.i.i.i_crit_edge
  %7 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %old.i.i.i, align 4
  %add5.i.i.i = add i32 %8, 1
  %9 = or i32 %add5.i.i.i, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %.not.i.i.i = icmp sgt i32 %9, -1
  br i1 %.not.i.i.i, label %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge, label %if.then10.i.i.i, !prof !259

if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge: ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc_not_zero.exit

if.then10.i.i.i:                                  ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 0) #14
  br label %refcount_inc_not_zero.exit

refcount_inc_not_zero.exit:                       ; preds = %if.then10.i.i.i, %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge
  %10 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %old.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool12.i.i.i = icmp ne i32 %11, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i) #14
  %conv = zext i1 %tobool12.i.i.i to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__rhashtable_lookup(ptr noundef %ht, ptr noundef %key, [7 x i32] %params.coerce) unnamed_addr #5 align 64 {
entry:
  %arg = alloca %struct.rhashtable_compare_arg, align 4
  call void @__sanitizer_cov_trace_pc() #16
  %params.coerce.fca.6.extract = extractvalue [7 x i32] %params.coerce, 6
  %0 = inttoptr i32 %params.coerce.fca.6.extract to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg) #14
  %1 = getelementptr inbounds %struct.rhashtable_compare_arg, ptr %arg, i32 0, i32 1
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %ht, ptr %arg, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %key, ptr %1, align 4
  %4 = ptrtoint ptr %ht to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %ht, align 4
  %call = tail call i32 @lockdep_rht_mutex_is_held(ptr noundef %ht) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.do.end12_crit_edge

entry.do.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end12

lor.lhs.false:                                    ; preds = %entry
  %call5 = tail call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true, label %lor.lhs.false.do.end12_crit_edge

lor.lhs.false.do.end12_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end12

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call7 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true.do.end12_crit_edge, label %land.lhs.true9

land.lhs.true.do.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end12

land.lhs.true9:                                   ; preds = %land.lhs.true
  %.b92 = load i1, ptr @__rhashtable_lookup.__warned, align 1
  br i1 %.b92, label %land.lhs.true9.do.end12_crit_edge, label %if.then

land.lhs.true9.do.end12_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end12

if.then:                                          ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_lookup.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 594, ptr noundef nonnull @.str.32) #14
  br label %do.end12

do.end12:                                         ; preds = %if.then, %land.lhs.true9.do.end12_crit_edge, %land.lhs.true.do.end12_crit_edge, %lor.lhs.false.do.end12_crit_edge, %entry.do.end12_crit_edge
  %hashfn.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 7
  %key_len1.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %params.coerce.fca.6.extract)
  %tobool19.not = icmp eq i32 %params.coerce.fca.6.extract, 0
  %head_offset.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 3
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %do.end60.if.then.i.i_crit_edge, %do.end12
  %tbl.0 = phi ptr [ %5, %do.end12 ], [ %36, %do.end60.if.then.i.i_crit_edge ]
  %hash_rnd.i = getelementptr inbounds %struct.bucket_table, ptr %tbl.0, i32 0, i32 2
  %6 = ptrtoint ptr %hash_rnd.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hash_rnd.i, align 8
  %8 = ptrtoint ptr %hashfn.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hashfn.i.i, align 4
  %10 = ptrtoint ptr %key_len1.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %key_len1.i.i, align 4
  %call.i.i = call i32 %9(ptr noundef %key, i32 noundef %11, i32 noundef %7) #14
  %12 = ptrtoint ptr %tbl.0 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tbl.0, align 128
  %sub.i.i = add i32 %13, -1
  %and.i3.i = and i32 %sub.i.i, %call.i.i
  %nest.i = getelementptr inbounds %struct.bucket_table, ptr %tbl.0, i32 0, i32 1
  %14 = ptrtoint ptr %nest.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nest.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i = icmp eq i32 %15, 0
  br i1 %tobool.not.i, label %cond.false.i, label %cond.true.i, !prof !259

cond.true.i:                                      ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = call ptr @rht_bucket_nested(ptr noundef %tbl.0, i32 noundef %and.i3.i) #14
  br label %rht_bucket.exit

cond.false.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.bucket_table, ptr %tbl.0, i32 0, i32 8, i32 %and.i3.i
  br label %rht_bucket.exit

rht_bucket.exit:                                  ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi ptr [ %call.i, %cond.true.i ], [ %arrayidx.i, %cond.false.i ]
  %16 = ptrtoint ptr %cond.i to i32
  %or.i.i = or i32 %16, 1
  %17 = inttoptr i32 %or.i.i to ptr
  br label %do.body16

do.body16:                                        ; preds = %do.cond34.do.body16_crit_edge, %rht_bucket.exit
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !299
  %18 = ptrtoint ptr %cond.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %cond.i, align 4
  %call.i93 = call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i93)
  %tobool.not.i94 = icmp eq i32 %call.i93, 0
  br i1 %tobool.not.i94, label %land.lhs.true.i, label %do.body16.rht_ptr_rcu.exit_crit_edge

do.body16.rht_ptr_rcu.exit_crit_edge:             ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr_rcu.exit

land.lhs.true.i:                                  ; preds = %do.body16
  %call2.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.rht_ptr_rcu.exit_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.rht_ptr_rcu.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr_rcu.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b11.i = load i1, ptr @rht_ptr_rcu.__warned, align 1
  br i1 %.b11.i, label %land.lhs.true4.i.rht_ptr_rcu.exit_crit_edge, label %if.then.i

land.lhs.true4.i.rht_ptr_rcu.exit_crit_edge:      ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rht_ptr_rcu.exit

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rht_ptr_rcu.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 369, ptr noundef nonnull @.str.32) #14
  br label %rht_ptr_rcu.exit

rht_ptr_rcu.exit:                                 ; preds = %if.then.i, %land.lhs.true4.i.rht_ptr_rcu.exit_crit_edge, %land.lhs.true.i.rht_ptr_rcu.exit_crit_edge, %do.body16.rht_ptr_rcu.exit_crit_edge
  %20 = ptrtoint ptr %19 to i32
  %and.i.i95 = and i32 %20, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i95)
  %tobool.not.i.i96 = icmp eq i32 %and.i.i95, 0
  %cond.i.i = select i1 %tobool.not.i.i96, i32 %or.i.i, i32 %and.i.i95
  %21 = inttoptr i32 %cond.i.i to ptr
  %and.i106 = and i32 %cond.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i106)
  %tobool.i.not107 = icmp eq i32 %and.i106, 0
  br i1 %tobool.i.not107, label %rht_ptr_rcu.exit.for.body_crit_edge, label %rht_ptr_rcu.exit.do.cond34_crit_edge

rht_ptr_rcu.exit.do.cond34_crit_edge:             ; preds = %rht_ptr_rcu.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.cond34

rht_ptr_rcu.exit.for.body_crit_edge:              ; preds = %rht_ptr_rcu.exit
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %rht_ptr_rcu.exit.for.body_crit_edge
  %he.0108 = phi ptr [ %33, %for.inc.for.body_crit_edge ], [ %21, %rht_ptr_rcu.exit.for.body_crit_edge ]
  %22 = ptrtoint ptr %head_offset.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %head_offset.i, align 2
  %conv.i98 = zext i16 %23 to i32
  %idx.neg.i99 = sub nsw i32 0, %conv.i98
  %add.ptr.i100 = getelementptr i8, ptr %he.0108, i32 %idx.neg.i99
  br i1 %tobool19.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %for.body
  %call22 = call i32 %0(ptr noundef nonnull %arg, ptr noundef %add.ptr.i100) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %cond.true.cleanup_crit_edge, label %cond.true.for.inc_crit_edge

cond.true.for.inc_crit_edge:                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

cond.true.cleanup_crit_edge:                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cond.false:                                       ; preds = %for.body
  %24 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arg, align 4
  %key_offset.i = getelementptr inbounds %struct.rhashtable, ptr %25, i32 0, i32 3, i32 2
  %26 = ptrtoint ptr %key_offset.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %key_offset.i, align 4
  %conv.i101 = zext i16 %27 to i32
  %add.ptr.i102 = getelementptr i8, ptr %add.ptr.i100, i32 %conv.i101
  %28 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %1, align 4
  %key_len.i = getelementptr inbounds %struct.rhashtable, ptr %25, i32 0, i32 3, i32 1
  %30 = ptrtoint ptr %key_len.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %key_len.i, align 2
  %conv3.i = zext i16 %31 to i32
  %bcmp = call i32 @bcmp(ptr %add.ptr.i102, ptr %29, i32 %conv3.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool26.not = icmp eq i32 %bcmp, 0
  br i1 %tobool26.not, label %cond.false.cleanup_crit_edge, label %cond.false.for.inc_crit_edge

cond.false.for.inc_crit_edge:                     ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

cond.false.cleanup_crit_edge:                     ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc:                                          ; preds = %cond.false.for.inc_crit_edge, %cond.true.for.inc_crit_edge
  %32 = ptrtoint ptr %he.0108 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %he.0108, align 4
  %34 = ptrtoint ptr %33 to i32
  %and.i = and i32 %34, 1
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %for.inc.for.body_crit_edge, label %for.inc.do.cond34_crit_edge

for.inc.do.cond34_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.cond34

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

do.cond34:                                        ; preds = %for.inc.do.cond34_crit_edge, %rht_ptr_rcu.exit.do.cond34_crit_edge
  %he.0.lcssa = phi ptr [ %21, %rht_ptr_rcu.exit.do.cond34_crit_edge ], [ %33, %for.inc.do.cond34_crit_edge ]
  %cmp.not = icmp eq ptr %he.0.lcssa, %17
  br i1 %cmp.not, label %do.end39, label %do.cond34.do.body16_crit_edge

do.cond34.do.body16_crit_edge:                    ; preds = %do.cond34
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body16

do.end39:                                         ; preds = %do.cond34
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !300
  %future_tbl = getelementptr inbounds %struct.bucket_table, ptr %tbl.0, i32 0, i32 5
  %35 = ptrtoint ptr %future_tbl to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %future_tbl, align 4
  %call47 = call i32 @lockdep_rht_mutex_is_held(ptr noundef %ht) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %lor.lhs.false49, label %do.end39.do.end60_crit_edge

do.end39.do.end60_crit_edge:                      ; preds = %do.end39
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end60

lor.lhs.false49:                                  ; preds = %do.end39
  %call50 = call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %land.lhs.true52, label %lor.lhs.false49.do.end60_crit_edge

lor.lhs.false49.do.end60_crit_edge:               ; preds = %lor.lhs.false49
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end60

land.lhs.true52:                                  ; preds = %lor.lhs.false49
  %call53 = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %land.lhs.true52.do.end60_crit_edge, label %land.lhs.true55

land.lhs.true52.do.end60_crit_edge:               ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end60

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %.b9091 = load i1, ptr @__rhashtable_lookup.__warned.57, align 1
  br i1 %.b9091, label %land.lhs.true55.do.end60_crit_edge, label %if.then57

land.lhs.true55.do.end60_crit_edge:               ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end60

if.then57:                                        ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @__rhashtable_lookup.__warned.57, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 614, ptr noundef nonnull @.str.32) #14
  br label %do.end60

do.end60:                                         ; preds = %if.then57, %land.lhs.true55.do.end60_crit_edge, %land.lhs.true52.do.end60_crit_edge, %lor.lhs.false49.do.end60_crit_edge, %do.end39.do.end60_crit_edge
  %tobool62.not = icmp eq ptr %36, null
  br i1 %tobool62.not, label %do.end60.cleanup_crit_edge, label %do.end60.if.then.i.i_crit_edge, !prof !259

do.end60.if.then.i.i_crit_edge:                   ; preds = %do.end60
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

do.end60.cleanup_crit_edge:                       ; preds = %do.end60
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %do.end60.cleanup_crit_edge, %cond.false.cleanup_crit_edge, %cond.true.cleanup_crit_edge
  %retval.0 = phi ptr [ %he.0108, %cond.false.cleanup_crit_edge ], [ %he.0108, %cond.true.cleanup_crit_edge ], [ null, %do.end60.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg) #14
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rht_bucket_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_sw_fte(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %root1.i.i = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 4
  %0 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1.i.i, align 4
  %type.i.i = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not.i.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i.i, label %find_root.exit.i, label %find_root.exit.thread.i, !prof !259

find_root.exit.thread.i:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 455, i32 noundef 9, ptr noundef null) #14
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #17
  br label %get_steering.exit

find_root.exit.i:                                 ; preds = %entry
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %find_root.exit.i.get_steering.exit_crit_edge, label %if.then.i

find_root.exit.i.get_steering.exit_crit_edge:     ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_steering.exit

if.then.i:                                        ; preds = %find_root.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev.i, align 4
  %steering.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %5, i32 0, i32 17, i32 26
  %6 = ptrtoint ptr %steering.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %steering.i, align 4
  br label %get_steering.exit

get_steering.exit:                                ; preds = %if.then.i, %find_root.exit.i.get_steering.exit_crit_edge, %find_root.exit.thread.i
  %retval.0.i = phi ptr [ %7, %if.then.i ], [ null, %find_root.exit.i.get_steering.exit_crit_edge ], [ null, %find_root.exit.thread.i ]
  %parent = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 3
  %8 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent, align 4
  %ftes_hash = getelementptr inbounds %struct.mlx5_flow_group, ptr %9, i32 0, i32 7
  %hash = getelementptr inbounds %struct.fs_fte, ptr %node, i32 0, i32 9
  %call.i = tail call fastcc i32 @__rhashtable_remove_fast(ptr noundef %ftes_hash, ptr noundef %hash, [7 x i32] [i32 448, i32 10224284, i32 0, i32 65792, i32 0, i32 0, i32 0], i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %get_steering.exit.if.end_crit_edge, label %do.end, !prof !259

get_steering.exit.if.end_crit_edge:               ; preds = %get_steering.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %get_steering.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 625, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %get_steering.exit.if.end_crit_edge
  %fte_allocator = getelementptr inbounds %struct.mlx5_flow_group, ptr %9, i32 0, i32 5
  %index = getelementptr inbounds %struct.fs_fte, ptr %node, i32 0, i32 4
  %10 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %index, align 4
  %start_index = getelementptr inbounds %struct.mlx5_flow_group, ptr %9, i32 0, i32 3
  %12 = ptrtoint ptr %start_index to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %start_index, align 4
  %sub = sub i32 %11, %13
  tail call void @ida_free(ptr noundef %fte_allocator, i32 noundef %sub) #14
  %ftes_cache = getelementptr inbounds %struct.mlx5_flow_steering, ptr %retval.0.i, i32 0, i32 3
  %14 = ptrtoint ptr %ftes_cache to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ftes_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %15, ptr noundef %node) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ida_alloc_range(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mlx5_fs_set_fte(ptr noundef %fte) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_set_fte, i32 0, i32 1), ptr blockaddress(@trace_mlx5_fs_set_fte, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !267

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !259

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !301
  %call42 = tail call i32 @__traceiter_mlx5_fs_set_fte(ptr noundef null, ptr noundef %fte, i32 noundef 0) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !302
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i2 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i2 to ptr
  %preempt_count.i.i3 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i3, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i5 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !259

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %20, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %22 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i12
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i13.not = icmp eq i32 %25, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_set_fte, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_set_fte, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_mlx5_fs_set_fte.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_mlx5_fs_set_fte.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 255, ptr noundef nonnull @.str.32) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !271
  %31 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i15 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mlx5_fs_add_rule(ptr noundef %rule) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_rule, i32 0, i32 1), ptr blockaddress(@trace_mlx5_fs_add_rule, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !267

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !259

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !303
  %call42 = tail call i32 @__traceiter_mlx5_fs_add_rule(ptr noundef null, ptr noundef %rule) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !304
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !259

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_rule, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_add_rule, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mlx5_fs_add_rule.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_mlx5_fs_add_rule.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 301, ptr noundef nonnull @.str.32) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !271
  %31 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @destroy_flow_handle(ptr nocapture noundef %fte, ptr noundef %handle, i32 noundef %i) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dec2 = add i32 %i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %dec2)
  %cmp3 = icmp sgt i32 %dec2, -1
  br i1 %cmp3, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %dests_size = getelementptr inbounds %struct.fs_fte, ptr %fte, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %dec4 = phi i32 [ %dec2, %for.body.lr.ph ], [ %dec, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.mlx5_flow_handle, ptr %handle, i32 0, i32 1, i32 %dec4
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %refcount = getelementptr inbounds %struct.fs_node, ptr %1, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #14
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end_crit_edge, label %if.then10.i.i.i, !prof !259

if.end5.i.i.i.if.end_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #14
  br label %if.end

if.then:                                          ; preds = %for.body
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !266
  %3 = ptrtoint ptr %dests_size to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %dests_size, align 4
  %dec1 = add i32 %4, -1
  store i32 %dec1, ptr %dests_size, align 4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %6) #14
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %6, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %13 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %6, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx, align 4
  tail call void @kfree(ptr noundef %16) #14
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %if.then10.i.i.i, %if.end5.i.i.i.if.end_crit_edge
  %dec = add i32 %dec4, -1
  %cmp = icmp sgt i32 %dec, -1
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @kfree(ptr noundef %handle) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_sw_hw_rule(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %parent = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 3
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 4
  tail call fastcc void @trace_mlx5_fs_del_rule(ptr noundef %node)
  %sw_action = getelementptr inbounds %struct.mlx5_flow_rule, ptr %node, i32 0, i32 4
  %2 = ptrtoint ptr %sw_action to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sw_action, align 4
  %and.i = and i32 %3, 589824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %4 = getelementptr inbounds %struct.mlx5_flow_rule, ptr %node, i32 0, i32 2, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %lock = getelementptr inbounds %struct.mlx5_flow_table, ptr %6, i32 0, i32 9
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #14
  %next_ft = getelementptr inbounds %struct.mlx5_flow_rule, ptr %node, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %next_ft) #14
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i = getelementptr inbounds %struct.mlx5_flow_rule, ptr %node, i32 0, i32 3, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %next_ft to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %next_ft, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %13 = ptrtoint ptr %next_ft to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %next_ft, align 4
  %prev.i = getelementptr inbounds %struct.mlx5_flow_rule, ptr %node, i32 0, i32 3, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %15 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %4, align 4
  %lock6 = getelementptr inbounds %struct.mlx5_flow_table, ptr %16, i32 0, i32 9
  tail call void @mutex_unlock(ptr noundef %lock6) #14
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %entry.if.end_crit_edge
  %dest_attr7 = getelementptr inbounds %struct.mlx5_flow_rule, ptr %node, i32 0, i32 2
  %17 = ptrtoint ptr %dest_attr7 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %dest_attr7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %18)
  %cmp = icmp eq i32 %18, 256
  br i1 %cmp, label %land.lhs.true, label %if.end.if.end10_crit_edge

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

land.lhs.true:                                    ; preds = %if.end
  %dests_size = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 3
  %19 = ptrtoint ptr %dests_size to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %dests_size, align 4
  %dec = add i32 %20, -1
  store i32 %dec, ptr %dests_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %if.end10thread-pre-split, label %if.then8

if.then8:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %modify_mask = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 10
  %21 = ptrtoint ptr %modify_mask to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %modify_mask, align 4
  %or = or i32 %22, 9
  store i32 %or, ptr %modify_mask, align 4
  %action = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 6
  %23 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %action, align 4
  %and = and i32 %24, -9
  store i32 %and, ptr %action, align 4
  br label %out

if.end10thread-pre-split:                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %25 = ptrtoint ptr %dest_attr7 to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pr = load i32, ptr %dest_attr7, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.end10thread-pre-split, %if.end.if.end10_crit_edge
  %26 = phi i32 [ %.pr, %if.end10thread-pre-split ], [ %18, %if.end.if.end10_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 153, i32 %26)
  %cmp13 = icmp eq i32 %26, 153
  br i1 %cmp13, label %land.lhs.true14, label %if.end10.if.end24_crit_edge

if.end10.if.end24_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

land.lhs.true14:                                  ; preds = %if.end10
  %dests_size15 = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 3
  %27 = ptrtoint ptr %dests_size15 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %dests_size15, align 4
  %dec16 = add i32 %28, -1
  store i32 %dec16, ptr %dests_size15, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec16)
  %tobool17.not = icmp eq i32 %dec16, 0
  br i1 %tobool17.not, label %land.lhs.true14.if.end24_crit_edge, label %if.then18

land.lhs.true14.if.end24_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then18:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #16
  %modify_mask19 = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 10
  %29 = ptrtoint ptr %modify_mask19 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %modify_mask19, align 4
  %or20 = or i32 %30, 1
  store i32 %or20, ptr %modify_mask19, align 4
  %action21 = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 6
  %31 = ptrtoint ptr %action21 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %action21, align 4
  %and23 = and i32 %32, -2
  store i32 %and23, ptr %action21, align 4
  br label %out

if.end24:                                         ; preds = %land.lhs.true14.if.end24_crit_edge, %if.end10.if.end24_crit_edge
  %action25 = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 6
  %33 = ptrtoint ptr %action25 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %action25, align 4
  %and27 = and i32 %34, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27)
  %tobool28.not = icmp eq i32 %and27, 0
  br i1 %tobool28.not, label %if.end24.out_crit_edge, label %land.lhs.true29

if.end24.out_crit_edge:                           ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

land.lhs.true29:                                  ; preds = %if.end24
  %dests_size30 = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 3
  %35 = ptrtoint ptr %dests_size30 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %dests_size30, align 4
  %dec31 = add i32 %36, -1
  store i32 %dec31, ptr %dests_size30, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec31)
  %tobool32.not = icmp eq i32 %dec31, 0
  br i1 %tobool32.not, label %land.lhs.true29.out_crit_edge, label %if.then33

land.lhs.true29.out_crit_edge:                    ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.then33:                                        ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #16
  %modify_mask34 = getelementptr inbounds %struct.fs_fte, ptr %1, i32 0, i32 10
  %37 = ptrtoint ptr %modify_mask34 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %modify_mask34, align 4
  %or35 = or i32 %38, 4
  store i32 %or35, ptr %modify_mask34, align 4
  br label %out

out:                                              ; preds = %if.then33, %land.lhs.true29.out_crit_edge, %if.end24.out_crit_edge, %if.then18, %if.then8
  tail call void @kfree(ptr noundef %node) #14
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #11

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mlx5_fs_del_rule(ptr noundef %rule) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_rule, i32 0, i32 1), ptr blockaddress(@trace_mlx5_fs_del_rule, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !267

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !259

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !305
  %call42 = tail call i32 @__traceiter_mlx5_fs_del_rule(ptr noundef null, ptr noundef %rule) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !306
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !259

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_rule, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_rule, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mlx5_fs_del_rule.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_mlx5_fs_del_rule.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 316, ptr noundef nonnull @.str.32) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !271
  %31 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mlx5_fs_del_rule(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mlx5_fs_set_fte(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mlx5_fs_add_rule(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mlx5_fs_del_fte(ptr noundef %fte) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_fte, i32 0, i32 1), ptr blockaddress(@trace_mlx5_fs_del_fte, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !267

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !259

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !307
  %call42 = tail call i32 @__traceiter_mlx5_fs_del_fte(ptr noundef null, ptr noundef %fte) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !308
  %13 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !259

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_fte, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mlx5_fs_del_fte, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mlx5_fs_del_fte.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_mlx5_fs_del_fte.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.31, i32 noundef 271, ptr noundef nonnull @.str.32) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !271
  %31 = tail call i32 @llvm.read_register.i32(metadata !249) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mlx5_fs_del_fte(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #12

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clean_tree(ptr noundef %node) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %node, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @tree_get_node(ptr noundef nonnull %node)
  %children = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 1
  %0 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %children, align 4
  %cmp.not21 = icmp eq ptr %1, %children
  br i1 %cmp.not21, label %if.then.for.end_crit_edge, label %if.then.for.body_crit_edge

if.then.for.body_crit_edge:                       ; preds = %if.then
  br label %for.body

if.then.for.end_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then.for.body_crit_edge
  %iter.022 = phi ptr [ %temp.0, %for.body.for.body_crit_edge ], [ %1, %if.then.for.body_crit_edge ]
  %2 = ptrtoint ptr %iter.022 to i32
  call void @__asan_load4_noabort(i32 %2)
  %temp.0 = load ptr, ptr %iter.022, align 4
  tail call fastcc void @clean_tree(ptr noundef %iter.022)
  %cmp.not = icmp eq ptr %temp.0, %children
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.then.for.end_crit_edge
  tail call fastcc void @tree_put_node(ptr noundef nonnull %node, i1 noundef zeroext false)
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %node, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcount.i, i32 noundef 4) #14
  %3 = ptrtoint ptr %refcount.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %refcount.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp.i = icmp ugt i32 %4, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %for.end
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !262
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #14
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #14, !srcloc !263
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.i.if.end_crit_edge, !prof !261

if.then.i.if.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then3.i.i.i:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 4) #14
  br label %if.end

if.end.i:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @tree_put_node(ptr noundef nonnull %node, i1 noundef zeroext false) #14
  br label %if.end

if.end:                                           ; preds = %if.end.i, %if.then3.i.i.i, %if.then.i.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @create_root_ns(ptr nocapture noundef readonly %steering, i32 noundef %table_type) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @mlx5_fs_cmd_get_default(i32 noundef %table_type) #14
  %0 = ptrtoint ptr %steering to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %steering, align 4
  %call1 = tail call i32 @mlx5_fpga_ipsec_device_caps(ptr noundef %1) #14
  %and = and i32 %call1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp ne i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %table_type)
  %switch = icmp ult i32 %table_type, 2
  %or.cond = and i1 %switch, %tobool.not
  br i1 %or.cond, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call3 = tail call ptr @mlx5_fs_cmd_get_default_ipsec_fpga_cmds(i32 noundef %table_type) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %cmds.0 = phi ptr [ %call3, %if.then ], [ %call, %entry.if.end_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 272) #18
  %tobool5.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool5.not, label %if.end.cleanup_crit_edge, label %if.end7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %3 = ptrtoint ptr %steering to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %steering, align 4
  %dev9 = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call7.i.i, i32 0, i32 4
  %5 = ptrtoint ptr %dev9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %dev9, align 8
  %table_type10 = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call7.i.i, i32 0, i32 3
  %6 = ptrtoint ptr %table_type10 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %table_type, ptr %table_type10, align 4
  %cmds11 = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call7.i.i, i32 0, i32 8
  %7 = ptrtoint ptr %cmds11 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %cmds.0, ptr %cmds11, align 4
  %underlay_qpns = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call7.i.i, i32 0, i32 7
  %8 = ptrtoint ptr %underlay_qpns to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %underlay_qpns, ptr %underlay_qpns, align 4
  %prev.i = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call7.i.i, i32 0, i32 7, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %underlay_qpns, ptr %prev.i, align 8
  %type.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 2
  %10 = ptrtoint ptr %type.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %type.i, align 8
  %chain_lock = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %call7.i.i, i32 0, i32 6
  tail call void @__mutex_init(ptr noundef %chain_lock, ptr noundef nonnull @.str.70, ptr noundef nonnull @create_root_ns.__key) #14
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  %11 = ptrtoint ptr %refcount.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 1, ptr %refcount.i, align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %call7.i.i, ptr %call7.i.i, align 8
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call7.i.i, ptr %prev.i.i, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %children.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %children.i, ptr %children.i, align 8
  %prev.i9.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 1, i32 1
  %15 = ptrtoint ptr %prev.i9.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %children.i, ptr %prev.i9.i, align 4
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 5
  tail call void @__init_rwsem(ptr noundef %lock.i, ptr noundef nonnull @.str.28, ptr noundef nonnull @tree_init_node.__key) #14
  %del_hw_func1.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 8
  %16 = ptrtoint ptr %del_hw_func1.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %del_hw_func1.i, align 4
  %del_sw_func2.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 9
  %17 = ptrtoint ptr %del_sw_func2.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @del_sw_root_ns, ptr %del_sw_func2.i, align 8
  %active.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 7
  %18 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %active.i, align 8
  %parent1.c14.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 3
  %19 = ptrtoint ptr %parent1.c14.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %parent1.c14.i, align 4
  %root5.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 4
  %20 = ptrtoint ptr %root5.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call7.i.i, ptr %root5.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end.cleanup_crit_edge
  ret ptr %call7.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_fs_cmd_get_default(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_fs_cmd_get_default_ipsec_fpga_cmds(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_sw_root_ns(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chain_lock = getelementptr inbounds %struct.mlx5_flow_root_namespace, ptr %node, i32 0, i32 6
  tail call void @mutex_destroy(ptr noundef %chain_lock) #14
  tail call void @kfree(ptr noundef %node) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @_fs_create_prio(ptr noundef %ns, i32 noundef %prio, i32 noundef %num_levels, i32 noundef %type) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 160) #18
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %type2 = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 2
  %1 = ptrtoint ptr %type2 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %type, ptr %type2, align 8
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  %2 = ptrtoint ptr %refcount.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 1, ptr %refcount.i, align 4
  %3 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %call7.i.i, ptr %call7.i.i, align 8
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call7.i.i, ptr %prev.i.i, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %children.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %children.i, ptr %children.i, align 8
  %prev.i9.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i9.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %children.i, ptr %prev.i9.i, align 4
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 5
  tail call void @__init_rwsem(ptr noundef %lock.i, ptr noundef nonnull @.str.28, ptr noundef nonnull @tree_init_node.__key) #14
  %del_hw_func1.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 8
  %7 = ptrtoint ptr %del_hw_func1.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %del_hw_func1.i, align 4
  %del_sw_func2.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 9
  %8 = ptrtoint ptr %del_sw_func2.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @del_sw_prio, ptr %del_sw_func2.i, align 8
  %active.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 7
  %9 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %active.i, align 8
  %tobool.not.i = icmp eq ptr %ns, null
  br i1 %tobool.not.i, label %if.then3.critedge.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %refcount.i18 = getelementptr inbounds %struct.fs_node, ptr %ns, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i18, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i18, i32 1, i32 3, i32 1) #14
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i18, ptr %refcount.i18, i32 1, ptr elementtype(i32) %refcount.i18) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %11 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %.not.i.i.i.i = icmp sgt i32 %11, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i18, i32 noundef %.sink.i.i.i.i) #14
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %parent1.c.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 3
  %12 = ptrtoint ptr %parent1.c.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %ns, ptr %parent1.c.i, align 4
  %root4.i = getelementptr inbounds %struct.fs_node, ptr %ns, i32 0, i32 4
  %13 = ptrtoint ptr %root4.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %root4.i, align 4
  br label %tree_add_node.exit

if.then3.critedge.i:                              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %parent1.c14.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 3
  %15 = ptrtoint ptr %parent1.c14.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %parent1.c14.i, align 4
  br label %tree_add_node.exit

tree_add_node.exit:                               ; preds = %if.then3.critedge.i, %refcount_inc.exit.i
  %.sink.i = phi ptr [ %14, %refcount_inc.exit.i ], [ %call7.i.i, %if.then3.critedge.i ]
  %root5.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 4
  %16 = ptrtoint ptr %root5.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %.sink.i, ptr %root5.i, align 8
  %num_levels6 = getelementptr inbounds %struct.fs_prio, ptr %call7.i.i, i32 0, i32 1
  %17 = ptrtoint ptr %num_levels6 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %num_levels, ptr %num_levels6, align 8
  %prio7 = getelementptr inbounds %struct.fs_prio, ptr %call7.i.i, i32 0, i32 3
  %18 = ptrtoint ptr %prio7 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %prio, ptr %prio7, align 8
  %children = getelementptr inbounds %struct.fs_node, ptr %ns, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.fs_node, ptr %ns, i32 0, i32 1, i32 1
  %19 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %20, ptr noundef %children) #14
  br i1 %call.i.i, label %if.end.i.i, label %tree_add_node.exit.cleanup_crit_edge

tree_add_node.exit.cleanup_crit_edge:             ; preds = %tree_add_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i.i:                                       ; preds = %tree_add_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call7.i.i, ptr %prev.i, align 4
  %22 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %children, ptr %call7.i.i, align 8
  %23 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev.i.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %call7.i.i, ptr %20, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %tree_add_node.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -12 to ptr), %entry.cleanup_crit_edge ], [ %call7.i.i, %tree_add_node.exit.cleanup_crit_edge ], [ %call7.i.i, %if.end.i.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_sw_prio(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %node) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_prio_attrs(ptr noundef readonly %root_ns) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %children = getelementptr inbounds %struct.fs_node, ptr %root_ns, i32 0, i32 1
  %0 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %0)
  %prio.016 = load ptr, ptr %children, align 4
  %cmp.not17 = icmp eq ptr %prio.016, %children
  br i1 %cmp.not17, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %prio.019 = phi ptr [ %prio.0, %for.body.for.body_crit_edge ], [ %prio.016, %entry.for.body_crit_edge ]
  %start_level.018 = phi i32 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  tail call fastcc void @set_prio_attrs_in_prio(ptr noundef %prio.019, i32 noundef %start_level.018)
  %num_levels = getelementptr inbounds %struct.fs_prio, ptr %prio.019, i32 0, i32 1
  %1 = ptrtoint ptr %num_levels to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %num_levels, align 4
  %add = add i32 %2, %start_level.018
  %3 = ptrtoint ptr %prio.019 to i32
  call void @__asan_load4_noabort(i32 %3)
  %prio.0 = load ptr, ptr %prio.019, align 4
  %cmp.not = icmp eq ptr %prio.0, %children
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_root_tree_recursive(ptr nocapture noundef readonly %steering, ptr nocapture noundef readonly %init_node, ptr noundef %fs_parent_node, i32 noundef %prio) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %init_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %init_node, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.139)
  switch i32 %1, label %entry.cleanup_crit_edge [
    i32 1, label %if.then
    i32 0, label %if.then16
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then:                                          ; preds = %entry
  %3 = ptrtoint ptr %steering to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %steering, align 4
  %arrayidx = getelementptr %struct.mlx5_core_dev, ptr %4, i32 0, i32 8, i32 0, i32 7
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %add.ptr = getelementptr i32, ptr %6, i32 17
  %7 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr, align 4
  %and = and i32 %8, 255
  %min_ft_level = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 4
  %9 = ptrtoint ptr %min_ft_level to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %min_ft_level, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %and)
  %cmp1 = icmp sgt i32 %10, %and
  br i1 %cmp1, label %if.then.cleanup_crit_edge, label %lor.lhs.false

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.then
  %caps3 = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 3
  %11 = ptrtoint ptr %caps3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %caps3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp12.not.i = icmp eq i32 %12, 0
  br i1 %cmp12.not.i, label %lor.lhs.false.if.end_crit_edge, label %for.body.lr.ph.i

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body.lr.ph.i:                                 ; preds = %lor.lhs.false
  %caps2.i = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 3, i32 1
  %13 = ptrtoint ptr %caps2.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %caps2.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %div.i10 = sdiv i32 %16, 32
  %add.ptr.i11 = getelementptr i32, ptr %6, i32 %div.i10
  %17 = ptrtoint ptr %add.ptr.i11 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %add.ptr.i11, align 4
  %and.i12 = and i32 %16, 31
  %sub.i13 = xor i32 %and.i12, 31
  %19 = shl nuw i32 1, %sub.i13
  %20 = and i32 %19, %18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i14 = icmp eq i32 %20, 0
  br i1 %tobool.not.i14, label %for.body.lr.ph.i.cleanup_crit_edge, label %for.body.lr.ph.i.for.cond.i_crit_edge

for.body.lr.ph.i.for.cond.i_crit_edge:            ; preds = %for.body.lr.ph.i
  br label %for.cond.i

for.body.lr.ph.i.cleanup_crit_edge:               ; preds = %for.body.lr.ph.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %for.body.lr.ph.i.for.cond.i_crit_edge
  %i.013.i15 = phi i32 [ %inc.i, %for.body.i.for.cond.i_crit_edge ], [ 0, %for.body.lr.ph.i.for.cond.i_crit_edge ]
  %inc.i = add nuw i32 %i.013.i15, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %12)
  %exitcond.not.i = icmp eq i32 %inc.i, %12
  br i1 %exitcond.not.i, label %for.cond.i.has_required_caps.exit_crit_edge, label %for.body.i

for.cond.i.has_required_caps.exit_crit_edge:      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %has_required_caps.exit

for.body.i:                                       ; preds = %for.cond.i
  %arrayidx3.i = getelementptr i32, ptr %14, i32 %inc.i
  %21 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx3.i, align 4
  %div.i = sdiv i32 %22, 32
  %add.ptr.i = getelementptr i32, ptr %6, i32 %div.i
  %23 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %add.ptr.i, align 4
  %and.i = and i32 %22, 31
  %sub.i = xor i32 %and.i, 31
  %25 = shl nuw i32 1, %sub.i
  %26 = and i32 %25, %24
  %tobool.not.i = icmp eq i32 %26, 0
  br i1 %tobool.not.i, label %for.body.i.has_required_caps.exit_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i

for.body.i.has_required_caps.exit_crit_edge:      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %has_required_caps.exit

has_required_caps.exit:                           ; preds = %for.body.i.has_required_caps.exit_crit_edge, %for.cond.i.has_required_caps.exit_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %12)
  %cmp.i.le = icmp ult i32 %inc.i, %12
  br i1 %cmp.i.le, label %has_required_caps.exit.cleanup_crit_edge, label %has_required_caps.exit.if.end_crit_edge

has_required_caps.exit.if.end_crit_edge:          ; preds = %has_required_caps.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

has_required_caps.exit.cleanup_crit_edge:         ; preds = %has_required_caps.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %has_required_caps.exit.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge
  %num_leaf_prios = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 5
  %27 = ptrtoint ptr %num_leaf_prios to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_leaf_prios, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not = icmp eq i32 %28, 0
  br i1 %tobool.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp8.i = icmp sgt i32 %28, 0
  br i1 %cmp8.i, label %for.body.lr.ph.i1, label %if.then6.cleanup_crit_edge

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph.i1:                                ; preds = %if.then6
  %num_levels.i = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 7
  br label %for.body.i2

for.body.i2:                                      ; preds = %for.inc.i.for.body.i2_crit_edge, %for.body.lr.ph.i1
  %i.010.i = phi i32 [ 0, %for.body.lr.ph.i1 ], [ %inc3.i, %for.inc.i.for.body.i2_crit_edge ]
  %prio.addr.09.i = phi i32 [ %prio, %for.body.lr.ph.i1 ], [ %inc.i3, %for.inc.i.for.body.i2_crit_edge ]
  %29 = ptrtoint ptr %num_levels.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %num_levels.i, align 4
  %call.i.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %fs_parent_node, i32 noundef %prio.addr.09.i, i32 noundef %30, i32 noundef 1) #14
  %cmp.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body.i2
  call void @__sanitizer_cov_trace_pc() #16
  %31 = ptrtoint ptr %call.i.i to i32
  br label %cleanup

for.inc.i:                                        ; preds = %for.body.i2
  %inc.i3 = add i32 %prio.addr.09.i, 1
  %inc3.i = add nuw nsw i32 %i.010.i, 1
  %32 = ptrtoint ptr %num_leaf_prios to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_leaf_prios, align 4
  %cmp.i4 = icmp slt i32 %inc3.i, %33
  br i1 %cmp.i4, label %for.inc.i.for.body.i2_crit_edge, label %for.inc.i.cleanup_crit_edge

for.inc.i.cleanup_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.i.for.body.i2_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i2

if.end8:                                          ; preds = %if.end
  %num_levels = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 7
  %34 = ptrtoint ptr %num_levels to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %num_levels, align 4
  %call.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %fs_parent_node, i32 noundef %prio, i32 noundef %35, i32 noundef 1) #14
  %cmp.i5 = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i5, label %if.then11, label %if.end8.if.end28_crit_edge

if.end8.if.end28_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

if.then11:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %call.i to i32
  br label %cleanup

if.then16:                                        ; preds = %entry
  %def_miss_action = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 8
  %37 = ptrtoint ptr %def_miss_action to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %def_miss_action, align 4
  %call20 = tail call fastcc ptr @fs_create_namespace(ptr noundef %fs_parent_node, i32 noundef %38)
  %cmp.i6 = icmp ugt ptr %call20, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i6, label %if.then22, label %if.then16.if.end28_crit_edge

if.then16.if.end28_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

if.then22:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #16
  %39 = ptrtoint ptr %call20 to i32
  br label %cleanup

if.end28:                                         ; preds = %if.then16.if.end28_crit_edge, %if.end8.if.end28_crit_edge
  %base.0 = phi ptr [ %call.i, %if.end8.if.end28_crit_edge ], [ %call20, %if.then16.if.end28_crit_edge ]
  %children = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 1
  %ar_size = getelementptr inbounds %struct.init_tree_node, ptr %init_node, i32 0, i32 2
  %40 = ptrtoint ptr %ar_size to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %ar_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %cmp2917 = icmp sgt i32 %41, 0
  br i1 %cmp2917, label %if.end28.for.body_crit_edge, label %if.end28.cleanup_crit_edge

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end28.for.body_crit_edge:                      ; preds = %if.end28
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end28.for.body_crit_edge
  %prio.addr.020 = phi i32 [ %prio.addr.1, %for.inc.for.body_crit_edge ], [ 0, %if.end28.for.body_crit_edge ]
  %i.018 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %if.end28.for.body_crit_edge ]
  %42 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %children, align 4
  %arrayidx30 = getelementptr %struct.init_tree_node, ptr %43, i32 %i.018
  %call31 = tail call fastcc i32 @init_root_tree_recursive(ptr noundef %steering, ptr noundef %arrayidx30, ptr noundef %base.0, i32 noundef %prio.addr.020)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end34:                                         ; preds = %for.body
  %44 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %children, align 4
  %arrayidx36 = getelementptr %struct.init_tree_node, ptr %45, i32 %i.018
  %46 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx36, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %47)
  %cmp38 = icmp eq i32 %47, 1
  br i1 %cmp38, label %land.lhs.true, label %if.end34.for.inc_crit_edge

if.end34.for.inc_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

land.lhs.true:                                    ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  %num_leaf_prios41 = getelementptr %struct.init_tree_node, ptr %45, i32 %i.018, i32 5
  %48 = ptrtoint ptr %num_leaf_prios41 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %num_leaf_prios41, align 4
  %add = add i32 %49, %prio.addr.020
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %if.end34.for.inc_crit_edge
  %prio.addr.1 = phi i32 [ %prio.addr.020, %if.end34.for.inc_crit_edge ], [ %add, %land.lhs.true ]
  %inc = add nuw nsw i32 %i.018, 1
  %50 = ptrtoint ptr %ar_size to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %ar_size, align 4
  %cmp29 = icmp slt i32 %inc, %51
  br i1 %cmp29, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.end28.cleanup_crit_edge, %if.then22, %if.then11, %for.inc.i.cleanup_crit_edge, %if.then.i, %if.then6.cleanup_crit_edge, %has_required_caps.exit.cleanup_crit_edge, %for.body.lr.ph.i.cleanup_crit_edge, %if.then.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %36, %if.then11 ], [ %39, %if.then22 ], [ 0, %has_required_caps.exit.cleanup_crit_edge ], [ 0, %if.then.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ %31, %if.then.i ], [ 0, %if.then6.cleanup_crit_edge ], [ 0, %if.end28.cleanup_crit_edge ], [ 0, %for.body.lr.ph.i.cleanup_crit_edge ], [ %call31, %for.body.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ 0, %for.inc.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @fs_create_namespace(ptr noundef %prio, i32 noundef %def_miss_act) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 148) #18
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %type.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 2
  %1 = ptrtoint ptr %type.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %type.i, align 8
  %def_miss_action = getelementptr inbounds %struct.mlx5_flow_namespace, ptr %call7.i.i, i32 0, i32 1
  %2 = ptrtoint ptr %def_miss_action to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %def_miss_act, ptr %def_miss_action, align 8
  %refcount.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #14
  %3 = ptrtoint ptr %refcount.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 1, ptr %refcount.i, align 4
  %4 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %call7.i.i, ptr %call7.i.i, align 8
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i.i, ptr %prev.i.i, align 4
  %children.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %children.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %children.i, ptr %children.i, align 8
  %prev.i9.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %prev.i9.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %children.i, ptr %prev.i9.i, align 4
  %lock.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 5
  tail call void @__init_rwsem(ptr noundef %lock.i, ptr noundef nonnull @.str.28, ptr noundef nonnull @tree_init_node.__key) #14
  %del_hw_func1.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 8
  %8 = ptrtoint ptr %del_hw_func1.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %del_hw_func1.i, align 4
  %del_sw_func2.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 9
  %9 = ptrtoint ptr %del_sw_func2.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @del_sw_ns, ptr %del_sw_func2.i, align 8
  %active.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 7
  %10 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 0, ptr %active.i, align 8
  %tobool.not.i = icmp eq ptr %prio, null
  br i1 %tobool.not.i, label %if.then3.critedge.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %refcount.i14 = getelementptr inbounds %struct.fs_node, ptr %prio, i32 0, i32 6
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i14, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refcount.i14, i32 1, i32 3, i32 1) #14
  %11 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i14, ptr %refcount.i14, i32 1, ptr elementtype(i32) %refcount.i14) #14, !srcloc !260
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !261

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %12 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %.not.i.i.i.i = icmp sgt i32 %12, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !259

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i14, i32 noundef %.sink.i.i.i.i) #14
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %parent1.c.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 3
  %13 = ptrtoint ptr %parent1.c.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %prio, ptr %parent1.c.i, align 4
  %root4.i = getelementptr inbounds %struct.fs_node, ptr %prio, i32 0, i32 4
  %14 = ptrtoint ptr %root4.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %root4.i, align 4
  br label %tree_add_node.exit

if.then3.critedge.i:                              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %parent1.c14.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 3
  %16 = ptrtoint ptr %parent1.c14.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %parent1.c14.i, align 4
  br label %tree_add_node.exit

tree_add_node.exit:                               ; preds = %if.then3.critedge.i, %refcount_inc.exit.i
  %.sink.i = phi ptr [ %15, %refcount_inc.exit.i ], [ %call7.i.i, %if.then3.critedge.i ]
  %root5.i = getelementptr inbounds %struct.fs_node, ptr %call7.i.i, i32 0, i32 4
  %17 = ptrtoint ptr %root5.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %.sink.i, ptr %root5.i, align 8
  %children = getelementptr inbounds %struct.fs_node, ptr %prio, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.fs_node, ptr %prio, i32 0, i32 1, i32 1
  %18 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %19, ptr noundef %children) #14
  br i1 %call.i.i, label %if.end.i.i, label %tree_add_node.exit.cleanup_crit_edge

tree_add_node.exit.cleanup_crit_edge:             ; preds = %tree_add_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i.i:                                       ; preds = %tree_add_node.exit
  call void @__sanitizer_cov_trace_pc() #16
  %20 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call7.i.i, ptr %prev.i, align 4
  %21 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %children, ptr %call7.i.i, align 8
  %22 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %19, ptr %prev.i.i, align 4
  %23 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %call7.i.i, ptr %19, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %tree_add_node.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -12 to ptr), %entry.cleanup_crit_edge ], [ %call7.i.i, %tree_add_node.exit.cleanup_crit_edge ], [ %call7.i.i, %if.end.i.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @del_sw_ns(ptr noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %node) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_prio_attrs_in_prio(ptr noundef %prio, i32 noundef %acc_level) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %start_level = getelementptr inbounds %struct.fs_prio, ptr %prio, i32 0, i32 2
  %0 = ptrtoint ptr %start_level to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %acc_level, ptr %start_level, align 4
  %children = getelementptr inbounds %struct.fs_node, ptr %prio, i32 0, i32 1
  %1 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %1)
  %ns.062 = load ptr, ptr %children, align 4
  %cmp.not63 = icmp eq ptr %ns.062, %children
  br i1 %cmp.not63, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %type = getelementptr inbounds %struct.fs_node, ptr %prio, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %set_prio_attrs_in_ns.exit.for.body_crit_edge, %for.body.lr.ph
  %ns.066 = phi ptr [ %ns.062, %for.body.lr.ph ], [ %ns.0, %set_prio_attrs_in_ns.exit.for.body_crit_edge ]
  %acc_level.addr.064 = phi i32 [ %acc_level, %for.body.lr.ph ], [ %spec.select, %set_prio_attrs_in_ns.exit.for.body_crit_edge ]
  %children.i = getelementptr inbounds %struct.fs_node, ptr %ns.066, i32 0, i32 1
  %2 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %prio.0.i58 = load ptr, ptr %children.i, align 4
  %cmp.not.i59 = icmp eq ptr %prio.0.i58, %children.i
  br i1 %cmp.not.i59, label %for.body.set_prio_attrs_in_ns.exit_crit_edge, label %for.body.for.body.i_crit_edge

for.body.for.body.i_crit_edge:                    ; preds = %for.body
  br label %for.body.i

for.body.set_prio_attrs_in_ns.exit_crit_edge:     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_prio_attrs_in_ns.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.for.body.i_crit_edge
  %prio.0.i61 = phi ptr [ %prio.0.i, %for.body.i.for.body.i_crit_edge ], [ %prio.0.i58, %for.body.for.body.i_crit_edge ]
  %acc_level.addr.0.i60 = phi i32 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ %acc_level.addr.064, %for.body.for.body.i_crit_edge ]
  tail call fastcc void @set_prio_attrs_in_prio(ptr noundef %prio.0.i61, i32 noundef %acc_level.addr.0.i60) #14
  %num_levels.i = getelementptr inbounds %struct.fs_prio, ptr %prio.0.i61, i32 0, i32 1
  %3 = ptrtoint ptr %num_levels.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_levels.i, align 4
  %add.i = add i32 %4, %acc_level.addr.0.i60
  %5 = ptrtoint ptr %prio.0.i61 to i32
  call void @__asan_load4_noabort(i32 %5)
  %prio.0.i = load ptr, ptr %prio.0.i61, align 4
  %cmp.not.i = icmp eq ptr %prio.0.i, %children.i
  br i1 %cmp.not.i, label %for.body.i.set_prio_attrs_in_ns.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.body.i.set_prio_attrs_in_ns.exit_crit_edge:   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_prio_attrs_in_ns.exit

set_prio_attrs_in_ns.exit:                        ; preds = %for.body.i.set_prio_attrs_in_ns.exit_crit_edge, %for.body.set_prio_attrs_in_ns.exit_crit_edge
  %acc_level.addr.0.i.lcssa = phi i32 [ %acc_level.addr.064, %for.body.set_prio_attrs_in_ns.exit_crit_edge ], [ %add.i, %for.body.i.set_prio_attrs_in_ns.exit_crit_edge ]
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %cmp5 = icmp eq i32 %7, 2
  %spec.select = select i1 %cmp5, i32 %acc_level.addr.0.i.lcssa, i32 %acc_level.addr.064
  %8 = ptrtoint ptr %ns.066 to i32
  call void @__asan_load4_noabort(i32 %8)
  %ns.0 = load ptr, ptr %ns.066, align 4
  %cmp.not = icmp eq ptr %ns.0, %children
  br i1 %cmp.not, label %set_prio_attrs_in_ns.exit.for.end_crit_edge, label %set_prio_attrs_in_ns.exit.for.body_crit_edge

set_prio_attrs_in_ns.exit.for.body_crit_edge:     ; preds = %set_prio_attrs_in_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

set_prio_attrs_in_ns.exit.for.end_crit_edge:      ; preds = %set_prio_attrs_in_ns.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %set_prio_attrs_in_ns.exit.for.end_crit_edge, %entry.for.end_crit_edge
  %acc_level_ns.0.lcssa = phi i32 [ %acc_level, %entry.for.end_crit_edge ], [ %acc_level.addr.0.i.lcssa, %set_prio_attrs_in_ns.exit.for.end_crit_edge ]
  %num_levels = getelementptr inbounds %struct.fs_prio, ptr %prio, i32 0, i32 1
  %9 = ptrtoint ptr %num_levels to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_levels, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %if.then12, label %for.end.if.end15_crit_edge

for.end.if.end15_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then12:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %start_level to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %start_level, align 4
  %sub = sub i32 %acc_level_ns.0.lcssa, %12
  %13 = ptrtoint ptr %num_levels to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub, ptr %num_levels, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %for.end.if.end15_crit_edge
  %14 = ptrtoint ptr %num_levels to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_levels, align 4
  %16 = ptrtoint ptr %start_level to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %start_level, align 4
  %sub18 = sub i32 %acc_level_ns.0.lcssa, %17
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %sub18)
  %cmp19 = icmp ult i32 %15, %sub18
  br i1 %cmp19, label %do.end, label %if.end15.if.end35_crit_edge, !prof !261

if.end15.if.end35_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

do.end:                                           ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2572, i32 noundef 9, ptr noundef null) #14
  br label %if.end35

if.end35:                                         ; preds = %do.end, %if.end15.if.end35_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @create_fdb_chains(ptr nocapture noundef readonly %steering, i32 noundef %fs_prio, i32 noundef %chains) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mul = shl i32 %chains, 5
  %fdb_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 5
  %0 = ptrtoint ptr %fdb_root_ns to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fdb_root_ns, align 4
  %call.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %1, i32 noundef %fs_prio, i32 noundef %mul, i32 noundef 2) #14
  %cmp.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %chains)
  %cmp20 = icmp sgt i32 %chains, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %fdb_sub_ns.i.i = getelementptr inbounds %struct.mlx5_flow_steering, ptr %steering, i32 0, i32 6
  br label %for.body

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %2 = ptrtoint ptr %call.i to i32
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %chain.021 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %call.i15 = tail call fastcc ptr @fs_create_namespace(ptr noundef %call.i, i32 noundef 0) #14
  %cmp.i.i = icmp ugt ptr %call.i15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %for.body.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.body.preheader.i

for.body.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.body.preheader.i:                             ; preds = %for.body
  %call.i.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 0, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.i, label %for.body.preheader.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.i

for.body.preheader.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.body.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.i:                                       ; preds = %for.body.preheader.i
  %call.i.1.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 1, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.1.i = icmp ugt ptr %call.i.1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.1.i, label %for.cond.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.1.i

for.cond.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.1.i:                                     ; preds = %for.cond.i
  %call.i.2.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 2, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.2.i = icmp ugt ptr %call.i.2.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.2.i, label %for.cond.1.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.2.i

for.cond.1.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.2.i:                                     ; preds = %for.cond.1.i
  %call.i.3.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 3, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.3.i = icmp ugt ptr %call.i.3.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.3.i, label %for.cond.2.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.3.i

for.cond.2.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.3.i:                                     ; preds = %for.cond.2.i
  %call.i.4.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 4, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.4.i = icmp ugt ptr %call.i.4.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.4.i, label %for.cond.3.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.4.i

for.cond.3.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.4.i:                                     ; preds = %for.cond.3.i
  %call.i.5.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 5, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.5.i = icmp ugt ptr %call.i.5.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.5.i, label %for.cond.4.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.5.i

for.cond.4.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.5.i:                                     ; preds = %for.cond.4.i
  %call.i.6.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 6, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.6.i = icmp ugt ptr %call.i.6.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.6.i, label %for.cond.5.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.6.i

for.cond.5.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.6.i:                                     ; preds = %for.cond.5.i
  %call.i.7.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 7, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.7.i = icmp ugt ptr %call.i.7.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.7.i, label %for.cond.6.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.7.i

for.cond.6.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.7.i:                                     ; preds = %for.cond.6.i
  %call.i.8.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 8, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.8.i = icmp ugt ptr %call.i.8.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.8.i, label %for.cond.7.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.8.i

for.cond.7.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.8.i:                                     ; preds = %for.cond.7.i
  %call.i.9.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 9, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.9.i = icmp ugt ptr %call.i.9.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.9.i, label %for.cond.8.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.9.i

for.cond.8.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.9.i:                                     ; preds = %for.cond.8.i
  %call.i.10.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 10, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.10.i = icmp ugt ptr %call.i.10.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.10.i, label %for.cond.9.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.10.i

for.cond.9.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.10.i:                                    ; preds = %for.cond.9.i
  %call.i.11.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 11, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.11.i = icmp ugt ptr %call.i.11.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.11.i, label %for.cond.10.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.11.i

for.cond.10.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.11.i:                                    ; preds = %for.cond.10.i
  %call.i.12.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 12, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.12.i = icmp ugt ptr %call.i.12.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.12.i, label %for.cond.11.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.12.i

for.cond.11.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.12.i:                                    ; preds = %for.cond.11.i
  %call.i.13.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 13, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.13.i = icmp ugt ptr %call.i.13.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.13.i, label %for.cond.12.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.13.i

for.cond.12.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.13.i:                                    ; preds = %for.cond.12.i
  %call.i.14.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 14, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.14.i = icmp ugt ptr %call.i.14.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.14.i, label %for.cond.13.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.14.i

for.cond.13.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.14.i:                                    ; preds = %for.cond.13.i
  %call.i.15.i = tail call fastcc ptr @_fs_create_prio(ptr noundef %call.i15, i32 noundef 15, i32 noundef 2, i32 noundef 1) #14
  %cmp.i16.15.i = icmp ugt ptr %call.i.15.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i16.15.i, label %for.cond.14.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, label %for.cond.15.i

for.cond.14.i.create_fdb_sub_ns_prio_chain.exit_crit_edge: ; preds = %for.cond.14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %create_fdb_sub_ns_prio_chain.exit

for.cond.15.i:                                    ; preds = %for.cond.14.i
  %3 = ptrtoint ptr %fdb_sub_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fdb_sub_ns.i.i, align 4
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %while.cond.i.i.while.cond.i.i_crit_edge, %for.cond.15.i
  %chain.0.i.i = phi i32 [ 0, %for.cond.15.i ], [ %inc.i.i, %while.cond.i.i.while.cond.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr ptr, ptr %4, i32 %chain.0.i.i
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %6, null
  %inc.i.i = add i32 %chain.0.i.i, 1
  br i1 %tobool.not.i.i, label %create_fdb_sub_ns_prio_chain.exit.thread, label %while.cond.i.i.while.cond.i.i_crit_edge

while.cond.i.i.while.cond.i.i_crit_edge:          ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.i

create_fdb_sub_ns_prio_chain.exit.thread:         ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i.le = getelementptr ptr, ptr %4, i32 %chain.0.i.i
  %7 = ptrtoint ptr %arrayidx.i.i.le to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call.i15, ptr %arrayidx.i.i.le, align 4
  br label %for.inc

create_fdb_sub_ns_prio_chain.exit:                ; preds = %for.cond.14.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.13.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.12.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.11.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.10.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.9.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.8.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.7.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.6.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.5.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.4.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.3.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.2.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.1.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.cond.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.body.preheader.i.create_fdb_sub_ns_prio_chain.exit_crit_edge, %for.body.create_fdb_sub_ns_prio_chain.exit_crit_edge
  %retval.0.i.in = phi ptr [ %call.i15, %for.body.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.i, %for.body.preheader.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.1.i, %for.cond.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.2.i, %for.cond.1.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.3.i, %for.cond.2.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.4.i, %for.cond.3.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.5.i, %for.cond.4.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.6.i, %for.cond.5.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.7.i, %for.cond.6.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.8.i, %for.cond.7.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.9.i, %for.cond.8.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.10.i, %for.cond.9.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.11.i, %for.cond.10.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.12.i, %for.cond.11.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.13.i, %for.cond.12.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.14.i, %for.cond.13.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ], [ %call.i.15.i, %for.cond.14.i.create_fdb_sub_ns_prio_chain.exit_crit_edge ]
  %tobool.not = icmp eq ptr %retval.0.i.in, null
  br i1 %tobool.not, label %create_fdb_sub_ns_prio_chain.exit.for.inc_crit_edge, label %cleanup.loopexit.split.loop.exit

create_fdb_sub_ns_prio_chain.exit.for.inc_crit_edge: ; preds = %create_fdb_sub_ns_prio_chain.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

for.inc:                                          ; preds = %create_fdb_sub_ns_prio_chain.exit.for.inc_crit_edge, %create_fdb_sub_ns_prio_chain.exit.thread
  %inc = add nuw nsw i32 %chain.021, 1
  %exitcond.not = icmp eq i32 %inc, %chains
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup.loopexit.split.loop.exit:                 ; preds = %create_fdb_sub_ns_prio_chain.exit
  call void @__sanitizer_cov_trace_pc() #16
  %retval.0.i.le = ptrtoint ptr %retval.0.i.in to i32
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit.split.loop.exit, %for.inc.cleanup_crit_edge, %if.then, %for.cond.preheader.cleanup_crit_edge
  %retval.0 = phi i32 [ %2, %if.then ], [ %retval.0.i.le, %cleanup.loopexit.split.loop.exit ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #11

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 149)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 149)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #9 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #12 = { nounwind readonly }
attributes #13 = { argmemonly nofree nounwind readonly willreturn }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { cold nounwind }
attributes #18 = { nounwind allocsize(2) }
attributes #19 = { nounwind allocsize(0) }
attributes #20 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !4, !5, !6, !7, !9, !11, !13, !15, !17, !19, !21, !23, !24, !25, !26, !27, !28, !30, !32, !33, !34, !35, !37, !39, !41, !43, !45, !47, !48, !49, !50, !52, !54, !55, !56, !57, !59, !60, !61, !63, !65, !67, !69, !71, !73, !74, !75, !76, !78, !79, !80, !81, !82, !84, !85, !86, !87, !89, !90, !91, !92, !94, !95, !97, !99, !100, !102, !103, !104, !105, !107, !108, !109, !110, !112, !113, !115, !116, !117, !118, !120, !121, !122, !123, !125, !126, !127, !128, !130, !131, !133, !135, !136, !138, !139, !141, !142, !144, !146, !147, !148, !150, !151, !153, !155, !156, !157, !158, !160, !161, !163, !165, !167, !169, !171, !173, !175, !177, !178, !180, !181, !182, !183, !185, !187, !189, !191, !192, !193, !194, !196, !197, !198, !200, !202, !204, !205, !207, !208, !210, !211, !213, !214, !215, !216, !218, !219, !220, !221, !223, !224, !226, !227, !228, !229, !231, !232, !233, !235, !236, !238, !240, !241, !242, !243, !245, !247}
!llvm.named.register.sp = !{!249}
!llvm.module.flags = !{!250, !251, !252, !253, !254, !255, !256, !257}
!llvm.ident = !{!258}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 455, i32 6}
!2 = !{ptr @.str.1, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 456, i32 3}
!4 = !{ptr @.str.2, !3, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @find_root._entry, !3, !"_entry", i1 false, i1 false}
!6 = !{ptr @find_root._entry_ptr, !3, !"_entry_ptr", i1 false, i1 false}
!7 = !{ptr @__ksymtab_mlx5_create_flow_table, !8, !"__ksymtab_mlx5_create_flow_table", i1 false, i1 false}
!8 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1187, i32 1}
!9 = !{ptr @__ksymtab_mlx5_create_lag_demux_flow_table, !10, !"__ksymtab_mlx5_create_lag_demux_flow_table", i1 false, i1 false}
!10 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1208, i32 1}
!11 = !{ptr @__ksymtab_mlx5_create_auto_grouped_flow_table, !12, !"__ksymtab_mlx5_create_auto_grouped_flow_table", i1 false, i1 false}
!12 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1246, i32 1}
!13 = !{ptr @__ksymtab_mlx5_create_flow_group, !14, !"__ksymtab_mlx5_create_flow_group", i1 false, i1 false}
!14 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1285, i32 1}
!15 = !{ptr @mlx5_add_flow_rules.zero_spec, !16, !"zero_spec", i1 false, i1 false}
!16 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1988, i32 37}
!17 = !{ptr @__ksymtab_mlx5_add_flow_rules, !18, !"__ksymtab_mlx5_add_flow_rules", i1 false, i1 false}
!18 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2044, i32 1}
!19 = !{ptr @__ksymtab_mlx5_del_flow_rules, !20, !"__ksymtab_mlx5_del_flow_rules", i1 false, i1 false}
!20 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2082, i32 1}
!21 = !{ptr @.str.3, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2184, i32 3}
!23 = !{ptr @.str.4, !22, !"<string literal>", i1 false, i1 false}
!24 = !{ptr @.str.5, !22, !"<string literal>", i1 false, i1 false}
!25 = !{ptr @.str.6, !22, !"<string literal>", i1 false, i1 false}
!26 = !{ptr @mlx5_destroy_flow_table._entry, !22, !"_entry", i1 false, i1 false}
!27 = !{ptr @mlx5_destroy_flow_table._entry_ptr, !22, !"_entry_ptr", i1 false, i1 false}
!28 = !{ptr @__ksymtab_mlx5_destroy_flow_table, !29, !"__ksymtab_mlx5_destroy_flow_table", i1 false, i1 false}
!29 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2190, i32 1}
!30 = !{ptr @.str.7, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2195, i32 3}
!32 = !{ptr @.str.8, !31, !"<string literal>", i1 false, i1 false}
!33 = !{ptr @mlx5_destroy_flow_group._entry, !31, !"_entry", i1 false, i1 false}
!34 = !{ptr @mlx5_destroy_flow_group._entry_ptr, !31, !"_entry_ptr", i1 false, i1 false}
!35 = !{ptr @__ksymtab_mlx5_destroy_flow_group, !36, !"__ksymtab_mlx5_destroy_flow_group", i1 false, i1 false}
!36 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2198, i32 1}
!37 = !{ptr @__ksymtab_mlx5_get_fdb_sub_ns, !38, !"__ksymtab_mlx5_get_fdb_sub_ns", i1 false, i1 false}
!38 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2210, i32 1}
!39 = !{ptr @__ksymtab_mlx5_get_flow_namespace, !40, !"__ksymtab_mlx5_get_flow_namespace", i1 false, i1 false}
!40 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2305, i32 1}
!41 = !{ptr @.str.9, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3093, i32 42}
!43 = !{ptr @.str.10, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3096, i32 43}
!45 = !{ptr @.str.11, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3185, i32 3}
!47 = !{ptr @.str.12, !46, !"<string literal>", i1 false, i1 false}
!48 = !{ptr @mlx5_fs_add_rx_underlay_qpn._entry, !46, !"_entry", i1 false, i1 false}
!49 = !{ptr @mlx5_fs_add_rx_underlay_qpn._entry_ptr, !46, !"_entry_ptr", i1 false, i1 false}
!50 = !{ptr @__ksymtab_mlx5_fs_add_rx_underlay_qpn, !51, !"__ksymtab_mlx5_fs_add_rx_underlay_qpn", i1 false, i1 false}
!51 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3202, i32 1}
!52 = !{ptr @.str.13, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3220, i32 3}
!54 = !{ptr @.str.14, !53, !"<string literal>", i1 false, i1 false}
!55 = !{ptr @mlx5_fs_remove_rx_underlay_qpn._entry, !53, !"_entry", i1 false, i1 false}
!56 = !{ptr @mlx5_fs_remove_rx_underlay_qpn._entry_ptr, !53, !"_entry_ptr", i1 false, i1 false}
!57 = !{ptr @.str.16, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3229, i32 3}
!59 = !{ptr @mlx5_fs_remove_rx_underlay_qpn._entry.15, !58, !"_entry", i1 false, i1 false}
!60 = !{ptr @mlx5_fs_remove_rx_underlay_qpn._entry_ptr.17, !58, !"_entry_ptr", i1 false, i1 false}
!61 = !{ptr @__ksymtab_mlx5_fs_remove_rx_underlay_qpn, !62, !"__ksymtab_mlx5_fs_remove_rx_underlay_qpn", i1 false, i1 false}
!62 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3242, i32 1}
!63 = !{ptr @__ksymtab_mlx5_modify_header_alloc, !64, !"__ksymtab_mlx5_modify_header_alloc", i1 false, i1 false}
!64 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3286, i32 1}
!65 = !{ptr @__ksymtab_mlx5_modify_header_dealloc, !66, !"__ksymtab_mlx5_modify_header_dealloc", i1 false, i1 false}
!66 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3299, i32 1}
!67 = !{ptr @__ksymtab_mlx5_packet_reformat_alloc, !68, !"__ksymtab_mlx5_packet_reformat_alloc", i1 false, i1 false}
!68 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3328, i32 1}
!69 = !{ptr @__ksymtab_mlx5_packet_reformat_dealloc, !70, !"__ksymtab_mlx5_packet_reformat_dealloc", i1 false, i1 false}
!70 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3341, i32 1}
!71 = !{ptr @.str.18, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3368, i32 3}
!73 = !{ptr @.str.19, !72, !"<string literal>", i1 false, i1 false}
!74 = !{ptr @mlx5_create_match_definer._entry, !72, !"_entry", i1 false, i1 false}
!75 = !{ptr @mlx5_create_match_definer._entry_ptr, !72, !"_entry_ptr", i1 false, i1 false}
!76 = !{ptr @.str.20, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3393, i32 3}
!78 = !{ptr @.str.21, !77, !"<string literal>", i1 false, i1 false}
!79 = !{ptr @.str.22, !77, !"<string literal>", i1 false, i1 false}
!80 = !{ptr @mlx5_flow_namespace_set_peer._entry, !77, !"_entry", i1 false, i1 false}
!81 = !{ptr @mlx5_flow_namespace_set_peer._entry_ptr, !77, !"_entry_ptr", i1 false, i1 false}
!82 = !{ptr @.str.23, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 3432, i32 3}
!84 = !{ptr @.str.24, !83, !"<string literal>", i1 false, i1 false}
!85 = !{ptr @mlx5_flow_namespace_set_mode._entry, !83, !"_entry", i1 false, i1 false}
!86 = !{ptr @mlx5_flow_namespace_set_mode._entry_ptr, !83, !"_entry_ptr", i1 false, i1 false}
!87 = !{ptr @.str.25, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1110, i32 3}
!89 = !{ptr @.str.26, !88, !"<string literal>", i1 false, i1 false}
!90 = !{ptr @__mlx5_create_flow_table._entry, !88, !"_entry", i1 false, i1 false}
!91 = !{ptr @__mlx5_create_flow_table._entry_ptr, !88, !"_entry_ptr", i1 false, i1 false}
!92 = !{ptr @alloc_flow_table.__key, !93, !"__key", i1 false, i1 false}
!93 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 813, i32 2}
!94 = !{ptr @.str.27, !93, !"<string literal>", i1 false, i1 false}
!95 = !{ptr @rhash_fg, !96, !"rhash_fg", i1 false, i1 false}
!96 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 287, i32 39}
!97 = !{ptr @tree_init_node.__key, !98, !"__key", i1 false, i1 false}
!98 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 322, i32 2}
!99 = !{ptr @.str.28, !98, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @.str.29, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 507, i32 4}
!102 = !{ptr @.str.30, !101, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @del_hw_flow_table._entry, !101, !"_entry", i1 false, i1 false}
!104 = !{ptr @del_hw_flow_table._entry_ptr, !101, !"_entry_ptr", i1 false, i1 false}
!105 = distinct !{null, !106, !"__already_done", i1 false, i1 false}
!106 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h", i32 83, i32 1}
!107 = !{ptr @.str.31, !106, !"<string literal>", i1 false, i1 false}
!108 = distinct !{null, !106, !"__warned", i1 false, i1 false}
!109 = !{ptr @.str.32, !106, !"<string literal>", i1 false, i1 false}
!110 = distinct !{null, !111, !"__already_done", i1 false, i1 false}
!111 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!112 = !{ptr @.str.33, !111, !"<string literal>", i1 false, i1 false}
!113 = !{ptr @.str.34, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 908, i32 4}
!115 = !{ptr @.str.35, !114, !"<string literal>", i1 false, i1 false}
!116 = !{ptr @connect_fts_in_prio._entry, !114, !"_entry", i1 false, i1 false}
!117 = !{ptr @connect_fts_in_prio._entry_ptr, !114, !"_entry_ptr", i1 false, i1 false}
!118 = !{ptr @.str.36, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1050, i32 4}
!120 = !{ptr @.str.37, !119, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @connect_fwd_rules._entry, !119, !"_entry", i1 false, i1 false}
!122 = !{ptr @connect_fwd_rules._entry_ptr, !119, !"_entry_ptr", i1 false, i1 false}
!123 = !{ptr @.str.38, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 965, i32 3}
!125 = !{ptr @.str.39, !124, !"<string literal>", i1 false, i1 false}
!126 = !{ptr @update_root_ft_create._entry, !124, !"_entry", i1 false, i1 false}
!127 = !{ptr @update_root_ft_create._entry_ptr, !124, !"_entry_ptr", i1 false, i1 false}
!128 = distinct !{null, !129, !"__already_done", i1 false, i1 false}
!129 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h", i32 64, i32 1}
!130 = distinct !{null, !129, !"__warned", i1 false, i1 false}
!131 = !{ptr @rhash_fte, !132, !"rhash_fte", i1 false, i1 false}
!132 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 279, i32 39}
!133 = !{ptr @xa_init_flags.__key, !134, !"__key", i1 false, i1 false}
!134 = !{!"../include/linux/xarray.h", i32 378, i32 2}
!135 = !{ptr @.str.40, !134, !"<string literal>", i1 false, i1 false}
!136 = distinct !{null, !137, !"__warned", i1 false, i1 false}
!137 = !{!"../include/linux/rhashtable.h", i32 715, i32 8}
!138 = !{ptr @.str.41, !137, !"<string literal>", i1 false, i1 false}
!139 = distinct !{null, !140, !"__warned", i1 false, i1 false}
!140 = !{!"../include/linux/rhashtable.h", i32 755, i32 10}
!141 = !{ptr @.str.43, !140, !"<string literal>", i1 false, i1 false}
!142 = distinct !{null, !143, !"__warned", i1 false, i1 false}
!143 = !{!"../include/linux/rhashtable.h", i32 732, i32 2}
!144 = distinct !{null, !145, !"__warned", i1 false, i1 false}
!145 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!146 = !{ptr @.str.45, !145, !"<string literal>", i1 false, i1 false}
!147 = !{ptr @.str.46, !145, !"<string literal>", i1 false, i1 false}
!148 = distinct !{null, !149, !"__warned", i1 false, i1 false}
!149 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!150 = !{ptr @.str.47, !149, !"<string literal>", i1 false, i1 false}
!151 = distinct !{null, !152, !"__warned", i1 false, i1 false}
!152 = !{!"../include/linux/rhashtable.h", i32 377, i32 19}
!153 = !{ptr @.str.48, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 644, i32 3}
!155 = !{ptr @.str.49, !154, !"<string literal>", i1 false, i1 false}
!156 = !{ptr @del_hw_flow_group._entry, !154, !"_entry", i1 false, i1 false}
!157 = !{ptr @del_hw_flow_group._entry_ptr, !154, !"_entry_ptr", i1 false, i1 false}
!158 = distinct !{null, !159, !"__already_done", i1 false, i1 false}
!159 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h", i32 150, i32 1}
!160 = distinct !{null, !159, !"__warned", i1 false, i1 false}
!161 = distinct !{null, !162, !"__warned", i1 false, i1 false}
!162 = !{!"../include/linux/rhashtable.h", i32 1076, i32 8}
!163 = distinct !{null, !164, !"__warned", i1 false, i1 false}
!164 = !{!"../include/linux/rhashtable.h", i32 1085, i32 16}
!165 = distinct !{null, !166, !"__warned", i1 false, i1 false}
!166 = !{!"../include/linux/rhashtable.h", i32 1019, i32 12}
!167 = distinct !{null, !168, !"__warned", i1 false, i1 false}
!168 = !{!"../include/linux/rhashtable.h", i32 1026, i32 11}
!169 = distinct !{null, !170, !"__warned", i1 false, i1 false}
!170 = !{!"../include/linux/rhashtable.h", i32 1032, i32 9}
!171 = distinct !{null, !172, !"__warned", i1 false, i1 false}
!172 = !{!"../include/linux/rhashtable.h", i32 1036, i32 11}
!173 = distinct !{null, !174, !"__warned", i1 false, i1 false}
!174 = !{!"../include/linux/rhashtable.h", i32 1004, i32 2}
!175 = distinct !{null, !176, !"__already_done", i1 false, i1 false}
!176 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h", i32 99, i32 1}
!177 = distinct !{null, !176, !"__warned", i1 false, i1 false}
!178 = !{ptr @.str.55, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 441, i32 4}
!180 = !{ptr @.str.56, !179, !"<string literal>", i1 false, i1 false}
!181 = !{ptr @check_valid_spec._entry, !179, !"_entry", i1 false, i1 false}
!182 = !{ptr @check_valid_spec._entry_ptr, !179, !"_entry_ptr", i1 false, i1 false}
!183 = distinct !{null, !184, !"__warned", i1 false, i1 false}
!184 = !{!"../include/linux/rhashtable.h", i32 594, i32 8}
!185 = distinct !{null, !186, !"__warned", i1 false, i1 false}
!186 = !{!"../include/linux/rhashtable.h", i32 614, i32 8}
!187 = distinct !{null, !188, !"__warned", i1 false, i1 false}
!188 = !{!"../include/linux/rhashtable.h", i32 369, i32 19}
!189 = !{ptr @.str.58, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1590, i32 3}
!191 = !{ptr @.str.59, !190, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @check_conflicting_ftes._entry, !190, !"_entry", i1 false, i1 false}
!193 = !{ptr @check_conflicting_ftes._entry_ptr, !190, !"_entry_ptr", i1 false, i1 false}
!194 = !{ptr @.str.61, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1597, i32 3}
!196 = !{ptr @check_conflicting_ftes._entry.60, !195, !"_entry", i1 false, i1 false}
!197 = !{ptr @check_conflicting_ftes._entry_ptr.62, !195, !"_entry_ptr", i1 false, i1 false}
!198 = distinct !{null, !199, !"count", i1 false, i1 false}
!199 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1340, i32 13}
!200 = distinct !{null, !201, !"dst", i1 false, i1 false}
!201 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 1341, i32 13}
!202 = distinct !{null, !203, !"__already_done", i1 false, i1 false}
!203 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h", i32 303, i32 1}
!204 = distinct !{null, !203, !"__warned", i1 false, i1 false}
!205 = distinct !{null, !206, !"__already_done", i1 false, i1 false}
!206 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h", i32 180, i32 1}
!207 = distinct !{null, !206, !"__warned", i1 false, i1 false}
!208 = distinct !{null, !209, !"__already_done", i1 false, i1 false}
!209 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h", i32 273, i32 1}
!210 = distinct !{null, !209, !"__warned", i1 false, i1 false}
!211 = !{ptr @.str.63, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 541, i32 3}
!213 = !{ptr @.str.64, !212, !"<string literal>", i1 false, i1 false}
!214 = !{ptr @modify_fte._entry, !212, !"_entry", i1 false, i1 false}
!215 = !{ptr @modify_fte._entry_ptr, !212, !"_entry_ptr", i1 false, i1 false}
!216 = !{ptr @.str.65, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 605, i32 4}
!218 = !{ptr @.str.66, !217, !"<string literal>", i1 false, i1 false}
!219 = !{ptr @del_hw_fte._entry, !217, !"_entry", i1 false, i1 false}
!220 = !{ptr @del_hw_fte._entry_ptr, !217, !"_entry_ptr", i1 false, i1 false}
!221 = distinct !{null, !222, !"__already_done", i1 false, i1 false}
!222 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.h", i32 257, i32 1}
!223 = distinct !{null, !222, !"__warned", i1 false, i1 false}
!224 = !{ptr @.str.67, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2166, i32 3}
!226 = !{ptr @.str.68, !225, !"<string literal>", i1 false, i1 false}
!227 = !{ptr @disconnect_flow_table._entry, !225, !"_entry", i1 false, i1 false}
!228 = !{ptr @disconnect_flow_table._entry_ptr, !225, !"_entry_ptr", i1 false, i1 false}
!229 = !{ptr @.str.69, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2130, i32 3}
!231 = !{ptr @update_root_ft_destroy._entry, !230, !"_entry", i1 false, i1 false}
!232 = !{ptr @update_root_ft_destroy._entry_ptr, !230, !"_entry_ptr", i1 false, i1 false}
!233 = !{ptr @create_root_ns.__key, !234, !"__key", i1 false, i1 false}
!234 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2532, i32 2}
!235 = !{ptr @.str.70, !234, !"<string literal>", i1 false, i1 false}
!236 = distinct !{null, !237, !"root_fs", i1 false, i1 false}
!237 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 152, i32 3}
!238 = !{ptr @.str.98, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 2606, i32 3}
!240 = !{ptr @.str.99, !239, !"<string literal>", i1 false, i1 false}
!241 = !{ptr @create_anchor_flow_table._entry, !239, !"_entry", i1 false, i1 false}
!242 = !{ptr @create_anchor_flow_table._entry_ptr, !239, !"_entry_ptr", i1 false, i1 false}
!243 = distinct !{null, !244, !"rdma_rx_root_fs", i1 false, i1 false}
!244 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 222, i32 30}
!245 = distinct !{null, !246, !"rdma_tx_root_fs", i1 false, i1 false}
!246 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 254, i32 30}
!247 = distinct !{null, !248, !"egress_root_fs", i1 false, i1 false}
!248 = !{!"../drivers/net/ethernet/mellanox/mlx5/core/fs_core.c", i32 189, i32 30}
!249 = !{!"sp"}
!250 = !{i32 1, !"wchar_size", i32 2}
!251 = !{i32 1, !"min_enum_size", i32 4}
!252 = !{i32 8, !"branch-target-enforcement", i32 0}
!253 = !{i32 8, !"sign-return-address", i32 0}
!254 = !{i32 8, !"sign-return-address-all", i32 0}
!255 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!256 = !{i32 7, !"uwtable", i32 1}
!257 = !{i32 7, !"frame-pointer", i32 2}
!258 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!259 = !{!"branch_weights", i32 2000, i32 1}
!260 = !{i64 2148442559, i64 2148442591, i64 2148442620, i64 2148442654, i64 2148442685, i64 2148442708}
!261 = !{!"branch_weights", i32 1, i32 2000}
!262 = !{i64 2148530560}
!263 = !{i64 2148445024, i64 2148445056, i64 2148445085, i64 2148445119, i64 2148445150, i64 2148445173}
!264 = !{i8 0, i8 2}
!265 = !{i64 2148441029, i64 2148441055, i64 2148441084, i64 2148441118, i64 2148441149, i64 2148441172}
!266 = !{i64 2150190695}
!267 = !{i64 2148254422, i64 2148254427, i64 2148254440, i64 2148254484, i64 2148254518, i64 2148254539}
!268 = !{i64 2159075826}
!269 = !{i64 2159076021}
!270 = !{i64 2150248797}
!271 = !{i64 2150249833}
!272 = !{!"auto-init"}
!273 = !{i64 2150240238}
!274 = !{i64 2150240504}
!275 = !{i64 2159039406}
!276 = !{i64 2159039601}
!277 = !{i64 2159055585}
!278 = !{i64 2159059841}
!279 = !{i64 2158846579}
!280 = !{i64 2153545247}
!281 = !{!"branch_weights", i32 2146410443, i32 1073205}
!282 = !{i64 2148449887, i64 2148449919, i64 2148449948, i64 2148449982, i64 2148450013, i64 2148450036}
!283 = !{i64 2148538968}
!284 = !{i64 2153545407}
!285 = !{i64 2153545684}
!286 = !{i64 2153545526}
!287 = !{i64 2153545889}
!288 = !{i64 2153546952, i64 2153547444, i64 2153546989, i64 2153547045, i64 2153547079, i64 2153547103, i64 2153547144, i64 2153547165, i64 2153547193, i64 2153547227}
!289 = !{i64 2148537855}
!290 = !{i64 2148448274, i64 2148448306, i64 2148448335, i64 2148448369, i64 2148448400, i64 2148448423}
!291 = !{i64 2153548347}
!292 = !{i64 2158807372}
!293 = !{i64 2158809671}
!294 = !{i64 2159092008}
!295 = !{i64 2159092203}
!296 = !{i64 2158877614}
!297 = !{i64 2148443494, i64 2148443520, i64 2148443549, i64 2148443583, i64 2148443614, i64 2148443637}
!298 = !{i64 926542, i64 926566, i64 926587, i64 926604, i64 926621}
!299 = !{i64 2158814299}
!300 = !{i64 2158817733}
!301 = !{i64 2159108388}
!302 = !{i64 2159108605}
!303 = !{i64 2159145046}
!304 = !{i64 2159145249}
!305 = !{i64 2159161462}
!306 = !{i64 2159161665}
!307 = !{i64 2159128710}
!308 = !{i64 2159128909}
