; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/neterion/vxge/vxge-main.c_pt.bc'
source_filename = "../drivers/net/ethernet/neterion/vxge/vxge-main.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.125 }
%union.anon.125 = type { ptr }
%struct.kparam_array = type { i32, i32, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.pci_driver = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { ptr, ptr }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pci_error_handlers = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vxge_hw_uld_cbs = type { ptr, ptr, ptr }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.vxgedev = type { ptr, ptr, ptr, [128 x i32], i32, %struct.vxge_config, i32, i32, %struct.timer_list, %struct.timer_list, i16, i8, ptr, ptr, [68 x [80 x i8]], i32, i32, i32, %struct.napi_struct, i32, i32, ptr, [17 x ptr], ptr, %struct.vxge_sw_stats, i32, [17 x i8], i64, i32, i32, i32, [32 x i8], %struct.work_struct }
%struct.vxge_config = type { i32, i32, i32, i32, i32, i24, i32, i32, i32, %struct.vxge_hw_device_hw_info }
%struct.vxge_hw_device_hw_info = type { i32, i64, i32, i64, %struct.vxge_hw_device_version, %struct.vxge_hw_device_date, %struct.vxge_hw_device_version, %struct.vxge_hw_device_date, [64 x i8], [64 x i8], [64 x i8], [17 x [6 x i8]], [17 x [6 x i8]] }
%struct.vxge_hw_device_version = type { i32, i32, i32, [32 x i8] }
%struct.vxge_hw_device_date = type { i32, i32, i32, [32 x i8] }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vxge_sw_stats = type { i32, i32, i32, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.146, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.hlist_head = type { ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.146 = type { ptr }
%struct.firmware = type { i32, ptr, ptr }
%struct.vxge_drv_config = type { i32, i32, i32, i32 }
%struct.vxge_hw_device_attr = type { ptr, ptr, ptr }
%struct.eprom_image = type { i8, i8, i8, i16 }
%struct.pci_bus = type { %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, [4 x ptr], %struct.list_head, %struct.resource, ptr, ptr, ptr, i8, i8, i8, i8, i32, [48 x i8], i16, i16, ptr, %struct.device, ptr, ptr, i8 }
%struct.vxge_hw_device_config = type { i32, i32, i32, i8, [17 x %struct.vxge_hw_vp_config] }
%struct.vxge_hw_vp_config = type { i32, i32, %struct.vxge_hw_ring_config, %struct.vxge_hw_fifo_config, %struct.vxge_hw_tim_intr_config, %struct.vxge_hw_tim_intr_config, i32, i32 }
%struct.vxge_hw_ring_config = type { i32, i32, i32, i32, i64 }
%struct.vxge_hw_fifo_config = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.vxge_hw_tim_intr_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__vxge_hw_device = type { i32, ptr, ptr, ptr, %struct.vxge_hw_device_config, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, [17 x ptr], [17 x ptr], [17 x ptr], ptr, ptr, [40 x i8], [17 x %struct.__vxge_hw_virtualpath], i64, i64, i32, [4 x i64], [4 x i32], %struct.__vxge_hw_blockpool, %struct.vxge_hw_device_stats, i32, i32, i32, i32, [8 x i16], [56 x i8] }
%struct.__vxge_hw_virtualpath = type { i32, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i64, i64, i64, i64, [48 x i8], ptr, [124 x i8], ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.spinlock, [56 x i8] }
%struct.__vxge_hw_blockpool = type { ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head }
%struct.vxge_hw_device_stats = type { ptr, %struct.vxge_hw_device_stats_hw_info, %struct.vxge_hw_device_stats_sw_err, %struct.vxge_hw_device_stats_sw_info }
%struct.vxge_hw_device_stats_hw_info = type <{ [17 x ptr], [17 x %struct.vxge_hw_vpath_stats_hw_info] }>
%struct.vxge_hw_vpath_stats_hw_info = type { i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vxge_hw_xmac_vpath_tx_stats, %struct.vxge_hw_xmac_vpath_rx_stats, i64, i32, i32, i32, i32, i16, [6 x i8], i32, i32, i16, [6 x i8], i16, i16, i16, i16, i64, i64, i64 }
%struct.vxge_hw_xmac_vpath_tx_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i64, i64, i64 }
%struct.vxge_hw_xmac_vpath_rx_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i16, i16, i16, i16, i64 }
%struct.vxge_hw_device_stats_sw_err = type { i32 }
%struct.vxge_hw_device_stats_sw_info = type { i32, i32, i32, i32, [17 x %struct.vxge_hw_vpath_stats_sw_info] }
%struct.vxge_hw_vpath_stats_sw_info = type { i32, %struct.vxge_hw_vpath_stats_sw_err, %struct.vxge_hw_vpath_stats_sw_ring_info, %struct.vxge_hw_vpath_stats_sw_fifo_info }
%struct.vxge_hw_vpath_stats_sw_err = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vxge_hw_vpath_stats_sw_ring_info = type { %struct.vxge_hw_vpath_stats_sw_common_info, [16 x i32] }
%struct.vxge_hw_vpath_stats_sw_common_info = type { i32, i32, i32, i32, i32 }
%struct.vxge_hw_vpath_stats_sw_fifo_info = type { %struct.vxge_hw_vpath_stats_sw_common_info, i32, i32, [16 x i32] }
%struct.vxge_vpath = type { %struct.vxge_fifo, %struct.vxge_ring, ptr, i32, i32, i32, i32, ptr, [6 x i8], [6 x i8], i16, i16, %struct.list_head, i32, i32, [72 x i8] }
%struct.vxge_fifo = type { ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, %struct.vxge_fifo_stats, [24 x i8] }
%struct.vxge_fifo_stats = type { %struct.u64_stats_sync, i64, i64, i32, i32, i32, i32 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.vxge_ring = type { ptr, ptr, ptr, i32, i32, i32, i8, i32, i32, %struct.napi_struct, ptr, i32, i32, i32, %struct.vxge_ring_stats, [24 x i8] }
%struct.vxge_ring_stats = type { %struct.u64_stats_sync, i64, i64, i64, i32, i32, i32, i32, i32 }
%struct.vxge_mac_addrs = type { %struct.list_head, i64, i64, i32 }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.131, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.145, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.131 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.rb_root = type { ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.possible_net_t = type { ptr }
%union.anon.145 = type { ptr }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.netdev_queue = type { ptr, ptr, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, ptr, [88 x i8], %struct.spinlock, i32, i32, i32, [72 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [116 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [88 x i8] }
%struct.__vxge_hw_vpath_handle = type { %struct.list_head, ptr }
%struct.vxge_hw_rth_hash_types = type { i8 }
%struct.vxge_hw_vpath_attr = type { i32, %struct.vxge_hw_ring_attr, %struct.vxge_hw_fifo_attr }
%struct.vxge_hw_ring_attr = type { ptr, ptr, ptr, ptr, i32 }
%struct.vxge_hw_fifo_attr = type { ptr, ptr, ptr, i32 }
%struct.msix_entry = type { i32, i16 }
%struct.vxge_msix_entry = type { i16, i16, i16, ptr }
%struct.macInfo = type { [6 x i8], [6 x i8], i32, i32 }
%struct.sk_buff = type { %union.anon.50, %union.anon.53, %union.anon.54, [48 x i8], %union.anon.55, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.57, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { ptr, ptr, %union.anon.52 }
%union.anon.52 = type { ptr }
%union.anon.53 = type { ptr }
%union.anon.54 = type { i64 }
%union.anon.55 = type { %struct.anon.56 }
%struct.anon.56 = type { i32, ptr }
%union.anon.57 = type { %struct.anon.58 }
%struct.anon.58 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.59, i32, i32, i32, i16, i16, %union.anon.61, i32, %union.anon.62, %union.anon.63, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.59 = type { i32 }
%union.anon.61 = type { i32 }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.vxge_hw_fifo_txd = type { i64, i64, i64, i64 }
%struct.page = type { i32, %union.anon.2, %union.anon.124, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.124 = type { %struct.atomic_t }
%struct.vxge_tx_priv = type { ptr, [18 x i32] }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.netdev_hw_addr = type { %struct.list_head, %struct.rb_node, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.ifreq = type { %union.anon.132, %union.anon.133 }
%union.anon.132 = type { [16 x i8] }
%union.anon.133 = type { %struct.ifmap }
%struct.ifmap = type { i32, i32, i16, i8, i8, i8 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.vxge_rx_priv = type { ptr, ptr, i32, i32 }
%struct.vxge_hw_ring_rxd_1 = type { i64, i64, i64, i64 }
%struct.__vxge_hw_fifo = type { %struct.__vxge_hw_channel, ptr, ptr, ptr, ptr, i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, ptr, ptr, [48 x i8], ptr, [124 x i8] }
%struct.__vxge_hw_channel = type { %struct.list_head, i32, ptr, ptr, i32, i32, ptr, i32, i32, ptr, [84 x i8], i32, [124 x i8], i32, ptr, i32, ptr, i32, ptr, ptr, i32, ptr, [92 x i8] }
%struct.__vxge_hw_ring = type { %struct.__vxge_hw_channel, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i64, i64, ptr, ptr, ptr, [28 x i8], ptr, ptr, [120 x i8] }

@__UNIQUE_ID_file496 = internal constant [50 x i8] c"vxge.file=drivers/net/ethernet/neterion/vxge/vxge\00", section ".modinfo", align 1
@__UNIQUE_ID_license497 = internal constant [26 x i8] c"vxge.license=Dual BSD/GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_description498 = internal constant [82 x i8] c"vxge.description=Neterion's X3100 Series 10GbE PCIe I/OVirtualized Server Adapter\00", section ".modinfo", align 1
@__param_str_vlan_tag_strip = internal constant [20 x i8] c"vxge.vlan_tag_strip\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@vlan_tag_strip = internal global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@__param_vlan_tag_strip = internal constant %struct.kernel_param { ptr @__param_str_vlan_tag_strip, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.125 { ptr @vlan_tag_strip } }, section "__param", align 4
@__UNIQUE_ID_vlan_tag_striptype499 = internal constant [33 x i8] c"vxge.parmtype=vlan_tag_strip:int\00", section ".modinfo", align 1
@__param_str_addr_learn_en = internal constant [19 x i8] c"vxge.addr_learn_en\00", align 1
@addr_learn_en = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_addr_learn_en = internal constant %struct.kernel_param { ptr @__param_str_addr_learn_en, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.125 { ptr @addr_learn_en } }, section "__param", align 4
@__UNIQUE_ID_addr_learn_entype500 = internal constant [32 x i8] c"vxge.parmtype=addr_learn_en:int\00", section ".modinfo", align 1
@__param_str_max_config_port = internal constant [21 x i8] c"vxge.max_config_port\00", align 1
@max_config_port = internal global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@__param_max_config_port = internal constant %struct.kernel_param { ptr @__param_str_max_config_port, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.125 { ptr @max_config_port } }, section "__param", align 4
@__UNIQUE_ID_max_config_porttype501 = internal constant [34 x i8] c"vxge.parmtype=max_config_port:int\00", section ".modinfo", align 1
@__param_str_max_config_vpath = internal constant [22 x i8] c"vxge.max_config_vpath\00", align 1
@max_config_vpath = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@__param_max_config_vpath = internal constant %struct.kernel_param { ptr @__param_str_max_config_vpath, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.125 { ptr @max_config_vpath } }, section "__param", align 4
@__UNIQUE_ID_max_config_vpathtype502 = internal constant [35 x i8] c"vxge.parmtype=max_config_vpath:int\00", section ".modinfo", align 1
@__param_str_max_mac_vpath = internal constant [19 x i8] c"vxge.max_mac_vpath\00", align 1
@max_mac_vpath = internal global { i32, [28 x i8] } { i32 30, [28 x i8] zeroinitializer }, align 32
@__param_max_mac_vpath = internal constant %struct.kernel_param { ptr @__param_str_max_mac_vpath, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.125 { ptr @max_mac_vpath } }, section "__param", align 4
@__UNIQUE_ID_max_mac_vpathtype503 = internal constant [32 x i8] c"vxge.parmtype=max_mac_vpath:int\00", section ".modinfo", align 1
@__param_str_max_config_dev = internal constant [20 x i8] c"vxge.max_config_dev\00", align 1
@max_config_dev = internal global { i32, [28 x i8] } { i32 255, [28 x i8] zeroinitializer }, align 32
@__param_max_config_dev = internal constant %struct.kernel_param { ptr @__param_str_max_config_dev, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.125 { ptr @max_config_dev } }, section "__param", align 4
@__UNIQUE_ID_max_config_devtype504 = internal constant [33 x i8] c"vxge.parmtype=max_config_dev:int\00", section ".modinfo", align 1
@__param_str_bw_percentage = internal constant [19 x i8] c"vxge.bw_percentage\00", align 1
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 4
@__param_arr_bw_percentage = internal constant %struct.kparam_array { i32 17, i32 4, ptr null, ptr @param_ops_uint, ptr @bw_percentage }, align 4
@__param_bw_percentage = internal constant %struct.kernel_param { ptr @__param_str_bw_percentage, ptr null, ptr @param_array_ops, i16 0, i8 -1, i8 0, %union.anon.125 { ptr @__param_arr_bw_percentage } }, section "__param", align 4
@__UNIQUE_ID_bw_percentagetype505 = internal constant [42 x i8] c"vxge.parmtype=bw_percentage:array of uint\00", section ".modinfo", align 1
@vxge_fw_upgrade._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 4120, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: Firmware file '%s' not found\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"vxge_fw_upgrade\00", [16 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"drivers/net/ethernet/neterion/vxge/vxge-main.c\00", [49 x i8] zeroinitializer }, align 32
@vxge_fw_upgrade._entry_ptr = internal global ptr @vxge_fw_upgrade._entry, section ".printk_index", align 4
@.str.3 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"vxge\00", [27 x i8] zeroinitializer }, align 32
@vxge_fw_upgrade._entry.4 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.1, ptr @.str.2, i32 4129, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s: FW image download to adapter failed '%s'.\0A\00", [49 x i8] zeroinitializer }, align 32
@vxge_fw_upgrade._entry_ptr.6 = internal global ptr @vxge_fw_upgrade._entry.4, section ".printk_index", align 4
@vxge_fw_upgrade._entry.7 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.1, ptr @.str.2, i32 4139, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s: Upgrade read version failed '%s'.\0A\00", [57 x i8] zeroinitializer }, align 32
@vxge_fw_upgrade._entry_ptr.9 = internal global ptr @vxge_fw_upgrade._entry.7, section ".printk_index", align 4
@vxge_fw_upgrade._entry.10 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.11, ptr @.str.1, ptr @.str.2, i32 4158, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\015Upgrade to firmware version %d.%d.%d commencing\0A\00", [45 x i8] zeroinitializer }, align 32
@vxge_fw_upgrade._entry_ptr.12 = internal global ptr @vxge_fw_upgrade._entry.10, section ".printk_index", align 4
@vxge_fw_upgrade._entry.13 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.1, ptr @.str.2, i32 4164, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: Upgrade commit failed '%s'.\0A\00", [63 x i8] zeroinitializer }, align 32
@vxge_fw_upgrade._entry_ptr.15 = internal global ptr @vxge_fw_upgrade._entry.13, section ".printk_index", align 4
@vxge_fw_upgrade._entry.16 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.1, ptr @.str.2, i32 4171, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [128 x i8], [32 x i8] } { [128 x i8] c"\015Upgrade of firmware successful!  Adapter must be hard reset before using, thus requiring a system reboot or a hotplug event.\0A\00", [32 x i8] zeroinitializer }, align 32
@vxge_fw_upgrade._entry_ptr.18 = internal global ptr @vxge_fw_upgrade._entry.16, section ".printk_index", align 4
@vxge_driver = internal global { %struct.pci_driver, [36 x i8] } { %struct.pci_driver { %struct.list_head zeroinitializer, ptr @.str.3, ptr @vxge_id_table, ptr @vxge_probe, ptr @vxge_remove, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @vxge_err_handler, ptr null, ptr null, %struct.device_driver { ptr null, ptr null, ptr null, ptr null, i8 0, i32 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @vxge_pm_ops, ptr null, ptr null }, %struct.pci_dynids zeroinitializer }, [36 x i8] zeroinitializer }, align 32
@driver_config = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__initcall__kmod_vxge__507_4808_vxge_starter6 = internal global ptr @vxge_starter, section ".initcall6.init", align 4
@__exitcall_vxge_closer = internal global ptr @vxge_closer, section ".exitcall.exit", align 4
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 4
@bw_percentage = internal global { [17 x i32], [60 x i8] } { [17 x i32] [i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255], [60 x i8] zeroinitializer }, align 32
@vxge_id_table = internal constant { [3 x %struct.pci_device_id], [32 x i8] } { [3 x %struct.pci_device_id] [%struct.pci_device_id { i32 6101, i32 22323, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 6101, i32 22579, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id zeroinitializer], [32 x i8] zeroinitializer }, align 32
@vxge_err_handler = internal constant { %struct.pci_error_handlers, [40 x i8] } { %struct.pci_error_handlers { ptr @vxge_io_error_detected, ptr null, ptr @vxge_io_slot_reset, ptr null, ptr null, ptr @vxge_io_resume }, [40 x i8] zeroinitializer }, align 32
@vxge_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr @vxge_pm_suspend, ptr @vxge_pm_resume, ptr @vxge_pm_suspend, ptr @vxge_pm_resume, ptr @vxge_pm_suspend, ptr @vxge_pm_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@vxge_probe.bus = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@vxge_probe.device = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@vxge_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.20, ptr @.str.2, i32 4296, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%s:%d\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"vxge_probe\00", [21 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr = internal global ptr @vxge_probe._entry, section ".printk_index", align 4
@vxge_probe._entry.21 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.20, ptr @.str.2, i32 4317, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: Configured %d of %d devices\0A\00", [63 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.23 = internal global ptr @vxge_probe._entry.21, section ".printk_index", align 4
@vxge_probe._entry.24 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.20, ptr @.str.2, i32 4340, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"device_config : malloc failed %s %d\0A\00", [59 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.26 = internal global ptr @vxge_probe._entry.24, section ".printk_index", align 4
@vxge_probe._entry.27 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.20, ptr @.str.2, i32 4349, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.28 = internal global ptr @vxge_probe._entry.27, section ".printk_index", align 4
@vxge_probe._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.20, ptr @.str.2, i32 4366, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s : can not enable PCI device\0A\00", [32 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.31 = internal global ptr @vxge_probe._entry.29, section ".printk_index", align 4
@vxge_probe._entry.32 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.20, ptr @.str.2, i32 4372, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"%s : using 64bit DMA\0A\00", [42 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.34 = internal global ptr @vxge_probe._entry.32, section ".printk_index", align 4
@vxge_probe._entry.35 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.20, ptr @.str.2, i32 4381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s : request regions failed\0A\00", [35 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.37 = internal global ptr @vxge_probe._entry.35, section ".printk_index", align 4
@vxge_probe._entry.38 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.20, ptr @.str.2, i32 4390, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s : cannot remap io memory bar0\0A\00", [62 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.40 = internal global ptr @vxge_probe._entry.38, section ".printk_index", align 4
@vxge_probe._entry.41 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.42, ptr @.str.20, ptr @.str.2, i32 4397, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"pci ioremap bar0: %p:0x%llx\0A\00", [35 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.43 = internal global ptr @vxge_probe._entry.41, section ".printk_index", align 4
@vxge_probe._entry.44 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.20, ptr @.str.2, i32 4404, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"%s: Reading of hardware info failed.Please try upgrading the firmware.\0A\00", [56 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.46 = internal global ptr @vxge_probe._entry.44, section ".printk_index", align 4
@vxge_probe._entry.47 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.20, ptr @.str.2, i32 4412, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: No vpaths available in device\0A\00", [61 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.49 = internal global ptr @vxge_probe._entry.47, section ".printk_index", align 4
@vxge_probe._entry.50 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.20, ptr @.str.2, i32 4419, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s:%d  Vpath mask = %llx\0A\00", [38 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.52 = internal global ptr @vxge_probe._entry.50, section ".printk_index", align 4
@vxge_probe._entry.53 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.54, ptr @.str.20, ptr @.str.2, i32 4442, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Failed in enabling SRIOV mode: %d\0A\0A\00", [60 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.55 = internal global ptr @vxge_probe._entry.53, section ".printk_index", align 4
@vxge_probe._entry.56 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.20, ptr @.str.2, i32 4453, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: No more vpaths to configure\0A\00", [63 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.58 = internal global ptr @vxge_probe._entry.56, section ".printk_index", align 4
@vxge_callbacks = internal constant { %struct.vxge_hw_uld_cbs, [20 x i8] } { %struct.vxge_hw_uld_cbs { ptr @vxge_callback_link_up, ptr @vxge_callback_link_down, ptr @vxge_callback_crit_err }, [20 x i8] zeroinitializer }, align 32
@vxge_probe._entry.59 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.60, ptr @.str.20, ptr @.str.2, i32 4464, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Failed to initialize device (%d)\0A\00", [62 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.61 = internal global ptr @vxge_probe._entry.59, section ".printk_index", align 4
@vxge_probe._entry.62 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.20, ptr @.str.2, i32 4478, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s: Reading of EPROM failed\0A\00", [35 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.64 = internal global ptr @vxge_probe._entry.62, section ".printk_index", align 4
@vxge_probe._entry.65 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.66, ptr @.str.20, ptr @.str.2, i32 4491, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: EPROM %d, version %d.%d.%d.%d\0A\00", [61 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.67 = internal global ptr @vxge_probe._entry.65, section ".printk_index", align 4
@vxge_probe._entry.68 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.20, ptr @.str.2, i32 4499, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"%s: FCS stripping is enabled in MAC failing driver load\0A\00", [39 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.70 = internal global ptr @vxge_probe._entry.68, section ".printk_index", align 4
@vxge_probe._entry.71 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.72, ptr @.str.20, ptr @.str.2, i32 4516, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: HWTS enable failed\0A\00", [40 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.73 = internal global ptr @vxge_probe._entry.71, section ".printk_index", align 4
@vpath_selector = internal constant { [17 x i16], [62 x i8] } { [17 x i16] [i16 0, i16 1, i16 3, i16 3, i16 7, i16 7, i16 7, i16 7, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 31], [62 x i8] zeroinitializer }, align 32
@vxge_probe._entry.74 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.20, ptr @.str.2, i32 4599, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: SERIAL NUMBER: %s\0A\00", [41 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.76 = internal global ptr @vxge_probe._entry.74, section ".printk_index", align 4
@vxge_probe._entry.77 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.20, ptr @.str.2, i32 4602, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%s: PART NUMBER: %s\0A\00", [43 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.79 = internal global ptr @vxge_probe._entry.77, section ".printk_index", align 4
@vxge_probe._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.20, ptr @.str.2, i32 4605, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: Neterion %s Server Adapter\0A\00", [32 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.82 = internal global ptr @vxge_probe._entry.80, section ".printk_index", align 4
@vxge_probe._entry.83 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.20, ptr @.str.2, i32 4608, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"%s: MAC ADDR: %pM\0A\00", [45 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.85 = internal global ptr @vxge_probe._entry.83, section ".printk_index", align 4
@vxge_probe._entry.86 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.20, ptr @.str.2, i32 4611, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: Link Width x%d\0A\00", [44 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.88 = internal global ptr @vxge_probe._entry.86, section ".printk_index", align 4
@vxge_probe._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.20, ptr @.str.2, i32 4616, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%s: Firmware version : %s Date : %s\0A\00", [59 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.91 = internal global ptr @vxge_probe._entry.89, section ".printk_index", align 4
@vxge_probe._entry.92 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.93, ptr @.str.20, ptr @.str.2, i32 4622, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: Single Function Mode Enabled\0A\00", [62 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.94 = internal global ptr @vxge_probe._entry.92, section ".printk_index", align 4
@vxge_probe._entry.95 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.96, ptr @.str.20, ptr @.str.2, i32 4626, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: Multi Function Mode Enabled\0A\00", [63 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.97 = internal global ptr @vxge_probe._entry.95, section ".printk_index", align 4
@vxge_probe._entry.98 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.20, ptr @.str.2, i32 4630, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: Single Root IOV Mode Enabled\0A\00", [62 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.100 = internal global ptr @vxge_probe._entry.98, section ".printk_index", align 4
@vxge_probe._entry.101 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.102, ptr @.str.20, ptr @.str.2, i32 4634, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: Multi Root IOV Mode Enabled\0A\00", [63 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.103 = internal global ptr @vxge_probe._entry.101, section ".printk_index", align 4
@vxge_probe._entry.104 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.105, ptr @.str.20, ptr @.str.2, i32 4651, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: mac_addr_list : memory allocation failed\0A\00", [50 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.106 = internal global ptr @vxge_probe._entry.104, section ".printk_index", align 4
@vxge_probe._entry.107 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.20, ptr @.str.2, i32 4684, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: %s:%d  Exiting...\0A\00", [41 x i8] zeroinitializer }, align 32
@vxge_probe._entry_ptr.109 = internal global ptr @vxge_probe._entry.107, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@vxge_device_config_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.110, ptr @.str.111, ptr @.str.2, i32 3877, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s : Device Config Params \0A\00", [36 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"vxge_device_config_init\00", [40 x i8] zeroinitializer }, align 32
@vxge_device_config_init._entry_ptr = internal global ptr @vxge_device_config_init._entry, section ".printk_index", align 4
@vxge_device_config_init._entry.112 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.113, ptr @.str.111, ptr @.str.2, i32 3879, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"intr_mode : %d\0A\00", [16 x i8] zeroinitializer }, align 32
@vxge_device_config_init._entry_ptr.114 = internal global ptr @vxge_device_config_init._entry.112, section ".printk_index", align 4
@vxge_device_config_init._entry.115 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.116, ptr @.str.111, ptr @.str.2, i32 3881, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"device_poll_millis : %d\0A\00", [39 x i8] zeroinitializer }, align 32
@vxge_device_config_init._entry_ptr.117 = internal global ptr @vxge_device_config_init._entry.115, section ".printk_index", align 4
@vxge_device_config_init._entry.118 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.119, ptr @.str.111, ptr @.str.2, i32 3883, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rth_en : %d\0A\00", [19 x i8] zeroinitializer }, align 32
@vxge_device_config_init._entry_ptr.120 = internal global ptr @vxge_device_config_init._entry.118, section ".printk_index", align 4
@vxge_device_config_init._entry.121 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.122, ptr @.str.111, ptr @.str.2, i32 3885, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rth_it_type : %d\0A\00", [46 x i8] zeroinitializer }, align 32
@vxge_device_config_init._entry_ptr.123 = internal global ptr @vxge_device_config_init._entry.121, section ".printk_index", align 4
@vxge_config_vpaths._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.124, ptr @.str.125, ptr @.str.2, i32 3688, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"%s: Disable tx and rx steering, as single vpath is configured\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"vxge_config_vpaths\00", [45 x i8] zeroinitializer }, align 32
@vxge_config_vpaths._entry_ptr = internal global ptr @vxge_config_vpaths._entry, section ".printk_index", align 4
@vxge_config_vpaths._entry.126 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.127, ptr @.str.125, ptr @.str.2, i32 3705, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: vpath: %d is not available\0A\00", [32 x i8] zeroinitializer }, align 32
@vxge_config_vpaths._entry_ptr.128 = internal global ptr @vxge_config_vpaths._entry.126, section ".printk_index", align 4
@vxge_config_vpaths._entry.129 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.130, ptr @.str.125, ptr @.str.2, i32 3710, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: vpath: %d available\0A\00", [39 x i8] zeroinitializer }, align 32
@vxge_config_vpaths._entry_ptr.131 = internal global ptr @vxge_config_vpaths._entry.129, section ".printk_index", align 4
@vxge_config_vpaths._entry.132 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.133, ptr @.str.125, ptr @.str.2, i32 3717, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"%s: vpath: %d is not configured, max_config_vpath exceeded\0A\00", [36 x i8] zeroinitializer }, align 32
@vxge_config_vpaths._entry_ptr.134 = internal global ptr @vxge_config_vpaths._entry.132, section ".printk_index", align 4
@vxge_callback_link_up._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.136, ptr @.str.2, i32 154, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s: %s:%d\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"vxge_callback_link_up\00", [42 x i8] zeroinitializer }, align 32
@vxge_callback_link_up._entry_ptr = internal global ptr @vxge_callback_link_up._entry, section ".printk_index", align 4
@.str.137 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Link Up\0A\00", [23 x i8] zeroinitializer }, align 32
@vxge_callback_link_up._entry.138 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.136, ptr @.str.2, i32 162, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"%s: %s:%d Exiting...\0A\00", [42 x i8] zeroinitializer }, align 32
@vxge_callback_link_up._entry_ptr.140 = internal global ptr @vxge_callback_link_up._entry.138, section ".printk_index", align 4
@vxge_callback_link_down._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.141, ptr @.str.2, i32 177, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"vxge_callback_link_down\00", [40 x i8] zeroinitializer }, align 32
@vxge_callback_link_down._entry_ptr = internal global ptr @vxge_callback_link_down._entry, section ".printk_index", align 4
@.str.142 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Link Down\0A\00", [21 x i8] zeroinitializer }, align 32
@vxge_callback_link_down._entry.143 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.141, ptr @.str.2, i32 185, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_callback_link_down._entry_ptr.144 = internal global ptr @vxge_callback_link_down._entry.143, section ".printk_index", align 4
@vxge_callback_crit_err._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.145, ptr @.str.2, i32 3532, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"vxge_callback_crit_err\00", [41 x i8] zeroinitializer }, align 32
@vxge_callback_crit_err._entry_ptr = internal global ptr @vxge_callback_crit_err._entry, section ".printk_index", align 4
@vxge_callback_crit_err._entry.146 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.145, ptr @.str.2, i32 3548, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: Slot is frozen\0A\00", [44 x i8] zeroinitializer }, align 32
@vxge_callback_crit_err._entry_ptr.148 = internal global ptr @vxge_callback_crit_err._entry.146, section ".printk_index", align 4
@vxge_callback_crit_err._entry.149 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.145, ptr @.str.2, i32 3552, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s: Encountered Serious Error\0A\00", [33 x i8] zeroinitializer }, align 32
@vxge_callback_crit_err._entry_ptr.151 = internal global ptr @vxge_callback_crit_err._entry.149, section ".printk_index", align 4
@vxge_callback_crit_err._entry.152 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.145, ptr @.str.2, i32 3556, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: Encountered Critical Error\0A\00", [32 x i8] zeroinitializer }, align 32
@vxge_callback_crit_err._entry_ptr.154 = internal global ptr @vxge_callback_crit_err._entry.152, section ".printk_index", align 4
@vxge_callback_crit_err._entry.155 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.145, ptr @.str.2, i32 3587, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_callback_crit_err._entry_ptr.156 = internal global ptr @vxge_callback_crit_err._entry.155, section ".printk_index", align 4
@vxge_device_register._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.157, ptr @.str.158, ptr @.str.2, i32 3370, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s : device allocation failed\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"vxge_device_register\00", [43 x i8] zeroinitializer }, align 32
@vxge_device_register._entry_ptr = internal global ptr @vxge_device_register._entry, section ".printk_index", align 4
@vxge_device_register._entry.159 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.160, ptr @.str.158, ptr @.str.2, i32 3378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: %s:%d  Entering...\0A\00", [40 x i8] zeroinitializer }, align 32
@vxge_device_register._entry_ptr.161 = internal global ptr @vxge_device_register._entry.159, section ".printk_index", align 4
@vxge_netdev_ops = internal constant { %struct.net_device_ops, [80 x i8] } { %struct.net_device_ops { ptr null, ptr null, ptr @vxge_open, ptr @vxge_close, ptr @vxge_xmit, ptr null, ptr null, ptr null, ptr @vxge_set_multicast, ptr @vxge_set_mac_addr, ptr @eth_validate_addr, ptr null, ptr @vxge_ioctl, ptr null, ptr null, ptr null, ptr null, ptr @vxge_change_mtu, ptr null, ptr @vxge_tx_watchdog, ptr @vxge_get_stats64, ptr null, ptr null, ptr null, ptr @vxge_vlan_rx_add_vid, ptr @vxge_vlan_rx_kill_vid, ptr @vxge_netpoll, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @vxge_fix_features, ptr @vxge_set_features, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [80 x i8] zeroinitializer }, align 32
@vxge_device_register.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.162 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"(work_completion)(&vdev->reset_task)\00", [59 x i8] zeroinitializer }, align 32
@vxge_device_register._entry.163 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.158, ptr @.str.2, i32 3416, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s: vpath memory allocation failed\0A\00", [60 x i8] zeroinitializer }, align 32
@vxge_device_register._entry_ptr.165 = internal global ptr @vxge_device_register._entry.163, section ".printk_index", align 4
@vxge_device_register._entry.166 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.167, ptr @.str.158, ptr @.str.2, i32 3422, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s : checksumming enabled\0A\00", [37 x i8] zeroinitializer }, align 32
@vxge_device_register._entry_ptr.168 = internal global ptr @vxge_device_register._entry.166, section ".printk_index", align 4
@vxge_device_register._entry.169 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.170, ptr @.str.158, ptr @.str.2, i32 3434, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s: %s : device registration failed!\0A\00", [58 x i8] zeroinitializer }, align 32
@vxge_device_register._entry_ptr.171 = internal global ptr @vxge_device_register._entry.169, section ".printk_index", align 4
@vxge_device_register._entry.172 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.173, ptr @.str.158, ptr @.str.2, i32 3449, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: Ethernet device registered\0A\00", [32 x i8] zeroinitializer }, align 32
@vxge_device_register._entry_ptr.174 = internal global ptr @vxge_device_register._entry.172, section ".printk_index", align 4
@vxge_device_register._entry.175 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.176, ptr @.str.158, ptr @.str.2, i32 3466, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"%s: device stats clear returnsVXGE_HW_ERR_PRIVILEGED_OPERATION\0A\00", [32 x i8] zeroinitializer }, align 32
@vxge_device_register._entry_ptr.177 = internal global ptr @vxge_device_register._entry.175, section ".printk_index", align 4
@vxge_device_register._entry.178 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.158, ptr @.str.2, i32 3470, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_device_register._entry_ptr.179 = internal global ptr @vxge_device_register._entry.178, section ".printk_index", align 4
@vxge_open._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.180, ptr @.str.2, i32 2694, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"vxge_open\00", [22 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr = internal global ptr @vxge_open._entry, section ".printk_index", align 4
@vxge_open._entry.181 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.182, ptr @.str.180, ptr @.str.2, i32 2707, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s: fatal: Vpath open failed\0A\00", [34 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.183 = internal global ptr @vxge_open._entry.181, section ".printk_index", align 4
@vxge_open._entry.184 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.185, ptr @.str.180, ptr @.str.2, i32 2717, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: fatal: ISR add failed\0A\00", [37 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.186 = internal global ptr @vxge_open._entry.184, section ".printk_index", align 4
@vxge_open._entry.187 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.188, ptr @.str.180, ptr @.str.2, i32 2746, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%s: fatal: RTH configuration failed\0A\00", [59 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.189 = internal global ptr @vxge_open._entry.187, section ".printk_index", align 4
@vxge_open._entry.190 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.191, ptr @.str.180, ptr @.str.2, i32 2752, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016%s: Receive Hashing Offload %s\0A\00", [62 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.192 = internal global ptr @vxge_open._entry.190, section ".printk_index", align 4
@.str.193 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"enabled\00", [24 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"disabled\00", [23 x i8] zeroinitializer }, align 32
@vxge_open._entry.195 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.196, ptr @.str.180, ptr @.str.2, i32 2761, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: fatal: can not set new MTU\0A\00", [32 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.197 = internal global ptr @vxge_open._entry.195, section ".printk_index", align 4
@vxge_open._entry.198 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.199, ptr @.str.180, ptr @.str.2, i32 2769, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%s: MTU is %d\0A\00", [17 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.200 = internal global ptr @vxge_open._entry.198, section ".printk_index", align 4
@vxge_open._entry.201 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.202, ptr @.str.180, ptr @.str.2, i32 2785, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s:%d Enabling multicast failed\0A\00", [63 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.203 = internal global ptr @vxge_open._entry.201, section ".printk_index", align 4
@vxge_open._entry.204 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.205, ptr @.str.180, ptr @.str.2, i32 2820, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s : Can not enable bcast for vpath id %d\0A\00", [53 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.206 = internal global ptr @vxge_open._entry.204, section ".printk_index", align 4
@vxge_open._entry.207 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.208, ptr @.str.180, ptr @.str.2, i32 2826, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s : Can not enable mcast for vpath id %d\0A\00", [53 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.209 = internal global ptr @vxge_open._entry.207, section ".printk_index", align 4
@vxge_open._entry.210 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.180, ptr @.str.2, i32 2888, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_open._entry_ptr.211 = internal global ptr @vxge_open._entry.210, section ".printk_index", align 4
@vxge_open_vpaths.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.212 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"&(&vpath->fifo.stats.syncp)->seq\00", [63 x i8] zeroinitializer }, align 32
@vxge_open_vpaths.__key.213 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.214 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"&(&vpath->ring.stats.syncp)->seq\00", [63 x i8] zeroinitializer }, align 32
@vxge_open_vpaths._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.215, ptr @.str.216, ptr @.str.2, i32 2087, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: vpath: %d failed to open with status: %d\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"vxge_open_vpaths\00", [47 x i8] zeroinitializer }, align 32
@vxge_open_vpaths._entry_ptr = internal global ptr @vxge_open_vpaths._entry, section ".printk_index", align 4
@vxge_xmit_compl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.218, ptr @.str.2, i32 556, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"%s:%d Entered....\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"vxge_xmit_compl\00", [16 x i8] zeroinitializer }, align 32
@vxge_xmit_compl._entry_ptr = internal global ptr @vxge_xmit_compl._entry, section ".printk_index", align 4
@vxge_xmit_compl._entry.219 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.218, ptr @.str.2, i32 572, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: %s:%d fifo_hw = %p dtr = %p tcode = 0x%x\0A\00", [50 x i8] zeroinitializer }, align 32
@vxge_xmit_compl._entry_ptr.221 = internal global ptr @vxge_xmit_compl._entry.219, section ".printk_index", align 4
@vxge_xmit_compl._entry.222 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.223, ptr @.str.218, ptr @.str.2, i32 578, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"%s: %s:%d skb = %p itxd_priv = %p frg_cnt = %d\0A\00", [48 x i8] zeroinitializer }, align 32
@vxge_xmit_compl._entry_ptr.224 = internal global ptr @vxge_xmit_compl._entry.222, section ".printk_index", align 4
@vxge_xmit_compl._entry.225 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.218, ptr @.str.2, i32 584, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"%s: tx: dtr %p completed due to error t_code %01x\0A\00", [45 x i8] zeroinitializer }, align 32
@vxge_xmit_compl._entry_ptr.227 = internal global ptr @vxge_xmit_compl._entry.225, section ".printk_index", align 4
@vxge_xmit_compl._entry.228 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.218, ptr @.str.2, i32 627, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_xmit_compl._entry_ptr.229 = internal global ptr @vxge_xmit_compl._entry.228, section ".printk_index", align 4
@__seqprop_assert.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@.str.230 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/seqlock.h\00", [40 x i8] zeroinitializer }, align 32
@vxge_tx_term._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.231, ptr @.str.2, i32 1041, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"vxge_tx_term\00", [19 x i8] zeroinitializer }, align 32
@vxge_tx_term._entry_ptr = internal global ptr @vxge_tx_term._entry, section ".printk_index", align 4
@vxge_tx_term._entry.232 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.231, ptr @.str.2, i32 1064, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"%s:%d  Exiting...\0A\00", [45 x i8] zeroinitializer }, align 32
@vxge_tx_term._entry_ptr.234 = internal global ptr @vxge_tx_term._entry.232, section ".printk_index", align 4
@vxge_rx_1b_compl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.235, ptr @.str.2, i32 369, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"vxge_rx_1b_compl\00", [47 x i8] zeroinitializer }, align 32
@vxge_rx_1b_compl._entry_ptr = internal global ptr @vxge_rx_1b_compl._entry, section ".printk_index", align 4
@vxge_rx_1b_compl._entry.236 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.237, ptr @.str.235, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: %s:%d  skb = 0x%p\0A\00", [41 x i8] zeroinitializer }, align 32
@vxge_rx_1b_compl._entry_ptr.238 = internal global ptr @vxge_rx_1b_compl._entry.236, section ".printk_index", align 4
@vxge_rx_1b_compl._entry.239 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.240, ptr @.str.235, ptr @.str.2, i32 393, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s: %s:%d  Packet Length = %d\0A\00", [33 x i8] zeroinitializer }, align 32
@vxge_rx_1b_compl._entry_ptr.241 = internal global ptr @vxge_rx_1b_compl._entry.239, section ".printk_index", align 4
@vxge_rx_1b_compl._entry.242 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.243, ptr @.str.235, ptr @.str.2, i32 409, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s: %s :%d Rx T_code is %d\0A\00", [36 x i8] zeroinitializer }, align 32
@vxge_rx_1b_compl._entry_ptr.244 = internal global ptr @vxge_rx_1b_compl._entry.242, section ".printk_index", align 4
@vxge_rx_1b_compl._entry.245 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.246, ptr @.str.235, ptr @.str.2, i32 469, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: %s:%d  skb_up = %p\0A\00", [40 x i8] zeroinitializer }, align 32
@vxge_rx_1b_compl._entry_ptr.247 = internal global ptr @vxge_rx_1b_compl._entry.245, section ".printk_index", align 4
@vxge_rx_1b_compl._entry.248 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.249, ptr @.str.235, ptr @.str.2, i32 485, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%s: vxge_rx_1b_compl: out of memory\0A\00", [59 x i8] zeroinitializer }, align 32
@vxge_rx_1b_compl._entry_ptr.250 = internal global ptr @vxge_rx_1b_compl._entry.248, section ".printk_index", align 4
@vxge_rx_1b_compl._entry.251 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.235, ptr @.str.2, i32 534, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_rx_1b_compl._entry_ptr.252 = internal global ptr @vxge_rx_1b_compl._entry.251, section ".printk_index", align 4
@vxge_rx_alloc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.253, ptr @.str.2, i32 202, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"vxge_rx_alloc\00", [18 x i8] zeroinitializer }, align 32
@vxge_rx_alloc._entry_ptr = internal global ptr @vxge_rx_alloc._entry, section ".printk_index", align 4
@vxge_rx_alloc._entry.254 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.255, ptr @.str.253, ptr @.str.2, i32 211, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: out of memory to allocate SKB\0A\00", [61 x i8] zeroinitializer }, align 32
@vxge_rx_alloc._entry_ptr.256 = internal global ptr @vxge_rx_alloc._entry.254, section ".printk_index", align 4
@vxge_rx_alloc._entry.257 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.258, ptr @.str.253, ptr @.str.2, i32 218, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: %s:%d  Skb : 0x%p\0A\00", [41 x i8] zeroinitializer }, align 32
@vxge_rx_alloc._entry_ptr.259 = internal global ptr @vxge_rx_alloc._entry.257, section ".printk_index", align 4
@vxge_rx_alloc._entry.260 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.253, ptr @.str.2, i32 226, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_rx_alloc._entry_ptr.261 = internal global ptr @vxge_rx_alloc._entry.260, section ".printk_index", align 4
@vxge_rx_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.262, ptr @.str.2, i32 240, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"vxge_rx_map\00", [20 x i8] zeroinitializer }, align 32
@vxge_rx_map._entry_ptr = internal global ptr @vxge_rx_map._entry, section ".printk_index", align 4
@vxge_rx_map._entry.263 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.264, ptr @.str.262, ptr @.str.2, i32 254, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s: %s:%d  1 buffer mode dma_addr = 0x%llx\0A\00", [52 x i8] zeroinitializer }, align 32
@vxge_rx_map._entry_ptr.265 = internal global ptr @vxge_rx_map._entry.263, section ".printk_index", align 4
@vxge_rx_map._entry.266 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.262, ptr @.str.2, i32 259, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_rx_map._entry_ptr.267 = internal global ptr @vxge_rx_map._entry.266, section ".printk_index", align 4
@dma_map_single_attrs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.268 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/dma-mapping.h\00", [36 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", [52 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@vxge_rx_complete._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.270, ptr @.str.2, i32 298, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"vxge_rx_complete\00", [47 x i8] zeroinitializer }, align 32
@vxge_rx_complete._entry_ptr = internal global ptr @vxge_rx_complete._entry, section ".printk_index", align 4
@vxge_rx_complete._entry.271 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.272, ptr @.str.270, ptr @.str.2, i32 312, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s: %s:%d  skb protocol = %d\0A\00", [34 x i8] zeroinitializer }, align 32
@vxge_rx_complete._entry_ptr.273 = internal global ptr @vxge_rx_complete._entry.271, section ".printk_index", align 4
@vxge_rx_complete._entry.274 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.270, ptr @.str.2, i32 320, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_rx_complete._entry_ptr.275 = internal global ptr @vxge_rx_complete._entry.274, section ".printk_index", align 4
@vxge_rx_initial_replenish._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.276, ptr @.str.2, i32 275, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"vxge_rx_initial_replenish\00", [38 x i8] zeroinitializer }, align 32
@vxge_rx_initial_replenish._entry_ptr = internal global ptr @vxge_rx_initial_replenish._entry, section ".printk_index", align 4
@vxge_rx_initial_replenish._entry.277 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.276, ptr @.str.2, i32 287, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_rx_initial_replenish._entry_ptr.278 = internal global ptr @vxge_rx_initial_replenish._entry.277, section ".printk_index", align 4
@vxge_rx_term._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.279, ptr @.str.2, i32 1012, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"vxge_rx_term\00", [19 x i8] zeroinitializer }, align 32
@vxge_rx_term._entry_ptr = internal global ptr @vxge_rx_term._entry, section ".printk_index", align 4
@vxge_rx_term._entry.280 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.279, ptr @.str.2, i32 1024, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_rx_term._entry_ptr.281 = internal global ptr @vxge_rx_term._entry.280, section ".printk_index", align 4
@vxge_add_isr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.282, ptr @.str.283, ptr @.str.2, i32 2446, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: Enabling MSI-X Failed\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"vxge_add_isr\00", [19 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry_ptr = internal global ptr @vxge_add_isr._entry, section ".printk_index", align 4
@vxge_add_isr._entry.284 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.285, ptr @.str.283, ptr @.str.2, i32 2448, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: Defaulting to INTA\0A\00", [40 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry_ptr.286 = internal global ptr @vxge_add_isr._entry.284, section ".printk_index", align 4
@.str.287 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s:vxge:MSI-X %d - Tx - fn:%d vpath:%d\00", [57 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s:vxge:MSI-X %d - Rx - fn:%d vpath:%d\00", [57 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry.289 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.290, ptr @.str.283, ptr @.str.2, i32 2496, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s: MSIX - %d  Registration failed\0A\00", [60 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry_ptr.291 = internal global ptr @vxge_add_isr._entry.289, section ".printk_index", align 4
@vxge_add_isr._entry.292 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.285, ptr @.str.283, ptr @.str.2, i32 2501, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry_ptr.293 = internal global ptr @vxge_add_isr._entry.292, section ".printk_index", align 4
@.str.294 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s:vxge:MSI-X %d - Alarm - fn:%d\00", [63 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry.295 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.296, ptr @.str.283, ptr @.str.2, i32 2536, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: MSIX - %d Registration failed\0A\00", [61 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry_ptr.297 = internal global ptr @vxge_add_isr._entry.295, section ".printk_index", align 4
@vxge_add_isr._entry.298 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.285, ptr @.str.283, ptr @.str.2, i32 2541, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry_ptr.299 = internal global ptr @vxge_add_isr._entry.298, section ".printk_index", align 4
@.str.300 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"%s:vxge:INTA\00", [19 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry.301 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.302, ptr @.str.283, ptr @.str.2, i32 2568, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s %s-%d: ISR registration failed\0A\00", [61 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry_ptr.303 = internal global ptr @vxge_add_isr._entry.301, section ".printk_index", align 4
@.str.304 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"IRQ\00", [28 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry.305 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.306, ptr @.str.283, ptr @.str.2, i32 2573, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"new %s-%d line allocated\0A\00", [38 x i8] zeroinitializer }, align 32
@vxge_add_isr._entry_ptr.307 = internal global ptr @vxge_add_isr._entry.305, section ".printk_index", align 4
@vxge_alloc_msix._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.309, ptr @.str.2, i32 2296, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s: memory allocation failed\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"vxge_alloc_msix\00", [16 x i8] zeroinitializer }, align 32
@vxge_alloc_msix._entry_ptr = internal global ptr @vxge_alloc_msix._entry, section ".printk_index", align 4
@vxge_alloc_msix._entry.310 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.309, ptr @.str.2, i32 2306, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_alloc_msix._entry_ptr.311 = internal global ptr @vxge_alloc_msix._entry.310, section ".printk_index", align 4
@vxge_alloc_msix._entry.312 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.313, ptr @.str.309, ptr @.str.2, i32 2343, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"%s: MSI-X enable failed for %d vectors, ret: %d\0A\00", [47 x i8] zeroinitializer }, align 32
@vxge_alloc_msix._entry_ptr.314 = internal global ptr @vxge_alloc_msix._entry.312, section ".printk_index", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@vxge_alarm_msix_handle._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.315, ptr @.str.316, ptr @.str.2, i32 2273, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s: vxge_hw_vpath_alarm_process failed %x \0A\00", [52 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"vxge_alarm_msix_handle\00", [41 x i8] zeroinitializer }, align 32
@vxge_alarm_msix_handle._entry_ptr = internal global ptr @vxge_alarm_msix_handle._entry, section ".printk_index", align 4
@vxge_isr_napi._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.317, ptr @.str.2, i32 2171, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"vxge_isr_napi\00", [18 x i8] zeroinitializer }, align 32
@vxge_isr_napi._entry_ptr = internal global ptr @vxge_isr_napi._entry, section ".printk_index", align 4
@vxge_isr_napi._entry.318 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.317, ptr @.str.2, i32 2193, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_isr_napi._entry_ptr.319 = internal global ptr @vxge_isr_napi._entry.318, section ".printk_index", align 4
@vxge_isr_napi._entry.320 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.317, ptr @.str.2, i32 2206, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_isr_napi._entry_ptr.321 = internal global ptr @vxge_isr_napi._entry.320, section ".printk_index", align 4
@vxge_rth_configure._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.322, ptr @.str.323, ptr @.str.2, i32 1927, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"RTH indirection table configuration failed for vpath:%d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"vxge_rth_configure\00", [45 x i8] zeroinitializer }, align 32
@vxge_rth_configure._entry_ptr = internal global ptr @vxge_rth_configure._entry, section ".printk_index", align 4
@vxge_rth_configure._entry.324 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.325, ptr @.str.323, ptr @.str.2, i32 1955, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"RTH configuration failed for vpath:%d\0A\00", [57 x i8] zeroinitializer }, align 32
@vxge_rth_configure._entry_ptr.326 = internal global ptr @vxge_rth_configure._entry.324, section ".printk_index", align 4
@vxge_restore_vpath_mac_addr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.327, ptr @.str.328, ptr @.str.2, i32 1472, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"DA add entry failed for vpath:%d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"vxge_restore_vpath_mac_addr\00", [36 x i8] zeroinitializer }, align 32
@vxge_restore_vpath_mac_addr._entry_ptr = internal global ptr @vxge_restore_vpath_mac_addr._entry, section ".printk_index", align 4
@vxge_search_mac_addr_in_da_table._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.329, ptr @.str.330, ptr @.str.2, i32 1428, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"DA config list entry failed for vpath:%d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"vxge_search_mac_addr_in_da_table\00", [63 x i8] zeroinitializer }, align 32
@vxge_search_mac_addr_in_da_table._entry_ptr = internal global ptr @vxge_search_mac_addr_in_da_table._entry, section ".printk_index", align 4
@vxge_os_timer.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.331 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"(timer)\00", [24 x i8] zeroinitializer }, align 32
@vxge_reset_vpath._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.332, ptr @.str.333, ptr @.str.2, i32 1528, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"vxge_hw_vpath_recover_from_resetfailed for vpath:%d\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"vxge_reset_vpath\00", [47 x i8] zeroinitializer }, align 32
@vxge_reset_vpath._entry_ptr = internal global ptr @vxge_reset_vpath._entry, section ".printk_index", align 4
@vxge_reset_vpath._entry.334 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.335, ptr @.str.333, ptr @.str.2, i32 1534, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"vxge_hw_vpath_reset failed forvpath:%d\0A\00", [56 x i8] zeroinitializer }, align 32
@vxge_reset_vpath._entry_ptr.336 = internal global ptr @vxge_reset_vpath._entry.334, section ".printk_index", align 4
@vxge_reset_vpath._entry.337 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.202, ptr @.str.333, ptr @.str.2, i32 1552, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_reset_vpath._entry_ptr.338 = internal global ptr @vxge_reset_vpath._entry.337, section ".printk_index", align 4
@__const.vxge_vpath_intr_enable.tim_msix_id = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 0], align 4
@do_vxge_close._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.339, ptr @.str.2, i32 2925, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"do_vxge_close\00", [18 x i8] zeroinitializer }, align 32
@do_vxge_close._entry_ptr = internal global ptr @do_vxge_close._entry, section ".printk_index", align 4
@do_vxge_close._entry.340 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.339, ptr @.str.2, i32 3013, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@do_vxge_close._entry_ptr.341 = internal global ptr @do_vxge_close._entry.340, section ".printk_index", align 4
@vxge_reset_all_vpaths._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.342, ptr @.str.343, ptr @.str.2, i32 1979, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"vxge_hw_vpath_recover_from_reset failed for vpath: %d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"vxge_reset_all_vpaths\00", [42 x i8] zeroinitializer }, align 32
@vxge_reset_all_vpaths._entry_ptr = internal global ptr @vxge_reset_all_vpaths._entry, section ".printk_index", align 4
@vxge_reset_all_vpaths._entry.344 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.345, ptr @.str.343, ptr @.str.2, i32 1985, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"vxge_hw_vpath_reset failed for vpath:%d\0A\00", [55 x i8] zeroinitializer }, align 32
@vxge_reset_all_vpaths._entry_ptr.346 = internal global ptr @vxge_reset_all_vpaths._entry.344, section ".printk_index", align 4
@vxge_xmit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.347, ptr @.str.2, i32 821, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"vxge_xmit\00", [22 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr = internal global ptr @vxge_xmit._entry, section ".printk_index", align 4
@vxge_xmit._entry.348 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.349, ptr @.str.347, ptr @.str.2, i32 826, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: Buffer has no data..\0A\00", [38 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.350 = internal global ptr @vxge_xmit._entry.348, section ".printk_index", align 4
@vxge_xmit._entry.351 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.352, ptr @.str.347, ptr @.str.2, i32 835, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: vdev not initialized\0A\00", [38 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.353 = internal global ptr @vxge_xmit._entry.351, section ".printk_index", align 4
@vxge_xmit._entry.354 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.355, ptr @.str.347, ptr @.str.2, i32 845, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%s: Failed to store the mac address\0A\00", [59 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.356 = internal global ptr @vxge_xmit._entry.354, section ".printk_index", align 4
@vxge_xmit._entry.357 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.358, ptr @.str.347, ptr @.str.2, i32 856, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"%s: vpath_no= %d\0A\00", [46 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.359 = internal global ptr @vxge_xmit._entry.357, section ".printk_index", align 4
@vxge_xmit._entry.360 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.361, ptr @.str.347, ptr @.str.2, i32 870, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s: No free TXDs available\0A\00", [36 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.362 = internal global ptr @vxge_xmit._entry.360, section ".printk_index", align 4
@vxge_xmit._entry.363 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.364, ptr @.str.347, ptr @.str.2, i32 884, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: Out of descriptors .\0A\00", [38 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.365 = internal global ptr @vxge_xmit._entry.363, section ".printk_index", align 4
@vxge_xmit._entry.366 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.367, ptr @.str.347, ptr @.str.2, i32 892, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s: %s:%d fifo_hw = %p dtr = %p dtr_priv = %p\0A\00", [49 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.368 = internal global ptr @vxge_xmit._entry.366, section ".printk_index", align 4
@vxge_xmit._entry.369 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.370, ptr @.str.347, ptr @.str.2, i32 919, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"%s: %s:%d skb = %p txdl_priv = %p frag_cnt = %d dma_pointer = 0x%llx\0A\00", [58 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.371 = internal global ptr @vxge_xmit._entry.369, section ".printk_index", align 4
@vxge_xmit._entry.372 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.373, ptr @.str.347, ptr @.str.2, i32 939, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"%s: %s:%d frag = %d dma_pointer = 0x%llx\0A\00", [54 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.374 = internal global ptr @vxge_xmit._entry.372, section ".printk_index", align 4
@vxge_xmit._entry.375 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.376, ptr @.str.347, ptr @.str.2, i32 953, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: %s:%d mss = %d\0A\00", [44 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.377 = internal global ptr @vxge_xmit._entry.375, section ".printk_index", align 4
@vxge_xmit._entry.378 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.347, ptr @.str.2, i32 972, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.379 = internal global ptr @vxge_xmit._entry.378, section ".printk_index", align 4
@vxge_xmit._entry.380 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.381, ptr @.str.347, ptr @.str.2, i32 976, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: pci_map_page failed\0A\00", [39 x i8] zeroinitializer }, align 32
@vxge_xmit._entry_ptr.382 = internal global ptr @vxge_xmit._entry.380, section ".printk_index", align 4
@vxge_learn_mac._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.383, ptr @.str.384, ptr @.str.2, i32 785, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.383 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"%s: Unable to set the vpath-%d in catch-basin mode\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"vxge_learn_mac\00", [17 x i8] zeroinitializer }, align 32
@vxge_learn_mac._entry_ptr = internal global ptr @vxge_learn_mac._entry, section ".printk_index", align 4
@vxge_add_mac_addr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.385, ptr @.str.386, ptr @.str.2, i32 717, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.385 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"DA config add entry failed for vpath:%d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.386 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"vxge_add_mac_addr\00", [46 x i8] zeroinitializer }, align 32
@vxge_add_mac_addr._entry_ptr = internal global ptr @vxge_add_mac_addr._entry, section ".printk_index", align 4
@vxge_mac_list_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.387, ptr @.str.2, i32 679, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"vxge_mac_list_add\00", [46 x i8] zeroinitializer }, align 32
@vxge_mac_list_add._entry_ptr = internal global ptr @vxge_mac_list_add._entry, section ".printk_index", align 4
@vxge_set_multicast._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.388, ptr @.str.2, i32 1136, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.388 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"vxge_set_multicast\00", [45 x i8] zeroinitializer }, align 32
@vxge_set_multicast._entry_ptr = internal global ptr @vxge_set_multicast._entry, section ".printk_index", align 4
@vxge_set_multicast._entry.389 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.390, ptr @.str.388, ptr @.str.2, i32 1150, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.390 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"failed to enable multicast, status %d\0A\00", [57 x i8] zeroinitializer }, align 32
@vxge_set_multicast._entry_ptr.391 = internal global ptr @vxge_set_multicast._entry.389, section ".printk_index", align 4
@vxge_set_multicast._entry.392 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.393, ptr @.str.388, ptr @.str.2, i32 1160, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.393 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"failed to disable multicast, status %d\0A\00", [56 x i8] zeroinitializer }, align 32
@vxge_set_multicast._entry_ptr.394 = internal global ptr @vxge_set_multicast._entry.392, section ".printk_index", align 4
@vxge_set_multicast._entry.395 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.396, ptr @.str.388, ptr @.str.2, i32 1180, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.396 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"failed to %s promisc, status %d\0A\00", [63 x i8] zeroinitializer }, align 32
@vxge_set_multicast._entry_ptr.397 = internal global ptr @vxge_set_multicast._entry.395, section ".printk_index", align 4
@.str.398 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"enable\00", [25 x i8] zeroinitializer }, align 32
@.str.399 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"disable\00", [24 x i8] zeroinitializer }, align 32
@vxge_set_multicast._entry.400 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.401, ptr @.str.388, ptr @.str.2, i32 1227, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"%s:%d Setting individualmulticast address failed\0A\00", [46 x i8] zeroinitializer }, align 32
@vxge_set_multicast._entry_ptr.402 = internal global ptr @vxge_set_multicast._entry.400, section ".printk_index", align 4
@vxge_set_multicast._entry.403 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.404, ptr @.str.388, ptr @.str.2, i32 1264, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s:%d Enabling all multicasts failed\0A\00", [58 x i8] zeroinitializer }, align 32
@vxge_set_multicast._entry_ptr.405 = internal global ptr @vxge_set_multicast._entry.403, section ".printk_index", align 4
@vxge_set_multicast._entry.406 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.388, ptr @.str.2, i32 1272, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_set_multicast._entry_ptr.407 = internal global ptr @vxge_set_multicast._entry.406, section ".printk_index", align 4
@vxge_del_mac_addr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.408, ptr @.str.409, ptr @.str.2, i32 1104, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"DA config delete entry failed for vpath:%d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"vxge_del_mac_addr\00", [46 x i8] zeroinitializer }, align 32
@vxge_del_mac_addr._entry_ptr = internal global ptr @vxge_del_mac_addr._entry, section ".printk_index", align 4
@vxge_set_mac_addr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.410, ptr @.str.2, i32 1290, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"vxge_set_mac_addr\00", [46 x i8] zeroinitializer }, align 32
@vxge_set_mac_addr._entry_ptr = internal global ptr @vxge_set_mac_addr._entry, section ".printk_index", align 4
@vxge_set_mac_addr._entry.411 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.410, ptr @.str.2, i32 1301, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_set_mac_addr._entry_ptr.412 = internal global ptr @vxge_set_mac_addr._entry.411, section ".printk_index", align 4
@.str.415 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@vxge_change_mtu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.416, ptr @.str.2, i32 3050, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"vxge_change_mtu\00", [16 x i8] zeroinitializer }, align 32
@vxge_change_mtu._entry_ptr = internal global ptr @vxge_change_mtu._entry, section ".printk_index", align 4
@vxge_change_mtu._entry.417 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.418, ptr @.str.416, ptr @.str.2, i32 3057, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.418 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@vxge_change_mtu._entry_ptr.419 = internal global ptr @vxge_change_mtu._entry.417, section ".printk_index", align 4
@.str.420 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"device is down on MTU change\00", [35 x i8] zeroinitializer }, align 32
@vxge_change_mtu._entry.421 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.422, ptr @.str.416, ptr @.str.2, i32 3062, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.422 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"trying to apply new MTU %d\0A\00", [36 x i8] zeroinitializer }, align 32
@vxge_change_mtu._entry_ptr.423 = internal global ptr @vxge_change_mtu._entry.421, section ".printk_index", align 4
@vxge_change_mtu._entry.424 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.425, ptr @.str.416, ptr @.str.2, i32 3074, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.425 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: MTU changed to %d\0A\00", [41 x i8] zeroinitializer }, align 32
@vxge_change_mtu._entry_ptr.426 = internal global ptr @vxge_change_mtu._entry.424, section ".printk_index", align 4
@vxge_change_mtu._entry.427 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.416, ptr @.str.2, i32 3077, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_change_mtu._entry_ptr.428 = internal global ptr @vxge_change_mtu._entry.427, section ".printk_index", align 4
@vxge_tx_watchdog._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.429, ptr @.str.2, i32 3264, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.429 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"vxge_tx_watchdog\00", [47 x i8] zeroinitializer }, align 32
@vxge_tx_watchdog._entry_ptr = internal global ptr @vxge_tx_watchdog._entry, section ".printk_index", align 4
@vxge_tx_watchdog._entry.430 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.429, ptr @.str.2, i32 3272, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_tx_watchdog._entry_ptr.431 = internal global ptr @vxge_tx_watchdog._entry.430, section ".printk_index", align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@vxge_vlan_rx_kill_vid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.432, ptr @.str.2, i32 3316, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.432 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"vxge_vlan_rx_kill_vid\00", [42 x i8] zeroinitializer }, align 32
@vxge_vlan_rx_kill_vid._entry_ptr = internal global ptr @vxge_vlan_rx_kill_vid._entry, section ".printk_index", align 4
@vxge_vlan_rx_kill_vid._entry.433 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.432, ptr @.str.2, i32 3326, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_vlan_rx_kill_vid._entry_ptr.434 = internal global ptr @vxge_vlan_rx_kill_vid._entry.433, section ".printk_index", align 4
@vxge_netpoll._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.435, ptr @.str.2, i32 1881, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.435 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"vxge_netpoll\00", [19 x i8] zeroinitializer }, align 32
@vxge_netpoll._entry_ptr = internal global ptr @vxge_netpoll._entry, section ".printk_index", align 4
@vxge_netpoll._entry.436 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.435, ptr @.str.2, i32 1896, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_netpoll._entry_ptr.437 = internal global ptr @vxge_netpoll._entry.436, section ".printk_index", align 4
@do_vxge_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.438, ptr @.str.2, i32 1611, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.438 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"do_vxge_reset\00", [18 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr = internal global ptr @do_vxge_reset._entry, section ".printk_index", align 4
@do_vxge_reset._entry.439 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.440, ptr @.str.438, ptr @.str.2, i32 1638, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.440 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"%s: execution mode is debug, returning..\0A\00", [54 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr.441 = internal global ptr @do_vxge_reset._entry.439, section ".printk_index", align 4
@do_vxge_reset._entry.442 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.443, ptr @.str.438, ptr @.str.2, i32 1655, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.443 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"fatal: %s: Disabling device due tounknown error\0A\00", [47 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr.444 = internal global ptr @do_vxge_reset._entry.442, section ".printk_index", align 4
@do_vxge_reset._entry.445 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.446, ptr @.str.438, ptr @.str.2, i32 1676, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.446 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"fatal: %s: Disabling device due toserious error\0A\00", [47 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr.447 = internal global ptr @do_vxge_reset._entry.445, section ".printk_index", align 4
@do_vxge_reset._entry.448 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.446, ptr @.str.438, ptr @.str.2, i32 1686, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr.449 = internal global ptr @do_vxge_reset._entry.448, section ".printk_index", align 4
@do_vxge_reset._entry.450 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.451, ptr @.str.438, ptr @.str.2, i32 1698, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.451 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"fatal: %s: Disabling device due toslot freeze\0A\00", [49 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr.452 = internal global ptr @do_vxge_reset._entry.450, section ".printk_index", align 4
@do_vxge_reset._entry.453 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.342, ptr @.str.438, ptr @.str.2, i32 1723, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr.454 = internal global ptr @do_vxge_reset._entry.453, section ".printk_index", align 4
@do_vxge_reset._entry.455 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.345, ptr @.str.438, ptr @.str.2, i32 1730, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr.456 = internal global ptr @do_vxge_reset._entry.455, section ".printk_index", align 4
@do_vxge_reset._entry.457 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.438, ptr @.str.2, i32 1769, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@do_vxge_reset._entry_ptr.458 = internal global ptr @do_vxge_reset._entry.457, section ".printk_index", align 4
@vxge_probe_fw_update._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.459, ptr @.str.460, ptr @.str.2, i32 4197, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.459 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"%s: Firmware newer than last known version, unable to load driver\0A\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.460 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"vxge_probe_fw_update\00", [43 x i8] zeroinitializer }, align 32
@vxge_probe_fw_update._entry_ptr = internal global ptr @vxge_probe_fw_update._entry, section ".printk_index", align 4
@vxge_probe_fw_update._entry.461 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.462, ptr @.str.460, ptr @.str.2, i32 4206, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.462 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s: Firmware %d.%d.%d cannot be upgraded\0A\0A\00", [53 x i8] zeroinitializer }, align 32
@vxge_probe_fw_update._entry_ptr.463 = internal global ptr @vxge_probe_fw_update._entry.461, section ".printk_index", align 4
@.str.464 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"vxge/X3fw-pxe.ncf\00", [46 x i8] zeroinitializer }, align 32
@.str.465 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"vxge/X3fw.ncf\00", [18 x i8] zeroinitializer }, align 32
@vxge_probe_fw_update._entry.466 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.467, ptr @.str.460, ptr @.str.2, i32 4237, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"%s: Firmware %d.%d.%d is too old to be used with this driver.\0A\00", [33 x i8] zeroinitializer }, align 32
@vxge_probe_fw_update._entry_ptr.468 = internal global ptr @vxge_probe_fw_update._entry.466, section ".printk_index", align 4
@vxge_print_parm._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.469, ptr @.str.470, ptr @.str.2, i32 3894, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: %d Vpath(s) opened\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.470 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"vxge_print_parm\00", [16 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr = internal global ptr @vxge_print_parm._entry, section ".printk_index", align 4
@vxge_print_parm._entry.471 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.472, ptr @.str.470, ptr @.str.2, i32 3899, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: Interrupt type INTA\0A\00", [39 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.473 = internal global ptr @vxge_print_parm._entry.471, section ".printk_index", align 4
@vxge_print_parm._entry.474 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.475, ptr @.str.470, ptr @.str.2, i32 3904, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.475 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: Interrupt type MSI-X\0A\00", [38 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.476 = internal global ptr @vxge_print_parm._entry.474, section ".printk_index", align 4
@vxge_print_parm._entry.477 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.478, ptr @.str.470, ptr @.str.2, i32 3911, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.478 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s: RTH steering enabled for TCP_IPV4\0A\00", [57 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.479 = internal global ptr @vxge_print_parm._entry.477, section ".printk_index", align 4
@vxge_print_parm._entry.480 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.481, ptr @.str.470, ptr @.str.2, i32 3914, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: RTH steering disabled\0A\00", [37 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.482 = internal global ptr @vxge_print_parm._entry.480, section ".printk_index", align 4
@vxge_print_parm._entry.483 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.484, ptr @.str.470, ptr @.str.2, i32 3920, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.484 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: Tx steering disabled\0A\00", [38 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.485 = internal global ptr @vxge_print_parm._entry.483, section ".printk_index", align 4
@vxge_print_parm._entry.486 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.487, ptr @.str.470, ptr @.str.2, i32 3925, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.487 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s: Unsupported tx steering option\0A\00", [60 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.488 = internal global ptr @vxge_print_parm._entry.486, section ".printk_index", align 4
@vxge_print_parm._entry.489 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.484, ptr @.str.470, ptr @.str.2, i32 3927, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.490 = internal global ptr @vxge_print_parm._entry.489, section ".printk_index", align 4
@vxge_print_parm._entry.491 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.487, ptr @.str.470, ptr @.str.2, i32 3933, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.492 = internal global ptr @vxge_print_parm._entry.491, section ".printk_index", align 4
@vxge_print_parm._entry.493 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.484, ptr @.str.470, ptr @.str.2, i32 3935, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.494 = internal global ptr @vxge_print_parm._entry.493, section ".printk_index", align 4
@vxge_print_parm._entry.495 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.496, ptr @.str.470, ptr @.str.2, i32 3941, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.496 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s: Tx multiqueue steering enabled\0A\00", [60 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.497 = internal global ptr @vxge_print_parm._entry.495, section ".printk_index", align 4
@vxge_print_parm._entry.498 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.499, ptr @.str.470, ptr @.str.2, i32 3946, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.499 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s: Tx port steering enabled\0A\00", [34 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.500 = internal global ptr @vxge_print_parm._entry.498, section ".printk_index", align 4
@vxge_print_parm._entry.501 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.502, ptr @.str.470, ptr @.str.2, i32 3951, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.502 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: Unsupported tx steering type\0A\00", [62 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.503 = internal global ptr @vxge_print_parm._entry.501, section ".printk_index", align 4
@vxge_print_parm._entry.504 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.484, ptr @.str.470, ptr @.str.2, i32 3953, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.505 = internal global ptr @vxge_print_parm._entry.504, section ".printk_index", align 4
@vxge_print_parm._entry.506 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.507, ptr @.str.470, ptr @.str.2, i32 3959, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.507 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: MAC Address learning enabled\0A\00", [62 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.508 = internal global ptr @vxge_print_parm._entry.506, section ".printk_index", align 4
@vxge_print_parm._entry.509 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.510, ptr @.str.470, ptr @.str.2, i32 3967, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.510 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"%s: MTU size - %d\0A\00", [45 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.511 = internal global ptr @vxge_print_parm._entry.509, section ".printk_index", align 4
@vxge_print_parm._entry.512 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.513, ptr @.str.470, ptr @.str.2, i32 3972, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.513 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: VLAN tag stripping %s\0A\00", [37 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.514 = internal global ptr @vxge_print_parm._entry.512, section ".printk_index", align 4
@.str.515 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Enabled\00", [24 x i8] zeroinitializer }, align 32
@.str.516 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Disabled\00", [23 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry.517 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.518, ptr @.str.470, ptr @.str.2, i32 3976, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.518 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: Max frags : %d\0A\00", [44 x i8] zeroinitializer }, align 32
@vxge_print_parm._entry_ptr.519 = internal global ptr @vxge_print_parm._entry.517, section ".printk_index", align 4
@vxge_device_unregister._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.520, ptr @.str.2, i32 3496, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.520 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"vxge_device_unregister\00", [41 x i8] zeroinitializer }, align 32
@vxge_device_unregister._entry_ptr = internal global ptr @vxge_device_unregister._entry, section ".printk_index", align 4
@vxge_device_unregister._entry.521 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.522, ptr @.str.520, ptr @.str.2, i32 3508, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.522 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: ethernet device unregistered\0A\00", [62 x i8] zeroinitializer }, align 32
@vxge_device_unregister._entry_ptr.523 = internal global ptr @vxge_device_unregister._entry.521, section ".printk_index", align 4
@vxge_device_unregister._entry.524 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.520, ptr @.str.2, i32 3510, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_device_unregister._entry_ptr.525 = internal global ptr @vxge_device_unregister._entry.524, section ".printk_index", align 4
@vxge_remove._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.526, ptr @.str.2, i32 4733, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.526 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"vxge_remove\00", [20 x i8] zeroinitializer }, align 32
@vxge_remove._entry_ptr = internal global ptr @vxge_remove._entry, section ".printk_index", align 4
@vxge_remove._entry.527 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.528, ptr @.str.526, ptr @.str.2, i32 4735, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.528 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s : removing PCI device...\0A\00", [35 x i8] zeroinitializer }, align 32
@vxge_remove._entry_ptr.529 = internal global ptr @vxge_remove._entry.527, section ".printk_index", align 4
@vxge_remove._entry.530 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.531, ptr @.str.526, ptr @.str.2, i32 4750, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.531 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s:%d Device unregistered\0A\00", [37 x i8] zeroinitializer }, align 32
@vxge_remove._entry_ptr.532 = internal global ptr @vxge_remove._entry.530, section ".printk_index", align 4
@vxge_remove._entry.533 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.526, ptr @.str.2, i32 4752, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_remove._entry_ptr.534 = internal global ptr @vxge_remove._entry.533, section ".printk_index", align 4
@.str.535 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Cannot re-enable device after reset\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.536 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Can't bring device back up after reset\0A\00", [56 x i8] zeroinitializer }, align 32
@vxge_starter._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.537, ptr @.str.538, ptr @.str.2, i32 4777, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.537 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016vxge: Copyright(c) 2002-2010 Exar Corp.\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.538 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"vxge_starter\00", [19 x i8] zeroinitializer }, align 32
@vxge_starter._entry_ptr = internal global ptr @vxge_starter._entry, section ".printk_index", align 4
@vxge_starter._entry.539 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.540, ptr @.str.538, ptr @.str.2, i32 4778, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.540 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\016vxge: Driver version: %s\0A\00", [36 x i8] zeroinitializer }, align 32
@vxge_starter._entry_ptr.541 = internal global ptr @vxge_starter._entry.539, section ".printk_index", align 4
@.str.542 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"2.5.3.22640-k\00", [18 x i8] zeroinitializer }, align 32
@vxge_starter._entry.543 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.538, ptr @.str.2, i32 4797, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vxge_starter._entry_ptr.544 = internal global ptr @vxge_starter._entry.543, section ".printk_index", align 4
@verify_bandwidth._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.545, ptr @.str.546, ptr @.str.2, i32 3640, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.545 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"%s: Assigning equal bandwidth to all the vpaths\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.546 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"verify_bandwidth\00", [47 x i8] zeroinitializer }, align 32
@verify_bandwidth._entry_ptr = internal global ptr @verify_bandwidth._entry, section ".printk_index", align 4
@switch.table.vxge_probe = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.93, ptr @.str.96, ptr @.str.99, ptr @.str.102], [16 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.547 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8]
@__sancov_gen_cov_switch_values.548 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 6, i64 7]
@__sancov_gen_cov_switch_values.549 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.550 = internal global [4 x i64] [i64 2, i64 32, i64 4294967274, i64 4294967294]
@__sancov_gen_cov_switch_values.551 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.552 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.553 = internal global [7 x i64] [i64 5, i64 32, i64 8, i64 9, i64 10, i64 11, i64 14]
@__sancov_gen_cov_switch_values.554 = internal global [7 x i64] [i64 5, i64 32, i64 8, i64 9, i64 10, i64 11, i64 14]
@__sancov_gen_cov_switch_values.555 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.556 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.557 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@__sancov_gen_cov_switch_values.558 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.559 = internal global [4 x i64] [i64 2, i64 32, i64 35248, i64 35249]
@__sancov_gen_cov_switch_values.560 = internal global [18 x i64] [i64 16, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15]
@__sancov_gen_cov_switch_values.561 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 219, i64 220, i64 221, i64 222]
@__sancov_gen_cov_switch_values.562 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.563 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.564 = internal global [14 x i64] [i64 12, i64 32, i64 0, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 10, i64 11, i64 12, i64 13, i64 14]
@___asan_gen_.565 = private unnamed_addr constant [15 x i8] c"vlan_tag_strip\00", align 1
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 76, i32 1 }
@___asan_gen_.568 = private unnamed_addr constant [14 x i8] c"addr_learn_en\00", align 1
@___asan_gen_.570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 77, i32 1 }
@___asan_gen_.571 = private unnamed_addr constant [16 x i8] c"max_config_port\00", align 1
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 78, i32 1 }
@___asan_gen_.574 = private unnamed_addr constant [17 x i8] c"max_config_vpath\00", align 1
@___asan_gen_.576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 79, i32 1 }
@___asan_gen_.577 = private unnamed_addr constant [14 x i8] c"max_mac_vpath\00", align 1
@___asan_gen_.579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 80, i32 1 }
@___asan_gen_.580 = private unnamed_addr constant [15 x i8] c"max_config_dev\00", align 1
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 81, i32 1 }
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4119, i32 3 }
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4127, i32 3 }
@___asan_gen_.609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4137, i32 3 }
@___asan_gen_.615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4157, i32 2 }
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4163, i32 3 }
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4169, i32 2 }
@___asan_gen_.628 = private unnamed_addr constant [12 x i8] c"vxge_driver\00", align 1
@___asan_gen_.630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4763, i32 26 }
@___asan_gen_.631 = private unnamed_addr constant [14 x i8] c"driver_config\00", align 1
@___asan_gen_.633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 89, i32 32 }
@___asan_gen_.634 = private unnamed_addr constant [14 x i8] c"bw_percentage\00", align 1
@___asan_gen_.636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 85, i32 21 }
@___asan_gen_.637 = private unnamed_addr constant [14 x i8] c"vxge_id_table\00", align 1
@___asan_gen_.639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 66, i32 35 }
@___asan_gen_.640 = private unnamed_addr constant [17 x i8] c"vxge_err_handler\00", align 1
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4755, i32 40 }
@___asan_gen_.643 = private unnamed_addr constant [12 x i8] c"vxge_pm_ops\00", align 1
@___asan_gen_.645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4761, i32 8 }
@___asan_gen_.646 = private unnamed_addr constant [4 x i8] c"bus\00", align 1
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4289, i32 13 }
@___asan_gen_.649 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@___asan_gen_.651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4289, i32 23 }
@___asan_gen_.660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4296, i32 2 }
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4313, i32 4 }
@___asan_gen_.672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4338, i32 3 }
@___asan_gen_.675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4347, i32 3 }
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4365, i32 3 }
@___asan_gen_.687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4371, i32 3 }
@___asan_gen_.693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4380, i32 3 }
@___asan_gen_.699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4389, i32 3 }
@___asan_gen_.705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4394, i32 2 }
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4402, i32 3 }
@___asan_gen_.717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4411, i32 3 }
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4417, i32 2 }
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4441, i32 4 }
@___asan_gen_.735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4452, i32 3 }
@___asan_gen_.736 = private unnamed_addr constant [15 x i8] c"vxge_callbacks\00", align 1
@___asan_gen_.738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4258, i32 37 }
@___asan_gen_.744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4463, i32 3 }
@___asan_gen_.750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4477, i32 4 }
@___asan_gen_.756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4486, i32 4 }
@___asan_gen_.762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4498, i32 3 }
@___asan_gen_.768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4515, i32 4 }
@___asan_gen_.769 = private unnamed_addr constant [15 x i8] c"vpath_selector\00", align 1
@___asan_gen_.771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 83, i32 12 }
@___asan_gen_.777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4598, i32 2 }
@___asan_gen_.783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4601, i32 2 }
@___asan_gen_.789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4604, i32 2 }
@___asan_gen_.795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4607, i32 2 }
@___asan_gen_.801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4610, i32 2 }
@___asan_gen_.807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4613, i32 2 }
@___asan_gen_.813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4621, i32 4 }
@___asan_gen_.819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4625, i32 4 }
@___asan_gen_.825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4629, i32 4 }
@___asan_gen_.831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4633, i32 4 }
@___asan_gen_.837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4649, i32 4 }
@___asan_gen_.843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4683, i32 2 }
@___asan_gen_.852 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3876, i32 2 }
@___asan_gen_.858 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3878, i32 2 }
@___asan_gen_.864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3880, i32 2 }
@___asan_gen_.870 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3882, i32 2 }
@___asan_gen_.876 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3884, i32 2 }
@___asan_gen_.885 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3686, i32 3 }
@___asan_gen_.891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3703, i32 5 }
@___asan_gen_.897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3708, i32 5 }
@___asan_gen_.903 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3714, i32 4 }
@___asan_gen_.912 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 153, i32 2 }
@___asan_gen_.915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 155, i32 28 }
@___asan_gen_.921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 161, i32 2 }
@___asan_gen_.927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 176, i32 2 }
@___asan_gen_.930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 178, i32 28 }
@___asan_gen_.933 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 184, i32 2 }
@___asan_gen_.939 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3531, i32 2 }
@___asan_gen_.945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3547, i32 4 }
@___asan_gen_.951 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3550, i32 4 }
@___asan_gen_.957 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3554, i32 4 }
@___asan_gen_.960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3585, i32 2 }
@___asan_gen_.969 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3368, i32 3 }
@___asan_gen_.975 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3375, i32 2 }
@___asan_gen_.976 = private unnamed_addr constant [16 x i8] c"vxge_netdev_ops\00", align 1
@___asan_gen_.978 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3331, i32 36 }
@___asan_gen_.984 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3406, i32 2 }
@___asan_gen_.990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3414, i32 3 }
@___asan_gen_.996 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3421, i32 2 }
@___asan_gen_.1002 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3432, i32 3 }
@___asan_gen_.1008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3447, i32 2 }
@___asan_gen_.1014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3463, i32 3 }
@___asan_gen_.1017 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3468, i32 2 }
@___asan_gen_.1023 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2693, i32 2 }
@___asan_gen_.1029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2706, i32 3 }
@___asan_gen_.1035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2716, i32 3 }
@___asan_gen_.1041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2744, i32 4 }
@___asan_gen_.1053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2751, i32 2 }
@___asan_gen_.1059 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2760, i32 4 }
@___asan_gen_.1065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2768, i32 2 }
@___asan_gen_.1071 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2783, i32 5 }
@___asan_gen_.1077 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2818, i32 4 }
@___asan_gen_.1083 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2824, i32 5 }
@___asan_gen_.1086 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2886, i32 2 }
@___asan_gen_.1092 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2064, i32 4 }
@___asan_gen_.1098 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2065, i32 4 }
@___asan_gen_.1107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2084, i32 4 }
@___asan_gen_.1116 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 555, i32 2 }
@___asan_gen_.1122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 569, i32 3 }
@___asan_gen_.1128 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 575, i32 3 }
@___asan_gen_.1134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 581, i32 4 }
@___asan_gen_.1137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 625, i32 2 }
@___asan_gen_.1139 = private unnamed_addr constant [27 x i8] c"../include/linux/seqlock.h\00", align 1
@___asan_gen_.1140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1139, i32 271, i32 2 }
@___asan_gen_.1146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1041, i32 2 }
@___asan_gen_.1152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1063, i32 2 }
@___asan_gen_.1158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 368, i32 2 }
@___asan_gen_.1164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 382, i32 3 }
@___asan_gen_.1170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 391, i32 3 }
@___asan_gen_.1176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 406, i32 5 }
@___asan_gen_.1182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 466, i32 5 }
@___asan_gen_.1188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 483, i32 5 }
@___asan_gen_.1191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 532, i32 2 }
@___asan_gen_.1197 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 201, i32 2 }
@___asan_gen_.1203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 210, i32 3 }
@___asan_gen_.1209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 216, i32 2 }
@___asan_gen_.1212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 225, i32 2 }
@___asan_gen_.1218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 239, i32 2 }
@___asan_gen_.1224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 251, i32 2 }
@___asan_gen_.1227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 258, i32 2 }
@___asan_gen_.1232 = private unnamed_addr constant [31 x i8] c"../include/linux/dma-mapping.h\00", align 1
@___asan_gen_.1233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1232, i32 326, i32 6 }
@___asan_gen_.1239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 297, i32 2 }
@___asan_gen_.1245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 310, i32 2 }
@___asan_gen_.1248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 319, i32 2 }
@___asan_gen_.1254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 274, i32 2 }
@___asan_gen_.1257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 286, i32 2 }
@___asan_gen_.1263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1011, i32 2 }
@___asan_gen_.1266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1022, i32 2 }
@___asan_gen_.1275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2445, i32 3 }
@___asan_gen_.1281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2447, i32 3 }
@___asan_gen_.1284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2463, i32 6 }
@___asan_gen_.1287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2478, i32 6 }
@___asan_gen_.1293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2494, i32 5 }
@___asan_gen_.1296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2499, i32 5 }
@___asan_gen_.1299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2524, i32 4 }
@___asan_gen_.1305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2534, i32 4 }
@___asan_gen_.1308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2539, i32 4 }
@___asan_gen_.1311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2556, i32 4 }
@___asan_gen_.1320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2566, i32 4 }
@___asan_gen_.1326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2571, i32 3 }
@___asan_gen_.1335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2294, i32 3 }
@___asan_gen_.1338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2305, i32 3 }
@___asan_gen_.1344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2341, i32 3 }
@___asan_gen_.1353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2271, i32 3 }
@___asan_gen_.1359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2171, i32 2 }
@___asan_gen_.1362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2192, i32 4 }
@___asan_gen_.1365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2206, i32 2 }
@___asan_gen_.1374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1925, i32 3 }
@___asan_gen_.1380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1953, i32 4 }
@___asan_gen_.1389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1470, i32 6 }
@___asan_gen_.1398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1426, i32 3 }
@___asan_gen_.1399 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1403 = private unnamed_addr constant [50 x i8] c"../drivers/net/ethernet/neterion/vxge/vxge-main.h\00", align 1
@___asan_gen_.1404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1403, i32 423, i32 2 }
@___asan_gen_.1413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1526, i32 5 }
@___asan_gen_.1419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1532, i32 4 }
@___asan_gen_.1422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1550, i32 4 }
@___asan_gen_.1428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 2924, i32 2 }
@___asan_gen_.1431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3012, i32 2 }
@___asan_gen_.1440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1976, i32 6 }
@___asan_gen_.1446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1983, i32 5 }
@___asan_gen_.1452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 820, i32 2 }
@___asan_gen_.1458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 825, i32 3 }
@___asan_gen_.1464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 834, i32 3 }
@___asan_gen_.1470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 843, i32 4 }
@___asan_gen_.1476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 856, i32 2 }
@___asan_gen_.1482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 869, i32 3 }
@___asan_gen_.1488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 883, i32 3 }
@___asan_gen_.1494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 889, i32 2 }
@___asan_gen_.1500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 915, i32 2 }
@___asan_gen_.1506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 936, i32 3 }
@___asan_gen_.1512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 952, i32 4 }
@___asan_gen_.1515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 971, i32 2 }
@___asan_gen_.1521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 976, i32 2 }
@___asan_gen_.1530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 783, i32 3 }
@___asan_gen_.1539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 715, i32 3 }
@___asan_gen_.1545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 677, i32 3 }
@___asan_gen_.1551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1135, i32 2 }
@___asan_gen_.1557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1149, i32 5 }
@___asan_gen_.1563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1159, i32 5 }
@___asan_gen_.1575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1178, i32 5 }
@___asan_gen_.1581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1224, i32 6 }
@___asan_gen_.1587 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1262, i32 5 }
@___asan_gen_.1590 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1271, i32 2 }
@___asan_gen_.1599 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1102, i32 3 }
@___asan_gen_.1605 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1290, i32 2 }
@___asan_gen_.1608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1300, i32 2 }
@___asan_gen_.1610 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.1611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1610, i32 156, i32 2 }
@___asan_gen_.1617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3049, i32 2 }
@___asan_gen_.1626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3056, i32 3 }
@___asan_gen_.1632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3061, i32 2 }
@___asan_gen_.1638 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3073, i32 2 }
@___asan_gen_.1641 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3076, i32 2 }
@___asan_gen_.1647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3264, i32 2 }
@___asan_gen_.1650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3271, i32 2 }
@___asan_gen_.1656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3316, i32 2 }
@___asan_gen_.1659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3325, i32 2 }
@___asan_gen_.1665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1881, i32 2 }
@___asan_gen_.1668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1895, i32 2 }
@___asan_gen_.1674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1611, i32 2 }
@___asan_gen_.1680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1636, i32 4 }
@___asan_gen_.1686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1652, i32 4 }
@___asan_gen_.1692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1673, i32 4 }
@___asan_gen_.1695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1683, i32 4 }
@___asan_gen_.1701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1695, i32 4 }
@___asan_gen_.1704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1720, i32 6 }
@___asan_gen_.1707 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1728, i32 6 }
@___asan_gen_.1710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 1768, i32 2 }
@___asan_gen_.1719 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4195, i32 3 }
@___asan_gen_.1725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4205, i32 3 }
@___asan_gen_.1728 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4220, i32 13 }
@___asan_gen_.1731 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4222, i32 13 }
@___asan_gen_.1737 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4235, i32 3 }
@___asan_gen_.1746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3892, i32 2 }
@___asan_gen_.1752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3898, i32 3 }
@___asan_gen_.1758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3903, i32 3 }
@___asan_gen_.1764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3909, i32 3 }
@___asan_gen_.1770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3913, i32 3 }
@___asan_gen_.1776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3919, i32 3 }
@___asan_gen_.1782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3923, i32 3 }
@___asan_gen_.1785 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3926, i32 3 }
@___asan_gen_.1788 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3931, i32 3 }
@___asan_gen_.1791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3934, i32 3 }
@___asan_gen_.1797 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3939, i32 3 }
@___asan_gen_.1803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3944, i32 3 }
@___asan_gen_.1809 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3949, i32 3 }
@___asan_gen_.1812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3952, i32 3 }
@___asan_gen_.1818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3958, i32 3 }
@___asan_gen_.1824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3964, i32 3 }
@___asan_gen_.1836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3968, i32 3 }
@___asan_gen_.1842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3973, i32 3 }
@___asan_gen_.1848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3495, i32 2 }
@___asan_gen_.1854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3507, i32 2 }
@___asan_gen_.1857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3509, i32 2 }
@___asan_gen_.1863 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4733, i32 2 }
@___asan_gen_.1869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4734, i32 2 }
@___asan_gen_.1875 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4749, i32 2 }
@___asan_gen_.1878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4751, i32 2 }
@___asan_gen_.1881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4046, i32 22 }
@___asan_gen_.1884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4071, i32 8 }
@___asan_gen_.1893 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4777, i32 2 }
@___asan_gen_.1902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4778, i32 2 }
@___asan_gen_.1905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 4794, i32 3 }
@___asan_gen_.1906 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1912 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1913 = private constant [50 x i8] c"../drivers/net/ethernet/neterion/vxge/vxge-main.c\00", align 1
@___asan_gen_.1914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1913, i32 3638, i32 3 }
@___asan_gen_.1915 = private unnamed_addr constant [24 x i8] c"switch.table.vxge_probe\00", align 1
@llvm.compiler.used = appending global [678 x ptr] [ptr @__UNIQUE_ID_addr_learn_entype500, ptr @__UNIQUE_ID_bw_percentagetype505, ptr @__UNIQUE_ID_description498, ptr @__UNIQUE_ID_file496, ptr @__UNIQUE_ID_license497, ptr @__UNIQUE_ID_max_config_devtype504, ptr @__UNIQUE_ID_max_config_porttype501, ptr @__UNIQUE_ID_max_config_vpathtype502, ptr @__UNIQUE_ID_max_mac_vpathtype503, ptr @__UNIQUE_ID_vlan_tag_striptype499, ptr @__exitcall_vxge_closer, ptr @__initcall__kmod_vxge__507_4808_vxge_starter6, ptr @__param_addr_learn_en, ptr @__param_bw_percentage, ptr @__param_max_config_dev, ptr @__param_max_config_port, ptr @__param_max_config_vpath, ptr @__param_max_mac_vpath, ptr @__param_vlan_tag_strip, ptr @do_vxge_close._entry, ptr @do_vxge_close._entry.340, ptr @do_vxge_close._entry_ptr, ptr @do_vxge_close._entry_ptr.341, ptr @do_vxge_reset._entry, ptr @do_vxge_reset._entry.439, ptr @do_vxge_reset._entry.442, ptr @do_vxge_reset._entry.445, ptr @do_vxge_reset._entry.448, ptr @do_vxge_reset._entry.450, ptr @do_vxge_reset._entry.453, ptr @do_vxge_reset._entry.455, ptr @do_vxge_reset._entry.457, ptr @do_vxge_reset._entry_ptr, ptr @do_vxge_reset._entry_ptr.441, ptr @do_vxge_reset._entry_ptr.444, ptr @do_vxge_reset._entry_ptr.447, ptr @do_vxge_reset._entry_ptr.449, ptr @do_vxge_reset._entry_ptr.452, ptr @do_vxge_reset._entry_ptr.454, ptr @do_vxge_reset._entry_ptr.456, ptr @do_vxge_reset._entry_ptr.458, ptr @verify_bandwidth._entry, ptr @verify_bandwidth._entry_ptr, ptr @vxge_add_isr._entry, ptr @vxge_add_isr._entry.284, ptr @vxge_add_isr._entry.289, ptr @vxge_add_isr._entry.292, ptr @vxge_add_isr._entry.295, ptr @vxge_add_isr._entry.298, ptr @vxge_add_isr._entry.301, ptr @vxge_add_isr._entry.305, ptr @vxge_add_isr._entry_ptr, ptr @vxge_add_isr._entry_ptr.286, ptr @vxge_add_isr._entry_ptr.291, ptr @vxge_add_isr._entry_ptr.293, ptr @vxge_add_isr._entry_ptr.297, ptr @vxge_add_isr._entry_ptr.299, ptr @vxge_add_isr._entry_ptr.303, ptr @vxge_add_isr._entry_ptr.307, ptr @vxge_add_mac_addr._entry, ptr @vxge_add_mac_addr._entry_ptr, ptr @vxge_alarm_msix_handle._entry, ptr @vxge_alarm_msix_handle._entry_ptr, ptr @vxge_alloc_msix._entry, ptr @vxge_alloc_msix._entry.310, ptr @vxge_alloc_msix._entry.312, ptr @vxge_alloc_msix._entry_ptr, ptr @vxge_alloc_msix._entry_ptr.311, ptr @vxge_alloc_msix._entry_ptr.314, ptr @vxge_callback_crit_err._entry, ptr @vxge_callback_crit_err._entry.146, ptr @vxge_callback_crit_err._entry.149, ptr @vxge_callback_crit_err._entry.152, ptr @vxge_callback_crit_err._entry.155, ptr @vxge_callback_crit_err._entry_ptr, ptr @vxge_callback_crit_err._entry_ptr.148, ptr @vxge_callback_crit_err._entry_ptr.151, ptr @vxge_callback_crit_err._entry_ptr.154, ptr @vxge_callback_crit_err._entry_ptr.156, ptr @vxge_callback_link_down._entry, ptr @vxge_callback_link_down._entry.143, ptr @vxge_callback_link_down._entry_ptr, ptr @vxge_callback_link_down._entry_ptr.144, ptr @vxge_callback_link_up._entry, ptr @vxge_callback_link_up._entry.138, ptr @vxge_callback_link_up._entry_ptr, ptr @vxge_callback_link_up._entry_ptr.140, ptr @vxge_change_mtu._entry, ptr @vxge_change_mtu._entry.417, ptr @vxge_change_mtu._entry.421, ptr @vxge_change_mtu._entry.424, ptr @vxge_change_mtu._entry.427, ptr @vxge_change_mtu._entry_ptr, ptr @vxge_change_mtu._entry_ptr.419, ptr @vxge_change_mtu._entry_ptr.423, ptr @vxge_change_mtu._entry_ptr.426, ptr @vxge_change_mtu._entry_ptr.428, ptr @vxge_closer, ptr @vxge_config_vpaths._entry, ptr @vxge_config_vpaths._entry.126, ptr @vxge_config_vpaths._entry.129, ptr @vxge_config_vpaths._entry.132, ptr @vxge_config_vpaths._entry_ptr, ptr @vxge_config_vpaths._entry_ptr.128, ptr @vxge_config_vpaths._entry_ptr.131, ptr @vxge_config_vpaths._entry_ptr.134, ptr @vxge_del_mac_addr._entry, ptr @vxge_del_mac_addr._entry_ptr, ptr @vxge_device_config_init._entry, ptr @vxge_device_config_init._entry.112, ptr @vxge_device_config_init._entry.115, ptr @vxge_device_config_init._entry.118, ptr @vxge_device_config_init._entry.121, ptr @vxge_device_config_init._entry_ptr, ptr @vxge_device_config_init._entry_ptr.114, ptr @vxge_device_config_init._entry_ptr.117, ptr @vxge_device_config_init._entry_ptr.120, ptr @vxge_device_config_init._entry_ptr.123, ptr @vxge_device_register._entry, ptr @vxge_device_register._entry.159, ptr @vxge_device_register._entry.163, ptr @vxge_device_register._entry.166, ptr @vxge_device_register._entry.169, ptr @vxge_device_register._entry.172, ptr @vxge_device_register._entry.175, ptr @vxge_device_register._entry.178, ptr @vxge_device_register._entry_ptr, ptr @vxge_device_register._entry_ptr.161, ptr @vxge_device_register._entry_ptr.165, ptr @vxge_device_register._entry_ptr.168, ptr @vxge_device_register._entry_ptr.171, ptr @vxge_device_register._entry_ptr.174, ptr @vxge_device_register._entry_ptr.177, ptr @vxge_device_register._entry_ptr.179, ptr @vxge_device_unregister._entry, ptr @vxge_device_unregister._entry.521, ptr @vxge_device_unregister._entry.524, ptr @vxge_device_unregister._entry_ptr, ptr @vxge_device_unregister._entry_ptr.523, ptr @vxge_device_unregister._entry_ptr.525, ptr @vxge_fw_upgrade._entry, ptr @vxge_fw_upgrade._entry.10, ptr @vxge_fw_upgrade._entry.13, ptr @vxge_fw_upgrade._entry.16, ptr @vxge_fw_upgrade._entry.4, ptr @vxge_fw_upgrade._entry.7, ptr @vxge_fw_upgrade._entry_ptr, ptr @vxge_fw_upgrade._entry_ptr.12, ptr @vxge_fw_upgrade._entry_ptr.15, ptr @vxge_fw_upgrade._entry_ptr.18, ptr @vxge_fw_upgrade._entry_ptr.6, ptr @vxge_fw_upgrade._entry_ptr.9, ptr @vxge_isr_napi._entry, ptr @vxge_isr_napi._entry.318, ptr @vxge_isr_napi._entry.320, ptr @vxge_isr_napi._entry_ptr, ptr @vxge_isr_napi._entry_ptr.319, ptr @vxge_isr_napi._entry_ptr.321, ptr @vxge_learn_mac._entry, ptr @vxge_learn_mac._entry_ptr, ptr @vxge_mac_list_add._entry, ptr @vxge_mac_list_add._entry_ptr, ptr @vxge_netpoll._entry, ptr @vxge_netpoll._entry.436, ptr @vxge_netpoll._entry_ptr, ptr @vxge_netpoll._entry_ptr.437, ptr @vxge_open._entry, ptr @vxge_open._entry.181, ptr @vxge_open._entry.184, ptr @vxge_open._entry.187, ptr @vxge_open._entry.190, ptr @vxge_open._entry.195, ptr @vxge_open._entry.198, ptr @vxge_open._entry.201, ptr @vxge_open._entry.204, ptr @vxge_open._entry.207, ptr @vxge_open._entry.210, ptr @vxge_open._entry_ptr, ptr @vxge_open._entry_ptr.183, ptr @vxge_open._entry_ptr.186, ptr @vxge_open._entry_ptr.189, ptr @vxge_open._entry_ptr.192, ptr @vxge_open._entry_ptr.197, ptr @vxge_open._entry_ptr.200, ptr @vxge_open._entry_ptr.203, ptr @vxge_open._entry_ptr.206, ptr @vxge_open._entry_ptr.209, ptr @vxge_open._entry_ptr.211, ptr @vxge_open_vpaths._entry, ptr @vxge_open_vpaths._entry_ptr, ptr @vxge_print_parm._entry, ptr @vxge_print_parm._entry.471, ptr @vxge_print_parm._entry.474, ptr @vxge_print_parm._entry.477, ptr @vxge_print_parm._entry.480, ptr @vxge_print_parm._entry.483, ptr @vxge_print_parm._entry.486, ptr @vxge_print_parm._entry.489, ptr @vxge_print_parm._entry.491, ptr @vxge_print_parm._entry.493, ptr @vxge_print_parm._entry.495, ptr @vxge_print_parm._entry.498, ptr @vxge_print_parm._entry.501, ptr @vxge_print_parm._entry.504, ptr @vxge_print_parm._entry.506, ptr @vxge_print_parm._entry.509, ptr @vxge_print_parm._entry.512, ptr @vxge_print_parm._entry.517, ptr @vxge_print_parm._entry_ptr, ptr @vxge_print_parm._entry_ptr.473, ptr @vxge_print_parm._entry_ptr.476, ptr @vxge_print_parm._entry_ptr.479, ptr @vxge_print_parm._entry_ptr.482, ptr @vxge_print_parm._entry_ptr.485, ptr @vxge_print_parm._entry_ptr.488, ptr @vxge_print_parm._entry_ptr.490, ptr @vxge_print_parm._entry_ptr.492, ptr @vxge_print_parm._entry_ptr.494, ptr @vxge_print_parm._entry_ptr.497, ptr @vxge_print_parm._entry_ptr.500, ptr @vxge_print_parm._entry_ptr.503, ptr @vxge_print_parm._entry_ptr.505, ptr @vxge_print_parm._entry_ptr.508, ptr @vxge_print_parm._entry_ptr.511, ptr @vxge_print_parm._entry_ptr.514, ptr @vxge_print_parm._entry_ptr.519, ptr @vxge_probe._entry, ptr @vxge_probe._entry.101, ptr @vxge_probe._entry.104, ptr @vxge_probe._entry.107, ptr @vxge_probe._entry.21, ptr @vxge_probe._entry.24, ptr @vxge_probe._entry.27, ptr @vxge_probe._entry.29, ptr @vxge_probe._entry.32, ptr @vxge_probe._entry.35, ptr @vxge_probe._entry.38, ptr @vxge_probe._entry.41, ptr @vxge_probe._entry.44, ptr @vxge_probe._entry.47, ptr @vxge_probe._entry.50, ptr @vxge_probe._entry.53, ptr @vxge_probe._entry.56, ptr @vxge_probe._entry.59, ptr @vxge_probe._entry.62, ptr @vxge_probe._entry.65, ptr @vxge_probe._entry.68, ptr @vxge_probe._entry.71, ptr @vxge_probe._entry.74, ptr @vxge_probe._entry.77, ptr @vxge_probe._entry.80, ptr @vxge_probe._entry.83, ptr @vxge_probe._entry.86, ptr @vxge_probe._entry.89, ptr @vxge_probe._entry.92, ptr @vxge_probe._entry.95, ptr @vxge_probe._entry.98, ptr @vxge_probe._entry_ptr, ptr @vxge_probe._entry_ptr.100, ptr @vxge_probe._entry_ptr.103, ptr @vxge_probe._entry_ptr.106, ptr @vxge_probe._entry_ptr.109, ptr @vxge_probe._entry_ptr.23, ptr @vxge_probe._entry_ptr.26, ptr @vxge_probe._entry_ptr.28, ptr @vxge_probe._entry_ptr.31, ptr @vxge_probe._entry_ptr.34, ptr @vxge_probe._entry_ptr.37, ptr @vxge_probe._entry_ptr.40, ptr @vxge_probe._entry_ptr.43, ptr @vxge_probe._entry_ptr.46, ptr @vxge_probe._entry_ptr.49, ptr @vxge_probe._entry_ptr.52, ptr @vxge_probe._entry_ptr.55, ptr @vxge_probe._entry_ptr.58, ptr @vxge_probe._entry_ptr.61, ptr @vxge_probe._entry_ptr.64, ptr @vxge_probe._entry_ptr.67, ptr @vxge_probe._entry_ptr.70, ptr @vxge_probe._entry_ptr.73, ptr @vxge_probe._entry_ptr.76, ptr @vxge_probe._entry_ptr.79, ptr @vxge_probe._entry_ptr.82, ptr @vxge_probe._entry_ptr.85, ptr @vxge_probe._entry_ptr.88, ptr @vxge_probe._entry_ptr.91, ptr @vxge_probe._entry_ptr.94, ptr @vxge_probe._entry_ptr.97, ptr @vxge_probe_fw_update._entry, ptr @vxge_probe_fw_update._entry.461, ptr @vxge_probe_fw_update._entry.466, ptr @vxge_probe_fw_update._entry_ptr, ptr @vxge_probe_fw_update._entry_ptr.463, ptr @vxge_probe_fw_update._entry_ptr.468, ptr @vxge_remove._entry, ptr @vxge_remove._entry.527, ptr @vxge_remove._entry.530, ptr @vxge_remove._entry.533, ptr @vxge_remove._entry_ptr, ptr @vxge_remove._entry_ptr.529, ptr @vxge_remove._entry_ptr.532, ptr @vxge_remove._entry_ptr.534, ptr @vxge_reset_all_vpaths._entry, ptr @vxge_reset_all_vpaths._entry.344, ptr @vxge_reset_all_vpaths._entry_ptr, ptr @vxge_reset_all_vpaths._entry_ptr.346, ptr @vxge_reset_vpath._entry, ptr @vxge_reset_vpath._entry.334, ptr @vxge_reset_vpath._entry.337, ptr @vxge_reset_vpath._entry_ptr, ptr @vxge_reset_vpath._entry_ptr.336, ptr @vxge_reset_vpath._entry_ptr.338, ptr @vxge_restore_vpath_mac_addr._entry, ptr @vxge_restore_vpath_mac_addr._entry_ptr, ptr @vxge_rth_configure._entry, ptr @vxge_rth_configure._entry.324, ptr @vxge_rth_configure._entry_ptr, ptr @vxge_rth_configure._entry_ptr.326, ptr @vxge_rx_1b_compl._entry, ptr @vxge_rx_1b_compl._entry.236, ptr @vxge_rx_1b_compl._entry.239, ptr @vxge_rx_1b_compl._entry.242, ptr @vxge_rx_1b_compl._entry.245, ptr @vxge_rx_1b_compl._entry.248, ptr @vxge_rx_1b_compl._entry.251, ptr @vxge_rx_1b_compl._entry_ptr, ptr @vxge_rx_1b_compl._entry_ptr.238, ptr @vxge_rx_1b_compl._entry_ptr.241, ptr @vxge_rx_1b_compl._entry_ptr.244, ptr @vxge_rx_1b_compl._entry_ptr.247, ptr @vxge_rx_1b_compl._entry_ptr.250, ptr @vxge_rx_1b_compl._entry_ptr.252, ptr @vxge_rx_alloc._entry, ptr @vxge_rx_alloc._entry.254, ptr @vxge_rx_alloc._entry.257, ptr @vxge_rx_alloc._entry.260, ptr @vxge_rx_alloc._entry_ptr, ptr @vxge_rx_alloc._entry_ptr.256, ptr @vxge_rx_alloc._entry_ptr.259, ptr @vxge_rx_alloc._entry_ptr.261, ptr @vxge_rx_complete._entry, ptr @vxge_rx_complete._entry.271, ptr @vxge_rx_complete._entry.274, ptr @vxge_rx_complete._entry_ptr, ptr @vxge_rx_complete._entry_ptr.273, ptr @vxge_rx_complete._entry_ptr.275, ptr @vxge_rx_initial_replenish._entry, ptr @vxge_rx_initial_replenish._entry.277, ptr @vxge_rx_initial_replenish._entry_ptr, ptr @vxge_rx_initial_replenish._entry_ptr.278, ptr @vxge_rx_map._entry, ptr @vxge_rx_map._entry.263, ptr @vxge_rx_map._entry.266, ptr @vxge_rx_map._entry_ptr, ptr @vxge_rx_map._entry_ptr.265, ptr @vxge_rx_map._entry_ptr.267, ptr @vxge_rx_term._entry, ptr @vxge_rx_term._entry.280, ptr @vxge_rx_term._entry_ptr, ptr @vxge_rx_term._entry_ptr.281, ptr @vxge_search_mac_addr_in_da_table._entry, ptr @vxge_search_mac_addr_in_da_table._entry_ptr, ptr @vxge_set_mac_addr._entry, ptr @vxge_set_mac_addr._entry.411, ptr @vxge_set_mac_addr._entry_ptr, ptr @vxge_set_mac_addr._entry_ptr.412, ptr @vxge_set_multicast._entry, ptr @vxge_set_multicast._entry.389, ptr @vxge_set_multicast._entry.392, ptr @vxge_set_multicast._entry.395, ptr @vxge_set_multicast._entry.400, ptr @vxge_set_multicast._entry.403, ptr @vxge_set_multicast._entry.406, ptr @vxge_set_multicast._entry_ptr, ptr @vxge_set_multicast._entry_ptr.391, ptr @vxge_set_multicast._entry_ptr.394, ptr @vxge_set_multicast._entry_ptr.397, ptr @vxge_set_multicast._entry_ptr.402, ptr @vxge_set_multicast._entry_ptr.405, ptr @vxge_set_multicast._entry_ptr.407, ptr @vxge_starter._entry, ptr @vxge_starter._entry.539, ptr @vxge_starter._entry.543, ptr @vxge_starter._entry_ptr, ptr @vxge_starter._entry_ptr.541, ptr @vxge_starter._entry_ptr.544, ptr @vxge_tx_term._entry, ptr @vxge_tx_term._entry.232, ptr @vxge_tx_term._entry_ptr, ptr @vxge_tx_term._entry_ptr.234, ptr @vxge_tx_watchdog._entry, ptr @vxge_tx_watchdog._entry.430, ptr @vxge_tx_watchdog._entry_ptr, ptr @vxge_tx_watchdog._entry_ptr.431, ptr @vxge_vlan_rx_kill_vid._entry, ptr @vxge_vlan_rx_kill_vid._entry.433, ptr @vxge_vlan_rx_kill_vid._entry_ptr, ptr @vxge_vlan_rx_kill_vid._entry_ptr.434, ptr @vxge_xmit._entry, ptr @vxge_xmit._entry.348, ptr @vxge_xmit._entry.351, ptr @vxge_xmit._entry.354, ptr @vxge_xmit._entry.357, ptr @vxge_xmit._entry.360, ptr @vxge_xmit._entry.363, ptr @vxge_xmit._entry.366, ptr @vxge_xmit._entry.369, ptr @vxge_xmit._entry.372, ptr @vxge_xmit._entry.375, ptr @vxge_xmit._entry.378, ptr @vxge_xmit._entry.380, ptr @vxge_xmit._entry_ptr, ptr @vxge_xmit._entry_ptr.350, ptr @vxge_xmit._entry_ptr.353, ptr @vxge_xmit._entry_ptr.356, ptr @vxge_xmit._entry_ptr.359, ptr @vxge_xmit._entry_ptr.362, ptr @vxge_xmit._entry_ptr.365, ptr @vxge_xmit._entry_ptr.368, ptr @vxge_xmit._entry_ptr.371, ptr @vxge_xmit._entry_ptr.374, ptr @vxge_xmit._entry_ptr.377, ptr @vxge_xmit._entry_ptr.379, ptr @vxge_xmit._entry_ptr.382, ptr @vxge_xmit_compl._entry, ptr @vxge_xmit_compl._entry.219, ptr @vxge_xmit_compl._entry.222, ptr @vxge_xmit_compl._entry.225, ptr @vxge_xmit_compl._entry.228, ptr @vxge_xmit_compl._entry_ptr, ptr @vxge_xmit_compl._entry_ptr.221, ptr @vxge_xmit_compl._entry_ptr.224, ptr @vxge_xmit_compl._entry_ptr.227, ptr @vxge_xmit_compl._entry_ptr.229, ptr @vlan_tag_strip, ptr @addr_learn_en, ptr @max_config_port, ptr @max_config_vpath, ptr @max_mac_vpath, ptr @max_config_dev, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.5, ptr @.str.8, ptr @.str.11, ptr @.str.14, ptr @.str.17, ptr @vxge_driver, ptr @driver_config, ptr @bw_percentage, ptr @vxge_id_table, ptr @vxge_err_handler, ptr @vxge_pm_ops, ptr @vxge_probe.bus, ptr @vxge_probe.device, ptr @.str.19, ptr @.str.20, ptr @.str.22, ptr @.str.25, ptr @.str.30, ptr @.str.33, ptr @.str.36, ptr @.str.39, ptr @.str.42, ptr @.str.45, ptr @.str.48, ptr @.str.51, ptr @.str.54, ptr @.str.57, ptr @vxge_callbacks, ptr @.str.60, ptr @.str.63, ptr @.str.66, ptr @.str.69, ptr @.str.72, ptr @vpath_selector, ptr @.str.75, ptr @.str.78, ptr @.str.81, ptr @.str.84, ptr @.str.87, ptr @.str.90, ptr @.str.93, ptr @.str.96, ptr @.str.99, ptr @.str.102, ptr @.str.105, ptr @.str.108, ptr @.str.110, ptr @.str.111, ptr @.str.113, ptr @.str.116, ptr @.str.119, ptr @.str.122, ptr @.str.124, ptr @.str.125, ptr @.str.127, ptr @.str.130, ptr @.str.133, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.139, ptr @.str.141, ptr @.str.142, ptr @.str.145, ptr @.str.147, ptr @.str.150, ptr @.str.153, ptr @.str.157, ptr @.str.158, ptr @.str.160, ptr @vxge_netdev_ops, ptr @vxge_device_register.__key, ptr @.str.162, ptr @.str.164, ptr @.str.167, ptr @.str.170, ptr @.str.173, ptr @.str.176, ptr @.str.180, ptr @.str.182, ptr @.str.185, ptr @.str.188, ptr @.str.191, ptr @.str.193, ptr @.str.194, ptr @.str.196, ptr @.str.199, ptr @.str.202, ptr @.str.205, ptr @.str.208, ptr @vxge_open_vpaths.__key, ptr @.str.212, ptr @vxge_open_vpaths.__key.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.220, ptr @.str.223, ptr @.str.226, ptr @.str.230, ptr @.str.231, ptr @.str.233, ptr @.str.235, ptr @.str.237, ptr @.str.240, ptr @.str.243, ptr @.str.246, ptr @.str.249, ptr @.str.253, ptr @.str.255, ptr @.str.258, ptr @.str.262, ptr @.str.264, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.272, ptr @.str.276, ptr @.str.279, ptr @.str.282, ptr @.str.283, ptr @.str.285, ptr @.str.287, ptr @.str.288, ptr @.str.290, ptr @.str.294, ptr @.str.296, ptr @.str.300, ptr @.str.302, ptr @.str.304, ptr @.str.306, ptr @.str.308, ptr @.str.309, ptr @.str.313, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.322, ptr @.str.323, ptr @.str.325, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @vxge_os_timer.__key, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.335, ptr @.str.339, ptr @.str.342, ptr @.str.343, ptr @.str.345, ptr @.str.347, ptr @.str.349, ptr @.str.352, ptr @.str.355, ptr @.str.358, ptr @.str.361, ptr @.str.364, ptr @.str.367, ptr @.str.370, ptr @.str.373, ptr @.str.376, ptr @.str.381, ptr @.str.383, ptr @.str.384, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.390, ptr @.str.393, ptr @.str.396, ptr @.str.398, ptr @.str.399, ptr @.str.401, ptr @.str.404, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.415, ptr @.str.416, ptr @.str.418, ptr @.str.420, ptr @.str.422, ptr @.str.425, ptr @.str.429, ptr @.str.432, ptr @.str.435, ptr @.str.438, ptr @.str.440, ptr @.str.443, ptr @.str.446, ptr @.str.451, ptr @.str.459, ptr @.str.460, ptr @.str.462, ptr @.str.464, ptr @.str.465, ptr @.str.467, ptr @.str.469, ptr @.str.470, ptr @.str.472, ptr @.str.475, ptr @.str.478, ptr @.str.481, ptr @.str.484, ptr @.str.487, ptr @.str.496, ptr @.str.499, ptr @.str.502, ptr @.str.507, ptr @.str.510, ptr @.str.513, ptr @.str.515, ptr @.str.516, ptr @.str.518, ptr @.str.520, ptr @.str.522, ptr @.str.526, ptr @.str.528, ptr @.str.531, ptr @.str.535, ptr @.str.536, ptr @.str.537, ptr @.str.538, ptr @.str.540, ptr @.str.542, ptr @.str.545, ptr @.str.546, ptr @switch.table.vxge_probe], section "llvm.metadata"
@0 = internal global [451 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vlan_tag_strip to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @addr_learn_en to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @max_config_port to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @max_config_vpath to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @max_mac_vpath to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @max_config_dev to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_fw_upgrade._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_fw_upgrade._entry.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_fw_upgrade._entry.7 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_fw_upgrade._entry.10 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_fw_upgrade._entry.13 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_fw_upgrade._entry.16 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_driver to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @driver_config to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bw_percentage to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_id_table to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_err_handler to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe.bus to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe.device to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.24 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.27 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.32 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.41 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.47 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.50 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.53 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.56 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callbacks to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.59 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.62 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.65 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.68 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vpath_selector to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.74 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.86 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.92 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.95 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.98 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.101 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.104 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe._entry.107 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_config_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_config_init._entry.112 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_config_init._entry.115 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_config_init._entry.118 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_config_init._entry.121 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_config_vpaths._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_config_vpaths._entry.126 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_config_vpaths._entry.129 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_config_vpaths._entry.132 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_link_up._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_link_up._entry.138 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_link_down._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_link_down._entry.143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_crit_err._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.939 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.939 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_crit_err._entry.146 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_crit_err._entry.149 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_crit_err._entry.152 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_callback_crit_err._entry.155 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register._entry.159 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_netdev_ops to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register._entry.163 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register._entry.166 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register._entry.169 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register._entry.172 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register._entry.175 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_register._entry.178 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.181 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.184 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.187 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.190 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.195 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.198 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.201 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.204 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.207 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open._entry.210 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1086 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open_vpaths.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open_vpaths.__key.213 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_open_vpaths._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit_compl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1116 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1116 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1116 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit_compl._entry.219 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit_compl._entry.222 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit_compl._entry.225 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit_compl._entry.228 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_tx_term._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_tx_term._entry.232 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_1b_compl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_1b_compl._entry.236 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_1b_compl._entry.239 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_1b_compl._entry.242 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_1b_compl._entry.245 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_1b_compl._entry.248 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_1b_compl._entry.251 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_alloc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_alloc._entry.254 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_alloc._entry.257 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_alloc._entry.260 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_map._entry.263 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_map._entry.266 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_complete._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_complete._entry.271 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_complete._entry.274 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_initial_replenish._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_initial_replenish._entry.277 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_term._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rx_term._entry.280 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_isr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_isr._entry.284 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_isr._entry.289 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_isr._entry.292 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_isr._entry.295 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_isr._entry.298 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_isr._entry.301 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_isr._entry.305 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_alloc_msix._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_alloc_msix._entry.310 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_alloc_msix._entry.312 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_alarm_msix_handle._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_isr_napi._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_isr_napi._entry.318 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_isr_napi._entry.320 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rth_configure._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_rth_configure._entry.324 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_restore_vpath_mac_addr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_search_mac_addr_in_da_table._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_os_timer.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_reset_vpath._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_reset_vpath._entry.334 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_reset_vpath._entry.337 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_close._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_close._entry.340 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_reset_all_vpaths._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_reset_all_vpaths._entry.344 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.348 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.351 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.354 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.357 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.360 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.363 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.366 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.369 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.372 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.375 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.378 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_xmit._entry.380 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_learn_mac._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_add_mac_addr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_mac_list_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_multicast._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_multicast._entry.389 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_multicast._entry.392 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.393 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_multicast._entry.395 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.396 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.398 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.399 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_multicast._entry.400 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_multicast._entry.403 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_multicast._entry.406 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_del_mac_addr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_mac_addr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_set_mac_addr._entry.411 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.415 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_change_mtu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_change_mtu._entry.417 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.418 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.420 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_change_mtu._entry.421 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_change_mtu._entry.424 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.425 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_change_mtu._entry.427 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_tx_watchdog._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_tx_watchdog._entry.430 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_vlan_rx_kill_vid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.432 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_vlan_rx_kill_vid._entry.433 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_netpoll._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.435 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_netpoll._entry.436 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.438 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry.439 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.440 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry.442 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.443 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry.445 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.446 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry.448 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry.450 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.451 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry.453 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry.455 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_vxge_reset._entry.457 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe_fw_update._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.459 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.460 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe_fw_update._entry.461 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.462 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.465 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_probe_fw_update._entry.466 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.470 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.471 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.474 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.477 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.478 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.480 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.483 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.484 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.486 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.487 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.489 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.491 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.493 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.495 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.496 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.498 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.499 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.501 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.502 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.504 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.506 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.507 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.509 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.510 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.512 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.513 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.515 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.516 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_print_parm._entry.517 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.518 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_unregister._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.520 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_unregister._entry.521 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.522 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_device_unregister._entry.524 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_remove._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.526 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_remove._entry.527 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.528 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_remove._entry.530 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.531 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_remove._entry.533 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.535 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.536 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_starter._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.537 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.538 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_starter._entry.539 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.540 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.542 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vxge_starter._entry.543 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @verify_bandwidth._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.545 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.546 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.vxge_probe to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 ptrtoint (ptr @___asan_gen_.1913 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vxge_fw_upgrade(ptr nocapture noundef readonly %vdev, ptr noundef %fw_name, i32 noundef %override) local_unnamed_addr #0 align 64 {
entry:
  %maj = alloca i32, align 4
  %min = alloca i32, align 4
  %bld = alloca i32, align 4
  %fw = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %devh = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 2
  %0 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %devh, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %maj) #16
  %2 = ptrtoint ptr %maj to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %maj, align 4, !annotation !947
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %min) #16
  %3 = ptrtoint ptr %min to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %min, align 4, !annotation !947
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bld) #16
  %4 = ptrtoint ptr %bld to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %bld, align 4, !annotation !947
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fw) #16
  %5 = ptrtoint ptr %fw to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr inttoptr (i32 -1 to ptr), ptr %fw, align 4, !annotation !947
  %pdev = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 1
  %6 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  %call = call i32 @request_firmware(ptr noundef nonnull %fw, ptr noundef %fw_name, ptr noundef %dev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str, ptr noundef nonnull @.str.3, ptr noundef %fw_name) #19
  br label %out

if.end:                                           ; preds = %entry
  %8 = ptrtoint ptr %fw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fw, align 4
  %data = getelementptr inbounds %struct.firmware, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data, align 4
  %12 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %9, align 4
  %call5 = call i32 @vxge_update_fw_image(ptr noundef %1, ptr noundef %11, i32 noundef %13) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp.not = icmp eq i32 %call5, 0
  br i1 %cmp.not, label %if.end15, label %do.end10

do.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call12 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, ptr noundef %fw_name) #19
  br label %out

if.end15:                                         ; preds = %if.end
  %call16 = call i32 @vxge_hw_upgrade_read_version(ptr noundef %1, ptr noundef nonnull %maj, ptr noundef nonnull %min, ptr noundef nonnull %bld) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %cmp17.not = icmp eq i32 %call16, 0
  br i1 %cmp17.not, label %if.end27, label %do.end22

do.end22:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.3, ptr noundef %fw_name) #19
  br label %out

if.end27:                                         ; preds = %if.end15
  %fw_version = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 9, i32 4
  %14 = ptrtoint ptr %fw_version to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %fw_version, align 8
  %minor = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 9, i32 4, i32 1
  %16 = ptrtoint ptr %minor to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %minor, align 4
  %build = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 9, i32 4, i32 2
  %18 = ptrtoint ptr %build to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %build, align 8
  %20 = ptrtoint ptr %maj to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %maj, align 4
  %shl = shl i32 %21, 16
  %22 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %min, align 4
  %shl34 = shl i32 %23, 8
  %add = add i32 %shl34, %shl
  %24 = ptrtoint ptr %bld to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %bld, align 4
  %add35 = add i32 %add, %25
  %shl36 = shl i32 %15, 16
  %shl37 = shl i32 %17, 8
  %add38 = add i32 %shl37, %shl36
  %add39 = add i32 %add38, %19
  call void @__sanitizer_cov_trace_cmp4(i32 %add35, i32 %add39)
  %cmp40 = icmp eq i32 %add35, %add39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %override)
  %tobool41.not = icmp eq i32 %override, 0
  %or.cond = and i1 %tobool41.not, %cmp40
  br i1 %or.cond, label %if.end27.out_crit_edge, label %do.end46

if.end27.out_crit_edge:                           ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

do.end46:                                         ; preds = %if.end27
  %call48 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.11, i32 noundef %21, i32 noundef %23, i32 noundef %25) #19
  %call49 = call i32 @vxge_hw_flash_fw(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49)
  %cmp50.not = icmp eq i32 %call49, 0
  br i1 %cmp50.not, label %do.end63, label %do.end55

do.end55:                                         ; preds = %do.end46
  call void @__sanitizer_cov_trace_pc() #18
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.14, ptr noundef nonnull @.str.3, ptr noundef %fw_name) #19
  br label %out

do.end63:                                         ; preds = %do.end46
  call void @__sanitizer_cov_trace_pc() #18
  %call65 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17) #19
  br label %out

out:                                              ; preds = %do.end63, %do.end55, %if.end27.out_crit_edge, %do.end22, %do.end10, %do.end
  %ret.0 = phi i32 [ %call, %do.end ], [ -5, %do.end10 ], [ -5, %do.end22 ], [ -5, %do.end55 ], [ 0, %do.end63 ], [ -22, %if.end27.out_crit_edge ]
  %26 = ptrtoint ptr %fw to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %fw, align 4
  call void @release_firmware(ptr noundef %27) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fw) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bld) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %min) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %maj) #16
  ret i32 %ret.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_firmware(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_update_fw_image(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_upgrade_read_version(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_flash_fw(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_firmware(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @vxge_closer() #4 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @pci_unregister_driver(ptr noundef nonnull @vxge_driver) #16
  %0 = load ptr, ptr @driver_config, align 4
  tail call void @kfree(ptr noundef %0) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_unregister_driver(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_starter() #4 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.537) #19
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.540, ptr noundef nonnull @.str.542) #19
  %0 = load i32, ptr @bw_percentage, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp1.i = icmp eq i32 %0, 0
  br i1 %cmp1.i, label %entry.do.end.i_crit_edge, label %for.cond.i

entry.do.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.i:                                       ; preds = %entry
  %1 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 1), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp1.1.i = icmp eq i32 %1, 0
  br i1 %cmp1.1.i, label %for.cond.i.do.end.i_crit_edge, label %for.cond.1.i

for.cond.i.do.end.i_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.1.i:                                     ; preds = %for.cond.i
  %2 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp1.2.i = icmp eq i32 %2, 0
  br i1 %cmp1.2.i, label %for.cond.1.i.do.end.i_crit_edge, label %for.cond.2.i

for.cond.1.i.do.end.i_crit_edge:                  ; preds = %for.cond.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.2.i:                                     ; preds = %for.cond.1.i
  %3 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 3), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1.3.i = icmp eq i32 %3, 0
  br i1 %cmp1.3.i, label %for.cond.2.i.do.end.i_crit_edge, label %for.cond.3.i

for.cond.2.i.do.end.i_crit_edge:                  ; preds = %for.cond.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.3.i:                                     ; preds = %for.cond.2.i
  %4 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 4), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp1.4.i = icmp eq i32 %4, 0
  br i1 %cmp1.4.i, label %for.cond.3.i.do.end.i_crit_edge, label %for.cond.4.i

for.cond.3.i.do.end.i_crit_edge:                  ; preds = %for.cond.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.4.i:                                     ; preds = %for.cond.3.i
  %5 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 5), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp1.5.i = icmp eq i32 %5, 0
  br i1 %cmp1.5.i, label %for.cond.4.i.do.end.i_crit_edge, label %for.cond.5.i

for.cond.4.i.do.end.i_crit_edge:                  ; preds = %for.cond.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.5.i:                                     ; preds = %for.cond.4.i
  %6 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 6), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp1.6.i = icmp eq i32 %6, 0
  br i1 %cmp1.6.i, label %for.cond.5.i.do.end.i_crit_edge, label %for.cond.6.i

for.cond.5.i.do.end.i_crit_edge:                  ; preds = %for.cond.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.6.i:                                     ; preds = %for.cond.5.i
  %7 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 7), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp1.7.i = icmp eq i32 %7, 0
  br i1 %cmp1.7.i, label %for.cond.6.i.do.end.i_crit_edge, label %for.cond.7.i

for.cond.6.i.do.end.i_crit_edge:                  ; preds = %for.cond.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.7.i:                                     ; preds = %for.cond.6.i
  %8 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 8), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp1.8.i = icmp eq i32 %8, 0
  br i1 %cmp1.8.i, label %for.cond.7.i.do.end.i_crit_edge, label %for.cond.8.i

for.cond.7.i.do.end.i_crit_edge:                  ; preds = %for.cond.7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.8.i:                                     ; preds = %for.cond.7.i
  %9 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 9), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp1.9.i = icmp eq i32 %9, 0
  br i1 %cmp1.9.i, label %for.cond.8.i.do.end.i_crit_edge, label %for.cond.9.i

for.cond.8.i.do.end.i_crit_edge:                  ; preds = %for.cond.8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.9.i:                                     ; preds = %for.cond.8.i
  %10 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 10), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp1.10.i = icmp eq i32 %10, 0
  br i1 %cmp1.10.i, label %for.cond.9.i.do.end.i_crit_edge, label %for.cond.10.i

for.cond.9.i.do.end.i_crit_edge:                  ; preds = %for.cond.9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.10.i:                                    ; preds = %for.cond.9.i
  %11 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 11), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp1.11.i = icmp eq i32 %11, 0
  br i1 %cmp1.11.i, label %for.cond.10.i.do.end.i_crit_edge, label %for.cond.11.i

for.cond.10.i.do.end.i_crit_edge:                 ; preds = %for.cond.10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.11.i:                                    ; preds = %for.cond.10.i
  %12 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 12), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp1.12.i = icmp eq i32 %12, 0
  br i1 %cmp1.12.i, label %for.cond.11.i.do.end.i_crit_edge, label %for.cond.12.i

for.cond.11.i.do.end.i_crit_edge:                 ; preds = %for.cond.11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.12.i:                                    ; preds = %for.cond.11.i
  %13 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 13), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp1.13.i = icmp eq i32 %13, 0
  br i1 %cmp1.13.i, label %for.cond.12.i.do.end.i_crit_edge, label %for.cond.13.i

for.cond.12.i.do.end.i_crit_edge:                 ; preds = %for.cond.12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.13.i:                                    ; preds = %for.cond.12.i
  %14 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 14), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp1.14.i = icmp eq i32 %14, 0
  br i1 %cmp1.14.i, label %for.cond.13.i.do.end.i_crit_edge, label %for.cond.14.i

for.cond.13.i.do.end.i_crit_edge:                 ; preds = %for.cond.13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.14.i:                                    ; preds = %for.cond.13.i
  %15 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 15), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp1.15.i = icmp eq i32 %15, 0
  br i1 %cmp1.15.i, label %for.cond.14.i.do.end.i_crit_edge, label %for.cond.15.i

for.cond.14.i.do.end.i_crit_edge:                 ; preds = %for.cond.14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.15.i:                                    ; preds = %for.cond.14.i
  %16 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 16), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp1.16.i = icmp eq i32 %16, 0
  br i1 %cmp1.16.i, label %for.cond.15.i.do.end.i_crit_edge, label %for.cond.16.i

for.cond.15.i.do.end.i_crit_edge:                 ; preds = %for.cond.15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.cond.16.i:                                    ; preds = %for.cond.15.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %0)
  %cmp7.i = icmp eq i32 %0, 255
  br i1 %cmp7.i, label %for.cond.16.i.if.then23.i_crit_edge, label %if.end9.i

for.cond.16.i.if.then23.i_crit_edge:              ; preds = %for.cond.16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then23.i

if.end9.i:                                        ; preds = %for.cond.16.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %0)
  %cmp11.i = icmp sgt i32 %0, 100
  br i1 %cmp11.i, label %if.end9.i.do.end.i_crit_edge, label %for.inc14.i

if.end9.i.do.end.i_crit_edge:                     ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %1)
  %cmp7.1.i = icmp eq i32 %1, 255
  br i1 %cmp7.1.i, label %for.inc14.i.if.then19.i_crit_edge, label %if.end9.1.i

for.inc14.i.if.then19.i_crit_edge:                ; preds = %for.inc14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.1.i:                                      ; preds = %for.inc14.i
  %add.1.i = add i32 %1, %0
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.1.i)
  %cmp11.1.i = icmp sgt i32 %add.1.i, 100
  br i1 %cmp11.1.i, label %if.end9.1.i.do.end.i_crit_edge, label %for.inc14.1.i

if.end9.1.i.do.end.i_crit_edge:                   ; preds = %if.end9.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.1.i:                                    ; preds = %if.end9.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %2)
  %cmp7.2.i = icmp eq i32 %2, 255
  br i1 %cmp7.2.i, label %for.inc14.1.i.if.then19.i_crit_edge, label %if.end9.2.i

for.inc14.1.i.if.then19.i_crit_edge:              ; preds = %for.inc14.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.2.i:                                      ; preds = %for.inc14.1.i
  %add.2.i = add i32 %2, %add.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.2.i)
  %cmp11.2.i = icmp sgt i32 %add.2.i, 100
  br i1 %cmp11.2.i, label %if.end9.2.i.do.end.i_crit_edge, label %for.inc14.2.i

if.end9.2.i.do.end.i_crit_edge:                   ; preds = %if.end9.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.2.i:                                    ; preds = %if.end9.2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %3)
  %cmp7.3.i = icmp eq i32 %3, 255
  br i1 %cmp7.3.i, label %for.inc14.2.i.if.then19.i_crit_edge, label %if.end9.3.i

for.inc14.2.i.if.then19.i_crit_edge:              ; preds = %for.inc14.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.3.i:                                      ; preds = %for.inc14.2.i
  %add.3.i = add i32 %3, %add.2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.3.i)
  %cmp11.3.i = icmp sgt i32 %add.3.i, 100
  br i1 %cmp11.3.i, label %if.end9.3.i.do.end.i_crit_edge, label %for.inc14.3.i

if.end9.3.i.do.end.i_crit_edge:                   ; preds = %if.end9.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.3.i:                                    ; preds = %if.end9.3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %4)
  %cmp7.4.i = icmp eq i32 %4, 255
  br i1 %cmp7.4.i, label %for.inc14.3.i.if.then19.i_crit_edge, label %if.end9.4.i

for.inc14.3.i.if.then19.i_crit_edge:              ; preds = %for.inc14.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.4.i:                                      ; preds = %for.inc14.3.i
  %add.4.i = add i32 %4, %add.3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.4.i)
  %cmp11.4.i = icmp sgt i32 %add.4.i, 100
  br i1 %cmp11.4.i, label %if.end9.4.i.do.end.i_crit_edge, label %for.inc14.4.i

if.end9.4.i.do.end.i_crit_edge:                   ; preds = %if.end9.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.4.i:                                    ; preds = %if.end9.4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %5)
  %cmp7.5.i = icmp eq i32 %5, 255
  br i1 %cmp7.5.i, label %for.inc14.4.i.if.then19.i_crit_edge, label %if.end9.5.i

for.inc14.4.i.if.then19.i_crit_edge:              ; preds = %for.inc14.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.5.i:                                      ; preds = %for.inc14.4.i
  %add.5.i = add i32 %5, %add.4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.5.i)
  %cmp11.5.i = icmp sgt i32 %add.5.i, 100
  br i1 %cmp11.5.i, label %if.end9.5.i.do.end.i_crit_edge, label %for.inc14.5.i

if.end9.5.i.do.end.i_crit_edge:                   ; preds = %if.end9.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.5.i:                                    ; preds = %if.end9.5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %6)
  %cmp7.6.i = icmp eq i32 %6, 255
  br i1 %cmp7.6.i, label %for.inc14.5.i.if.then19.i_crit_edge, label %if.end9.6.i

for.inc14.5.i.if.then19.i_crit_edge:              ; preds = %for.inc14.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.6.i:                                      ; preds = %for.inc14.5.i
  %add.6.i = add i32 %6, %add.5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.6.i)
  %cmp11.6.i = icmp sgt i32 %add.6.i, 100
  br i1 %cmp11.6.i, label %if.end9.6.i.do.end.i_crit_edge, label %for.inc14.6.i

if.end9.6.i.do.end.i_crit_edge:                   ; preds = %if.end9.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.6.i:                                    ; preds = %if.end9.6.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %7)
  %cmp7.7.i = icmp eq i32 %7, 255
  br i1 %cmp7.7.i, label %for.inc14.6.i.if.then19.i_crit_edge, label %if.end9.7.i

for.inc14.6.i.if.then19.i_crit_edge:              ; preds = %for.inc14.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.7.i:                                      ; preds = %for.inc14.6.i
  %add.7.i = add i32 %7, %add.6.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.7.i)
  %cmp11.7.i = icmp sgt i32 %add.7.i, 100
  br i1 %cmp11.7.i, label %if.end9.7.i.do.end.i_crit_edge, label %for.inc14.7.i

if.end9.7.i.do.end.i_crit_edge:                   ; preds = %if.end9.7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.7.i:                                    ; preds = %if.end9.7.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %8)
  %cmp7.8.i = icmp eq i32 %8, 255
  br i1 %cmp7.8.i, label %for.inc14.7.i.if.then19.i_crit_edge, label %if.end9.8.i

for.inc14.7.i.if.then19.i_crit_edge:              ; preds = %for.inc14.7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.8.i:                                      ; preds = %for.inc14.7.i
  %add.8.i = add i32 %8, %add.7.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.8.i)
  %cmp11.8.i = icmp sgt i32 %add.8.i, 100
  br i1 %cmp11.8.i, label %if.end9.8.i.do.end.i_crit_edge, label %for.inc14.8.i

if.end9.8.i.do.end.i_crit_edge:                   ; preds = %if.end9.8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.8.i:                                    ; preds = %if.end9.8.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %9)
  %cmp7.9.i = icmp eq i32 %9, 255
  br i1 %cmp7.9.i, label %for.inc14.8.i.if.then19.i_crit_edge, label %if.end9.9.i

for.inc14.8.i.if.then19.i_crit_edge:              ; preds = %for.inc14.8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.9.i:                                      ; preds = %for.inc14.8.i
  %add.9.i = add i32 %9, %add.8.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.9.i)
  %cmp11.9.i = icmp sgt i32 %add.9.i, 100
  br i1 %cmp11.9.i, label %if.end9.9.i.do.end.i_crit_edge, label %for.inc14.9.i

if.end9.9.i.do.end.i_crit_edge:                   ; preds = %if.end9.9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.9.i:                                    ; preds = %if.end9.9.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %10)
  %cmp7.10.i = icmp eq i32 %10, 255
  br i1 %cmp7.10.i, label %for.inc14.9.i.if.then19.i_crit_edge, label %if.end9.10.i

for.inc14.9.i.if.then19.i_crit_edge:              ; preds = %for.inc14.9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.10.i:                                     ; preds = %for.inc14.9.i
  %add.10.i = add i32 %10, %add.9.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.10.i)
  %cmp11.10.i = icmp sgt i32 %add.10.i, 100
  br i1 %cmp11.10.i, label %if.end9.10.i.do.end.i_crit_edge, label %for.inc14.10.i

if.end9.10.i.do.end.i_crit_edge:                  ; preds = %if.end9.10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.10.i:                                   ; preds = %if.end9.10.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %11)
  %cmp7.11.i = icmp eq i32 %11, 255
  br i1 %cmp7.11.i, label %for.inc14.10.i.if.then19.i_crit_edge, label %if.end9.11.i

for.inc14.10.i.if.then19.i_crit_edge:             ; preds = %for.inc14.10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.11.i:                                     ; preds = %for.inc14.10.i
  %add.11.i = add i32 %11, %add.10.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.11.i)
  %cmp11.11.i = icmp sgt i32 %add.11.i, 100
  br i1 %cmp11.11.i, label %if.end9.11.i.do.end.i_crit_edge, label %for.inc14.11.i

if.end9.11.i.do.end.i_crit_edge:                  ; preds = %if.end9.11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.11.i:                                   ; preds = %if.end9.11.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %12)
  %cmp7.12.i = icmp eq i32 %12, 255
  br i1 %cmp7.12.i, label %for.inc14.11.i.if.then19.i_crit_edge, label %if.end9.12.i

for.inc14.11.i.if.then19.i_crit_edge:             ; preds = %for.inc14.11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.12.i:                                     ; preds = %for.inc14.11.i
  %add.12.i = add i32 %12, %add.11.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.12.i)
  %cmp11.12.i = icmp sgt i32 %add.12.i, 100
  br i1 %cmp11.12.i, label %if.end9.12.i.do.end.i_crit_edge, label %for.inc14.12.i

if.end9.12.i.do.end.i_crit_edge:                  ; preds = %if.end9.12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.12.i:                                   ; preds = %if.end9.12.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %13)
  %cmp7.13.i = icmp eq i32 %13, 255
  br i1 %cmp7.13.i, label %for.inc14.12.i.if.then19.i_crit_edge, label %if.end9.13.i

for.inc14.12.i.if.then19.i_crit_edge:             ; preds = %for.inc14.12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.13.i:                                     ; preds = %for.inc14.12.i
  %add.13.i = add i32 %13, %add.12.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.13.i)
  %cmp11.13.i = icmp sgt i32 %add.13.i, 100
  br i1 %cmp11.13.i, label %if.end9.13.i.do.end.i_crit_edge, label %for.inc14.13.i

if.end9.13.i.do.end.i_crit_edge:                  ; preds = %if.end9.13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.13.i:                                   ; preds = %if.end9.13.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %14)
  %cmp7.14.i = icmp eq i32 %14, 255
  br i1 %cmp7.14.i, label %for.inc14.13.i.if.then19.i_crit_edge, label %if.end9.14.i

for.inc14.13.i.if.then19.i_crit_edge:             ; preds = %for.inc14.13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.14.i:                                     ; preds = %for.inc14.13.i
  %add.14.i = add i32 %14, %add.13.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.14.i)
  %cmp11.14.i = icmp sgt i32 %add.14.i, 100
  br i1 %cmp11.14.i, label %if.end9.14.i.do.end.i_crit_edge, label %for.inc14.14.i

if.end9.14.i.do.end.i_crit_edge:                  ; preds = %if.end9.14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.14.i:                                   ; preds = %if.end9.14.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %15)
  %cmp7.15.i = icmp eq i32 %15, 255
  br i1 %cmp7.15.i, label %for.inc14.14.i.if.then19.i_crit_edge, label %if.end9.15.i

for.inc14.14.i.if.then19.i_crit_edge:             ; preds = %for.inc14.14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.15.i:                                     ; preds = %for.inc14.14.i
  %add.15.i = add i32 %15, %add.14.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.15.i)
  %cmp11.15.i = icmp sgt i32 %add.15.i, 100
  br i1 %cmp11.15.i, label %if.end9.15.i.do.end.i_crit_edge, label %for.inc14.15.i

if.end9.15.i.do.end.i_crit_edge:                  ; preds = %if.end9.15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.inc14.15.i:                                   ; preds = %if.end9.15.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %16)
  %cmp7.16.i = icmp eq i32 %16, 255
  br i1 %cmp7.16.i, label %for.inc14.15.i.if.then19.i_crit_edge, label %if.end9.16.i

for.inc14.15.i.if.then19.i_crit_edge:             ; preds = %for.inc14.15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then19.i

if.end9.16.i:                                     ; preds = %for.inc14.15.i
  %add.16.i = add i32 %16, %add.15.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %add.16.i)
  %cmp11.16.i = icmp sgt i32 %add.16.i, 100
  br i1 %cmp11.16.i, label %if.end9.16.i.do.end.i_crit_edge, label %if.end9.16.i.verify_bandwidth.exit_crit_edge

if.end9.16.i.verify_bandwidth.exit_crit_edge:     ; preds = %if.end9.16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %verify_bandwidth.exit

if.end9.16.i.do.end.i_crit_edge:                  ; preds = %if.end9.16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.then19.i:                                      ; preds = %for.inc14.15.i.if.then19.i_crit_edge, %for.inc14.14.i.if.then19.i_crit_edge, %for.inc14.13.i.if.then19.i_crit_edge, %for.inc14.12.i.if.then19.i_crit_edge, %for.inc14.11.i.if.then19.i_crit_edge, %for.inc14.10.i.if.then19.i_crit_edge, %for.inc14.9.i.if.then19.i_crit_edge, %for.inc14.8.i.if.then19.i_crit_edge, %for.inc14.7.i.if.then19.i_crit_edge, %for.inc14.6.i.if.then19.i_crit_edge, %for.inc14.5.i.if.then19.i_crit_edge, %for.inc14.4.i.if.then19.i_crit_edge, %for.inc14.3.i.if.then19.i_crit_edge, %for.inc14.2.i.if.then19.i_crit_edge, %for.inc14.1.i.if.then19.i_crit_edge, %for.inc14.i.if.then19.i_crit_edge
  %total.0.lcssa.i = phi i32 [ %0, %for.inc14.i.if.then19.i_crit_edge ], [ %add.1.i, %for.inc14.1.i.if.then19.i_crit_edge ], [ %add.2.i, %for.inc14.2.i.if.then19.i_crit_edge ], [ %add.3.i, %for.inc14.3.i.if.then19.i_crit_edge ], [ %add.4.i, %for.inc14.4.i.if.then19.i_crit_edge ], [ %add.5.i, %for.inc14.5.i.if.then19.i_crit_edge ], [ %add.6.i, %for.inc14.6.i.if.then19.i_crit_edge ], [ %add.7.i, %for.inc14.7.i.if.then19.i_crit_edge ], [ %add.8.i, %for.inc14.8.i.if.then19.i_crit_edge ], [ %add.9.i, %for.inc14.9.i.if.then19.i_crit_edge ], [ %add.10.i, %for.inc14.10.i.if.then19.i_crit_edge ], [ %add.11.i, %for.inc14.11.i.if.then19.i_crit_edge ], [ %add.12.i, %for.inc14.12.i.if.then19.i_crit_edge ], [ %add.13.i, %for.inc14.13.i.if.then19.i_crit_edge ], [ %add.14.i, %for.inc14.14.i.if.then19.i_crit_edge ], [ %add.15.i, %for.inc14.15.i.if.then19.i_crit_edge ]
  %i.1.lcssa.i = phi i32 [ 1, %for.inc14.i.if.then19.i_crit_edge ], [ 2, %for.inc14.1.i.if.then19.i_crit_edge ], [ 3, %for.inc14.2.i.if.then19.i_crit_edge ], [ 4, %for.inc14.3.i.if.then19.i_crit_edge ], [ 5, %for.inc14.4.i.if.then19.i_crit_edge ], [ 6, %for.inc14.5.i.if.then19.i_crit_edge ], [ 7, %for.inc14.6.i.if.then19.i_crit_edge ], [ 8, %for.inc14.7.i.if.then19.i_crit_edge ], [ 9, %for.inc14.8.i.if.then19.i_crit_edge ], [ 10, %for.inc14.9.i.if.then19.i_crit_edge ], [ 11, %for.inc14.10.i.if.then19.i_crit_edge ], [ 12, %for.inc14.11.i.if.then19.i_crit_edge ], [ 13, %for.inc14.12.i.if.then19.i_crit_edge ], [ 14, %for.inc14.13.i.if.then19.i_crit_edge ], [ 15, %for.inc14.14.i.if.then19.i_crit_edge ], [ 16, %for.inc14.15.i.if.then19.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %total.0.lcssa.i)
  %cmp20.i = icmp slt i32 %total.0.lcssa.i, 100
  br i1 %cmp20.i, label %if.then19.i.if.then23.i_crit_edge, label %if.then19.i.do.end.i_crit_edge

if.then19.i.do.end.i_crit_edge:                   ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.then19.i.if.then23.i_crit_edge:                ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then23.i

if.then23.i:                                      ; preds = %if.then19.i.if.then23.i_crit_edge, %for.cond.16.i.if.then23.i_crit_edge
  %total.0.lcssa101108.i = phi i32 [ 0, %for.cond.16.i.if.then23.i_crit_edge ], [ %total.0.lcssa.i, %if.then19.i.if.then23.i_crit_edge ]
  %i.1.lcssa103107.i = phi i32 [ 0, %for.cond.16.i.if.then23.i_crit_edge ], [ %i.1.lcssa.i, %if.then19.i.if.then23.i_crit_edge ]
  %sub.i = sub i32 100, %total.0.lcssa101108.i
  %sub24.i = sub nuw nsw i32 17, %i.1.lcssa103107.i
  %div.i = sdiv i32 %sub.i, %sub24.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %div.i)
  %cmp25.i = icmp slt i32 %div.i, 2
  br i1 %cmp25.i, label %if.then23.i.do.end.i_crit_edge, label %if.then23.i.for.body29.i_crit_edge

if.then23.i.for.body29.i_crit_edge:               ; preds = %if.then23.i
  br label %for.body29.i

if.then23.i.do.end.i_crit_edge:                   ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

for.body29.i:                                     ; preds = %for.body29.i.for.body29.i_crit_edge, %if.then23.i.for.body29.i_crit_edge
  %i.391.i = phi i32 [ %inc32.i, %for.body29.i.for.body29.i_crit_edge ], [ %i.1.lcssa103107.i, %if.then23.i.for.body29.i_crit_edge ]
  %arrayidx30.i = getelementptr [17 x i32], ptr @bw_percentage, i32 0, i32 %i.391.i
  %17 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %div.i, ptr %arrayidx30.i, align 4
  %inc32.i = add nuw nsw i32 %i.391.i, 1
  %exitcond.not.i = icmp eq i32 %inc32.i, 17
  br i1 %exitcond.not.i, label %for.body29.i.verify_bandwidth.exit_crit_edge, label %for.body29.i.for.body29.i_crit_edge

for.body29.i.for.body29.i_crit_edge:              ; preds = %for.body29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body29.i

for.body29.i.verify_bandwidth.exit_crit_edge:     ; preds = %for.body29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %verify_bandwidth.exit

do.end.i:                                         ; preds = %if.then23.i.do.end.i_crit_edge, %if.then19.i.do.end.i_crit_edge, %if.end9.16.i.do.end.i_crit_edge, %if.end9.15.i.do.end.i_crit_edge, %if.end9.14.i.do.end.i_crit_edge, %if.end9.13.i.do.end.i_crit_edge, %if.end9.12.i.do.end.i_crit_edge, %if.end9.11.i.do.end.i_crit_edge, %if.end9.10.i.do.end.i_crit_edge, %if.end9.9.i.do.end.i_crit_edge, %if.end9.8.i.do.end.i_crit_edge, %if.end9.7.i.do.end.i_crit_edge, %if.end9.6.i.do.end.i_crit_edge, %if.end9.5.i.do.end.i_crit_edge, %if.end9.4.i.do.end.i_crit_edge, %if.end9.3.i.do.end.i_crit_edge, %if.end9.2.i.do.end.i_crit_edge, %if.end9.1.i.do.end.i_crit_edge, %if.end9.i.do.end.i_crit_edge, %for.cond.15.i.do.end.i_crit_edge, %for.cond.14.i.do.end.i_crit_edge, %for.cond.13.i.do.end.i_crit_edge, %for.cond.12.i.do.end.i_crit_edge, %for.cond.11.i.do.end.i_crit_edge, %for.cond.10.i.do.end.i_crit_edge, %for.cond.9.i.do.end.i_crit_edge, %for.cond.8.i.do.end.i_crit_edge, %for.cond.7.i.do.end.i_crit_edge, %for.cond.6.i.do.end.i_crit_edge, %for.cond.5.i.do.end.i_crit_edge, %for.cond.4.i.do.end.i_crit_edge, %for.cond.3.i.do.end.i_crit_edge, %for.cond.2.i.do.end.i_crit_edge, %for.cond.1.i.do.end.i_crit_edge, %for.cond.i.do.end.i_crit_edge, %entry.do.end.i_crit_edge
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.545, ptr noundef nonnull @.str.3) #19
  store i32 5, ptr @bw_percentage, align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 1), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 2), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 3), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 4), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 5), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 6), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 7), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 8), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 9), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 10), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 11), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 12), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 13), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 14), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 15), align 4
  store i32 5, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 16), align 4
  br label %verify_bandwidth.exit

verify_bandwidth.exit:                            ; preds = %do.end.i, %for.body29.i.verify_bandwidth.exit_crit_edge, %if.end9.16.i.verify_bandwidth.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %18 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %18, i32 noundef 3520, i32 noundef 16) #20
  store ptr %call7.i.i, ptr @driver_config, align 4
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %verify_bandwidth.exit.cleanup_crit_edge, label %if.end

verify_bandwidth.exit.cleanup_crit_edge:          ; preds = %verify_bandwidth.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %verify_bandwidth.exit
  %call7 = tail call i32 @__pci_register_driver(ptr noundef nonnull @vxge_driver, ptr noundef null, ptr noundef nonnull @.str.3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  %19 = load ptr, ptr @driver_config, align 4
  br i1 %tobool8.not, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef %19) #16
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool11.not = icmp eq i32 %21, 0
  br i1 %tobool11.not, label %if.end10.cleanup_crit_edge, label %land.lhs.true

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end10
  %total_dev_cnt = getelementptr inbounds %struct.vxge_drv_config, ptr %19, i32 0, i32 1
  %22 = ptrtoint ptr %total_dev_cnt to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %total_dev_cnt, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %23)
  %cmp.not = icmp eq i32 %21, %23
  br i1 %cmp.not, label %land.lhs.true.cleanup_crit_edge, label %do.end17

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end17:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.3, i32 noundef %21, i32 noundef %23) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end17, %land.lhs.true.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.then9, %verify_bandwidth.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %verify_bandwidth.exit.cleanup_crit_edge ], [ 0, %if.end10.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %do.end17 ], [ %call7, %if.then9 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_probe(ptr noundef %pdev, ptr nocapture noundef readnone %pre) #0 align 64 {
entry:
  %hldev = alloca ptr, align 4
  %vdev = alloca ptr, align 4
  %attr = alloca %struct.vxge_hw_device_attr, align 4
  %img = alloca [8 x %struct.eprom_image], align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %hldev) #16
  %0 = ptrtoint ptr %hldev to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %hldev, align 4, !annotation !947
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vdev) #16
  %1 = ptrtoint ptr %vdev to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %vdev, align 4, !annotation !947
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %attr) #16
  %2 = ptrtoint ptr %attr to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %attr, align 4, !annotation !947
  %3 = getelementptr inbounds %struct.vxge_hw_device_attr, ptr %attr, i32 0, i32 1
  %4 = getelementptr inbounds %struct.vxge_hw_device_attr, ptr %attr, i32 0, i32 2
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr inttoptr (i32 -1 to ptr), ptr %4, align 4, !annotation !947
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.20, i32 noundef 4296) #19
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %pdev, ptr %3, align 4
  %7 = load i32, ptr @vxge_probe.bus, align 4
  %bus = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 1
  %8 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bus, align 8
  %number = getelementptr inbounds %struct.pci_bus, ptr %9, i32 0, i32 12
  %10 = ptrtoint ptr %number to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %number, align 4
  %conv = zext i8 %11 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %conv)
  %cmp.not = icmp eq i32 %7, %conv
  br i1 %cmp.not, label %lor.lhs.false, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.lhs.false:                                    ; preds = %entry
  %12 = load i32, ptr @vxge_probe.device, align 4
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 6
  %13 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %devfn, align 4
  %shr = lshr i32 %14, 3
  %and = and i32 %shr, 31
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %and)
  %cmp7.not = icmp eq i32 %12, %and
  br i1 %cmp7.not, label %if.end.thread, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.thread:                                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %devfn, align 4
  %shr13866 = lshr i32 %16, 3
  %and14867 = and i32 %shr13866, 31
  store i32 %and14867, ptr @vxge_probe.device, align 4
  br label %if.end36

if.end:                                           ; preds = %lor.lhs.false.if.end_crit_edge, %entry.if.end_crit_edge
  %is_virtfn = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %17 = ptrtoint ptr %is_virtfn to i32
  call void @__asan_loadN_noabort(i32 %17, i32 5)
  %bf.load = load i40, ptr %is_virtfn, align 1
  %18 = and i40 %bf.load, 65536
  %tobool.not.not = icmp eq i40 %18, 0
  store i32 %conv, ptr @vxge_probe.bus, align 4
  %devfn12 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 6
  %19 = ptrtoint ptr %devfn12 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %devfn12, align 4
  %shr13 = lshr i32 %20, 3
  %and14 = and i32 %shr13, 31
  store i32 %and14, ptr @vxge_probe.device, align 4
  br i1 %tobool.not.not, label %if.then16, label %if.end.if.end36_crit_edge

if.end.if.end36_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end36

if.then16:                                        ; preds = %if.end
  %21 = load ptr, ptr @driver_config, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool17.not = icmp eq i32 %23, 0
  br i1 %tobool17.not, label %if.then16.if.end33_crit_edge, label %land.lhs.true18

if.then16.if.end33_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

land.lhs.true18:                                  ; preds = %if.then16
  %total_dev_cnt = getelementptr inbounds %struct.vxge_drv_config, ptr %21, i32 0, i32 1
  %24 = ptrtoint ptr %total_dev_cnt to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %total_dev_cnt, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %23, i32 %25)
  %cmp20.not = icmp eq i32 %23, %25
  br i1 %cmp20.not, label %land.lhs.true18.if.end33_crit_edge, label %do.end26

land.lhs.true18.if.end33_crit_edge:               ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

do.end26:                                         ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #18
  %call30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.3, i32 noundef %23, i32 noundef %25) #19
  br label %if.end33

if.end33:                                         ; preds = %do.end26, %land.lhs.true18.if.end33_crit_edge, %if.then16.if.end33_crit_edge
  %26 = load ptr, ptr @driver_config, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %26, align 4
  %total_dev_cnt35 = getelementptr inbounds %struct.vxge_drv_config, ptr %26, i32 0, i32 1
  %28 = ptrtoint ptr %total_dev_cnt35 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %total_dev_cnt35, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.end33, %if.end.if.end36_crit_edge, %if.end.thread
  %tobool15.not868 = phi i1 [ true, %if.end.thread ], [ false, %if.end33 ], [ true, %if.end.if.end36_crit_edge ]
  %29 = load ptr, ptr @driver_config, align 4
  %g_no_cpus = getelementptr inbounds %struct.vxge_drv_config, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %g_no_cpus to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %g_no_cpus, align 4
  %31 = load i32, ptr @max_config_vpath, align 4
  %vpath_per_dev = getelementptr inbounds %struct.vxge_drv_config, ptr %29, i32 0, i32 3
  %32 = ptrtoint ptr %vpath_per_dev to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %vpath_per_dev, align 4
  %total_dev_cnt37 = getelementptr inbounds %struct.vxge_drv_config, ptr %29, i32 0, i32 1
  %33 = ptrtoint ptr %total_dev_cnt37 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %total_dev_cnt37, align 4
  %inc = add i32 %34, 1
  store i32 %inc, ptr %total_dev_cnt37, align 4
  %35 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %29, align 4
  %inc39 = add i32 %36, 1
  store i32 %inc39, ptr %29, align 4
  %37 = load i32, ptr @max_config_dev, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc39, i32 %37)
  %cmp40 = icmp sgt i32 %inc39, %37
  br i1 %cmp40, label %if.end36._exit0_crit_edge, label %if.end43

if.end36._exit0_crit_edge:                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  br label %_exit0

if.end43:                                         ; preds = %if.end36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %38 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %38, i32 noundef 3520, i32 noundef 3280) #20
  %tobool45.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool45.not, label %if.then46, label %if.end55

if.then46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  %call52 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.25, ptr noundef nonnull @.str.2, i32 noundef 4340) #19
  br label %_exit0

if.end55:                                         ; preds = %if.end43
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %39 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i856 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %39, i32 noundef 3520, i32 noundef 648) #20
  %tobool57.not = icmp eq ptr %call7.i.i856, null
  br i1 %tobool57.not, label %if.then58, label %if.end67

if.then58:                                        ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #18
  %call64 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.25, ptr noundef nonnull @.str.2, i32 noundef 4349) #19
  br label %_exit0

if.end67:                                         ; preds = %if.end55
  %tx_steering_type = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 7
  %40 = ptrtoint ptr %tx_steering_type to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 4, ptr %tx_steering_type, align 4
  %intr_type = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 3
  %41 = ptrtoint ptr %intr_type to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 2, ptr %intr_type, align 4
  %napi_weight = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 2
  %42 = ptrtoint ptr %napi_weight to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 64, ptr %napi_weight, align 8
  %rth_steering = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 5
  %43 = ptrtoint ptr %rth_steering to i32
  call void @__asan_load4_noabort(i32 %43)
  %bf.load68 = load i32, ptr %rth_steering, align 4
  %bf.clear69 = and i32 %bf.load68, 1073741823
  %bf.set = or i32 %bf.clear69, -2147483648
  store i32 %bf.set, ptr %rth_steering, align 4
  %call70 = tail call i32 @vxge_hw_device_config_default_get(ptr noundef nonnull %call7.i.i) #16
  %dma_blockpool_initial.i = getelementptr inbounds %struct.vxge_hw_device_config, ptr %call7.i.i, i32 0, i32 1
  %44 = ptrtoint ptr %dma_blockpool_initial.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %dma_blockpool_initial.i, align 4
  %dma_blockpool_max.i = getelementptr inbounds %struct.vxge_hw_device_config, ptr %call7.i.i, i32 0, i32 2
  %45 = ptrtoint ptr %dma_blockpool_max.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 4096, ptr %dma_blockpool_max.i, align 8
  %46 = load i32, ptr @max_mac_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 30, i32 %46)
  %cmp.i = icmp sgt i32 %46, 30
  br i1 %cmp.i, label %if.then.i, label %if.end67.if.end.i_crit_edge

if.end67.if.end.i_crit_edge:                      ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  store i32 30, ptr @max_mac_vpath, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end67.if.end.i_crit_edge
  %47 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %intr_type, align 4
  %49 = zext i32 %48 to i64
  call void @__sanitizer_cov_trace_switch(i64 %49, ptr @__sancov_gen_cov_switch_values)
  switch i32 %48, label %if.end.i.vxge_device_config_init.exit_crit_edge [
    i32 0, label %sw.bb.i
    i32 2, label %sw.bb1.i
  ]

if.end.i.vxge_device_config_init.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_device_config_init.exit

sw.bb.i:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %intr_mode.i = getelementptr inbounds %struct.vxge_hw_device_config, ptr %call7.i.i, i32 0, i32 3
  %50 = ptrtoint ptr %intr_mode.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %bf.load.i = load i8, ptr %intr_mode.i, align 4
  %bf.clear.i = and i8 %bf.load.i, 63
  store i8 %bf.clear.i, ptr %intr_mode.i, align 4
  br label %vxge_device_config_init.exit

sw.bb1.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %intr_mode2.i = getelementptr inbounds %struct.vxge_hw_device_config, ptr %call7.i.i, i32 0, i32 3
  %51 = ptrtoint ptr %intr_mode2.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %bf.load3.i = load i8, ptr %intr_mode2.i, align 4
  %bf.clear4.i = and i8 %bf.load3.i, 63
  %bf.set5.i = or i8 %bf.clear4.i, -128
  store i8 %bf.set5.i, ptr %intr_mode2.i, align 4
  br label %vxge_device_config_init.exit

vxge_device_config_init.exit:                     ; preds = %sw.bb1.i, %sw.bb.i, %if.end.i.vxge_device_config_init.exit_crit_edge
  %52 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 10000, ptr %call7.i.i, align 8
  %53 = load i32, ptr @addr_learn_en, align 4
  %rts_mac_en.i = getelementptr inbounds %struct.vxge_hw_device_config, ptr %call7.i.i, i32 0, i32 3
  %54 = trunc i32 %53 to i8
  %55 = ptrtoint ptr %rts_mac_en.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %bf.load6.i = load i8, ptr %rts_mac_en.i, align 4
  %bf.value.i = shl i8 %54, 3
  %bf.shl.i = and i8 %bf.value.i, 8
  %bf.clear7.i = and i8 %bf.load6.i, -25
  %bf.set8.i = or i8 %bf.clear7.i, %bf.shl.i
  %bf.set11.i = or i8 %bf.set8.i, 16
  store i8 %bf.set11.i, ptr %rts_mac_en.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.110, ptr noundef nonnull @.str.111) #19
  %56 = ptrtoint ptr %rts_mac_en.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %bf.load19.i = load i8, ptr %rts_mac_en.i, align 4
  %bf.lshr.i = lshr i8 %bf.load19.i, 6
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  %call20.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.113, i32 noundef %bf.cast.i) #19
  %57 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %call7.i.i, align 8
  %call27.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.116, i32 noundef %58) #19
  %59 = ptrtoint ptr %rts_mac_en.i to i32
  call void @__asan_load1_noabort(i32 %59)
  %bf.load33.i = load i8, ptr %rts_mac_en.i, align 4
  %bf.lshr34.i = lshr i8 %bf.load33.i, 5
  %bf.clear35.i = and i8 %bf.lshr34.i, 1
  %bf.cast36.i = zext i8 %bf.clear35.i to i32
  %call37.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.119, i32 noundef %bf.cast36.i) #19
  %60 = ptrtoint ptr %rts_mac_en.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %bf.load44.i = load i8, ptr %rts_mac_en.i, align 4
  %bf.lshr45.i = lshr i8 %bf.load44.i, 4
  %bf.clear46.i = and i8 %bf.lshr45.i, 1
  %bf.cast47.i = zext i8 %bf.clear46.i to i32
  %call48.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.122, i32 noundef %bf.cast47.i) #19
  %call72 = tail call i32 @pci_enable_device(ptr noundef %pdev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %if.end83, label %do.end78

do.end78:                                         ; preds = %vxge_device_config_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call80 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.30, ptr noundef nonnull @.str.20) #19
  br label %_exit0

if.end83:                                         ; preds = %vxge_device_config_init.exit
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %call.i857 = tail call i32 @dma_set_mask(ptr noundef %dev, i64 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i857)
  %cmp.i858 = icmp eq i32 %call.i857, 0
  br i1 %cmp.i858, label %do.end90, label %if.end83._exit1_crit_edge

if.end83._exit1_crit_edge:                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  br label %_exit1

do.end90:                                         ; preds = %if.end83
  %call1.i = tail call i32 @dma_set_coherent_mask(ptr noundef %dev, i64 noundef -1) #16
  %call92 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, ptr noundef nonnull @.str.20) #19
  %call96 = tail call i32 @pci_request_region(ptr noundef %pdev, i32 noundef 0, ptr noundef nonnull @.str.3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call96)
  %tobool97.not = icmp eq i32 %call96, 0
  br i1 %tobool97.not, label %if.end107, label %do.end102

do.end102:                                        ; preds = %do.end90
  call void @__sanitizer_cov_trace_pc() #18
  %call104 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.20) #19
  br label %_exit1

if.end107:                                        ; preds = %do.end90
  tail call void @pci_set_master(ptr noundef %pdev) #16
  %call108 = tail call ptr @pci_ioremap_bar(ptr noundef %pdev, i32 noundef 0) #16
  %61 = ptrtoint ptr %attr to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %call108, ptr %attr, align 4
  %tobool110.not = icmp eq ptr %call108, null
  br i1 %tobool110.not, label %do.end115, label %do.end124

do.end115:                                        ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #18
  %call117 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, ptr noundef nonnull @.str.20) #19
  br label %_exit2

do.end124:                                        ; preds = %if.end107
  %resource = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 47
  %62 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %resource, align 8
  %conv127 = zext i32 %63 to i64
  %call128 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.42, ptr noundef nonnull %call108, i64 noundef %conv127) #19
  %64 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %attr, align 4
  %device_hw_info = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9
  %call132 = tail call i32 @vxge_hw_device_hw_info_get(ptr noundef %65, ptr noundef %device_hw_info) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call132)
  %cmp133.not = icmp eq i32 %call132, 0
  br i1 %cmp133.not, label %if.end144, label %do.end139

do.end139:                                        ; preds = %do.end124
  call void @__sanitizer_cov_trace_pc() #18
  %call141 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.45, ptr noundef nonnull @.str.3) #19
  br label %_exit3

if.end144:                                        ; preds = %do.end124
  %vpath_mask146 = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 3
  %66 = ptrtoint ptr %vpath_mask146 to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %vpath_mask146, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %67)
  %cmp147 = icmp eq i64 %67, 0
  br i1 %cmp147, label %do.end153, label %do.end162

do.end153:                                        ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #18
  %call155 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.48, ptr noundef nonnull @.str.3) #19
  br label %_exit3

do.end162:                                        ; preds = %if.end144
  %call164 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.51, ptr noundef nonnull @.str.20, i32 noundef 4419, i64 noundef %67) #19
  %function_mode168 = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 1
  %68 = ptrtoint ptr %function_mode168 to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %function_mode168, align 8
  %70 = ptrtoint ptr %device_hw_info to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %device_hw_info, align 8
  %func_id = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 2
  %72 = ptrtoint ptr %func_id to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %func_id, align 8
  %call173 = tail call i32 @__vxge_hw_device_is_privilaged(i32 noundef %71, i32 noundef %73) #16
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end162
  %i.0870 = phi i32 [ 0, %do.end162 ], [ %inc182, %for.body.for.body_crit_edge ]
  %max_vpath_supported.0869 = phi i32 [ 0, %do.end162 ], [ %spec.select855, %for.body.for.body_crit_edge ]
  %sh_prom = zext i32 %i.0870 to i64
  %shr176 = lshr i64 -9223372036854775808, %sh_prom
  %and177 = and i64 %shr176, %67
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and177)
  %tobool178.not = icmp ne i64 %and177, 0
  %inc181 = zext i1 %tobool178.not to i32
  %spec.select855 = add i32 %max_vpath_supported.0869, %inc181
  %inc182 = add nuw nsw i32 %i.0870, 1
  %exitcond.not = icmp eq i32 %inc182, 17
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body
  %conv169 = trunc i64 %69 to i32
  br i1 %tobool15.not868, label %for.end.if.end187_crit_edge, label %if.then184

for.end.if.end187_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end187

if.then184:                                       ; preds = %for.end
  %74 = zext i32 %conv169 to i64
  call void @__sanitizer_cov_trace_switch(i64 %74, ptr @__sancov_gen_cov_switch_values.547)
  switch i32 %conv169, label %if.then184.if.end187_crit_edge [
    i32 1, label %if.then184.sw.bb.i861_crit_edge
    i32 6, label %if.then184.sw.bb.i861_crit_edge901
    i32 0, label %if.then184.if.end216_crit_edge
    i32 2, label %if.then184.sw.bb2.i_crit_edge
    i32 3, label %if.then184.sw.bb2.i_crit_edge902
    i32 5, label %if.then184.sw.bb2.i_crit_edge903
    i32 7, label %if.then184.land.lhs.true196_crit_edge
    i32 8, label %if.then184.if.end216_crit_edge904
    i32 4, label %if.then184.if.end216_crit_edge905
  ]

if.then184.if.end216_crit_edge905:                ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end216

if.then184.if.end216_crit_edge904:                ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end216

if.then184.land.lhs.true196_crit_edge:            ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true196

if.then184.sw.bb2.i_crit_edge903:                 ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.then184.sw.bb2.i_crit_edge902:                 ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.then184.sw.bb2.i_crit_edge:                    ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.then184.if.end216_crit_edge:                   ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end216

if.then184.sw.bb.i861_crit_edge901:               ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i861

if.then184.sw.bb.i861_crit_edge:                  ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i861

if.then184.if.end187_crit_edge:                   ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end187

sw.bb.i861:                                       ; preds = %if.then184.sw.bb.i861_crit_edge, %if.then184.sw.bb.i861_crit_edge901
  br label %if.end187

sw.bb2.i:                                         ; preds = %if.then184.sw.bb2.i_crit_edge, %if.then184.sw.bb2.i_crit_edge902, %if.then184.sw.bb2.i_crit_edge903
  br label %if.end187

if.end187:                                        ; preds = %sw.bb2.i, %sw.bb.i861, %if.then184.if.end187_crit_edge, %for.end.if.end187_crit_edge
  %num_vfs.0 = phi i32 [ 0, %for.end.if.end187_crit_edge ], [ -1, %if.then184.if.end187_crit_edge ], [ 16, %sw.bb2.i ], [ 7, %sw.bb.i861 ]
  %75 = zext i32 %conv169 to i64
  call void @__sanitizer_cov_trace_switch(i64 %75, ptr @__sancov_gen_cov_switch_values.548)
  switch i32 %conv169, label %if.end187.if.end216_crit_edge [
    i32 2, label %if.end187.land.lhs.true196_crit_edge
    i32 6, label %if.end187.land.lhs.true196_crit_edge906
    i32 7, label %if.end187.land.lhs.true196_crit_edge907
  ]

if.end187.land.lhs.true196_crit_edge907:          ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true196

if.end187.land.lhs.true196_crit_edge906:          ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true196

if.end187.land.lhs.true196_crit_edge:             ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true196

if.end187.if.end216_crit_edge:                    ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end216

land.lhs.true196:                                 ; preds = %if.end187.land.lhs.true196_crit_edge, %if.end187.land.lhs.true196_crit_edge906, %if.end187.land.lhs.true196_crit_edge907, %if.then184.land.lhs.true196_crit_edge
  %num_vfs.0895 = phi i32 [ %num_vfs.0, %if.end187.land.lhs.true196_crit_edge ], [ %num_vfs.0, %if.end187.land.lhs.true196_crit_edge906 ], [ %num_vfs.0, %if.end187.land.lhs.true196_crit_edge907 ], [ 3, %if.then184.land.lhs.true196_crit_edge ]
  %call197 = tail call fastcc i32 @is_sriov_initialized(ptr noundef %pdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call197)
  %tobool198.not = icmp eq i32 %call197, 0
  br i1 %tobool198.not, label %land.lhs.true199, label %land.lhs.true196.if.end216_crit_edge

land.lhs.true196.if.end216_crit_edge:             ; preds = %land.lhs.true196
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end216

land.lhs.true199:                                 ; preds = %land.lhs.true196
  %76 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %intr_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %cmp201.not = icmp eq i32 %77, 0
  br i1 %cmp201.not, label %land.lhs.true199.if.end216_crit_edge, label %if.then203

land.lhs.true199.if.end216_crit_edge:             ; preds = %land.lhs.true199
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end216

if.then203:                                       ; preds = %land.lhs.true199
  %call204 = tail call i32 @pci_enable_sriov(ptr noundef %pdev, i32 noundef %num_vfs.0895) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call204)
  %tobool205.not = icmp eq i32 %call204, 0
  br i1 %tobool205.not, label %if.then203.if.end216_crit_edge, label %do.end210

if.then203.if.end216_crit_edge:                   ; preds = %if.then203
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end216

do.end210:                                        ; preds = %if.then203
  call void @__sanitizer_cov_trace_pc() #18
  %call212 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.54, i32 noundef %call204) #19
  br label %if.end216

if.end216:                                        ; preds = %do.end210, %if.then203.if.end216_crit_edge, %land.lhs.true199.if.end216_crit_edge, %land.lhs.true196.if.end216_crit_edge, %if.end187.if.end216_crit_edge, %if.then184.if.end216_crit_edge, %if.then184.if.end216_crit_edge904, %if.then184.if.end216_crit_edge905
  %call217 = tail call fastcc i32 @vxge_config_vpaths(ptr noundef nonnull %call7.i.i, i64 noundef %67, ptr noundef nonnull %call7.i.i856)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call217)
  %tobool218.not = icmp eq i32 %call217, 0
  br i1 %tobool218.not, label %do.end223, label %if.end228

do.end223:                                        ; preds = %if.end216
  call void @__sanitizer_cov_trace_pc() #18
  %call225 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.3) #19
  br label %_exit3

if.end228:                                        ; preds = %if.end216
  %78 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr @vxge_callbacks, ptr %4, align 4
  %call229 = call i32 @vxge_hw_device_initialize(ptr noundef nonnull %hldev, ptr noundef nonnull %attr, ptr noundef nonnull %call7.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call229)
  %cmp230.not = icmp eq i32 %call229, 0
  br i1 %cmp230.not, label %if.end241, label %do.end236

do.end236:                                        ; preds = %if.end228
  call void @__sanitizer_cov_trace_pc() #18
  %call238 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.60, i32 noundef %call229) #19
  br label %_exit3

if.end241:                                        ; preds = %if.end228
  %fw_version = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 4
  %79 = ptrtoint ptr %fw_version to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %fw_version, align 8
  %shl = shl i32 %80, 16
  %minor = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 4, i32 1
  %81 = ptrtoint ptr %minor to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %minor, align 4
  %shl245 = shl i32 %82, 8
  %add = add i32 %shl245, %shl
  %build = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 4, i32 2
  %83 = ptrtoint ptr %build to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %build, align 8
  %add248 = add i32 %add, %84
  call void @__sanitizer_cov_trace_const_cmp4(i32 67072, i32 %add248)
  %cmp249 = icmp ugt i32 %add248, 67072
  br i1 %cmp249, label %if.then251, label %if.end241.if.end312_crit_edge

if.end241.if.end312_crit_edge:                    ; preds = %if.end241
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end312

if.then251:                                       ; preds = %if.end241
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %img) #16
  %85 = call ptr @memset(ptr %img, i32 255, i32 48)
  %86 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %hldev, align 4
  %call252 = call i32 @vxge_hw_vpath_eprom_img_ver_get(ptr noundef %87, ptr noundef nonnull %img) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call252)
  %cmp253.not = icmp eq i32 %call252, 0
  br i1 %cmp253.not, label %if.then251.for.body268.preheader_crit_edge, label %do.end259

if.then251.for.body268.preheader_crit_edge:       ; preds = %if.then251
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body268.preheader

do.end259:                                        ; preds = %if.then251
  call void @__sanitizer_cov_trace_pc() #18
  %call261 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.3) #19
  br label %for.body268.preheader

for.body268.preheader:                            ; preds = %do.end259, %if.then251.for.body268.preheader_crit_edge
  br label %for.body268

for.body268:                                      ; preds = %do.end280.for.body268_crit_edge, %for.body268.preheader
  %i.1871 = phi i32 [ %inc310, %do.end280.for.body268_crit_edge ], [ 0, %for.body268.preheader ]
  %arrayidx269 = getelementptr [8 x %struct.eprom_image], ptr %img, i32 0, i32 %i.1871
  %version = getelementptr [8 x %struct.eprom_image], ptr %img, i32 0, i32 %i.1871, i32 3
  %88 = ptrtoint ptr %version to i32
  call void @__asan_load2_noabort(i32 %88)
  %89 = load i16, ptr %version, align 2
  %90 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %hldev, align 4
  %arrayidx270 = getelementptr %struct.__vxge_hw_device, ptr %91, i32 0, i32 32, i32 %i.1871
  %92 = ptrtoint ptr %arrayidx270 to i32
  call void @__asan_store2_noabort(i32 %92)
  store i16 %89, ptr %arrayidx270, align 2
  %93 = ptrtoint ptr %arrayidx269 to i32
  call void @__asan_load1_noabort(i32 %93)
  %bf.load272 = load i8, ptr %arrayidx269, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load272)
  %tobool274.not = icmp sgt i8 %bf.load272, -1
  br i1 %tobool274.not, label %for.body268.for.end311_crit_edge, label %do.end280

for.body268.for.end311_crit_edge:                 ; preds = %for.body268
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end311

do.end280:                                        ; preds = %for.body268
  %94 = ptrtoint ptr %version to i32
  call void @__asan_load2_noabort(i32 %94)
  %95 = load i16, ptr %version, align 2
  %96 = lshr i16 %95, 12
  %conv287 = zext i16 %96 to i32
  %97 = lshr i16 %95, 8
  %98 = and i16 %97, 15
  %conv293 = zext i16 %98 to i32
  %99 = lshr i16 %95, 4
  %100 = and i16 %99, 15
  %conv299 = zext i16 %100 to i32
  %101 = and i16 %95, 15
  %conv305 = zext i16 %101 to i32
  %call306 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.66, ptr noundef nonnull @.str.3, i32 noundef %i.1871, i32 noundef %conv287, i32 noundef %conv293, i32 noundef %conv299, i32 noundef %conv305) #19
  %inc310 = add nuw nsw i32 %i.1871, 1
  %exitcond890.not = icmp eq i32 %inc310, 8
  br i1 %exitcond890.not, label %do.end280.for.end311_crit_edge, label %do.end280.for.body268_crit_edge

do.end280.for.body268_crit_edge:                  ; preds = %do.end280
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body268

do.end280.for.end311_crit_edge:                   ; preds = %do.end280
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end311

for.end311:                                       ; preds = %do.end280.for.end311_crit_edge, %for.body268.for.end311_crit_edge
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %img) #16
  br label %if.end312

if.end312:                                        ; preds = %for.end311, %if.end241.if.end312_crit_edge
  %102 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %hldev, align 4
  %call313 = call i32 @vxge_hw_vpath_strip_fcs_check(ptr noundef %103, i64 noundef %67) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call313)
  %cmp314.not = icmp eq i32 %call313, 0
  br i1 %cmp314.not, label %if.end325, label %do.end320

do.end320:                                        ; preds = %if.end312
  call void @__sanitizer_cov_trace_pc() #18
  %call322 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.3) #19
  br label %_exit4

if.end325:                                        ; preds = %if.end312
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call173)
  %cmp326 = icmp eq i32 %call173, 0
  br i1 %cmp326, label %if.then328, label %if.end325.if.end342_crit_edge

if.end325.if.end342_crit_edge:                    ; preds = %if.end325
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end342

if.then328:                                       ; preds = %if.end325
  %104 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %hldev, align 4
  %call329 = call fastcc i32 @vxge_timestamp_config(ptr noundef %105)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call329)
  %cmp330.not = icmp eq i32 %call329, 0
  br i1 %cmp330.not, label %if.then328.if.end342_crit_edge, label %do.end336

if.then328.if.end342_crit_edge:                   ; preds = %if.then328
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end342

do.end336:                                        ; preds = %if.then328
  call void @__sanitizer_cov_trace_pc() #18
  %call338 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.72, ptr noundef nonnull @.str.3) #19
  br label %_exit4

if.end342:                                        ; preds = %if.then328.if.end342_crit_edge, %if.end325.if.end342_crit_edge
  %106 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %hldev, align 4
  call void @vxge_hw_device_debug_set(ptr noundef %107, i32 noundef 2, i32 noundef 536870912) #16
  %108 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %hldev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %110 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr %109, ptr %driver_data.i.i, align 4
  %fifo_indicate_max_pkts = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 8
  %111 = ptrtoint ptr %fifo_indicate_max_pkts to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 84, ptr %fifo_indicate_max_pkts, align 8
  %112 = load i32, ptr @addr_learn_en, align 4
  %addr_learn_en = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 4
  %113 = ptrtoint ptr %addr_learn_en to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %112, ptr %addr_learn_en, align 8
  %114 = ptrtoint ptr %rth_steering to i32
  call void @__asan_load4_noabort(i32 %114)
  %bf.load343 = load i32, ptr %rth_steering, align 4
  %bf.clear347 = and i32 %bf.load343, -1073725441
  %bf.set366 = or i32 %bf.clear347, 134283264
  store i32 %bf.set366, ptr %rth_steering, align 4
  %115 = ptrtoint ptr %call7.i.i856 to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 1, ptr %call7.i.i856, align 8
  %rx_pause_enable = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 1
  %116 = ptrtoint ptr %rx_pause_enable to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 1, ptr %rx_pause_enable, align 4
  %call367 = call fastcc i32 @vxge_device_register(ptr noundef %109, ptr noundef nonnull %call7.i.i856, i32 noundef %call217, ptr noundef nonnull %vdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call367)
  %tobool368.not = icmp eq i32 %call367, 0
  br i1 %tobool368.not, label %if.end370, label %if.end342._exit4_crit_edge

if.end342._exit4_crit_edge:                       ; preds = %if.end342
  call void @__sanitizer_cov_trace_pc() #18
  br label %_exit4

if.end370:                                        ; preds = %if.end342
  %117 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %vdev, align 4
  %call371 = call fastcc i32 @vxge_probe_fw_update(ptr noundef %118)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call371)
  %tobool372.not = icmp eq i32 %call371, 0
  br i1 %tobool372.not, label %if.end374, label %if.end370._exit5_crit_edge

if.end370._exit5_crit_edge:                       ; preds = %if.end370
  call void @__sanitizer_cov_trace_pc() #18
  br label %_exit5

if.end374:                                        ; preds = %if.end370
  %119 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %hldev, align 4
  call void @vxge_hw_device_debug_set(ptr noundef %120, i32 noundef 1, i32 noundef 536870912) #16
  %121 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %vdev, align 4
  %no_of_vpath376872 = getelementptr inbounds %struct.vxgedev, ptr %122, i32 0, i32 17
  %123 = ptrtoint ptr %no_of_vpath376872 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %no_of_vpath376872, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %124)
  %cmp377873 = icmp sgt i32 %124, 0
  br i1 %cmp377873, label %if.end374.for.body379_crit_edge, label %if.end374.for.end387_crit_edge

if.end374.for.end387_crit_edge:                   ; preds = %if.end374
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end387

if.end374.for.body379_crit_edge:                  ; preds = %if.end374
  br label %for.body379

for.body379:                                      ; preds = %for.body379.for.body379_crit_edge, %if.end374.for.body379_crit_edge
  %i.2874 = phi i32 [ %inc386, %for.body379.for.body379_crit_edge ], [ 0, %if.end374.for.body379_crit_edge ]
  %125 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %hldev, align 4
  %call380 = call i32 @vxge_hw_device_error_level_get(ptr noundef %126) #16
  %127 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %vdev, align 4
  %vpaths = getelementptr inbounds %struct.vxgedev, ptr %128, i32 0, i32 21
  %129 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %vpaths, align 8
  %level_err = getelementptr %struct.vxge_vpath, ptr %130, i32 %i.2874, i32 13
  %131 = ptrtoint ptr %level_err to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 %call380, ptr %level_err, align 16
  %132 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %hldev, align 4
  %call382 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %133) #16
  %134 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %vdev, align 4
  %vpaths383 = getelementptr inbounds %struct.vxgedev, ptr %135, i32 0, i32 21
  %136 = ptrtoint ptr %vpaths383 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %vpaths383, align 8
  %level_trace = getelementptr %struct.vxge_vpath, ptr %137, i32 %i.2874, i32 14
  %138 = ptrtoint ptr %level_trace to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 %call382, ptr %level_trace, align 4
  %inc386 = add nuw nsw i32 %i.2874, 1
  %139 = load ptr, ptr %vdev, align 4
  %no_of_vpath376 = getelementptr inbounds %struct.vxgedev, ptr %139, i32 0, i32 17
  %140 = ptrtoint ptr %no_of_vpath376 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %no_of_vpath376, align 4
  %cmp377 = icmp slt i32 %inc386, %141
  br i1 %cmp377, label %for.body379.for.body379_crit_edge, label %for.body379.for.end387_crit_edge

for.body379.for.end387_crit_edge:                 ; preds = %for.body379
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end387

for.body379.for.body379_crit_edge:                ; preds = %for.body379
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body379

for.end387:                                       ; preds = %for.body379.for.end387_crit_edge, %if.end374.for.end387_crit_edge
  %142 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %hldev, align 4
  %call388 = call i32 @vxge_hw_device_error_level_get(ptr noundef %143) #16
  %144 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %vdev, align 4
  %level_err389 = getelementptr inbounds %struct.vxgedev, ptr %145, i32 0, i32 29
  %146 = ptrtoint ptr %level_err389 to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 %call388, ptr %level_err389, align 4
  %147 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %hldev, align 4
  %call390 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %148) #16
  %149 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %vdev, align 4
  %level_trace391 = getelementptr inbounds %struct.vxgedev, ptr %150, i32 0, i32 30
  %151 = ptrtoint ptr %level_trace391 to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %call390, ptr %level_trace391, align 8
  %mtu = getelementptr inbounds %struct.vxgedev, ptr %150, i32 0, i32 25
  %152 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %152)
  store i32 1500, ptr %mtu, align 4
  %153 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %attr, align 4
  %bar0393 = getelementptr inbounds %struct.vxgedev, ptr %150, i32 0, i32 23
  %155 = ptrtoint ptr %bar0393 to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr %154, ptr %bar0393, align 8
  %max_vpath_supported394 = getelementptr inbounds %struct.vxgedev, ptr %150, i32 0, i32 16
  %156 = ptrtoint ptr %max_vpath_supported394 to i32
  call void @__asan_store4_noabort(i32 %156)
  store i32 %spec.select855, ptr %max_vpath_supported394, align 8
  %no_of_vpath395 = getelementptr inbounds %struct.vxgedev, ptr %150, i32 0, i32 17
  %157 = ptrtoint ptr %no_of_vpath395 to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %call217, ptr %no_of_vpath395, align 4
  br label %for.body399

for.body399:                                      ; preds = %for.inc438.for.body399_crit_edge, %for.end387
  %i.3876 = phi i32 [ 0, %for.end387 ], [ %add400, %for.inc438.for.body399_crit_edge ]
  %j.0875 = phi i32 [ 0, %for.end387 ], [ %j.1, %for.inc438.for.body399_crit_edge ]
  %add400 = add nuw nsw i32 %i.3876, 1
  %sub401 = sub nuw nsw i32 63, %i.3876
  %sh_prom402 = zext i32 %sub401 to i64
  %158 = shl nuw i64 1, %sh_prom402
  %159 = and i64 %158, %67
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %159)
  %tobool405.not = icmp eq i64 %159, 0
  br i1 %tobool405.not, label %for.body399.for.inc438_crit_edge, label %if.end407

for.body399.for.inc438_crit_edge:                 ; preds = %for.body399
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc438

if.end407:                                        ; preds = %for.body399
  %160 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %vdev, align 4
  %no_of_vpath408 = getelementptr inbounds %struct.vxgedev, ptr %161, i32 0, i32 17
  %162 = ptrtoint ptr %no_of_vpath408 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %no_of_vpath408, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %j.0875, i32 %163)
  %cmp409.not = icmp slt i32 %j.0875, %163
  br i1 %cmp409.not, label %if.end412, label %if.end407.for.end440_crit_edge

if.end407.for.end440_crit_edge:                   ; preds = %if.end407
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end440

if.end412:                                        ; preds = %if.end407
  call void @__sanitizer_cov_trace_pc() #18
  %vpaths413 = getelementptr inbounds %struct.vxgedev, ptr %161, i32 0, i32 21
  %164 = ptrtoint ptr %vpaths413 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %vpaths413, align 8
  %is_configured = getelementptr %struct.vxge_vpath, ptr %165, i32 %j.0875, i32 5
  %166 = ptrtoint ptr %is_configured to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 1, ptr %is_configured, align 4
  %167 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %vdev, align 4
  %vpaths415 = getelementptr inbounds %struct.vxgedev, ptr %168, i32 0, i32 21
  %169 = ptrtoint ptr %vpaths415 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %vpaths415, align 8
  %device_id = getelementptr %struct.vxge_vpath, ptr %170, i32 %j.0875, i32 3
  %171 = ptrtoint ptr %device_id to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %i.3876, ptr %device_id, align 4
  %172 = load ptr, ptr %vdev, align 4
  %vpaths417 = getelementptr inbounds %struct.vxgedev, ptr %172, i32 0, i32 21
  %173 = ptrtoint ptr %vpaths417 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %vpaths417, align 8
  %driver_id = getelementptr %struct.vxge_vpath, ptr %174, i32 %j.0875, i32 1, i32 3
  %175 = ptrtoint ptr %driver_id to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 %j.0875, ptr %driver_id, align 4
  %176 = load ptr, ptr %vdev, align 4
  %vpaths419 = getelementptr inbounds %struct.vxgedev, ptr %176, i32 0, i32 21
  %177 = ptrtoint ptr %vpaths419 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %vpaths419, align 8
  %vdev421 = getelementptr %struct.vxge_vpath, ptr %178, i32 %j.0875, i32 7
  %179 = ptrtoint ptr %vdev421 to i32
  call void @__asan_store4_noabort(i32 %179)
  store ptr %176, ptr %vdev421, align 4
  %180 = load i32, ptr @max_mac_vpath, align 4
  %181 = load ptr, ptr %vdev, align 4
  %vpaths422 = getelementptr inbounds %struct.vxgedev, ptr %181, i32 0, i32 21
  %182 = ptrtoint ptr %vpaths422 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %vpaths422, align 8
  %max_mac_addr_cnt = getelementptr %struct.vxge_vpath, ptr %183, i32 %j.0875, i32 4
  %184 = ptrtoint ptr %max_mac_addr_cnt to i32
  call void @__asan_store4_noabort(i32 %184)
  store i32 %180, ptr %max_mac_addr_cnt, align 8
  %185 = load ptr, ptr %vdev, align 4
  %vpaths424 = getelementptr inbounds %struct.vxgedev, ptr %185, i32 0, i32 21
  %186 = ptrtoint ptr %vpaths424 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %vpaths424, align 8
  %macaddr426 = getelementptr %struct.vxge_vpath, ptr %187, i32 %j.0875, i32 8
  %arrayidx429 = getelementptr %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 11, i32 %i.3876
  %188 = call ptr @memcpy(ptr %macaddr426, ptr %arrayidx429, i32 6)
  %189 = load ptr, ptr %vpaths424, align 8
  %mac_addr_list = getelementptr %struct.vxge_vpath, ptr %189, i32 %j.0875, i32 12
  %190 = ptrtoint ptr %mac_addr_list to i32
  call void @__asan_store4_noabort(i32 %190)
  store volatile ptr %mac_addr_list, ptr %mac_addr_list, align 4
  %prev.i = getelementptr %struct.vxge_vpath, ptr %189, i32 %j.0875, i32 12, i32 1
  %191 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr %mac_addr_list, ptr %prev.i, align 4
  %192 = load ptr, ptr %vdev, align 4
  %vpaths433 = getelementptr inbounds %struct.vxgedev, ptr %192, i32 0, i32 21
  %193 = ptrtoint ptr %vpaths433 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %vpaths433, align 8
  %mac_addr_cnt = getelementptr %struct.vxge_vpath, ptr %194, i32 %j.0875, i32 10
  %195 = ptrtoint ptr %mac_addr_cnt to i32
  call void @__asan_store2_noabort(i32 %195)
  store i16 0, ptr %mac_addr_cnt, align 4
  %196 = load ptr, ptr %vdev, align 4
  %vpaths435 = getelementptr inbounds %struct.vxgedev, ptr %196, i32 0, i32 21
  %197 = ptrtoint ptr %vpaths435 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %vpaths435, align 8
  %mcast_addr_cnt = getelementptr %struct.vxge_vpath, ptr %198, i32 %j.0875, i32 11
  %199 = ptrtoint ptr %mcast_addr_cnt to i32
  call void @__asan_store2_noabort(i32 %199)
  store i16 0, ptr %mcast_addr_cnt, align 2
  %inc437 = add nsw i32 %j.0875, 1
  br label %for.inc438

for.inc438:                                       ; preds = %if.end412, %for.body399.for.inc438_crit_edge
  %j.1 = phi i32 [ %inc437, %if.end412 ], [ %j.0875, %for.body399.for.inc438_crit_edge ]
  %exitcond891.not = icmp eq i32 %add400, 17
  br i1 %exitcond891.not, label %for.inc438.for.end440_crit_edge, label %for.inc438.for.body399_crit_edge

for.inc438.for.body399_crit_edge:                 ; preds = %for.inc438
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body399

for.inc438.for.end440_crit_edge:                  ; preds = %for.inc438
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end440

for.end440:                                       ; preds = %for.inc438.for.end440_crit_edge, %if.end407.for.end440_crit_edge
  %200 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %vdev, align 4
  %exec_mode = getelementptr inbounds %struct.vxgedev, ptr %201, i32 0, i32 19
  %202 = ptrtoint ptr %exec_mode to i32
  call void @__asan_store4_noabort(i32 %202)
  store i32 0, ptr %exec_mode, align 8
  %203 = load i32, ptr @max_config_port, align 4
  %max_config_port = getelementptr inbounds %struct.vxgedev, ptr %201, i32 0, i32 20
  %204 = ptrtoint ptr %max_config_port to i32
  call void @__asan_store4_noabort(i32 %204)
  store i32 %203, ptr %max_config_port, align 4
  %205 = load i32, ptr @vlan_tag_strip, align 4
  %vlan_tag_strip = getelementptr inbounds %struct.vxgedev, ptr %201, i32 0, i32 4
  %206 = ptrtoint ptr %vlan_tag_strip to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 %205, ptr %vlan_tag_strip, align 4
  %no_of_vpath442877 = getelementptr inbounds %struct.vxgedev, ptr %201, i32 0, i32 17
  %207 = ptrtoint ptr %no_of_vpath442877 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %no_of_vpath442877, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %208)
  %cmp443878 = icmp sgt i32 %208, 0
  br i1 %cmp443878, label %for.end440.for.body445_crit_edge, label %for.end440.for.end451_crit_edge

for.end440.for.end451_crit_edge:                  ; preds = %for.end440
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end451

for.end440.for.body445_crit_edge:                 ; preds = %for.end440
  br label %for.body445

for.body445:                                      ; preds = %for.body445.for.body445_crit_edge, %for.end440.for.body445_crit_edge
  %209 = phi ptr [ %214, %for.body445.for.body445_crit_edge ], [ %201, %for.end440.for.body445_crit_edge ]
  %i.4879 = phi i32 [ %inc450, %for.body445.for.body445_crit_edge ], [ 0, %for.end440.for.body445_crit_edge ]
  %arrayidx446 = getelementptr [17 x i16], ptr @vpath_selector, i32 0, i32 %i.4879
  %210 = ptrtoint ptr %arrayidx446 to i32
  call void @__asan_load2_noabort(i32 %210)
  %211 = load i16, ptr %arrayidx446, align 2
  %conv447 = trunc i16 %211 to i8
  %arrayidx448 = getelementptr %struct.vxgedev, ptr %209, i32 0, i32 26, i32 %i.4879
  %212 = ptrtoint ptr %arrayidx448 to i32
  call void @__asan_store1_noabort(i32 %212)
  store i8 %conv447, ptr %arrayidx448, align 1
  %inc450 = add nuw nsw i32 %i.4879, 1
  %213 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %vdev, align 4
  %no_of_vpath442 = getelementptr inbounds %struct.vxgedev, ptr %214, i32 0, i32 17
  %215 = ptrtoint ptr %no_of_vpath442 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %no_of_vpath442, align 4
  %cmp443 = icmp slt i32 %inc450, %216
  br i1 %cmp443, label %for.body445.for.body445_crit_edge, label %for.body445.for.end451_crit_edge

for.body445.for.end451_crit_edge:                 ; preds = %for.body445
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end451

for.body445.for.body445_crit_edge:                ; preds = %for.body445
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body445

for.end451:                                       ; preds = %for.body445.for.end451_crit_edge, %for.end440.for.end451_crit_edge
  %.lcssa = phi ptr [ %201, %for.end440.for.end451_crit_edge ], [ %214, %for.body445.for.end451_crit_edge ]
  %vpaths452 = getelementptr inbounds %struct.vxgedev, ptr %.lcssa, i32 0, i32 21
  %217 = ptrtoint ptr %vpaths452 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %vpaths452, align 8
  %macaddr454 = getelementptr inbounds %struct.vxge_vpath, ptr %218, i32 0, i32 8
  %serial_number = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 8
  %arrayidx457 = getelementptr %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 8, i32 63
  %219 = ptrtoint ptr %arrayidx457 to i32
  call void @__asan_store1_noabort(i32 %219)
  store i8 0, ptr %arrayidx457, align 1
  %product_desc = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 10
  %arrayidx459 = getelementptr %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 10, i32 63
  %220 = ptrtoint ptr %arrayidx459 to i32
  call void @__asan_store1_noabort(i32 %220)
  store i8 0, ptr %arrayidx459, align 1
  %part_number = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 9
  %arrayidx461 = getelementptr %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 9, i32 63
  %221 = ptrtoint ptr %arrayidx461 to i32
  call void @__asan_store1_noabort(i32 %221)
  store i8 0, ptr %arrayidx461, align 1
  %222 = ptrtoint ptr %.lcssa to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %.lcssa, align 8
  %call471 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %223, ptr noundef %serial_number) #19
  %224 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %vdev, align 4
  %226 = ptrtoint ptr %225 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %225, align 8
  %call485 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78, ptr noundef %227, ptr noundef %part_number) #19
  %228 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %vdev, align 4
  %230 = ptrtoint ptr %229 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %229, align 8
  %call499 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.81, ptr noundef %231, ptr noundef %product_desc) #19
  %232 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %vdev, align 4
  %234 = ptrtoint ptr %233 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %233, align 8
  %call510 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.84, ptr noundef %235, ptr noundef %macaddr454) #19
  %236 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %vdev, align 4
  %238 = ptrtoint ptr %237 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %237, align 8
  %240 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %hldev, align 4
  %call521 = call zeroext i16 @vxge_hw_device_link_width_get(ptr noundef %241) #16
  %conv522 = zext i16 %call521 to i32
  %call523 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87, ptr noundef %239, i32 noundef %conv522) #19
  %242 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %vdev, align 4
  %244 = ptrtoint ptr %243 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %243, align 8
  %version536 = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 4, i32 3
  %date = getelementptr inbounds %struct.vxge_config, ptr %call7.i.i856, i32 0, i32 9, i32 5, i32 3
  %call540 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90, ptr noundef %245, ptr noundef %version536, ptr noundef %date) #19
  br i1 %tobool15.not868, label %for.end451.if.end594_crit_edge, label %if.then544

for.end451.if.end594_crit_edge:                   ; preds = %for.end451
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end594

if.then544:                                       ; preds = %for.end451
  %246 = ptrtoint ptr %function_mode168 to i32
  call void @__asan_load8_noabort(i32 %246)
  %247 = load i64, ptr %function_mode168, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4, i64 %247)
  %248 = icmp ult i64 %247, 4
  br i1 %248, label %switch.lookup, label %if.then544.if.end594_crit_edge

if.then544.if.end594_crit_edge:                   ; preds = %if.then544
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end594

switch.lookup:                                    ; preds = %if.then544
  call void @__sanitizer_cov_trace_pc() #18
  %249 = trunc i64 %247 to i32
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table.vxge_probe, i32 0, i32 %249
  %250 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %250)
  %switch.load = load ptr, ptr %switch.gep, align 4
  %251 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %251)
  %.sink897 = load ptr, ptr %vdev, align 4
  %252 = ptrtoint ptr %.sink897 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %.sink897, align 8
  %call555 = call i32 (ptr, ...) @_printk(ptr noundef nonnull %switch.load, ptr noundef %253) #19
  br label %if.end594

if.end594:                                        ; preds = %switch.lookup, %if.then544.if.end594_crit_edge, %for.end451.if.end594_crit_edge
  %254 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %vdev, align 4
  call fastcc void @vxge_print_parm(ptr noundef %255, i64 noundef %67)
  %256 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %vdev, align 4
  %fw_version595 = getelementptr inbounds %struct.vxgedev, ptr %257, i32 0, i32 31
  %call601 = call ptr @strcpy(ptr noundef %fw_version595, ptr noundef %version536) #21
  %258 = ptrtoint ptr %257 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %257, align 8
  %vpaths603 = getelementptr inbounds %struct.vxgedev, ptr %257, i32 0, i32 21
  %260 = ptrtoint ptr %vpaths603 to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %vpaths603, align 8
  %macaddr605 = getelementptr inbounds %struct.vxge_vpath, ptr %261, i32 0, i32 8
  call void @dev_addr_mod(ptr noundef %259, i32 noundef 0, ptr noundef %macaddr605, i32 noundef 6) #16
  %262 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %vdev, align 4
  %no_of_vpath608880 = getelementptr inbounds %struct.vxgedev, ptr %263, i32 0, i32 17
  %264 = ptrtoint ptr %no_of_vpath608880 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %no_of_vpath608880, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %265)
  %cmp609881 = icmp sgt i32 %265, 0
  br i1 %cmp609881, label %if.end594.for.body611_crit_edge, label %if.end594.for.end638_crit_edge

if.end594.for.end638_crit_edge:                   ; preds = %if.end594
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end638

if.end594.for.body611_crit_edge:                  ; preds = %if.end594
  br label %for.body611

for.body611:                                      ; preds = %list_add.exit.for.body611_crit_edge, %if.end594.for.body611_crit_edge
  %i.5882 = phi i32 [ %inc637, %list_add.exit.for.body611_crit_edge ], [ 0, %if.end594.for.body611_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %266 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i863 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %266, i32 noundef 3520, i32 noundef 32) #20
  %cmp613 = icmp eq ptr %call7.i.i863, null
  br i1 %cmp613, label %do.end619, label %if.end627

do.end619:                                        ; preds = %for.body611
  %267 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %vdev, align 4
  %269 = ptrtoint ptr %268 to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %268, align 8
  %call624 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.105, ptr noundef %270) #19
  %271 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load ptr, ptr %vdev, align 4
  %no_of_vpath682886 = getelementptr inbounds %struct.vxgedev, ptr %272, i32 0, i32 17
  %273 = ptrtoint ptr %no_of_vpath682886 to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %no_of_vpath682886, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %274)
  %cmp683887 = icmp sgt i32 %274, 0
  br i1 %cmp683887, label %do.end619.for.body685_crit_edge, label %do.end619._exit5_crit_edge

do.end619._exit5_crit_edge:                       ; preds = %do.end619
  call void @__sanitizer_cov_trace_pc() #18
  br label %_exit5

do.end619.for.body685_crit_edge:                  ; preds = %do.end619
  br label %for.body685

if.end627:                                        ; preds = %for.body611
  %macaddr628 = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i863, i32 0, i32 1
  %275 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %vdev, align 4
  %277 = ptrtoint ptr %276 to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load ptr, ptr %276, align 8
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %278, i32 0, i32 86
  %279 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load ptr, ptr %dev_addr, align 64
  %281 = call ptr @memcpy(ptr %macaddr628, ptr %280, i32 6)
  %vpaths630 = getelementptr inbounds %struct.vxgedev, ptr %276, i32 0, i32 21
  %282 = ptrtoint ptr %vpaths630 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load ptr, ptr %vpaths630, align 8
  %mac_addr_list632 = getelementptr %struct.vxge_vpath, ptr %283, i32 %i.5882, i32 12
  %284 = ptrtoint ptr %mac_addr_list632 to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %mac_addr_list632, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i863, ptr noundef %mac_addr_list632, ptr noundef %285) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.end627.list_add.exit_crit_edge

if.end627.list_add.exit_crit_edge:                ; preds = %if.end627
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end627
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %285, i32 0, i32 1
  %286 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %286)
  store ptr %call7.i.i863, ptr %prev1.i.i, align 4
  %287 = ptrtoint ptr %call7.i.i863 to i32
  call void @__asan_store4_noabort(i32 %287)
  store ptr %285, ptr %call7.i.i863, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i863, i32 0, i32 1
  %288 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %288)
  store ptr %mac_addr_list632, ptr %prev3.i.i, align 4
  %289 = ptrtoint ptr %mac_addr_list632 to i32
  call void @__asan_store4_noabort(i32 %289)
  store volatile ptr %call7.i.i863, ptr %mac_addr_list632, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end627.list_add.exit_crit_edge
  %290 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %vdev, align 4
  %vpaths633 = getelementptr inbounds %struct.vxgedev, ptr %291, i32 0, i32 21
  %292 = ptrtoint ptr %vpaths633 to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %vpaths633, align 8
  %mac_addr_cnt635 = getelementptr %struct.vxge_vpath, ptr %293, i32 %i.5882, i32 10
  %294 = ptrtoint ptr %mac_addr_cnt635 to i32
  call void @__asan_store2_noabort(i32 %294)
  store i16 1, ptr %mac_addr_cnt635, align 4
  %inc637 = add nuw nsw i32 %i.5882, 1
  %295 = load ptr, ptr %vdev, align 4
  %no_of_vpath608 = getelementptr inbounds %struct.vxgedev, ptr %295, i32 0, i32 17
  %296 = ptrtoint ptr %no_of_vpath608 to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %no_of_vpath608, align 4
  %cmp609 = icmp slt i32 %inc637, %297
  br i1 %cmp609, label %list_add.exit.for.body611_crit_edge, label %list_add.exit.for.end638_crit_edge

list_add.exit.for.end638_crit_edge:               ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end638

list_add.exit.for.body611_crit_edge:              ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body611

for.end638:                                       ; preds = %list_add.exit.for.end638_crit_edge, %if.end594.for.end638_crit_edge
  call void @kfree(ptr noundef nonnull %call7.i.i) #16
  %298 = ptrtoint ptr %function_mode168 to i32
  call void @__asan_load8_noabort(i32 %298)
  %299 = load i64, ptr %function_mode168, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %299)
  %cmp641 = icmp eq i64 %299, 1
  br i1 %cmp641, label %if.then643, label %for.end638.do.end653_crit_edge

for.end638.do.end653_crit_edge:                   ; preds = %for.end638
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end653

if.then643:                                       ; preds = %for.end638
  %300 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %vdev, align 4
  %intr_type644 = getelementptr inbounds %struct.vxgedev, ptr %301, i32 0, i32 5, i32 3
  %302 = ptrtoint ptr %intr_type644 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %intr_type644, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %303)
  %cmp645 = icmp eq i32 %303, 0
  br i1 %cmp645, label %if.then647, label %if.then643.do.end653_crit_edge

if.then643.do.end653_crit_edge:                   ; preds = %if.then643
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end653

if.then647:                                       ; preds = %if.then643
  call void @__sanitizer_cov_trace_pc() #18
  %304 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %hldev, align 4
  call void @vxge_hw_device_unmask_all(ptr noundef %305) #16
  br label %do.end653

do.end653:                                        ; preds = %if.then647, %if.then643.do.end653_crit_edge, %for.end638.do.end653_crit_edge
  %306 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load ptr, ptr %vdev, align 4
  %308 = ptrtoint ptr %307 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %307, align 8
  %call658 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %309, ptr noundef nonnull @.str.20, i32 noundef 4684) #19
  %310 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %hldev, align 4
  call void @vxge_hw_device_debug_set(ptr noundef %311, i32 noundef 2, i32 noundef 536870912) #16
  %312 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load ptr, ptr %vdev, align 4
  %no_of_vpath662883 = getelementptr inbounds %struct.vxgedev, ptr %313, i32 0, i32 17
  %314 = ptrtoint ptr %no_of_vpath662883 to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %no_of_vpath662883, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %315)
  %cmp663884 = icmp sgt i32 %315, 0
  br i1 %cmp663884, label %do.end653.for.body665_crit_edge, label %do.end653.for.end676_crit_edge

do.end653.for.end676_crit_edge:                   ; preds = %do.end653
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end676

do.end653.for.body665_crit_edge:                  ; preds = %do.end653
  br label %for.body665

for.body665:                                      ; preds = %for.body665.for.body665_crit_edge, %do.end653.for.body665_crit_edge
  %i.6885 = phi i32 [ %inc675, %for.body665.for.body665_crit_edge ], [ 0, %do.end653.for.body665_crit_edge ]
  %316 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load ptr, ptr %hldev, align 4
  %call666 = call i32 @vxge_hw_device_error_level_get(ptr noundef %317) #16
  %318 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %vdev, align 4
  %vpaths667 = getelementptr inbounds %struct.vxgedev, ptr %319, i32 0, i32 21
  %320 = ptrtoint ptr %vpaths667 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load ptr, ptr %vpaths667, align 8
  %level_err669 = getelementptr %struct.vxge_vpath, ptr %321, i32 %i.6885, i32 13
  %322 = ptrtoint ptr %level_err669 to i32
  call void @__asan_store4_noabort(i32 %322)
  store i32 %call666, ptr %level_err669, align 16
  %323 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load ptr, ptr %hldev, align 4
  %call670 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %324) #16
  %325 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %vdev, align 4
  %vpaths671 = getelementptr inbounds %struct.vxgedev, ptr %326, i32 0, i32 21
  %327 = ptrtoint ptr %vpaths671 to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load ptr, ptr %vpaths671, align 8
  %level_trace673 = getelementptr %struct.vxge_vpath, ptr %328, i32 %i.6885, i32 14
  %329 = ptrtoint ptr %level_trace673 to i32
  call void @__asan_store4_noabort(i32 %329)
  store i32 %call670, ptr %level_trace673, align 4
  %inc675 = add nuw nsw i32 %i.6885, 1
  %330 = load ptr, ptr %vdev, align 4
  %no_of_vpath662 = getelementptr inbounds %struct.vxgedev, ptr %330, i32 0, i32 17
  %331 = ptrtoint ptr %no_of_vpath662 to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %no_of_vpath662, align 4
  %cmp663 = icmp slt i32 %inc675, %332
  br i1 %cmp663, label %for.body665.for.body665_crit_edge, label %for.body665.for.end676_crit_edge

for.body665.for.end676_crit_edge:                 ; preds = %for.body665
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end676

for.body665.for.body665_crit_edge:                ; preds = %for.body665
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body665

for.end676:                                       ; preds = %for.body665.for.end676_crit_edge, %do.end653.for.end676_crit_edge
  %333 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %hldev, align 4
  %call677 = call i32 @vxge_hw_device_error_level_get(ptr noundef %334) #16
  %335 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load ptr, ptr %vdev, align 4
  %level_err678 = getelementptr inbounds %struct.vxgedev, ptr %336, i32 0, i32 29
  %337 = ptrtoint ptr %level_err678 to i32
  call void @__asan_store4_noabort(i32 %337)
  store i32 %call677, ptr %level_err678, align 4
  %338 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load ptr, ptr %hldev, align 4
  %call679 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %339) #16
  %340 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load ptr, ptr %vdev, align 4
  %level_trace680 = getelementptr inbounds %struct.vxgedev, ptr %341, i32 0, i32 30
  %342 = ptrtoint ptr %level_trace680 to i32
  call void @__asan_store4_noabort(i32 %342)
  store i32 %call679, ptr %level_trace680, align 8
  call void @kfree(ptr noundef nonnull %call7.i.i856) #16
  br label %cleanup

for.body685:                                      ; preds = %for.body685.for.body685_crit_edge, %do.end619.for.body685_crit_edge
  %343 = phi ptr [ %347, %for.body685.for.body685_crit_edge ], [ %272, %do.end619.for.body685_crit_edge ]
  %i.7888 = phi i32 [ %inc689, %for.body685.for.body685_crit_edge ], [ 0, %do.end619.for.body685_crit_edge ]
  %vpaths686 = getelementptr inbounds %struct.vxgedev, ptr %343, i32 0, i32 21
  %344 = ptrtoint ptr %vpaths686 to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load ptr, ptr %vpaths686, align 8
  %arrayidx687 = getelementptr %struct.vxge_vpath, ptr %345, i32 %i.7888
  call fastcc void @vxge_free_mac_add_list(ptr noundef %arrayidx687)
  %inc689 = add nuw nsw i32 %i.7888, 1
  %346 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %vdev, align 4
  %no_of_vpath682 = getelementptr inbounds %struct.vxgedev, ptr %347, i32 0, i32 17
  %348 = ptrtoint ptr %no_of_vpath682 to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %no_of_vpath682, align 4
  %cmp683 = icmp slt i32 %inc689, %349
  br i1 %cmp683, label %for.body685.for.body685_crit_edge, label %for.body685._exit5_crit_edge

for.body685._exit5_crit_edge:                     ; preds = %for.body685
  call void @__sanitizer_cov_trace_pc() #18
  br label %_exit5

for.body685.for.body685_crit_edge:                ; preds = %for.body685
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body685

_exit5:                                           ; preds = %for.body685._exit5_crit_edge, %do.end619._exit5_crit_edge, %if.end370._exit5_crit_edge
  %ret.0 = phi i32 [ %call371, %if.end370._exit5_crit_edge ], [ -1, %do.end619._exit5_crit_edge ], [ -1, %for.body685._exit5_crit_edge ]
  %350 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load ptr, ptr %hldev, align 4
  call fastcc void @vxge_device_unregister(ptr noundef %351)
  br label %_exit4

_exit4:                                           ; preds = %_exit5, %if.end342._exit4_crit_edge, %do.end336, %do.end320
  %ret.1 = phi i32 [ -22, %do.end320 ], [ -14, %do.end336 ], [ %ret.0, %_exit5 ], [ -22, %if.end342._exit4_crit_edge ]
  %352 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load ptr, ptr %hldev, align 4
  call void @vxge_hw_device_terminate(ptr noundef %353) #16
  call void @pci_disable_sriov(ptr noundef %pdev) #16
  br label %_exit3

_exit3:                                           ; preds = %_exit4, %do.end236, %do.end223, %do.end153, %do.end139
  %ret.2 = phi i32 [ -22, %do.end139 ], [ -22, %do.end153 ], [ -22, %do.end236 ], [ %ret.1, %_exit4 ], [ 0, %do.end223 ]
  %354 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load ptr, ptr %attr, align 4
  call void @iounmap(ptr noundef %355) #16
  br label %_exit2

_exit2:                                           ; preds = %_exit3, %do.end115
  %ret.3 = phi i32 [ %ret.2, %_exit3 ], [ -19, %do.end115 ]
  call void @pci_release_region(ptr noundef %pdev, i32 noundef 0) #16
  br label %_exit1

_exit1:                                           ; preds = %_exit2, %do.end102, %if.end83._exit1_crit_edge
  %ret.4 = phi i32 [ %call96, %do.end102 ], [ %ret.3, %_exit2 ], [ -12, %if.end83._exit1_crit_edge ]
  call void @pci_disable_device(ptr noundef %pdev) #16
  br label %_exit0

_exit0:                                           ; preds = %_exit1, %do.end78, %if.then58, %if.then46, %if.end36._exit0_crit_edge
  %device_config.0 = phi ptr [ %call7.i.i, %do.end78 ], [ %call7.i.i, %_exit1 ], [ %call7.i.i, %if.then58 ], [ null, %if.then46 ], [ null, %if.end36._exit0_crit_edge ]
  %ll_config.0 = phi ptr [ %call7.i.i856, %do.end78 ], [ %call7.i.i856, %_exit1 ], [ null, %if.then58 ], [ null, %if.then46 ], [ null, %if.end36._exit0_crit_edge ]
  %ret.5 = phi i32 [ %call72, %do.end78 ], [ %ret.4, %_exit1 ], [ -12, %if.then58 ], [ -12, %if.then46 ], [ 0, %if.end36._exit0_crit_edge ]
  call void @kfree(ptr noundef %ll_config.0) #16
  call void @kfree(ptr noundef %device_config.0) #16
  %356 = load ptr, ptr @driver_config, align 4
  %357 = ptrtoint ptr %356 to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %356, align 4
  %dec = add i32 %358, -1
  store i32 %dec, ptr %356, align 4
  %total_dev_cnt693 = getelementptr inbounds %struct.vxge_drv_config, ptr %356, i32 0, i32 1
  %359 = ptrtoint ptr %total_dev_cnt693 to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load i32, ptr %total_dev_cnt693, align 4
  %dec694 = add i32 %360, -1
  store i32 %dec694, ptr %total_dev_cnt693, align 4
  br label %cleanup

cleanup:                                          ; preds = %_exit0, %for.end676
  %retval.0 = phi i32 [ %ret.5, %_exit0 ], [ 0, %for.end676 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %attr) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vdev) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %hldev) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_remove(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %ndev = getelementptr inbounds %struct.__vxge_hw_device, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %ndev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndev, align 4
  %level_trace = getelementptr i8, ptr %3, i32 9416
  %4 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %.not = icmp eq i32 %5, 0
  br i1 %.not, label %if.end.do.end25_crit_edge, label %do.body11

if.end.do.end25_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end25

do.body11:                                        ; preds = %if.end
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.526, i32 noundef 4733) #19
  %6 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pr = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %.not83 = icmp eq i32 %.pr, 0
  br i1 %.not83, label %do.body11.do.end25_crit_edge, label %do.end20

do.body11.do.end25_crit_edge:                     ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end25

do.end20:                                         ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #18
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.528, ptr noundef nonnull @.str.526) #19
  br label %do.end25

do.end25:                                         ; preds = %do.end20, %do.body11.do.end25_crit_edge, %if.end.do.end25_crit_edge
  %no_of_vpath = getelementptr i8, ptr %3, i32 9044
  %7 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp2686 = icmp sgt i32 %8, 0
  br i1 %cmp2686, label %for.body.lr.ph, label %do.end25.for.end_crit_edge

do.end25.for.end_crit_edge:                       ; preds = %do.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end25
  %vpaths = getelementptr i8, ptr %3, i32 9280
  br label %for.body

for.body:                                         ; preds = %vxge_free_mac_add_list.exit.for.body_crit_edge, %for.body.lr.ph
  %i.087 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %vxge_free_mac_add_list.exit.for.body_crit_edge ]
  %9 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vpaths, align 8
  %mac_addr_list.i = getelementptr %struct.vxge_vpath, ptr %10, i32 %i.087, i32 12
  %11 = ptrtoint ptr %mac_addr_list.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %mac_addr_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %12, %mac_addr_list.i
  br i1 %cmp.i.not.i, label %for.body.vxge_free_mac_add_list.exit_crit_edge, label %for.body.for.body.i_crit_edge

for.body.for.body.i_crit_edge:                    ; preds = %for.body
  br label %for.body.i

for.body.vxge_free_mac_add_list.exit_crit_edge:   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_free_mac_add_list.exit

for.body.i:                                       ; preds = %list_del.exit.i.for.body.i_crit_edge, %for.body.for.body.i_crit_edge
  %entry1.020.i = phi ptr [ %next.022.i, %list_del.exit.i.for.body.i_crit_edge ], [ %12, %for.body.for.body.i_crit_edge ]
  %13 = ptrtoint ptr %entry1.020.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %next.022.i = load ptr, ptr %entry1.020.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.020.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %entry1.020.i, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i.i, align 4
  %16 = ptrtoint ptr %entry1.020.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %entry1.020.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %prev1.i.i.i.i, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %17, ptr %15, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %20 = ptrtoint ptr %entry1.020.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1.020.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %entry1.020.i, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef %entry1.020.i) #16
  %cmp.i16.not.i = icmp eq ptr %next.022.i, %mac_addr_list.i
  br i1 %cmp.i16.not.i, label %list_del.exit.i.vxge_free_mac_add_list.exit_crit_edge, label %list_del.exit.i.for.body.i_crit_edge

list_del.exit.i.for.body.i_crit_edge:             ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

list_del.exit.i.vxge_free_mac_add_list.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_free_mac_add_list.exit

vxge_free_mac_add_list.exit:                      ; preds = %list_del.exit.i.vxge_free_mac_add_list.exit_crit_edge, %for.body.vxge_free_mac_add_list.exit_crit_edge
  %inc = add nuw nsw i32 %i.087, 1
  %22 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %no_of_vpath, align 4
  %cmp26 = icmp slt i32 %inc, %23
  br i1 %cmp26, label %vxge_free_mac_add_list.exit.for.body_crit_edge, label %vxge_free_mac_add_list.exit.for.end_crit_edge

vxge_free_mac_add_list.exit.for.end_crit_edge:    ; preds = %vxge_free_mac_add_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

vxge_free_mac_add_list.exit.for.body_crit_edge:   ; preds = %vxge_free_mac_add_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %vxge_free_mac_add_list.exit.for.end_crit_edge, %do.end25.for.end_crit_edge
  tail call fastcc void @vxge_device_unregister(ptr noundef nonnull %1)
  tail call void @vxge_hw_device_terminate(ptr noundef nonnull %1) #16
  %bar0 = getelementptr i8, ptr %3, i32 9352
  %24 = ptrtoint ptr %bar0 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %bar0, align 8
  tail call void @iounmap(ptr noundef %25) #16
  tail call void @pci_release_region(ptr noundef %pdev, i32 noundef 0) #16
  tail call void @pci_disable_device(ptr noundef %pdev) #16
  %26 = load ptr, ptr @driver_config, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  %dec = add i32 %28, -1
  store i32 %dec, ptr %26, align 4
  %total_dev_cnt = getelementptr inbounds %struct.vxge_drv_config, ptr %26, i32 0, i32 1
  %29 = ptrtoint ptr %total_dev_cnt to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %total_dev_cnt, align 4
  %dec27 = add i32 %30, -1
  store i32 %dec27, ptr %total_dev_cnt, align 4
  %31 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %.not84 = icmp eq i32 %32, 0
  br i1 %.not84, label %for.end.cleanup_crit_edge, label %do.body43

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body43:                                        ; preds = %for.end
  %call39 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.531, ptr noundef nonnull @.str.526, i32 noundef 4750) #19
  %33 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pr89 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr89)
  %.not85 = icmp eq i32 %.pr89, 0
  br i1 %.not85, label %do.body43.cleanup_crit_edge, label %do.end52

do.body43.cleanup_crit_edge:                      ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end52:                                         ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #18
  %call54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.526, i32 noundef 4752) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end52, %do.body43.cleanup_crit_edge, %for.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_device_config_default_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_request_region(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_set_master(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_ioremap_bar(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_device_hw_info_get(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__vxge_hw_device_is_privilaged(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @is_sriov_initialized(ptr noundef %pdev) unnamed_addr #0 align 64 {
entry:
  %ctrl = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl) #16
  %0 = ptrtoint ptr %ctrl to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %ctrl, align 2, !annotation !947
  %call = tail call zeroext i16 @pci_find_ext_capability(ptr noundef %pdev, i32 noundef 16) #16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %call)
  %tobool.not = icmp eq i16 %call, 0
  br i1 %tobool.not, label %entry.if.end5_crit_edge, label %if.then

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.then:                                          ; preds = %entry
  %conv = zext i16 %call to i32
  %add = add nuw nsw i32 %conv, 8
  %call1 = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef %add, ptr noundef nonnull %ctrl) #16
  %1 = ptrtoint ptr %ctrl to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %ctrl, align 2
  %3 = and i16 %2, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool3.not = icmp eq i16 %3, 0
  br i1 %tobool3.not, label %if.then.if.end5_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end5:                                          ; preds = %if.then.if.end5_crit_edge, %entry.if.end5_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end5 ], [ 1, %if.then.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_sriov(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vxge_config_vpaths(ptr noundef %device_config, i64 noundef %vpath_mask, ptr nocapture noundef %config_param) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @driver_config, align 4
  %vpath_per_dev = getelementptr inbounds %struct.vxge_drv_config, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %vpath_per_dev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %vpath_per_dev, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %2)
  %cmp = icmp eq i32 %2, -1
  br i1 %cmp, label %land.lhs.true, label %entry.if.end36_crit_edge

entry.if.end36_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end36

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, ptr @max_config_dev, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %3)
  %cmp2 = icmp eq i32 %3, 255
  br i1 %cmp2, label %if.then, label %land.lhs.true.if.end36_crit_edge

land.lhs.true.if.end36_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end36

if.then:                                          ; preds = %land.lhs.true
  %g_no_cpus = getelementptr inbounds %struct.vxge_drv_config, ptr %0, i32 0, i32 2
  %4 = ptrtoint ptr %g_no_cpus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %g_no_cpus, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.549)
  switch i32 %5, label %if.then.if.end8_crit_edge [
    i32 -1, label %if.then.cleanup_crit_edge
    i32 0, label %if.then6
  ]

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end8_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 @netif_get_num_default_rss_queues() #16
  %7 = load ptr, ptr @driver_config, align 4
  %g_no_cpus7 = getelementptr inbounds %struct.vxge_drv_config, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %g_no_cpus7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call, ptr %g_no_cpus7, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.then.if.end8_crit_edge
  %9 = load ptr, ptr @driver_config, align 4
  %g_no_cpus9 = getelementptr inbounds %struct.vxge_drv_config, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %g_no_cpus9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %g_no_cpus9, align 4
  %shr = ashr i32 %11, 1
  %vpath_per_dev10 = getelementptr inbounds %struct.vxge_drv_config, ptr %9, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %tobool12.not.inv = icmp ugt i32 %11, 1
  %spec.store.select = select i1 %tobool12.not.inv, i32 %shr, i32 1
  %12 = ptrtoint ptr %vpath_per_dev10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %spec.store.select, ptr %vpath_per_dev10, align 4
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end8
  %i.0363 = phi i32 [ 0, %if.end8 ], [ %add, %for.body.for.body_crit_edge ]
  %default_no_vpath.0362 = phi i32 [ 0, %if.end8 ], [ %spec.select, %for.body.for.body_crit_edge ]
  %add = add nuw nsw i32 %i.0363, 1
  %sub = sub nuw nsw i32 63, %i.0363
  %sh_prom = zext i32 %sub to i64
  %13 = shl nuw i64 1, %sh_prom
  %14 = and i64 %13, %vpath_mask
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %tobool18.not = icmp ne i64 %14, 0
  %inc = zext i1 %tobool18.not to i32
  %spec.select = add i32 %default_no_vpath.0362, %inc
  %exitcond.not = icmp eq i32 %add, 17
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body
  %15 = ptrtoint ptr %vpath_per_dev10 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vpath_per_dev10, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %spec.select, i32 %16)
  %cmp23 = icmp ult i32 %spec.select, %16
  br i1 %cmp23, label %if.then24, label %for.end.if.end26_crit_edge

for.end.if.end26_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

if.then24:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %vpath_per_dev10 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %spec.select, ptr %vpath_per_dev10, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %for.end.if.end26_crit_edge
  %18 = ptrtoint ptr %g_no_cpus9 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %g_no_cpus9, align 4
  %20 = ptrtoint ptr %vpath_per_dev10 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vpath_per_dev10, align 4
  %mul.neg = mul i32 %21, -2
  %sub29 = add i32 %mul.neg, %19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub29)
  %cmp32 = icmp slt i32 %sub29, 1
  %spec.store.select358 = select i1 %cmp32, i32 -1, i32 %sub29
  %22 = ptrtoint ptr %g_no_cpus9 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %spec.store.select358, ptr %g_no_cpus9, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.end26, %land.lhs.true.if.end36_crit_edge, %entry.if.end36_crit_edge
  %23 = load ptr, ptr @driver_config, align 4
  %vpath_per_dev37 = getelementptr inbounds %struct.vxge_drv_config, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %vpath_per_dev37 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %vpath_per_dev37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %25)
  %cmp38 = icmp eq i32 %25, 1
  br i1 %cmp38, label %do.end, label %if.end36.if.end47_crit_edge

if.end36.if.end47_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

do.end:                                           ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  %call41 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.124, ptr noundef nonnull @.str.3) #19
  %rth_steering = getelementptr inbounds %struct.vxge_config, ptr %config_param, i32 0, i32 5
  %26 = ptrtoint ptr %rth_steering to i32
  call void @__asan_load4_noabort(i32 %26)
  %bf.load = load i32, ptr %rth_steering, align 4
  %bf.clear = and i32 %bf.load, 1073741823
  store i32 %bf.clear, ptr %rth_steering, align 4
  %tx_steering_type = getelementptr inbounds %struct.vxge_config, ptr %config_param, i32 0, i32 7
  %27 = ptrtoint ptr %tx_steering_type to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %tx_steering_type, align 4
  %rth_en = getelementptr inbounds %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 3
  %28 = ptrtoint ptr %rth_en to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load44 = load i8, ptr %rth_en, align 4
  %bf.clear45 = and i8 %bf.load44, -33
  store i8 %bf.clear45, ptr %rth_en, align 4
  br label %if.end47

if.end47:                                         ; preds = %do.end, %if.end36.if.end47_crit_edge
  %29 = load i32, ptr @bw_percentage, align 4
  %min_bandwidth = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 0, i32 1
  %30 = ptrtoint ptr %min_bandwidth to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %min_bandwidth, align 4
  %31 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 1), align 4
  %min_bandwidth.1 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 1, i32 1
  %32 = ptrtoint ptr %min_bandwidth.1 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %min_bandwidth.1, align 4
  %33 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 2), align 4
  %min_bandwidth.2 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 2, i32 1
  %34 = ptrtoint ptr %min_bandwidth.2 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %min_bandwidth.2, align 4
  %35 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 3), align 4
  %min_bandwidth.3 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 3, i32 1
  %36 = ptrtoint ptr %min_bandwidth.3 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %min_bandwidth.3, align 4
  %37 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 4), align 4
  %min_bandwidth.4 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 4, i32 1
  %38 = ptrtoint ptr %min_bandwidth.4 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %min_bandwidth.4, align 4
  %39 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 5), align 4
  %min_bandwidth.5 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 5, i32 1
  %40 = ptrtoint ptr %min_bandwidth.5 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %min_bandwidth.5, align 4
  %41 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 6), align 4
  %min_bandwidth.6 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 6, i32 1
  %42 = ptrtoint ptr %min_bandwidth.6 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %min_bandwidth.6, align 4
  %43 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 7), align 4
  %min_bandwidth.7 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 7, i32 1
  %44 = ptrtoint ptr %min_bandwidth.7 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %min_bandwidth.7, align 4
  %45 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 8), align 4
  %min_bandwidth.8 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 8, i32 1
  %46 = ptrtoint ptr %min_bandwidth.8 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %min_bandwidth.8, align 4
  %47 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 9), align 4
  %min_bandwidth.9 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 9, i32 1
  %48 = ptrtoint ptr %min_bandwidth.9 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %min_bandwidth.9, align 4
  %49 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 10), align 4
  %min_bandwidth.10 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 10, i32 1
  %50 = ptrtoint ptr %min_bandwidth.10 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %min_bandwidth.10, align 4
  %51 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 11), align 4
  %min_bandwidth.11 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 11, i32 1
  %52 = ptrtoint ptr %min_bandwidth.11 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %min_bandwidth.11, align 4
  %53 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 12), align 4
  %min_bandwidth.12 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 12, i32 1
  %54 = ptrtoint ptr %min_bandwidth.12 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %min_bandwidth.12, align 4
  %55 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 13), align 4
  %min_bandwidth.13 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 13, i32 1
  %56 = ptrtoint ptr %min_bandwidth.13 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %min_bandwidth.13, align 4
  %57 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 14), align 4
  %min_bandwidth.14 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 14, i32 1
  %58 = ptrtoint ptr %min_bandwidth.14 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %57, ptr %min_bandwidth.14, align 4
  %59 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 15), align 4
  %min_bandwidth.15 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 15, i32 1
  %60 = ptrtoint ptr %min_bandwidth.15 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %min_bandwidth.15, align 4
  %61 = load i32, ptr getelementptr inbounds ([17 x i32], ptr @bw_percentage, i32 0, i32 16), align 4
  %min_bandwidth.16 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 16, i32 1
  %62 = ptrtoint ptr %min_bandwidth.16 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %min_bandwidth.16, align 4
  br label %for.body57

for.body57:                                       ; preds = %for.inc241.for.body57_crit_edge, %if.end47
  %i.2366 = phi i32 [ %add65, %for.inc241.for.body57_crit_edge ], [ 0, %if.end47 ]
  %no_of_vpaths.0365 = phi i32 [ %no_of_vpaths.1, %for.inc241.for.body57_crit_edge ], [ 0, %if.end47 ]
  %arrayidx59 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366
  %63 = ptrtoint ptr %arrayidx59 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %i.2366, ptr %arrayidx59, align 8
  %mtu = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 6
  %64 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 1500, ptr %mtu, align 4
  %65 = load ptr, ptr @driver_config, align 4
  %vpath_per_dev62 = getelementptr inbounds %struct.vxge_drv_config, ptr %65, i32 0, i32 3
  %66 = ptrtoint ptr %vpath_per_dev62 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %vpath_per_dev62, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %no_of_vpaths.0365, i32 %67)
  %cmp63 = icmp ult i32 %no_of_vpaths.0365, %67
  br i1 %cmp63, label %if.then64, label %do.end94

if.then64:                                        ; preds = %for.body57
  %add65 = add nuw nsw i32 %i.2366, 1
  %sub66 = sub nuw nsw i32 63, %i.2366
  %sh_prom67 = zext i32 %sub66 to i64
  %68 = shl nuw i64 1, %sh_prom67
  %69 = and i64 %68, %vpath_mask
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %69)
  %tobool70.not = icmp eq i64 %69, 0
  br i1 %tobool70.not, label %do.end75, label %do.end83

do.end75:                                         ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #18
  %call77 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.127, ptr noundef nonnull @.str.3, i32 noundef %i.2366) #19
  br label %for.inc241

do.end83:                                         ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #18
  %call85 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.130, ptr noundef nonnull @.str.3, i32 noundef %i.2366) #19
  %inc88 = add nuw i32 %no_of_vpaths.0365, 1
  %fifo = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 3
  %70 = ptrtoint ptr %fifo to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 1, ptr %fifo, align 8
  %max_frags = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 3, i32 2
  %71 = ptrtoint ptr %max_frags to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 18, ptr %max_frags, align 8
  %memblock_size = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 3, i32 3
  %72 = ptrtoint ptr %memblock_size to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 4096, ptr %memblock_size, align 4
  %fifo_blocks = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 3, i32 1
  %73 = ptrtoint ptr %fifo_blocks to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 12, ptr %fifo_blocks, align 4
  %intr = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 3, i32 5
  %74 = ptrtoint ptr %intr to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 0, ptr %intr, align 4
  %tti = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4
  %75 = ptrtoint ptr %tti to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 1, ptr %tti, align 4
  %btimer_val = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 1
  %76 = ptrtoint ptr %btimer_val to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 919117, ptr %btimer_val, align 4
  %timer_ac_en = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 2
  %77 = ptrtoint ptr %timer_ac_en to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 1, ptr %timer_ac_en, align 4
  %timer_ci_en = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 3
  %78 = ptrtoint ptr %timer_ci_en to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 0, ptr %timer_ci_en, align 4
  %timer_ri_en = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 4
  %79 = ptrtoint ptr %timer_ri_en to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 0, ptr %timer_ri_en, align 4
  %util_sel = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 6
  %80 = ptrtoint ptr %util_sel to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 17, ptr %util_sel, align 4
  %ltimer_val = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 7
  %81 = ptrtoint ptr %ltimer_val to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 3676, ptr %ltimer_val, align 4
  %rtimer_val = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 5
  %82 = ptrtoint ptr %rtimer_val to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 0, ptr %rtimer_val, align 4
  %urange_a = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 8
  %83 = ptrtoint ptr %urange_a to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 5, ptr %urange_a, align 4
  %urange_b = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 10
  %84 = ptrtoint ptr %urange_b to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 15, ptr %urange_b, align 4
  %urange_c = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 12
  %85 = ptrtoint ptr %urange_c to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 40, ptr %urange_c, align 4
  %uec_a = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 9
  %86 = ptrtoint ptr %uec_a to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 5, ptr %uec_a, align 4
  %uec_b = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 11
  %87 = ptrtoint ptr %uec_b to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 40, ptr %uec_b, align 4
  %uec_c = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 13
  %88 = ptrtoint ptr %uec_c to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 60, ptr %uec_c, align 4
  %uec_d = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 4, i32 14
  %89 = ptrtoint ptr %uec_d to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 100, ptr %uec_d, align 4
  %ring = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 2
  %90 = ptrtoint ptr %ring to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 1, ptr %ring, align 8
  %ring_blocks = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 2, i32 1
  %91 = ptrtoint ptr %ring_blocks to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 2, ptr %ring_blocks, align 4
  %buffer_mode = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 2, i32 2
  %92 = ptrtoint ptr %buffer_mode to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 1, ptr %buffer_mode, align 8
  %rxds_limit = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 2, i32 4
  %93 = ptrtoint ptr %rxds_limit to i32
  call void @__asan_store8_noabort(i32 %93)
  store i64 44, ptr %rxds_limit, align 8
  %scatter_mode = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 2, i32 3
  %94 = ptrtoint ptr %scatter_mode to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 0, ptr %scatter_mode, align 4
  %rti = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5
  %95 = ptrtoint ptr %rti to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 1, ptr %rti, align 8
  %btimer_val186 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 1
  %96 = ptrtoint ptr %btimer_val186 to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 919, ptr %btimer_val186, align 4
  %timer_ac_en190 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 2
  %97 = ptrtoint ptr %timer_ac_en190 to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 1, ptr %timer_ac_en190, align 8
  %timer_ci_en194 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 3
  %98 = ptrtoint ptr %timer_ci_en194 to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 0, ptr %timer_ci_en194, align 4
  %timer_ri_en198 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 4
  %99 = ptrtoint ptr %timer_ri_en198 to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 0, ptr %timer_ri_en198, align 8
  %util_sel202 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 6
  %100 = ptrtoint ptr %util_sel202 to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 18, ptr %util_sel202, align 8
  %urange_a206 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 8
  %101 = ptrtoint ptr %urange_a206 to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 5, ptr %urange_a206, align 8
  %urange_b210 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 10
  %102 = ptrtoint ptr %urange_b210 to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 15, ptr %urange_b210, align 8
  %urange_c214 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 12
  %103 = ptrtoint ptr %urange_c214 to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 40, ptr %urange_c214, align 8
  %uec_a218 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 9
  %104 = ptrtoint ptr %uec_a218 to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 1, ptr %uec_a218, align 4
  %uec_b222 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 11
  %105 = ptrtoint ptr %uec_b222 to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 5, ptr %uec_b222, align 4
  %uec_c226 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 13
  %106 = ptrtoint ptr %uec_c226 to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 10, ptr %uec_c226, align 4
  %uec_d230 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 14
  %107 = ptrtoint ptr %uec_d230 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 15, ptr %uec_d230, align 8
  %rtimer_val234 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 5
  %108 = ptrtoint ptr %rtimer_val234 to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 0, ptr %rtimer_val234, align 4
  %ltimer_val238 = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 5, i32 7
  %109 = ptrtoint ptr %ltimer_val238 to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 367, ptr %ltimer_val238, align 4
  %110 = load i32, ptr @vlan_tag_strip, align 4
  %rpa_strip_vlan_tag = getelementptr %struct.vxge_hw_device_config, ptr %device_config, i32 0, i32 4, i32 %i.2366, i32 7
  %111 = ptrtoint ptr %rpa_strip_vlan_tag to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 %110, ptr %rpa_strip_vlan_tag, align 8
  br label %for.inc241

do.end94:                                         ; preds = %for.body57
  call void @__sanitizer_cov_trace_pc() #18
  %call96 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.133, ptr noundef nonnull @.str.3, i32 noundef %i.2366) #19
  br label %for.end243

for.inc241:                                       ; preds = %do.end83, %do.end75
  %no_of_vpaths.1 = phi i32 [ %inc88, %do.end83 ], [ %no_of_vpaths.0365, %do.end75 ]
  %exitcond370.not = icmp eq i32 %add65, 17
  br i1 %exitcond370.not, label %for.inc241.for.end243_crit_edge, label %for.inc241.for.body57_crit_edge

for.inc241.for.body57_crit_edge:                  ; preds = %for.inc241
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body57

for.inc241.for.end243_crit_edge:                  ; preds = %for.inc241
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end243

for.end243:                                       ; preds = %for.inc241.for.end243_crit_edge, %do.end94
  %no_of_vpaths.0361 = phi i32 [ %no_of_vpaths.0365, %do.end94 ], [ %no_of_vpaths.1, %for.inc241.for.end243_crit_edge ]
  %112 = load ptr, ptr @driver_config, align 4
  %vpath_per_dev244 = getelementptr inbounds %struct.vxge_drv_config, ptr %112, i32 0, i32 3
  %113 = ptrtoint ptr %vpath_per_dev244 to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %2, ptr %vpath_per_dev244, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end243, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %no_of_vpaths.0361, %for.end243 ], [ 0, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_device_initialize(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_eprom_img_ver_get(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_strip_fcs_check(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vxge_timestamp_config(ptr noundef %devh) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @vxge_hw_mgmt_reg_write(ptr noundef %devh, i32 noundef 3, i32 noundef 0, i32 noundef 8008, i64 noundef 1152921504606846976) #16
  tail call void @vxge_hw_device_flush_io(ptr noundef %devh) #16
  %hwts_en = getelementptr inbounds %struct.__vxge_hw_device, ptr %devh, i32 0, i32 4, i32 3
  %0 = ptrtoint ptr %hwts_en to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %hwts_en, align 4
  %bf.set = or i8 %bf.load, 4
  store i8 %bf.set, ptr %hwts_en, align 4
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_debug_set(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vxge_device_register(ptr noundef %hldev, ptr nocapture noundef readonly %config, i32 noundef %no_of_vpath, ptr nocapture noundef writeonly %vdev_out) unnamed_addr #0 align 64 {
entry:
  %stat = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %stat) #16
  %0 = ptrtoint ptr %stat to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %stat, align 8, !annotation !947
  %1 = ptrtoint ptr %vdev_out to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %vdev_out, align 4
  %tx_steering_type = getelementptr inbounds %struct.vxge_config, ptr %config, i32 0, i32 7
  %2 = ptrtoint ptr %tx_steering_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tx_steering_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  %spec.select = select i1 %tobool.not, i32 1, i32 %no_of_vpath
  %call = tail call ptr @alloc_etherdev_mqs(i32 noundef 7192, i32 noundef %spec.select, i32 noundef %spec.select) #16
  %cmp = icmp eq ptr %call, null
  %call2 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call2)
  %cmp3 = icmp ugt i32 %call2, 1
  br i1 %cmp, label %do.body, label %do.body13

do.body:                                          ; preds = %entry
  br i1 %cmp3, label %do.body.do.end_crit_edge, label %lor.lhs.false

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

lor.lhs.false:                                    ; preds = %do.body
  %call4 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp5.not = icmp eq i32 %call4, 0
  br i1 %cmp5.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false.do.end_crit_edge

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %lor.lhs.false.do.end_crit_edge, %do.body.do.end_crit_edge
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.157, ptr noundef nonnull @.str.158) #19
  br label %cleanup

do.body13:                                        ; preds = %entry
  br i1 %cmp3, label %do.body13.do.end22_crit_edge, label %lor.lhs.false16

do.body13.do.end22_crit_edge:                     ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end22

lor.lhs.false16:                                  ; preds = %do.body13
  %call17 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %cmp18.not = icmp eq i32 %call17, 0
  br i1 %cmp18.not, label %lor.lhs.false16.do.end27_crit_edge, label %lor.lhs.false16.do.end22_crit_edge

lor.lhs.false16.do.end22_crit_edge:               ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end22

lor.lhs.false16.do.end27_crit_edge:               ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end27

do.end22:                                         ; preds = %lor.lhs.false16.do.end22_crit_edge, %do.body13.do.end22_crit_edge
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.160, ptr noundef nonnull %call, ptr noundef nonnull @.str.158, i32 noundef 3378) #19
  br label %do.end27

do.end27:                                         ; preds = %do.end22, %lor.lhs.false16.do.end27_crit_edge
  %add.ptr.i = getelementptr i8, ptr %call, i32 2304
  %4 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 7192)
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call, ptr %add.ptr.i, align 8
  %devh = getelementptr i8, ptr %call, i32 2312
  %6 = ptrtoint ptr %devh to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %hldev, ptr %devh, align 8
  %pdev = getelementptr inbounds %struct.__vxge_hw_device, ptr %hldev, i32 0, i32 2
  %7 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pdev, align 8
  %pdev30 = getelementptr i8, ptr %call, i32 2308
  %9 = ptrtoint ptr %pdev30 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %pdev30, align 4
  %config31 = getelementptr i8, ptr %call, i32 2832
  %10 = call ptr @memcpy(ptr %config31, ptr %config, i32 648)
  %rx_hwts = getelementptr i8, ptr %call, i32 3586
  %11 = ptrtoint ptr %rx_hwts to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %rx_hwts, align 2
  %revision = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 12
  %12 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %revision, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %13)
  %cmp33 = icmp eq i8 %13, 1
  %bf.shl = select i1 %cmp33, i8 64, i8 0
  %14 = ptrtoint ptr %rx_hwts to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %bf.shl, ptr %rx_hwts, align 2
  %dev = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  %parent = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 133, i32 1
  %15 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %dev, ptr %parent, align 8
  %hw_features = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 24
  %rth_steering = getelementptr i8, ptr %call, i32 2852
  %16 = ptrtoint ptr %rth_steering to i32
  call void @__asan_load4_noabort(i32 %16)
  %bf.load41 = load i32, ptr %rth_steering, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %bf.load41)
  %cmp42.not = icmp ult i32 %bf.load41, 1073741824
  %spec.store.select = select i1 %cmp42.not, i64 1099512742035, i64 1649268555923
  %17 = ptrtoint ptr %hw_features to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %spec.store.select, ptr %hw_features, align 8
  %features = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 23
  %18 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %features, align 16
  %or49 = or i64 %spec.store.select, %19
  %or50 = or i64 %or49, 768
  store i64 %or50, ptr %features, align 16
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 16
  %20 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @vxge_netdev_ops, ptr %netdev_ops, align 8
  %watchdog_timeo = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 115
  %21 = ptrtoint ptr %watchdog_timeo to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1500, ptr %watchdog_timeo, align 4
  %reset_task = getelementptr i8, ptr %call, i32 9452
  tail call void @__init_work(ptr noundef %reset_task, i32 noundef 0) #16
  %22 = ptrtoint ptr %reset_task to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 -64, ptr %reset_task, align 4
  %lockdep_map = getelementptr i8, ptr %call, i32 9468
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.162, ptr noundef nonnull @vxge_device_register.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry55 = getelementptr i8, ptr %call, i32 9456
  %23 = ptrtoint ptr %entry55 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %entry55, ptr %entry55, align 4
  %prev.i = getelementptr i8, ptr %call, i32 9460
  %24 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %entry55, ptr %prev.i, align 4
  %func = getelementptr i8, ptr %call, i32 9464
  %25 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @vxge_reset, ptr %func, align 4
  tail call void @vxge_initialize_ethtool_ops(ptr noundef nonnull %call) #16
  %26 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %no_of_vpath, i32 640) #16
  %27 = extractvalue { i32, i1 } %26, 1
  br i1 %27, label %kcalloc.exit.thread, label %if.end7.i.i, !prof !948

kcalloc.exit.thread:                              ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #18
  %vpaths252 = getelementptr i8, ptr %call, i32 9280
  %28 = ptrtoint ptr %vpaths252 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %vpaths252, align 8
  br label %do.end66

if.end7.i.i:                                      ; preds = %do.end27
  %29 = extractvalue { i32, i1 } %26, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %29, i32 noundef 3520) #22
  %vpaths = getelementptr i8, ptr %call, i32 9280
  %30 = ptrtoint ptr %vpaths to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %call8.i.i, ptr %vpaths, align 8
  %tobool61.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool61.not, label %if.end7.i.i.do.end66_crit_edge, label %do.body75

if.end7.i.i.do.end66_crit_edge:                   ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end66

do.end66:                                         ; preds = %if.end7.i.i.do.end66_crit_edge, %kcalloc.exit.thread
  %31 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %add.ptr.i, align 8
  %call71 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.164, ptr noundef %32) #19
  br label %_out1

do.body75:                                        ; preds = %if.end7.i.i
  %call76 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call76)
  %cmp77 = icmp ugt i32 %call76, 1
  br i1 %cmp77, label %do.body75.do.end86_crit_edge, label %lor.lhs.false79

do.body75.do.end86_crit_edge:                     ; preds = %do.body75
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end86

lor.lhs.false79:                                  ; preds = %do.body75
  %call80 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80)
  %cmp81.not = icmp eq i32 %call80, 0
  br i1 %cmp81.not, label %lor.lhs.false79.do.end91_crit_edge, label %lor.lhs.false79.do.end86_crit_edge

lor.lhs.false79.do.end86_crit_edge:               ; preds = %lor.lhs.false79
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end86

lor.lhs.false79.do.end91_crit_edge:               ; preds = %lor.lhs.false79
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end91

do.end86:                                         ; preds = %lor.lhs.false79.do.end86_crit_edge, %do.body75.do.end86_crit_edge
  %call88 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.167, ptr noundef nonnull @.str.158) #19
  br label %do.end91

do.end91:                                         ; preds = %do.end86, %lor.lhs.false79.do.end91_crit_edge
  %33 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %features, align 16
  %or93 = or i64 %34, 32
  store i64 %or93, ptr %features, align 16
  %min_mtu = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 30
  %35 = ptrtoint ptr %min_mtu to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 68, ptr %min_mtu, align 8
  %max_mtu = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 31
  %36 = ptrtoint ptr %max_mtu to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 9600, ptr %max_mtu, align 4
  %call94 = tail call i32 @register_netdev(ptr noundef nonnull %call) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %if.end116, label %do.body97

do.body97:                                        ; preds = %do.end91
  %call98 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call98)
  %cmp99 = icmp ugt i32 %call98, 1
  br i1 %cmp99, label %do.body97.do.end108_crit_edge, label %lor.lhs.false101

do.body97.do.end108_crit_edge:                    ; preds = %do.body97
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end108

lor.lhs.false101:                                 ; preds = %do.body97
  %call102 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call102)
  %cmp103.not = icmp eq i32 %call102, 0
  br i1 %cmp103.not, label %lor.lhs.false101._out2_crit_edge, label %lor.lhs.false101.do.end108_crit_edge

lor.lhs.false101.do.end108_crit_edge:             ; preds = %lor.lhs.false101
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end108

lor.lhs.false101._out2_crit_edge:                 ; preds = %lor.lhs.false101
  call void @__sanitizer_cov_trace_pc() #18
  br label %_out2

do.end108:                                        ; preds = %lor.lhs.false101.do.end108_crit_edge, %do.body97.do.end108_crit_edge
  %call112 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.170, ptr noundef nonnull %call, ptr noundef nonnull @.str.158) #19
  br label %_out2

if.end116:                                        ; preds = %do.end91
  %addr_len = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 56
  %37 = ptrtoint ptr %addr_len to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 6, ptr %addr_len, align 1
  tail call void @netif_carrier_off(ptr noundef nonnull %call) #16
  %call118 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call118)
  %cmp119 = icmp ugt i32 %call118, 1
  br i1 %cmp119, label %if.end116.do.end128_crit_edge, label %lor.lhs.false121

if.end116.do.end128_crit_edge:                    ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end128

lor.lhs.false121:                                 ; preds = %if.end116
  %call122 = tail call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call122)
  %cmp123.not = icmp eq i32 %call122, 0
  br i1 %cmp123.not, label %lor.lhs.false121.do.end135_crit_edge, label %lor.lhs.false121.do.end128_crit_edge

lor.lhs.false121.do.end128_crit_edge:             ; preds = %lor.lhs.false121
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end128

lor.lhs.false121.do.end135_crit_edge:             ; preds = %lor.lhs.false121
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end135

do.end128:                                        ; preds = %lor.lhs.false121.do.end128_crit_edge, %if.end116.do.end128_crit_edge
  %call132 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.173, ptr noundef nonnull %call) #19
  br label %do.end135

do.end135:                                        ; preds = %do.end128, %lor.lhs.false121.do.end135_crit_edge
  %ndev136 = getelementptr inbounds %struct.__vxge_hw_device, ptr %hldev, i32 0, i32 3
  %38 = ptrtoint ptr %ndev136 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %call, ptr %ndev136, align 4
  %39 = ptrtoint ptr %vdev_out to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %add.ptr.i, ptr %vdev_out, align 4
  %call137 = call i32 @vxge_hw_mrpcim_stats_access(ptr noundef %hldev, i32 noundef 3, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %stat) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 217, i32 %call137)
  %cmp138 = icmp eq i32 %call137, 217
  br i1 %cmp138, label %do.body141, label %do.end135.do.body161_crit_edge

do.end135.do.body161_crit_edge:                   ; preds = %do.end135
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body161

do.body141:                                       ; preds = %do.end135
  %call142 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call142)
  %cmp143 = icmp ugt i32 %call142, 1
  br i1 %cmp143, label %do.body141.do.end152_crit_edge, label %lor.lhs.false145

do.body141.do.end152_crit_edge:                   ; preds = %do.body141
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end152

lor.lhs.false145:                                 ; preds = %do.body141
  %call146 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call146)
  %cmp147.not = icmp eq i32 %call146, 0
  br i1 %cmp147.not, label %lor.lhs.false145.do.body161_crit_edge, label %lor.lhs.false145.do.end152_crit_edge

lor.lhs.false145.do.end152_crit_edge:             ; preds = %lor.lhs.false145
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end152

lor.lhs.false145.do.body161_crit_edge:            ; preds = %lor.lhs.false145
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body161

do.end152:                                        ; preds = %lor.lhs.false145.do.end152_crit_edge, %do.body141.do.end152_crit_edge
  %call156 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.176, ptr noundef nonnull %call) #19
  br label %do.body161

do.body161:                                       ; preds = %do.end152, %lor.lhs.false145.do.body161_crit_edge, %do.end135.do.body161_crit_edge
  %call162 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call162)
  %cmp163 = icmp ugt i32 %call162, 1
  br i1 %cmp163, label %do.body161.do.end172_crit_edge, label %lor.lhs.false165

do.body161.do.end172_crit_edge:                   ; preds = %do.body161
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end172

lor.lhs.false165:                                 ; preds = %do.body161
  %call166 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %hldev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call166)
  %cmp167.not = icmp eq i32 %call166, 0
  br i1 %cmp167.not, label %lor.lhs.false165.cleanup_crit_edge, label %lor.lhs.false165.do.end172_crit_edge

lor.lhs.false165.do.end172_crit_edge:             ; preds = %lor.lhs.false165
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end172

lor.lhs.false165.cleanup_crit_edge:               ; preds = %lor.lhs.false165
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end172:                                        ; preds = %lor.lhs.false165.do.end172_crit_edge, %do.body161.do.end172_crit_edge
  %call176 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef nonnull %call, ptr noundef nonnull @.str.158, i32 noundef 3470) #19
  br label %cleanup

_out2:                                            ; preds = %do.end108, %lor.lhs.false101._out2_crit_edge
  %40 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %vpaths, align 8
  tail call void @kfree(ptr noundef %41) #16
  br label %_out1

_out1:                                            ; preds = %_out2, %do.end66
  %ret.0 = phi i32 [ %call94, %_out2 ], [ -12, %do.end66 ]
  tail call void @free_netdev(ptr noundef nonnull %call) #16
  br label %cleanup

cleanup:                                          ; preds = %_out1, %do.end172, %lor.lhs.false165.cleanup_crit_edge, %do.end, %lor.lhs.false.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end172 ], [ 0, %lor.lhs.false165.cleanup_crit_edge ], [ %ret.0, %_out1 ], [ -19, %do.end ], [ -19, %lor.lhs.false.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %stat) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vxge_probe_fw_update(ptr nocapture noundef readonly %vdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %fw_version = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 9, i32 4
  %0 = ptrtoint ptr %fw_version to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %fw_version, align 8
  %minor = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 9, i32 4, i32 1
  %2 = ptrtoint ptr %minor to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %minor, align 4
  %build = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 9, i32 4, i32 2
  %4 = ptrtoint ptr %build to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %build, align 8
  %shl = shl i32 %1, 16
  %shl7 = shl i32 %3, 8
  %add = add i32 %shl7, %shl
  %add8 = add i32 %add, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 67585, i32 %add8)
  %cmp = icmp eq i32 %add8, 67585
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 67585, i32 %add)
  %cmp13 = icmp ugt i32 %add, 67585
  br i1 %cmp13, label %do.end, label %if.end18

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.459, ptr noundef nonnull @.str.3) #19
  br label %cleanup

if.end18:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 66565, i32 %add8)
  %cmp23 = icmp ult i32 %add8, 66565
  br i1 %cmp23, label %do.end28, label %if.end33

do.end28:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  %call30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.462, ptr noundef nonnull @.str.3, i32 noundef %1, i32 noundef %3, i32 noundef %5) #19
  br label %cleanup

if.end33:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_const_cmp4(i32 67072, i32 %add8)
  %cmp38 = icmp ugt i32 %add8, 67072
  br i1 %cmp38, label %for.cond.preheader, label %if.end33.if.end43_crit_edge

if.end33.if.end43_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

for.cond.preheader:                               ; preds = %if.end33
  %devh = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 2
  %6 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %devh, align 8
  %arrayidx = getelementptr %struct.__vxge_hw_device, ptr %7, i32 0, i32 32, i32 0
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %arrayidx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not = icmp eq i16 %9, 0
  br i1 %tobool.not, label %for.cond, label %for.cond.preheader.if.end43_crit_edge

for.cond.preheader.if.end43_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

for.cond:                                         ; preds = %for.cond.preheader
  %arrayidx.1 = getelementptr %struct.__vxge_hw_device, ptr %7, i32 0, i32 32, i32 1
  %10 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.1, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not.1 = icmp eq i16 %11, 0
  br i1 %tobool.not.1, label %for.cond.1, label %for.cond.if.end43_crit_edge

for.cond.if.end43_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

for.cond.1:                                       ; preds = %for.cond
  %arrayidx.2 = getelementptr %struct.__vxge_hw_device, ptr %7, i32 0, i32 32, i32 2
  %12 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %arrayidx.2, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %tobool.not.2 = icmp eq i16 %13, 0
  br i1 %tobool.not.2, label %for.cond.2, label %for.cond.1.if.end43_crit_edge

for.cond.1.if.end43_crit_edge:                    ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

for.cond.2:                                       ; preds = %for.cond.1
  %arrayidx.3 = getelementptr %struct.__vxge_hw_device, ptr %7, i32 0, i32 32, i32 3
  %14 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %arrayidx.3, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool.not.3 = icmp eq i16 %15, 0
  br i1 %tobool.not.3, label %for.cond.3, label %for.cond.2.if.end43_crit_edge

for.cond.2.if.end43_crit_edge:                    ; preds = %for.cond.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

for.cond.3:                                       ; preds = %for.cond.2
  %arrayidx.4 = getelementptr %struct.__vxge_hw_device, ptr %7, i32 0, i32 32, i32 4
  %16 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %arrayidx.4, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool.not.4 = icmp eq i16 %17, 0
  br i1 %tobool.not.4, label %for.cond.4, label %for.cond.3.if.end43_crit_edge

for.cond.3.if.end43_crit_edge:                    ; preds = %for.cond.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

for.cond.4:                                       ; preds = %for.cond.3
  %arrayidx.5 = getelementptr %struct.__vxge_hw_device, ptr %7, i32 0, i32 32, i32 5
  %18 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %arrayidx.5, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool.not.5 = icmp eq i16 %19, 0
  br i1 %tobool.not.5, label %for.cond.5, label %for.cond.4.if.end43_crit_edge

for.cond.4.if.end43_crit_edge:                    ; preds = %for.cond.4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

for.cond.5:                                       ; preds = %for.cond.4
  %arrayidx.6 = getelementptr %struct.__vxge_hw_device, ptr %7, i32 0, i32 32, i32 6
  %20 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %arrayidx.6, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool.not.6 = icmp eq i16 %21, 0
  br i1 %tobool.not.6, label %for.cond.6, label %for.cond.5.if.end43_crit_edge

for.cond.5.if.end43_crit_edge:                    ; preds = %for.cond.5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

for.cond.6:                                       ; preds = %for.cond.5
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.7 = getelementptr %struct.__vxge_hw_device, ptr %7, i32 0, i32 32, i32 7
  %22 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %arrayidx.7, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %tobool.not.7 = icmp eq i16 %23, 0
  %spec.select = select i1 %tobool.not.7, ptr @.str.465, ptr @.str.464
  br label %if.end43

if.end43:                                         ; preds = %for.cond.6, %for.cond.5.if.end43_crit_edge, %for.cond.4.if.end43_crit_edge, %for.cond.3.if.end43_crit_edge, %for.cond.2.if.end43_crit_edge, %for.cond.1.if.end43_crit_edge, %for.cond.if.end43_crit_edge, %for.cond.preheader.if.end43_crit_edge, %if.end33.if.end43_crit_edge
  %24 = phi ptr [ @.str.465, %if.end33.if.end43_crit_edge ], [ @.str.464, %for.cond.preheader.if.end43_crit_edge ], [ @.str.464, %for.cond.if.end43_crit_edge ], [ @.str.464, %for.cond.1.if.end43_crit_edge ], [ @.str.464, %for.cond.2.if.end43_crit_edge ], [ @.str.464, %for.cond.3.if.end43_crit_edge ], [ @.str.464, %for.cond.4.if.end43_crit_edge ], [ @.str.464, %for.cond.5.if.end43_crit_edge ], [ %spec.select, %for.cond.6 ]
  %call47 = tail call i32 @vxge_fw_upgrade(ptr noundef %vdev, ptr noundef nonnull %24, i32 noundef 0)
  %25 = zext i32 %call47 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.550)
  switch i32 %call47, label %if.end43.cleanup_crit_edge [
    i32 -22, label %if.end43.if.else51_crit_edge
    i32 -2, label %if.end43.if.else51_crit_edge100
  ]

if.end43.if.else51_crit_edge100:                  ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else51

if.end43.if.else51_crit_edge:                     ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else51

if.end43.cleanup_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else51:                                        ; preds = %if.end43.if.else51_crit_edge, %if.end43.if.else51_crit_edge100
  call void @__sanitizer_cov_trace_const_cmp4(i32 67584, i32 %add)
  %cmp57 = icmp ult i32 %add, 67584
  br i1 %cmp57, label %do.end62, label %if.else51.cleanup_crit_edge

if.else51.cleanup_crit_edge:                      ; preds = %if.else51
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end62:                                         ; preds = %if.else51
  call void @__sanitizer_cov_trace_pc() #18
  %call64 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.467, ptr noundef nonnull @.str.3, i32 noundef %1, i32 noundef %3, i32 noundef %5) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end62, %if.else51.cleanup_crit_edge, %if.end43.cleanup_crit_edge, %do.end28, %do.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ -22, %do.end28 ], [ -22, %do.end62 ], [ 0, %entry.cleanup_crit_edge ], [ -5, %if.end43.cleanup_crit_edge ], [ 0, %if.else51.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_device_error_level_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_device_trace_level_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @vxge_hw_device_link_width_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_print_parm(ptr noundef %vdev, i64 noundef %vpath_mask) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vdev, align 8
  %no_of_vpath = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 17
  %2 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %no_of_vpath, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.469, ptr noundef %1, i32 noundef %3) #19
  %intr_type = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 3
  %4 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %intr_type, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.551)
  switch i32 %5, label %entry.sw.epilog_crit_edge [
    i32 0, label %entry.sw.epilog.sink.split_crit_edge
    i32 2, label %do.end19
  ]

entry.sw.epilog.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.sink.split

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

do.end19:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %do.end19, %entry.sw.epilog.sink.split_crit_edge
  %.str.475.sink = phi ptr [ @.str.475, %do.end19 ], [ @.str.472, %entry.sw.epilog.sink.split_crit_edge ]
  %7 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vdev, align 8
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.475.sink, ptr noundef %8) #19
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  %rth_steering = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 5
  %9 = ptrtoint ptr %rth_steering to i32
  call void @__asan_load4_noabort(i32 %9)
  %bf.load = load i32, ptr %rth_steering, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %bf.load)
  %tobool.not = icmp ult i32 %bf.load, 1073741824
  %.str.481..str.478 = select i1 %tobool.not, ptr @.str.481, ptr @.str.478
  %10 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vdev, align 8
  %call47 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.481..str.478, ptr noundef %11) #19
  %tx_steering_type = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 7
  %12 = ptrtoint ptr %tx_steering_type to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tx_steering_type, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.552)
  switch i32 %13, label %do.end140 [
    i32 0, label %do.end55
    i32 1, label %do.end67
    i32 2, label %do.end92
    i32 4, label %do.end117
    i32 3, label %do.end129
  ]

do.end55:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vdev, align 8
  %call60 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.484, ptr noundef %16) #19
  br label %sw.epilog161

do.end67:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vdev, align 8
  %call72 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.487, ptr noundef %18) #19
  %19 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %vdev, align 8
  %call83 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.484, ptr noundef %20) #19
  %21 = ptrtoint ptr %tx_steering_type to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %tx_steering_type, align 4
  br label %sw.epilog161

do.end92:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vdev, align 8
  %call97 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.487, ptr noundef %23) #19
  %24 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vdev, align 8
  %call108 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.484, ptr noundef %25) #19
  %26 = ptrtoint ptr %tx_steering_type to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %tx_steering_type, align 4
  br label %sw.epilog161

do.end117:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %vdev, align 8
  %call122 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.496, ptr noundef %28) #19
  br label %sw.epilog161

do.end129:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %vdev, align 8
  %call134 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.499, ptr noundef %30) #19
  br label %sw.epilog161

do.end140:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %31 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %vdev, align 8
  %call145 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.502, ptr noundef %32) #19
  %33 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %vdev, align 8
  %call156 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.484, ptr noundef %34) #19
  %35 = ptrtoint ptr %tx_steering_type to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %tx_steering_type, align 4
  br label %sw.epilog161

sw.epilog161:                                     ; preds = %do.end140, %do.end129, %do.end117, %do.end92, %do.end67, %do.end55
  %addr_learn_en = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 4
  %36 = ptrtoint ptr %addr_learn_en to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %addr_learn_en, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool163.not = icmp eq i32 %37, 0
  br i1 %tobool163.not, label %sw.epilog161.for.body.preheader_crit_edge, label %do.end168

sw.epilog161.for.body.preheader_crit_edge:        ; preds = %sw.epilog161
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.preheader

do.end168:                                        ; preds = %sw.epilog161
  call void @__sanitizer_cov_trace_pc() #18
  %38 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %vdev, align 8
  %call173 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.507, ptr noundef %39) #19
  br label %for.body.preheader

for.body.preheader:                               ; preds = %do.end168, %sw.epilog161.for.body.preheader_crit_edge
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.preheader
  %i.0257 = phi i32 [ %add, %for.inc.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %sub = sub nsw i32 63, %i.0257
  %sh_prom = zext i32 %sub to i64
  %40 = shl nuw i64 1, %sh_prom
  %41 = and i64 %40, %vpath_mask
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %41)
  %tobool177.not = icmp eq i64 %41, 0
  br i1 %tobool177.not, label %for.inc, label %do.end183

do.end183:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %42 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %vdev, align 8
  %devh = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 2
  %44 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %devh, align 8
  %mtu = getelementptr %struct.__vxge_hw_device, ptr %45, i32 0, i32 4, i32 4, i32 %i.0257, i32 6
  %46 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %mtu, align 4
  %call189 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.510, ptr noundef %43, i32 noundef %47) #19
  %48 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %vdev, align 8
  %50 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %devh, align 8
  %rpa_strip_vlan_tag = getelementptr %struct.__vxge_hw_device, ptr %51, i32 0, i32 4, i32 4, i32 %i.0257, i32 7
  %52 = ptrtoint ptr %rpa_strip_vlan_tag to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rpa_strip_vlan_tag, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool204.not = icmp eq i32 %53, 0
  %cond = select i1 %tobool204.not, ptr @.str.516, ptr @.str.515
  %call205 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.513, ptr noundef %49, ptr noundef nonnull %cond) #19
  %54 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %vdev, align 8
  %56 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %devh, align 8
  %max_frags = getelementptr %struct.__vxge_hw_device, ptr %57, i32 0, i32 4, i32 4, i32 %i.0257, i32 3, i32 2
  %58 = ptrtoint ptr %max_frags to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %max_frags, align 8
  %call220 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.518, ptr noundef %55, i32 noundef %59) #19
  br label %for.end

for.inc:                                          ; preds = %for.body
  %add = add nuw nsw i32 %i.0257, 1
  %exitcond.not = icmp eq i32 %add, 17
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end183
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_unmask_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_free_mac_add_list(ptr noundef %vpath) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mac_addr_list = getelementptr inbounds %struct.vxge_vpath, ptr %vpath, i32 0, i32 12
  %0 = ptrtoint ptr %mac_addr_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %mac_addr_list, align 4
  %cmp.i.not = icmp eq ptr %1, %mac_addr_list
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body:                                         ; preds = %list_del.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %entry1.020 = phi ptr [ %next.022, %list_del.exit.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %entry1.020 to i32
  call void @__asan_load4_noabort(i32 %2)
  %next.022 = load ptr, ptr %entry1.020, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.020) #16
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del.exit_crit_edge

for.body.list_del.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %entry1.020, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %entry1.020 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %entry1.020, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body.list_del.exit_crit_edge
  %9 = ptrtoint ptr %entry1.020 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1.020, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %entry1.020, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef %entry1.020) #16
  %cmp.i16.not = icmp eq ptr %next.022, %mac_addr_list
  br i1 %cmp.i16.not, label %list_del.exit.cleanup_crit_edge, label %list_del.exit.for.body_crit_edge

list_del.exit.for.body_crit_edge:                 ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

list_del.exit.cleanup_crit_edge:                  ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %list_del.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_device_unregister(ptr nocapture noundef readonly %hldev) unnamed_addr #0 align 64 {
entry:
  %buf = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %buf) #16
  %ndev = getelementptr inbounds %struct.__vxge_hw_device, ptr %hldev, i32 0, i32 3
  %0 = call ptr @memset(ptr %buf, i32 255, i32 16)
  %1 = ptrtoint ptr %ndev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ndev, align 4
  %level_trace = getelementptr i8, ptr %2, i32 9416
  %3 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %.not = icmp eq i32 %4, 0
  br i1 %.not, label %entry.do.end7_crit_edge, label %do.end

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i = getelementptr i8, ptr %2, i32 2304
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr.i, align 8
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %6, ptr noundef nonnull @.str.520, i32 noundef 3496) #19
  br label %do.end7

do.end7:                                          ; preds = %do.end, %entry.do.end7_crit_edge
  %call11 = call i32 @strlcpy(ptr noundef nonnull %buf, ptr noundef %2, i32 noundef 16) #16
  %reset_task = getelementptr i8, ptr %2, i32 9452
  %call12 = call zeroext i1 @flush_work(ptr noundef %reset_task) #16
  call void @unregister_netdev(ptr noundef %2) #16
  %vpaths = getelementptr i8, ptr %2, i32 9280
  %7 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vpaths, align 8
  call void @kfree(ptr noundef %8) #16
  %9 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %.not60 = icmp eq i32 %10, 0
  br i1 %.not60, label %do.end7.do.end44_crit_edge, label %do.body29

do.end7.do.end44_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end44

do.body29:                                        ; preds = %do.end7
  %call25 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.522, ptr noundef nonnull %buf) #19
  %11 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pr = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %.not61 = icmp eq i32 %.pr, 0
  br i1 %.not61, label %do.body29.do.end44_crit_edge, label %do.end38

do.body29.do.end44_crit_edge:                     ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end44

do.end38:                                         ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #18
  %call41 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef nonnull %buf, ptr noundef nonnull @.str.520, i32 noundef 3510) #19
  br label %do.end44

do.end44:                                         ; preds = %do.end38, %do.body29.do.end44_crit_edge, %do.end7.do.end44_crit_edge
  call void @free_netdev(ptr noundef %2) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %buf) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_terminate(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_sriov(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @iounmap(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_release_region(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_mask(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_coherent_mask(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @pci_find_ext_capability(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_get_num_default_rss_queues() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_callback_link_up(ptr nocapture noundef readonly %hldev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ndev = getelementptr inbounds %struct.__vxge_hw_device, ptr %hldev, i32 0, i32 3
  %0 = ptrtoint ptr %ndev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ndev, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i, align 8
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %3, ptr noundef nonnull @.str.136, i32 noundef 154) #19
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 8
  tail call void (ptr, ptr, ...) @netdev_notice(ptr noundef %5, ptr noundef nonnull @.str.137) #19
  %link_up = getelementptr i8, ptr %1, i32 9364
  %6 = ptrtoint ptr %link_up to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %link_up, align 4
  %inc = add i32 %7, 1
  store i32 %inc, ptr %link_up, align 4
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr.i, align 8
  tail call void @netif_carrier_on(ptr noundef %9) #16
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %add.ptr.i, align 8
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 104
  %12 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp4.not.i = icmp eq i32 %13, 0
  br i1 %cmp4.not.i, label %entry.netif_tx_wake_all_queues.exit_crit_edge, label %for.body.lr.ph.i

entry.netif_tx_wake_all_queues.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %netif_tx_wake_all_queues.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %14 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %_tx.i.i, align 128
  %arrayidx.i.i = getelementptr %struct.netdev_queue, ptr %15, i32 %i.05.i
  tail call void @netif_tx_wake_queue(ptr noundef %arrayidx.i.i) #16
  %inc.i = add nuw i32 %i.05.i, 1
  %16 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %17
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.netif_tx_wake_all_queues.exit_crit_edge

for.body.i.netif_tx_wake_all_queues.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %netif_tx_wake_all_queues.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

netif_tx_wake_all_queues.exit:                    ; preds = %for.body.i.netif_tx_wake_all_queues.exit_crit_edge, %entry.netif_tx_wake_all_queues.exit_crit_edge
  %18 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %add.ptr.i, align 8
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %19, ptr noundef nonnull @.str.136, i32 noundef 162) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_callback_link_down(ptr nocapture noundef readonly %hldev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ndev = getelementptr inbounds %struct.__vxge_hw_device, ptr %hldev, i32 0, i32 3
  %0 = ptrtoint ptr %ndev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ndev, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i, align 8
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %3, ptr noundef nonnull @.str.141, i32 noundef 177) #19
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 8
  tail call void (ptr, ptr, ...) @netdev_notice(ptr noundef %5, ptr noundef nonnull @.str.142) #19
  %link_down = getelementptr i8, ptr %1, i32 9368
  %6 = ptrtoint ptr %link_down to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %link_down, align 4
  %inc = add i32 %7, 1
  store i32 %inc, ptr %link_down, align 4
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr.i, align 8
  tail call void @netif_carrier_off(ptr noundef %9) #16
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %add.ptr.i, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %11) #16
  %12 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %add.ptr.i, align 8
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %13, ptr noundef nonnull @.str.141, i32 noundef 185) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_callback_crit_err(ptr noundef %hldev, i32 noundef %type, i64 noundef %vp_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ndev = getelementptr inbounds %struct.__vxge_hw_device, ptr %hldev, i32 0, i32 3
  %0 = ptrtoint ptr %ndev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ndev, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %level_trace = getelementptr i8, ptr %1, i32 9416
  %2 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %.not = icmp eq i32 %3, 0
  br i1 %.not, label %entry.do.end7_crit_edge, label %do.end

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 8
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %5, ptr noundef nonnull @.str.145, i32 noundef 3532) #19
  br label %do.end7

do.end7:                                          ; preds = %do.end, %entry.do.end7_crit_edge
  %cric_err_event = getelementptr i8, ptr %1, i32 9036
  %6 = ptrtoint ptr %cric_err_event to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %type, ptr %cric_err_event, align 4
  %no_of_vpath = getelementptr i8, ptr %1, i32 9044
  %7 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp8173 = icmp sgt i32 %8, 0
  br i1 %cmp8173, label %for.body.lr.ph, label %do.end7.for.end_crit_edge

do.end7.for.end_crit_edge:                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end7
  %vpaths = getelementptr i8, ptr %1, i32 9280
  %9 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vpaths, align 8
  %11 = add nsw i32 %8, -1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %vpath_idx.0174 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %device_id = getelementptr %struct.vxge_vpath, ptr %10, i32 %vpath_idx.0174, i32 3
  %12 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %device_id, align 4
  %conv = sext i32 %13 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %conv, i64 %vp_id)
  %cmp9 = icmp eq i64 %conv, %vp_id
  br i1 %cmp9, label %for.body.for.end_crit_edge, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %vpath_idx.0174, 1
  %exitcond.not = icmp eq i32 %inc, %8
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.le178 = getelementptr %struct.vxge_vpath, ptr %10, i32 %vpath_idx.0174
  br label %for.end

for.cond.for.end_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.le = getelementptr %struct.vxge_vpath, ptr %10, i32 %11
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.body.for.end_crit_edge, %do.end7.for.end_crit_edge
  %vpath_idx.0.lcssa = phi i32 [ %vpath_idx.0174, %for.body.for.end_crit_edge ], [ %8, %for.cond.for.end_crit_edge ], [ 0, %do.end7.for.end_crit_edge ]
  %vpath.1 = phi ptr [ %arrayidx.le178, %for.body.for.end_crit_edge ], [ %arrayidx.le, %for.cond.for.end_crit_edge ], [ null, %do.end7.for.end_crit_edge ]
  %state = getelementptr i8, ptr %1, i32 3480
  %14 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state, align 4
  %and1.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %if.then14, label %if.end61

if.then14:                                        ; preds = %for.end
  %16 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.553)
  switch i32 %type, label %if.then14.do.body115_crit_edge [
    i32 14, label %if.then14.if.then67.sink.split_crit_edge
    i32 11, label %do.end35
    i32 10, label %if.end61.thread171
    i32 8, label %if.then14.if.then95_crit_edge
    i32 9, label %if.then14.if.then95_crit_edge186
  ]

if.then14.if.then95_crit_edge186:                 ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then95

if.then14.if.then95_crit_edge:                    ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then95

if.then14.if.then67.sink.split_crit_edge:         ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then67.sink.split

if.then14.do.body115_crit_edge:                   ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body115

do.end35:                                         ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then67.sink.split

if.end61.thread171:                               ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %add.ptr.i, align 8
  %call55 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef %18) #19
  br label %if.then77

if.end61:                                         ; preds = %for.end
  %19 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.554)
  switch i32 %type, label %if.end61.do.body115_crit_edge [
    i32 11, label %if.end61.if.then67_crit_edge
    i32 14, label %if.end61.if.then67_crit_edge187
    i32 10, label %if.end61.if.then77_crit_edge
    i32 8, label %if.end61.if.then95_crit_edge
    i32 9, label %if.end61.if.then95_crit_edge188
  ]

if.end61.if.then95_crit_edge188:                  ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then95

if.end61.if.then95_crit_edge:                     ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then95

if.end61.if.then77_crit_edge:                     ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then77

if.end61.if.then67_crit_edge187:                  ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then67

if.end61.if.then67_crit_edge:                     ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then67

if.end61.do.body115_crit_edge:                    ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body115

if.then67.sink.split:                             ; preds = %do.end35, %if.then14.if.then67.sink.split_crit_edge
  %.str.150.sink = phi ptr [ @.str.150, %do.end35 ], [ @.str.147, %if.then14.if.then67.sink.split_crit_edge ]
  %20 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %add.ptr.i, align 8
  %call40 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.150.sink, ptr noundef %21) #19
  br label %if.then67

if.then67:                                        ; preds = %if.then67.sink.split, %if.end61.if.then67_crit_edge, %if.end61.if.then67_crit_edge187
  %exec_mode = getelementptr i8, ptr %1, i32 9272
  %22 = ptrtoint ptr %exec_mode to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %exec_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool68.not = icmp eq i32 %23, 0
  br i1 %tobool68.not, label %if.then67.do.body115_crit_edge, label %if.then71, !prof !949

if.then67.do.body115_crit_edge:                   ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body115

if.then71:                                        ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %state) #16
  br label %do.body115

if.then77:                                        ; preds = %if.end61.if.then77_crit_edge, %if.end61.thread171
  tail call void @vxge_hw_device_mask_all(ptr noundef %hldev) #16
  %exec_mode78 = getelementptr i8, ptr %1, i32 9272
  %24 = ptrtoint ptr %exec_mode78 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %exec_mode78, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool79.not = icmp eq i32 %25, 0
  br i1 %tobool79.not, label %if.then77.do.body115_crit_edge, label %if.then86, !prof !949

if.then77.do.body115_crit_edge:                   ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body115

if.then86:                                        ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %state) #16
  br label %do.body115

if.then95:                                        ; preds = %if.end61.if.then95_crit_edge, %if.end61.if.then95_crit_edge188, %if.then14.if.then95_crit_edge, %if.then14.if.then95_crit_edge186
  %exec_mode96 = getelementptr i8, ptr %1, i32 9272
  %26 = ptrtoint ptr %exec_mode96 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %exec_mode96, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool97.not = icmp eq i32 %27, 0
  br i1 %tobool97.not, label %if.else106, label %if.then104, !prof !949

if.then104:                                       ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %state) #16
  br label %do.body115

if.else106:                                       ; preds = %if.then95
  %vp_reset = getelementptr i8, ptr %1, i32 3484
  %call107 = tail call i32 @_test_and_set_bit(i32 noundef %vpath_idx.0.lcssa, ptr noundef %vp_reset) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call107)
  %tobool108.not = icmp eq i32 %call107, 0
  br i1 %tobool108.not, label %if.then109, label %if.else106.do.body115_crit_edge

if.else106.do.body115_crit_edge:                  ; preds = %if.else106
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body115

if.then109:                                       ; preds = %if.else106
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @vxge_vpath_intr_disable(ptr noundef %add.ptr.i, i32 noundef %vpath_idx.0.lcssa)
  %txq = getelementptr inbounds %struct.vxge_fifo, ptr %vpath.1, i32 0, i32 3
  %28 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %txq, align 4
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %29, i32 0, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i) #16
  br label %do.body115

do.body115:                                       ; preds = %if.then109, %if.else106.do.body115_crit_edge, %if.then104, %if.then86, %if.then77.do.body115_crit_edge, %if.then71, %if.then67.do.body115_crit_edge, %if.end61.do.body115_crit_edge, %if.then14.do.body115_crit_edge
  %30 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %.not172 = icmp eq i32 %31, 0
  br i1 %.not172, label %do.body115.do.end134_crit_edge, label %do.end126

do.body115.do.end134_crit_edge:                   ; preds = %do.body115
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end134

do.end126:                                        ; preds = %do.body115
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %add.ptr.i, align 8
  %call131 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %33, ptr noundef nonnull @.str.145, i32 noundef 3587) #19
  br label %do.end134

do.end134:                                        ; preds = %do.end126, %do.body115.do.end134_crit_edge
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_notice(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @netif_tx_wake_all_queues(ptr nocapture noundef readonly %dev) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %0 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_tx_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp4.not = icmp eq i32 %1, 0
  br i1 %cmp4.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.05 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %2 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %_tx.i, align 128
  %arrayidx.i = getelementptr %struct.netdev_queue, ptr %3, i32 %i.05
  tail call void @netif_tx_wake_queue(ptr noundef %arrayidx.i) #16
  %inc = add nuw i32 %i.05, 1
  %4 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_tx_queues, align 4
  %cmp = icmp ult i32 %inc, %5
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_wake_queue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_stop_all_queues(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_mask_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_vpath_intr_disable(ptr nocapture noundef readonly %vdev, i32 noundef %vp_id) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vpaths = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  %0 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vpaths, align 8
  %pdev = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 1
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44, i32 8
  %4 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %driver_data.i.i, align 4
  %device_id = getelementptr %struct.vxge_vpath, ptr %1, i32 %vp_id, i32 3
  %6 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %device_id, align 4
  %call1 = tail call i32 @vxge_hw_vpath_wait_receive_idle(ptr noundef %5, i32 noundef %7) #16
  %handle = getelementptr %struct.vxge_vpath, ptr %1, i32 %vp_id, i32 2
  %8 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %handle, align 128
  %call2 = tail call i32 @vxge_hw_vpath_intr_disable(ptr noundef %9) #16
  %intr_type = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 3
  %10 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %intr_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp = icmp eq i32 %11, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %handle, align 128
  tail call void @vxge_hw_vpath_inta_mask_tx_rx(ptr noundef %13) #16
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %device_id, align 4
  %mul = shl i32 %15, 2
  %16 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %handle, align 128
  tail call void @vxge_hw_vpath_msix_mask(ptr noundef %17, i32 noundef %mul) #16
  %18 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %handle, align 128
  %add = or i32 %mul, 1
  tail call void @vxge_hw_vpath_msix_mask(ptr noundef %19, i32 noundef %add) #16
  %20 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %handle, align 128
  %vpath8 = getelementptr inbounds %struct.__vxge_hw_vpath_handle, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %vpath8 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vpath8, align 4
  %hldev9 = getelementptr inbounds %struct.__vxge_hw_virtualpath, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %hldev9 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hldev9, align 8
  %first_vp_id = getelementptr inbounds %struct.__vxge_hw_device, ptr %25, i32 0, i32 23
  %26 = ptrtoint ptr %first_vp_id to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %first_vp_id, align 16
  %mul10 = shl i32 %27, 2
  %add11 = or i32 %mul10, 2
  tail call void @vxge_hw_vpath_msix_mask(ptr noundef %21, i32 noundef %add11) #16
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_wait_receive_idle(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_intr_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_inta_mask_tx_rx(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_msix_mask(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_mgmt_reg_write(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_flush_io(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_etherdev_mqs(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_reset(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -7148
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @do_vxge_reset(ptr noundef %add.ptr)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_initialize_ethtool_ops(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_mrpcim_stats_access(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_netdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_open(ptr noundef %dev) #0 align 64 {
entry:
  %hash_types.i = alloca %struct.vxge_hw_rth_hash_types, align 1
  %itable.i = alloca [256 x i8], align 1
  %mtable.i = alloca [256 x i8], align 1
  %tim_msix_id.i.i = alloca [4 x i32], align 4
  %attr.i = alloca %struct.vxge_hw_vpath_attr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %dev, ptr noundef nonnull @.str.180, i32 noundef 2694) #19
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %pdev = getelementptr i8, ptr %dev, i32 2308
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  tail call void @netif_carrier_off(ptr noundef %dev) #16
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %attr.i) #16
  %4 = call ptr @memset(ptr %attr.i, i32 255, i32 40)
  %no_of_vpath.i = getelementptr i8, ptr %dev, i32 9044
  %5 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp169.i = icmp sgt i32 %6, 0
  br i1 %cmp169.i, label %for.body.lr.ph.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.lr.ph.i:                                 ; preds = %entry
  %vpaths.i = getelementptr i8, ptr %dev, i32 9280
  %titan1.i = getelementptr i8, ptr %dev, i32 3586
  %devh.i = getelementptr i8, ptr %dev, i32 2312
  %mtu.i = getelementptr i8, ptr %dev, i32 9372
  %fifo_attr.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 2
  %txdl_term.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 2, i32 1
  %per_txdl_space.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 2, i32 3
  %userdata.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 2, i32 2
  %ring_attr.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 1
  %rxd_init.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 1, i32 1
  %rxd_term.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 1, i32 2
  %per_rxd_space.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 1, i32 4
  %userdata23.i = getelementptr inbounds %struct.vxge_hw_vpath_attr, ptr %attr.i, i32 0, i32 1, i32 3
  %tx_steering_type.i = getelementptr i8, ptr %dev, i32 2860
  %fifo_indicate_max_pkts.i = getelementptr i8, ptr %dev, i32 2864
  %vlan_tag_strip.i = getelementptr i8, ptr %dev, i32 2828
  %stats83.i = getelementptr i8, ptr %dev, i32 9356
  %vpaths_deployed.i = getelementptr i8, ptr %dev, i32 9400
  br label %for.body.i

for.body.i:                                       ; preds = %if.then30.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0170.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc100.i, %if.then30.i.for.body.i_crit_edge ]
  %7 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vpaths.i, align 8
  %arrayidx.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i
  %9 = ptrtoint ptr %titan1.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load.i = load i8, ptr %titan1.i, align 2
  %10 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not.i = icmp eq i8 %10, 0
  br i1 %tobool.not.i, label %if.then.i, label %for.body.i.if.end.i_crit_edge

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %devh.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %devh.i, align 8
  %device_id.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 3
  %13 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %device_id.i, align 4
  %urange_a.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 5, i32 8
  %15 = ptrtoint ptr %urange_a.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 1, ptr %urange_a.i, align 8
  %urange_b.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 5, i32 10
  %16 = ptrtoint ptr %urange_b.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 20, ptr %urange_b.i, align 8
  %urange_c.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 5, i32 12
  %17 = ptrtoint ptr %urange_c.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 50, ptr %urange_c.i, align 8
  %uec_a.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 4, i32 9
  %18 = ptrtoint ptr %uec_a.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 30, ptr %uec_a.i, align 4
  %uec_b.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 4, i32 11
  %19 = ptrtoint ptr %uec_b.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 80, ptr %uec_b.i, align 4
  %20 = ptrtoint ptr %mtu.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mtu.i, align 4
  %sub.i = sub i32 9600, %21
  %div.i = sdiv i32 %sub.i, 93
  %add.i = add nsw i32 %div.i, 60
  %uec_c.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 4, i32 13
  %22 = ptrtoint ptr %uec_c.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %add.i, ptr %uec_c.i, align 4
  %23 = load i32, ptr %mtu.i, align 4
  %sub7.i = sub i32 9600, %23
  %div8.i = sdiv i32 %sub7.i, 37
  %add9.i = add nsw i32 %div8.i, 100
  %uec_d.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 4, i32 14
  %24 = ptrtoint ptr %uec_d.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %add9.i, ptr %uec_d.i, align 4
  %ltimer_val.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 4, i32 7
  %25 = ptrtoint ptr %ltimer_val.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 80, ptr %ltimer_val.i, align 4
  %rtimer_val.i = getelementptr %struct.__vxge_hw_device, ptr %12, i32 0, i32 4, i32 4, i32 %14, i32 4, i32 5
  %26 = ptrtoint ptr %rtimer_val.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 400, ptr %rtimer_val.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.i.if.end.i_crit_edge
  %device_id13.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 3
  %27 = ptrtoint ptr %device_id13.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %device_id13.i, align 4
  %29 = ptrtoint ptr %attr.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %attr.i, align 4
  %30 = ptrtoint ptr %fifo_attr.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr @vxge_xmit_compl, ptr %fifo_attr.i, align 4
  %31 = ptrtoint ptr %txdl_term.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @vxge_tx_term, ptr %txdl_term.i, align 4
  %32 = ptrtoint ptr %per_txdl_space.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 76, ptr %per_txdl_space.i, align 4
  %33 = ptrtoint ptr %userdata.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %arrayidx.i, ptr %userdata.i, align 4
  %34 = ptrtoint ptr %ring_attr.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @vxge_rx_1b_compl, ptr %ring_attr.i, align 4
  %35 = ptrtoint ptr %rxd_init.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @vxge_rx_initial_replenish, ptr %rxd_init.i, align 4
  %36 = ptrtoint ptr %rxd_term.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @vxge_rx_term, ptr %rxd_term.i, align 4
  %37 = ptrtoint ptr %per_rxd_space.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 16, ptr %per_rxd_space.i, align 4
  %ring.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 1
  %38 = ptrtoint ptr %userdata23.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %ring.i, ptr %userdata23.i, align 4
  %39 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %add.ptr.i, align 8
  %41 = ptrtoint ptr %ring.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %40, ptr %ring.i, align 128
  %42 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %pdev, align 4
  %pdev27.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 1, i32 1
  %44 = ptrtoint ptr %pdev27.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %43, ptr %pdev27.i, align 4
  %45 = ptrtoint ptr %devh.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %devh.i, align 8
  %handle.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 2
  %call.i = call i32 @vxge_hw_vpath_open(ptr noundef %46, ptr noundef nonnull %attr.i, ptr noundef %handle.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp29.i = icmp eq i32 %call.i, 0
  br i1 %cmp29.i, label %if.then30.i, label %if.else84.i

if.then30.i:                                      ; preds = %if.end.i
  %47 = ptrtoint ptr %userdata.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %userdata.i, align 4
  %handle34.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 2
  %49 = ptrtoint ptr %handle34.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %48, ptr %handle34.i, align 8
  %50 = ptrtoint ptr %userdata23.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %userdata23.i, align 4
  %handle38.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 1, i32 2
  %52 = ptrtoint ptr %handle38.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %51, ptr %handle38.i, align 8
  %53 = ptrtoint ptr %tx_steering_type.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %tx_steering_type.i, align 4
  %tx_steering_type41.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 4
  %55 = ptrtoint ptr %tx_steering_type41.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %tx_steering_type41.i, align 16
  %56 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %add.ptr.i, align 8
  %58 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %57, ptr %arrayidx.i, align 128
  %59 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %pdev, align 4
  %pdev47.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 1
  %61 = ptrtoint ptr %pdev47.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %60, ptr %pdev47.i, align 4
  %stats.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 9
  %dep_map.i.i = getelementptr inbounds %struct.seqcount, ptr %stats.i, i32 0, i32 1
  call void @lockdep_init_map_type(ptr noundef %dep_map.i.i, ptr noundef nonnull @.str.212, ptr noundef nonnull @vxge_open_vpaths.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %62 = ptrtoint ptr %stats.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %stats.i, align 4
  %stats51.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 1, i32 14
  %dep_map.i165.i = getelementptr inbounds %struct.seqcount, ptr %stats51.i, i32 0, i32 1
  call void @lockdep_init_map_type(ptr noundef %dep_map.i165.i, ptr noundef nonnull @.str.214, ptr noundef nonnull @vxge_open_vpaths.__key.213, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %63 = ptrtoint ptr %stats51.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 0, ptr %stats51.i, align 4
  %64 = ptrtoint ptr %tx_steering_type.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %tx_steering_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool58.not.i = icmp eq i32 %65, 0
  %66 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %add.ptr.i, align 8
  %_tx.i166.i = getelementptr inbounds %struct.net_device, ptr %67, i32 0, i32 103
  %68 = ptrtoint ptr %_tx.i166.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %_tx.i166.i, align 128
  %arrayidx.i.sink.idx.i = select i1 %tobool58.not.i, i32 0, i32 %i.0170.i
  %arrayidx.i.sink.i = getelementptr %struct.netdev_queue, ptr %69, i32 %arrayidx.i.sink.idx.i
  %70 = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 3
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %arrayidx.i.sink.i, ptr %70, align 4
  %72 = ptrtoint ptr %fifo_indicate_max_pkts.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %fifo_indicate_max_pkts.i, align 8
  %indicate_max_pkts.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 5
  %74 = ptrtoint ptr %indicate_max_pkts.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %indicate_max_pkts.i, align 4
  %tx_vector_no.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 8
  %75 = ptrtoint ptr %tx_vector_no.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 0, ptr %tx_vector_no.i, align 32
  %rx_vector_no.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 1, i32 12
  %76 = ptrtoint ptr %rx_vector_no.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 0, ptr %rx_vector_no.i, align 16
  %77 = ptrtoint ptr %titan1.i to i32
  call void @__asan_load1_noabort(i32 %77)
  %bf.load72.i = load i8, ptr %titan1.i, align 2
  %bf.lshr73.i = and i8 %bf.load72.i, -128
  %rx_hwts76.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 1, i32 6
  %78 = ptrtoint ptr %rx_hwts76.i to i32
  call void @__asan_load1_noabort(i32 %78)
  %bf.load77.i = load i8, ptr %rx_hwts76.i, align 8
  %bf.clear78.i = and i8 %bf.load77.i, 127
  %bf.set.i = or i8 %bf.clear78.i, %bf.lshr73.i
  store i8 %bf.set.i, ptr %rx_hwts76.i, align 8
  %is_open.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 6
  %79 = ptrtoint ptr %is_open.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 1, ptr %is_open.i, align 16
  %80 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %handle.i, align 128
  %arrayidx80.i = getelementptr %struct.vxgedev, ptr %add.ptr.i, i32 0, i32 22, i32 %i.0170.i
  %82 = ptrtoint ptr %arrayidx80.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %81, ptr %arrayidx80.i, align 4
  %83 = ptrtoint ptr %vlan_tag_strip.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %vlan_tag_strip.i, align 4
  %vlan_tag_strip82.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.0170.i, i32 1, i32 11
  %85 = ptrtoint ptr %vlan_tag_strip82.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %84, ptr %vlan_tag_strip82.i, align 4
  %86 = ptrtoint ptr %stats83.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %stats83.i, align 4
  %inc.i = add i32 %87, 1
  store i32 %inc.i, ptr %stats83.i, align 4
  %88 = load ptr, ptr %handle.i, align 128
  %vpath98.i = getelementptr inbounds %struct.__vxge_hw_vpath_handle, ptr %88, i32 0, i32 1
  %89 = ptrtoint ptr %vpath98.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %vpath98.i, align 4
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 128
  %sh_prom.i = zext i32 %92 to i64
  %shr.i = lshr i64 -9223372036854775808, %sh_prom.i
  %93 = ptrtoint ptr %vpaths_deployed.i to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %vpaths_deployed.i, align 8
  %or.i = or i64 %shr.i, %94
  store i64 %or.i, ptr %vpaths_deployed.i, align 8
  %inc100.i = add nuw nsw i32 %i.0170.i, 1
  %95 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i = icmp slt i32 %inc100.i, %96
  br i1 %cmp.i, label %if.then30.i.for.body.i_crit_edge, label %if.then30.i.if.end_crit_edge

if.then30.i.if.end_crit_edge:                     ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then30.i.for.body.i_crit_edge:                 ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

if.else84.i:                                      ; preds = %if.end.i
  %vpath_open_fail.i = getelementptr i8, ptr %dev, i32 9360
  %97 = ptrtoint ptr %vpath_open_fail.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %vpath_open_fail.i, align 4
  %inc86.i = add i32 %98, 1
  store i32 %inc86.i, ptr %vpath_open_fail.i, align 4
  %99 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %add.ptr.i, align 8
  %101 = ptrtoint ptr %device_id13.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %device_id13.i, align 4
  %call93.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.215, ptr noundef %100, i32 noundef %102, i32 noundef %call.i) #19
  %103 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %104)
  %cmp13.i.i = icmp sgt i32 %104, 0
  br i1 %cmp13.i.i, label %if.else84.i.for.body.i.i_crit_edge, label %if.else84.i.do.end10_crit_edge

if.else84.i.do.end10_crit_edge:                   ; preds = %if.else84.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end10

if.else84.i.for.body.i.i_crit_edge:               ; preds = %if.else84.i
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i.for.body.i.i_crit_edge, %if.else84.i.for.body.i.i_crit_edge
  %i.014.i.i = phi i32 [ %inc.i.i, %if.end.i.i.for.body.i.i_crit_edge ], [ 0, %if.else84.i.for.body.i.i_crit_edge ]
  %105 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %vpaths.i, align 8
  %handle.i.i = getelementptr %struct.vxge_vpath, ptr %106, i32 %i.014.i.i, i32 2
  %107 = ptrtoint ptr %handle.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %handle.i.i, align 128
  %tobool.not.i.i = icmp eq ptr %108, null
  br i1 %tobool.not.i.i, label %for.body.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

for.body.i.i.if.end.i.i_crit_edge:                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %is_open.i.i = getelementptr %struct.vxge_vpath, ptr %106, i32 %i.014.i.i, i32 6
  %109 = ptrtoint ptr %is_open.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %is_open.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %110)
  %tobool1.not.i.i = icmp eq i32 %110, 0
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge, label %if.then.i.i

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i = call i32 @vxge_hw_vpath_close(ptr noundef nonnull %108) #16
  %111 = ptrtoint ptr %stats83.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %stats83.i, align 4
  %dec.i.i = add i32 %112, -1
  store i32 %dec.i.i, ptr %stats83.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %land.lhs.true.i.i.if.end.i.i_crit_edge, %for.body.i.i.if.end.i.i_crit_edge
  %is_open3.i.i = getelementptr %struct.vxge_vpath, ptr %106, i32 %i.014.i.i, i32 6
  %113 = ptrtoint ptr %is_open3.i.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 0, ptr %is_open3.i.i, align 16
  %114 = ptrtoint ptr %handle.i.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr null, ptr %handle.i.i, align 128
  %inc.i.i = add nuw nsw i32 %i.014.i.i, 1
  %115 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i.i = icmp slt i32 %inc.i.i, %116
  br i1 %cmp.i.i, label %if.end.i.i.for.body.i.i_crit_edge, label %if.end.i.i.do.end10_crit_edge

if.end.i.i.do.end10_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end10

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

do.end10:                                         ; preds = %if.end.i.i.do.end10_crit_edge, %if.else84.i.do.end10_crit_edge
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %attr.i) #16
  %117 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %add.ptr.i, align 8
  %call14 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.182, ptr noundef %118) #19
  br label %do.end331

if.end:                                           ; preds = %if.then30.i.if.end_crit_edge, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %attr.i) #16
  %mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %119 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %mtu, align 4
  %mtu17 = getelementptr i8, ptr %dev, i32 9372
  %121 = ptrtoint ptr %mtu17 to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 %120, ptr %mtu17, align 4
  %122 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %pdev, align 4
  %devfn.i = getelementptr inbounds %struct.pci_dev, ptr %123, i32 0, i32 6
  %124 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %devfn.i, align 4
  %and.i = and i32 %125, 7
  %intr_type.i = getelementptr i8, ptr %dev, i32 2844
  %126 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %intr_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %127)
  %cmp.i480 = icmp eq i32 %127, 2
  br i1 %cmp.i480, label %if.then.i481, label %if.end.INTA_MODEthread-pre-split.i_crit_edge

if.end.INTA_MODEthread-pre-split.i_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %INTA_MODEthread-pre-split.i

if.then.i481:                                     ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tim_msix_id.i.i) #16
  %128 = call ptr @memcpy(ptr %tim_msix_id.i.i, ptr @__const.vxge_vpath_intr_enable.tim_msix_id, i32 16)
  %intr_cnt.i.i = getelementptr i8, ptr %dev, i32 9408
  %129 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %no_of_vpath.i, align 4
  %mul197.i.i.i = shl i32 %130, 1
  %inc198.i.i.i = or i32 %mul197.i.i.i, 1
  %131 = ptrtoint ptr %intr_cnt.i.i to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 %inc198.i.i.i, ptr %intr_cnt.i.i, align 8
  %132 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %inc198.i.i.i, i32 8) #16
  %133 = extractvalue { i32, i1 } %132, 1
  br i1 %133, label %if.then.i481.kcalloc.exit.thread.i.i.i_crit_edge, label %if.end.i.i.lr.ph.i.i.i, !prof !948

if.then.i481.kcalloc.exit.thread.i.i.i_crit_edge: ; preds = %if.then.i481
  call void @__sanitizer_cov_trace_pc() #18
  br label %kcalloc.exit.thread.i.i.i

if.end.i.i.lr.ph.i.i.i:                           ; preds = %if.then.i481
  %entries.i.i.i = getelementptr i8, ptr %dev, i32 3592
  %vxge_entries.i.i.i = getelementptr i8, ptr %dev, i32 3588
  %vpaths.i.i.i.i = getelementptr i8, ptr %dev, i32 9280
  %stats.i.i.i.i = getelementptr i8, ptr %dev, i32 9356
  br label %if.end7.i.i.i.i.i

kcalloc.exit.thread.i.i.i:                        ; preds = %vxge_close_vpaths.exit.i.i.i.kcalloc.exit.thread.i.i.i_crit_edge, %if.then.i481.kcalloc.exit.thread.i.i.i_crit_edge
  %entries179.i.i.i = getelementptr i8, ptr %dev, i32 3592
  %134 = ptrtoint ptr %entries179.i.i.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store ptr null, ptr %entries179.i.i.i, align 8
  br label %do.end.i.i.i

if.end7.i.i.i.i.i:                                ; preds = %vxge_close_vpaths.exit.i.i.i.if.end7.i.i.i.i.i_crit_edge, %if.end.i.i.lr.ph.i.i.i
  %.pn.i.i.i = phi { i32, i1 } [ %132, %if.end.i.i.lr.ph.i.i.i ], [ %206, %vxge_close_vpaths.exit.i.i.i.if.end7.i.i.i.i.i_crit_edge ]
  %135 = extractvalue { i32, i1 } %.pn.i.i.i, 0
  %call8.i.i.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %135, i32 noundef 3520) #22
  %136 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store ptr %call8.i.i.i.i.i, ptr %entries.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %call8.i.i.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end7.i.i.i.i.i.do.end.i.i.i_crit_edge, label %if.end.i.i.i

if.end7.i.i.i.i.i.do.end.i.i.i_crit_edge:         ; preds = %if.end7.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.end7.i.i.i.i.i.do.end.i.i.i_crit_edge, %kcalloc.exit.thread.i.i.i
  %call6.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.308, ptr noundef nonnull @.str.3) #19
  br label %do.end.i

if.end.i.i.i:                                     ; preds = %if.end7.i.i.i.i.i
  %137 = ptrtoint ptr %intr_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %intr_cnt.i.i, align 8
  %139 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %138, i32 12) #16
  %140 = extractvalue { i32, i1 } %139, 1
  br i1 %140, label %kcalloc.exit177.thread.i.i.i, label %if.end7.i.i175.i.i.i, !prof !948

kcalloc.exit177.thread.i.i.i:                     ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %141 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_store4_noabort(i32 %141)
  store ptr null, ptr %vxge_entries.i.i.i, align 4
  br label %do.end17.i.i.i

if.end7.i.i175.i.i.i:                             ; preds = %if.end.i.i.i
  %142 = extractvalue { i32, i1 } %139, 0
  %call8.i.i174.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %142, i32 noundef 3520) #22
  %143 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store ptr %call8.i.i174.i.i.i, ptr %vxge_entries.i.i.i, align 4
  %tobool12.not.i.i.i = icmp eq ptr %call8.i.i174.i.i.i, null
  br i1 %tobool12.not.i.i.i, label %if.end7.i.i175.i.i.i.do.end17.i.i.i_crit_edge, label %for.cond.preheader.i.i.i

if.end7.i.i175.i.i.i.do.end17.i.i.i_crit_edge:    ; preds = %if.end7.i.i175.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end17.i.i.i

for.cond.preheader.i.i.i:                         ; preds = %if.end7.i.i175.i.i.i
  %144 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %145)
  %cmp194.i.i.i = icmp sgt i32 %145, 0
  br i1 %cmp194.i.i.i, label %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge, label %for.cond.preheader.i.i.i.for.end.i.i.i_crit_edge

for.cond.preheader.i.i.i.for.end.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i.i

for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  br label %for.body.i.i.i

do.end17.i.i.i:                                   ; preds = %if.end7.i.i175.i.i.i.do.end17.i.i.i_crit_edge, %kcalloc.exit177.thread.i.i.i
  %call19.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.308, ptr noundef nonnull @.str.3) #19
  br label %alloc_vxge_entries_failed.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge
  %j.0196.i.i.i = phi i32 [ %inc46.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %i.0195.i.i.i = phi i32 [ %inc47.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %i.0.tr.i.i.i = trunc i32 %i.0195.i.i.i to i16
  %conv.i.i.i = shl i16 %i.0.tr.i.i.i, 2
  %146 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %entries.i.i.i, align 8
  %entry26.i.i.i = getelementptr %struct.msix_entry, ptr %147, i32 %j.0196.i.i.i, i32 1
  %148 = ptrtoint ptr %entry26.i.i.i to i32
  call void @__asan_store2_noabort(i32 %148)
  store i16 %conv.i.i.i, ptr %entry26.i.i.i, align 4
  %149 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %entry30.i.i.i = getelementptr %struct.vxge_msix_entry, ptr %150, i32 %j.0196.i.i.i, i32 1
  %151 = ptrtoint ptr %entry30.i.i.i to i32
  call void @__asan_store2_noabort(i32 %151)
  store i16 %conv.i.i.i, ptr %entry30.i.i.i, align 2
  %152 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %in_use.i.i.i = getelementptr %struct.vxge_msix_entry, ptr %152, i32 %j.0196.i.i.i, i32 2
  %153 = ptrtoint ptr %in_use.i.i.i to i32
  call void @__asan_store2_noabort(i32 %153)
  store i16 0, ptr %in_use.i.i.i, align 4
  %inc33.i.i.i = or i32 %j.0196.i.i.i, 1
  %conv34.i.i.i = or i16 %conv.i.i.i, 1
  %154 = load ptr, ptr %entries.i.i.i, align 8
  %entry37.i.i.i = getelementptr %struct.msix_entry, ptr %154, i32 %inc33.i.i.i, i32 1
  %155 = ptrtoint ptr %entry37.i.i.i to i32
  call void @__asan_store2_noabort(i32 %155)
  store i16 %conv34.i.i.i, ptr %entry37.i.i.i, align 4
  %156 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %entry42.i.i.i = getelementptr %struct.vxge_msix_entry, ptr %156, i32 %inc33.i.i.i, i32 1
  %157 = ptrtoint ptr %entry42.i.i.i to i32
  call void @__asan_store2_noabort(i32 %157)
  store i16 %conv34.i.i.i, ptr %entry42.i.i.i, align 2
  %158 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %in_use45.i.i.i = getelementptr %struct.vxge_msix_entry, ptr %158, i32 %inc33.i.i.i, i32 2
  %159 = ptrtoint ptr %in_use45.i.i.i to i32
  call void @__asan_store2_noabort(i32 %159)
  store i16 0, ptr %in_use45.i.i.i, align 4
  %inc46.i.i.i = add nuw i32 %j.0196.i.i.i, 2
  %inc47.i.i.i = add nuw nsw i32 %i.0195.i.i.i, 1
  %160 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i.i.i = icmp slt i32 %inc47.i.i.i, %161
  br i1 %cmp.i.i.i, label %for.body.i.i.i.for.body.i.i.i_crit_edge, label %for.body.i.i.i.for.end.i.i.i_crit_edge

for.body.i.i.i.for.end.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i.i

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.i

for.end.i.i.i:                                    ; preds = %for.body.i.i.i.for.end.i.i.i_crit_edge, %for.cond.preheader.i.i.i.for.end.i.i.i_crit_edge
  %j.0.lcssa.i.i.i = phi i32 [ 0, %for.cond.preheader.i.i.i.for.end.i.i.i_crit_edge ], [ %inc46.i.i.i, %for.body.i.i.i.for.end.i.i.i_crit_edge ]
  %162 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %entries.i.i.i, align 8
  %entry50.i.i.i = getelementptr %struct.msix_entry, ptr %163, i32 %j.0.lcssa.i.i.i, i32 1
  %164 = ptrtoint ptr %entry50.i.i.i to i32
  call void @__asan_store2_noabort(i32 %164)
  store i16 2, ptr %entry50.i.i.i, align 4
  %165 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %entry53.i.i.i = getelementptr %struct.vxge_msix_entry, ptr %166, i32 %j.0.lcssa.i.i.i, i32 1
  %167 = ptrtoint ptr %entry53.i.i.i to i32
  call void @__asan_store2_noabort(i32 %167)
  store i16 2, ptr %entry53.i.i.i, align 2
  %168 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %in_use56.i.i.i = getelementptr %struct.vxge_msix_entry, ptr %168, i32 %j.0.lcssa.i.i.i, i32 2
  %169 = ptrtoint ptr %in_use56.i.i.i to i32
  call void @__asan_store2_noabort(i32 %169)
  store i16 0, ptr %in_use56.i.i.i, align 4
  %170 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %pdev, align 4
  %172 = load ptr, ptr %entries.i.i.i, align 8
  %173 = ptrtoint ptr %intr_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %intr_cnt.i.i, align 8
  %call59.i.i.i = call i32 @pci_enable_msix_range(ptr noundef %171, ptr noundef %172, i32 noundef 3, i32 noundef %174) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59.i.i.i)
  %cmp60.i.i.i = icmp slt i32 %call59.i.i.i, 0
  br i1 %cmp60.i.i.i, label %for.end.i.i.i.enable_msix_failed.i.i.i_crit_edge, label %if.else.i.i.i

for.end.i.i.i.enable_msix_failed.i.i.i_crit_edge: ; preds = %for.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %enable_msix_failed.i.i.i

if.else.i.i.i:                                    ; preds = %for.end.i.i.i
  %175 = ptrtoint ptr %intr_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %intr_cnt.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %call59.i.i.i, i32 %176)
  %cmp64.i.i.i = icmp ult i32 %call59.i.i.i, %176
  br i1 %cmp64.i.i.i, label %if.then66.i.i.i, label %for.cond.preheader.i.i

for.cond.preheader.i.i:                           ; preds = %if.else.i.i.i
  %177 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %178)
  %cmp16.i.i = icmp sgt i32 %178, 0
  br i1 %cmp16.i.i, label %for.cond.preheader.i.i.for.body.i.i485_crit_edge, label %for.cond.preheader.i.i.if.end16.i_crit_edge

for.cond.preheader.i.i.if.end16.i_crit_edge:      ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

for.cond.preheader.i.i.for.body.i.i485_crit_edge: ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i485

if.then66.i.i.i:                                  ; preds = %if.else.i.i.i
  %179 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %pdev, align 4
  call void @pci_disable_msix(ptr noundef %180) #16
  %181 = ptrtoint ptr %intr_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %intr_cnt.i.i, align 8
  %call74.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.313, ptr noundef nonnull @.str.3, i32 noundef %182, i32 noundef %call59.i.i.i) #19
  %183 = load i32, ptr @max_config_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %183)
  %cmp77.not.i.i.i = icmp eq i32 %183, -1
  br i1 %cmp77.not.i.i.i, label %if.end80.i.i.i, label %if.then66.i.i.i.enable_msix_failed.i.i.i_crit_edge

if.then66.i.i.i.enable_msix_failed.i.i.i_crit_edge: ; preds = %if.then66.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %enable_msix_failed.i.i.i

if.end80.i.i.i:                                   ; preds = %if.then66.i.i.i
  %184 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %entries.i.i.i, align 8
  call void @kfree(ptr noundef %185) #16
  %186 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %vxge_entries.i.i.i, align 4
  call void @kfree(ptr noundef %187) #16
  %188 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_store4_noabort(i32 %188)
  store ptr null, ptr %entries.i.i.i, align 8
  %189 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store ptr null, ptr %vxge_entries.i.i.i, align 4
  %sub.i.i.i = add nsw i32 %call59.i.i.i, -1
  %div.i.i.i = sdiv i32 %sub.i.i.i, 2
  %190 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %191, i32 %div.i.i.i)
  %cmp13.i.i.i.i = icmp sgt i32 %191, %div.i.i.i
  br i1 %cmp13.i.i.i.i, label %if.end80.i.i.i.for.body.i.i.i.i_crit_edge, label %if.end80.i.i.i.vxge_close_vpaths.exit.i.i.i_crit_edge

if.end80.i.i.i.vxge_close_vpaths.exit.i.i.i_crit_edge: ; preds = %if.end80.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_close_vpaths.exit.i.i.i

if.end80.i.i.i.for.body.i.i.i.i_crit_edge:        ; preds = %if.end80.i.i.i
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %if.end.i.i.i.i.for.body.i.i.i.i_crit_edge, %if.end80.i.i.i.for.body.i.i.i.i_crit_edge
  %i.014.i.i.i.i = phi i32 [ %inc.i.i.i.i, %if.end.i.i.i.i.for.body.i.i.i.i_crit_edge ], [ %div.i.i.i, %if.end80.i.i.i.for.body.i.i.i.i_crit_edge ]
  %192 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %handle.i.i.i.i = getelementptr %struct.vxge_vpath, ptr %193, i32 %i.014.i.i.i.i, i32 2
  %194 = ptrtoint ptr %handle.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %handle.i.i.i.i, align 128
  %tobool.not.i.i.i.i = icmp eq ptr %195, null
  br i1 %tobool.not.i.i.i.i, label %for.body.i.i.i.i.if.end.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

for.body.i.i.i.i.if.end.i.i.i.i_crit_edge:        ; preds = %for.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %for.body.i.i.i.i
  %is_open.i.i.i.i = getelementptr %struct.vxge_vpath, ptr %193, i32 %i.014.i.i.i.i, i32 6
  %196 = ptrtoint ptr %is_open.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %is_open.i.i.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %197)
  %tobool1.not.i.i.i.i = icmp eq i32 %197, 0
  br i1 %tobool1.not.i.i.i.i, label %land.lhs.true.i.i.i.i.if.end.i.i.i.i_crit_edge, label %if.then.i.i.i.i

land.lhs.true.i.i.i.i.if.end.i.i.i.i_crit_edge:   ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i.i = call i32 @vxge_hw_vpath_close(ptr noundef nonnull %195) #16
  %198 = ptrtoint ptr %stats.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %stats.i.i.i.i, align 4
  %dec.i.i.i.i = add i32 %199, -1
  store i32 %dec.i.i.i.i, ptr %stats.i.i.i.i, align 4
  br label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then.i.i.i.i, %land.lhs.true.i.i.i.i.if.end.i.i.i.i_crit_edge, %for.body.i.i.i.i.if.end.i.i.i.i_crit_edge
  %is_open3.i.i.i.i = getelementptr %struct.vxge_vpath, ptr %193, i32 %i.014.i.i.i.i, i32 6
  %200 = ptrtoint ptr %is_open3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 0, ptr %is_open3.i.i.i.i, align 16
  %201 = ptrtoint ptr %handle.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %201)
  store ptr null, ptr %handle.i.i.i.i, align 128
  %inc.i.i.i.i = add nsw i32 %i.014.i.i.i.i, 1
  %202 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i.i.i.i = icmp slt i32 %inc.i.i.i.i, %203
  br i1 %cmp.i.i.i.i, label %if.end.i.i.i.i.for.body.i.i.i.i_crit_edge, label %if.end.i.i.i.i.vxge_close_vpaths.exit.i.i.i_crit_edge

if.end.i.i.i.i.vxge_close_vpaths.exit.i.i.i_crit_edge: ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_close_vpaths.exit.i.i.i

if.end.i.i.i.i.for.body.i.i.i.i_crit_edge:        ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.i.i

vxge_close_vpaths.exit.i.i.i:                     ; preds = %if.end.i.i.i.i.vxge_close_vpaths.exit.i.i.i_crit_edge, %if.end80.i.i.i.vxge_close_vpaths.exit.i.i.i_crit_edge
  %204 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_store4_noabort(i32 %204)
  store i32 %div.i.i.i, ptr %no_of_vpath.i, align 4
  %mul.i.i.i = shl nsw i32 %div.i.i.i, 1
  %inc.i.i.i = or i32 %mul.i.i.i, 1
  %205 = ptrtoint ptr %intr_cnt.i.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %inc.i.i.i, ptr %intr_cnt.i.i, align 8
  %206 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %inc.i.i.i, i32 8) #16
  %207 = extractvalue { i32, i1 } %206, 1
  br i1 %207, label %vxge_close_vpaths.exit.i.i.i.kcalloc.exit.thread.i.i.i_crit_edge, label %vxge_close_vpaths.exit.i.i.i.if.end7.i.i.i.i.i_crit_edge, !prof !948

vxge_close_vpaths.exit.i.i.i.if.end7.i.i.i.i.i_crit_edge: ; preds = %vxge_close_vpaths.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i.i.i.i.i

vxge_close_vpaths.exit.i.i.i.kcalloc.exit.thread.i.i.i_crit_edge: ; preds = %vxge_close_vpaths.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %kcalloc.exit.thread.i.i.i

enable_msix_failed.i.i.i:                         ; preds = %if.then66.i.i.i.enable_msix_failed.i.i.i_crit_edge, %for.end.i.i.i.enable_msix_failed.i.i.i_crit_edge
  %208 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %vxge_entries.i.i.i, align 4
  call void @kfree(ptr noundef %209) #16
  br label %alloc_vxge_entries_failed.i.i.i

alloc_vxge_entries_failed.i.i.i:                  ; preds = %enable_msix_failed.i.i.i, %do.end17.i.i.i
  %210 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %entries.i.i.i, align 8
  call void @kfree(ptr noundef %211) #16
  br label %do.end.i

for.body.i.i485:                                  ; preds = %for.body.i.i485.for.body.i.i485_crit_edge, %for.cond.preheader.i.i.for.body.i.i485_crit_edge
  %i.017.i.i = phi i32 [ %inc.i.i483, %for.body.i.i485.for.body.i.i485_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i485_crit_edge ]
  %212 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %device_id.i.i = getelementptr %struct.vxge_vpath, ptr %213, i32 %i.017.i.i, i32 3
  %214 = ptrtoint ptr %device_id.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %device_id.i.i, align 4
  %mul.i.i = shl i32 %215, 2
  %add.i.i = or i32 %mul.i.i, 1
  %rx_vector_no.i.i = getelementptr %struct.vxge_vpath, ptr %213, i32 %i.017.i.i, i32 1, i32 12
  %216 = ptrtoint ptr %rx_vector_no.i.i to i32
  call void @__asan_store4_noabort(i32 %216)
  store i32 %add.i.i, ptr %rx_vector_no.i.i, align 16
  %tx_vector_no.i.i = getelementptr %struct.vxge_vpath, ptr %213, i32 %i.017.i.i, i32 0, i32 8
  %217 = ptrtoint ptr %tx_vector_no.i.i to i32
  call void @__asan_store4_noabort(i32 %217)
  store i32 %mul.i.i, ptr %tx_vector_no.i.i, align 32
  %handle.i.i482 = getelementptr %struct.vxge_vpath, ptr %213, i32 %i.017.i.i, i32 2
  %218 = ptrtoint ptr %handle.i.i482 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %handle.i.i482, align 128
  call void @vxge_hw_vpath_msix_set(ptr noundef %219, ptr noundef nonnull %tim_msix_id.i.i, i32 noundef 2) #16
  %inc.i.i483 = add nuw nsw i32 %i.017.i.i, 1
  %220 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i.i484 = icmp slt i32 %inc.i.i483, %221
  br i1 %cmp.i.i484, label %for.body.i.i485.for.body.i.i485_crit_edge, label %for.body.i.i485.if.end16.i_crit_edge

for.body.i.i485.if.end16.i_crit_edge:             ; preds = %for.body.i.i485
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

for.body.i.i485.for.body.i.i485_crit_edge:        ; preds = %for.body.i.i485
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i485

do.end.i:                                         ; preds = %alloc_vxge_entries_failed.i.i.i, %do.end.i.i.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tim_msix_id.i.i) #16
  %call3.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.282, ptr noundef nonnull @.str.3) #19
  %call11.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.285, ptr noundef nonnull @.str.3) #19
  %222 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_store4_noabort(i32 %222)
  store i32 0, ptr %intr_type.i, align 4
  br label %INTA_MODEthread-pre-split.i

if.end16.i:                                       ; preds = %for.body.i.i485.if.end16.i_crit_edge, %for.cond.preheader.i.i.if.end16.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tim_msix_id.i.i) #16
  %223 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %.pr.i = load i32, ptr %intr_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.pr.i)
  %cmp19.i = icmp eq i32 %.pr.i, 2
  br i1 %cmp19.i, label %for.cond.preheader.i, label %if.end16.i.INTA_MODE.i_crit_edge

if.end16.i.INTA_MODE.i_crit_edge:                 ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %INTA_MODE.i

for.cond.preheader.i:                             ; preds = %if.end16.i
  %224 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %no_of_vpath.i, align 4
  %mul345.i = shl i32 %225, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul345.i)
  %cmp21346.i = icmp sgt i32 %mul345.i, 0
  br i1 %cmp21346.i, label %for.cond.preheader.i.for.body.i486_crit_edge, label %for.cond.preheader.i.for.end.i_crit_edge

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.cond.preheader.i.for.body.i486_crit_edge:     ; preds = %for.cond.preheader.i
  br label %for.body.i486

for.body.i486:                                    ; preds = %for.inc.i.for.body.i486_crit_edge, %for.cond.preheader.i.for.body.i486_crit_edge
  %vp_idx.0349.i = phi i32 [ %vp_idx.1.i, %for.inc.i.for.body.i486_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i486_crit_edge ]
  %intr_idx.0348.i = phi i32 [ %add101.i, %for.inc.i.for.body.i486_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i486_crit_edge ]
  %intr_cnt.0347.i = phi i32 [ %intr_cnt.1.i, %for.inc.i.for.body.i486_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i486_crit_edge ]
  %rem.i = and i32 %intr_idx.0348.i, 3
  %226 = zext i32 %rem.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %226, ptr @__sancov_gen_cov_switch_values.555)
  switch i32 %rem.i, label %for.body.i486.if.end100.i_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb37.i
  ]

for.body.i486.if.end100.i_crit_edge:              ; preds = %for.body.i486
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end100.i

sw.bb.i:                                          ; preds = %for.body.i486
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.i487 = getelementptr %struct.vxgedev, ptr %add.ptr.i, i32 0, i32 14, i32 %intr_cnt.0347.i
  %227 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %add.ptr.i, align 8
  %229 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %entries.i.i.i, align 8
  %entry24.i = getelementptr %struct.msix_entry, ptr %230, i32 %intr_cnt.0347.i, i32 1
  %231 = ptrtoint ptr %entry24.i to i32
  call void @__asan_load2_noabort(i32 %231)
  %232 = load i16, ptr %entry24.i, align 4
  %conv.i = zext i16 %232 to i32
  %call25.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %arrayidx.i487, i32 noundef 80, ptr noundef nonnull @.str.287, ptr noundef %228, i32 noundef %conv.i, i32 noundef %and.i, i32 noundef %vp_idx.0349.i) #16
  %233 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %entries.i.i.i, align 8
  %arrayidx27.i = getelementptr %struct.msix_entry, ptr %234, i32 %intr_cnt.0347.i
  %235 = ptrtoint ptr %arrayidx27.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %arrayidx27.i, align 4
  %237 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %arrayidx31.i = getelementptr %struct.vxge_vpath, ptr %238, i32 %vp_idx.0349.i
  %call.i.i488 = call i32 @request_threaded_irq(i32 noundef %236, ptr noundef nonnull @vxge_tx_msix_handle, ptr noundef null, i32 noundef 0, ptr noundef %arrayidx.i487, ptr noundef %arrayidx31.i) #16
  %239 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %arrayidx34.i = getelementptr %struct.vxge_vpath, ptr %240, i32 %vp_idx.0349.i
  br label %sw.epilog.i

sw.bb37.i:                                        ; preds = %for.body.i486
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx39.i = getelementptr %struct.vxgedev, ptr %add.ptr.i, i32 0, i32 14, i32 %intr_cnt.0347.i
  %241 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %add.ptr.i, align 8
  %243 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %entries.i.i.i, align 8
  %entry46.i = getelementptr %struct.msix_entry, ptr %244, i32 %intr_cnt.0347.i, i32 1
  %245 = ptrtoint ptr %entry46.i to i32
  call void @__asan_load2_noabort(i32 %245)
  %246 = load i16, ptr %entry46.i, align 4
  %conv47.i = zext i16 %246 to i32
  %call48.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %arrayidx39.i, i32 noundef 80, ptr noundef nonnull @.str.288, ptr noundef %242, i32 noundef %conv47.i, i32 noundef %and.i, i32 noundef %vp_idx.0349.i) #16
  %247 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %entries.i.i.i, align 8
  %arrayidx50.i = getelementptr %struct.msix_entry, ptr %248, i32 %intr_cnt.0347.i
  %249 = ptrtoint ptr %arrayidx50.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load i32, ptr %arrayidx50.i, align 4
  %251 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %ring.i489 = getelementptr %struct.vxge_vpath, ptr %252, i32 %vp_idx.0349.i, i32 1
  %call.i325.i = call i32 @request_threaded_irq(i32 noundef %250, ptr noundef nonnull @vxge_rx_msix_napi_handle, ptr noundef null, i32 noundef 0, ptr noundef %arrayidx39.i, ptr noundef %ring.i489) #16
  %253 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %ring60.i = getelementptr %struct.vxge_vpath, ptr %254, i32 %vp_idx.0349.i, i32 1
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb37.i, %sw.bb.i
  %ring60.sink.i = phi ptr [ %ring60.i, %sw.bb37.i ], [ %arrayidx34.i, %sw.bb.i ]
  %ret.2.i = phi i32 [ %call.i325.i, %sw.bb37.i ], [ %call.i.i488, %sw.bb.i ]
  %255 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %arg63.i = getelementptr %struct.vxge_msix_entry, ptr %256, i32 %intr_cnt.0347.i, i32 3
  %257 = ptrtoint ptr %arg63.i to i32
  call void @__asan_store4_noabort(i32 %257)
  store ptr %ring60.sink.i, ptr %arg63.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2.i)
  %tobool64.not.i = icmp eq i32 %ret.2.i, 0
  br i1 %tobool64.not.i, label %if.then92.i, label %do.end69.i

do.end69.i:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  %258 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %add.ptr.i, align 8
  %call74.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.290, ptr noundef %259, i32 noundef %intr_cnt.0347.i) #19
  call fastcc void @vxge_rem_msix_isr(ptr noundef %add.ptr.i) #16
  %260 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_store4_noabort(i32 %260)
  store i32 0, ptr %intr_type.i, align 4
  %261 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %add.ptr.i, align 8
  %call87.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.285, ptr noundef %262) #19
  br label %INTA_MODEthread-pre-split.i

if.then92.i:                                      ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  %263 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %in_use.i = getelementptr %struct.vxge_msix_entry, ptr %264, i32 %intr_cnt.0347.i, i32 2
  %265 = ptrtoint ptr %in_use.i to i32
  call void @__asan_store2_noabort(i32 %265)
  store i16 1, ptr %in_use.i, align 4
  %266 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %device_id.i490 = getelementptr %struct.vxge_vpath, ptr %267, i32 %vp_idx.0349.i, i32 3
  %268 = ptrtoint ptr %device_id.i490 to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %device_id.i490, align 4
  %mul97.i = shl i32 %269, 2
  %add.i491 = or i32 %mul97.i, %rem.i
  %handle.i492 = getelementptr %struct.vxge_vpath, ptr %267, i32 %vp_idx.0349.i, i32 2
  %270 = ptrtoint ptr %handle.i492 to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %handle.i492, align 128
  call void @vxge_hw_vpath_msix_unmask(ptr noundef %271, i32 noundef %add.i491) #16
  %inc.i493 = add i32 %intr_cnt.0347.i, 1
  br label %if.end100.i

if.end100.i:                                      ; preds = %if.then92.i, %for.body.i486.if.end100.i_crit_edge
  %intr_cnt.1.i = phi i32 [ %inc.i493, %if.then92.i ], [ %intr_cnt.0347.i, %for.body.i486.if.end100.i_crit_edge ]
  %add101.i = add nuw nsw i32 %intr_idx.0348.i, 1
  %272 = and i32 %add101.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %272)
  %cmp103.i = icmp eq i32 %272, 0
  br i1 %cmp103.i, label %land.lhs.true.i, label %if.end100.i.for.inc.i_crit_edge

if.end100.i.for.inc.i_crit_edge:                  ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #18
  %273 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %no_of_vpath.i, align 4
  %sub.i494 = add i32 %274, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %vp_idx.0349.i, i32 %sub.i494)
  %cmp106.i = icmp slt i32 %vp_idx.0349.i, %sub.i494
  %inc109.i = zext i1 %cmp106.i to i32
  %spec.select.i = add i32 %vp_idx.0349.i, %inc109.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i, %if.end100.i.for.inc.i_crit_edge
  %vp_idx.1.i = phi i32 [ %vp_idx.0349.i, %if.end100.i.for.inc.i_crit_edge ], [ %spec.select.i, %land.lhs.true.i ]
  %275 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load i32, ptr %no_of_vpath.i, align 4
  %mul.i = shl i32 %276, 2
  %cmp21.i = icmp slt i32 %add101.i, %mul.i
  br i1 %cmp21.i, label %for.inc.i.for.body.i486_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.inc.i.for.body.i486_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i486

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %vp_idx.0.lcssa.i = phi i32 [ 0, %for.cond.preheader.i.for.end.i_crit_edge ], [ %vp_idx.1.i, %for.inc.i.for.end.i_crit_edge ]
  %.lcssa.i = phi i32 [ %225, %for.cond.preheader.i.for.end.i_crit_edge ], [ %276, %for.inc.i.for.end.i_crit_edge ]
  %mul113.i = shl i32 %.lcssa.i, 1
  %arrayidx115.i = getelementptr %struct.vxgedev, ptr %add.ptr.i, i32 0, i32 14, i32 %mul113.i
  %277 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load ptr, ptr %add.ptr.i, align 8
  %279 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load ptr, ptr %entries.i.i.i, align 8
  %entry122.i = getelementptr %struct.msix_entry, ptr %280, i32 %mul113.i, i32 1
  %281 = ptrtoint ptr %entry122.i to i32
  call void @__asan_load2_noabort(i32 %281)
  %282 = load i16, ptr %entry122.i, align 4
  %conv123.i = zext i16 %282 to i32
  %call124.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %arrayidx115.i, i32 noundef 80, ptr noundef nonnull @.str.294, ptr noundef %278, i32 noundef %conv123.i, i32 noundef %and.i) #16
  %283 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %entries.i.i.i, align 8
  %arrayidx126.i = getelementptr %struct.msix_entry, ptr %284, i32 %mul113.i
  %285 = ptrtoint ptr %arrayidx126.i to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load i32, ptr %arrayidx126.i, align 4
  %287 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %call.i326.i = call i32 @request_threaded_irq(i32 noundef %286, ptr noundef nonnull @vxge_alarm_msix_handle, ptr noundef null, i32 noundef 0, ptr noundef %arrayidx115.i, ptr noundef %288) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i326.i)
  %tobool134.not.i = icmp eq i32 %call.i326.i, 0
  br i1 %tobool134.not.i, label %if.end160.i, label %do.end139.i

do.end139.i:                                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %289 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %add.ptr.i, align 8
  %call144.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.296, ptr noundef %290, i32 noundef %mul113.i) #19
  call fastcc void @vxge_rem_msix_isr(ptr noundef %add.ptr.i) #16
  %291 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_store4_noabort(i32 %291)
  store i32 0, ptr %intr_type.i, align 4
  %292 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %add.ptr.i, align 8
  %call157.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.285, ptr noundef %293) #19
  br label %INTA_MODEthread-pre-split.i

if.end160.i:                                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %294 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %handle163.i = getelementptr inbounds %struct.vxge_vpath, ptr %295, i32 0, i32 2
  %296 = ptrtoint ptr %handle163.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %handle163.i, align 128
  %vpath.i = getelementptr inbounds %struct.__vxge_hw_vpath_handle, ptr %297, i32 0, i32 1
  %298 = ptrtoint ptr %vpath.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %vpath.i, align 4
  %300 = ptrtoint ptr %299 to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load i32, ptr %299, align 128
  %mul164.i = shl i32 %301, 2
  %add165.i = or i32 %mul164.i, 2
  %handle168.i = getelementptr %struct.vxge_vpath, ptr %295, i32 %vp_idx.0.lcssa.i, i32 2
  %302 = ptrtoint ptr %handle168.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load ptr, ptr %handle168.i, align 128
  call void @vxge_hw_vpath_msix_unmask(ptr noundef %303, i32 noundef %add165.i) #16
  %304 = ptrtoint ptr %vxge_entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %in_use171.i = getelementptr %struct.vxge_msix_entry, ptr %305, i32 %mul113.i, i32 2
  %306 = ptrtoint ptr %in_use171.i to i32
  call void @__asan_store2_noabort(i32 %306)
  store i16 1, ptr %in_use171.i, align 4
  %307 = ptrtoint ptr %vpaths.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load ptr, ptr %vpaths.i.i.i.i, align 8
  %309 = load ptr, ptr %vxge_entries.i.i.i, align 4
  %arg176.i = getelementptr %struct.vxge_msix_entry, ptr %309, i32 %mul113.i, i32 3
  %310 = ptrtoint ptr %arg176.i to i32
  call void @__asan_store4_noabort(i32 %310)
  store ptr %308, ptr %arg176.i, align 4
  br label %INTA_MODEthread-pre-split.i

INTA_MODEthread-pre-split.i:                      ; preds = %if.end160.i, %do.end139.i, %do.end69.i, %do.end.i, %if.end.INTA_MODEthread-pre-split.i_crit_edge
  %311 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %.pr341.i = load i32, ptr %intr_type.i, align 4
  br label %INTA_MODE.i

INTA_MODE.i:                                      ; preds = %INTA_MODEthread-pre-split.i, %if.end16.i.INTA_MODE.i_crit_edge
  %312 = phi i32 [ %.pr341.i, %INTA_MODEthread-pre-split.i ], [ %.pr.i, %if.end16.i.INTA_MODE.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %312)
  %cmp180.i = icmp eq i32 %312, 0
  br i1 %cmp180.i, label %if.then182.i, label %INTA_MODE.i.if.end31_crit_edge

INTA_MODE.i.if.end31_crit_edge:                   ; preds = %INTA_MODE.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.then182.i:                                     ; preds = %INTA_MODE.i
  %desc183.i = getelementptr i8, ptr %dev, i32 3596
  %313 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %add.ptr.i, align 8
  %call189.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %desc183.i, i32 noundef 80, ptr noundef nonnull @.str.300, ptr noundef %314) #16
  %devh.i495 = getelementptr i8, ptr %dev, i32 2312
  %315 = ptrtoint ptr %devh.i495 to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %devh.i495, align 8
  %call190.i = call i32 @vxge_hw_device_set_intr_type(ptr noundef %316, i32 noundef 0) #16
  %vpaths191.i = getelementptr i8, ptr %dev, i32 9280
  %317 = ptrtoint ptr %vpaths191.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load ptr, ptr %vpaths191.i, align 8
  %handle194.i = getelementptr inbounds %struct.vxge_fifo, ptr %318, i32 0, i32 2
  %319 = ptrtoint ptr %handle194.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %handle194.i, align 8
  call void @vxge_hw_vpath_tti_ci_set(ptr noundef %320) #16
  %321 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load ptr, ptr %pdev, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %322, i32 0, i32 46
  %323 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %irq.i, align 4
  %call.i327.i = call i32 @request_threaded_irq(i32 noundef %324, ptr noundef nonnull @vxge_isr_napi, ptr noundef null, i32 noundef 128, ptr noundef %desc183.i, ptr noundef %add.ptr.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i327.i)
  %tobool200.not.i = icmp eq i32 %call.i327.i, 0
  %325 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %pdev, align 4
  %irq219.i = getelementptr inbounds %struct.pci_dev, ptr %326, i32 0, i32 46
  %327 = ptrtoint ptr %irq219.i to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %irq219.i, align 4
  br i1 %tobool200.not.i, label %do.end216.i, label %do.end24

do.end216.i:                                      ; preds = %if.then182.i
  call void @__sanitizer_cov_trace_pc() #18
  %call220.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.306, ptr noundef nonnull @.str.304, i32 noundef %328) #19
  br label %if.end31

do.end24:                                         ; preds = %if.then182.i
  call void @__sanitizer_cov_trace_pc() #18
  %call209.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.302, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.304, i32 noundef %328) #19
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.185, ptr noundef %dev) #19
  br label %out1thread-pre-split

if.end31:                                         ; preds = %do.end216.i, %INTA_MODE.i.if.end31_crit_edge
  %config = getelementptr i8, ptr %dev, i32 2832
  %329 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load i32, ptr %intr_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %330)
  %cmp32.not = icmp eq i32 %330, 2
  br i1 %cmp32.not, label %for.cond38.preheader, label %if.then33

for.cond38.preheader:                             ; preds = %if.end31
  %331 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %332)
  %cmp40582 = icmp sgt i32 %332, 0
  br i1 %cmp40582, label %for.body41.lr.ph, label %for.cond38.preheader.if.end57_crit_edge

for.cond38.preheader.if.end57_crit_edge:          ; preds = %for.cond38.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end57

for.body41.lr.ph:                                 ; preds = %for.cond38.preheader
  %vpaths42 = getelementptr i8, ptr %dev, i32 9280
  %napi_weight47 = getelementptr i8, ptr %dev, i32 2840
  br label %for.body41

if.then33:                                        ; preds = %if.end31
  %napi = getelementptr i8, ptr %dev, i32 9048
  %napi_weight = getelementptr i8, ptr %dev, i32 2840
  %333 = ptrtoint ptr %napi_weight to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load i32, ptr %napi_weight, align 8
  call void @netif_napi_add(ptr noundef %dev, ptr noundef %napi, ptr noundef nonnull @vxge_poll_inta, i32 noundef %334) #16
  call void @napi_enable(ptr noundef %napi) #16
  %335 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %336)
  %cmp36580 = icmp sgt i32 %336, 0
  br i1 %cmp36580, label %for.body.lr.ph, label %if.then33.if.end57_crit_edge

if.then33.if.end57_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end57

for.body.lr.ph:                                   ; preds = %if.then33
  %vpaths = getelementptr i8, ptr %dev, i32 9280
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.0581 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %337 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load ptr, ptr %vpaths, align 8
  %napi_p = getelementptr %struct.vxge_vpath, ptr %338, i32 %i.0581, i32 1, i32 10
  %339 = ptrtoint ptr %napi_p to i32
  call void @__asan_store4_noabort(i32 %339)
  store ptr %napi, ptr %napi_p, align 8
  %inc = add nuw nsw i32 %i.0581, 1
  %340 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %no_of_vpath.i, align 4
  %cmp36 = icmp slt i32 %inc, %341
  br i1 %cmp36, label %for.body.for.body_crit_edge, label %for.body.if.end57_crit_edge

for.body.if.end57_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end57

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body41:                                       ; preds = %for.body41.for.body41_crit_edge, %for.body41.lr.ph
  %i.1583 = phi i32 [ 0, %for.body41.lr.ph ], [ %inc55, %for.body41.for.body41_crit_edge ]
  %342 = ptrtoint ptr %vpaths42 to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load ptr, ptr %vpaths42, align 8
  %napi45 = getelementptr %struct.vxge_vpath, ptr %343, i32 %i.1583, i32 1, i32 9
  %344 = ptrtoint ptr %napi_weight47 to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %napi_weight47, align 8
  call void @netif_napi_add(ptr noundef %dev, ptr noundef %napi45, ptr noundef nonnull @vxge_poll_msix, i32 noundef %345) #16
  call void @napi_enable(ptr noundef %napi45) #16
  %napi_p53 = getelementptr %struct.vxge_vpath, ptr %343, i32 %i.1583, i32 1, i32 10
  %346 = ptrtoint ptr %napi_p53 to i32
  call void @__asan_store4_noabort(i32 %346)
  store ptr %napi45, ptr %napi_p53, align 8
  %inc55 = add nuw nsw i32 %i.1583, 1
  %347 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load i32, ptr %no_of_vpath.i, align 4
  %cmp40 = icmp slt i32 %inc55, %348
  br i1 %cmp40, label %for.body41.for.body41_crit_edge, label %for.body41.if.end57_crit_edge

for.body41.if.end57_crit_edge:                    ; preds = %for.body41
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end57

for.body41.for.body41_crit_edge:                  ; preds = %for.body41
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body41

if.end57:                                         ; preds = %for.body41.if.end57_crit_edge, %for.body.if.end57_crit_edge, %if.then33.if.end57_crit_edge, %for.cond38.preheader.if.end57_crit_edge
  %rth_steering = getelementptr i8, ptr %dev, i32 2852
  %349 = ptrtoint ptr %rth_steering to i32
  call void @__asan_load4_noabort(i32 %349)
  %bf.load = load i32, ptr %rth_steering, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %bf.load)
  %tobool.not = icmp ult i32 %bf.load, 1073741824
  br i1 %tobool.not, label %if.end57.do.end77_crit_edge, label %if.then59

if.end57.do.end77_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end77

if.then59:                                        ; preds = %if.end57
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %hash_types.i) #16
  %350 = ptrtoint ptr %hash_types.i to i32
  call void @__asan_store1_noabort(i32 %350)
  store i8 -1, ptr %hash_types.i, align 1, !annotation !947
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %itable.i) #16
  %351 = call ptr @memset(ptr %itable.i, i32 0, i32 256)
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %mtable.i) #16
  %352 = call ptr @memset(ptr %mtable.i, i32 0, i32 256)
  %bf.lshr.i = lshr i32 %bf.load, 14
  %bf.clear.i = and i32 %bf.lshr.i, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %bf.clear.i)
  %cmp155.not.i = icmp eq i32 %bf.clear.i, 31
  br i1 %cmp155.not.i, label %if.then59.for.end.i506_crit_edge, label %for.body.lr.ph.i499

if.then59.for.end.i506_crit_edge:                 ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i506

for.body.lr.ph.i499:                              ; preds = %if.then59
  %shl.i = shl nuw i32 1, %bf.clear.i
  %353 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load i32, ptr %no_of_vpath.i, align 4
  %smax.i = call i32 @llvm.smax.i32(i32 %shl.i, i32 1) #16
  br label %for.body.i504

for.body.i504:                                    ; preds = %for.body.i504.for.body.i504_crit_edge, %for.body.lr.ph.i499
  %index.0156.i = phi i32 [ 0, %for.body.lr.ph.i499 ], [ %inc.i503, %for.body.i504.for.body.i504_crit_edge ]
  %conv.i500 = trunc i32 %index.0156.i to i8
  %arrayidx.i501 = getelementptr [256 x i8], ptr %itable.i, i32 0, i32 %index.0156.i
  %355 = ptrtoint ptr %arrayidx.i501 to i32
  call void @__asan_store1_noabort(i32 %355)
  store i8 %conv.i500, ptr %arrayidx.i501, align 1
  %rem.i502 = srem i32 %index.0156.i, %354
  %conv1.i = trunc i32 %rem.i502 to i8
  %arrayidx2.i = getelementptr [256 x i8], ptr %mtable.i, i32 0, i32 %index.0156.i
  %356 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store1_noabort(i32 %356)
  store i8 %conv1.i, ptr %arrayidx2.i, align 1
  %inc.i503 = add nuw nsw i32 %index.0156.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i503, %smax.i
  br i1 %exitcond.not.i, label %for.body.i504.for.end.i506_crit_edge, label %for.body.i504.for.body.i504_crit_edge

for.body.i504.for.body.i504_crit_edge:            ; preds = %for.body.i504
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i504

for.body.i504.for.end.i506_crit_edge:             ; preds = %for.body.i504
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i506

for.end.i506:                                     ; preds = %for.body.i504.for.end.i506_crit_edge, %if.then59.for.end.i506_crit_edge
  %vp_handles.i = getelementptr i8, ptr %dev, i32 9284
  %357 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %no_of_vpath.i, align 4
  %call.i505 = call i32 @vxge_hw_vpath_rts_rth_itable_set(ptr noundef %vp_handles.i, i32 noundef %358, ptr noundef nonnull %mtable.i, ptr noundef nonnull %itable.i, i32 noundef %bf.clear.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i505)
  %cmp11.not.i = icmp eq i32 %call.i505, 0
  br i1 %cmp11.not.i, label %if.end.i510, label %do.end.i508

do.end.i508:                                      ; preds = %for.end.i506
  call void @__sanitizer_cov_trace_pc() #18
  %vpaths.i507 = getelementptr i8, ptr %dev, i32 9280
  br label %do.end66

if.end.i510:                                      ; preds = %for.end.i506
  %359 = ptrtoint ptr %rth_steering to i32
  call void @__asan_load4_noabort(i32 %359)
  %bf.load19.i = load i32, ptr %rth_steering, align 4
  %360 = ptrtoint ptr %hash_types.i to i32
  call void @__asan_load1_noabort(i32 %360)
  %bf.load23.i = load i8, ptr %hash_types.i, align 1
  %sh.diff.i = lshr i32 %bf.load19.i, 20
  %tr.sh.diff.i = trunc i32 %sh.diff.i to i8
  %bf.shl.i = and i8 %tr.sh.diff.i, -128
  %bf.clear24.i = and i8 %bf.load23.i, 3
  %bf.set.i509 = or i8 %bf.shl.i, %bf.clear24.i
  %bf.shl32.i = and i8 %tr.sh.diff.i, 64
  %bf.set34.i = or i8 %bf.set.i509, %bf.shl32.i
  %bf.shl42.i = and i8 %tr.sh.diff.i, 32
  %bf.set44.i = or i8 %bf.set34.i, %bf.shl42.i
  %bf.shl52.i = and i8 %tr.sh.diff.i, 16
  %bf.set54.i = or i8 %bf.set44.i, %bf.shl52.i
  %bf.shl62.i = and i8 %tr.sh.diff.i, 8
  %bf.shl72.i = and i8 %tr.sh.diff.i, 4
  %bf.clear73.i = or i8 %bf.set54.i, %bf.shl62.i
  %bf.set74.i = or i8 %bf.clear73.i, %bf.shl72.i
  store i8 %bf.set74.i, ptr %hash_types.i, align 1
  %361 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %362)
  %cmp77158.i = icmp sgt i32 %362, 0
  br i1 %cmp77158.i, label %for.body79.lr.ph.i, label %if.end.i510.vxge_rth_configure.exit.thread_crit_edge

if.end.i510.vxge_rth_configure.exit.thread_crit_edge: ; preds = %if.end.i510
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_rth_configure.exit.thread

for.body79.lr.ph.i:                               ; preds = %if.end.i510
  %vpaths80.i = getelementptr i8, ptr %dev, i32 9280
  br label %for.body79.i

for.body79.i:                                     ; preds = %for.inc108.i.for.body79.i_crit_edge, %for.body79.lr.ph.i
  %index.1159.i = phi i32 [ 0, %for.body79.lr.ph.i ], [ %inc109.i512, %for.inc108.i.for.body79.i_crit_edge ]
  %363 = ptrtoint ptr %vpaths80.i to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load ptr, ptr %vpaths80.i, align 8
  %handle.i511 = getelementptr %struct.vxge_vpath, ptr %364, i32 %index.1159.i, i32 2
  %365 = ptrtoint ptr %handle.i511 to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load ptr, ptr %handle.i511, align 128
  %367 = ptrtoint ptr %rth_steering to i32
  call void @__asan_load4_noabort(i32 %367)
  %bf.load83.i = load i32, ptr %rth_steering, align 4
  %bf.lshr84.i = lshr i32 %bf.load83.i, 28
  %bf.clear85.i = and i32 %bf.lshr84.i, 3
  %bf.lshr89.i = lshr i32 %bf.load83.i, 14
  %368 = trunc i32 %bf.lshr89.i to i16
  %conv91.i = and i16 %368, 255
  %call92.i = call i32 @vxge_hw_vpath_rts_rth_set(ptr noundef %366, i32 noundef %bf.clear85.i, ptr noundef nonnull %hash_types.i, i16 noundef zeroext %conv91.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92.i)
  %cmp93.not.i = icmp eq i32 %call92.i, 0
  br i1 %cmp93.not.i, label %for.inc108.i, label %for.body79.i.do.end66_crit_edge

for.body79.i.do.end66_crit_edge:                  ; preds = %for.body79.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end66

for.inc108.i:                                     ; preds = %for.body79.i
  %inc109.i512 = add nuw nsw i32 %index.1159.i, 1
  %369 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load i32, ptr %no_of_vpath.i, align 4
  %cmp77.i = icmp slt i32 %inc109.i512, %370
  br i1 %cmp77.i, label %for.inc108.i.for.body79.i_crit_edge, label %for.inc108.i.vxge_rth_configure.exit.thread_crit_edge

for.inc108.i.vxge_rth_configure.exit.thread_crit_edge: ; preds = %for.inc108.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_rth_configure.exit.thread

for.inc108.i.for.body79.i_crit_edge:              ; preds = %for.inc108.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body79.i

vxge_rth_configure.exit.thread:                   ; preds = %for.inc108.i.vxge_rth_configure.exit.thread_crit_edge, %if.end.i510.vxge_rth_configure.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %mtable.i) #16
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %itable.i) #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %hash_types.i) #16
  br label %do.end77

do.end66:                                         ; preds = %for.body79.i.do.end66_crit_edge, %do.end.i508
  %vpaths80.sink.i = phi ptr [ %vpaths.i507, %do.end.i508 ], [ %vpaths80.i, %for.body79.i.do.end66_crit_edge ]
  %index.1159.lcssa.sink.i = phi i32 [ 0, %do.end.i508 ], [ %index.1159.i, %for.body79.i.do.end66_crit_edge ]
  %.str.325.sink.i = phi ptr [ @.str.322, %do.end.i508 ], [ @.str.325, %for.body79.i.do.end66_crit_edge ]
  %371 = ptrtoint ptr %vpaths80.sink.i to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load ptr, ptr %vpaths80.sink.i, align 8
  %device_id103.i = getelementptr %struct.vxge_vpath, ptr %372, i32 %index.1159.lcssa.sink.i, i32 3
  %373 = ptrtoint ptr %device_id103.i to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load i32, ptr %device_id103.i, align 4
  %call104.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.325.sink.i, i32 noundef %374) #19
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %mtable.i) #16
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %itable.i) #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %hash_types.i) #16
  br label %out2

do.end77:                                         ; preds = %vxge_rth_configure.exit.thread, %if.end57.do.end77_crit_edge
  %rth_en = getelementptr inbounds %struct.__vxge_hw_device, ptr %3, i32 0, i32 4, i32 3
  %375 = ptrtoint ptr %rth_en to i32
  call void @__asan_load1_noabort(i32 %375)
  %bf.load82 = load i8, ptr %rth_en, align 4
  %376 = and i8 %bf.load82, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %376)
  %tobool84.not = icmp eq i8 %376, 0
  %cond = select i1 %tobool84.not, ptr @.str.194, ptr @.str.193
  %call85 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.191, ptr noundef %dev, ptr noundef nonnull %cond) #19
  %377 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %378)
  %cmp88584 = icmp sgt i32 %378, 0
  br i1 %cmp88584, label %for.body89.lr.ph, label %do.end77.for.end109_crit_edge

do.end77.for.end109_crit_edge:                    ; preds = %do.end77
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end109

for.body89.lr.ph:                                 ; preds = %do.end77
  %vpaths90 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body89

for.cond86:                                       ; preds = %for.body89
  %inc108 = add nuw nsw i32 %i.2585, 1
  %379 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load i32, ptr %no_of_vpath.i, align 4
  %cmp88 = icmp slt i32 %inc108, %380
  br i1 %cmp88, label %for.cond86.for.body89_crit_edge, label %for.cond86.for.end109_crit_edge

for.cond86.for.end109_crit_edge:                  ; preds = %for.cond86
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end109

for.cond86.for.body89_crit_edge:                  ; preds = %for.cond86
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body89

for.body89:                                       ; preds = %for.cond86.for.body89_crit_edge, %for.body89.lr.ph
  %i.2585 = phi i32 [ 0, %for.body89.lr.ph ], [ %inc108, %for.cond86.for.body89_crit_edge ]
  %381 = ptrtoint ptr %vpaths90 to i32
  call void @__asan_load4_noabort(i32 %381)
  %382 = load ptr, ptr %vpaths90, align 8
  %handle = getelementptr %struct.vxge_vpath, ptr %382, i32 %i.2585, i32 2
  %383 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load ptr, ptr %handle, align 128
  %385 = ptrtoint ptr %mtu17 to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load i32, ptr %mtu17, align 4
  %call93 = call i32 @vxge_hw_vpath_mtu_set(ptr noundef %384, i32 noundef %386) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call93)
  %cmp94.not = icmp eq i32 %call93, 0
  br i1 %cmp94.not, label %for.cond86, label %for.body89.out2_crit_edge

for.body89.out2_crit_edge:                        ; preds = %for.body89
  call void @__sanitizer_cov_trace_pc() #18
  br label %out2

for.end109:                                       ; preds = %for.cond86.for.end109_crit_edge, %do.end77.for.end109_crit_edge
  %devh = getelementptr i8, ptr %dev, i32 2312
  %387 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load ptr, ptr %devh, align 8
  call void @vxge_hw_device_debug_set(ptr noundef %388, i32 noundef 1, i32 noundef 536870912) #16
  %389 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %390)
  %cmp112586 = icmp sgt i32 %390, 0
  br i1 %cmp112586, label %for.body113.lr.ph, label %for.end109.for.end124_crit_edge

for.end109.for.end124_crit_edge:                  ; preds = %for.end109
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end124

for.body113.lr.ph:                                ; preds = %for.end109
  %vpaths116 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body113

for.body113:                                      ; preds = %for.body113.for.body113_crit_edge, %for.body113.lr.ph
  %i.3587 = phi i32 [ 0, %for.body113.lr.ph ], [ %inc123, %for.body113.for.body113_crit_edge ]
  %391 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load ptr, ptr %devh, align 8
  %call115 = call i32 @vxge_hw_device_error_level_get(ptr noundef %392) #16
  %393 = ptrtoint ptr %vpaths116 to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load ptr, ptr %vpaths116, align 8
  %level_err = getelementptr %struct.vxge_vpath, ptr %394, i32 %i.3587, i32 13
  %395 = ptrtoint ptr %level_err to i32
  call void @__asan_store4_noabort(i32 %395)
  store i32 %call115, ptr %level_err, align 16
  %396 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load ptr, ptr %devh, align 8
  %call119 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %397) #16
  %398 = ptrtoint ptr %vpaths116 to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load ptr, ptr %vpaths116, align 8
  %level_trace = getelementptr %struct.vxge_vpath, ptr %399, i32 %i.3587, i32 14
  %400 = ptrtoint ptr %level_trace to i32
  call void @__asan_store4_noabort(i32 %400)
  store i32 %call119, ptr %level_trace, align 4
  %inc123 = add nuw nsw i32 %i.3587, 1
  %401 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load i32, ptr %no_of_vpath.i, align 4
  %cmp112 = icmp slt i32 %inc123, %402
  br i1 %cmp112, label %for.body113.for.body113_crit_edge, label %for.body113.for.end124_crit_edge

for.body113.for.end124_crit_edge:                 ; preds = %for.body113
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end124

for.body113.for.body113_crit_edge:                ; preds = %for.body113
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body113

for.end124:                                       ; preds = %for.body113.for.end124_crit_edge, %for.end109.for.end124_crit_edge
  %403 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %403)
  %404 = load ptr, ptr %devh, align 8
  %call126 = call i32 @vxge_hw_device_error_level_get(ptr noundef %404) #16
  %level_err127 = getelementptr i8, ptr %dev, i32 9412
  %405 = ptrtoint ptr %level_err127 to i32
  call void @__asan_store4_noabort(i32 %405)
  store i32 %call126, ptr %level_err127, align 4
  %406 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load ptr, ptr %devh, align 8
  %call129 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %407) #16
  %level_trace130 = getelementptr i8, ptr %dev, i32 9416
  %408 = ptrtoint ptr %level_trace130 to i32
  call void @__asan_store4_noabort(i32 %408)
  store i32 %call129, ptr %level_trace130, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call129)
  %.not = icmp eq i32 %call129, 0
  br i1 %.not, label %for.end124.do.end148_crit_edge, label %do.end139

for.end124.do.end148_crit_edge:                   ; preds = %for.end124
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end148

do.end139:                                        ; preds = %for.end124
  call void @__sanitizer_cov_trace_pc() #18
  %409 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %409)
  %410 = load ptr, ptr %add.ptr.i, align 8
  %411 = ptrtoint ptr %mtu17 to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load i32, ptr %mtu17, align 4
  %call145 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.199, ptr noundef %410, i32 noundef %412) #19
  br label %do.end148

do.end148:                                        ; preds = %do.end139, %for.end124.do.end148_crit_edge
  %413 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %413)
  %414 = load ptr, ptr %devh, align 8
  call void @vxge_hw_device_debug_set(ptr noundef %414, i32 noundef 2, i32 noundef 536870912) #16
  %415 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %415)
  %416 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %416)
  %cmp152588 = icmp sgt i32 %416, 0
  br i1 %cmp152588, label %for.body153.lr.ph, label %do.end148.for.end166_crit_edge

do.end148.for.end166_crit_edge:                   ; preds = %do.end148
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end166

for.body153.lr.ph:                                ; preds = %do.end148
  %vpaths156 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body153

for.body153:                                      ; preds = %for.body153.for.body153_crit_edge, %for.body153.lr.ph
  %i.4589 = phi i32 [ 0, %for.body153.lr.ph ], [ %inc165, %for.body153.for.body153_crit_edge ]
  %417 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %417)
  %418 = load ptr, ptr %devh, align 8
  %call155 = call i32 @vxge_hw_device_error_level_get(ptr noundef %418) #16
  %419 = ptrtoint ptr %vpaths156 to i32
  call void @__asan_load4_noabort(i32 %419)
  %420 = load ptr, ptr %vpaths156, align 8
  %level_err158 = getelementptr %struct.vxge_vpath, ptr %420, i32 %i.4589, i32 13
  %421 = ptrtoint ptr %level_err158 to i32
  call void @__asan_store4_noabort(i32 %421)
  store i32 %call155, ptr %level_err158, align 16
  %422 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load ptr, ptr %devh, align 8
  %call160 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %423) #16
  %424 = ptrtoint ptr %vpaths156 to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load ptr, ptr %vpaths156, align 8
  %level_trace163 = getelementptr %struct.vxge_vpath, ptr %425, i32 %i.4589, i32 14
  %426 = ptrtoint ptr %level_trace163 to i32
  call void @__asan_store4_noabort(i32 %426)
  store i32 %call160, ptr %level_trace163, align 4
  %inc165 = add nuw nsw i32 %i.4589, 1
  %427 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %427)
  %428 = load i32, ptr %no_of_vpath.i, align 4
  %cmp152 = icmp slt i32 %inc165, %428
  br i1 %cmp152, label %for.body153.for.body153_crit_edge, label %for.body153.for.end166_crit_edge

for.body153.for.end166_crit_edge:                 ; preds = %for.body153
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end166

for.body153.for.body153_crit_edge:                ; preds = %for.body153
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body153

for.end166:                                       ; preds = %for.body153.for.end166_crit_edge, %do.end148.for.end166_crit_edge
  %429 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %429)
  %430 = load ptr, ptr %devh, align 8
  %call168 = call i32 @vxge_hw_device_error_level_get(ptr noundef %430) #16
  %431 = ptrtoint ptr %level_err127 to i32
  call void @__asan_store4_noabort(i32 %431)
  store i32 %call168, ptr %level_err127, align 4
  %432 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load ptr, ptr %devh, align 8
  %call171 = call i32 @vxge_hw_device_trace_level_get(ptr noundef %433) #16
  %434 = ptrtoint ptr %level_trace130 to i32
  call void @__asan_store4_noabort(i32 %434)
  store i32 %call171, ptr %level_trace130, align 8
  %all_multi_flg = getelementptr i8, ptr %dev, i32 3584
  %435 = ptrtoint ptr %all_multi_flg to i32
  call void @__asan_load2_noabort(i32 %435)
  %436 = load i16, ptr %all_multi_flg, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %436)
  %tobool173.not = icmp eq i16 %436, 0
  br i1 %tobool173.not, label %for.end166.if.end199_crit_edge, label %for.cond175.preheader

for.end166.if.end199_crit_edge:                   ; preds = %for.end166
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end199

for.cond175.preheader:                            ; preds = %for.end166
  %437 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %437)
  %438 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %438)
  %cmp177590 = icmp sgt i32 %438, 0
  br i1 %cmp177590, label %for.body178.lr.ph, label %for.cond175.preheader.if.end199_crit_edge

for.cond175.preheader.if.end199_crit_edge:        ; preds = %for.cond175.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end199

for.body178.lr.ph:                                ; preds = %for.cond175.preheader
  %vpaths179 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body178

for.body178:                                      ; preds = %for.inc196.for.body178_crit_edge, %for.body178.lr.ph
  %i.5591 = phi i32 [ 0, %for.body178.lr.ph ], [ %inc197, %for.inc196.for.body178_crit_edge ]
  %439 = ptrtoint ptr %vpaths179 to i32
  call void @__asan_load4_noabort(i32 %439)
  %440 = load ptr, ptr %vpaths179, align 8
  %arrayidx180 = getelementptr %struct.vxge_vpath, ptr %440, i32 %i.5591
  call fastcc void @vxge_restore_vpath_mac_addr(ptr noundef %arrayidx180)
  %is_open.i514 = getelementptr %struct.vxge_vpath, ptr %440, i32 %i.5591, i32 6
  %441 = ptrtoint ptr %is_open.i514 to i32
  call void @__asan_load4_noabort(i32 %441)
  %442 = load i32, ptr %is_open.i514, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %442)
  %tobool.not.i515 = icmp eq i32 %442, 0
  br i1 %tobool.not.i515, label %for.body178.vxge_restore_vpath_vid_table.exit_crit_edge, label %if.end.i517

for.body178.vxge_restore_vpath_vid_table.exit_crit_edge: ; preds = %for.body178
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit

if.end.i517:                                      ; preds = %for.body178
  %vdev1.i = getelementptr %struct.vxge_vpath, ptr %440, i32 %i.5591, i32 7
  %443 = ptrtoint ptr %vdev1.i to i32
  call void @__asan_load4_noabort(i32 %443)
  %444 = load ptr, ptr %vdev1.i, align 4
  %active_vlans.i = getelementptr inbounds %struct.vxgedev, ptr %444, i32 0, i32 3
  %call.i516 = call i32 @_find_next_bit_be(ptr noundef %active_vlans.i, i32 noundef 4096, i32 noundef 0) #16
  %conv21.i = and i32 %call.i516, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %conv21.i)
  %cmp2.i = icmp ult i32 %conv21.i, 4096
  br i1 %cmp2.i, label %for.body.lr.ph.i519, label %if.end.i517.vxge_restore_vpath_vid_table.exit_crit_edge

if.end.i517.vxge_restore_vpath_vid_table.exit_crit_edge: ; preds = %if.end.i517
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit

for.body.lr.ph.i519:                              ; preds = %if.end.i517
  %handle.i518 = getelementptr %struct.vxge_vpath, ptr %440, i32 %i.5591, i32 2
  br label %for.body.i522

for.body.i522:                                    ; preds = %for.body.i522.for.body.i522_crit_edge, %for.body.lr.ph.i519
  %conv23.i = phi i32 [ %conv21.i, %for.body.lr.ph.i519 ], [ %conv2.i, %for.body.i522.for.body.i522_crit_edge ]
  %445 = ptrtoint ptr %handle.i518 to i32
  call void @__asan_load4_noabort(i32 %445)
  %446 = load ptr, ptr %handle.i518, align 128
  %conv4.i = zext i32 %conv23.i to i64
  %call5.i = call i32 @vxge_hw_vpath_vid_add(ptr noundef %446, i64 noundef %conv4.i) #16
  %add.i520 = add nuw nsw i32 %conv23.i, 1
  %call9.i = call i32 @_find_next_bit_be(ptr noundef %active_vlans.i, i32 noundef 4096, i32 noundef %add.i520) #16
  %conv2.i = and i32 %call9.i, 65535
  %cmp.i521 = icmp ult i32 %conv2.i, 4096
  br i1 %cmp.i521, label %for.body.i522.for.body.i522_crit_edge, label %for.body.i522.vxge_restore_vpath_vid_table.exit_crit_edge

for.body.i522.vxge_restore_vpath_vid_table.exit_crit_edge: ; preds = %for.body.i522
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit

for.body.i522.for.body.i522_crit_edge:            ; preds = %for.body.i522
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i522

vxge_restore_vpath_vid_table.exit:                ; preds = %for.body.i522.vxge_restore_vpath_vid_table.exit_crit_edge, %if.end.i517.vxge_restore_vpath_vid_table.exit_crit_edge, %for.body178.vxge_restore_vpath_vid_table.exit_crit_edge
  %handle183 = getelementptr %struct.vxge_vpath, ptr %440, i32 %i.5591, i32 2
  %447 = ptrtoint ptr %handle183 to i32
  call void @__asan_load4_noabort(i32 %447)
  %448 = load ptr, ptr %handle183, align 128
  %call184 = call i32 @vxge_hw_vpath_mcast_enable(ptr noundef %448) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call184)
  %cmp185.not = icmp eq i32 %call184, 0
  br i1 %cmp185.not, label %vxge_restore_vpath_vid_table.exit.for.inc196_crit_edge, label %do.end190

vxge_restore_vpath_vid_table.exit.for.inc196_crit_edge: ; preds = %vxge_restore_vpath_vid_table.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc196

do.end190:                                        ; preds = %vxge_restore_vpath_vid_table.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call192 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.202, ptr noundef nonnull @.str.180, i32 noundef 2785) #19
  br label %for.inc196

for.inc196:                                       ; preds = %do.end190, %vxge_restore_vpath_vid_table.exit.for.inc196_crit_edge
  %inc197 = add nuw nsw i32 %i.5591, 1
  %449 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %449)
  %450 = load i32, ptr %no_of_vpath.i, align 4
  %cmp177 = icmp slt i32 %inc197, %450
  br i1 %cmp177, label %for.inc196.for.body178_crit_edge, label %for.inc196.if.end199_crit_edge

for.inc196.if.end199_crit_edge:                   ; preds = %for.inc196
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end199

for.inc196.for.body178_crit_edge:                 ; preds = %for.inc196
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body178

if.end199:                                        ; preds = %for.inc196.if.end199_crit_edge, %for.cond175.preheader.if.end199_crit_edge, %for.end166.if.end199_crit_edge
  %451 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %451)
  %452 = load ptr, ptr %devh, align 8
  %call207 = call i32 @vxge_hw_mgmt_reg_write(ptr noundef %452, i32 noundef 3, i32 noundef 0, i32 noundef 5736, i64 noundef -140737488355328) #16
  %453 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %453)
  %454 = load ptr, ptr %devh, align 8
  %call209 = call i32 @vxge_hw_mgmt_reg_write(ptr noundef %454, i32 noundef 3, i32 noundef 0, i32 noundef 5744, i64 noundef -140737488355328) #16
  call void @vxge_set_multicast(ptr noundef %dev)
  %455 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %455)
  %456 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %456)
  %cmp212595 = icmp sgt i32 %456, 0
  br i1 %cmp212595, label %for.body213.lr.ph, label %if.end199.for.end252_crit_edge

if.end199.for.end252_crit_edge:                   ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end252

for.body213.lr.ph:                                ; preds = %if.end199
  %vpaths214 = getelementptr i8, ptr %dev, i32 9280
  %addr_learn_en = getelementptr i8, ptr %dev, i32 2848
  br label %for.body213

for.body213:                                      ; preds = %for.inc250.for.body213_crit_edge, %for.body213.lr.ph
  %i.7596 = phi i32 [ 0, %for.body213.lr.ph ], [ %inc251, %for.inc250.for.body213_crit_edge ]
  %457 = ptrtoint ptr %vpaths214 to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load ptr, ptr %vpaths214, align 8
  %handle216 = getelementptr %struct.vxge_vpath, ptr %458, i32 %i.7596, i32 2
  %459 = ptrtoint ptr %handle216 to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load ptr, ptr %handle216, align 128
  %call217 = call i32 @vxge_hw_vpath_bcast_enable(ptr noundef %460) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call217)
  %cmp218.not = icmp eq i32 %call217, 0
  br i1 %cmp218.not, label %for.body213.if.end230_crit_edge, label %do.end223

for.body213.if.end230_crit_edge:                  ; preds = %for.body213
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end230

do.end223:                                        ; preds = %for.body213
  call void @__sanitizer_cov_trace_pc() #18
  %call227 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.205, ptr noundef %dev, i32 noundef %i.7596) #19
  br label %if.end230

if.end230:                                        ; preds = %do.end223, %for.body213.if.end230_crit_edge
  %461 = ptrtoint ptr %addr_learn_en to i32
  call void @__asan_load4_noabort(i32 %461)
  %462 = load i32, ptr %addr_learn_en, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %462)
  %tobool232.not = icmp eq i32 %462, 0
  br i1 %tobool232.not, label %if.end230.for.inc250_crit_edge, label %if.then233

if.end230.for.inc250_crit_edge:                   ; preds = %if.end230
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc250

if.then233:                                       ; preds = %if.end230
  %463 = ptrtoint ptr %handle216 to i32
  call void @__asan_load4_noabort(i32 %463)
  %464 = load ptr, ptr %handle216, align 128
  %call235 = call i32 @vxge_hw_vpath_mcast_enable(ptr noundef %464) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call235)
  %cmp236.not = icmp eq i32 %call235, 0
  br i1 %cmp236.not, label %if.then233.for.inc250_crit_edge, label %do.end241

if.then233.for.inc250_crit_edge:                  ; preds = %if.then233
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc250

do.end241:                                        ; preds = %if.then233
  call void @__sanitizer_cov_trace_pc() #18
  %call245 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.208, ptr noundef %dev, i32 noundef %i.7596) #19
  br label %for.inc250

for.inc250:                                       ; preds = %do.end241, %if.then233.for.inc250_crit_edge, %if.end230.for.inc250_crit_edge
  %inc251 = add nuw nsw i32 %i.7596, 1
  %465 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %465)
  %466 = load i32, ptr %no_of_vpath.i, align 4
  %cmp212 = icmp slt i32 %inc251, %466
  br i1 %cmp212, label %for.inc250.for.body213_crit_edge, label %for.inc250.for.end252_crit_edge

for.inc250.for.end252_crit_edge:                  ; preds = %for.inc250
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end252

for.inc250.for.body213_crit_edge:                 ; preds = %for.inc250
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body213

for.end252:                                       ; preds = %for.inc250.for.end252_crit_edge, %if.end199.for.end252_crit_edge
  %467 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %467)
  %468 = load ptr, ptr %devh, align 8
  %469 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %469)
  %470 = load i32, ptr %config, align 8
  %rx_pause_enable = getelementptr i8, ptr %dev, i32 2836
  %471 = ptrtoint ptr %rx_pause_enable to i32
  call void @__asan_load4_noabort(i32 %471)
  %472 = load i32, ptr %rx_pause_enable, align 4
  %call256 = call i32 @vxge_hw_device_setpause_data(ptr noundef %468, i32 noundef 0, i32 noundef %470, i32 noundef %472) #16
  %function = getelementptr i8, ptr %dev, i32 3500
  %473 = ptrtoint ptr %function to i32
  call void @__asan_load4_noabort(i32 %473)
  %474 = load ptr, ptr %function, align 4
  %cmp257 = icmp eq ptr %474, null
  br i1 %cmp257, label %if.then258, label %for.end252.if.end260_crit_edge

for.end252.if.end260_crit_edge:                   ; preds = %for.end252
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end260

if.then258:                                       ; preds = %for.end252
  call void @__sanitizer_cov_trace_pc() #18
  %vp_reset_timer = getelementptr i8, ptr %dev, i32 3488
  call void @init_timer_key(ptr noundef %vp_reset_timer, ptr noundef nonnull @vxge_poll_vp_reset, i32 noundef 0, ptr noundef nonnull @.str.331, ptr noundef nonnull @vxge_os_timer.__key) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %475 = load volatile i32, ptr @jiffies, align 128
  %add.i523 = add i32 %475, 50
  %call.i524 = call i32 @mod_timer(ptr noundef %vp_reset_timer, i32 noundef %add.i523) #16
  br label %if.end260

if.end260:                                        ; preds = %if.then258, %for.end252.if.end260_crit_edge
  %titan1 = getelementptr i8, ptr %dev, i32 3586
  %476 = ptrtoint ptr %titan1 to i32
  call void @__asan_load1_noabort(i32 %476)
  %bf.load261 = load i8, ptr %titan1, align 2
  %477 = and i8 %bf.load261, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %477)
  %tobool265.not = icmp eq i8 %477, 0
  br i1 %tobool265.not, label %if.end260.if.end270_crit_edge, label %land.lhs.true

if.end260.if.end270_crit_edge:                    ; preds = %if.end260
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end270

land.lhs.true:                                    ; preds = %if.end260
  %function266 = getelementptr i8, ptr %dev, i32 3548
  %478 = ptrtoint ptr %function266 to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load ptr, ptr %function266, align 4
  %cmp267 = icmp eq ptr %479, null
  br i1 %cmp267, label %if.then268, label %land.lhs.true.if.end270_crit_edge

land.lhs.true.if.end270_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end270

if.then268:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %vp_lockup_timer = getelementptr i8, ptr %dev, i32 3536
  call void @init_timer_key(ptr noundef %vp_lockup_timer, ptr noundef nonnull @vxge_poll_vp_lockup, i32 noundef 0, ptr noundef nonnull @.str.331, ptr noundef nonnull @vxge_os_timer.__key) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %480 = load volatile i32, ptr @jiffies, align 128
  %add.i525 = add i32 %480, 50
  %call.i526 = call i32 @mod_timer(ptr noundef %vp_lockup_timer, i32 noundef %add.i525) #16
  br label %if.end270

if.end270:                                        ; preds = %if.then268, %land.lhs.true.if.end270_crit_edge, %if.end260.if.end270_crit_edge
  %state = getelementptr i8, ptr %dev, i32 3480
  call void @_set_bit(i32 noundef 1, ptr noundef %state) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !950
  %481 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %481)
  %482 = load ptr, ptr %devh, align 8
  %link_state.i = getelementptr inbounds %struct.__vxge_hw_device, ptr %482, i32 0, i32 5
  %483 = ptrtoint ptr %link_state.i to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load i32, ptr %link_state.i, align 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %484)
  %cmp279 = icmp eq i32 %484, 2
  br i1 %cmp279, label %if.then280, label %if.end270.if.end284_crit_edge

if.end270.if.end284_crit_edge:                    ; preds = %if.end270
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end284

if.then280:                                       ; preds = %if.end270
  call void @__sanitizer_cov_trace_pc() #18
  %485 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %485)
  %486 = load ptr, ptr %add.ptr.i, align 8
  call void @netif_carrier_on(ptr noundef %486) #16
  %487 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %487)
  %488 = load ptr, ptr %add.ptr.i, align 8
  call void (ptr, ptr, ...) @netdev_notice(ptr noundef %488, ptr noundef nonnull @.str.137) #19
  %link_up = getelementptr i8, ptr %dev, i32 9364
  %489 = ptrtoint ptr %link_up to i32
  call void @__asan_load4_noabort(i32 %489)
  %490 = load i32, ptr %link_up, align 4
  %inc283 = add i32 %490, 1
  store i32 %inc283, ptr %link_up, align 4
  br label %if.end284

if.end284:                                        ; preds = %if.then280, %if.end270.if.end284_crit_edge
  %491 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %491)
  %492 = load ptr, ptr %devh, align 8
  call void @vxge_hw_device_intr_enable(ptr noundef %492) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !951
  %493 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %493)
  %494 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %494)
  %cmp294599 = icmp sgt i32 %494, 0
  br i1 %cmp294599, label %for.body295.lr.ph, label %if.end284.for.end308_crit_edge

if.end284.for.end308_crit_edge:                   ; preds = %if.end284
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end308

for.body295.lr.ph:                                ; preds = %if.end284
  %vpaths296 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body295

for.body295:                                      ; preds = %for.body295.for.body295_crit_edge, %for.body295.lr.ph
  %i.8600 = phi i32 [ 0, %for.body295.lr.ph ], [ %inc307, %for.body295.for.body295_crit_edge ]
  %495 = ptrtoint ptr %vpaths296 to i32
  call void @__asan_load4_noabort(i32 %495)
  %496 = load ptr, ptr %vpaths296, align 8
  %handle298 = getelementptr %struct.vxge_vpath, ptr %496, i32 %i.8600, i32 2
  %497 = ptrtoint ptr %handle298 to i32
  call void @__asan_load4_noabort(i32 %497)
  %498 = load ptr, ptr %handle298, align 128
  call void @vxge_hw_vpath_enable(ptr noundef %498) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !952
  %499 = ptrtoint ptr %handle298 to i32
  call void @__asan_load4_noabort(i32 %499)
  %500 = load ptr, ptr %handle298, align 128
  call void @vxge_hw_vpath_rx_doorbell_init(ptr noundef %500) #16
  %inc307 = add nuw nsw i32 %i.8600, 1
  %501 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %501)
  %502 = load i32, ptr %no_of_vpath.i, align 4
  %cmp294 = icmp slt i32 %inc307, %502
  br i1 %cmp294, label %for.body295.for.body295_crit_edge, label %for.body295.for.end308_crit_edge

for.body295.for.end308_crit_edge:                 ; preds = %for.body295
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end308

for.body295.for.body295_crit_edge:                ; preds = %for.body295
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body295

for.end308:                                       ; preds = %for.body295.for.end308_crit_edge, %if.end284.for.end308_crit_edge
  %503 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %503)
  %504 = load ptr, ptr %add.ptr.i, align 8
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %504, i32 0, i32 104
  %505 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %505)
  %506 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %506)
  %cmp4.not.i = icmp eq i32 %506, 0
  br i1 %cmp4.not.i, label %for.end308.netif_tx_start_all_queues.exit_crit_edge, label %for.body.lr.ph.i527

for.end308.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.end308
  call void @__sanitizer_cov_trace_pc() #18
  br label %netif_tx_start_all_queues.exit

for.body.lr.ph.i527:                              ; preds = %for.end308
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %504, i32 0, i32 103
  br label %for.body.i530

for.body.i530:                                    ; preds = %for.body.i530.for.body.i530_crit_edge, %for.body.lr.ph.i527
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i527 ], [ %inc.i528, %for.body.i530.for.body.i530_crit_edge ]
  %507 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %507)
  %508 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %508, i32 %i.05.i, i32 13
  call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #16
  %inc.i528 = add nuw i32 %i.05.i, 1
  %509 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %509)
  %510 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i529 = icmp ult i32 %inc.i528, %510
  br i1 %cmp.i529, label %for.body.i530.for.body.i530_crit_edge, label %for.body.i530.netif_tx_start_all_queues.exit_crit_edge

for.body.i530.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.body.i530
  call void @__sanitizer_cov_trace_pc() #18
  br label %netif_tx_start_all_queues.exit

for.body.i530.for.body.i530_crit_edge:            ; preds = %for.body.i530
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i530

netif_tx_start_all_queues.exit:                   ; preds = %for.body.i530.netif_tx_start_all_queues.exit_crit_edge, %for.end308.netif_tx_start_all_queues.exit_crit_edge
  %511 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_load4_noabort(i32 %511)
  %512 = load i32, ptr %intr_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %512)
  %cmp.i533 = icmp eq i32 %512, 2
  %513 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %513)
  %514 = load i32, ptr %no_of_vpath.i, align 4
  br i1 %cmp.i533, label %for.cond.preheader.i535, label %netif_tx_start_all_queues.exit.if.end.i542_crit_edge

netif_tx_start_all_queues.exit.if.end.i542_crit_edge: ; preds = %netif_tx_start_all_queues.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i542

for.cond.preheader.i535:                          ; preds = %netif_tx_start_all_queues.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %514)
  %cmp130.i = icmp sgt i32 %514, 0
  br i1 %cmp130.i, label %for.body.lr.ph.i537, label %for.cond.preheader.i535.do.end331_crit_edge

for.cond.preheader.i535.do.end331_crit_edge:      ; preds = %for.cond.preheader.i535
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end331

for.body.lr.ph.i537:                              ; preds = %for.cond.preheader.i535
  %vpaths.i536 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body.i540

for.body.i540:                                    ; preds = %for.body.i540.for.body.i540_crit_edge, %for.body.lr.ph.i537
  %i.031.i = phi i32 [ 0, %for.body.lr.ph.i537 ], [ %inc.i539, %for.body.i540.for.body.i540_crit_edge ]
  %515 = ptrtoint ptr %vpaths.i536 to i32
  call void @__asan_load4_noabort(i32 %515)
  %516 = load ptr, ptr %vpaths.i536, align 8
  %handle.i538 = getelementptr %struct.vxge_vpath, ptr %516, i32 %i.031.i, i32 1, i32 2
  %517 = ptrtoint ptr %handle.i538 to i32
  call void @__asan_load4_noabort(i32 %517)
  %518 = load ptr, ptr %handle.i538, align 8
  call void @vxge_hw_vpath_dynamic_rti_ci_set(ptr noundef %518) #16
  %inc.i539 = add nuw nsw i32 %i.031.i, 1
  %519 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %519)
  %520 = load i32, ptr %no_of_vpath.i, align 4
  %cmp1.i = icmp slt i32 %inc.i539, %520
  br i1 %cmp1.i, label %for.body.i540.for.body.i540_crit_edge, label %for.body.i540.if.end.i542_crit_edge

for.body.i540.if.end.i542_crit_edge:              ; preds = %for.body.i540
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i542

for.body.i540.for.body.i540_crit_edge:            ; preds = %for.body.i540
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i540

if.end.i542:                                      ; preds = %for.body.i540.if.end.i542_crit_edge, %netif_tx_start_all_queues.exit.if.end.i542_crit_edge
  %521 = phi i32 [ %514, %netif_tx_start_all_queues.exit.if.end.i542_crit_edge ], [ %520, %for.body.i540.if.end.i542_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %521)
  %cmp432.i = icmp sgt i32 %521, 0
  br i1 %cmp432.i, label %for.body5.lr.ph.i, label %if.end.i542.do.end331_crit_edge

if.end.i542.do.end331_crit_edge:                  ; preds = %if.end.i542
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end331

for.body5.lr.ph.i:                                ; preds = %if.end.i542
  %vpaths6.i = getelementptr i8, ptr %dev, i32 9280
  br label %for.body5.i

for.cond2.i:                                      ; preds = %for.body5.i
  %inc16.i = add nuw nsw i32 %i.133.i, 1
  %522 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %522)
  %523 = load i32, ptr %no_of_vpath.i, align 4
  %cmp4.i = icmp slt i32 %inc16.i, %523
  br i1 %cmp4.i, label %for.cond2.i.for.body5.i_crit_edge, label %for.cond2.i.do.end331_crit_edge

for.cond2.i.do.end331_crit_edge:                  ; preds = %for.cond2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end331

for.cond2.i.for.body5.i_crit_edge:                ; preds = %for.cond2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body5.i

for.body5.i:                                      ; preds = %for.cond2.i.for.body5.i_crit_edge, %for.body5.lr.ph.i
  %i.133.i = phi i32 [ 0, %for.body5.lr.ph.i ], [ %inc16.i, %for.cond2.i.for.body5.i_crit_edge ]
  %524 = ptrtoint ptr %vpaths6.i to i32
  call void @__asan_load4_noabort(i32 %524)
  %525 = load ptr, ptr %vpaths6.i, align 8
  %handle8.i = getelementptr %struct.vxge_vpath, ptr %525, i32 %i.133.i, i32 0, i32 2
  %526 = ptrtoint ptr %handle8.i to i32
  call void @__asan_load4_noabort(i32 %526)
  %527 = load ptr, ptr %handle8.i, align 8
  call void @vxge_hw_vpath_tti_ci_set(ptr noundef %527) #16
  %528 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_load4_noabort(i32 %528)
  %529 = load i32, ptr %intr_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %529)
  %cmp11.i = icmp eq i32 %529, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.133.i)
  %cmp12.i = icmp eq i32 %i.133.i, 0
  %or.cond.i = select i1 %cmp11.i, i1 %cmp12.i, i1 false
  br i1 %or.cond.i, label %for.body5.i.do.end331_crit_edge, label %for.cond2.i

for.body5.i.do.end331_crit_edge:                  ; preds = %for.body5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end331

out2:                                             ; preds = %for.body89.out2_crit_edge, %do.end66
  %.str.196.sink = phi ptr [ @.str.188, %do.end66 ], [ @.str.196, %for.body89.out2_crit_edge ]
  %call103 = call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.196.sink, ptr noundef %dev) #19
  %530 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_load4_noabort(i32 %530)
  %531 = load i32, ptr %intr_type.i, align 4
  %532 = zext i32 %531 to i64
  call void @__sanitizer_cov_trace_switch(i64 %532, ptr @__sancov_gen_cov_switch_values.556)
  switch i32 %531, label %out2.vxge_rem_isr.exit_crit_edge [
    i32 2, label %if.then.i544
    i32 0, label %if.then4.i
  ]

out2.vxge_rem_isr.exit_crit_edge:                 ; preds = %out2
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_rem_isr.exit

if.then.i544:                                     ; preds = %out2
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @vxge_rem_msix_isr(ptr noundef %add.ptr.i) #16
  br label %vxge_rem_isr.exitthread-pre-split

if.then4.i:                                       ; preds = %out2
  call void @__sanitizer_cov_trace_pc() #18
  %533 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %533)
  %534 = load ptr, ptr %pdev, align 4
  %irq.i546 = getelementptr inbounds %struct.pci_dev, ptr %534, i32 0, i32 46
  %535 = ptrtoint ptr %irq.i546 to i32
  call void @__asan_load4_noabort(i32 %535)
  %536 = load i32, ptr %irq.i546, align 4
  call void @synchronize_irq(i32 noundef %536) #16
  %537 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %537)
  %538 = load ptr, ptr %pdev, align 4
  %irq6.i = getelementptr inbounds %struct.pci_dev, ptr %538, i32 0, i32 46
  %539 = ptrtoint ptr %irq6.i to i32
  call void @__asan_load4_noabort(i32 %539)
  %540 = load i32, ptr %irq6.i, align 4
  %call.i547 = call ptr @free_irq(i32 noundef %540, ptr noundef %add.ptr.i) #16
  br label %vxge_rem_isr.exitthread-pre-split

vxge_rem_isr.exitthread-pre-split:                ; preds = %if.then4.i, %if.then.i544
  %541 = ptrtoint ptr %intr_type.i to i32
  call void @__asan_load4_noabort(i32 %541)
  %.pr570 = load i32, ptr %intr_type.i, align 4
  br label %vxge_rem_isr.exit

vxge_rem_isr.exit:                                ; preds = %vxge_rem_isr.exitthread-pre-split, %out2.vxge_rem_isr.exit_crit_edge
  %542 = phi i32 [ %.pr570, %vxge_rem_isr.exitthread-pre-split ], [ %531, %out2.vxge_rem_isr.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %542)
  %cmp312.not = icmp eq i32 %542, 2
  br i1 %cmp312.not, label %for.cond316.preheader, label %if.then313

for.cond316.preheader:                            ; preds = %vxge_rem_isr.exit
  %543 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %543)
  %544 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %544)
  %cmp318601 = icmp sgt i32 %544, 0
  br i1 %cmp318601, label %for.body319.lr.ph, label %for.cond316.preheader.do.end331_crit_edge

for.cond316.preheader.do.end331_crit_edge:        ; preds = %for.cond316.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end331

for.body319.lr.ph:                                ; preds = %for.cond316.preheader
  %vpaths320 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body319

if.then313:                                       ; preds = %vxge_rem_isr.exit
  call void @__sanitizer_cov_trace_pc() #18
  %napi314 = getelementptr i8, ptr %dev, i32 9048
  call void @napi_disable(ptr noundef %napi314) #16
  br label %out1thread-pre-split

for.body319:                                      ; preds = %for.body319.for.body319_crit_edge, %for.body319.lr.ph
  %i.9602 = phi i32 [ 0, %for.body319.lr.ph ], [ %inc325, %for.body319.for.body319_crit_edge ]
  %545 = ptrtoint ptr %vpaths320 to i32
  call void @__asan_load4_noabort(i32 %545)
  %546 = load ptr, ptr %vpaths320, align 8
  %napi323 = getelementptr %struct.vxge_vpath, ptr %546, i32 %i.9602, i32 1, i32 9
  call void @napi_disable(ptr noundef %napi323) #16
  %inc325 = add nuw nsw i32 %i.9602, 1
  %547 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %547)
  %548 = load i32, ptr %no_of_vpath.i, align 4
  %cmp318 = icmp slt i32 %inc325, %548
  br i1 %cmp318, label %for.body319.for.body319_crit_edge, label %for.body319.out1_crit_edge

for.body319.out1_crit_edge:                       ; preds = %for.body319
  call void @__sanitizer_cov_trace_pc() #18
  br label %out1

for.body319.for.body319_crit_edge:                ; preds = %for.body319
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body319

out1thread-pre-split:                             ; preds = %if.then313, %do.end24
  %549 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %549)
  %.pr571 = load i32, ptr %no_of_vpath.i, align 4
  br label %out1

out1:                                             ; preds = %out1thread-pre-split, %for.body319.out1_crit_edge
  %550 = phi i32 [ %.pr571, %out1thread-pre-split ], [ %548, %for.body319.out1_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %550)
  %cmp13.i = icmp sgt i32 %550, 0
  br i1 %cmp13.i, label %for.body.lr.ph.i551, label %out1.do.end331_crit_edge

out1.do.end331_crit_edge:                         ; preds = %out1
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end331

for.body.lr.ph.i551:                              ; preds = %out1
  %vpaths.i549 = getelementptr i8, ptr %dev, i32 9280
  %stats.i550 = getelementptr i8, ptr %dev, i32 9356
  br label %for.body.i554

for.body.i554:                                    ; preds = %if.end.i561.for.body.i554_crit_edge, %for.body.lr.ph.i551
  %i.014.i = phi i32 [ 0, %for.body.lr.ph.i551 ], [ %inc.i559, %if.end.i561.for.body.i554_crit_edge ]
  %551 = ptrtoint ptr %vpaths.i549 to i32
  call void @__asan_load4_noabort(i32 %551)
  %552 = load ptr, ptr %vpaths.i549, align 8
  %handle.i552 = getelementptr %struct.vxge_vpath, ptr %552, i32 %i.014.i, i32 2
  %553 = ptrtoint ptr %handle.i552 to i32
  call void @__asan_load4_noabort(i32 %553)
  %554 = load ptr, ptr %handle.i552, align 128
  %tobool.not.i553 = icmp eq ptr %554, null
  br i1 %tobool.not.i553, label %for.body.i554.if.end.i561_crit_edge, label %land.lhs.true.i556

for.body.i554.if.end.i561_crit_edge:              ; preds = %for.body.i554
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i561

land.lhs.true.i556:                               ; preds = %for.body.i554
  %is_open.i555 = getelementptr %struct.vxge_vpath, ptr %552, i32 %i.014.i, i32 6
  %555 = ptrtoint ptr %is_open.i555 to i32
  call void @__asan_load4_noabort(i32 %555)
  %556 = load i32, ptr %is_open.i555, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %556)
  %tobool1.not.i = icmp eq i32 %556, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i556.if.end.i561_crit_edge, label %if.then.i558

land.lhs.true.i556.if.end.i561_crit_edge:         ; preds = %land.lhs.true.i556
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i561

if.then.i558:                                     ; preds = %land.lhs.true.i556
  call void @__sanitizer_cov_trace_pc() #18
  %call.i557 = call i32 @vxge_hw_vpath_close(ptr noundef nonnull %554) #16
  %557 = ptrtoint ptr %stats.i550 to i32
  call void @__asan_load4_noabort(i32 %557)
  %558 = load i32, ptr %stats.i550, align 4
  %dec.i = add i32 %558, -1
  store i32 %dec.i, ptr %stats.i550, align 4
  br label %if.end.i561

if.end.i561:                                      ; preds = %if.then.i558, %land.lhs.true.i556.if.end.i561_crit_edge, %for.body.i554.if.end.i561_crit_edge
  %is_open3.i = getelementptr %struct.vxge_vpath, ptr %552, i32 %i.014.i, i32 6
  %559 = ptrtoint ptr %is_open3.i to i32
  call void @__asan_store4_noabort(i32 %559)
  store i32 0, ptr %is_open3.i, align 16
  %560 = ptrtoint ptr %handle.i552 to i32
  call void @__asan_store4_noabort(i32 %560)
  store ptr null, ptr %handle.i552, align 128
  %inc.i559 = add nuw nsw i32 %i.014.i, 1
  %561 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %561)
  %562 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i560 = icmp slt i32 %inc.i559, %562
  br i1 %cmp.i560, label %if.end.i561.for.body.i554_crit_edge, label %if.end.i561.do.end331_crit_edge

if.end.i561.do.end331_crit_edge:                  ; preds = %if.end.i561
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end331

if.end.i561.for.body.i554_crit_edge:              ; preds = %if.end.i561
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i554

do.end331:                                        ; preds = %if.end.i561.do.end331_crit_edge, %out1.do.end331_crit_edge, %for.cond316.preheader.do.end331_crit_edge, %for.body5.i.do.end331_crit_edge, %for.cond2.i.do.end331_crit_edge, %if.end.i542.do.end331_crit_edge, %for.cond.preheader.i535.do.end331_crit_edge, %do.end10
  %ret.2 = phi i32 [ -1, %do.end10 ], [ 0, %if.end.i542.do.end331_crit_edge ], [ -1, %out1.do.end331_crit_edge ], [ 0, %for.cond.preheader.i535.do.end331_crit_edge ], [ -1, %for.cond316.preheader.do.end331_crit_edge ], [ 0, %for.cond2.i.do.end331_crit_edge ], [ 0, %for.body5.i.do.end331_crit_edge ], [ -1, %if.end.i561.do.end331_crit_edge ]
  %call335 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %dev, ptr noundef nonnull @.str.180, i32 noundef 2888) #19
  ret i32 %ret.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_close(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @do_vxge_close(ptr noundef %dev, i32 noundef 1)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_xmit(ptr noundef %skb, ptr noundef %dev) #0 align 64 {
entry:
  %mac_info.i = alloca %struct.macInfo, align 4
  %dtr_priv = alloca ptr, align 4
  %dtr = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dtr_priv) #16
  %0 = ptrtoint ptr %dtr_priv to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %dtr_priv, align 4, !annotation !947
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dtr) #16
  %1 = ptrtoint ptr %dtr to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %dtr, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %dev, ptr noundef nonnull @.str.347, i32 noundef 821) #19
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %2 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %do.end8, label %if.end, !prof !948

do.end8:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.349, ptr noundef %dev) #19
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #16
  br label %cleanup294

if.end:                                           ; preds = %entry
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %state.i406 = getelementptr i8, ptr %dev, i32 3480
  %4 = ptrtoint ptr %state.i406 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i406, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool17.not = icmp eq i32 %6, 0
  br i1 %tobool17.not, label %do.end30, label %if.end37, !prof !948

do.end30:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call34 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.352, ptr noundef %dev) #19
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #16
  br label %cleanup294

if.end37:                                         ; preds = %if.end
  %addr_learn_en = getelementptr i8, ptr %dev, i32 2848
  %7 = ptrtoint ptr %addr_learn_en to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %addr_learn_en, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool38.not = icmp eq i32 %8, 0
  br i1 %tobool38.not, label %if.end37.if.end54_crit_edge, label %if.then39

if.end37.if.end54_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

if.then39:                                        ; preds = %if.end37
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %data, align 4
  %add.ptr = getelementptr i8, ptr %10, i32 6
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %mac_info.i) #16
  %11 = getelementptr inbounds %struct.macInfo, ptr %mac_info.i, i32 0, i32 2
  %12 = getelementptr inbounds %struct.macInfo, ptr %mac_info.i, i32 0, i32 3
  %13 = call ptr @memset(ptr %mac_info.i, i32 255, i32 20)
  %14 = ptrtoint ptr %add.ptr to i32
  call void @__asan_loadN_noabort(i32 %14, i32 6)
  %mac_addr.0.copyload.i = load i48, ptr %add.ptr, align 1
  %mac_addr.0.insert.ext.i = zext i48 %mac_addr.0.copyload.i to i64
  %mac_addr.0.insert.shift.i = shl nuw i64 %mac_addr.0.insert.ext.i, 16
  %no_of_vpath.i = getelementptr i8, ptr %dev, i32 9044
  %15 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp123.i = icmp sgt i32 %16, 0
  br i1 %cmp123.i, label %for.body.lr.ph.i, label %for.end.thread.i

for.end.thread.i:                                 ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #18
  %17 = getelementptr inbounds i8, ptr %mac_info.i, i32 6
  %18 = call ptr @memset(ptr %17, i32 0, i32 6)
  %19 = call ptr @memcpy(ptr %mac_info.i, ptr %add.ptr, i32 6)
  br label %for.end18.i

for.body.lr.ph.i:                                 ; preds = %if.then39
  %vpaths.i = getelementptr i8, ptr %dev, i32 9280
  %20 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vpaths.i, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %vpath_idx.0124.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %mac_addr_list.i.i = getelementptr %struct.vxge_vpath, ptr %21, i32 %vpath_idx.0124.i, i32 12
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %for.body.i
  %entry1.0.in.i.i = phi ptr [ %mac_addr_list.i.i, %for.body.i ], [ %entry1.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %22 = ptrtoint ptr %entry1.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %entry1.0.i.i = load ptr, ptr %entry1.0.in.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %entry1.0.i.i, %mac_addr_list.i.i
  br i1 %cmp.i.not.i.i, label %for.inc.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %macaddr.i.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %entry1.0.i.i, i32 0, i32 1
  %23 = ptrtoint ptr %macaddr.i.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %macaddr.i.i, align 8
  %cmp.i.i = icmp eq i64 %24, %mac_addr.0.insert.shift.i
  br i1 %cmp.i.i, label %for.body.i.i.vxge_learn_mac.exit.thread_crit_edge, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i

for.body.i.i.vxge_learn_mac.exit.thread_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_learn_mac.exit.thread

for.inc.i:                                        ; preds = %for.cond.i.i
  %inc.i = add nuw nsw i32 %vpath_idx.0124.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %16
  br i1 %exitcond.not.i, label %for.body4.lr.ph.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body4.lr.ph.i:                                ; preds = %for.inc.i
  %25 = getelementptr inbounds i8, ptr %mac_info.i, i32 6
  %26 = call ptr @memset(ptr %25, i32 0, i32 14)
  %27 = call ptr @memcpy(ptr %mac_info.i, ptr %add.ptr, i32 6)
  br label %for.body4.i

for.body4.i:                                      ; preds = %for.inc16.i.for.body4.i_crit_edge, %for.body4.lr.ph.i
  %vpath_idx.1126.i = phi i32 [ 0, %for.body4.lr.ph.i ], [ %inc17.i, %for.inc16.i.for.body4.i_crit_edge ]
  %mac_addr_cnt.i = getelementptr %struct.vxge_vpath, ptr %21, i32 %vpath_idx.1126.i, i32 10
  %28 = ptrtoint ptr %mac_addr_cnt.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %mac_addr_cnt.i, align 4
  %conv.i = zext i16 %29 to i32
  %max_mac_addr_cnt.i = getelementptr %struct.vxge_vpath, ptr %21, i32 %vpath_idx.1126.i, i32 4
  %30 = ptrtoint ptr %max_mac_addr_cnt.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %max_mac_addr_cnt.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %conv.i)
  %cmp7.i = icmp sgt i32 %31, %conv.i
  br i1 %cmp7.i, label %if.then9.i, label %for.inc16.i

if.then9.i:                                       ; preds = %for.body4.i
  %32 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %vpath_idx.1126.i, ptr %11, align 4
  %33 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 1, ptr %12, align 4
  %call10.i = call fastcc i32 @vxge_add_mac_addr(ptr noundef %add.ptr.i, ptr noundef nonnull %mac_info.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %cmp11.not.i = icmp eq i32 %call10.i, 0
  br i1 %cmp11.not.i, label %if.then9.i.vxge_learn_mac.exit.thread_crit_edge, label %if.then9.i.do.end46_crit_edge

if.then9.i.do.end46_crit_edge:                    ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end46

if.then9.i.vxge_learn_mac.exit.thread_crit_edge:  ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_learn_mac.exit.thread

for.inc16.i:                                      ; preds = %for.body4.i
  %inc17.i = add nuw nsw i32 %vpath_idx.1126.i, 1
  %exitcond129.not.i = icmp eq i32 %inc17.i, %16
  br i1 %exitcond129.not.i, label %for.inc16.i.for.end18.i_crit_edge, label %for.inc16.i.for.body4.i_crit_edge

for.inc16.i.for.body4.i_crit_edge:                ; preds = %for.inc16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body4.i

for.inc16.i.for.end18.i_crit_edge:                ; preds = %for.inc16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end18.i

for.end18.i:                                      ; preds = %for.inc16.i.for.end18.i_crit_edge, %for.end.thread.i
  %34 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %12, align 4
  %35 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %11, align 4
  %vpaths21.i = getelementptr i8, ptr %dev, i32 9280
  %36 = ptrtoint ptr %vpaths21.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vpaths21.i, align 8
  %mac_addr_cnt23.i = getelementptr inbounds %struct.vxge_vpath, ptr %37, i32 0, i32 10
  %38 = ptrtoint ptr %mac_addr_cnt23.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %mac_addr_cnt23.i, align 4
  %conv24.i = zext i16 %39 to i32
  %max_mac_addr_cnt25.i = getelementptr inbounds %struct.vxge_vpath, ptr %37, i32 0, i32 4
  %40 = ptrtoint ptr %max_mac_addr_cnt25.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %max_mac_addr_cnt25.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %41, i32 %conv24.i)
  %cmp26.i = icmp slt i32 %41, %conv24.i
  br i1 %cmp26.i, label %if.then28.i, label %if.end34.i

if.then28.i:                                      ; preds = %for.end18.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 2047, i16 %39)
  %cmp.i86.i = icmp ugt i16 %39, 2047
  br i1 %cmp.i86.i, label %if.then28.i.vxge_learn_mac.exit.thread_crit_edge, label %if.end.i.i

if.then28.i.vxge_learn_mac.exit.thread_crit_edge: ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_learn_mac.exit.thread

if.end.i.i:                                       ; preds = %if.then28.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %42 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %42, i32 noundef 2848, i32 noundef 32) #20
  %tobool.not.i.i = icmp eq ptr %call7.i.i.i.i, null
  br i1 %tobool.not.i.i, label %58, label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.end.i.i
  %mac_addr_list.i87.i = getelementptr inbounds %struct.vxge_vpath, ptr %37, i32 0, i32 12
  %43 = ptrtoint ptr %mac_addr_list.i87.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %mac_addr_list.i87.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i.i, ptr noundef %mac_addr_list.i87.i, ptr noundef %44) #16
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.end7.i.i.list_add.exit.i.i_crit_edge

if.end7.i.i.list_add.exit.i.i_crit_edge:          ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %call7.i.i.i.i, ptr %prev1.i.i.i.i, align 4
  %46 = ptrtoint ptr %call7.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %44, ptr %call7.i.i.i.i, align 8
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i.i, i32 0, i32 1
  %47 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %mac_addr_list.i87.i, ptr %prev3.i.i.i.i, align 4
  %48 = ptrtoint ptr %mac_addr_list.i87.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile ptr %call7.i.i.i.i, ptr %mac_addr_list.i87.i, align 4
  br label %list_add.exit.i.i

list_add.exit.i.i:                                ; preds = %if.end.i.i.i.i, %if.end7.i.i.list_add.exit.i.i_crit_edge
  %macaddr.i88.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i.i.i, i32 0, i32 1
  %49 = call ptr @memcpy(ptr %macaddr.i88.i, ptr %mac_info.i, i32 6)
  %50 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %12, align 4
  %state9.i.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i.i.i, i32 0, i32 3
  %52 = ptrtoint ptr %state9.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %state9.i.i, align 8
  %53 = ptrtoint ptr %mac_addr_cnt23.i to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %mac_addr_cnt23.i, align 4
  %inc.i.i = add i16 %54, 1
  store i16 %inc.i.i, ptr %mac_addr_cnt23.i, align 4
  %55 = ptrtoint ptr %mac_info.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %mac_info.i, align 4
  %57 = and i32 %56, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool.i.not.i.i = icmp eq i32 %57, 0
  br i1 %tobool.i.not.i.i, label %list_add.exit.i.i.vxge_learn_mac.exit.thread_crit_edge, label %list_add.exit.i.i.vxge_learn_mac.exit.thread.sink.split_crit_edge

list_add.exit.i.i.vxge_learn_mac.exit.thread.sink.split_crit_edge: ; preds = %list_add.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_learn_mac.exit.thread.sink.split

list_add.exit.i.i.vxge_learn_mac.exit.thread_crit_edge: ; preds = %list_add.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_learn_mac.exit.thread

58:                                               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call4.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.308, ptr noundef nonnull @.str.3) #19
  br label %do.end46

if.end34.i:                                       ; preds = %for.end18.i
  %device_id.i = getelementptr inbounds %struct.vxge_vpath, ptr %37, i32 0, i32 3
  %59 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %device_id.i, align 4
  %sh_prom.i = zext i32 %60 to i64
  %shr.i = lshr i64 -9223372036854775808, %sh_prom.i
  %vdev35.i = getelementptr inbounds %struct.vxge_vpath, ptr %37, i32 0, i32 7
  %61 = ptrtoint ptr %vdev35.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %vdev35.i, align 4
  %devh.i = getelementptr inbounds %struct.vxgedev, ptr %62, i32 0, i32 2
  %63 = ptrtoint ptr %devh.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %devh.i, align 8
  %call36.i = tail call i32 @vxge_hw_mgmt_reg_write(ptr noundef %64, i32 noundef 3, i32 noundef 0, i32 noundef 6288, i64 noundef %shr.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36.i)
  %cmp37.not.i = icmp eq i32 %call36.i, 0
  br i1 %cmp37.not.i, label %if.end45.i, label %do.end.i

do.end.i:                                         ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #18
  %65 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %device_id.i, align 4
  %call42.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.383, ptr noundef nonnull @.str.3, i32 noundef %66) #19
  br label %do.end46

if.end45.i:                                       ; preds = %if.end34.i
  %67 = ptrtoint ptr %mac_addr_cnt23.i to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %mac_addr_cnt23.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2047, i16 %68)
  %cmp.i91.i = icmp ugt i16 %68, 2047
  br i1 %cmp.i91.i, label %if.end45.i.vxge_learn_mac.exit.thread_crit_edge, label %if.end.i94.i

if.end45.i.vxge_learn_mac.exit.thread_crit_edge:  ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_learn_mac.exit.thread

if.end.i94.i:                                     ; preds = %if.end45.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %69 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i92.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %69, i32 noundef 2848, i32 noundef 32) #20
  %tobool.not.i93.i = icmp eq ptr %call7.i.i.i92.i, null
  br i1 %tobool.not.i93.i, label %85, label %if.end7.i99.i

if.end7.i99.i:                                    ; preds = %if.end.i94.i
  %mac_addr_list.i97.i = getelementptr inbounds %struct.vxge_vpath, ptr %37, i32 0, i32 12
  %70 = ptrtoint ptr %mac_addr_list.i97.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %mac_addr_list.i97.i, align 4
  %call.i.i.i98.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i92.i, ptr noundef %mac_addr_list.i97.i, ptr noundef %71) #16
  br i1 %call.i.i.i98.i, label %if.end.i.i.i102.i, label %if.end7.i99.i.list_add.exit.i108.i_crit_edge

if.end7.i99.i.list_add.exit.i108.i_crit_edge:     ; preds = %if.end7.i99.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add.exit.i108.i

if.end.i.i.i102.i:                                ; preds = %if.end7.i99.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i.i100.i = getelementptr inbounds %struct.list_head, ptr %71, i32 0, i32 1
  %72 = ptrtoint ptr %prev1.i.i.i100.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %call7.i.i.i92.i, ptr %prev1.i.i.i100.i, align 4
  %73 = ptrtoint ptr %call7.i.i.i92.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %71, ptr %call7.i.i.i92.i, align 8
  %prev3.i.i.i101.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i92.i, i32 0, i32 1
  %74 = ptrtoint ptr %prev3.i.i.i101.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %mac_addr_list.i97.i, ptr %prev3.i.i.i101.i, align 4
  %75 = ptrtoint ptr %mac_addr_list.i97.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile ptr %call7.i.i.i92.i, ptr %mac_addr_list.i97.i, align 4
  br label %list_add.exit.i108.i

list_add.exit.i108.i:                             ; preds = %if.end.i.i.i102.i, %if.end7.i99.i.list_add.exit.i108.i_crit_edge
  %macaddr.i103.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i.i92.i, i32 0, i32 1
  %76 = call ptr @memcpy(ptr %macaddr.i103.i, ptr %mac_info.i, i32 6)
  %77 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %12, align 4
  %state9.i105.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i.i92.i, i32 0, i32 3
  %79 = ptrtoint ptr %state9.i105.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %state9.i105.i, align 8
  %80 = ptrtoint ptr %mac_addr_cnt23.i to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %mac_addr_cnt23.i, align 4
  %inc.i106.i = add i16 %81, 1
  store i16 %inc.i106.i, ptr %mac_addr_cnt23.i, align 4
  %82 = ptrtoint ptr %mac_info.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %mac_info.i, align 4
  %84 = and i32 %83, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %tobool.i.not.i107.i = icmp eq i32 %84, 0
  br i1 %tobool.i.not.i107.i, label %list_add.exit.i108.i.vxge_learn_mac.exit.thread_crit_edge, label %list_add.exit.i108.i.vxge_learn_mac.exit.thread.sink.split_crit_edge

list_add.exit.i108.i.vxge_learn_mac.exit.thread.sink.split_crit_edge: ; preds = %list_add.exit.i108.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_learn_mac.exit.thread.sink.split

list_add.exit.i108.i.vxge_learn_mac.exit.thread_crit_edge: ; preds = %list_add.exit.i108.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_learn_mac.exit.thread

85:                                               ; preds = %if.end.i94.i
  call void @__sanitizer_cov_trace_pc() #18
  %call4.i95.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.308, ptr noundef nonnull @.str.3) #19
  br label %do.end46

vxge_learn_mac.exit.thread.sink.split:            ; preds = %list_add.exit.i108.i.vxge_learn_mac.exit.thread.sink.split_crit_edge, %list_add.exit.i.i.vxge_learn_mac.exit.thread.sink.split_crit_edge
  %mcast_addr_cnt.i109.i = getelementptr inbounds %struct.vxge_vpath, ptr %37, i32 0, i32 11
  %86 = ptrtoint ptr %mcast_addr_cnt.i109.i to i32
  call void @__asan_load2_noabort(i32 %86)
  %87 = load i16, ptr %mcast_addr_cnt.i109.i, align 2
  %inc15.i.i = add i16 %87, 1
  store i16 %inc15.i.i, ptr %mcast_addr_cnt.i109.i, align 2
  br label %vxge_learn_mac.exit.thread

vxge_learn_mac.exit.thread:                       ; preds = %vxge_learn_mac.exit.thread.sink.split, %list_add.exit.i108.i.vxge_learn_mac.exit.thread_crit_edge, %if.end45.i.vxge_learn_mac.exit.thread_crit_edge, %list_add.exit.i.i.vxge_learn_mac.exit.thread_crit_edge, %if.then28.i.vxge_learn_mac.exit.thread_crit_edge, %if.then9.i.vxge_learn_mac.exit.thread_crit_edge, %for.body.i.i.vxge_learn_mac.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ 0, %list_add.exit.i108.i.vxge_learn_mac.exit.thread_crit_edge ], [ 0, %if.end45.i.vxge_learn_mac.exit.thread_crit_edge ], [ 0, %list_add.exit.i.i.vxge_learn_mac.exit.thread_crit_edge ], [ 0, %if.then28.i.vxge_learn_mac.exit.thread_crit_edge ], [ %vpath_idx.1126.i, %if.then9.i.vxge_learn_mac.exit.thread_crit_edge ], [ 0, %vxge_learn_mac.exit.thread.sink.split ], [ %vpath_idx.0124.i, %for.body.i.i.vxge_learn_mac.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %mac_info.i) #16
  br label %if.end54

do.end46:                                         ; preds = %85, %do.end.i, %58, %if.then9.i.do.end46_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %mac_info.i) #16
  %call50 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.355, ptr noundef %dev) #19
  call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #16
  br label %cleanup294

if.end54:                                         ; preds = %vxge_learn_mac.exit.thread, %if.end37.if.end54_crit_edge
  %vpath_no.0 = phi i32 [ 0, %if.end37.if.end54_crit_edge ], [ %retval.0.i.ph, %vxge_learn_mac.exit.thread ]
  %tx_steering_type = getelementptr i8, ptr %dev, i32 2860
  %88 = ptrtoint ptr %tx_steering_type to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %tx_steering_type, align 4
  %90 = zext i32 %89 to i64
  call void @__sanitizer_cov_trace_switch(i64 %90, ptr @__sancov_gen_cov_switch_values.557)
  switch i32 %89, label %if.end54.do.end70_crit_edge [
    i32 4, label %if.then57
    i32 3, label %if.then63
  ]

if.end54.do.end70_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end70

if.then57:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #18
  %queue_mapping.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %91 = ptrtoint ptr %queue_mapping.i to i32
  call void @__asan_load2_noabort(i32 %91)
  %92 = load i16, ptr %queue_mapping.i, align 8
  %conv = zext i16 %92 to i32
  br label %do.end70

if.then63:                                        ; preds = %if.end54
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %93 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %93)
  %94 = load i16, ptr %protocol.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %94)
  %cmp.i = icmp eq i16 %94, 2048
  br i1 %cmp.i, label %if.then.i, label %if.then63.do.end70_crit_edge

if.then63.do.end70_crit_edge:                     ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end70

if.then.i:                                        ; preds = %if.then63
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %95 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %head.i.i.i, align 8
  %network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %97 = ptrtoint ptr %network_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %97)
  %98 = load i16, ptr %network_header.i.i.i, align 4
  %conv.i.i.i = zext i16 %98 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %96, i32 %conv.i.i.i
  %frag_off.i.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i.i, i32 0, i32 4
  %99 = ptrtoint ptr %frag_off.i.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %frag_off.i.i, align 2
  %101 = and i16 %100, 16383
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %101)
  %cmp.i.not.i = icmp eq i16 %101, 0
  br i1 %cmp.i.not.i, label %if.then3.i, label %if.then.i.do.end70_crit_edge

if.then.i.do.end70_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end70

if.then3.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %102 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load1_noabort(i32 %102)
  %bf.load.i = load i8, ptr %add.ptr.i.i.i, align 4
  %bf.clear.i = shl i8 %bf.load.i, 2
  %103 = and i8 %bf.clear.i, 60
  %mul.i = zext i8 %103 to i32
  %add.ptr.i407 = getelementptr i8, ptr %add.ptr.i.i.i, i32 %mul.i
  %no_of_vpath.i408 = getelementptr i8, ptr %dev, i32 9044
  %104 = ptrtoint ptr %no_of_vpath.i408 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %no_of_vpath.i408, align 4
  %106 = ptrtoint ptr %add.ptr.i407 to i32
  call void @__asan_load2_noabort(i32 %106)
  %107 = load i16, ptr %add.ptr.i407, align 4
  %conv6.i = zext i16 %107 to i32
  %dest.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i407, i32 0, i32 1
  %108 = ptrtoint ptr %dest.i to i32
  call void @__asan_load2_noabort(i32 %108)
  %109 = load i16, ptr %dest.i, align 2
  %conv7.i = zext i16 %109 to i32
  %add.i = add nuw nsw i32 %conv7.i, %conv6.i
  %conv8.i = and i32 %105, 65535
  %sub.i = add nsw i32 %conv8.i, -1
  %arrayidx.i = getelementptr %struct.vxgedev, ptr %add.ptr.i, i32 0, i32 26, i32 %sub.i
  %110 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %arrayidx.i, align 1
  %conv9.i = zext i8 %111 to i32
  %and.i = and i32 %add.i, %conv9.i
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i, i32 %conv8.i)
  %cmp13.not.i = icmp ult i32 %and.i, %conv8.i
  %spec.select.i = select i1 %cmp13.not.i, i32 %and.i, i32 %sub.i
  %phi.bo.i = and i32 %spec.select.i, 65535
  br label %do.end70

do.end70:                                         ; preds = %if.then3.i, %if.then.i.do.end70_crit_edge, %if.then63.do.end70_crit_edge, %if.then57, %if.end54.do.end70_crit_edge
  %vpath_no.1 = phi i32 [ %conv, %if.then57 ], [ %vpath_no.0, %if.end54.do.end70_crit_edge ], [ 0, %if.then63.do.end70_crit_edge ], [ 0, %if.then.i.do.end70_crit_edge ], [ %phi.bo.i, %if.then3.i ]
  %call74 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.358, ptr noundef %dev, i32 noundef %vpath_no.1) #19
  %no_of_vpath = getelementptr i8, ptr %dev, i32 9044
  %112 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %vpath_no.1, i32 %113)
  %cmp77.not = icmp slt i32 %vpath_no.1, %113
  %spec.store.select = select i1 %cmp77.not, i32 %vpath_no.1, i32 0
  %vpaths = getelementptr i8, ptr %dev, i32 9280
  %114 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %vpaths, align 8
  %arrayidx = getelementptr %struct.vxge_vpath, ptr %115, i32 %spec.store.select
  %handle = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx, i32 0, i32 2
  %116 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %handle, align 8
  %txq = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx, i32 0, i32 3
  %118 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %txq, align 4
  %state.i409 = getelementptr inbounds %struct.netdev_queue, ptr %119, i32 0, i32 13
  %120 = ptrtoint ptr %state.i409 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %state.i409, align 4
  %and1.i.i410 = and i32 %121, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i410)
  %tobool.i.not = icmp eq i32 %and1.i.i410, 0
  br i1 %tobool.i.not, label %if.end84, label %do.end70.cleanup294_crit_edge

do.end70.cleanup294_crit_edge:                    ; preds = %do.end70
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup294

if.end84:                                         ; preds = %do.end70
  %call85 = call i32 @vxge_hw_fifo_free_txdl_count_get(ptr noundef %117) #16
  %122 = zext i32 %call85 to i64
  call void @__sanitizer_cov_trace_switch(i64 %122, ptr @__sancov_gen_cov_switch_values.558)
  switch i32 %call85, label %if.end84.if.end104_crit_edge [
    i32 0, label %do.end92
    i32 1, label %if.then102
  ]

if.end84.if.end104_crit_edge:                     ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end104

do.end92:                                         ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #18
  %call96 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.361, ptr noundef %dev) #19
  %stats = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx, i32 0, i32 9
  %txd_not_free = getelementptr inbounds %struct.vxge_fifo_stats, ptr %stats, i32 0, i32 4
  %123 = ptrtoint ptr %txd_not_free to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %txd_not_free, align 4
  %inc = add i32 %124, 1
  store i32 %inc, ptr %txd_not_free, align 4
  br label %_exit0

if.then102:                                       ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #18
  %125 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %txq, align 4
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %126, i32 0, i32 13
  call void @_set_bit(i32 noundef 0, ptr noundef %state.i) #16
  br label %if.end104

if.end104:                                        ; preds = %if.then102, %if.end84.if.end104_crit_edge
  %call105 = call i32 @vxge_hw_fifo_txdl_reserve(ptr noundef %117, ptr noundef nonnull %dtr, ptr noundef nonnull %dtr_priv) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call105)
  %cmp106.not = icmp eq i32 %call105, 0
  br i1 %cmp106.not, label %do.end131, label %do.end118, !prof !949

do.end118:                                        ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #18
  %call122 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.364, ptr noundef %dev) #19
  %stats125 = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx, i32 0, i32 9
  %txd_out_of_desc = getelementptr inbounds %struct.vxge_fifo_stats, ptr %stats125, i32 0, i32 5
  %127 = ptrtoint ptr %txd_out_of_desc to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %txd_out_of_desc, align 8
  %inc126 = add i32 %128, 1
  store i32 %inc126, ptr %txd_out_of_desc, align 8
  br label %_exit0

do.end131:                                        ; preds = %if.end104
  %129 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %dtr, align 4
  %131 = ptrtoint ptr %dtr_priv to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %dtr_priv, align 4
  %call135 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.367, ptr noundef %dev, ptr noundef nonnull @.str.347, i32 noundef 892, ptr noundef %117, ptr noundef %130, ptr noundef %132) #19
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %133 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %133, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load)
  %tobool138.not = icmp sgt i32 %bf.load, -1
  br i1 %tobool138.not, label %do.end131.if.end140_crit_edge, label %if.then139

do.end131.if.end140_crit_edge:                    ; preds = %do.end131
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end140

if.then139:                                       ; preds = %do.end131
  call void @__sanitizer_cov_trace_pc() #18
  %vlan_tci = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %134 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %134)
  %135 = load i16, ptr %vlan_tci, align 2
  %136 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %dtr, align 4
  %control_1.i = getelementptr inbounds %struct.vxge_hw_fifo_txd, ptr %137, i32 0, i32 1
  %138 = ptrtoint ptr %control_1.i to i32
  call void @__asan_load8_noabort(i32 %138)
  %139 = load i64, ptr %control_1.i, align 8
  %conv.i411 = zext i16 %135 to i64
  %shl.i = shl nuw nsw i64 %conv.i411, 32
  %or.i = or i64 %139, %shl.i
  %or2.i = or i64 %or.i, 281474976710656
  store i64 %or2.i, ptr %control_1.i, align 8
  br label %if.end140

if.end140:                                        ; preds = %if.then139, %do.end131.if.end140_crit_edge
  %140 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %len, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %142 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %data_len.i, align 8
  %sub.i412 = sub i32 %141, %143
  %pdev = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx, i32 0, i32 1
  %144 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %pdev, align 4
  %dev142 = getelementptr inbounds %struct.pci_dev, ptr %145, i32 0, i32 44
  %data143 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %146 = ptrtoint ptr %data143 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %data143, align 4
  %call.i = call zeroext i1 @is_vmalloc_addr(ptr noundef %147) #16
  br i1 %call.i, label %land.rhs.i, label %if.end39.i

land.rhs.i:                                       ; preds = %if.end140
  %.b1.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.dma_map_single_attrs.exit_crit_edge, label %if.then.i414, !prof !949

land.rhs.i.dma_map_single_attrs.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dma_map_single_attrs.exit

if.then.i414:                                     ; preds = %land.rhs.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i = call ptr @dev_driver_string(ptr noundef %dev142) #16
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %145, i32 0, i32 44, i32 3
  %148 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i413 = icmp eq ptr %149, null
  br i1 %tobool.not.i.i413, label %if.end.i.i415, label %if.then.i414.dev_name.exit.i_crit_edge

if.then.i414.dev_name.exit.i_crit_edge:           ; preds = %if.then.i414
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit.i

if.end.i.i415:                                    ; preds = %if.then.i414
  call void @__sanitizer_cov_trace_pc() #18
  %150 = ptrtoint ptr %dev142 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %dev142, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i415, %if.then.i414.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %151, %if.end.i.i415 ], [ %149, %if.then.i414.dev_name.exit.i_crit_edge ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.268, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.269, ptr noundef %call16.i, ptr noundef %retval.0.i.i) #16
  br label %dma_map_single_attrs.exit

if.end39.i:                                       ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #18
  call void @debug_dma_map_single(ptr noundef %dev142, ptr noundef %147, i32 noundef %sub.i412) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %152 = load ptr, ptr @mem_map, align 4
  %153 = ptrtoint ptr %147 to i32
  %sub.i416 = add i32 %153, 1073741824
  %shr.i417 = lshr i32 %sub.i416, 12
  %add.ptr.i418 = getelementptr %struct.page, ptr %152, i32 %shr.i417
  %and.i419 = and i32 %153, 4095
  %call41.i = call i32 @dma_map_page_attrs(ptr noundef %dev142, ptr noundef %add.ptr.i418, i32 noundef %and.i419, i32 noundef %sub.i412, i32 noundef 1, i32 noundef 0) #16
  br label %dma_map_single_attrs.exit

dma_map_single_attrs.exit:                        ; preds = %if.end39.i, %dev_name.exit.i, %land.rhs.i.dma_map_single_attrs.exit_crit_edge
  %retval.0.i420 = phi i32 [ %call41.i, %if.end39.i ], [ -1, %dev_name.exit.i ], [ -1, %land.rhs.i.dma_map_single_attrs.exit_crit_edge ]
  %154 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %pdev, align 4
  %dev147 = getelementptr inbounds %struct.pci_dev, ptr %155, i32 0, i32 44
  call void @debug_dma_mapping_error(ptr noundef %dev147, i32 noundef %retval.0.i420) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i420)
  %cmp.i421 = icmp eq i32 %retval.0.i420, -1
  br i1 %cmp.i421, label %if.then157, label %if.end160

if.then157:                                       ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #18
  %156 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %dtr, align 4
  call void @vxge_hw_fifo_txdl_free(ptr noundef %117, ptr noundef %157) #16
  %stats158 = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx, i32 0, i32 9
  %pci_map_fail = getelementptr inbounds %struct.vxge_fifo_stats, ptr %stats158, i32 0, i32 6
  %158 = ptrtoint ptr %pci_map_fail to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %pci_map_fail, align 4
  %inc159 = add i32 %159, 1
  store i32 %inc159, ptr %pci_map_fail, align 4
  br label %_exit0

if.end160:                                        ; preds = %dma_map_single_attrs.exit
  %conv145 = zext i32 %retval.0.i420 to i64
  %160 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %dtr, align 4
  %host_control.i = getelementptr inbounds %struct.vxge_hw_fifo_txd, ptr %161, i32 0, i32 3
  %162 = ptrtoint ptr %host_control.i to i32
  call void @__asan_load8_noabort(i32 %162)
  %163 = load i64, ptr %host_control.i, align 8
  %conv.i422 = trunc i64 %163 to i32
  %164 = inttoptr i32 %conv.i422 to ptr
  %165 = ptrtoint ptr %164 to i32
  call void @__asan_store4_noabort(i32 %165)
  store ptr %skb, ptr %164, align 4
  %dma_buffers = getelementptr inbounds %struct.vxge_tx_priv, ptr %164, i32 0, i32 1
  %166 = ptrtoint ptr %dma_buffers to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 %retval.0.i420, ptr %dma_buffers, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %167 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %168, i32 0, i32 2
  %169 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %169)
  %170 = load i8, ptr %nr_frags, align 2
  %conv166 = zext i8 %170 to i32
  %call174 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.370, ptr noundef %dev, ptr noundef nonnull @.str.347, i32 noundef 919, ptr noundef %skb, ptr noundef %164, i32 noundef %conv166, i64 noundef %conv145) #19
  %171 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %dtr, align 4
  call void @vxge_hw_fifo_txdl_buffer_set(ptr noundef %117, ptr noundef %172, i32 noundef 0, i32 noundef %retval.0.i420, i32 noundef %sub.i412) #16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %170)
  %cmp181450.not = icmp eq i8 %170, 0
  br i1 %cmp181450.not, label %if.end160.for.end_crit_edge, label %for.body.preheader

if.end160.for.end_crit_edge:                      ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.preheader:                               ; preds = %if.end160
  %173 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %end.i, align 4
  %frags = getelementptr inbounds %struct.skb_shared_info, ptr %174, i32 0, i32 12
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.preheader
  %frag.0454 = phi ptr [ %frag.1, %for.inc.for.body_crit_edge ], [ %frags, %for.body.preheader ]
  %i.0452 = phi i32 [ %inc222, %for.inc.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %j.0451 = phi i32 [ %j.1, %for.inc.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %bv_len.i = getelementptr inbounds %struct.bio_vec, ptr %frag.0454, i32 0, i32 1
  %175 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %bv_len.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %176)
  %tobool184.not = icmp eq i32 %176, 0
  br i1 %tobool184.not, label %for.body.for.inc_crit_edge, label %if.end186

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end186:                                        ; preds = %for.body
  %177 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %pdev, align 4
  %dev188 = getelementptr inbounds %struct.pci_dev, ptr %178, i32 0, i32 44
  %179 = ptrtoint ptr %frag.0454 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %frag.0454, align 4
  %bv_offset.i.i = getelementptr inbounds %struct.bio_vec, ptr %frag.0454, i32 0, i32 2
  %181 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %bv_offset.i.i, align 4
  %call2.i = call i32 @dma_map_page_attrs(ptr noundef %dev188, ptr noundef %180, i32 noundef %182, i32 noundef %176, i32 noundef 1, i32 noundef 0) #16
  %183 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %pdev, align 4
  %dev193 = getelementptr inbounds %struct.pci_dev, ptr %184, i32 0, i32 44
  call void @debug_dma_mapping_error(ptr noundef %dev193, i32 noundef %call2.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i)
  %cmp.i425.not = icmp eq i32 %call2.i, -1
  br i1 %cmp.i425.not, label %do.end264, label %do.end208, !prof !948

do.end208:                                        ; preds = %if.end186
  call void @__sanitizer_cov_trace_pc() #18
  %conv191 = zext i32 %call2.i to i64
  %call212 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.373, ptr noundef %dev, ptr noundef nonnull @.str.347, i32 noundef 939, i32 noundef %i.0452, i64 noundef %conv191) #19
  %arrayidx217 = getelementptr %struct.vxge_tx_priv, ptr %164, i32 0, i32 1, i32 %j.0451
  %185 = ptrtoint ptr %arrayidx217 to i32
  call void @__asan_store4_noabort(i32 %185)
  store i32 %call2.i, ptr %arrayidx217, align 4
  %186 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %dtr, align 4
  %inc218 = add i32 %j.0451, 1
  %188 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %bv_len.i, align 4
  call void @vxge_hw_fifo_txdl_buffer_set(ptr noundef %117, ptr noundef %187, i32 noundef %j.0451, i32 noundef %call2.i, i32 noundef %189) #16
  %add.ptr221 = getelementptr %struct.bio_vec, ptr %frag.0454, i32 1
  br label %for.inc

for.inc:                                          ; preds = %do.end208, %for.body.for.inc_crit_edge
  %j.1 = phi i32 [ %inc218, %do.end208 ], [ %j.0451, %for.body.for.inc_crit_edge ]
  %frag.1 = phi ptr [ %add.ptr221, %do.end208 ], [ %frag.0454, %for.body.for.inc_crit_edge ]
  %inc222 = add nuw nsw i32 %i.0452, 1
  %exitcond.not = icmp eq i32 %inc222, %conv166
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end160.for.end_crit_edge
  %190 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %end.i, align 4
  %gso_type = getelementptr inbounds %struct.skb_shared_info, ptr %191, i32 0, i32 8
  %192 = ptrtoint ptr %gso_type to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %gso_type, align 8
  %and = and i32 %193, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool224.not = icmp eq i32 %and, 0
  br i1 %tobool224.not, label %for.end.if.end242_crit_edge, label %if.then225

for.end.if.end242_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end242

if.then225:                                       ; preds = %for.end
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %191, i32 0, i32 4
  %194 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %194)
  %195 = load i16, ptr %gso_size, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %195)
  %tobool228.not = icmp eq i16 %195, 0
  br i1 %tobool228.not, label %if.then225._exit1_crit_edge, label %cleanup.thread

if.then225._exit1_crit_edge:                      ; preds = %if.then225
  call void @__sanitizer_cov_trace_pc() #18
  br label %_exit1

cleanup.thread:                                   ; preds = %if.then225
  call void @__sanitizer_cov_trace_pc() #18
  %conv227 = zext i16 %195 to i32
  %call237 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.376, ptr noundef %dev, ptr noundef nonnull @.str.347, i32 noundef 953, i32 noundef %conv227) #19
  %196 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %dtr, align 4
  %198 = ptrtoint ptr %197 to i32
  call void @__asan_load8_noabort(i32 %198)
  %199 = load i64, ptr %197, align 8
  %conv.i430445 = zext i16 %195 to i64
  %shl.i431 = shl nuw nsw i64 %conv.i430445, 16
  %or.i432 = or i64 %shl.i431, %199
  %or2.i433 = or i64 %or.i432, 8589934592
  store i64 %or2.i433, ptr %197, align 8
  br label %if.end242

if.end242:                                        ; preds = %cleanup.thread, %for.end.if.end242_crit_edge
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %200 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %200)
  %bf.load243 = load i16, ptr %ip_summed, align 8
  %201 = and i16 %bf.load243, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %201)
  %cmp247 = icmp eq i16 %201, 1536
  br i1 %cmp247, label %if.then249, label %if.end242.if.end250_crit_edge

if.end242.if.end250_crit_edge:                    ; preds = %if.end242
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end250

if.then249:                                       ; preds = %if.end242
  call void @__sanitizer_cov_trace_pc() #18
  %202 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %dtr, align 4
  %control_1.i434 = getelementptr inbounds %struct.vxge_hw_fifo_txd, ptr %203, i32 0, i32 1
  %204 = ptrtoint ptr %control_1.i434 to i32
  call void @__asan_load8_noabort(i32 %204)
  %205 = load i64, ptr %control_1.i434, align 8
  %or.i435 = or i64 %205, 504403158265495552
  store i64 %or.i435, ptr %control_1.i434, align 8
  br label %if.end250

if.end250:                                        ; preds = %if.then249, %if.end242.if.end250_crit_edge
  %206 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %dtr, align 4
  call void @vxge_hw_fifo_txdl_post(ptr noundef %117, ptr noundef %207) #16
  %call258 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %dev, ptr noundef nonnull @.str.347, i32 noundef 972) #19
  br label %cleanup294

do.end264:                                        ; preds = %if.end186
  call void @__sanitizer_cov_trace_pc() #18
  %call268 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.381, ptr noundef %dev) #19
  br label %_exit1

_exit1:                                           ; preds = %do.end264, %if.then225._exit1_crit_edge
  %i.0447 = phi i32 [ %conv166, %if.then225._exit1_crit_edge ], [ %i.0452, %do.end264 ]
  %208 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %end.i, align 4
  %210 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %pdev, align 4
  %dev275 = getelementptr inbounds %struct.pci_dev, ptr %211, i32 0, i32 44
  %212 = ptrtoint ptr %dma_buffers to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %dma_buffers, align 4
  %214 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %len, align 4
  %216 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %data_len.i, align 8
  %sub.i439 = sub i32 %215, %217
  call void @dma_unmap_page_attrs(ptr noundef %dev275, i32 noundef %213, i32 noundef %sub.i439, i32 noundef 1, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %i.0447)
  %cmp281455 = icmp ugt i32 %i.0447, 1
  br i1 %cmp281455, label %for.body283.preheader, label %_exit1.for.end292_crit_edge

_exit1.for.end292_crit_edge:                      ; preds = %_exit1
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end292

for.body283.preheader:                            ; preds = %_exit1
  %frags272 = getelementptr inbounds %struct.skb_shared_info, ptr %209, i32 0, i32 12
  br label %for.body283

for.body283:                                      ; preds = %for.body283.for.body283_crit_edge, %for.body283.preheader
  %frag.2457 = phi ptr [ %add.ptr289, %for.body283.for.body283_crit_edge ], [ %frags272, %for.body283.preheader ]
  %j.2456 = phi i32 [ %inc291, %for.body283.for.body283_crit_edge ], [ 1, %for.body283.preheader ]
  %218 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %pdev, align 4
  %dev285 = getelementptr inbounds %struct.pci_dev, ptr %219, i32 0, i32 44
  %arrayidx287 = getelementptr %struct.vxge_tx_priv, ptr %164, i32 0, i32 1, i32 %j.2456
  %220 = ptrtoint ptr %arrayidx287 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %arrayidx287, align 4
  %bv_len.i440 = getelementptr inbounds %struct.bio_vec, ptr %frag.2457, i32 0, i32 1
  %222 = ptrtoint ptr %bv_len.i440 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %bv_len.i440, align 4
  call void @dma_unmap_page_attrs(ptr noundef %dev285, i32 noundef %221, i32 noundef %223, i32 noundef 1, i32 noundef 0) #16
  %add.ptr289 = getelementptr %struct.bio_vec, ptr %frag.2457, i32 1
  %inc291 = add nuw nsw i32 %j.2456, 1
  %exitcond461.not = icmp eq i32 %inc291, %i.0447
  br i1 %exitcond461.not, label %for.body283.for.end292_crit_edge, label %for.body283.for.body283_crit_edge

for.body283.for.body283_crit_edge:                ; preds = %for.body283
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body283

for.body283.for.end292_crit_edge:                 ; preds = %for.body283
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end292

for.end292:                                       ; preds = %for.body283.for.end292_crit_edge, %_exit1.for.end292_crit_edge
  %224 = ptrtoint ptr %dtr to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %dtr, align 4
  call void @vxge_hw_fifo_txdl_free(ptr noundef %117, ptr noundef %225) #16
  br label %_exit0

_exit0:                                           ; preds = %for.end292, %if.then157, %do.end118, %do.end92
  %226 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %txq, align 4
  %state.i405 = getelementptr inbounds %struct.netdev_queue, ptr %227, i32 0, i32 13
  call void @_set_bit(i32 noundef 0, ptr noundef %state.i405) #16
  call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #16
  br label %cleanup294

cleanup294:                                       ; preds = %_exit0, %if.end250, %do.end70.cleanup294_crit_edge, %do.end46, %do.end30, %do.end8
  %retval.0 = phi i32 [ 0, %do.end8 ], [ 0, %do.end30 ], [ 0, %do.end46 ], [ 0, %_exit0 ], [ 0, %if.end250 ], [ 16, %do.end70.cleanup294_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dtr) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dtr_priv) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_set_multicast(ptr noundef %dev) #0 align 64 {
entry:
  %mac_info = alloca %struct.macInfo, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %mac_info) #16
  %0 = getelementptr inbounds %struct.macInfo, ptr %mac_info, i32 0, i32 2
  %1 = getelementptr inbounds %struct.macInfo, ptr %mac_info, i32 0, i32 3
  %2 = call ptr @memset(ptr %mac_info, i32 255, i32 20)
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.388, i32 noundef 1136) #19
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %state.i = getelementptr i8, ptr %dev, i32 3480
  %3 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %state.i, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !948

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 8
  %and = and i32 %7, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool10.not = icmp eq i32 %and, 0
  %all_multi_flg30 = getelementptr i8, ptr %dev, i32 3584
  %8 = ptrtoint ptr %all_multi_flg30 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %all_multi_flg30, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool31.not = icmp eq i16 %9, 0
  br i1 %tobool10.not, label %land.lhs.true29, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  br i1 %tobool31.not, label %for.cond.preheader, label %land.lhs.true.if.end59_crit_edge

land.lhs.true.if.end59_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end59

for.cond.preheader:                               ; preds = %land.lhs.true
  %no_of_vpath = getelementptr i8, ptr %dev, i32 9044
  %10 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp373 = icmp sgt i32 %11, 0
  br i1 %cmp373, label %for.body.lr.ph, label %for.cond.preheader.if.end59_crit_edge

for.cond.preheader.if.end59_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end59

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %vpaths = getelementptr i8, ptr %dev, i32 9280
  br label %for.body

for.body:                                         ; preds = %if.end24.for.body_crit_edge, %for.body.lr.ph
  %i.0374 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end24.for.body_crit_edge ]
  %12 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vpaths, align 8
  %handle = getelementptr %struct.vxge_vpath, ptr %13, i32 %i.0374, i32 2
  %14 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %handle, align 128
  %call13 = tail call i32 @vxge_hw_vpath_mcast_enable(ptr noundef %15) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp14.not = icmp eq i32 %call13, 0
  br i1 %cmp14.not, label %for.body.if.end24_crit_edge, label %do.end19

for.body.if.end24_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

do.end19:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.390, i32 noundef %call13) #19
  br label %if.end24

if.end24:                                         ; preds = %do.end19, %for.body.if.end24_crit_edge
  %16 = ptrtoint ptr %all_multi_flg30 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 1, ptr %all_multi_flg30, align 8
  %inc = add nuw nsw i32 %i.0374, 1
  %17 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %18
  br i1 %cmp, label %if.end24.for.body_crit_edge, label %if.end24.if.end59_crit_edge

if.end24.if.end59_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end59

if.end24.for.body_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

land.lhs.true29:                                  ; preds = %if.end
  br i1 %tobool31.not, label %land.lhs.true29.if.end59_crit_edge, label %for.cond33.preheader

land.lhs.true29.if.end59_crit_edge:               ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end59

for.cond33.preheader:                             ; preds = %land.lhs.true29
  %no_of_vpath34 = getelementptr i8, ptr %dev, i32 9044
  %19 = ptrtoint ptr %no_of_vpath34 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %no_of_vpath34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp35375 = icmp sgt i32 %20, 0
  br i1 %cmp35375, label %for.body37.lr.ph, label %for.cond33.preheader.if.end59_crit_edge

for.cond33.preheader.if.end59_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end59

for.body37.lr.ph:                                 ; preds = %for.cond33.preheader
  %vpaths38 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body37

for.body37:                                       ; preds = %if.end53.for.body37_crit_edge, %for.body37.lr.ph
  %i.1376 = phi i32 [ 0, %for.body37.lr.ph ], [ %inc56, %if.end53.for.body37_crit_edge ]
  %21 = ptrtoint ptr %vpaths38 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vpaths38, align 8
  %handle40 = getelementptr %struct.vxge_vpath, ptr %22, i32 %i.1376, i32 2
  %23 = ptrtoint ptr %handle40 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %handle40, align 128
  %call41 = tail call i32 @vxge_hw_vpath_mcast_disable(ptr noundef %24) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %cmp42.not = icmp eq i32 %call41, 0
  br i1 %cmp42.not, label %for.body37.if.end53_crit_edge, label %do.end48

for.body37.if.end53_crit_edge:                    ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end53

do.end48:                                         ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #18
  %call50 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.393, i32 noundef %call41) #19
  br label %if.end53

if.end53:                                         ; preds = %do.end48, %for.body37.if.end53_crit_edge
  %25 = ptrtoint ptr %all_multi_flg30 to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 0, ptr %all_multi_flg30, align 8
  %inc56 = add nuw nsw i32 %i.1376, 1
  %26 = ptrtoint ptr %no_of_vpath34 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %no_of_vpath34, align 4
  %cmp35 = icmp slt i32 %inc56, %27
  br i1 %cmp35, label %if.end53.for.body37_crit_edge, label %if.end53.if.end59_crit_edge

if.end53.if.end59_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end59

if.end53.for.body37_crit_edge:                    ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body37

if.end59:                                         ; preds = %if.end53.if.end59_crit_edge, %for.cond33.preheader.if.end59_crit_edge, %land.lhs.true29.if.end59_crit_edge, %if.end24.if.end59_crit_edge, %for.cond.preheader.if.end59_crit_edge, %land.lhs.true.if.end59_crit_edge
  %addr_learn_en = getelementptr i8, ptr %dev, i32 2848
  %28 = ptrtoint ptr %addr_learn_en to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %addr_learn_en, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool60.not = icmp eq i32 %29, 0
  br i1 %tobool60.not, label %for.cond62.preheader, label %if.end59.if.end97_crit_edge

if.end59.if.end97_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end97

for.cond62.preheader:                             ; preds = %if.end59
  %no_of_vpath63 = getelementptr i8, ptr %dev, i32 9044
  %30 = ptrtoint ptr %no_of_vpath63 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %no_of_vpath63, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp64377 = icmp sgt i32 %31, 0
  br i1 %cmp64377, label %for.body66.lr.ph, label %for.cond62.preheader.if.end97_crit_edge

for.cond62.preheader.if.end97_crit_edge:          ; preds = %for.cond62.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end97

for.body66.lr.ph:                                 ; preds = %for.cond62.preheader
  %vpaths67 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body66

for.body66:                                       ; preds = %for.inc94.for.body66_crit_edge, %for.body66.lr.ph
  %i.2378 = phi i32 [ 0, %for.body66.lr.ph ], [ %inc95, %for.inc94.for.body66_crit_edge ]
  %32 = ptrtoint ptr %vpaths67 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %vpaths67, align 8
  %34 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags, align 8
  %and70 = and i32 %35, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70)
  %tobool71.not = icmp eq i32 %and70, 0
  %handle76 = getelementptr %struct.vxge_vpath, ptr %33, i32 %i.2378, i32 2
  %36 = ptrtoint ptr %handle76 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %handle76, align 128
  br i1 %tobool71.not, label %if.else75, label %if.then72

if.then72:                                        ; preds = %for.body66
  call void @__sanitizer_cov_trace_pc() #18
  %call74 = tail call i32 @vxge_hw_vpath_promisc_enable(ptr noundef %37) #16
  br label %if.end78

if.else75:                                        ; preds = %for.body66
  call void @__sanitizer_cov_trace_pc() #18
  %call77 = tail call i32 @vxge_hw_vpath_promisc_disable(ptr noundef %37) #16
  br label %if.end78

if.end78:                                         ; preds = %if.else75, %if.then72
  %status.0 = phi i32 [ %call74, %if.then72 ], [ %call77, %if.else75 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %status.0)
  %cmp79.not = icmp eq i32 %status.0, 0
  br i1 %cmp79.not, label %if.end78.for.inc94_crit_edge, label %do.end85

if.end78.for.inc94_crit_edge:                     ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc94

do.end85:                                         ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #18
  %38 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flags, align 8
  %and88 = and i32 %39, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88)
  %tobool89.not = icmp eq i32 %and88, 0
  %cond = select i1 %tobool89.not, ptr @.str.399, ptr @.str.398
  %call90 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.396, ptr noundef nonnull %cond, i32 noundef %status.0) #19
  br label %for.inc94

for.inc94:                                        ; preds = %do.end85, %if.end78.for.inc94_crit_edge
  %inc95 = add nuw nsw i32 %i.2378, 1
  %40 = ptrtoint ptr %no_of_vpath63 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %no_of_vpath63, align 4
  %cmp64 = icmp slt i32 %inc95, %41
  br i1 %cmp64, label %for.inc94.for.body66_crit_edge, label %for.inc94.if.end97_crit_edge

for.inc94.if.end97_crit_edge:                     ; preds = %for.inc94
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end97

for.inc94.for.body66_crit_edge:                   ; preds = %for.inc94
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body66

if.end97:                                         ; preds = %for.inc94.if.end97_crit_edge, %for.cond62.preheader.if.end97_crit_edge, %if.end59.if.end97_crit_edge
  %42 = call ptr @memset(ptr %mac_info, i32 0, i32 20)
  %all_multi_flg98 = getelementptr i8, ptr %dev, i32 3584
  %43 = ptrtoint ptr %all_multi_flg98 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %all_multi_flg98, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %44)
  %tobool99.not = icmp eq i16 %44, 0
  br i1 %tobool99.not, label %land.lhs.true100, label %if.end97.do.end266_crit_edge

if.end97.do.end266_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end266

land.lhs.true100:                                 ; preds = %if.end97
  %mc = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 66
  %count = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 66, i32 1
  %45 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool101.not = icmp eq i32 %46, 0
  br i1 %tobool101.not, label %land.lhs.true100.do.end266_crit_edge, label %if.then102

land.lhs.true100.do.end266_crit_edge:             ; preds = %land.lhs.true100
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end266

if.then102:                                       ; preds = %land.lhs.true100
  %vpaths103 = getelementptr i8, ptr %dev, i32 9280
  %47 = ptrtoint ptr %vpaths103 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %vpaths103, align 8
  %mcast_addr_cnt = getelementptr inbounds %struct.vxge_vpath, ptr %48, i32 0, i32 11
  %49 = ptrtoint ptr %mcast_addr_cnt to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %mcast_addr_cnt, align 2
  %conv105 = zext i16 %50 to i32
  %mac_addr_list = getelementptr inbounds %struct.vxge_vpath, ptr %48, i32 0, i32 12
  %mac_addr_cnt = getelementptr inbounds %struct.vxge_vpath, ptr %48, i32 0, i32 10
  %51 = ptrtoint ptr %mac_addr_cnt to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %mac_addr_cnt, align 4
  %conv112 = zext i16 %52 to i32
  %sub = sub i32 %46, %conv105
  %add = add i32 %sub, %conv112
  %max_mac_addr_cnt = getelementptr inbounds %struct.vxge_vpath, ptr %48, i32 0, i32 4
  %53 = ptrtoint ptr %max_mac_addr_cnt to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %max_mac_addr_cnt, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %54)
  %cmp115 = icmp sgt i32 %add, %54
  br i1 %cmp115, label %if.then102._set_all_mcast_crit_edge, label %for.cond119.preheader

if.then102._set_all_mcast_crit_edge:              ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #18
  br label %_set_all_mcast

for.cond119.preheader:                            ; preds = %if.then102
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %50)
  %cmp120386.not = icmp eq i16 %50, 0
  br i1 %cmp120386.not, label %for.cond119.preheader.for.cond155.preheader_crit_edge, label %for.body122.lr.ph

for.cond119.preheader.for.cond155.preheader_crit_edge: ; preds = %for.cond119.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond155.preheader

for.body122.lr.ph:                                ; preds = %for.cond119.preheader
  %no_of_vpath137 = getelementptr i8, ptr %dev, i32 9044
  br label %for.body122

for.cond155.preheader:                            ; preds = %for.inc149.for.cond155.preheader_crit_edge, %for.cond119.preheader.for.cond155.preheader_crit_edge
  %55 = ptrtoint ptr %mc to i32
  call void @__asan_load4_noabort(i32 %55)
  %ha.0390 = load ptr, ptr %mc, align 4
  %cmp159.not391 = icmp eq ptr %ha.0390, %mc
  br i1 %cmp159.not391, label %for.cond155.preheader.cleanup_crit_edge, label %for.body163.lr.ph

for.cond155.preheader.cleanup_crit_edge:          ; preds = %for.cond155.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body163.lr.ph:                                ; preds = %for.cond155.preheader
  %no_of_vpath168 = getelementptr i8, ptr %dev, i32 9044
  br label %for.body163

for.body122:                                      ; preds = %for.inc149.for.body122_crit_edge, %for.body122.lr.ph
  %i.3387 = phi i32 [ 0, %for.body122.lr.ph ], [ %inc150, %for.inc149.for.body122_crit_edge ]
  %56 = ptrtoint ptr %mac_addr_list to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %mac_addr_list, align 4
  %cmp.i.not383 = icmp eq ptr %57, %mac_addr_list
  br i1 %cmp.i.not383, label %for.body122.for.inc149_crit_edge, label %for.body122.for.body130_crit_edge

for.body122.for.body130_crit_edge:                ; preds = %for.body122
  br label %for.body130

for.body122.for.inc149_crit_edge:                 ; preds = %for.body122
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc149

for.body130:                                      ; preds = %for.inc146.for.body130_crit_edge, %for.body122.for.body130_crit_edge
  %entry1.0384 = phi ptr [ %next.0385, %for.inc146.for.body130_crit_edge ], [ %57, %for.body122.for.body130_crit_edge ]
  %58 = ptrtoint ptr %entry1.0384 to i32
  call void @__asan_load4_noabort(i32 %58)
  %next.0385 = load ptr, ptr %entry1.0384, align 4
  %macaddr = getelementptr inbounds %struct.vxge_mac_addrs, ptr %entry1.0384, i32 0, i32 1
  %59 = call ptr @memcpy(ptr %mac_info, ptr %macaddr, i32 6)
  %60 = ptrtoint ptr %mac_info to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %mac_info, align 4
  %62 = and i32 %61, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.i.not = icmp eq i32 %62, 0
  br i1 %tobool.i.not, label %for.body130.for.inc146_crit_edge, label %for.cond136.preheader

for.body130.for.inc146_crit_edge:                 ; preds = %for.body130
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc146

for.cond136.preheader:                            ; preds = %for.body130
  %63 = ptrtoint ptr %no_of_vpath137 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %no_of_vpath137, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %cmp138380 = icmp sgt i32 %64, 0
  br i1 %cmp138380, label %for.cond136.preheader.for.body140_crit_edge, label %for.cond136.preheader.for.inc146_crit_edge

for.cond136.preheader.for.inc146_crit_edge:       ; preds = %for.cond136.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc146

for.cond136.preheader.for.body140_crit_edge:      ; preds = %for.cond136.preheader
  br label %for.body140

for.body140:                                      ; preds = %for.body140.for.body140_crit_edge, %for.cond136.preheader.for.body140_crit_edge
  %vpath_idx.0381 = phi i32 [ %inc143, %for.body140.for.body140_crit_edge ], [ 0, %for.cond136.preheader.for.body140_crit_edge ]
  %65 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %vpath_idx.0381, ptr %0, align 4
  %call141 = call fastcc i32 @vxge_del_mac_addr(ptr noundef %add.ptr.i, ptr noundef nonnull %mac_info)
  %inc143 = add nuw nsw i32 %vpath_idx.0381, 1
  %66 = ptrtoint ptr %no_of_vpath137 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %no_of_vpath137, align 4
  %cmp138 = icmp slt i32 %inc143, %67
  br i1 %cmp138, label %for.body140.for.body140_crit_edge, label %for.body140.for.inc146_crit_edge

for.body140.for.inc146_crit_edge:                 ; preds = %for.body140
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc146

for.body140.for.body140_crit_edge:                ; preds = %for.body140
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body140

for.inc146:                                       ; preds = %for.body140.for.inc146_crit_edge, %for.cond136.preheader.for.inc146_crit_edge, %for.body130.for.inc146_crit_edge
  %cmp.i.not = icmp eq ptr %next.0385, %mac_addr_list
  br i1 %cmp.i.not, label %for.inc146.for.inc149_crit_edge, label %for.inc146.for.body130_crit_edge

for.inc146.for.body130_crit_edge:                 ; preds = %for.inc146
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body130

for.inc146.for.inc149_crit_edge:                  ; preds = %for.inc146
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc149

for.inc149:                                       ; preds = %for.inc146.for.inc149_crit_edge, %for.body122.for.inc149_crit_edge
  %inc150 = add nuw nsw i32 %i.3387, 1
  %exitcond.not = icmp eq i32 %inc150, %conv105
  br i1 %exitcond.not, label %for.inc149.for.cond155.preheader_crit_edge, label %for.inc149.for.body122_crit_edge

for.inc149.for.body122_crit_edge:                 ; preds = %for.inc149
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body122

for.inc149.for.cond155.preheader_crit_edge:       ; preds = %for.inc149
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond155.preheader

for.cond155.loopexit:                             ; preds = %for.cond167.for.cond155.loopexit_crit_edge, %for.body163.for.cond155.loopexit_crit_edge
  %68 = ptrtoint ptr %ha.0392 to i32
  call void @__asan_load4_noabort(i32 %68)
  %ha.0 = load ptr, ptr %ha.0392, align 4
  %cmp159.not = icmp eq ptr %ha.0, %mc
  br i1 %cmp159.not, label %for.cond155.loopexit.cleanup_crit_edge, label %for.cond155.loopexit.for.body163_crit_edge

for.cond155.loopexit.for.body163_crit_edge:       ; preds = %for.cond155.loopexit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body163

for.cond155.loopexit.cleanup_crit_edge:           ; preds = %for.cond155.loopexit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body163:                                      ; preds = %for.cond155.loopexit.for.body163_crit_edge, %for.body163.lr.ph
  %ha.0392 = phi ptr [ %ha.0390, %for.body163.lr.ph ], [ %ha.0, %for.cond155.loopexit.for.body163_crit_edge ]
  %addr = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.0392, i32 0, i32 2
  %69 = call ptr @memcpy(ptr %mac_info, ptr %addr, i32 6)
  %70 = ptrtoint ptr %no_of_vpath168 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %no_of_vpath168, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %cmp169388 = icmp sgt i32 %71, 0
  br i1 %cmp169388, label %for.body163.for.body171_crit_edge, label %for.body163.for.cond155.loopexit_crit_edge

for.body163.for.cond155.loopexit_crit_edge:       ; preds = %for.body163
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond155.loopexit

for.body163.for.body171_crit_edge:                ; preds = %for.body163
  br label %for.body171

for.cond167:                                      ; preds = %for.body171
  %inc187 = add nuw nsw i32 %vpath_idx.1389, 1
  %72 = ptrtoint ptr %no_of_vpath168 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %no_of_vpath168, align 4
  %cmp169 = icmp slt i32 %inc187, %73
  br i1 %cmp169, label %for.cond167.for.body171_crit_edge, label %for.cond167.for.cond155.loopexit_crit_edge

for.cond167.for.cond155.loopexit_crit_edge:       ; preds = %for.cond167
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond155.loopexit

for.cond167.for.body171_crit_edge:                ; preds = %for.cond167
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body171

for.body171:                                      ; preds = %for.cond167.for.body171_crit_edge, %for.body163.for.body171_crit_edge
  %vpath_idx.1389 = phi i32 [ %inc187, %for.cond167.for.body171_crit_edge ], [ 0, %for.body163.for.body171_crit_edge ]
  %74 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %vpath_idx.1389, ptr %0, align 4
  %75 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 1, ptr %1, align 4
  %call173 = call fastcc i32 @vxge_add_mac_addr(ptr noundef %add.ptr.i, ptr noundef nonnull %mac_info)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call173)
  %cmp174.not = icmp eq i32 %call173, 0
  br i1 %cmp174.not, label %for.cond167, label %do.end180

do.end180:                                        ; preds = %for.body171
  call void @__sanitizer_cov_trace_pc() #18
  %call182 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.401, ptr noundef nonnull @.str.388, i32 noundef 1227) #19
  br label %_set_all_mcast

_set_all_mcast:                                   ; preds = %do.end180, %if.then102._set_all_mcast_crit_edge
  %76 = ptrtoint ptr %vpaths103 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %vpaths103, align 8
  %mcast_addr_cnt198 = getelementptr inbounds %struct.vxge_vpath, ptr %77, i32 0, i32 11
  %78 = ptrtoint ptr %mcast_addr_cnt198 to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %mcast_addr_cnt198, align 2
  %conv199 = zext i16 %79 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %79)
  %cmp201395.not = icmp eq i16 %79, 0
  br i1 %cmp201395.not, label %_set_all_mcast.for.cond236.preheader_crit_edge, label %for.body203.lr.ph

_set_all_mcast.for.cond236.preheader_crit_edge:   ; preds = %_set_all_mcast
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond236.preheader

for.body203.lr.ph:                                ; preds = %_set_all_mcast
  %no_of_vpath224 = getelementptr i8, ptr %dev, i32 9044
  br label %for.body203

for.cond236.preheader:                            ; preds = %for.inc233.for.cond236.preheader_crit_edge, %_set_all_mcast.for.cond236.preheader_crit_edge
  %no_of_vpath237 = getelementptr i8, ptr %dev, i32 9044
  %80 = ptrtoint ptr %no_of_vpath237 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %no_of_vpath237, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %cmp238397 = icmp sgt i32 %81, 0
  br i1 %cmp238397, label %for.cond236.preheader.for.body240_crit_edge, label %for.cond236.preheader.for.end260_crit_edge

for.cond236.preheader.for.end260_crit_edge:       ; preds = %for.cond236.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end260

for.cond236.preheader.for.body240_crit_edge:      ; preds = %for.cond236.preheader
  br label %for.body240

for.body203:                                      ; preds = %for.inc233.for.body203_crit_edge, %for.body203.lr.ph
  %i.4396 = phi i32 [ 0, %for.body203.lr.ph ], [ %inc234, %for.inc233.for.body203_crit_edge ]
  %82 = ptrtoint ptr %mac_addr_list to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %mac_addr_list, align 4
  br label %for.cond206

for.cond206:                                      ; preds = %for.body211.for.cond206_crit_edge, %for.body203
  %entry1.1 = phi ptr [ %83, %for.body203 ], [ %next.1, %for.body211.for.cond206_crit_edge ]
  %cmp.i369.not = icmp eq ptr %entry1.1, %mac_addr_list
  br i1 %cmp.i369.not, label %for.cond206.for.end222_crit_edge, label %for.body211

for.cond206.for.end222_crit_edge:                 ; preds = %for.cond206
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end222

for.body211:                                      ; preds = %for.cond206
  %84 = ptrtoint ptr %entry1.1 to i32
  call void @__asan_load4_noabort(i32 %84)
  %next.1 = load ptr, ptr %entry1.1, align 4
  %macaddr212 = getelementptr inbounds %struct.vxge_mac_addrs, ptr %entry1.1, i32 0, i32 1
  %85 = call ptr @memcpy(ptr %mac_info, ptr %macaddr212, i32 6)
  %86 = ptrtoint ptr %mac_info to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %mac_info, align 4
  %88 = and i32 %87, 16777216
  %tobool.i371.not = icmp eq i32 %88, 0
  br i1 %tobool.i371.not, label %for.body211.for.cond206_crit_edge, label %for.body211.for.end222_crit_edge

for.body211.for.end222_crit_edge:                 ; preds = %for.body211
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end222

for.body211.for.cond206_crit_edge:                ; preds = %for.body211
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond206

for.end222:                                       ; preds = %for.body211.for.end222_crit_edge, %for.cond206.for.end222_crit_edge
  %89 = ptrtoint ptr %no_of_vpath224 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %no_of_vpath224, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %cmp225393 = icmp sgt i32 %90, 0
  br i1 %cmp225393, label %for.end222.for.body227_crit_edge, label %for.end222.for.inc233_crit_edge

for.end222.for.inc233_crit_edge:                  ; preds = %for.end222
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc233

for.end222.for.body227_crit_edge:                 ; preds = %for.end222
  br label %for.body227

for.body227:                                      ; preds = %for.body227.for.body227_crit_edge, %for.end222.for.body227_crit_edge
  %vpath_idx.2394 = phi i32 [ %inc231, %for.body227.for.body227_crit_edge ], [ 0, %for.end222.for.body227_crit_edge ]
  %91 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %vpath_idx.2394, ptr %0, align 4
  %call229 = call fastcc i32 @vxge_del_mac_addr(ptr noundef %add.ptr.i, ptr noundef nonnull %mac_info)
  %inc231 = add nuw nsw i32 %vpath_idx.2394, 1
  %92 = ptrtoint ptr %no_of_vpath224 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %no_of_vpath224, align 4
  %cmp225 = icmp slt i32 %inc231, %93
  br i1 %cmp225, label %for.body227.for.body227_crit_edge, label %for.body227.for.inc233_crit_edge

for.body227.for.inc233_crit_edge:                 ; preds = %for.body227
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc233

for.body227.for.body227_crit_edge:                ; preds = %for.body227
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body227

for.inc233:                                       ; preds = %for.body227.for.inc233_crit_edge, %for.end222.for.inc233_crit_edge
  %inc234 = add nuw nsw i32 %i.4396, 1
  %exitcond400.not = icmp eq i32 %inc234, %conv199
  br i1 %exitcond400.not, label %for.inc233.for.cond236.preheader_crit_edge, label %for.inc233.for.body203_crit_edge

for.inc233.for.body203_crit_edge:                 ; preds = %for.inc233
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body203

for.inc233.for.cond236.preheader_crit_edge:       ; preds = %for.inc233
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond236.preheader

for.body240:                                      ; preds = %if.end256.for.body240_crit_edge, %for.cond236.preheader.for.body240_crit_edge
  %i.5398 = phi i32 [ %inc259, %if.end256.for.body240_crit_edge ], [ 0, %for.cond236.preheader.for.body240_crit_edge ]
  %94 = ptrtoint ptr %vpaths103 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %vpaths103, align 8
  %handle243 = getelementptr %struct.vxge_vpath, ptr %95, i32 %i.5398, i32 2
  %96 = ptrtoint ptr %handle243 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %handle243, align 128
  %call244 = call i32 @vxge_hw_vpath_mcast_enable(ptr noundef %97) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call244)
  %cmp245.not = icmp eq i32 %call244, 0
  br i1 %cmp245.not, label %for.body240.if.end256_crit_edge, label %do.end251

for.body240.if.end256_crit_edge:                  ; preds = %for.body240
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end256

do.end251:                                        ; preds = %for.body240
  call void @__sanitizer_cov_trace_pc() #18
  %call253 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.404, ptr noundef nonnull @.str.388, i32 noundef 1264) #19
  br label %if.end256

if.end256:                                        ; preds = %do.end251, %for.body240.if.end256_crit_edge
  %98 = ptrtoint ptr %all_multi_flg98 to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 1, ptr %all_multi_flg98, align 8
  %inc259 = add nuw nsw i32 %i.5398, 1
  %99 = ptrtoint ptr %no_of_vpath237 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %no_of_vpath237, align 4
  %cmp238 = icmp slt i32 %inc259, %100
  br i1 %cmp238, label %if.end256.for.body240_crit_edge, label %if.end256.for.end260_crit_edge

if.end256.for.end260_crit_edge:                   ; preds = %if.end256
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end260

if.end256.for.body240_crit_edge:                  ; preds = %if.end256
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body240

for.end260:                                       ; preds = %if.end256.for.end260_crit_edge, %for.cond236.preheader.for.end260_crit_edge
  %101 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %flags, align 8
  %or = or i32 %102, 512
  store i32 %or, ptr %flags, align 8
  br label %do.end266

do.end266:                                        ; preds = %for.end260, %land.lhs.true100.do.end266_crit_edge, %if.end97.do.end266_crit_edge
  %call268 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.388, i32 noundef 1272) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end266, %for.cond155.loopexit.cleanup_crit_edge, %for.cond155.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %mac_info) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_set_mac_addr(ptr noundef %dev, ptr noundef %p) #0 align 64 {
entry:
  %mac_info_new = alloca %struct.macInfo, align 4
  %mac_info_old = alloca %struct.macInfo, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %mac_info_new) #16
  %0 = getelementptr inbounds %struct.macInfo, ptr %mac_info_new, i32 0, i32 2
  %1 = getelementptr inbounds %struct.macInfo, ptr %mac_info_new, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %mac_info_old) #16
  %2 = getelementptr inbounds %struct.macInfo, ptr %mac_info_old, i32 0, i32 2
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.410, i32 noundef 1290) #19
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %sa_data = getelementptr inbounds %struct.sockaddr, ptr %p, i32 0, i32 1
  %3 = ptrtoint ptr %sa_data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sa_data, align 4
  %5 = and i32 %4, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not.i = icmp eq i32 %5, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %entry.cleanup52_crit_edge

entry.cleanup52_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup52

is_valid_ether_addr.exit:                         ; preds = %entry
  %add.ptr.i.i = getelementptr %struct.sockaddr, ptr %p, i32 0, i32 1, i32 4
  %6 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %7 to i32
  %or.i.i = or i32 %4, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.cleanup52_crit_edge, label %if.end

is_valid_ether_addr.exit.cleanup52_crit_edge:     ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup52

if.end:                                           ; preds = %is_valid_ether_addr.exit
  %8 = call ptr @memset(ptr %mac_info_new, i32 0, i32 20)
  %9 = call ptr @memset(ptr %mac_info_old, i32 0, i32 20)
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.410, i32 noundef 1301) #19
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %10 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev_addr, align 64
  %addr_len = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 56
  %12 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %addr_len, align 1
  %conv = zext i8 %13 to i32
  %14 = call ptr @memcpy(ptr %mac_info_old, ptr %11, i32 %conv)
  %15 = call ptr @memcpy(ptr %mac_info_new, ptr %sa_data, i32 %conv)
  %no_of_vpath = getelementptr i8, ptr %dev, i32 9044
  %16 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp92 = icmp sgt i32 %17, 0
  br i1 %cmp92, label %for.body.lr.ph, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %vpaths = getelementptr i8, ptr %dev, i32 9280
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %vpath_idx.094 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cleanup.for.body_crit_edge ]
  %status.093 = phi i32 [ 0, %for.body.lr.ph ], [ %status.1, %cleanup.for.body_crit_edge ]
  %18 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vpaths, align 8
  %is_open = getelementptr %struct.vxge_vpath, ptr %19, i32 %vpath_idx.094, i32 6
  %20 = ptrtoint ptr %is_open to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %is_open, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not = icmp eq i32 %21, 0
  br i1 %tobool.not, label %if.then22, label %if.end25

if.then22:                                        ; preds = %for.body
  %22 = ptrtoint ptr %mac_info_old to i32
  call void @__asan_loadN_noabort(i32 %22, i32 6)
  %del_mac.0.copyload.i = load i48, ptr %mac_info_old, align 8
  %del_mac.0.insert.ext.i = zext i48 %del_mac.0.copyload.i to i64
  %del_mac.0.insert.shift.i = shl nuw i64 %del_mac.0.insert.ext.i, 16
  %mac_addr_list.i = getelementptr %struct.vxge_vpath, ptr %19, i32 %vpath_idx.094, i32 12
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.then22
  %entry1.0.in.i = phi ptr [ %mac_addr_list.i, %if.then22 ], [ %entry1.0.i, %for.body.i.for.cond.i_crit_edge ]
  %23 = ptrtoint ptr %entry1.0.in.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %entry1.0.i = load ptr, ptr %entry1.0.in.i, align 4
  %cmp.i.not.i = icmp eq ptr %entry1.0.i, %mac_addr_list.i
  br i1 %cmp.i.not.i, label %for.cond.i.vxge_mac_list_del.exit_crit_edge, label %for.body.i

for.cond.i.vxge_mac_list_del.exit_crit_edge:      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_mac_list_del.exit

for.body.i:                                       ; preds = %for.cond.i
  %macaddr5.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %entry1.0.i, i32 0, i32 1
  %24 = ptrtoint ptr %macaddr5.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %macaddr5.i, align 8
  %cmp.i = icmp eq i64 %25, %del_mac.0.insert.shift.i
  br i1 %cmp.i, label %if.then.i, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

if.then.i:                                        ; preds = %for.body.i
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.0.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.list_del.exit.i_crit_edge

if.then.i.list_del.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %entry1.0.i, i32 0, i32 1
  %26 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prev.i.i.i, align 4
  %28 = ptrtoint ptr %entry1.0.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %entry1.0.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev1.i.i.i.i, align 4
  %31 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %29, ptr %27, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then.i.list_del.exit.i_crit_edge
  %32 = ptrtoint ptr %entry1.0.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1.0.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %entry1.0.i, i32 0, i32 1
  %33 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  call void @kfree(ptr noundef %entry1.0.i) #16
  %mac_addr_cnt.i = getelementptr %struct.vxge_vpath, ptr %19, i32 %vpath_idx.094, i32 10
  %34 = ptrtoint ptr %mac_addr_cnt.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %mac_addr_cnt.i, align 4
  %dec.i = add i16 %35, -1
  store i16 %dec.i, ptr %mac_addr_cnt.i, align 4
  %36 = ptrtoint ptr %mac_info_old to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %mac_info_old, align 8
  %38 = and i32 %37, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.i.not.i80 = icmp eq i32 %38, 0
  br i1 %tobool.i.not.i80, label %list_del.exit.i.vxge_mac_list_del.exit_crit_edge, label %if.then9.i

list_del.exit.i.vxge_mac_list_del.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_mac_list_del.exit

if.then9.i:                                       ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %mcast_addr_cnt.i = getelementptr %struct.vxge_vpath, ptr %19, i32 %vpath_idx.094, i32 11
  %39 = ptrtoint ptr %mcast_addr_cnt.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %mcast_addr_cnt.i, align 2
  %dec10.i = add i16 %40, -1
  store i16 %dec10.i, ptr %mcast_addr_cnt.i, align 2
  br label %vxge_mac_list_del.exit

vxge_mac_list_del.exit:                           ; preds = %if.then9.i, %list_del.exit.i.vxge_mac_list_del.exit_crit_edge, %for.cond.i.vxge_mac_list_del.exit_crit_edge
  %mac_addr_cnt.i81 = getelementptr %struct.vxge_vpath, ptr %19, i32 %vpath_idx.094, i32 10
  %41 = ptrtoint ptr %mac_addr_cnt.i81 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %mac_addr_cnt.i81, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2047, i16 %42)
  %cmp.i82 = icmp ugt i16 %42, 2047
  br i1 %cmp.i82, label %vxge_mac_list_del.exit.cleanup_crit_edge, label %if.end.i

vxge_mac_list_del.exit.cleanup_crit_edge:         ; preds = %vxge_mac_list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %vxge_mac_list_del.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %43 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %43, i32 noundef 2848, i32 noundef 32) #20
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %do.end.i, label %if.end7.i

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %call4.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.308, ptr noundef nonnull @.str.3) #19
  br label %cleanup

if.end7.i:                                        ; preds = %if.end.i
  %44 = ptrtoint ptr %mac_addr_list.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mac_addr_list.i, align 4
  %call.i.i.i84 = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i, ptr noundef %mac_addr_list.i, ptr noundef %45) #16
  br i1 %call.i.i.i84, label %if.end.i.i.i85, label %if.end7.i.list_add.exit.i_crit_edge

if.end7.i.list_add.exit.i_crit_edge:              ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add.exit.i

if.end.i.i.i85:                                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %call7.i.i.i, ptr %prev1.i.i.i, align 4
  %47 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %45, ptr %call7.i.i.i, align 8
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i, i32 0, i32 1
  %48 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %mac_addr_list.i, ptr %prev3.i.i.i, align 4
  %49 = ptrtoint ptr %mac_addr_list.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %call7.i.i.i, ptr %mac_addr_list.i, align 4
  br label %list_add.exit.i

list_add.exit.i:                                  ; preds = %if.end.i.i.i85, %if.end7.i.list_add.exit.i_crit_edge
  %macaddr.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i.i, i32 0, i32 1
  %50 = call ptr @memcpy(ptr %macaddr.i, ptr %mac_info_new, i32 6)
  %51 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %1, align 4
  %state9.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i.i, i32 0, i32 3
  %53 = ptrtoint ptr %state9.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %state9.i, align 8
  %54 = ptrtoint ptr %mac_addr_cnt.i81 to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %mac_addr_cnt.i81, align 4
  %inc.i = add i16 %55, 1
  store i16 %inc.i, ptr %mac_addr_cnt.i81, align 4
  %56 = ptrtoint ptr %mac_info_new to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %mac_info_new, align 4
  %58 = and i32 %57, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.i.not.i86 = icmp eq i32 %58, 0
  br i1 %tobool.i.not.i86, label %list_add.exit.i.cleanup_crit_edge, label %if.then14.i

list_add.exit.i.cleanup_crit_edge:                ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then14.i:                                      ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %mcast_addr_cnt.i87 = getelementptr %struct.vxge_vpath, ptr %19, i32 %vpath_idx.094, i32 11
  %59 = ptrtoint ptr %mcast_addr_cnt.i87 to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %mcast_addr_cnt.i87, align 2
  %inc15.i = add i16 %60, 1
  store i16 %inc15.i, ptr %mcast_addr_cnt.i87, align 2
  br label %cleanup

if.end25:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %61 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %vpath_idx.094, ptr %2, align 4
  %call26 = call fastcc i32 @vxge_del_mac_addr(ptr noundef %add.ptr.i, ptr noundef nonnull %mac_info_old)
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %if.then14.i, %list_add.exit.i.cleanup_crit_edge, %do.end.i, %vxge_mac_list_del.exit.cleanup_crit_edge
  %status.1 = phi i32 [ %call26, %if.end25 ], [ %status.093, %vxge_mac_list_del.exit.cleanup_crit_edge ], [ %status.093, %do.end.i ], [ %status.093, %list_add.exit.i.cleanup_crit_edge ], [ %status.093, %if.then14.i ]
  %inc = add nuw nsw i32 %vpath_idx.094, 1
  %62 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %63
  br i1 %cmp, label %cleanup.for.body_crit_edge, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.end.for.end_crit_edge
  %status.0.lcssa = phi i32 [ 0, %if.end.for.end_crit_edge ], [ %status.1, %cleanup.for.end_crit_edge ]
  %state.i88 = getelementptr i8, ptr %dev, i32 3480
  %64 = ptrtoint ptr %state.i88 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %state.i88, align 4
  %66 = and i32 %65, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool28.not = icmp eq i32 %66, 0
  br i1 %tobool28.not, label %for.end.cleanup52.sink.split_crit_edge, label %for.cond36.preheader, !prof !948

for.end.cleanup52.sink.split_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup52.sink.split

for.cond36.preheader:                             ; preds = %for.end
  %67 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %cmp3897 = icmp sgt i32 %68, 0
  br i1 %cmp3897, label %for.cond36.preheader.for.body40_crit_edge, label %for.cond36.preheader.cleanup52.sink.split_crit_edge

for.cond36.preheader.cleanup52.sink.split_crit_edge: ; preds = %for.cond36.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup52.sink.split

for.cond36.preheader.for.body40_crit_edge:        ; preds = %for.cond36.preheader
  br label %for.body40

for.cond36:                                       ; preds = %for.body40
  %inc48 = add nuw nsw i32 %vpath_idx.198, 1
  %69 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %no_of_vpath, align 4
  %cmp38 = icmp slt i32 %inc48, %70
  br i1 %cmp38, label %for.cond36.for.body40_crit_edge, label %for.cond36.cleanup52.sink.split_crit_edge

for.cond36.cleanup52.sink.split_crit_edge:        ; preds = %for.cond36
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup52.sink.split

for.cond36.for.body40_crit_edge:                  ; preds = %for.cond36
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body40

for.body40:                                       ; preds = %for.cond36.for.body40_crit_edge, %for.cond36.preheader.for.body40_crit_edge
  %vpath_idx.198 = phi i32 [ %inc48, %for.cond36.for.body40_crit_edge ], [ 0, %for.cond36.preheader.for.body40_crit_edge ]
  %71 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %vpath_idx.198, ptr %0, align 4
  %72 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 1, ptr %1, align 4
  %call42 = call fastcc i32 @vxge_add_mac_addr(ptr noundef %add.ptr.i, ptr noundef nonnull %mac_info_new)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %cmp43.not = icmp eq i32 %call42, 0
  br i1 %cmp43.not, label %for.cond36, label %for.body40.cleanup52_crit_edge

for.body40.cleanup52_crit_edge:                   ; preds = %for.body40
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup52

cleanup52.sink.split:                             ; preds = %for.cond36.cleanup52.sink.split_crit_edge, %for.cond36.preheader.cleanup52.sink.split_crit_edge, %for.end.cleanup52.sink.split_crit_edge
  %retval.0.ph = phi i32 [ 0, %for.end.cleanup52.sink.split_crit_edge ], [ %status.0.lcssa, %for.cond36.preheader.cleanup52.sink.split_crit_edge ], [ 0, %for.cond36.cleanup52.sink.split_crit_edge ]
  call void @dev_addr_mod(ptr noundef %dev, i32 noundef 0, ptr noundef %sa_data, i32 noundef 6) #16
  br label %cleanup52

cleanup52:                                        ; preds = %cleanup52.sink.split, %for.body40.cleanup52_crit_edge, %is_valid_ether_addr.exit.cleanup52_crit_edge, %entry.cleanup52_crit_edge
  %retval.0 = phi i32 [ -22, %is_valid_ether_addr.exit.cleanup52_crit_edge ], [ -22, %entry.cleanup52_crit_edge ], [ %retval.0.ph, %cleanup52.sink.split ], [ -22, %for.body40.cleanup52_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %mac_info_old) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %mac_info_new) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_validate_addr(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_ioctl(ptr nocapture noundef %dev, ptr nocapture noundef readonly %rq, i32 noundef %cmd) #0 align 64 {
entry:
  %config.i7 = alloca %struct.hwtstamp_config, align 4
  %config.i = alloca %struct.hwtstamp_config, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.559)
  switch i32 %cmd, label %entry.cleanup_crit_edge [
    i32 35248, label %sw.bb
    i32 35249, label %sw.bb2
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %ifr_ifru = getelementptr inbounds %struct.ifreq, ptr %rq, i32 0, i32 1
  %1 = ptrtoint ptr %ifr_ifru to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ifr_ifru, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %config.i) #16
  %3 = ptrtoint ptr %config.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %config.i, align 4, !annotation !947
  %4 = getelementptr inbounds %struct.hwtstamp_config, ptr %config.i, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %4, align 4, !annotation !947
  %6 = getelementptr inbounds %struct.hwtstamp_config, ptr %config.i, i32 0, i32 2
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %6, align 4, !annotation !947
  tail call void @__might_fault(ptr noundef nonnull @.str.415, i32 noundef 156) #16
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #16
  br i1 %call.i.i.i, label %sw.bb.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

sw.bb.if.then11.i.i.i_crit_edge:                  ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %sw.bb
  %8 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %2, i32 12, i32 -1226833920) #23
  %asmresult.i.i.i = extractvalue { i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !949

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %config.i, i32 noundef 12) #16
  %9 = call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i.i.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 4
  %11 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !953
  %and.i.i.i.i.i = and i32 %11, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #16, !srcloc !954
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #16, !srcloc !955
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %config.i, ptr noundef %2, i32 noundef 12) #16
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #16, !srcloc !954
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #16, !srcloc !955
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end.i, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !949

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then11.i.i.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %sw.bb.if.then11.i.i.i_crit_edge
  %res.03.i.i.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 12, %sw.bb.if.then11.i.i.i_crit_edge ], [ 12, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 12, %res.03.i.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %config.i, i32 %sub.i.i.i
  %12 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.03.i.i.i)
  br label %vxge_hwtstamp_set.exit

if.end.i:                                         ; preds = %if.end.i.i.i
  %13 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cond.i = icmp eq i32 %14, 0
  br i1 %cond.i, label %sw.epilog.i, label %if.end.i.vxge_hwtstamp_set.exit_crit_edge

if.end.i.vxge_hwtstamp_set.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_hwtstamp_set.exit

sw.epilog.i:                                      ; preds = %if.end.i
  %15 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %6, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.560)
  switch i32 %16, label %sw.epilog.i.vxge_hwtstamp_set.exit_crit_edge [
    i32 0, label %sw.bb1.i
    i32 1, label %sw.epilog.i.sw.bb3.i_crit_edge
    i32 2, label %sw.epilog.i.sw.bb3.i_crit_edge18
    i32 3, label %sw.epilog.i.sw.bb3.i_crit_edge19
    i32 4, label %sw.epilog.i.sw.bb3.i_crit_edge20
    i32 5, label %sw.epilog.i.sw.bb3.i_crit_edge21
    i32 6, label %sw.epilog.i.sw.bb3.i_crit_edge22
    i32 7, label %sw.epilog.i.sw.bb3.i_crit_edge23
    i32 8, label %sw.epilog.i.sw.bb3.i_crit_edge24
    i32 9, label %sw.epilog.i.sw.bb3.i_crit_edge25
    i32 10, label %sw.epilog.i.sw.bb3.i_crit_edge26
    i32 11, label %sw.epilog.i.sw.bb3.i_crit_edge27
    i32 12, label %sw.epilog.i.sw.bb3.i_crit_edge28
    i32 13, label %sw.epilog.i.sw.bb3.i_crit_edge29
    i32 14, label %sw.epilog.i.sw.bb3.i_crit_edge30
    i32 15, label %sw.epilog.i.sw.bb3.i_crit_edge31
  ]

sw.epilog.i.sw.bb3.i_crit_edge31:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge30:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge29:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge28:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge27:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge26:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge25:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge24:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge23:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge22:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge21:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge20:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge19:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge18:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.sw.bb3.i_crit_edge:                   ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

sw.epilog.i.vxge_hwtstamp_set.exit_crit_edge:     ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_hwtstamp_set.exit

sw.bb1.i:                                         ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  %rx_hwts.i = getelementptr i8, ptr %dev, i32 3586
  %18 = ptrtoint ptr %rx_hwts.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load.i = load i8, ptr %rx_hwts.i, align 2
  %bf.clear.i = and i8 %bf.load.i, 127
  store i8 %bf.clear.i, ptr %rx_hwts.i, align 2
  br label %sw.epilog15.i

sw.bb3.i:                                         ; preds = %sw.epilog.i.sw.bb3.i_crit_edge, %sw.epilog.i.sw.bb3.i_crit_edge18, %sw.epilog.i.sw.bb3.i_crit_edge19, %sw.epilog.i.sw.bb3.i_crit_edge20, %sw.epilog.i.sw.bb3.i_crit_edge21, %sw.epilog.i.sw.bb3.i_crit_edge22, %sw.epilog.i.sw.bb3.i_crit_edge23, %sw.epilog.i.sw.bb3.i_crit_edge24, %sw.epilog.i.sw.bb3.i_crit_edge25, %sw.epilog.i.sw.bb3.i_crit_edge26, %sw.epilog.i.sw.bb3.i_crit_edge27, %sw.epilog.i.sw.bb3.i_crit_edge28, %sw.epilog.i.sw.bb3.i_crit_edge29, %sw.epilog.i.sw.bb3.i_crit_edge30, %sw.epilog.i.sw.bb3.i_crit_edge31
  %devh.i = getelementptr i8, ptr %dev, i32 2312
  %19 = ptrtoint ptr %devh.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %devh.i, align 8
  %hwts_en.i = getelementptr inbounds %struct.__vxge_hw_device, ptr %20, i32 0, i32 4, i32 3
  %21 = ptrtoint ptr %hwts_en.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %bf.load5.i = load i8, ptr %hwts_en.i, align 4
  %22 = and i8 %bf.load5.i, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %cmp.not.not.i = icmp eq i8 %22, 0
  br i1 %cmp.not.not.i, label %sw.bb3.i.vxge_hwtstamp_set.exit_crit_edge, label %if.end8.i

sw.bb3.i.vxge_hwtstamp_set.exit_crit_edge:        ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_hwtstamp_set.exit

if.end8.i:                                        ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #18
  %rx_hwts9.i = getelementptr i8, ptr %dev, i32 3586
  %23 = ptrtoint ptr %rx_hwts9.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %bf.load10.i = load i8, ptr %rx_hwts9.i, align 2
  %bf.set12.i = or i8 %bf.load10.i, -128
  store i8 %bf.set12.i, ptr %rx_hwts9.i, align 2
  br label %sw.epilog15.i

sw.epilog15.i:                                    ; preds = %if.end8.i, %sw.bb1.i
  %storemerge.i = phi i32 [ 1, %if.end8.i ], [ 0, %sw.bb1.i ]
  %24 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %storemerge.i, ptr %6, align 4
  %no_of_vpath.i = getelementptr i8, ptr %dev, i32 9044
  %25 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp1651.i = icmp sgt i32 %26, 0
  br i1 %cmp1651.i, label %for.body.lr.ph.i, label %sw.epilog15.i.if.then.i41.i_crit_edge

sw.epilog15.i.if.then.i41.i_crit_edge:            ; preds = %sw.epilog15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i41.i

for.body.lr.ph.i:                                 ; preds = %sw.epilog15.i
  %rx_hwts17.i = getelementptr i8, ptr %dev, i32 3586
  %vpaths.i = getelementptr i8, ptr %dev, i32 9280
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.052.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %27 = ptrtoint ptr %rx_hwts17.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %bf.load18.i = load i8, ptr %rx_hwts17.i, align 2
  %bf.lshr19.i = and i8 %bf.load18.i, -128
  %28 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vpaths.i, align 8
  %rx_hwts21.i = getelementptr %struct.vxge_vpath, ptr %29, i32 %i.052.i, i32 1, i32 6
  %30 = ptrtoint ptr %rx_hwts21.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %bf.load22.i = load i8, ptr %rx_hwts21.i, align 8
  %bf.clear23.i = and i8 %bf.load22.i, 127
  %bf.set24.i = or i8 %bf.clear23.i, %bf.lshr19.i
  store i8 %bf.set24.i, ptr %rx_hwts21.i, align 8
  %inc.i = add nuw nsw i32 %i.052.i, 1
  %31 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %no_of_vpath.i, align 4
  %cmp16.i = icmp slt i32 %inc.i, %32
  br i1 %cmp16.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.then.i41.i_crit_edge

for.body.i.if.then.i41.i_crit_edge:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i41.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

if.then.i41.i:                                    ; preds = %for.body.i.if.then.i41.i_crit_edge, %sw.epilog15.i.if.then.i41.i_crit_edge
  call void @__might_fault(ptr noundef nonnull @.str.415, i32 noundef 174) #16
  %call.i.i40.i = call zeroext i1 @should_fail_usercopy() #16
  br i1 %call.i.i40.i, label %if.then.i41.i.vxge_hwtstamp_set.exit_crit_edge, label %copy_to_user.exit.i

if.then.i41.i.vxge_hwtstamp_set.exit_crit_edge:   ; preds = %if.then.i41.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_hwtstamp_set.exit

copy_to_user.exit.i:                              ; preds = %if.then.i41.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i45.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %config.i, i32 noundef 12) #16
  %call.i1.i.i.i = call i32 @arm_copy_to_user(ptr noundef %2, ptr noundef nonnull %config.i, i32 noundef 12) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1.i.i.i)
  %tobool26.not.i = icmp eq i32 %call.i1.i.i.i, 0
  %spec.select.i = select i1 %tobool26.not.i, i32 0, i32 -14
  br label %vxge_hwtstamp_set.exit

vxge_hwtstamp_set.exit:                           ; preds = %copy_to_user.exit.i, %if.then.i41.i.vxge_hwtstamp_set.exit_crit_edge, %sw.bb3.i.vxge_hwtstamp_set.exit_crit_edge, %sw.epilog.i.vxge_hwtstamp_set.exit_crit_edge, %if.end.i.vxge_hwtstamp_set.exit_crit_edge, %if.then11.i.i.i
  %retval.0.i = phi i32 [ -34, %if.end.i.vxge_hwtstamp_set.exit_crit_edge ], [ -14, %sw.bb3.i.vxge_hwtstamp_set.exit_crit_edge ], [ -34, %sw.epilog.i.vxge_hwtstamp_set.exit_crit_edge ], [ -14, %if.then11.i.i.i ], [ -14, %if.then.i41.i.vxge_hwtstamp_set.exit_crit_edge ], [ %spec.select.i, %copy_to_user.exit.i ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %config.i) #16
  br label %cleanup

sw.bb2:                                           ; preds = %entry
  %ifr_ifru3 = getelementptr inbounds %struct.ifreq, ptr %rq, i32 0, i32 1
  %33 = ptrtoint ptr %ifr_ifru3 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ifr_ifru3, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %config.i7) #16
  %35 = getelementptr inbounds %struct.hwtstamp_config, ptr %config.i7, i32 0, i32 1
  %36 = getelementptr inbounds %struct.hwtstamp_config, ptr %config.i7, i32 0, i32 2
  %37 = ptrtoint ptr %config.i7 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %config.i7, align 4
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %35, align 4
  %rx_hwts.i8 = getelementptr i8, ptr %dev, i32 3586
  %39 = ptrtoint ptr %rx_hwts.i8 to i32
  call void @__asan_load1_noabort(i32 %39)
  %bf.load.i9 = load i8, ptr %rx_hwts.i8, align 2
  %bf.load.lobit.i = lshr i8 %bf.load.i9, 7
  %40 = zext i8 %bf.load.lobit.i to i32
  %41 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %36, align 4
  tail call void @__might_fault(ptr noundef nonnull @.str.415, i32 noundef 174) #16
  %call.i.i.i10 = tail call zeroext i1 @should_fail_usercopy() #16
  br i1 %call.i.i.i10, label %sw.bb2.vxge_hwtstamp_get.exit_crit_edge, label %if.end.i.i.i13

sw.bb2.vxge_hwtstamp_get.exit_crit_edge:          ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_hwtstamp_get.exit

if.end.i.i.i13:                                   ; preds = %sw.bb2
  %42 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %34, i32 12, i32 -1226833920) #23, !srcloc !956
  %asmresult.i.i.i11 = extractvalue { i32, i32 } %42, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i11)
  %cmp.i.i.i12 = icmp eq i32 %asmresult.i.i.i11, 0
  br i1 %cmp.i.i.i12, label %copy_to_user.exit.i17, label %if.end.i.i.i13.vxge_hwtstamp_get.exit_crit_edge

if.end.i.i.i13.vxge_hwtstamp_get.exit_crit_edge:  ; preds = %if.end.i.i.i13
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_hwtstamp_get.exit

copy_to_user.exit.i17:                            ; preds = %if.end.i.i.i13
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i.i14 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %config.i7, i32 noundef 12) #16
  %call.i1.i.i.i15 = call i32 @arm_copy_to_user(ptr noundef %34, ptr noundef nonnull %config.i7, i32 noundef 12) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1.i.i.i15)
  %tobool1.not.i = icmp eq i32 %call.i1.i.i.i15, 0
  %spec.select.i16 = select i1 %tobool1.not.i, i32 0, i32 -14
  br label %vxge_hwtstamp_get.exit

vxge_hwtstamp_get.exit:                           ; preds = %copy_to_user.exit.i17, %if.end.i.i.i13.vxge_hwtstamp_get.exit_crit_edge, %sw.bb2.vxge_hwtstamp_get.exit_crit_edge
  %43 = phi i32 [ -14, %sw.bb2.vxge_hwtstamp_get.exit_crit_edge ], [ -14, %if.end.i.i.i13.vxge_hwtstamp_get.exit_crit_edge ], [ %spec.select.i16, %copy_to_user.exit.i17 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %config.i7) #16
  br label %cleanup

cleanup:                                          ; preds = %vxge_hwtstamp_get.exit, %vxge_hwtstamp_set.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %43, %vxge_hwtstamp_get.exit ], [ %retval.0.i, %vxge_hwtstamp_set.exit ], [ -95, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_change_mtu(ptr noundef %dev, i32 noundef %new_mtu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %level_trace = getelementptr i8, ptr %dev, i32 9416
  %0 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %.not = icmp eq i32 %1, 0
  br i1 %.not, label %entry.do.end6_crit_edge, label %do.end

entry.do.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.416, i32 noundef 3050) #19
  br label %do.end6

do.end6:                                          ; preds = %do.end, %entry.do.end6_crit_edge
  %state.i = getelementptr i8, ptr %dev, i32 3480
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.then11, label %do.body27, !prof !948

if.then11:                                        ; preds = %do.end6
  %mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %5 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %new_mtu, ptr %mtu, align 4
  %level_err = getelementptr i8, ptr %dev, i32 9412
  %6 = ptrtoint ptr %level_err to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %level_err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %.not113 = icmp eq i32 %7, 0
  br i1 %.not113, label %if.then11.cleanup_crit_edge, label %do.end20

if.then11.cleanup_crit_edge:                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end20:                                         ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.418, ptr noundef nonnull @.str.420) #19
  br label %cleanup

do.body27:                                        ; preds = %do.end6
  %8 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %.not110 = icmp eq i32 %9, 0
  br i1 %.not110, label %do.body27.do.end41_crit_edge, label %do.end36

do.body27.do.end41_crit_edge:                     ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end41

do.end36:                                         ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #18
  %call38 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.422, i32 noundef %new_mtu) #19
  br label %do.end41

do.end41:                                         ; preds = %do.end36, %do.body27.do.end41_crit_edge
  tail call fastcc void @do_vxge_close(ptr noundef %dev, i32 noundef 1) #16
  %mtu46 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %10 = ptrtoint ptr %mtu46 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %new_mtu, ptr %mtu46, align 4
  %mtu47 = getelementptr i8, ptr %dev, i32 9372
  %11 = ptrtoint ptr %mtu47 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %new_mtu, ptr %mtu47, align 4
  %call48 = tail call i32 @vxge_open(ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %do.body52, label %do.end41.cleanup_crit_edge

do.end41.cleanup_crit_edge:                       ; preds = %do.end41
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body52:                                        ; preds = %do.end41
  %12 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %.not111 = icmp eq i32 %13, 0
  br i1 %.not111, label %do.body52.cleanup_crit_edge, label %do.body67

do.body52.cleanup_crit_edge:                      ; preds = %do.body52
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body67:                                        ; preds = %do.body52
  %14 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %add.ptr.i, align 8
  %call63 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.425, ptr noundef %15, i32 noundef %new_mtu) #19
  %16 = ptrtoint ptr %level_trace to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pr = load i32, ptr %level_trace, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %.not112 = icmp eq i32 %.pr, 0
  br i1 %.not112, label %do.body67.cleanup_crit_edge, label %do.end76

do.body67.cleanup_crit_edge:                      ; preds = %do.body67
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end76:                                         ; preds = %do.body67
  call void @__sanitizer_cov_trace_pc() #18
  %call78 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.416, i32 noundef 3077) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end76, %do.body67.cleanup_crit_edge, %do.body52.cleanup_crit_edge, %do.end41.cleanup_crit_edge, %do.end20, %if.then11.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then11.cleanup_crit_edge ], [ 0, %do.end20 ], [ -5, %do.end41.cleanup_crit_edge ], [ 0, %do.body67.cleanup_crit_edge ], [ 0, %do.end76 ], [ 0, %do.body52.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_tx_watchdog(ptr noundef %dev, i32 noundef %txqueue) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.429, i32 noundef 3264) #19
  %cric_err_event = getelementptr i8, ptr %dev, i32 9036
  %0 = ptrtoint ptr %cric_err_event to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 1, ptr %cric_err_event, align 4
  %reset_task = getelementptr i8, ptr %dev, i32 9452
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %1 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %1, ptr noundef %reset_task) #16
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.429, i32 noundef 3272) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_get_stats64(ptr nocapture noundef readonly %dev, ptr nocapture noundef %net_stats) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %no_of_vpath = getelementptr i8, ptr %dev, i32 9044
  %0 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp59 = icmp sgt i32 %1, 0
  br i1 %cmp59, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %vpaths = getelementptr i8, ptr %dev, i32 9280
  %rx_bytes7 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %net_stats, i32 0, i32 2
  %multicast9 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %net_stats, i32 0, i32 8
  %rx_errors11 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %net_stats, i32 0, i32 4
  %rx_dropped14 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %net_stats, i32 0, i32 6
  %tx_packets = getelementptr inbounds %struct.rtnl_link_stats64, ptr %net_stats, i32 0, i32 1
  %tx_bytes24 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %net_stats, i32 0, i32 3
  %tx_errors27 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %net_stats, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %do.end22.for.body_crit_edge, %for.body.lr.ph
  %k.060 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %do.end22.for.body_crit_edge ]
  %2 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vpaths, align 8
  %stats = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 1, i32 14
  %rx_frms = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 1, i32 14, i32 1
  %rx_mcast = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 1, i32 14, i32 2
  %rx_bytes = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 1, i32 14, i32 3
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %for.body
  %call4 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %stats)
  %4 = ptrtoint ptr %rx_frms to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %rx_frms, align 8
  %6 = ptrtoint ptr %rx_mcast to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %rx_mcast, align 8
  %8 = ptrtoint ptr %rx_bytes to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %rx_bytes, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !957
  %10 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %stats, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %11, %call4
  br i1 %cmp.i.i.i.i.not, label %do.end, label %do.body.do.body_crit_edge

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

do.end:                                           ; preds = %do.body
  %stats3 = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 0, i32 9
  %12 = ptrtoint ptr %net_stats to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %net_stats, align 8
  %add = add i64 %13, %5
  store i64 %add, ptr %net_stats, align 8
  %14 = ptrtoint ptr %rx_bytes7 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %rx_bytes7, align 8
  %add8 = add i64 %15, %9
  store i64 %add8, ptr %rx_bytes7, align 8
  %16 = ptrtoint ptr %multicast9 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %multicast9, align 8
  %add10 = add i64 %17, %7
  store i64 %add10, ptr %multicast9, align 8
  %rx_errors = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 1, i32 14, i32 4
  %18 = ptrtoint ptr %rx_errors to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rx_errors, align 8
  %conv = zext i32 %19 to i64
  %20 = ptrtoint ptr %rx_errors11 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %rx_errors11, align 8
  %add12 = add i64 %21, %conv
  store i64 %add12, ptr %rx_errors11, align 8
  %rx_dropped = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 1, i32 14, i32 5
  %22 = ptrtoint ptr %rx_dropped to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %rx_dropped, align 4
  %conv13 = zext i32 %23 to i64
  %24 = ptrtoint ptr %rx_dropped14 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %rx_dropped14, align 8
  %add15 = add i64 %25, %conv13
  store i64 %add15, ptr %rx_dropped14, align 8
  %tx_frms = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 0, i32 9, i32 1
  %tx_bytes = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 0, i32 9, i32 2
  br label %do.body16

do.body16:                                        ; preds = %do.body16.do.body16_crit_edge, %do.end
  %call18 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %stats3)
  %26 = ptrtoint ptr %tx_frms to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %tx_frms, align 8
  %28 = ptrtoint ptr %tx_bytes to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %tx_bytes, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !957
  %30 = ptrtoint ptr %stats3 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %stats3, align 4
  %cmp.i.i.i.i54.not = icmp eq i32 %31, %call18
  br i1 %cmp.i.i.i.i54.not, label %do.end22, label %do.body16.do.body16_crit_edge

do.body16.do.body16_crit_edge:                    ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body16

do.end22:                                         ; preds = %do.body16
  %32 = ptrtoint ptr %tx_packets to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %tx_packets, align 8
  %add23 = add i64 %33, %27
  store i64 %add23, ptr %tx_packets, align 8
  %34 = ptrtoint ptr %tx_bytes24 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %tx_bytes24, align 8
  %add25 = add i64 %35, %29
  store i64 %add25, ptr %tx_bytes24, align 8
  %tx_errors = getelementptr %struct.vxge_vpath, ptr %3, i32 %k.060, i32 0, i32 9, i32 3
  %36 = ptrtoint ptr %tx_errors to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %tx_errors, align 8
  %conv26 = zext i32 %37 to i64
  %38 = ptrtoint ptr %tx_errors27 to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %tx_errors27, align 8
  %add28 = add i64 %39, %conv26
  store i64 %add28, ptr %tx_errors27, align 8
  %inc = add nuw nsw i32 %k.060, 1
  %40 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %41
  br i1 %cmp, label %do.end22.for.body_crit_edge, label %do.end22.for.end_crit_edge

do.end22.for.end_crit_edge:                       ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

do.end22.for.body_crit_edge:                      ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %do.end22.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_vlan_rx_add_vid(ptr noundef %dev, i16 noundef zeroext %proto, i16 noundef zeroext %vid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %no_of_vpath = getelementptr i8, ptr %dev, i32 9044
  %0 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp9 = icmp sgt i32 %1, 0
  br i1 %cmp9, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %vpaths = getelementptr i8, ptr %dev, i32 9280
  %conv = zext i16 %vid to i64
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %vp_id.010 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vpaths, align 8
  %is_open = getelementptr %struct.vxge_vpath, ptr %3, i32 %vp_id.010, i32 6
  %4 = ptrtoint ptr %is_open to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %is_open, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %handle = getelementptr %struct.vxge_vpath, ptr %3, i32 %vp_id.010, i32 2
  %6 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %handle, align 128
  %call1 = tail call i32 @vxge_hw_vpath_vid_add(ptr noundef %7, i64 noundef %conv) #16
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %vp_id.010, 1
  %8 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %9
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %conv2 = zext i16 %vid to i32
  %active_vlans = getelementptr i8, ptr %dev, i32 2316
  tail call void @_set_bit(i32 noundef %conv2, ptr noundef %active_vlans) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_vlan_rx_kill_vid(ptr noundef %dev, i16 noundef zeroext %proto, i16 noundef zeroext %vid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.432, i32 noundef 3316) #19
  %no_of_vpath = getelementptr i8, ptr %dev, i32 9044
  %0 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp21 = icmp sgt i32 %1, 0
  br i1 %cmp21, label %for.body.lr.ph, label %entry.do.end9_crit_edge

entry.do.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end9

for.body.lr.ph:                                   ; preds = %entry
  %vpaths = getelementptr i8, ptr %dev, i32 9280
  %conv = zext i16 %vid to i64
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %vp_id.022 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vpaths, align 8
  %is_open = getelementptr %struct.vxge_vpath, ptr %3, i32 %vp_id.022, i32 6
  %4 = ptrtoint ptr %is_open to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %is_open, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %handle = getelementptr %struct.vxge_vpath, ptr %3, i32 %vp_id.022, i32 2
  %6 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %handle, align 128
  %call5 = tail call i32 @vxge_hw_vpath_vid_delete(ptr noundef %7, i64 noundef %conv) #16
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %vp_id.022, 1
  %8 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %9
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.do.end9_crit_edge

for.inc.do.end9_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end9

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

do.end9:                                          ; preds = %for.inc.do.end9_crit_edge, %entry.do.end9_crit_edge
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.432, i32 noundef 3326) #19
  %conv14 = zext i16 %vid to i32
  %active_vlans = getelementptr i8, ptr %dev, i32 2316
  tail call void @_clear_bit(i32 noundef %conv14, ptr noundef %active_vlans) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_netpoll(ptr nocapture noundef readonly %dev) #0 align 64 {
entry:
  %skb_ptr.i.i = alloca ptr, align 4
  %completed.i.i = alloca [16 x ptr], align 4
  %more.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev1 = getelementptr i8, ptr %dev, i32 2308
  %0 = ptrtoint ptr %pdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev1, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %irq3 = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 46
  %4 = ptrtoint ptr %irq3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %irq3, align 4
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.435, i32 noundef 1881) #19
  %error_state.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 43
  %6 = ptrtoint ptr %error_state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i.not = icmp eq i32 %7, 1
  br i1 %cmp.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @disable_irq(i32 noundef %5) #16
  tail call void @vxge_hw_device_clear_tx_rx(ptr noundef %3) #16
  tail call void @vxge_hw_device_clear_tx_rx(ptr noundef %3) #16
  %no_of_vpath.i = getelementptr i8, ptr %dev, i32 9044
  %8 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp5.i = icmp sgt i32 %9, 0
  br i1 %cmp5.i, label %for.body.lr.ph.i, label %if.end.VXGE_COMPLETE_ALL_TX.exit_crit_edge

if.end.VXGE_COMPLETE_ALL_TX.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %VXGE_COMPLETE_ALL_TX.exit

for.body.lr.ph.i:                                 ; preds = %if.end
  %vpaths.i = getelementptr i8, ptr %dev, i32 9280
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.06.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %10 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vpaths.i, align 8
  %handle.i = getelementptr %struct.vxge_vpath, ptr %11, i32 %i.06.i, i32 1, i32 2
  %12 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %handle.i, align 8
  %call.i = tail call i32 @vxge_hw_vpath_poll_rx(ptr noundef %13) #16
  %inc.i = add nuw nsw i32 %i.06.i, 1
  %14 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i26 = icmp slt i32 %inc.i, %15
  br i1 %cmp.i26, label %for.body.i.for.body.i_crit_edge, label %VXGE_COMPLETE_ALL_RX.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

VXGE_COMPLETE_ALL_RX.exit:                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp4.i = icmp sgt i32 %15, 0
  br i1 %cmp4.i, label %VXGE_COMPLETE_ALL_RX.exit.for.body.i30_crit_edge, label %VXGE_COMPLETE_ALL_RX.exit.VXGE_COMPLETE_ALL_TX.exit_crit_edge

VXGE_COMPLETE_ALL_RX.exit.VXGE_COMPLETE_ALL_TX.exit_crit_edge: ; preds = %VXGE_COMPLETE_ALL_RX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %VXGE_COMPLETE_ALL_TX.exit

VXGE_COMPLETE_ALL_RX.exit.for.body.i30_crit_edge: ; preds = %VXGE_COMPLETE_ALL_RX.exit
  br label %for.body.i30

for.body.i30:                                     ; preds = %VXGE_COMPLETE_VPATH_TX.exit.i.for.body.i30_crit_edge, %VXGE_COMPLETE_ALL_RX.exit.for.body.i30_crit_edge
  %i.05.i = phi i32 [ %inc.i31, %VXGE_COMPLETE_VPATH_TX.exit.i.for.body.i30_crit_edge ], [ 0, %VXGE_COMPLETE_ALL_RX.exit.for.body.i30_crit_edge ]
  %16 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vpaths.i, align 8
  %arrayidx.i = getelementptr %struct.vxge_vpath, ptr %17, i32 %i.05.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb_ptr.i.i) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %completed.i.i) #16
  %18 = call ptr @memset(ptr %completed.i.i, i32 255, i32 64)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %more.i.i) #16
  %txq.i.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 3
  %handle.i.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 2
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %for.body.i30
  %19 = ptrtoint ptr %more.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %more.i.i, align 4
  %20 = ptrtoint ptr %skb_ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %completed.i.i, ptr %skb_ptr.i.i, align 4
  %21 = ptrtoint ptr %txq.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %txq.i.i, align 4
  %_xmit_lock.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %22, i32 0, i32 10
  %call.i.i.i.i = call i32 @_raw_spin_trylock(ptr noundef %_xmit_lock.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %do.body.i.i.if.end.i.i_crit_edge, label %if.then.i.i, !prof !948

do.body.i.i.if.end.i.i_crit_edge:                 ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i.i.i, align 4
  %xmit_lock_owner.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %22, i32 0, i32 11
  %27 = ptrtoint ptr %xmit_lock_owner.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile i32 %26, ptr %xmit_lock_owner.i.i.i, align 4
  %28 = ptrtoint ptr %handle.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %handle.i.i, align 8
  %call1.i.i = call i32 @vxge_hw_vpath_poll_tx(ptr noundef %29, ptr noundef nonnull %skb_ptr.i.i, i32 noundef 16, ptr noundef nonnull %more.i.i) #16
  %30 = ptrtoint ptr %txq.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %txq.i.i, align 4
  %xmit_lock_owner.i8.i.i = getelementptr inbounds %struct.netdev_queue, ptr %31, i32 0, i32 11
  %32 = ptrtoint ptr %xmit_lock_owner.i8.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile i32 -1, ptr %xmit_lock_owner.i8.i.i, align 4
  %_xmit_lock.i9.i.i = getelementptr inbounds %struct.netdev_queue, ptr %31, i32 0, i32 10
  call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i9.i.i) #16
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %do.body.i.i.if.end.i.i_crit_edge
  %33 = ptrtoint ptr %skb_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %skb_ptr.i.i, align 4
  %cmp.not10.i.i = icmp eq ptr %completed.i.i, %34
  br i1 %cmp.not10.i.i, label %if.end.i.i.do.cond.i.i_crit_edge, label %if.end.i.i.for.body.i.i_crit_edge

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  br label %for.body.i.i

if.end.i.i.do.cond.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.end.i.i.for.body.i.i_crit_edge
  %temp.011.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %completed.i.i, %if.end.i.i.for.body.i.i_crit_edge ]
  %35 = ptrtoint ptr %temp.011.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %temp.011.i.i, align 4
  call void @__dev_kfree_skb_irq(ptr noundef %36, i32 noundef 0) #16
  %incdec.ptr.i.i = getelementptr ptr, ptr %temp.011.i.i, i32 1
  %37 = ptrtoint ptr %skb_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %skb_ptr.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %incdec.ptr.i.i, %38
  br i1 %cmp.not.i.i, label %for.body.i.i.do.cond.i.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.body.i.i.do.cond.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

do.cond.i.i:                                      ; preds = %for.body.i.i.do.cond.i.i_crit_edge, %if.end.i.i.do.cond.i.i_crit_edge
  %39 = ptrtoint ptr %more.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %more.i.i, align 4
  %tobool.not.i.i = icmp eq i32 %40, 0
  br i1 %tobool.not.i.i, label %VXGE_COMPLETE_VPATH_TX.exit.i, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.i

VXGE_COMPLETE_VPATH_TX.exit.i:                    ; preds = %do.cond.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %more.i.i) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %completed.i.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb_ptr.i.i) #16
  %inc.i31 = add nuw nsw i32 %i.05.i, 1
  %41 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i32 = icmp slt i32 %inc.i31, %42
  br i1 %cmp.i32, label %VXGE_COMPLETE_VPATH_TX.exit.i.for.body.i30_crit_edge, label %VXGE_COMPLETE_VPATH_TX.exit.i.VXGE_COMPLETE_ALL_TX.exit_crit_edge

VXGE_COMPLETE_VPATH_TX.exit.i.VXGE_COMPLETE_ALL_TX.exit_crit_edge: ; preds = %VXGE_COMPLETE_VPATH_TX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %VXGE_COMPLETE_ALL_TX.exit

VXGE_COMPLETE_VPATH_TX.exit.i.for.body.i30_crit_edge: ; preds = %VXGE_COMPLETE_VPATH_TX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i30

VXGE_COMPLETE_ALL_TX.exit:                        ; preds = %VXGE_COMPLETE_VPATH_TX.exit.i.VXGE_COMPLETE_ALL_TX.exit_crit_edge, %VXGE_COMPLETE_ALL_RX.exit.VXGE_COMPLETE_ALL_TX.exit_crit_edge, %if.end.VXGE_COMPLETE_ALL_TX.exit_crit_edge
  call void @enable_irq(i32 noundef %5) #16
  %call14 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.435, i32 noundef 1896) #19
  br label %cleanup

cleanup:                                          ; preds = %VXGE_COMPLETE_ALL_TX.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @vxge_fix_features(ptr noundef %dev, i64 noundef %features) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %features1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %0 = ptrtoint ptr %features1 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %features1, align 16
  %xor = xor i64 %1, %features
  %and = and i64 %xor, 549755813888
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  %xor2 = xor i64 %features, 549755813888
  %spec.select = select i1 %tobool.i.not, i64 %features, i64 %xor2
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry.if.end_crit_edge
  %features.addr.0 = phi i64 [ %features, %entry.if.end_crit_edge ], [ %spec.select, %land.lhs.true ]
  ret i64 %features.addr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_set_features(ptr noundef %dev, i64 noundef %features) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %features1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %0 = ptrtoint ptr %features1 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %features1, align 16
  %xor = xor i64 %1, %features
  %and = and i64 %xor, 549755813888
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %devh = getelementptr i8, ptr %dev, i32 2312
  %2 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %devh, align 8
  %rth_en = getelementptr inbounds %struct.__vxge_hw_device, ptr %3, i32 0, i32 4, i32 3
  %4 = ptrtoint ptr %rth_en to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %rth_en, align 4
  %sh.diff = lshr i64 %features, 34
  %tr.sh.diff = trunc i64 %sh.diff to i8
  %bf.shl = and i8 %tr.sh.diff, 32
  %bf.clear = and i8 %bf.load, -33
  %bf.set = or i8 %bf.clear, %bf.shl
  store i8 %bf.set, ptr %rth_en, align 4
  %no_of_vpath.i = getelementptr i8, ptr %dev, i32 9044
  %5 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp35.i = icmp sgt i32 %6, 0
  br i1 %cmp35.i, label %for.body.lr.ph.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.end
  %vpaths.i = getelementptr i8, ptr %dev, i32 9280
  %state.i.i = getelementptr i8, ptr %dev, i32 3480
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.036.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %7 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vpaths.i, align 8
  %handle.i = getelementptr %struct.vxge_vpath, ptr %8, i32 %i.036.i, i32 2
  %9 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %handle.i, align 128
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %call.i = tail call i32 @vxge_hw_vpath_reset(ptr noundef nonnull %10) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp2.i = icmp eq i32 %call.i, 0
  br i1 %cmp2.i, label %if.then3.i, label %if.then.i.cleanup.sink.split_crit_edge

if.then.i.cleanup.sink.split_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then3.i:                                       ; preds = %if.then.i
  %11 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %state.i.i, align 4
  %13 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool5.not.i = icmp eq i32 %13, 0
  br i1 %tobool5.not.i, label %if.then3.i.for.inc.i_crit_edge, label %land.lhs.true.i

if.then3.i.for.inc.i_crit_edge:                   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %if.then3.i
  %14 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %handle.i, align 128
  %call7.i = tail call i32 @vxge_hw_vpath_recover_from_reset(ptr noundef %15) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %cmp8.not.i = icmp eq i32 %call7.i, 0
  br i1 %cmp8.not.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %land.lhs.true.i.cleanup.sink.split_crit_edge

land.lhs.true.i.cleanup.sink.split_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %if.then3.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.036.i, 1
  %16 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %no_of_vpath.i, align 4
  %cmp.i = icmp slt i32 %inc.i, %17
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.cleanup_crit_edge

for.inc.i.cleanup_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

cleanup.sink.split:                               ; preds = %land.lhs.true.i.cleanup.sink.split_crit_edge, %if.then.i.cleanup.sink.split_crit_edge
  %.str.345.sink = phi ptr [ @.str.342, %land.lhs.true.i.cleanup.sink.split_crit_edge ], [ @.str.345, %if.then.i.cleanup.sink.split_crit_edge ]
  %call19.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.345.sink, i32 noundef %i.036.i) #19
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %for.inc.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_napi_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_poll_inta(ptr noundef %napi, i32 noundef %budget) #0 align 64 {
entry:
  %skb_ptr.i.i = alloca ptr, align 4
  %completed.i.i = alloca [16 x ptr], align 4
  %more.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr i8, ptr %napi, i32 -6740
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44, i32 8
  %2 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_data.i.i, align 4
  %vpaths = getelementptr i8, ptr %napi, i32 232
  %no_of_vpath = getelementptr i8, ptr %napi, i32 -4
  %4 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp29 = icmp sgt i32 %5, 0
  br i1 %cmp29, label %entry.for.body_crit_edge, label %entry.VXGE_COMPLETE_ALL_TX.exit_crit_edge

entry.VXGE_COMPLETE_ALL_TX.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %VXGE_COMPLETE_ALL_TX.exit

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.032, 1
  %6 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %7
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %entry.for.body_crit_edge
  %i.032 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %pkts_processed.031 = phi i32 [ %add, %for.cond.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %budget.addr.030 = phi i32 [ %sub, %for.cond.for.body_crit_edge ], [ %budget, %entry.for.body_crit_edge ]
  %8 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vpaths, align 8
  %budget2 = getelementptr %struct.vxge_vpath, ptr %9, i32 %i.032, i32 1, i32 8
  %10 = ptrtoint ptr %budget2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %budget.addr.030, ptr %budget2, align 32
  %pkts_processed3 = getelementptr %struct.vxge_vpath, ptr %9, i32 %i.032, i32 1, i32 7
  %11 = ptrtoint ptr %pkts_processed3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %pkts_processed3, align 4
  %handle = getelementptr %struct.vxge_vpath, ptr %9, i32 %i.032, i32 1, i32 2
  %12 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %handle, align 8
  %call4 = tail call i32 @vxge_hw_vpath_poll_rx(ptr noundef %13) #16
  %14 = ptrtoint ptr %pkts_processed3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pkts_processed3, align 4
  %add = add i32 %15, %pkts_processed.031
  %sub = sub i32 %budget.addr.030, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub)
  %cmp7 = icmp slt i32 %sub, 1
  br i1 %cmp7, label %for.endthread-pre-split, label %for.cond

for.endthread-pre-split:                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pr = load i32, ptr %no_of_vpath, align 4
  br label %for.end

for.end:                                          ; preds = %for.endthread-pre-split, %for.cond.for.end_crit_edge
  %17 = phi i32 [ %.pr, %for.endthread-pre-split ], [ %7, %for.cond.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp4.i = icmp sgt i32 %17, 0
  br i1 %cmp4.i, label %for.end.for.body.i_crit_edge, label %for.end.VXGE_COMPLETE_ALL_TX.exit_crit_edge

for.end.VXGE_COMPLETE_ALL_TX.exit_crit_edge:      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %VXGE_COMPLETE_ALL_TX.exit

for.end.for.body.i_crit_edge:                     ; preds = %for.end
  br label %for.body.i

for.body.i:                                       ; preds = %VXGE_COMPLETE_VPATH_TX.exit.i.for.body.i_crit_edge, %for.end.for.body.i_crit_edge
  %i.05.i = phi i32 [ %inc.i, %VXGE_COMPLETE_VPATH_TX.exit.i.for.body.i_crit_edge ], [ 0, %for.end.for.body.i_crit_edge ]
  %18 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vpaths, align 8
  %arrayidx.i = getelementptr %struct.vxge_vpath, ptr %19, i32 %i.05.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb_ptr.i.i) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %completed.i.i) #16
  %20 = call ptr @memset(ptr %completed.i.i, i32 255, i32 64)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %more.i.i) #16
  %txq.i.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 3
  %handle.i.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i, i32 0, i32 2
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %for.body.i
  %21 = ptrtoint ptr %more.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %more.i.i, align 4
  %22 = ptrtoint ptr %skb_ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %completed.i.i, ptr %skb_ptr.i.i, align 4
  %23 = ptrtoint ptr %txq.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %txq.i.i, align 4
  %_xmit_lock.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %24, i32 0, i32 10
  %call.i.i.i.i = call i32 @_raw_spin_trylock(ptr noundef %_xmit_lock.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %do.body.i.i.if.end.i.i_crit_edge, label %if.then.i.i, !prof !948

do.body.i.i.if.end.i.i_crit_edge:                 ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %25 = call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cpu.i.i.i, align 4
  %xmit_lock_owner.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %24, i32 0, i32 11
  %29 = ptrtoint ptr %xmit_lock_owner.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile i32 %28, ptr %xmit_lock_owner.i.i.i, align 4
  %30 = ptrtoint ptr %handle.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %handle.i.i, align 8
  %call1.i.i = call i32 @vxge_hw_vpath_poll_tx(ptr noundef %31, ptr noundef nonnull %skb_ptr.i.i, i32 noundef 16, ptr noundef nonnull %more.i.i) #16
  %32 = ptrtoint ptr %txq.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %txq.i.i, align 4
  %xmit_lock_owner.i8.i.i = getelementptr inbounds %struct.netdev_queue, ptr %33, i32 0, i32 11
  %34 = ptrtoint ptr %xmit_lock_owner.i8.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile i32 -1, ptr %xmit_lock_owner.i8.i.i, align 4
  %_xmit_lock.i9.i.i = getelementptr inbounds %struct.netdev_queue, ptr %33, i32 0, i32 10
  call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i9.i.i) #16
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %do.body.i.i.if.end.i.i_crit_edge
  %35 = ptrtoint ptr %skb_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %skb_ptr.i.i, align 4
  %cmp.not10.i.i = icmp eq ptr %completed.i.i, %36
  br i1 %cmp.not10.i.i, label %if.end.i.i.do.cond.i.i_crit_edge, label %if.end.i.i.for.body.i.i_crit_edge

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  br label %for.body.i.i

if.end.i.i.do.cond.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.end.i.i.for.body.i.i_crit_edge
  %temp.011.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %completed.i.i, %if.end.i.i.for.body.i.i_crit_edge ]
  %37 = ptrtoint ptr %temp.011.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %temp.011.i.i, align 4
  call void @__dev_kfree_skb_irq(ptr noundef %38, i32 noundef 0) #16
  %incdec.ptr.i.i = getelementptr ptr, ptr %temp.011.i.i, i32 1
  %39 = ptrtoint ptr %skb_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %skb_ptr.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %incdec.ptr.i.i, %40
  br i1 %cmp.not.i.i, label %for.body.i.i.do.cond.i.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.body.i.i.do.cond.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

do.cond.i.i:                                      ; preds = %for.body.i.i.do.cond.i.i_crit_edge, %if.end.i.i.do.cond.i.i_crit_edge
  %41 = ptrtoint ptr %more.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %more.i.i, align 4
  %tobool.not.i.i = icmp eq i32 %42, 0
  br i1 %tobool.not.i.i, label %VXGE_COMPLETE_VPATH_TX.exit.i, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.i

VXGE_COMPLETE_VPATH_TX.exit.i:                    ; preds = %do.cond.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %more.i.i) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %completed.i.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb_ptr.i.i) #16
  %inc.i = add nuw nsw i32 %i.05.i, 1
  %43 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %no_of_vpath, align 4
  %cmp.i = icmp slt i32 %inc.i, %44
  br i1 %cmp.i, label %VXGE_COMPLETE_VPATH_TX.exit.i.for.body.i_crit_edge, label %VXGE_COMPLETE_VPATH_TX.exit.i.VXGE_COMPLETE_ALL_TX.exit_crit_edge

VXGE_COMPLETE_VPATH_TX.exit.i.VXGE_COMPLETE_ALL_TX.exit_crit_edge: ; preds = %VXGE_COMPLETE_VPATH_TX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %VXGE_COMPLETE_ALL_TX.exit

VXGE_COMPLETE_VPATH_TX.exit.i.for.body.i_crit_edge: ; preds = %VXGE_COMPLETE_VPATH_TX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

VXGE_COMPLETE_ALL_TX.exit:                        ; preds = %VXGE_COMPLETE_VPATH_TX.exit.i.VXGE_COMPLETE_ALL_TX.exit_crit_edge, %for.end.VXGE_COMPLETE_ALL_TX.exit_crit_edge, %entry.VXGE_COMPLETE_ALL_TX.exit_crit_edge
  %pkts_processed.136 = phi i32 [ %add, %for.end.VXGE_COMPLETE_ALL_TX.exit_crit_edge ], [ 0, %entry.VXGE_COMPLETE_ALL_TX.exit_crit_edge ], [ %add, %VXGE_COMPLETE_VPATH_TX.exit.i.VXGE_COMPLETE_ALL_TX.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %pkts_processed.136, i32 %budget)
  %cmp8 = icmp slt i32 %pkts_processed.136, %budget
  br i1 %cmp8, label %if.then9, label %VXGE_COMPLETE_ALL_TX.exit.if.end11_crit_edge

VXGE_COMPLETE_ALL_TX.exit.if.end11_crit_edge:     ; preds = %VXGE_COMPLETE_ALL_TX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.then9:                                         ; preds = %VXGE_COMPLETE_ALL_TX.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call10 = call zeroext i1 @napi_complete_done(ptr noundef %napi, i32 noundef %pkts_processed.136) #16
  call void @vxge_hw_device_unmask_all(ptr noundef %3) #16
  call void @vxge_hw_device_flush_io(ptr noundef %3) #16
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %VXGE_COMPLETE_ALL_TX.exit.if.end11_crit_edge
  ret i32 %pkts_processed.136
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_poll_msix(ptr noundef %napi, i32 noundef %budget) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %budget1 = getelementptr i8, ptr %napi, i32 -8
  %0 = ptrtoint ptr %budget1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %budget, ptr %budget1, align 32
  %pkts_processed2 = getelementptr i8, ptr %napi, i32 -12
  %1 = ptrtoint ptr %pkts_processed2 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %pkts_processed2, align 4
  %handle = getelementptr i8, ptr %napi, i32 -32
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %handle, align 8
  %call = tail call i32 @vxge_hw_vpath_poll_rx(ptr noundef %3) #16
  %4 = ptrtoint ptr %pkts_processed2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pkts_processed2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %budget)
  %cmp = icmp slt i32 %5, %budget
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call4 = tail call zeroext i1 @napi_complete_done(ptr noundef %napi, i32 noundef %5) #16
  %6 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %handle, align 8
  %rx_vector_no = getelementptr i8, ptr %napi, i32 232
  %8 = ptrtoint ptr %rx_vector_no to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rx_vector_no, align 16
  tail call void @vxge_hw_channel_msix_unmask(ptr noundef %7, i32 noundef %9) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_mtu_set(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_restore_vpath_mac_addr(ptr noundef readonly %vpath) unnamed_addr #0 align 64 {
entry:
  %macmask.i = alloca [6 x i8], align 1
  %macaddr.i = alloca [6 x i8], align 4
  %mac_info = alloca %struct.macInfo, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %mac_info) #16
  %0 = getelementptr inbounds [6 x i8], ptr %mac_info, i32 0, i32 4
  %1 = getelementptr inbounds %struct.macInfo, ptr %mac_info, i32 0, i32 1
  %2 = call ptr @memset(ptr %mac_info, i32 0, i32 20)
  %is_open = getelementptr inbounds %struct.vxge_vpath, ptr %vpath, i32 0, i32 6
  %3 = ptrtoint ptr %is_open to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %is_open, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end22_crit_edge, label %if.then

entry.if.end22_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.then:                                          ; preds = %entry
  %mac_addr_list = getelementptr inbounds %struct.vxge_vpath, ptr %vpath, i32 0, i32 12
  %5 = ptrtoint ptr %mac_addr_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mac_addr_list, align 8
  %cmp.i.not4 = icmp eq ptr %6, %mac_addr_list
  br i1 %cmp.i.not4, label %if.then.if.end22_crit_edge, label %for.body.lr.ph

if.then.if.end22_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

for.body.lr.ph:                                   ; preds = %if.then
  %7 = getelementptr inbounds [6 x i8], ptr %macaddr.i, i32 0, i32 4
  %handle.i = getelementptr inbounds %struct.vxge_vpath, ptr %vpath, i32 0, i32 2
  %device_id.i = getelementptr inbounds %struct.vxge_vpath, ptr %vpath, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %entry1.05 = phi ptr [ %6, %for.body.lr.ph ], [ %next.06, %for.inc.for.body_crit_edge ]
  %8 = ptrtoint ptr %entry1.05 to i32
  call void @__asan_load4_noabort(i32 %8)
  %next.06 = load ptr, ptr %entry1.05, align 4
  %macaddr = getelementptr inbounds %struct.vxge_mac_addrs, ptr %entry1.05, i32 0, i32 1
  %9 = call ptr @memcpy(ptr %mac_info, ptr %macaddr, i32 6)
  %state = getelementptr inbounds %struct.vxge_mac_addrs, ptr %entry1.05, i32 0, i32 3
  %10 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 1, ptr %state, align 8
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %macmask.i) #16
  %11 = call ptr @memset(ptr %macmask.i, i32 255, i32 6)
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %macaddr.i) #16
  %12 = call ptr @memset(ptr %macaddr.i, i32 255, i32 6)
  %13 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %handle.i, align 128
  %call.i = call i32 @vxge_hw_vpath_mac_addr_get(ptr noundef %14, ptr noundef nonnull %macaddr.i, ptr noundef nonnull %macmask.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp.not.i, label %for.body.while.cond.i_crit_edge, label %do.end.i

for.body.while.cond.i_crit_edge:                  ; preds = %for.body
  br label %while.cond.i

do.end.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %device_id.i, align 4
  %call3.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.329, i32 noundef %16) #19
  br label %if.then8

while.cond.i:                                     ; preds = %while.body.i.while.cond.i_crit_edge, %for.body.while.cond.i_crit_edge
  %17 = ptrtoint ptr %mac_info to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %mac_info, align 4
  %19 = ptrtoint ptr %macaddr.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %macaddr.i, align 4
  %xor.i.i = xor i32 %20, %18
  %21 = ptrtoint ptr %0 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %0, align 4
  %23 = ptrtoint ptr %7 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %7, align 4
  %xor37.i.i = xor i16 %24, %22
  %xor3.i.i = zext i16 %xor37.i.i to i32
  %or.i.i = or i32 %xor.i.i, %xor3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i, label %vxge_search_mac_addr_in_da_table.exit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %25 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %handle.i, align 128
  %call13.i = call i32 @vxge_hw_vpath_mac_addr_get_next(ptr noundef %26, ptr noundef nonnull %macaddr.i, ptr noundef nonnull %macmask.i) #16
  %cmp14.not.i = icmp eq i32 %call13.i, 0
  br i1 %cmp14.not.i, label %while.body.i.while.cond.i_crit_edge, label %while.body.i.if.then8_crit_edge

while.body.i.if.then8_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then8

while.body.i.while.cond.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond.i

vxge_search_mac_addr_in_da_table.exit:            ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %macaddr.i) #16
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %macmask.i) #16
  br label %for.inc

if.then8:                                         ; preds = %while.body.i.if.then8_crit_edge, %do.end.i
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %macaddr.i) #16
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %macmask.i) #16
  %27 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %handle.i, align 128
  %call12 = call i32 @vxge_hw_vpath_mac_addr_add(ptr noundef %28, ptr noundef nonnull %mac_info, ptr noundef %1, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp13.not = icmp eq i32 %call12, 0
  br i1 %cmp13.not, label %if.then8.for.inc_crit_edge, label %do.end

if.then8.for.inc_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

do.end:                                           ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %device_id.i, align 4
  %call16 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.327, i32 noundef %30) #19
  %31 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %state, align 8
  br label %for.inc

for.inc:                                          ; preds = %do.end, %if.then8.for.inc_crit_edge, %vxge_search_mac_addr_in_da_table.exit
  %cmp.i.not = icmp eq ptr %next.06, %mac_addr_list
  br i1 %cmp.i.not, label %for.inc.if.end22_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.if.end22_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.end22:                                         ; preds = %for.inc.if.end22_crit_edge, %if.then.if.end22_crit_edge, %entry.if.end22_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %mac_info) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_mcast_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_bcast_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_device_setpause_data(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_poll_vp_reset(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -1184
  %no_of_vpath = getelementptr i8, ptr %t, i32 5556
  %0 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp20 = icmp sgt i32 %1, 0
  br i1 %cmp20, label %for.body.lr.ph, label %entry.if.end7_crit_edge

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

for.body.lr.ph:                                   ; preds = %entry
  %vp_reset = getelementptr i8, ptr %t, i32 -4
  %vpaths.i = getelementptr i8, ptr %t, i32 5792
  %state.i.i = getelementptr i8, ptr %t, i32 -8
  %all_multi_flg.i = getelementptr i8, ptr %t, i32 96
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %j.024 = phi i32 [ 0, %for.body.lr.ph ], [ %j.1, %for.inc.for.body_crit_edge ]
  %i.021 = phi i32 [ 0, %for.body.lr.ph ], [ %inc2, %for.inc.for.body_crit_edge ]
  %div3.i = lshr i32 %i.021, 5
  %arrayidx.i = getelementptr i32, ptr %vp_reset, i32 %div3.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %i.021, 31
  %4 = shl nuw i32 1, %and.i
  %5 = and i32 %3, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %for.body
  %6 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vpaths.i, align 8
  %arrayidx.i19 = getelementptr %struct.vxge_vpath, ptr %7, i32 %i.021
  %8 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i.i, align 4
  %10 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i, label %if.then.vxge_reset_vpath.exit_crit_edge, label %if.end.i, !prof !948

if.then.vxge_reset_vpath.exit_crit_edge:          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_reset_vpath.exit

if.end.i:                                         ; preds = %if.then
  %11 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool5.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool5.not.i, label %if.end7.i, label %if.end.i.vxge_reset_vpath.exit_crit_edge

if.end.i.vxge_reset_vpath.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_reset_vpath.exit

if.end7.i:                                        ; preds = %if.end.i
  %handle.i = getelementptr %struct.vxge_vpath, ptr %7, i32 %i.021, i32 2
  %13 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %handle.i, align 128
  %tobool8.not.i = icmp eq ptr %14, null
  br i1 %tobool8.not.i, label %if.end7.i.vxge_reset_vpath.exit_crit_edge, label %if.then9.i

if.end7.i.vxge_reset_vpath.exit_crit_edge:        ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_reset_vpath.exit

if.then9.i:                                       ; preds = %if.end7.i
  %call11.i = tail call i32 @vxge_hw_vpath_reset(ptr noundef nonnull %14) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i)
  %cmp.i = icmp eq i32 %call11.i, 0
  br i1 %cmp.i, label %if.then12.i, label %do.end27.i

if.then12.i:                                      ; preds = %if.then9.i
  %15 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %state.i.i, align 4
  %17 = and i32 %16, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool14.not.i = icmp eq i32 %17, 0
  br i1 %tobool14.not.i, label %if.then12.i.if.end34.i_crit_edge, label %land.lhs.true.i

if.then12.i.if.end34.i_crit_edge:                 ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end34.i

land.lhs.true.i:                                  ; preds = %if.then12.i
  %18 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %handle.i, align 128
  %call16.i = tail call i32 @vxge_hw_vpath_recover_from_reset(ptr noundef %19) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %cmp17.not.i = icmp eq i32 %call16.i, 0
  br i1 %cmp17.not.i, label %land.lhs.true.i.if.end34.i_crit_edge, label %do.end.i

land.lhs.true.i.if.end34.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end34.i

do.end.i:                                         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %call20.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.332, i32 noundef %i.021) #19
  br label %vxge_reset_vpath.exit

do.end27.i:                                       ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #18
  %call29.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.335, i32 noundef %i.021) #19
  br label %vxge_reset_vpath.exit

if.end34.i:                                       ; preds = %land.lhs.true.i.if.end34.i_crit_edge, %if.then12.i.if.end34.i_crit_edge
  tail call fastcc void @vxge_restore_vpath_mac_addr(ptr noundef %arrayidx.i19) #16
  %is_open.i.i = getelementptr %struct.vxge_vpath, ptr %7, i32 %i.021, i32 6
  %20 = ptrtoint ptr %is_open.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %is_open.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i.i = icmp eq i32 %21, 0
  br i1 %tobool.not.i.i, label %if.end34.i.vxge_restore_vpath_vid_table.exit.i_crit_edge, label %if.end.i.i

if.end34.i.vxge_restore_vpath_vid_table.exit.i_crit_edge: ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit.i

if.end.i.i:                                       ; preds = %if.end34.i
  %vdev1.i.i = getelementptr %struct.vxge_vpath, ptr %7, i32 %i.021, i32 7
  %22 = ptrtoint ptr %vdev1.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vdev1.i.i, align 4
  %active_vlans.i.i = getelementptr inbounds %struct.vxgedev, ptr %23, i32 0, i32 3
  %call.i.i = tail call i32 @_find_next_bit_be(ptr noundef %active_vlans.i.i, i32 noundef 4096, i32 noundef 0) #16
  %conv21.i.i = and i32 %call.i.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %conv21.i.i)
  %cmp2.i.i = icmp ult i32 %conv21.i.i, 4096
  br i1 %cmp2.i.i, label %if.end.i.i.for.body.i.i_crit_edge, label %if.end.i.i.vxge_restore_vpath_vid_table.exit.i_crit_edge

if.end.i.i.vxge_restore_vpath_vid_table.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit.i

if.end.i.i.for.body.i.i_crit_edge:                ; preds = %if.end.i.i
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.end.i.i.for.body.i.i_crit_edge
  %conv23.i.i = phi i32 [ %conv2.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %conv21.i.i, %if.end.i.i.for.body.i.i_crit_edge ]
  %24 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %handle.i, align 128
  %conv4.i.i = zext i32 %conv23.i.i to i64
  %call5.i.i = tail call i32 @vxge_hw_vpath_vid_add(ptr noundef %25, i64 noundef %conv4.i.i) #16
  %add.i.i = add nuw nsw i32 %conv23.i.i, 1
  %call9.i.i = tail call i32 @_find_next_bit_be(ptr noundef %active_vlans.i.i, i32 noundef 4096, i32 noundef %add.i.i) #16
  %conv2.i.i = and i32 %call9.i.i, 65535
  %cmp.i.i = icmp ult i32 %conv2.i.i, 4096
  br i1 %cmp.i.i, label %for.body.i.i.for.body.i.i_crit_edge, label %for.body.i.i.vxge_restore_vpath_vid_table.exit.i_crit_edge

for.body.i.i.vxge_restore_vpath_vid_table.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit.i

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

vxge_restore_vpath_vid_table.exit.i:              ; preds = %for.body.i.i.vxge_restore_vpath_vid_table.exit.i_crit_edge, %if.end.i.i.vxge_restore_vpath_vid_table.exit.i_crit_edge, %if.end34.i.vxge_restore_vpath_vid_table.exit.i_crit_edge
  %26 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %handle.i, align 128
  %call38.i = tail call i32 @vxge_hw_vpath_bcast_enable(ptr noundef %27) #16
  %28 = ptrtoint ptr %all_multi_flg.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %all_multi_flg.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool39.not.i = icmp eq i16 %29, 0
  br i1 %tobool39.not.i, label %vxge_restore_vpath_vid_table.exit.i.if.end54.i_crit_edge, label %if.then40.i

vxge_restore_vpath_vid_table.exit.i.if.end54.i_crit_edge: ; preds = %vxge_restore_vpath_vid_table.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54.i

if.then40.i:                                      ; preds = %vxge_restore_vpath_vid_table.exit.i
  %30 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %handle.i, align 128
  %call42.i = tail call i32 @vxge_hw_vpath_mcast_enable(ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i)
  %cmp43.not.i = icmp eq i32 %call42.i, 0
  br i1 %cmp43.not.i, label %if.then40.i.if.end54.i_crit_edge, label %do.end48.i

if.then40.i.if.end54.i_crit_edge:                 ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54.i

do.end48.i:                                       ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #18
  %call50.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.202, ptr noundef nonnull @.str.333, i32 noundef 1552) #19
  br label %if.end54.i

if.end54.i:                                       ; preds = %do.end48.i, %if.then40.i.if.end54.i_crit_edge, %vxge_restore_vpath_vid_table.exit.i.if.end54.i_crit_edge
  tail call fastcc void @vxge_vpath_intr_enable(ptr noundef %add.ptr, i32 noundef %i.021) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !958
  %32 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %handle.i, align 128
  tail call void @vxge_hw_vpath_enable(ptr noundef %33) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !959
  %34 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %handle.i, align 128
  tail call void @vxge_hw_vpath_rx_doorbell_init(ptr noundef %35) #16
  %last_status.i = getelementptr %struct.vxge_vpath, ptr %7, i32 %i.021, i32 1, i32 13
  %36 = ptrtoint ptr %last_status.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %last_status.i, align 4
  tail call void @_clear_bit(i32 noundef %i.021, ptr noundef %vp_reset) #16
  %txq.i = getelementptr inbounds %struct.vxge_fifo, ptr %arrayidx.i19, i32 0, i32 3
  %37 = ptrtoint ptr %txq.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %txq.i, align 4
  %state.i4.i = getelementptr inbounds %struct.netdev_queue, ptr %38, i32 0, i32 13
  %39 = ptrtoint ptr %state.i4.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %state.i4.i, align 4
  %and1.i.i5.i = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i5.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i5.i, 0
  br i1 %tobool.i.not.i, label %if.end54.i.vxge_reset_vpath.exit_crit_edge, label %if.then70.i

if.end54.i.vxge_reset_vpath.exit_crit_edge:       ; preds = %if.end54.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_reset_vpath.exit

if.then70.i:                                      ; preds = %if.end54.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @netif_tx_wake_queue(ptr noundef %38) #16
  br label %vxge_reset_vpath.exit

vxge_reset_vpath.exit:                            ; preds = %if.then70.i, %if.end54.i.vxge_reset_vpath.exit_crit_edge, %do.end27.i, %do.end.i, %if.end7.i.vxge_reset_vpath.exit_crit_edge, %if.end.i.vxge_reset_vpath.exit_crit_edge, %if.then.vxge_reset_vpath.exit_crit_edge
  %inc = add i32 %j.024, 1
  br label %for.inc

for.inc:                                          ; preds = %vxge_reset_vpath.exit, %for.body.for.inc_crit_edge
  %j.1 = phi i32 [ %inc, %vxge_reset_vpath.exit ], [ %j.024, %for.body.for.inc_crit_edge ]
  %inc2 = add nuw nsw i32 %i.021, 1
  %41 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc2, %42
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %j.1)
  %tobool3.not = icmp eq i32 %j.1, 0
  br i1 %tobool3.not, label %for.end.if.end7_crit_edge, label %land.lhs.true

for.end.if.end7_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

land.lhs.true:                                    ; preds = %for.end
  %intr_type = getelementptr i8, ptr %t, i32 -644
  %43 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %intr_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %44)
  %cmp4.not = icmp eq i32 %44, 2
  br i1 %cmp4.not, label %land.lhs.true.if.end7_crit_edge, label %if.then5

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then5:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %devh = getelementptr i8, ptr %t, i32 -1176
  %45 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %devh, align 8
  tail call void @vxge_hw_device_unmask_all(ptr noundef %46) #16
  %47 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %devh, align 8
  tail call void @vxge_hw_device_flush_io(ptr noundef %48) #16
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %land.lhs.true.if.end7_crit_edge, %for.end.if.end7_crit_edge, %entry.if.end7_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %49 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %49, 50
  %call8 = tail call i32 @mod_timer(ptr noundef %t, i32 noundef %add) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_poll_vp_lockup(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -1232
  %no_of_vpath = getelementptr i8, ptr %t, i32 5508
  %0 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp39 = icmp sgt i32 %1, 0
  br i1 %cmp39, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %vpaths = getelementptr i8, ptr %t, i32 5744
  %vp_reset = getelementptr i8, ptr %t, i32 -52
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.041 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %status.040 = phi i32 [ 0, %for.body.lr.ph ], [ %status.2, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vpaths, align 8
  %rx_frms3 = getelementptr %struct.vxge_vpath, ptr %3, i32 %i.041, i32 1, i32 14, i32 1
  %4 = ptrtoint ptr %rx_frms3 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load volatile i64, ptr %rx_frms3, align 8
  %conv = trunc i64 %5 to i32
  %prev_rx_frms = getelementptr %struct.vxge_vpath, ptr %3, i32 %i.041, i32 1, i32 14, i32 6
  %6 = ptrtoint ptr %prev_rx_frms to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %prev_rx_frms, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %conv)
  %cmp5 = icmp eq i32 %7, %conv
  br i1 %cmp5, label %if.then, label %for.body.if.end17_crit_edge

for.body.if.end17_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then:                                          ; preds = %for.body
  %handle = getelementptr %struct.vxge_vpath, ptr %3, i32 %i.041, i32 1, i32 2
  %8 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %handle, align 8
  %call = tail call i32 @vxge_hw_vpath_check_leak(ptr noundef %9) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp7 = icmp eq i32 %call, 1
  br i1 %cmp7, label %land.lhs.true, label %if.then.if.end17_crit_edge

if.then.if.end17_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

land.lhs.true:                                    ; preds = %if.then
  %last_status = getelementptr %struct.vxge_vpath, ptr %3, i32 %i.041, i32 1, i32 13
  %10 = ptrtoint ptr %last_status to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %last_status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp9 = icmp eq i32 %11, 1
  br i1 %cmp9, label %if.then11, label %land.lhs.true.if.end17_crit_edge

land.lhs.true.if.end17_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then11:                                        ; preds = %land.lhs.true
  %call12 = tail call i32 @_test_and_set_bit(i32 noundef %i.041, ptr noundef %vp_reset) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool.not = icmp eq i32 %call12, 0
  br i1 %tobool.not, label %if.then13, label %if.then11.if.end17_crit_edge

if.then11.if.end17_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then13:                                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vpaths, align 8
  tail call fastcc void @vxge_vpath_intr_disable(ptr noundef %add.ptr, i32 noundef %i.041)
  %txq = getelementptr %struct.vxge_vpath, ptr %13, i32 %i.041, i32 0, i32 3
  %14 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %txq, align 4
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %15, i32 0, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i) #16
  br label %for.inc

if.end17:                                         ; preds = %if.then11.if.end17_crit_edge, %land.lhs.true.if.end17_crit_edge, %if.then.if.end17_crit_edge, %for.body.if.end17_crit_edge
  %status.1 = phi i32 [ 1, %if.then11.if.end17_crit_edge ], [ 1, %land.lhs.true.if.end17_crit_edge ], [ %call, %if.then.if.end17_crit_edge ], [ %status.040, %for.body.if.end17_crit_edge ]
  %16 = ptrtoint ptr %prev_rx_frms to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %conv, ptr %prev_rx_frms, align 8
  %last_status20 = getelementptr %struct.vxge_vpath, ptr %3, i32 %i.041, i32 1, i32 13
  %17 = ptrtoint ptr %last_status20 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %status.1, ptr %last_status20, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end17, %if.then13
  %status.2 = phi i32 [ %status.1, %if.end17 ], [ 1, %if.then13 ]
  %inc = add nuw nsw i32 %i.041, 1
  %18 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %19
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %20 = load volatile i32, ptr @jiffies, align 128
  %call21 = tail call i32 @mod_timer(ptr noundef %t, i32 noundef %20) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_intr_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_rx_doorbell_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_config_ci_for_tti_rti(ptr nocapture noundef readonly %vdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %intr_type = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 3
  %0 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %intr_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %for.cond.preheader, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.cond.preheader:                               ; preds = %entry
  %no_of_vpath = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 17
  %2 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp130 = icmp sgt i32 %3, 0
  br i1 %cmp130, label %for.body.lr.ph, label %for.cond.preheader.if.end_crit_edge

for.cond.preheader.if.end_crit_edge:              ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %vpaths = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.031 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %4 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vpaths, align 8
  %handle = getelementptr %struct.vxge_vpath, ptr %5, i32 %i.031, i32 1, i32 2
  %6 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %handle, align 8
  tail call void @vxge_hw_vpath_dynamic_rti_ci_set(ptr noundef %7) #16
  %inc = add nuw nsw i32 %i.031, 1
  %8 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %no_of_vpath, align 4
  %cmp1 = icmp slt i32 %inc, %9
  br i1 %cmp1, label %for.body.for.body_crit_edge, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

if.end:                                           ; preds = %for.body.if.end_crit_edge, %for.cond.preheader.if.end_crit_edge, %entry.if.end_crit_edge
  %no_of_vpath3 = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 17
  %10 = ptrtoint ptr %no_of_vpath3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %no_of_vpath3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp432 = icmp sgt i32 %11, 0
  br i1 %cmp432, label %for.body5.lr.ph, label %if.end.for.end17_crit_edge

if.end.for.end17_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end17

for.body5.lr.ph:                                  ; preds = %if.end
  %vpaths6 = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  br label %for.body5

for.cond2:                                        ; preds = %for.body5
  %inc16 = add nuw nsw i32 %i.133, 1
  %12 = ptrtoint ptr %no_of_vpath3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %no_of_vpath3, align 4
  %cmp4 = icmp slt i32 %inc16, %13
  br i1 %cmp4, label %for.cond2.for.body5_crit_edge, label %for.cond2.for.end17_crit_edge

for.cond2.for.end17_crit_edge:                    ; preds = %for.cond2
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end17

for.cond2.for.body5_crit_edge:                    ; preds = %for.cond2
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body5

for.body5:                                        ; preds = %for.cond2.for.body5_crit_edge, %for.body5.lr.ph
  %i.133 = phi i32 [ 0, %for.body5.lr.ph ], [ %inc16, %for.cond2.for.body5_crit_edge ]
  %14 = ptrtoint ptr %vpaths6 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vpaths6, align 8
  %handle8 = getelementptr %struct.vxge_vpath, ptr %15, i32 %i.133, i32 0, i32 2
  %16 = ptrtoint ptr %handle8 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %handle8, align 8
  tail call void @vxge_hw_vpath_tti_ci_set(ptr noundef %17) #16
  %18 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %intr_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp11 = icmp eq i32 %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.133)
  %cmp12 = icmp eq i32 %i.133, 0
  %or.cond = select i1 %cmp11, i1 %cmp12, i1 false
  br i1 %or.cond, label %for.body5.for.end17_crit_edge, label %for.cond2

for.body5.for.end17_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end17

for.end17:                                        ; preds = %for.body5.for.end17_crit_edge, %for.cond2.for.end17_crit_edge, %if.end.for.end17_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_xmit_compl(ptr noundef %fifo_hw, ptr noundef %dtr, i32 noundef %t_code, ptr noundef %userdata, ptr nocapture noundef %skb_ptr, i32 noundef %nr_skb, ptr nocapture noundef writeonly %more) #0 align 64 {
entry:
  %dtr.addr = alloca ptr, align 4
  %t_code.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %dtr, ptr %dtr.addr, align 4
  %1 = ptrtoint ptr %t_code.addr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %t_code, ptr %t_code.addr, align 4
  %2 = ptrtoint ptr %skb_ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skb_ptr, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.217, ptr noundef nonnull @.str.218, i32 noundef 556) #19
  %tx_errors = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 9, i32 3
  %pdev = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 1
  %stats53 = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 9
  %tx_frms = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 9, i32 1
  %tx_bytes = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 9, i32 2
  %dep_map.i.i = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 9, i32 0, i32 0, i32 1
  %indicate_max_pkts = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 5
  br label %do.body4

do.body4:                                         ; preds = %do.cond73.do.body4_crit_edge, %entry
  %pkt_cnt.0 = phi i32 [ 0, %entry ], [ %inc64, %do.cond73.do.body4_crit_edge ]
  %done_skb.0 = phi ptr [ %3, %entry ], [ %incdec.ptr, %do.cond73.do.body4_crit_edge ]
  %nr_skb.addr.0 = phi i32 [ %nr_skb, %entry ], [ %dec, %do.cond73.do.body4_crit_edge ]
  %4 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dtr.addr, align 4
  %host_control.i = getelementptr inbounds %struct.vxge_hw_fifo_txd, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %host_control.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %host_control.i, align 8
  %conv.i = trunc i64 %7 to i32
  %8 = inttoptr i32 %conv.i to ptr
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 17
  %11 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %14 to i32
  %frags = getelementptr inbounds %struct.skb_shared_info, ptr %12, i32 0, i32 12
  %15 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %userdata, align 128
  %17 = ptrtoint ptr %t_code.addr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %t_code.addr, align 4
  %call14 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.220, ptr noundef %16, ptr noundef nonnull @.str.218, i32 noundef 572, ptr noundef %fifo_hw, ptr noundef %5, i32 noundef %18) #19
  %19 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %userdata, align 128
  %call25 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.223, ptr noundef %20, ptr noundef nonnull @.str.218, i32 noundef 578, ptr noundef %10, ptr noundef %8, i32 noundef %conv) #19
  %21 = ptrtoint ptr %t_code.addr to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %t_code.addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not = icmp eq i32 %22, 0
  br i1 %tobool.not, label %do.body4.if.end_crit_edge, label %if.then, !prof !949

do.body4.if.end_crit_edge:                        ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %tx_errors to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %tx_errors, align 8
  %inc = add i32 %24, 1
  store i32 %inc, ptr %tx_errors, align 8
  %25 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %userdata, align 128
  %27 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %dtr.addr, align 4
  %call38 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226, ptr noundef %26, ptr noundef %28, i32 noundef %22) #19
  %29 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %dtr.addr, align 4
  %31 = ptrtoint ptr %t_code.addr to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %t_code.addr, align 4
  %call41 = call i32 @vxge_hw_fifo_handle_tcode(ptr noundef %fifo_hw, ptr noundef %30, i32 noundef %32) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body4.if.end_crit_edge
  %33 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %34, i32 0, i32 44
  %dma_buffers = getelementptr inbounds %struct.vxge_tx_priv, ptr %8, i32 0, i32 1
  %35 = ptrtoint ptr %dma_buffers to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %dma_buffers, align 4
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 6
  %37 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 7
  %39 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %38, %40
  call void @dma_unmap_page_attrs(ptr noundef %dev, i32 noundef %36, i32 noundef %sub.i, i32 noundef 1, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %cmp134.not = icmp eq i8 %14, 0
  br i1 %cmp134.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.0136 = phi i32 [ %inc49, %for.body.for.body_crit_edge ], [ 1, %if.end.for.body_crit_edge ]
  %frag.0135 = phi ptr [ %add.ptr, %for.body.for.body_crit_edge ], [ %frags, %if.end.for.body_crit_edge ]
  %41 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %pdev, align 4
  %dev47 = getelementptr inbounds %struct.pci_dev, ptr %42, i32 0, i32 44
  %inc49 = add nuw nsw i32 %i.0136, 1
  %arrayidx50 = getelementptr %struct.vxge_tx_priv, ptr %8, i32 0, i32 1, i32 %i.0136
  %43 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx50, align 4
  %bv_len.i = getelementptr inbounds %struct.bio_vec, ptr %frag.0135, i32 0, i32 1
  %45 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %bv_len.i, align 4
  call void @dma_unmap_page_attrs(ptr noundef %dev47, i32 noundef %44, i32 noundef %46, i32 noundef 1, i32 noundef 0) #16
  %add.ptr = getelementptr %struct.bio_vec, ptr %frag.0135, i32 1
  %exitcond.not = icmp eq i32 %i.0136, %conv
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  %47 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %dtr.addr, align 4
  call void @vxge_hw_fifo_txdl_free(ptr noundef %fifo_hw, ptr noundef %48) #16
  call fastcc void @u64_stats_update_begin(ptr noundef %stats53)
  %49 = ptrtoint ptr %tx_frms to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %tx_frms, align 8
  %inc55 = add i64 %50, 1
  store i64 %inc55, ptr %tx_frms, align 8
  %51 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %len.i, align 4
  %conv56 = zext i32 %52 to i64
  %53 = ptrtoint ptr %tx_bytes to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %tx_bytes, align 8
  %add = add i64 %54, %conv56
  store i64 %add, ptr %tx_bytes, align 8
  %55 = call ptr @llvm.returnaddress(i32 0) #16
  %56 = ptrtoint ptr %55 to i32
  call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %56) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !960
  %57 = ptrtoint ptr %stats53 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %stats53, align 4
  %inc.i.i.i = add i32 %58, 1
  store i32 %inc.i.i.i, ptr %stats53, align 4
  %incdec.ptr = getelementptr ptr, ptr %done_skb.0, i32 1
  %59 = ptrtoint ptr %done_skb.0 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %10, ptr %done_skb.0, align 4
  %dec = add i32 %nr_skb.addr.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec)
  %cmp60 = icmp slt i32 %dec, 1
  br i1 %cmp60, label %if.then62, label %if.end63

if.then62:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %60 = ptrtoint ptr %more to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 1, ptr %more, align 4
  br label %do.end77

if.end63:                                         ; preds = %for.end
  %inc64 = add nuw i32 %pkt_cnt.0, 1
  %61 = ptrtoint ptr %indicate_max_pkts to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %indicate_max_pkts, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc64, i32 %62)
  %cmp65 = icmp sgt i32 %inc64, %62
  br i1 %cmp65, label %if.end63.do.end77_crit_edge, label %do.cond73

if.end63.do.end77_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end77

do.cond73:                                        ; preds = %if.end63
  %call74 = call i32 @vxge_hw_fifo_txdl_next_completed(ptr noundef %fifo_hw, ptr noundef nonnull %dtr.addr, ptr noundef nonnull %t_code.addr) #16
  %cmp75 = icmp eq i32 %call74, 0
  br i1 %cmp75, label %do.cond73.do.body4_crit_edge, label %do.cond73.do.end77_crit_edge

do.cond73.do.end77_crit_edge:                     ; preds = %do.cond73
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end77

do.cond73.do.body4_crit_edge:                     ; preds = %do.cond73
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body4

do.end77:                                         ; preds = %do.cond73.do.end77_crit_edge, %if.end63.do.end77_crit_edge, %if.then62
  %63 = ptrtoint ptr %skb_ptr to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %incdec.ptr, ptr %skb_ptr, align 4
  %txq = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 3
  %64 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %txq, align 4
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %65, i32 0, i32 13
  %66 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %do.end77.do.end85_crit_edge, label %if.then79

do.end77.do.end85_crit_edge:                      ; preds = %do.end77
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end85

if.then79:                                        ; preds = %do.end77
  call void @__sanitizer_cov_trace_pc() #18
  call void @netif_tx_wake_queue(ptr noundef %65) #16
  br label %do.end85

do.end85:                                         ; preds = %if.then79, %do.end77.do.end85_crit_edge
  %68 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %userdata, align 128
  %call90 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %69, ptr noundef nonnull @.str.218, i32 noundef 627) #19
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_tx_term(ptr nocapture noundef readonly %dtrh, i32 noundef %state, ptr nocapture noundef readonly %userdata) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %host_control.i = getelementptr inbounds %struct.vxge_hw_fifo_txd, ptr %dtrh, i32 0, i32 3
  %0 = ptrtoint ptr %host_control.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %host_control.i, align 8
  %conv.i = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv.i to ptr
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 4
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.231, i32 noundef 1041) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %cmp.not = icmp eq i32 %state, 2
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %4, i32 0, i32 17
  %5 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %nr_frags, align 2
  %pdev = getelementptr inbounds %struct.vxge_fifo, ptr %userdata, i32 0, i32 1
  %9 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %10, i32 0, i32 44
  %dma_buffers = getelementptr inbounds %struct.vxge_tx_priv, ptr %2, i32 0, i32 1
  %11 = ptrtoint ptr %dma_buffers to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %dma_buffers, align 4
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %4, i32 0, i32 6
  %13 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %4, i32 0, i32 7
  %15 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %14, %16
  tail call void @dma_unmap_page_attrs(ptr noundef %dev, i32 noundef %12, i32 noundef %sub.i, i32 noundef 1, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %cmp1043.not = icmp eq i8 %8, 0
  br i1 %cmp1043.not, label %if.end.for.end_crit_edge, label %for.body.preheader

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.preheader:                               ; preds = %if.end
  %frags = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 12
  %conv = zext i8 %8 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %frag.046 = phi ptr [ %add.ptr, %for.body.for.body_crit_edge ], [ %frags, %for.body.preheader ]
  %i.044 = phi i32 [ %inc15, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %17 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pdev, align 4
  %dev13 = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  %inc15 = add nuw nsw i32 %i.044, 1
  %arrayidx16 = getelementptr %struct.vxge_tx_priv, ptr %2, i32 0, i32 1, i32 %i.044
  %19 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx16, align 4
  %bv_len.i = getelementptr inbounds %struct.bio_vec, ptr %frag.046, i32 0, i32 1
  %21 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %bv_len.i, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %dev13, i32 noundef %20, i32 noundef %22, i32 noundef 1, i32 noundef 0) #16
  %add.ptr = getelementptr %struct.bio_vec, ptr %frag.046, i32 1
  %exitcond.not = icmp eq i32 %i.044, %conv
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  tail call void @consume_skb(ptr noundef %4) #16
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.231, i32 noundef 1064) #19
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_rx_1b_compl(ptr noundef %ringh, ptr noundef %dtr, i8 noundef zeroext %t_code, ptr noundef %userdata) #0 align 64 {
entry:
  %dtr.addr = alloca ptr, align 4
  %t_code.addr = alloca i8, align 1
  %first_dtr = alloca ptr, align 4
  %dtr_cnt = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %dtr, ptr %dtr.addr, align 4
  %1 = ptrtoint ptr %t_code.addr to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 %t_code, ptr %t_code.addr, align 1
  %2 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %userdata, align 128
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %first_dtr) #16
  %4 = ptrtoint ptr %first_dtr to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %first_dtr, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dtr_cnt) #16
  %5 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %dtr_cnt, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %3, ptr noundef nonnull @.str.235, i32 noundef 369) #19
  %budget = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 8
  %6 = ptrtoint ptr %budget to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %budget, align 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp = icmp slt i32 %7, 1
  br i1 %cmp, label %entry.do.end159_crit_edge, label %do.body5.preheader

entry.do.end159_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end159

do.body5.preheader:                               ; preds = %entry
  %rx_errors = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 14, i32 4
  %rx_dropped = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 14, i32 5
  %pdev83 = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 1
  %handle.i296 = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 2
  %features = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 23
  %rx_hwts = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 6
  %driver_id.i = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 3
  %stats.i = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 14
  %rx_frms.i = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 14, i32 1
  %rx_bytes.i = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 14, i32 3
  %rx_mcast.i = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 14, i32 2
  %dep_map.i.i.i = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 14, i32 0, i32 0, i32 1
  %vlan_tag_strip.i = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 11
  %napi_p.i = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 10
  %pkts_processed = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 7
  br label %do.body5

do.body5:                                         ; preds = %do.cond148.do.body5_crit_edge, %do.body5.preheader
  %8 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dtr.addr, align 4
  %add.ptr = getelementptr i8, ptr %9, i32 128
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %add.ptr) #16, !srcloc !961
  %10 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dtr.addr, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %11, align 8
  %conv.i = trunc i64 %13 to i32
  %14 = inttoptr i32 %conv.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %data_size8 = getelementptr inbounds %struct.vxge_rx_priv, ptr %14, i32 0, i32 3
  %17 = ptrtoint ptr %data_size8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %data_size8, align 4
  %data_dma9 = getelementptr inbounds %struct.vxge_rx_priv, ptr %14, i32 0, i32 2
  %19 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data_dma9, align 4
  %skb_data = getelementptr inbounds %struct.vxge_rx_priv, ptr %14, i32 0, i32 1
  %21 = ptrtoint ptr %skb_data to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %skb_data, align 4
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %22) #16, !srcloc !961
  %23 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %userdata, align 128
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.237, ptr noundef %24, ptr noundef nonnull @.str.235, i32 noundef 384, ptr noundef %16) #19
  %25 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dtr.addr, align 4
  %control_1.i = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %control_1.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %control_1.i, align 8
  %shr.i = lshr i64 %28, 48
  %29 = trunc i64 %shr.i to i32
  %conv.i253 = and i32 %29, 16383
  %sub = add nsw i32 %conv.i253, -4
  %30 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %userdata, align 128
  %call29 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.240, ptr noundef %31, ptr noundef nonnull @.str.235, i32 noundef 393, i32 noundef %sub) #19
  %32 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dtr.addr, align 4
  %control_0.i = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %control_0.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %control_0.i, align 8
  %36 = trunc i64 %35 to i32
  %conv24.i = and i32 %36, 65535
  %shr30.i = lshr i64 %35, 32
  %37 = trunc i64 %shr30.i to i32
  %control_1.i256 = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %33, i32 0, i32 2
  %38 = ptrtoint ptr %control_1.i256 to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %control_1.i256, align 8
  %shr57.i = lshr i64 %39, 16
  %conv59.i = trunc i64 %shr57.i to i32
  %add.ptr32 = getelementptr i8, ptr %16, i32 128
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %add.ptr32) #16, !srcloc !961
  %40 = ptrtoint ptr %t_code.addr to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %t_code.addr, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool.not = icmp eq i8 %41, 0
  br i1 %tobool.not, label %do.body5.if.end53_crit_edge, label %if.then35, !prof !949

do.body5.if.end53_crit_edge:                      ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end53

if.then35:                                        ; preds = %do.body5
  %42 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %dtr.addr, align 4
  %call36 = call i32 @vxge_hw_ring_handle_tcode(ptr noundef %ringh, ptr noundef %43, i8 noundef zeroext %41) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %cmp37.not = icmp eq i32 %call36, 0
  br i1 %cmp37.not, label %if.then35.if.end53_crit_edge, label %if.then38

if.then35.if.end53_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end53

if.then38:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %rx_errors to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rx_errors, align 8
  %inc = add i32 %45, 1
  store i32 %inc, ptr %rx_errors, align 8
  %46 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %userdata, align 128
  %48 = ptrtoint ptr %t_code.addr to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %t_code.addr, align 1
  %conv = zext i8 %49 to i32
  %call47 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.243, ptr noundef %47, ptr noundef nonnull @.str.235, i32 noundef 409, i32 noundef %conv) #19
  %50 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %dtr.addr, align 4
  call fastcc void @vxge_re_pre_post(ptr noundef %51, ptr noundef %userdata, ptr noundef %14)
  %52 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %dtr.addr, align 4
  call fastcc void @vxge_post(ptr noundef nonnull %dtr_cnt, ptr noundef nonnull %first_dtr, ptr noundef %53, ptr noundef %ringh)
  %54 = ptrtoint ptr %rx_dropped to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %rx_dropped, align 4
  %inc51 = add i32 %55, 1
  store i32 %inc51, ptr %rx_dropped, align 4
  br label %do.cond148

if.end53:                                         ; preds = %if.then35.if.end53_crit_edge, %do.body5.if.end53_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 260, i32 %conv.i253)
  %cmp54 = icmp ugt i32 %conv.i253, 260
  br i1 %cmp54, label %if.then56, label %if.else78

if.then56:                                        ; preds = %if.end53
  %56 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %dtr.addr, align 4
  %call57 = call fastcc ptr @vxge_rx_alloc(ptr noundef %57, ptr noundef %userdata, i32 noundef %18)
  %cmp58.not = icmp eq ptr %call57, null
  %58 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %dtr.addr, align 4
  br i1 %cmp58.not, label %if.else73, label %if.then60

if.then60:                                        ; preds = %if.then56
  %call61 = call fastcc i32 @vxge_rx_map(ptr noundef %59, ptr noundef %userdata)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %if.then63, label %if.else

if.then63:                                        ; preds = %if.then60
  %call64 = call ptr @skb_put(ptr noundef %16, i32 noundef %sub) #16
  %60 = ptrtoint ptr %pdev83 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %pdev83, align 4
  %dev65 = getelementptr inbounds %struct.pci_dev, ptr %61, i32 0, i32 44
  call void @dma_unmap_page_attrs(ptr noundef %dev65, i32 noundef %20, i32 noundef %18, i32 noundef 2, i32 noundef 0) #16
  %62 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %dtr.addr, align 4
  call void @vxge_hw_ring_rxd_pre_post(ptr noundef %ringh, ptr noundef %63) #16
  %64 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dtr.addr, align 4
  %66 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %dtr_cnt, align 4
  %68 = and i32 %67, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %cmp.i = icmp eq i32 %68, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then63
  %69 = ptrtoint ptr %first_dtr to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %first_dtr, align 4
  %tobool.not.i = icmp eq ptr %70, null
  br i1 %tobool.not.i, label %if.then.i.if.end.i_crit_edge, label %if.then1.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then1.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post_wmb(ptr noundef %ringh, ptr noundef nonnull %70) #16
  br label %if.end.i

if.end.i:                                         ; preds = %if.then1.i, %if.then.i.if.end.i_crit_edge
  %71 = ptrtoint ptr %first_dtr to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %65, ptr %first_dtr, align 4
  br label %vxge_post.exit

if.else.i:                                        ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post(ptr noundef %ringh, ptr noundef %65) #16
  br label %vxge_post.exit

vxge_post.exit:                                   ; preds = %if.else.i, %if.end.i
  %inc.i = add i32 %67, 1
  %72 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %inc.i, ptr %dtr_cnt, align 4
  br label %if.end112

if.else:                                          ; preds = %if.then60
  %conv.i.le = trunc i64 %13 to i32
  %73 = inttoptr i32 %conv.i.le to ptr
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %73, align 4
  call void @consume_skb(ptr noundef %75) #16
  %76 = ptrtoint ptr %73 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %16, ptr %73, align 4
  %77 = ptrtoint ptr %data_size8 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %18, ptr %data_size8, align 4
  %78 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %dtr.addr, align 4
  %80 = ptrtoint ptr %pdev83 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %pdev83, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %81, i32 0, i32 44
  %82 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %data_dma9, align 4
  call void @dma_sync_single_for_device(ptr noundef %dev.i, i32 noundef %83, i32 noundef %18, i32 noundef 2) #16
  %84 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %data_dma9, align 4
  %86 = ptrtoint ptr %data_size8 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %data_size8, align 4
  %conv.i.i = zext i32 %85 to i64
  %buffer0_ptr.i.i = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %79, i32 0, i32 3
  %88 = ptrtoint ptr %buffer0_ptr.i.i to i32
  call void @__asan_store8_noabort(i32 %88)
  store i64 %conv.i.i, ptr %buffer0_ptr.i.i, align 8
  %control_1.i.i = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %79, i32 0, i32 2
  %89 = ptrtoint ptr %control_1.i.i to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %control_1.i.i, align 8
  %and.i.i = and i64 %90, -4611404543450677249
  %conv1.i.i = zext i32 %87 to i64
  %shl.i.i = shl i64 %conv1.i.i, 48
  %or.i.i = or i64 %and.i.i, %shl.i.i
  store i64 %or.i.i, ptr %control_1.i.i, align 8
  %91 = ptrtoint ptr %handle.i296 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %handle.i296, align 8
  call void @vxge_hw_ring_rxd_pre_post(ptr noundef %92, ptr noundef %79) #16
  %93 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %dtr.addr, align 4
  %95 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %dtr_cnt, align 4
  %97 = and i32 %96, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %cmp.i257 = icmp eq i32 %97, 0
  br i1 %cmp.i257, label %if.then.i259, label %if.else.i262

if.then.i259:                                     ; preds = %if.else
  %98 = ptrtoint ptr %first_dtr to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %first_dtr, align 4
  %tobool.not.i258 = icmp eq ptr %99, null
  br i1 %tobool.not.i258, label %if.then.i259.if.end.i261_crit_edge, label %if.then1.i260

if.then.i259.if.end.i261_crit_edge:               ; preds = %if.then.i259
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i261

if.then1.i260:                                    ; preds = %if.then.i259
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post_wmb(ptr noundef %ringh, ptr noundef nonnull %99) #16
  br label %if.end.i261

if.end.i261:                                      ; preds = %if.then1.i260, %if.then.i259.if.end.i261_crit_edge
  %100 = ptrtoint ptr %first_dtr to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %94, ptr %first_dtr, align 4
  br label %vxge_post.exit264

if.else.i262:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post(ptr noundef %ringh, ptr noundef %94) #16
  br label %vxge_post.exit264

vxge_post.exit264:                                ; preds = %if.else.i262, %if.end.i261
  %101 = ptrtoint ptr %rx_dropped to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %rx_dropped, align 4
  %inc71 = add i32 %102, 1
  store i32 %inc71, ptr %rx_dropped, align 4
  br label %do.end152

if.else73:                                        ; preds = %if.then56
  %103 = ptrtoint ptr %pdev83 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %pdev83, align 4
  %dev.i266 = getelementptr inbounds %struct.pci_dev, ptr %104, i32 0, i32 44
  %105 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %data_dma9, align 4
  %107 = ptrtoint ptr %data_size8 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %data_size8, align 4
  call void @dma_sync_single_for_device(ptr noundef %dev.i266, i32 noundef %106, i32 noundef %108, i32 noundef 2) #16
  %109 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %data_dma9, align 4
  %111 = ptrtoint ptr %data_size8 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %data_size8, align 4
  %conv.i.i269 = zext i32 %110 to i64
  %buffer0_ptr.i.i270 = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %59, i32 0, i32 3
  %113 = ptrtoint ptr %buffer0_ptr.i.i270 to i32
  call void @__asan_store8_noabort(i32 %113)
  store i64 %conv.i.i269, ptr %buffer0_ptr.i.i270, align 8
  %control_1.i.i271 = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %59, i32 0, i32 2
  %114 = ptrtoint ptr %control_1.i.i271 to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %control_1.i.i271, align 8
  %and.i.i272 = and i64 %115, -4611404543450677249
  %conv1.i.i273 = zext i32 %112 to i64
  %shl.i.i274 = shl i64 %conv1.i.i273, 48
  %or.i.i275 = or i64 %and.i.i272, %shl.i.i274
  store i64 %or.i.i275, ptr %control_1.i.i271, align 8
  %116 = ptrtoint ptr %handle.i296 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %handle.i296, align 8
  call void @vxge_hw_ring_rxd_pre_post(ptr noundef %117, ptr noundef %59) #16
  %118 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %dtr.addr, align 4
  %120 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %dtr_cnt, align 4
  %122 = and i32 %121, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %122)
  %cmp.i277 = icmp eq i32 %122, 0
  br i1 %cmp.i277, label %if.then.i279, label %if.else.i282

if.then.i279:                                     ; preds = %if.else73
  %123 = ptrtoint ptr %first_dtr to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %first_dtr, align 4
  %tobool.not.i278 = icmp eq ptr %124, null
  br i1 %tobool.not.i278, label %if.then.i279.if.end.i281_crit_edge, label %if.then1.i280

if.then.i279.if.end.i281_crit_edge:               ; preds = %if.then.i279
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i281

if.then1.i280:                                    ; preds = %if.then.i279
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post_wmb(ptr noundef %ringh, ptr noundef nonnull %124) #16
  br label %if.end.i281

if.end.i281:                                      ; preds = %if.then1.i280, %if.then.i279.if.end.i281_crit_edge
  %125 = ptrtoint ptr %first_dtr to i32
  call void @__asan_store4_noabort(i32 %125)
  store ptr %119, ptr %first_dtr, align 4
  br label %vxge_post.exit284

if.else.i282:                                     ; preds = %if.else73
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post(ptr noundef %ringh, ptr noundef %119) #16
  br label %vxge_post.exit284

vxge_post.exit284:                                ; preds = %if.else.i282, %if.end.i281
  %126 = ptrtoint ptr %rx_dropped to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %rx_dropped, align 4
  %inc76 = add i32 %127, 1
  store i32 %inc76, ptr %rx_dropped, align 4
  br label %do.end152

if.else78:                                        ; preds = %if.end53
  %add = add nsw i32 %conv.i253, -2
  %call.i = call ptr @__netdev_alloc_skb(ptr noundef %3, i32 noundef %add, i32 noundef 2592) #16
  %cmp80.not = icmp eq ptr %call.i, null
  br i1 %cmp80.not, label %if.else98, label %if.then82

if.then82:                                        ; preds = %if.else78
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 19
  %128 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %129, i32 2
  store ptr %add.ptr.i, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 16
  %130 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %131, i32 2
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %132 = ptrtoint ptr %pdev83 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %pdev83, align 4
  %dev84 = getelementptr inbounds %struct.pci_dev, ptr %133, i32 0, i32 44
  call void @dma_sync_single_for_cpu(ptr noundef %dev84, i32 noundef %20, i32 noundef %18, i32 noundef 2) #16
  %134 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %userdata, align 128
  %call93 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.246, ptr noundef %135, ptr noundef nonnull @.str.235, i32 noundef 469, ptr noundef %16) #19
  %136 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %data.i, align 4
  %data96 = getelementptr inbounds %struct.sk_buff, ptr %16, i32 0, i32 19
  %138 = ptrtoint ptr %data96 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %data96, align 4
  %140 = call ptr @memcpy(ptr %137, ptr %139, i32 %sub)
  %141 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %dtr.addr, align 4
  %143 = ptrtoint ptr %pdev83 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %pdev83, align 4
  %dev.i286 = getelementptr inbounds %struct.pci_dev, ptr %144, i32 0, i32 44
  %145 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %data_dma9, align 4
  %147 = ptrtoint ptr %data_size8 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %data_size8, align 4
  call void @dma_sync_single_for_device(ptr noundef %dev.i286, i32 noundef %146, i32 noundef %148, i32 noundef 2) #16
  %149 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %data_dma9, align 4
  %151 = ptrtoint ptr %data_size8 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %data_size8, align 4
  %conv.i.i289 = zext i32 %150 to i64
  %buffer0_ptr.i.i290 = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %142, i32 0, i32 3
  %153 = ptrtoint ptr %buffer0_ptr.i.i290 to i32
  call void @__asan_store8_noabort(i32 %153)
  store i64 %conv.i.i289, ptr %buffer0_ptr.i.i290, align 8
  %control_1.i.i291 = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %142, i32 0, i32 2
  %154 = ptrtoint ptr %control_1.i.i291 to i32
  call void @__asan_load8_noabort(i32 %154)
  %155 = load i64, ptr %control_1.i.i291, align 8
  %and.i.i292 = and i64 %155, -4611404543450677249
  %conv1.i.i293 = zext i32 %152 to i64
  %shl.i.i294 = shl i64 %conv1.i.i293, 48
  %or.i.i295 = or i64 %and.i.i292, %shl.i.i294
  store i64 %or.i.i295, ptr %control_1.i.i291, align 8
  %156 = ptrtoint ptr %handle.i296 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %handle.i296, align 8
  call void @vxge_hw_ring_rxd_pre_post(ptr noundef %157, ptr noundef %142) #16
  %158 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %dtr.addr, align 4
  %160 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %dtr_cnt, align 4
  %162 = and i32 %161, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %162)
  %cmp.i297 = icmp eq i32 %162, 0
  br i1 %cmp.i297, label %if.then.i299, label %if.else.i302

if.then.i299:                                     ; preds = %if.then82
  %163 = ptrtoint ptr %first_dtr to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %first_dtr, align 4
  %tobool.not.i298 = icmp eq ptr %164, null
  br i1 %tobool.not.i298, label %if.then.i299.if.end.i301_crit_edge, label %if.then1.i300

if.then.i299.if.end.i301_crit_edge:               ; preds = %if.then.i299
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i301

if.then1.i300:                                    ; preds = %if.then.i299
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post_wmb(ptr noundef %ringh, ptr noundef nonnull %164) #16
  br label %if.end.i301

if.end.i301:                                      ; preds = %if.then1.i300, %if.then.i299.if.end.i301_crit_edge
  %165 = ptrtoint ptr %first_dtr to i32
  call void @__asan_store4_noabort(i32 %165)
  store ptr %159, ptr %first_dtr, align 4
  br label %cleanup.thread

if.else.i302:                                     ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post(ptr noundef %ringh, ptr noundef %159) #16
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.else.i302, %if.end.i301
  %inc.i303 = add i32 %161, 1
  %166 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 %inc.i303, ptr %dtr_cnt, align 4
  %call97 = call ptr @skb_put(ptr noundef nonnull %call.i, i32 noundef %sub) #16
  br label %if.end112

if.else98:                                        ; preds = %if.else78
  %167 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %dtr.addr, align 4
  %169 = ptrtoint ptr %pdev83 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %pdev83, align 4
  %dev.i306 = getelementptr inbounds %struct.pci_dev, ptr %170, i32 0, i32 44
  %171 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %data_dma9, align 4
  %173 = ptrtoint ptr %data_size8 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %data_size8, align 4
  call void @dma_sync_single_for_device(ptr noundef %dev.i306, i32 noundef %172, i32 noundef %174, i32 noundef 2) #16
  %175 = ptrtoint ptr %data_dma9 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %data_dma9, align 4
  %177 = ptrtoint ptr %data_size8 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %data_size8, align 4
  %conv.i.i309 = zext i32 %176 to i64
  %buffer0_ptr.i.i310 = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %168, i32 0, i32 3
  %179 = ptrtoint ptr %buffer0_ptr.i.i310 to i32
  call void @__asan_store8_noabort(i32 %179)
  store i64 %conv.i.i309, ptr %buffer0_ptr.i.i310, align 8
  %control_1.i.i311 = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %168, i32 0, i32 2
  %180 = ptrtoint ptr %control_1.i.i311 to i32
  call void @__asan_load8_noabort(i32 %180)
  %181 = load i64, ptr %control_1.i.i311, align 8
  %and.i.i312 = and i64 %181, -4611404543450677249
  %conv1.i.i313 = zext i32 %178 to i64
  %shl.i.i314 = shl i64 %conv1.i.i313, 48
  %or.i.i315 = or i64 %and.i.i312, %shl.i.i314
  store i64 %or.i.i315, ptr %control_1.i.i311, align 8
  %182 = ptrtoint ptr %handle.i296 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %handle.i296, align 8
  call void @vxge_hw_ring_rxd_pre_post(ptr noundef %183, ptr noundef %168) #16
  %184 = ptrtoint ptr %dtr.addr to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %dtr.addr, align 4
  %186 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %dtr_cnt, align 4
  %188 = and i32 %187, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %188)
  %cmp.i317 = icmp eq i32 %188, 0
  br i1 %cmp.i317, label %if.then.i319, label %if.else.i322

if.then.i319:                                     ; preds = %if.else98
  %189 = ptrtoint ptr %first_dtr to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %first_dtr, align 4
  %tobool.not.i318 = icmp eq ptr %190, null
  br i1 %tobool.not.i318, label %if.then.i319.if.end.i321_crit_edge, label %if.then1.i320

if.then.i319.if.end.i321_crit_edge:               ; preds = %if.then.i319
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i321

if.then1.i320:                                    ; preds = %if.then.i319
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post_wmb(ptr noundef %ringh, ptr noundef nonnull %190) #16
  br label %if.end.i321

if.end.i321:                                      ; preds = %if.then1.i320, %if.then.i319.if.end.i321_crit_edge
  %191 = ptrtoint ptr %first_dtr to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr %185, ptr %first_dtr, align 4
  br label %cleanup

if.else.i322:                                     ; preds = %if.else98
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post(ptr noundef %ringh, ptr noundef %185) #16
  br label %cleanup

cleanup:                                          ; preds = %if.else.i322, %if.end.i321
  %call106 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.249, ptr noundef %3) #19
  %skb_alloc_fail = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 14, i32 8
  %192 = ptrtoint ptr %skb_alloc_fail to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %skb_alloc_fail, align 8
  %inc110 = add i32 %193, 1
  store i32 %inc110, ptr %skb_alloc_fail, align 8
  br label %do.end152

if.end112:                                        ; preds = %cleanup.thread, %vxge_post.exit
  %skb.1 = phi ptr [ %16, %vxge_post.exit ], [ %call.i, %cleanup.thread ]
  %and = and i32 %37, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool113.not = icmp ne i32 %and, 0
  %and115 = and i32 %37, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and115)
  %tobool116.not = icmp eq i32 %and115, 0
  %or.cond = and i1 %tobool113.not, %tobool116.not
  br i1 %or.cond, label %land.lhs.true117, label %if.end112.if.end128_crit_edge

if.end112.if.end128_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end128

land.lhs.true117:                                 ; preds = %if.end112
  %194 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %194)
  %195 = load i64, ptr %features, align 16
  %and118 = and i64 %195, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and118)
  %tobool119.not = icmp ne i64 %and118, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 -65537, i32 %36)
  %cmp121 = icmp ugt i32 %36, -65537
  %or.cond336 = select i1 %tobool119.not, i1 %cmp121, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %conv24.i)
  %cmp124 = icmp eq i32 %conv24.i, 65535
  %or.cond337 = select i1 %or.cond336, i1 %cmp124, i1 false
  br i1 %or.cond337, label %if.then126, label %land.lhs.true117.if.end128_crit_edge

land.lhs.true117.if.end128_crit_edge:             ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end128

if.then126:                                       ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #18
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 15
  %196 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %196)
  %bf.load = load i16, ptr %ip_summed, align 8
  %bf.clear = and i16 %bf.load, -1537
  %bf.set = or i16 %bf.clear, 512
  store i16 %bf.set, ptr %ip_summed, align 8
  br label %if.end128

if.end128:                                        ; preds = %if.then126, %land.lhs.true117.if.end128_crit_edge, %if.end112.if.end128_crit_edge
  %197 = ptrtoint ptr %rx_hwts to i32
  call void @__asan_load1_noabort(i32 %197)
  %bf.load129 = load i8, ptr %rx_hwts, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load129)
  %tobool130.not = icmp sgt i8 %bf.load129, -1
  br i1 %tobool130.not, label %if.end128.if.end136_crit_edge, label %if.then131

if.end128.if.end136_crit_edge:                    ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end136

if.then131:                                       ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #18
  %head = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 18
  %198 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %head, align 8
  %add.ptr132 = getelementptr i8, ptr %199, i32 %sub
  %200 = ptrtoint ptr %add.ptr132 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %add.ptr132, align 4
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 17
  %202 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %end.i.i, align 4
  %hwtstamps.i = getelementptr inbounds %struct.skb_shared_info, ptr %203, i32 0, i32 7
  %conv134 = zext i32 %201 to i64
  %204 = ptrtoint ptr %hwtstamps.i to i32
  call void @__asan_store8_noabort(i32 %204)
  store i64 %conv134, ptr %hwtstamps.i, align 8
  br label %if.end136

if.end136:                                        ; preds = %if.then131, %if.end128.if.end136_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv59.i)
  %tobool137.not = icmp eq i32 %conv59.i, 0
  br i1 %tobool137.not, label %if.end136.if.end140_crit_edge, label %if.then138

if.end136.if.end140_crit_edge:                    ; preds = %if.end136
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end140

if.then138:                                       ; preds = %if.end136
  call void @__sanitizer_cov_trace_pc() #18
  %l4_hash.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 15
  %205 = ptrtoint ptr %l4_hash.i.i to i32
  call void @__asan_load2_noabort(i32 %205)
  %bf.load.i.i = load i16, ptr %l4_hash.i.i, align 8
  %bf.clear7.i.i = and i16 %bf.load.i.i, -193
  store i16 %bf.clear7.i.i, ptr %l4_hash.i.i, align 8
  %hash10.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 15, i32 0, i32 8
  %206 = ptrtoint ptr %hash10.i.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 %conv59.i, ptr %hash10.i.i, align 4
  br label %if.end140

if.end140:                                        ; preds = %if.then138, %if.end136.if.end140_crit_edge
  %207 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %userdata, align 128
  %call.i325 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %208, ptr noundef nonnull @.str.270, i32 noundef 298) #19
  %209 = ptrtoint ptr %driver_id.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %driver_id.i, align 4
  %conv.i326 = trunc i32 %210 to i16
  %add.i.i = add i16 %conv.i326, 1
  %queue_mapping.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 10
  %211 = ptrtoint ptr %queue_mapping.i.i to i32
  call void @__asan_store2_noabort(i32 %211)
  store i16 %add.i.i, ptr %queue_mapping.i.i, align 8
  %212 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %userdata, align 128
  %call4.i = call zeroext i16 @eth_type_trans(ptr noundef %skb.1, ptr noundef %213) #16
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 15, i32 0, i32 18
  %214 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %214)
  store i16 %call4.i, ptr %protocol.i, align 8
  call fastcc void @u64_stats_update_begin(ptr noundef %stats.i) #16
  %215 = ptrtoint ptr %rx_frms.i to i32
  call void @__asan_load8_noabort(i32 %215)
  %216 = load i64, ptr %rx_frms.i, align 8
  %inc.i327 = add i64 %216, 1
  store i64 %inc.i327, ptr %rx_frms.i, align 8
  %conv6.i = sext i32 %sub to i64
  %217 = ptrtoint ptr %rx_bytes.i to i32
  call void @__asan_load8_noabort(i32 %217)
  %218 = load i64, ptr %rx_bytes.i, align 8
  %add.i = add i64 %218, %conv6.i
  store i64 %add.i, ptr %rx_bytes.i, align 8
  %pkt_type.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 15
  %219 = ptrtoint ptr %pkt_type.i to i32
  call void @__asan_load2_noabort(i32 %219)
  %bf.load.i = load i16, ptr %pkt_type.i, align 8
  %bf.lshr.mask.i = and i16 %bf.load.i, -8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %bf.lshr.mask.i)
  %cmp.i328 = icmp eq i16 %bf.lshr.mask.i, 16384
  br i1 %cmp.i328, label %if.then.i329, label %if.end140.if.end.i331_crit_edge

if.end140.if.end.i331_crit_edge:                  ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i331

if.then.i329:                                     ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #18
  %220 = ptrtoint ptr %rx_mcast.i to i32
  call void @__asan_load8_noabort(i32 %220)
  %221 = load i64, ptr %rx_mcast.i, align 8
  %inc11.i = add i64 %221, 1
  store i64 %inc11.i, ptr %rx_mcast.i, align 8
  br label %if.end.i331

if.end.i331:                                      ; preds = %if.then.i329, %if.end140.if.end.i331_crit_edge
  %222 = call ptr @llvm.returnaddress(i32 0) #16
  %223 = ptrtoint ptr %222 to i32
  call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %223) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !960
  %224 = ptrtoint ptr %stats.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %stats.i, align 4
  %inc.i.i.i.i = add i32 %225, 1
  store i32 %inc.i.i.i.i, ptr %stats.i, align 4
  %226 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %userdata, align 128
  %228 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %228)
  %229 = load i16, ptr %protocol.i, align 8
  %conv22.i = zext i16 %229 to i32
  %call23.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.272, ptr noundef %227, ptr noundef nonnull @.str.270, i32 noundef 312, i32 noundef %conv22.i) #19
  %conv39.i338 = and i64 %39, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %conv39.i338)
  %tobool.not.i330 = icmp eq i64 %conv39.i338, 0
  br i1 %tobool.not.i330, label %if.end.i331.vxge_rx_complete.exit_crit_edge, label %land.lhs.true.i

if.end.i331.vxge_rx_complete.exit_crit_edge:      ; preds = %if.end.i331
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_rx_complete.exit

land.lhs.true.i:                                  ; preds = %if.end.i331
  %230 = ptrtoint ptr %vlan_tag_strip.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %vlan_tag_strip.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %231)
  %cmp26.i = icmp eq i32 %231, 1
  br i1 %cmp26.i, label %if.then28.i, label %land.lhs.true.i.vxge_rx_complete.exit_crit_edge

land.lhs.true.i.vxge_rx_complete.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_rx_complete.exit

if.then28.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv30.i = trunc i64 %39 to i16
  %vlan_proto1.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 15, i32 0, i32 9
  %232 = ptrtoint ptr %vlan_proto1.i.i to i32
  call void @__asan_store2_noabort(i32 %232)
  store i16 -32512, ptr %vlan_proto1.i.i, align 8
  %vlan_tci2.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 15, i32 0, i32 10
  %233 = ptrtoint ptr %vlan_tci2.i.i to i32
  call void @__asan_store2_noabort(i32 %233)
  store i16 %conv30.i, ptr %vlan_tci2.i.i, align 2
  %vlan_present.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 15, i32 0, i32 3
  %234 = ptrtoint ptr %vlan_present.i.i to i32
  call void @__asan_loadN_noabort(i32 %234, i32 4)
  %bf.load.i.i332 = load i32, ptr %vlan_present.i.i, align 2
  %bf.set.i.i = or i32 %bf.load.i.i332, -2147483648
  store i32 %bf.set.i.i, ptr %vlan_present.i.i, align 2
  br label %vxge_rx_complete.exit

vxge_rx_complete.exit:                            ; preds = %if.then28.i, %land.lhs.true.i.vxge_rx_complete.exit_crit_edge, %if.end.i331.vxge_rx_complete.exit_crit_edge
  %235 = ptrtoint ptr %napi_p.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load ptr, ptr %napi_p.i, align 8
  %call32.i = call i32 @napi_gro_receive(ptr noundef %236, ptr noundef %skb.1) #16
  %237 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %userdata, align 128
  %call40.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %238, ptr noundef nonnull @.str.270, i32 noundef 320) #19
  %239 = ptrtoint ptr %budget to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %budget, align 32
  %dec = add i32 %240, -1
  store i32 %dec, ptr %budget, align 32
  %241 = ptrtoint ptr %pkts_processed to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %pkts_processed, align 4
  %inc143 = add i32 %242, 1
  store i32 %inc143, ptr %pkts_processed, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool145.not = icmp eq i32 %dec, 0
  br i1 %tobool145.not, label %vxge_rx_complete.exit.do.end152_crit_edge, label %vxge_rx_complete.exit.do.cond148_crit_edge

vxge_rx_complete.exit.do.cond148_crit_edge:       ; preds = %vxge_rx_complete.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond148

vxge_rx_complete.exit.do.end152_crit_edge:        ; preds = %vxge_rx_complete.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end152

do.cond148:                                       ; preds = %vxge_rx_complete.exit.do.cond148_crit_edge, %if.then38
  %call149 = call i32 @vxge_hw_ring_rxd_next_completed(ptr noundef %ringh, ptr noundef nonnull %dtr.addr, ptr noundef nonnull %t_code.addr) #16
  %cmp150 = icmp eq i32 %call149, 0
  br i1 %cmp150, label %do.cond148.do.body5_crit_edge, label %do.cond148.do.end152_crit_edge

do.cond148.do.end152_crit_edge:                   ; preds = %do.cond148
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end152

do.cond148.do.body5_crit_edge:                    ; preds = %do.cond148
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body5

do.end152:                                        ; preds = %do.cond148.do.end152_crit_edge, %vxge_rx_complete.exit.do.end152_crit_edge, %cleanup, %vxge_post.exit284, %vxge_post.exit264
  %243 = ptrtoint ptr %first_dtr to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %first_dtr, align 4
  %tobool153.not = icmp eq ptr %244, null
  br i1 %tobool153.not, label %do.end152.do.end159_crit_edge, label %if.then154

do.end152.do.end159_crit_edge:                    ; preds = %do.end152
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end159

if.then154:                                       ; preds = %do.end152
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_ring_rxd_post_post_wmb(ptr noundef %ringh, ptr noundef nonnull %244) #16
  br label %do.end159

do.end159:                                        ; preds = %if.then154, %do.end152.do.end159_crit_edge, %entry.do.end159_crit_edge
  %call161 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.235, i32 noundef 534) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dtr_cnt) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %first_dtr) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_rx_initial_replenish(ptr nocapture noundef %dtrh, ptr nocapture noundef %userdata) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %userdata, align 128
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %1, ptr noundef nonnull @.str.276, i32 noundef 275) #19
  %2 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %userdata, align 128
  %mtu = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 20
  %4 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mtu, align 4
  %add = add i32 %5, 26
  %call5 = tail call fastcc ptr @vxge_rx_alloc(ptr noundef %dtrh, ptr noundef %userdata, i32 noundef %add)
  %cmp = icmp eq ptr %call5, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call6 = tail call fastcc i32 @vxge_rx_map(ptr noundef %dtrh, ptr noundef %userdata)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %do.end13, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %dtrh to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %dtrh, align 8
  %conv.i = trunc i64 %7 to i32
  %8 = inttoptr i32 %conv.i to ptr
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  tail call void @consume_skb(ptr noundef %10) #16
  br label %cleanup

do.end13:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %userdata, align 128
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %12, ptr noundef nonnull @.str.276, i32 noundef 287) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end13, %if.then7, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.then7 ], [ 0, %do.end13 ], [ 1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_rx_term(ptr nocapture noundef readonly %dtrh, i32 noundef %state, ptr nocapture noundef readonly %userdata) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dtrh to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %dtrh, align 8
  %2 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %userdata, align 128
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %3, ptr noundef nonnull @.str.279, i32 noundef 1012) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %cmp.not = icmp eq i32 %state, 2
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i = trunc i64 %1 to i32
  %4 = inttoptr i32 %conv.i to ptr
  %pdev = getelementptr inbounds %struct.vxge_ring, ptr %userdata, i32 0, i32 1
  %5 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %data_dma = getelementptr inbounds %struct.vxge_rx_priv, ptr %4, i32 0, i32 2
  %7 = ptrtoint ptr %data_dma to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %data_dma, align 4
  %data_size = getelementptr inbounds %struct.vxge_rx_priv, ptr %4, i32 0, i32 3
  %9 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %data_size, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %dev, i32 noundef %8, i32 noundef %10, i32 noundef 2, i32 noundef 0) #16
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %4, align 4
  tail call void @consume_skb(ptr noundef %12) #16
  %skb_data = getelementptr inbounds %struct.vxge_rx_priv, ptr %4, i32 0, i32 1
  %13 = ptrtoint ptr %skb_data to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %skb_data, align 4
  %14 = ptrtoint ptr %userdata to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %userdata, align 128
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %15, ptr noundef nonnull @.str.279, i32 noundef 1024) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_open(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_fifo_handle_tcode(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_unmap_page_attrs(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_fifo_txdl_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @u64_stats_update_begin(ptr noundef %syncp) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %entry.__seqprop_assert.exit_crit_edge, label %land.lhs.true.i

entry.__seqprop_assert.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %__seqprop_assert.exit

land.lhs.true.i:                                  ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !962
  %5 = tail call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !963
  %14 = tail call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i7.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i7.i to ptr
  %preempt_count.i.i8.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i8.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i8.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool20.not.i = icmp eq i32 %13, 0
  br i1 %tobool20.not.i, label %land.rhs.i, label %land.lhs.true.i.__seqprop_assert.exit_crit_edge

land.lhs.true.i.__seqprop_assert.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__seqprop_assert.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %18 = tail call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp.i = icmp eq i32 %21, 0
  br i1 %cmp.i, label %land.rhs22.i, label %land.rhs.i.__seqprop_assert.exit_crit_edge

land.rhs.i.__seqprop_assert.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__seqprop_assert.exit

land.rhs22.i:                                     ; preds = %land.rhs.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i9.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %add.i11.i = add i32 %25, 1
  store volatile i32 %add.i11.i, ptr %preempt_count.i.i10.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !964
  %26 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i, align 4
  %arrayidx46.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx46.i, align 4
  %add47.i = add i32 %29, ptrtoint (ptr @hardirqs_enabled to i32)
  %30 = inttoptr i32 %add47.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !965
  %33 = tail call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i12.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i12.i to ptr
  %preempt_count.i.i13.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i13.i, align 4
  %sub.i14.i = add i32 %36, -1
  store volatile i32 %sub.i14.i, ptr %preempt_count.i.i13.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool54.not.i = icmp eq i32 %32, 0
  br i1 %tobool54.not.i, label %land.rhs22.i.__seqprop_assert.exit_crit_edge, label %land.rhs58.i

land.rhs22.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs22.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__seqprop_assert.exit

land.rhs58.i:                                     ; preds = %land.rhs22.i
  %.b1.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i, label %land.rhs58.i.__seqprop_assert.exit_crit_edge, label %if.then.i, !prof !949

land.rhs58.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__seqprop_assert.exit

if.then.i:                                        ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.230, i32 noundef 271, i32 noundef 9, ptr noundef null) #16
  br label %__seqprop_assert.exit

__seqprop_assert.exit:                            ; preds = %if.then.i, %land.rhs58.i.__seqprop_assert.exit_crit_edge, %land.rhs22.i.__seqprop_assert.exit_crit_edge, %land.rhs.i.__seqprop_assert.exit_crit_edge, %land.lhs.true.i.__seqprop_assert.exit_crit_edge, %entry.__seqprop_assert.exit_crit_edge
  %37 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %38, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !966
  %dep_map.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %39 = tail call ptr @llvm.returnaddress(i32 0) #16
  %40 = ptrtoint ptr %39 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %40) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_fifo_txdl_next_completed(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_ring_handle_tcode(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_re_pre_post(ptr noundef %dtr, ptr nocapture noundef readonly %ring, ptr nocapture noundef readonly %rx_priv) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %pdev = getelementptr inbounds %struct.vxge_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 44
  %data_dma = getelementptr inbounds %struct.vxge_rx_priv, ptr %rx_priv, i32 0, i32 2
  %2 = ptrtoint ptr %data_dma to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_dma, align 4
  %data_size = getelementptr inbounds %struct.vxge_rx_priv, ptr %rx_priv, i32 0, i32 3
  %4 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %data_size, align 4
  tail call void @dma_sync_single_for_device(ptr noundef %dev, i32 noundef %3, i32 noundef %5, i32 noundef 2) #16
  %6 = ptrtoint ptr %data_dma to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_dma, align 4
  %8 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %data_size, align 4
  %conv.i = zext i32 %7 to i64
  %buffer0_ptr.i = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %dtr, i32 0, i32 3
  %10 = ptrtoint ptr %buffer0_ptr.i to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %conv.i, ptr %buffer0_ptr.i, align 8
  %control_1.i = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %dtr, i32 0, i32 2
  %11 = ptrtoint ptr %control_1.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %control_1.i, align 8
  %and.i = and i64 %12, -4611404543450677249
  %conv1.i = zext i32 %9 to i64
  %shl.i = shl i64 %conv1.i, 48
  %or.i = or i64 %and.i, %shl.i
  store i64 %or.i, ptr %control_1.i, align 8
  %handle = getelementptr inbounds %struct.vxge_ring, ptr %ring, i32 0, i32 2
  %13 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %handle, align 8
  tail call void @vxge_hw_ring_rxd_pre_post(ptr noundef %14, ptr noundef %dtr) #16
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_post(ptr nocapture noundef %dtr_cnt, ptr nocapture noundef %first_dtr, ptr noundef %post_dtr, ptr noundef %ringh) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %dtr_cnt, align 4
  %2 = and i32 %1, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = ptrtoint ptr %first_dtr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %first_dtr, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %if.then.if.end_crit_edge, label %if.then1

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then1:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @vxge_hw_ring_rxd_post_post_wmb(ptr noundef %ringh, ptr noundef nonnull %4) #16
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then.if.end_crit_edge
  %5 = ptrtoint ptr %first_dtr to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %post_dtr, ptr %first_dtr, align 4
  br label %if.end2

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @vxge_hw_ring_rxd_post_post(ptr noundef %ringh, ptr noundef %post_dtr) #16
  br label %if.end2

if.end2:                                          ; preds = %if.else, %if.end
  %inc = add i32 %1, 1
  %6 = ptrtoint ptr %dtr_cnt to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %inc, ptr %dtr_cnt, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @vxge_rx_alloc(ptr nocapture noundef readonly %dtrh, ptr nocapture noundef %ring, i32 noundef %skb_size) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 128
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %1, ptr noundef nonnull @.str.253, i32 noundef 202) #19
  %2 = ptrtoint ptr %dtrh to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %dtrh, align 8
  %add = add i32 %skb_size, 2
  %call.i = tail call ptr @__netdev_alloc_skb(ptr noundef %1, i32 noundef %add, i32 noundef 2592) #16
  %cmp = icmp eq ptr %call.i, null
  br i1 %cmp, label %do.end10, label %do.end20

do.end10:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.255, ptr noundef %1) #19
  %skb_alloc_fail = getelementptr inbounds %struct.vxge_ring, ptr %ring, i32 0, i32 14, i32 8
  %4 = ptrtoint ptr %skb_alloc_fail to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %skb_alloc_fail, align 8
  %inc = add i32 %5, 1
  store i32 %inc, ptr %skb_alloc_fail, align 8
  br label %cleanup

do.end20:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i = trunc i64 %3 to i32
  %6 = inttoptr i32 %conv.i to ptr
  %7 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ring, align 128
  %call25 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.258, ptr noundef %8, ptr noundef nonnull @.str.253, i32 noundef 218, ptr noundef nonnull %call.i) #19
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 19
  %9 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %10, i32 2
  store ptr %add.ptr.i, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 16
  %11 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %12, i32 2
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %13 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call.i, ptr %6, align 4
  %skb_data = getelementptr inbounds %struct.vxge_rx_priv, ptr %6, i32 0, i32 1
  %14 = ptrtoint ptr %skb_data to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %skb_data, align 4
  %data_size = getelementptr inbounds %struct.vxge_rx_priv, ptr %6, i32 0, i32 3
  %15 = ptrtoint ptr %data_size to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %skb_size, ptr %data_size, align 4
  %16 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ring, align 128
  %call37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %17, ptr noundef nonnull @.str.253, i32 noundef 226) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end20, %do.end10
  ret ptr %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vxge_rx_map(ptr nocapture noundef %dtrh, ptr nocapture noundef %ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 128
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %1, ptr noundef nonnull @.str.262, i32 noundef 240) #19
  %2 = ptrtoint ptr %dtrh to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %dtrh, align 8
  %conv.i = trunc i64 %3 to i32
  %4 = inttoptr i32 %conv.i to ptr
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %data = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 19
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %data, align 4
  %skb_data = getelementptr inbounds %struct.vxge_rx_priv, ptr %4, i32 0, i32 1
  %9 = ptrtoint ptr %skb_data to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %skb_data, align 4
  %pdev = getelementptr inbounds %struct.vxge_ring, ptr %ring, i32 0, i32 1
  %10 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  %data_size = getelementptr inbounds %struct.vxge_rx_priv, ptr %4, i32 0, i32 3
  %12 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data_size, align 4
  %call.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %8) #16
  br i1 %call.i, label %land.rhs.i, label %if.end39.i

land.rhs.i:                                       ; preds = %entry
  %.b1.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.dma_map_single_attrs.exit_crit_edge, label %if.then.i, !prof !949

land.rhs.i.dma_map_single_attrs.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dma_map_single_attrs.exit

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i = tail call ptr @dev_driver_string(ptr noundef %dev) #16
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44, i32 3
  %14 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.dev_name.exit.i_crit_edge

if.then.i.dev_name.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %17, %if.end.i.i ], [ %15, %if.then.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.268, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.269, ptr noundef %call16.i, ptr noundef %retval.0.i.i) #16
  br label %dma_map_single_attrs.exit

if.end39.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @debug_dma_map_single(ptr noundef %dev, ptr noundef %8, i32 noundef %13) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %18 = load ptr, ptr @mem_map, align 4
  %19 = ptrtoint ptr %8 to i32
  %sub.i = add i32 %19, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  %add.ptr.i = getelementptr %struct.page, ptr %18, i32 %shr.i
  %and.i = and i32 %19, 4095
  %call41.i = tail call i32 @dma_map_page_attrs(ptr noundef %dev, ptr noundef %add.ptr.i, i32 noundef %and.i, i32 noundef %13, i32 noundef 2, i32 noundef 0) #16
  br label %dma_map_single_attrs.exit

dma_map_single_attrs.exit:                        ; preds = %if.end39.i, %dev_name.exit.i, %land.rhs.i.dma_map_single_attrs.exit_crit_edge
  %retval.0.i = phi i32 [ %call41.i, %if.end39.i ], [ -1, %dev_name.exit.i ], [ -1, %land.rhs.i.dma_map_single_attrs.exit_crit_edge ]
  %20 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pdev, align 4
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 44
  tail call void @debug_dma_mapping_error(ptr noundef %dev8, i32 noundef %retval.0.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i)
  %cmp.i = icmp eq i32 %retval.0.i, -1
  br i1 %cmp.i, label %if.then, label %do.end15

if.then:                                          ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #18
  %pci_map_fail = getelementptr inbounds %struct.vxge_ring, ptr %ring, i32 0, i32 14, i32 7
  %22 = ptrtoint ptr %pci_map_fail to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pci_map_fail, align 4
  %inc = add i32 %23, 1
  store i32 %inc, ptr %pci_map_fail, align 4
  br label %cleanup

do.end15:                                         ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ring, align 128
  %conv = zext i32 %retval.0.i to i64
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.264, ptr noundef %25, ptr noundef nonnull @.str.262, i32 noundef 254, i64 noundef %conv) #19
  %26 = ptrtoint ptr %data_size to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %data_size, align 4
  %buffer0_ptr.i = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %dtrh, i32 0, i32 3
  %28 = ptrtoint ptr %buffer0_ptr.i to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %conv, ptr %buffer0_ptr.i, align 8
  %control_1.i = getelementptr inbounds %struct.vxge_hw_ring_rxd_1, ptr %dtrh, i32 0, i32 2
  %29 = ptrtoint ptr %control_1.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %control_1.i, align 8
  %and.i51 = and i64 %30, -4611404543450677249
  %conv1.i = zext i32 %27 to i64
  %shl.i = shl i64 %conv1.i, 48
  %or.i = or i64 %and.i51, %shl.i
  store i64 %or.i, ptr %control_1.i, align 8
  %data_dma = getelementptr inbounds %struct.vxge_rx_priv, ptr %4, i32 0, i32 2
  %31 = ptrtoint ptr %data_dma to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %retval.0.i, ptr %data_dma, align 4
  %32 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ring, align 128
  %call32 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %33, ptr noundef nonnull @.str.262, i32 noundef 259) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end15, %if.then
  %retval.0 = phi i32 [ -5, %if.then ], [ 0, %do.end15 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_ring_rxd_pre_post(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_cpu(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_ring_rxd_next_completed(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_ring_rxd_post_post_wmb(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_device(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_ring_rxd_post_post(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_map_single(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_map_page_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_mapping_error(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__netdev_alloc_skb(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @napi_gro_receive(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #12

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_tx_msix_handle(i32 noundef %irq, ptr nocapture noundef %dev_id) #0 align 64 {
entry:
  %skb_ptr.i = alloca ptr, align 4
  %completed.i = alloca [16 x ptr], align 4
  %more.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %interrupt_count.i = getelementptr inbounds %struct.vxge_fifo, ptr %dev_id, i32 0, i32 6
  %0 = ptrtoint ptr %interrupt_count.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %interrupt_count.i, align 8
  %inc.i = add i32 %1, 1
  store i32 %inc.i, ptr %interrupt_count.i, align 8
  %jiffies.i = getelementptr inbounds %struct.vxge_fifo, ptr %dev_id, i32 0, i32 7
  %2 = ptrtoint ptr %jiffies.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %jiffies.i, align 4
  %add.i = add i32 %3, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %add.i, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %if.then.i, label %entry.adaptive_coalesce_tx_interrupts.exit_crit_edge

entry.adaptive_coalesce_tx_interrupts.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %adaptive_coalesce_tx_interrupts.exit

if.then.i:                                        ; preds = %entry
  %handle.i = getelementptr inbounds %struct.vxge_fifo, ptr %dev_id, i32 0, i32 2
  %5 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %handle.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %7 = load volatile i32, ptr @jiffies, align 128
  %8 = ptrtoint ptr %jiffies.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %jiffies.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 200, i32 %inc.i)
  %cmp3.i = icmp ugt i32 %inc.i, 200
  br i1 %cmp3.i, label %land.lhs.true.i, label %if.then.i.if.else.i_crit_edge

if.then.i.if.else.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %rtimer.i = getelementptr inbounds %struct.__vxge_hw_fifo, ptr %6, i32 0, i32 13
  %9 = ptrtoint ptr %rtimer.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rtimer.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %10)
  %cmp4.not.i = icmp eq i32 %10, 10
  br i1 %cmp4.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %if.then5.i

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then5.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %rtimer.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 10, ptr %rtimer.i, align 4
  br label %if.end11.sink.split.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then.i.if.else.i_crit_edge
  %rtimer7.i = getelementptr inbounds %struct.__vxge_hw_fifo, ptr %6, i32 0, i32 13
  %12 = ptrtoint ptr %rtimer7.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rtimer7.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp8.not.i = icmp eq i32 %13, 0
  br i1 %cmp8.not.i, label %if.else.i.if.end11.i_crit_edge, label %if.then9.i

if.else.i.if.end11.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11.i

if.then9.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %rtimer7.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %rtimer7.i, align 4
  br label %if.end11.sink.split.i

if.end11.sink.split.i:                            ; preds = %if.then9.i, %if.then5.i
  tail call void @vxge_hw_vpath_dynamic_tti_rtimer_set(ptr noundef %6) #16
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.end11.sink.split.i, %if.else.i.if.end11.i_crit_edge
  %15 = ptrtoint ptr %interrupt_count.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %interrupt_count.i, align 8
  br label %adaptive_coalesce_tx_interrupts.exit

adaptive_coalesce_tx_interrupts.exit:             ; preds = %if.end11.i, %entry.adaptive_coalesce_tx_interrupts.exit_crit_edge
  %handle = getelementptr inbounds %struct.vxge_fifo, ptr %dev_id, i32 0, i32 2
  %16 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %handle, align 8
  %tx_vector_no = getelementptr inbounds %struct.vxge_fifo, ptr %dev_id, i32 0, i32 8
  %18 = ptrtoint ptr %tx_vector_no to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tx_vector_no, align 32
  tail call void @vxge_hw_channel_msix_mask(ptr noundef %17, i32 noundef %19) #16
  %20 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %handle, align 8
  %22 = ptrtoint ptr %tx_vector_no to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %tx_vector_no, align 32
  tail call void @vxge_hw_channel_msix_clear(ptr noundef %21, i32 noundef %23) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb_ptr.i) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %completed.i) #16
  %24 = call ptr @memset(ptr %completed.i, i32 255, i32 64)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %more.i) #16
  %txq.i = getelementptr inbounds %struct.vxge_fifo, ptr %dev_id, i32 0, i32 3
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond.i.do.body.i_crit_edge, %adaptive_coalesce_tx_interrupts.exit
  %25 = ptrtoint ptr %more.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %more.i, align 4
  %26 = ptrtoint ptr %skb_ptr.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %completed.i, ptr %skb_ptr.i, align 4
  %27 = ptrtoint ptr %txq.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %txq.i, align 4
  %_xmit_lock.i.i = getelementptr inbounds %struct.netdev_queue, ptr %28, i32 0, i32 10
  %call.i.i.i = call i32 @_raw_spin_trylock(ptr noundef %_xmit_lock.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.i.not.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.i.not.i, label %do.body.i.if.end.i_crit_edge, label %if.then.i13, !prof !948

do.body.i.if.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i13:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %29 = call i32 @llvm.read_register.i32(metadata !937) #16
  %and.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpu.i.i, align 4
  %xmit_lock_owner.i.i = getelementptr inbounds %struct.netdev_queue, ptr %28, i32 0, i32 11
  %33 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile i32 %32, ptr %xmit_lock_owner.i.i, align 4
  %34 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %handle, align 8
  %call1.i = call i32 @vxge_hw_vpath_poll_tx(ptr noundef %35, ptr noundef nonnull %skb_ptr.i, i32 noundef 16, ptr noundef nonnull %more.i) #16
  %36 = ptrtoint ptr %txq.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %txq.i, align 4
  %xmit_lock_owner.i8.i = getelementptr inbounds %struct.netdev_queue, ptr %37, i32 0, i32 11
  %38 = ptrtoint ptr %xmit_lock_owner.i8.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile i32 -1, ptr %xmit_lock_owner.i8.i, align 4
  %_xmit_lock.i9.i = getelementptr inbounds %struct.netdev_queue, ptr %37, i32 0, i32 10
  call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i9.i) #16
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i13, %do.body.i.if.end.i_crit_edge
  %39 = ptrtoint ptr %skb_ptr.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %skb_ptr.i, align 4
  %cmp.not10.i = icmp eq ptr %completed.i, %40
  br i1 %cmp.not10.i, label %if.end.i.do.cond.i_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.do.cond.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %temp.011.i = phi ptr [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ], [ %completed.i, %if.end.i.for.body.i_crit_edge ]
  %41 = ptrtoint ptr %temp.011.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %temp.011.i, align 4
  call void @__dev_kfree_skb_irq(ptr noundef %42, i32 noundef 0) #16
  %incdec.ptr.i = getelementptr ptr, ptr %temp.011.i, i32 1
  %43 = ptrtoint ptr %skb_ptr.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %skb_ptr.i, align 4
  %cmp.not.i = icmp eq ptr %incdec.ptr.i, %44
  br i1 %cmp.not.i, label %for.body.i.do.cond.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body.i.do.cond.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i

do.cond.i:                                        ; preds = %for.body.i.do.cond.i_crit_edge, %if.end.i.do.cond.i_crit_edge
  %45 = ptrtoint ptr %more.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %more.i, align 4
  %tobool.not.i = icmp eq i32 %46, 0
  br i1 %tobool.not.i, label %VXGE_COMPLETE_VPATH_TX.exit, label %do.cond.i.do.body.i_crit_edge

do.cond.i.do.body.i_crit_edge:                    ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

VXGE_COMPLETE_VPATH_TX.exit:                      ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %more.i) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %completed.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb_ptr.i) #16
  %47 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %handle, align 8
  %49 = ptrtoint ptr %tx_vector_no to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %tx_vector_no, align 32
  call void @vxge_hw_channel_msix_unmask(ptr noundef %48, i32 noundef %50) #16
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_rx_msix_napi_handle(i32 noundef %irq, ptr noundef %dev_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %interrupt_count.i = getelementptr inbounds %struct.vxge_ring, ptr %dev_id, i32 0, i32 4
  %0 = ptrtoint ptr %interrupt_count.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %interrupt_count.i, align 16
  %inc.i = add i32 %1, 1
  store i32 %inc.i, ptr %interrupt_count.i, align 16
  %jiffies.i = getelementptr inbounds %struct.vxge_ring, ptr %dev_id, i32 0, i32 5
  %2 = ptrtoint ptr %jiffies.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %jiffies.i, align 4
  %add.i = add i32 %3, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %add.i, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %if.then.i, label %entry.adaptive_coalesce_rx_interrupts.exit_crit_edge

entry.adaptive_coalesce_rx_interrupts.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %adaptive_coalesce_rx_interrupts.exit

if.then.i:                                        ; preds = %entry
  %handle.i = getelementptr inbounds %struct.vxge_ring, ptr %dev_id, i32 0, i32 2
  %5 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %handle.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %7 = load volatile i32, ptr @jiffies, align 128
  %8 = ptrtoint ptr %jiffies.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %jiffies.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %inc.i)
  %cmp3.i = icmp ugt i32 %inc.i, 100
  br i1 %cmp3.i, label %land.lhs.true.i, label %if.then.i.if.else.i_crit_edge

if.then.i.if.else.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %rtimer.i = getelementptr inbounds %struct.__vxge_hw_ring, ptr %6, i32 0, i32 16
  %9 = ptrtoint ptr %rtimer.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rtimer.i, align 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %10)
  %cmp4.not.i = icmp eq i32 %10, 15
  br i1 %cmp4.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %if.then5.i

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then5.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %rtimer.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 15, ptr %rtimer.i, align 64
  br label %if.end11.sink.split.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then.i.if.else.i_crit_edge
  %rtimer7.i = getelementptr inbounds %struct.__vxge_hw_ring, ptr %6, i32 0, i32 16
  %12 = ptrtoint ptr %rtimer7.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rtimer7.i, align 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp8.not.i = icmp eq i32 %13, 0
  br i1 %cmp8.not.i, label %if.else.i.if.end11.i_crit_edge, label %if.then9.i

if.else.i.if.end11.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11.i

if.then9.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %rtimer7.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %rtimer7.i, align 64
  br label %if.end11.sink.split.i

if.end11.sink.split.i:                            ; preds = %if.then9.i, %if.then5.i
  tail call void @vxge_hw_vpath_dynamic_rti_rtimer_set(ptr noundef %6) #16
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.end11.sink.split.i, %if.else.i.if.end11.i_crit_edge
  %15 = ptrtoint ptr %interrupt_count.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %interrupt_count.i, align 16
  br label %adaptive_coalesce_rx_interrupts.exit

adaptive_coalesce_rx_interrupts.exit:             ; preds = %if.end11.i, %entry.adaptive_coalesce_rx_interrupts.exit_crit_edge
  %handle = getelementptr inbounds %struct.vxge_ring, ptr %dev_id, i32 0, i32 2
  %16 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %handle, align 8
  %rx_vector_no = getelementptr inbounds %struct.vxge_ring, ptr %dev_id, i32 0, i32 12
  %18 = ptrtoint ptr %rx_vector_no to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rx_vector_no, align 16
  tail call void @vxge_hw_channel_msix_mask(ptr noundef %17, i32 noundef %19) #16
  %20 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %handle, align 8
  %22 = ptrtoint ptr %rx_vector_no to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %rx_vector_no, align 16
  tail call void @vxge_hw_channel_msix_clear(ptr noundef %21, i32 noundef %23) #16
  %napi = getelementptr inbounds %struct.vxge_ring, ptr %dev_id, i32 0, i32 9
  %call.i = tail call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #16
  br i1 %call.i, label %if.then.i8, label %adaptive_coalesce_rx_interrupts.exit.napi_schedule.exit_crit_edge

adaptive_coalesce_rx_interrupts.exit.napi_schedule.exit_crit_edge: ; preds = %adaptive_coalesce_rx_interrupts.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %napi_schedule.exit

if.then.i8:                                       ; preds = %adaptive_coalesce_rx_interrupts.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__napi_schedule(ptr noundef %napi) #16
  br label %napi_schedule.exit

napi_schedule.exit:                               ; preds = %if.then.i8, %adaptive_coalesce_rx_interrupts.exit.napi_schedule.exit_crit_edge
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_rem_msix_isr(ptr nocapture noundef %vdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %no_of_vpath = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 17
  %0 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_of_vpath, align 4
  %mul34 = shl i32 %1, 1
  %add35 = or i32 %mul34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add35)
  %cmp36 = icmp sgt i32 %add35, 0
  br i1 %cmp36, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %vxge_entries = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 12
  %entries = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 13
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %intr_cnt.037 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %vxge_entries to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vxge_entries, align 4
  %in_use = getelementptr %struct.vxge_msix_entry, ptr %3, i32 %intr_cnt.037, i32 2
  %4 = ptrtoint ptr %in_use to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %in_use, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not = icmp eq i16 %5, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %entries to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %entries, align 8
  %arrayidx1 = getelementptr %struct.msix_entry, ptr %7, i32 %intr_cnt.037
  %8 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx1, align 4
  tail call void @synchronize_irq(i32 noundef %9) #16
  %10 = ptrtoint ptr %entries to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %entries, align 8
  %arrayidx3 = getelementptr %struct.msix_entry, ptr %11, i32 %intr_cnt.037
  %12 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx3, align 4
  %14 = ptrtoint ptr %vxge_entries to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vxge_entries, align 4
  %arg = getelementptr %struct.vxge_msix_entry, ptr %15, i32 %intr_cnt.037, i32 3
  %16 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arg, align 4
  %call = tail call ptr @free_irq(i32 noundef %13, ptr noundef %17) #16
  %18 = ptrtoint ptr %vxge_entries to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vxge_entries, align 4
  %in_use9 = getelementptr %struct.vxge_msix_entry, ptr %19, i32 %intr_cnt.037, i32 2
  %20 = ptrtoint ptr %in_use9 to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 0, ptr %in_use9, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %intr_cnt.037, 1
  %21 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %no_of_vpath, align 4
  %mul = shl i32 %22, 1
  %add = or i32 %mul, 1
  %cmp = icmp slt i32 %inc, %add
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %entries10 = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 13
  %23 = ptrtoint ptr %entries10 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %entries10, align 8
  tail call void @kfree(ptr noundef %24) #16
  %vxge_entries11 = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 12
  %25 = ptrtoint ptr %vxge_entries11 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %vxge_entries11, align 4
  tail call void @kfree(ptr noundef %26) #16
  %27 = ptrtoint ptr %entries10 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %entries10, align 8
  %28 = ptrtoint ptr %vxge_entries11 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %vxge_entries11, align 4
  %intr_type = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 3
  %29 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %intr_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %30)
  %cmp14 = icmp eq i32 %30, 2
  br i1 %cmp14, label %if.then15, label %for.end.if.end16_crit_edge

for.end.if.end16_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

if.then15:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %pdev = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 1
  %31 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pdev, align 4
  tail call void @pci_disable_msix(ptr noundef %32) #16
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %for.end.if.end16_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_msix_unmask(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_alarm_msix_handle(i32 noundef %irq, ptr nocapture noundef readonly %dev_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vdev1 = getelementptr inbounds %struct.vxge_vpath, ptr %dev_id, i32 0, i32 7
  %0 = ptrtoint ptr %vdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vdev1, align 4
  %handle = getelementptr inbounds %struct.vxge_vpath, ptr %dev_id, i32 0, i32 2
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %handle, align 128
  %vpath2 = getelementptr inbounds %struct.__vxge_hw_vpath_handle, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %vpath2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vpath2, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 128
  %mul = shl i32 %7, 2
  %add = or i32 %mul, 2
  %no_of_vpath = getelementptr inbounds %struct.vxgedev, ptr %1, i32 0, i32 17
  %8 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp32 = icmp sgt i32 %9, 0
  br i1 %cmp32, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %vpaths = getelementptr inbounds %struct.vxgedev, ptr %1, i32 0, i32 21
  %exec_mode = getelementptr inbounds %struct.vxgedev, ptr %1, i32 0, i32 19
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.033 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %10 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vpaths, align 8
  %handle3 = getelementptr %struct.vxge_vpath, ptr %11, i32 %i.033, i32 2
  %12 = ptrtoint ptr %handle3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %handle3, align 128
  tail call void @vxge_hw_vpath_msix_mask(ptr noundef %13, i32 noundef %add) #16
  %14 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vpaths, align 8
  %handle6 = getelementptr %struct.vxge_vpath, ptr %15, i32 %i.033, i32 2
  %16 = ptrtoint ptr %handle6 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %handle6, align 128
  tail call void @vxge_hw_vpath_msix_clear(ptr noundef %17, i32 noundef %add) #16
  %18 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vpaths, align 8
  %handle9 = getelementptr %struct.vxge_vpath, ptr %19, i32 %i.033, i32 2
  %20 = ptrtoint ptr %handle9 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %handle9, align 128
  %22 = ptrtoint ptr %exec_mode to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %exec_mode, align 8
  %call = tail call i32 @vxge_hw_vpath_alarm_process(ptr noundef %21, i32 noundef %23) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp10 = icmp eq i32 %call, 0
  br i1 %cmp10, label %if.then, label %do.end

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vpaths, align 8
  %handle13 = getelementptr %struct.vxge_vpath, ptr %25, i32 %i.033, i32 2
  %26 = ptrtoint ptr %handle13 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %handle13, align 128
  tail call void @vxge_hw_vpath_msix_unmask(ptr noundef %27, i32 noundef %add) #16
  br label %for.inc

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %call15 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.315, ptr noundef nonnull @.str.3, i32 noundef %call) #19
  br label %for.inc

for.inc:                                          ; preds = %do.end, %if.then
  %inc = add nuw nsw i32 %i.033, 1
  %28 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %29
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret i32 1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_device_set_intr_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_tti_ci_set(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_isr_napi(i32 noundef %irq, ptr noundef %dev_id) #0 align 64 {
entry:
  %reason = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %reason) #16
  %0 = ptrtoint ptr %reason to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %reason, align 8, !annotation !947
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.317, i32 noundef 2171) #19
  %pdev = getelementptr inbounds %struct.vxgedev, ptr %dev_id, i32 0, i32 1
  %1 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %2, i32 0, i32 44, i32 8
  %3 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %driver_data.i.i, align 4
  %error_state.i = getelementptr inbounds %struct.pci_dev, ptr %2, i32 0, i32 43
  %5 = ptrtoint ptr %error_state.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %error_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp.i.not = icmp eq i32 %6, 1
  br i1 %cmp.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %state.i = getelementptr inbounds %struct.vxgedev, ptr %dev_id, i32 0, i32 6
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %9 = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool8.not = icmp eq i32 %9, 0
  br i1 %tobool8.not, label %if.end.cleanup_crit_edge, label %if.end13, !prof !948

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %exec_mode = getelementptr inbounds %struct.vxgedev, ptr %dev_id, i32 0, i32 19
  %10 = ptrtoint ptr %exec_mode to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %exec_mode, align 8
  %call14 = call i32 @vxge_hw_device_begin_irq(ptr noundef %4, i32 noundef %11, ptr noundef nonnull %reason) #16
  %12 = zext i32 %call14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.561)
  switch i32 %call14, label %if.end13.do.end53_crit_edge [
    i32 0, label %if.then15
    i32 220, label %if.end13.if.then37_crit_edge
    i32 221, label %if.end13.if.then37_crit_edge75
    i32 219, label %if.end13.if.then37_crit_edge76
    i32 222, label %if.end13.cleanup_crit_edge
  ], !prof !967

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13.if.then37_crit_edge76:                   ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

if.end13.if.then37_crit_edge75:                   ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

if.end13.if.then37_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

if.end13.do.end53_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end53

if.then15:                                        ; preds = %if.end13
  call void @vxge_hw_device_mask_all(ptr noundef %4) #16
  %13 = ptrtoint ptr %reason to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %reason, align 8
  %vpaths_deployed = getelementptr inbounds %struct.vxgedev, ptr %dev_id, i32 0, i32 27
  %15 = ptrtoint ptr %vpaths_deployed to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %vpaths_deployed, align 8
  %17 = lshr i64 %16, 3
  %shl = and i64 %14, 2305825417027649536
  %and = and i64 %shl, %17
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool16.not = icmp eq i64 %and, 0
  br i1 %tobool16.not, label %if.else, label %if.then17

if.then17:                                        ; preds = %if.then15
  call void @vxge_hw_device_clear_tx_rx(ptr noundef %4) #16
  %napi = getelementptr inbounds %struct.vxgedev, ptr %dev_id, i32 0, i32 18
  %call.i = call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #16
  br i1 %call.i, label %if.then.i, label %if.then17.napi_schedule.exit_crit_edge

if.then17.napi_schedule.exit_crit_edge:           ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #18
  br label %napi_schedule.exit

if.then.i:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #18
  call void @__napi_schedule(ptr noundef %napi) #16
  br label %napi_schedule.exit

napi_schedule.exit:                               ; preds = %if.then.i, %if.then17.napi_schedule.exit_crit_edge
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.317, i32 noundef 2193) #19
  br label %cleanup

if.else:                                          ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_device_unmask_all(ptr noundef %4) #16
  br label %do.end53

if.then37:                                        ; preds = %if.end13.if.then37_crit_edge, %if.end13.if.then37_crit_edge75, %if.end13.if.then37_crit_edge76
  call void @vxge_hw_device_mask_all(ptr noundef %4) #16
  call void @vxge_hw_device_flush_io(ptr noundef %4) #16
  br label %cleanup

do.end53:                                         ; preds = %if.else, %if.end13.do.end53_crit_edge
  %call55 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.317, i32 noundef 2206) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end53, %if.then37, %napi_schedule.exit, %if.end13.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %napi_schedule.exit ], [ 0, %do.end53 ], [ 1, %if.then37 ], [ 0, %entry.cleanup_crit_edge ], [ 1, %if.end.cleanup_crit_edge ], [ 1, %if.end13.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %reason) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_msix_set(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_msix_range(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_msix(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_threaded_irq(i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_channel_msix_mask(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_channel_msix_clear(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_channel_msix_unmask(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_dynamic_tti_rtimer_set(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_poll_tx(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_irq(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_dynamic_rti_rtimer_set(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_schedule_prep(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__napi_schedule(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_irq(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_msix_clear(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_alarm_process(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_device_begin_irq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_clear_tx_rx(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_poll_rx(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_complete_done(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_rts_rth_itable_set(ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_rts_rth_set(ptr noundef, i32 noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_mac_addr_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_mac_addr_get(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_mac_addr_get_next(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_vid_add(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_reset(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_recover_from_reset(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_vpath_intr_enable(ptr nocapture noundef readonly %vdev, i32 noundef %vp_id) unnamed_addr #0 align 64 {
entry:
  %tim_msix_id = alloca [4 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vpaths = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  %0 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vpaths, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tim_msix_id) #16
  %2 = call ptr @memcpy(ptr %tim_msix_id, ptr @__const.vxge_vpath_intr_enable.tim_msix_id, i32 16)
  %handle = getelementptr %struct.vxge_vpath, ptr %1, i32 %vp_id, i32 2
  %3 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %handle, align 128
  %call = tail call i32 @vxge_hw_vpath_intr_enable(ptr noundef %4) #16
  %intr_type = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 5, i32 3
  %5 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %intr_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp = icmp eq i32 %6, 0
  %7 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %handle, align 128
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @vxge_hw_vpath_inta_unmask_tx_rx(ptr noundef %8) #16
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_vpath_msix_set(ptr noundef %8, ptr noundef nonnull %tim_msix_id, i32 noundef 2) #16
  %device_id = getelementptr %struct.vxge_vpath, ptr %1, i32 %vp_id, i32 3
  %9 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %device_id, align 4
  %mul = shl i32 %10, 2
  %11 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %handle, align 128
  call void @vxge_hw_vpath_msix_unmask(ptr noundef %12, i32 noundef %mul) #16
  %13 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %handle, align 128
  %add = or i32 %mul, 1
  call void @vxge_hw_vpath_msix_unmask(ptr noundef %14, i32 noundef %add) #16
  %15 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %handle, align 128
  %vpath6 = getelementptr inbounds %struct.__vxge_hw_vpath_handle, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %vpath6 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vpath6, align 4
  %hldev = getelementptr inbounds %struct.__vxge_hw_virtualpath, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %hldev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hldev, align 8
  %first_vp_id = getelementptr inbounds %struct.__vxge_hw_device, ptr %20, i32 0, i32 23
  %21 = ptrtoint ptr %first_vp_id to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %first_vp_id, align 16
  %mul7 = shl i32 %22, 2
  %add8 = or i32 %mul7, 2
  call void @vxge_hw_vpath_msix_unmask(ptr noundef %16, i32 noundef %add8) #16
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tim_msix_id) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_intr_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_inta_unmask_tx_rx(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_check_leak(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_vpath_dynamic_rti_ci_set(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_close(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @do_vxge_close(ptr noundef %dev, i32 noundef %do_io) unnamed_addr #0 align 64 {
entry:
  %val64 = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val64) #16
  %0 = ptrtoint ptr %val64 to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %val64, align 8, !annotation !947
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %dev, ptr noundef nonnull @.str.339, i32 noundef 2925) #19
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %pdev = getelementptr i8, ptr %dev, i32 2308
  %1 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pdev, align 4
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %2, i32 0, i32 44, i32 8
  %3 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %driver_data.i.i, align 4
  %state.i = getelementptr i8, ptr %dev, i32 3480
  %5 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %state.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %while.cond.preheader, !prof !948

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

while.cond.preheader:                             ; preds = %entry
  %call1048 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1048)
  %tobool11.not49 = icmp eq i32 %call1048, 0
  br i1 %tobool11.not49, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  tail call void @msleep(i32 noundef 50) #16
  %call10 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state.i) #16
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %do_io)
  %tobool12.not = icmp eq i32 %do_io, 0
  br i1 %tobool12.not, label %while.end.if.end29_crit_edge, label %if.then13

while.end.if.end29_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then13:                                        ; preds = %while.end
  %vpaths = getelementptr i8, ptr %dev, i32 9280
  %8 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vpaths, align 8
  %device_id = getelementptr inbounds %struct.vxge_vpath, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %device_id, align 4
  %devh = getelementptr i8, ptr %dev, i32 2312
  %12 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %devh, align 8
  %call14 = call i32 @vxge_hw_mgmt_reg_read(ptr noundef %13, i32 noundef 3, i32 noundef 0, i32 noundef 6288, ptr noundef nonnull %val64) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %cmp = icmp eq i32 %call14, 0
  br i1 %cmp, label %if.then15, label %if.then13.if.end18_crit_edge

if.then13.if.end18_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

if.then15:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  %sh_prom = zext i32 %11 to i64
  %shr = lshr i64 -9223372036854775808, %sh_prom
  %neg = xor i64 %shr, -1
  %14 = ptrtoint ptr %val64 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %val64, align 8
  %and = and i64 %15, %neg
  store i64 %and, ptr %val64, align 8
  %16 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %devh, align 8
  %call17 = call i32 @vxge_hw_mgmt_reg_write(ptr noundef %17, i32 noundef 3, i32 noundef 0, i32 noundef 6288, i64 noundef %and) #16
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.then13.if.end18_crit_edge
  %18 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %devh, align 8
  %call20 = call i32 @vxge_hw_mgmt_reg_write(ptr noundef %19, i32 noundef 3, i32 noundef 0, i32 noundef 5736, i64 noundef 0) #16
  %20 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %devh, align 8
  %call22 = call i32 @vxge_hw_mgmt_reg_write(ptr noundef %21, i32 noundef 3, i32 noundef 0, i32 noundef 5744, i64 noundef 0) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !968
  br label %if.end29

if.end29:                                         ; preds = %if.end18, %while.end.if.end29_crit_edge
  %titan1 = getelementptr i8, ptr %dev, i32 3586
  %22 = ptrtoint ptr %titan1 to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load = load i8, ptr %titan1, align 2
  %23 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool30.not = icmp eq i8 %23, 0
  br i1 %tobool30.not, label %if.end29.if.end33_crit_edge, label %if.then31

if.end29.if.end33_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

if.then31:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  %vp_lockup_timer = getelementptr i8, ptr %dev, i32 3536
  %call32 = call i32 @del_timer_sync(ptr noundef %vp_lockup_timer) #16
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end29.if.end33_crit_edge
  %vp_reset_timer = getelementptr i8, ptr %dev, i32 3488
  %call34 = call i32 @del_timer_sync(ptr noundef %vp_reset_timer) #16
  br i1 %tobool12.not, label %if.end33.if.end37_crit_edge, label %if.then36

if.end33.if.end37_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

if.then36:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  call void @vxge_hw_device_wait_receive_idle(ptr noundef %4) #16
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.end33.if.end37_crit_edge
  call void @_clear_bit(i32 noundef 1, ptr noundef %state.i) #16
  %intr_type = getelementptr i8, ptr %dev, i32 2844
  %24 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %intr_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %25)
  %cmp39.not = icmp eq i32 %25, 2
  br i1 %cmp39.not, label %for.cond.preheader, label %if.then40

for.cond.preheader:                               ; preds = %if.end37
  %no_of_vpath = getelementptr i8, ptr %dev, i32 9044
  %26 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp4150 = icmp sgt i32 %27, 0
  br i1 %cmp4150, label %for.body.lr.ph, label %for.cond.preheader.if.end45_crit_edge

for.cond.preheader.if.end45_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %vpaths42 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #18
  %napi = getelementptr i8, ptr %dev, i32 9048
  call void @napi_disable(ptr noundef %napi) #16
  br label %if.end45

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.051 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %28 = ptrtoint ptr %vpaths42 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vpaths42, align 8
  %napi44 = getelementptr %struct.vxge_vpath, ptr %29, i32 %i.051, i32 1, i32 9
  call void @napi_disable(ptr noundef %napi44) #16
  %inc = add nuw nsw i32 %i.051, 1
  %30 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %no_of_vpath, align 4
  %cmp41 = icmp slt i32 %inc, %31
  br i1 %cmp41, label %for.body.for.body_crit_edge, label %for.body.if.end45_crit_edge

for.body.if.end45_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

if.end45:                                         ; preds = %for.body.if.end45_crit_edge, %if.then40, %for.cond.preheader.if.end45_crit_edge
  %32 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %add.ptr.i, align 8
  call void @netif_carrier_off(ptr noundef %33) #16
  %34 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %add.ptr.i, align 8
  call void (ptr, ptr, ...) @netdev_notice(ptr noundef %35, ptr noundef nonnull @.str.142) #19
  %36 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %add.ptr.i, align 8
  call void @netif_tx_stop_all_queues(ptr noundef %37) #16
  br i1 %tobool12.not, label %if.end54.critedge, label %if.then49

if.then49:                                        ; preds = %if.end45
  %devh50 = getelementptr i8, ptr %dev, i32 2312
  %38 = ptrtoint ptr %devh50 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %devh50, align 8
  call void @vxge_hw_device_intr_disable(ptr noundef %39) #16
  %40 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %intr_type, align 4
  %42 = zext i32 %41 to i64
  call void @__sanitizer_cov_trace_switch(i64 %42, ptr @__sancov_gen_cov_switch_values.562)
  switch i32 %41, label %if.then49.vxge_rem_isr.exit_crit_edge [
    i32 2, label %if.then.i
    i32 0, label %if.then4.i
  ]

if.then49.vxge_rem_isr.exit_crit_edge:            ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_rem_isr.exit

if.then.i:                                        ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @vxge_rem_msix_isr(ptr noundef %add.ptr.i) #16
  br label %vxge_rem_isr.exitthread-pre-split

if.then4.i:                                       ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #18
  %43 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pdev, align 4
  %irq.i = getelementptr inbounds %struct.pci_dev, ptr %44, i32 0, i32 46
  %45 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %irq.i, align 4
  call void @synchronize_irq(i32 noundef %46) #16
  %47 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pdev, align 4
  %irq6.i = getelementptr inbounds %struct.pci_dev, ptr %48, i32 0, i32 46
  %49 = ptrtoint ptr %irq6.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %irq6.i, align 4
  %call.i = call ptr @free_irq(i32 noundef %50, ptr noundef %add.ptr.i) #16
  br label %vxge_rem_isr.exitthread-pre-split

vxge_rem_isr.exitthread-pre-split:                ; preds = %if.then4.i, %if.then.i
  %51 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %51)
  %.pr = load i32, ptr %intr_type, align 4
  br label %vxge_rem_isr.exit

vxge_rem_isr.exit:                                ; preds = %vxge_rem_isr.exitthread-pre-split, %if.then49.vxge_rem_isr.exit_crit_edge
  %52 = phi i32 [ %.pr, %vxge_rem_isr.exitthread-pre-split ], [ %41, %if.then49.vxge_rem_isr.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %52)
  %cmp.not.i = icmp eq i32 %52, 2
  br i1 %cmp.not.i, label %for.cond.preheader.i, label %if.then.i2

for.cond.preheader.i:                             ; preds = %vxge_rem_isr.exit
  %no_of_vpath.i = getelementptr i8, ptr %dev, i32 9044
  %53 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %no_of_vpath.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %cmp18.i = icmp sgt i32 %54, 0
  br i1 %cmp18.i, label %for.body.lr.ph.i, label %for.cond.preheader.i.vxge_napi_del_all.exit_crit_edge

for.cond.preheader.i.vxge_napi_del_all.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_napi_del_all.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %vpaths.i = getelementptr i8, ptr %dev, i32 9280
  br label %for.body.i

if.then.i2:                                       ; preds = %vxge_rem_isr.exit
  call void @__sanitizer_cov_trace_pc() #18
  %napi.i = getelementptr i8, ptr %dev, i32 9048
  call void @__netif_napi_del(ptr noundef %napi.i) #16
  call void @synchronize_net() #16
  br label %vxge_napi_del_all.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.09.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %55 = ptrtoint ptr %vpaths.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %vpaths.i, align 8
  %napi2.i = getelementptr %struct.vxge_vpath, ptr %56, i32 %i.09.i, i32 1, i32 9
  call void @__netif_napi_del(ptr noundef %napi2.i) #16
  call void @synchronize_net() #16
  %inc.i = add nuw nsw i32 %i.09.i, 1
  %57 = ptrtoint ptr %no_of_vpath.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %no_of_vpath.i, align 4
  %cmp1.i = icmp slt i32 %inc.i, %58
  br i1 %cmp1.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.vxge_napi_del_all.exit_crit_edge

for.body.i.vxge_napi_del_all.exit_crit_edge:      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_napi_del_all.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

vxge_napi_del_all.exit:                           ; preds = %for.body.i.vxge_napi_del_all.exit_crit_edge, %if.then.i2, %for.cond.preheader.i.vxge_napi_del_all.exit_crit_edge
  %no_of_vpath.i3 = getelementptr i8, ptr %dev, i32 9044
  %59 = ptrtoint ptr %no_of_vpath.i3 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %no_of_vpath.i3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %cmp35.i = icmp sgt i32 %60, 0
  br i1 %cmp35.i, label %for.body.lr.ph.i5, label %vxge_napi_del_all.exit.if.end54_crit_edge

vxge_napi_del_all.exit.if.end54_crit_edge:        ; preds = %vxge_napi_del_all.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

for.body.lr.ph.i5:                                ; preds = %vxge_napi_del_all.exit
  %vpaths.i4 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body.i6

for.body.i6:                                      ; preds = %for.inc.i.for.body.i6_crit_edge, %for.body.lr.ph.i5
  %i.036.i = phi i32 [ 0, %for.body.lr.ph.i5 ], [ %inc.i9, %for.inc.i.for.body.i6_crit_edge ]
  %61 = ptrtoint ptr %vpaths.i4 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %vpaths.i4, align 8
  %handle.i = getelementptr %struct.vxge_vpath, ptr %62, i32 %i.036.i, i32 2
  %63 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %handle.i, align 128
  %tobool.not.i = icmp eq ptr %64, null
  br i1 %tobool.not.i, label %for.body.i6.for.inc.i_crit_edge, label %if.then.i8

for.body.i6.for.inc.i_crit_edge:                  ; preds = %for.body.i6
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i8:                                       ; preds = %for.body.i6
  %call.i7 = call i32 @vxge_hw_vpath_reset(ptr noundef nonnull %64) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i7)
  %cmp2.i = icmp eq i32 %call.i7, 0
  br i1 %cmp2.i, label %if.then3.i, label %do.end17.i

if.then3.i:                                       ; preds = %if.then.i8
  %65 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %state.i, align 4
  %67 = and i32 %66, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool5.not.i = icmp eq i32 %67, 0
  br i1 %tobool5.not.i, label %if.then3.i.for.inc.i_crit_edge, label %land.lhs.true.i

if.then3.i.for.inc.i_crit_edge:                   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %if.then3.i
  %68 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %handle.i, align 128
  %call7.i = call i32 @vxge_hw_vpath_recover_from_reset(ptr noundef %69) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %cmp8.not.i = icmp eq i32 %call7.i, 0
  br i1 %cmp8.not.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %do.end.i

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

do.end.i:                                         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %call11.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.342, i32 noundef %i.036.i) #19
  br label %if.end54

do.end17.i:                                       ; preds = %if.then.i8
  call void @__sanitizer_cov_trace_pc() #18
  %call19.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.345, i32 noundef %i.036.i) #19
  br label %if.end54

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %if.then3.i.for.inc.i_crit_edge, %for.body.i6.for.inc.i_crit_edge
  %inc.i9 = add nuw nsw i32 %i.036.i, 1
  %70 = ptrtoint ptr %no_of_vpath.i3 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %no_of_vpath.i3, align 4
  %cmp.i = icmp slt i32 %inc.i9, %71
  br i1 %cmp.i, label %for.inc.i.for.body.i6_crit_edge, label %for.inc.i.if.end54_crit_edge

for.inc.i.if.end54_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

for.inc.i.for.body.i6_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i6

if.end54.critedge:                                ; preds = %if.end45
  %72 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %intr_type, align 4
  %74 = zext i32 %73 to i64
  call void @__sanitizer_cov_trace_switch(i64 %74, ptr @__sancov_gen_cov_switch_values.563)
  switch i32 %73, label %if.end54.critedge.vxge_rem_isr.exit17_crit_edge [
    i32 2, label %if.then.i11
    i32 0, label %if.then4.i16
  ]

if.end54.critedge.vxge_rem_isr.exit17_crit_edge:  ; preds = %if.end54.critedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_rem_isr.exit17

if.then.i11:                                      ; preds = %if.end54.critedge
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @vxge_rem_msix_isr(ptr noundef %add.ptr.i) #16
  br label %vxge_rem_isr.exit17thread-pre-split

if.then4.i16:                                     ; preds = %if.end54.critedge
  call void @__sanitizer_cov_trace_pc() #18
  %75 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %pdev, align 4
  %irq.i13 = getelementptr inbounds %struct.pci_dev, ptr %76, i32 0, i32 46
  %77 = ptrtoint ptr %irq.i13 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %irq.i13, align 4
  call void @synchronize_irq(i32 noundef %78) #16
  %79 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %pdev, align 4
  %irq6.i14 = getelementptr inbounds %struct.pci_dev, ptr %80, i32 0, i32 46
  %81 = ptrtoint ptr %irq6.i14 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %irq6.i14, align 4
  %call.i15 = call ptr @free_irq(i32 noundef %82, ptr noundef %add.ptr.i) #16
  br label %vxge_rem_isr.exit17thread-pre-split

vxge_rem_isr.exit17thread-pre-split:              ; preds = %if.then4.i16, %if.then.i11
  %83 = ptrtoint ptr %intr_type to i32
  call void @__asan_load4_noabort(i32 %83)
  %.pr44 = load i32, ptr %intr_type, align 4
  br label %vxge_rem_isr.exit17

vxge_rem_isr.exit17:                              ; preds = %vxge_rem_isr.exit17thread-pre-split, %if.end54.critedge.vxge_rem_isr.exit17_crit_edge
  %84 = phi i32 [ %.pr44, %vxge_rem_isr.exit17thread-pre-split ], [ %73, %if.end54.critedge.vxge_rem_isr.exit17_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %84)
  %cmp.not.i19 = icmp eq i32 %84, 2
  br i1 %cmp.not.i19, label %for.cond.preheader.i22, label %if.then.i26

for.cond.preheader.i22:                           ; preds = %vxge_rem_isr.exit17
  %no_of_vpath.i20 = getelementptr i8, ptr %dev, i32 9044
  %85 = ptrtoint ptr %no_of_vpath.i20 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %no_of_vpath.i20, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %cmp18.i21 = icmp sgt i32 %86, 0
  br i1 %cmp18.i21, label %for.body.lr.ph.i24, label %for.cond.preheader.i22.if.end54_crit_edge

for.cond.preheader.i22.if.end54_crit_edge:        ; preds = %for.cond.preheader.i22
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

for.body.lr.ph.i24:                               ; preds = %for.cond.preheader.i22
  %vpaths.i23 = getelementptr i8, ptr %dev, i32 9280
  br label %for.body.i31

if.then.i26:                                      ; preds = %vxge_rem_isr.exit17
  call void @__sanitizer_cov_trace_pc() #18
  %napi.i25 = getelementptr i8, ptr %dev, i32 9048
  call void @__netif_napi_del(ptr noundef %napi.i25) #16
  call void @synchronize_net() #16
  br label %if.end54

for.body.i31:                                     ; preds = %for.body.i31.for.body.i31_crit_edge, %for.body.lr.ph.i24
  %i.09.i27 = phi i32 [ 0, %for.body.lr.ph.i24 ], [ %inc.i29, %for.body.i31.for.body.i31_crit_edge ]
  %87 = ptrtoint ptr %vpaths.i23 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %vpaths.i23, align 8
  %napi2.i28 = getelementptr %struct.vxge_vpath, ptr %88, i32 %i.09.i27, i32 1, i32 9
  call void @__netif_napi_del(ptr noundef %napi2.i28) #16
  call void @synchronize_net() #16
  %inc.i29 = add nuw nsw i32 %i.09.i27, 1
  %89 = ptrtoint ptr %no_of_vpath.i20 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %no_of_vpath.i20, align 4
  %cmp1.i30 = icmp slt i32 %inc.i29, %90
  br i1 %cmp1.i30, label %for.body.i31.for.body.i31_crit_edge, label %for.body.i31.if.end54_crit_edge

for.body.i31.if.end54_crit_edge:                  ; preds = %for.body.i31
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

for.body.i31.for.body.i31_crit_edge:              ; preds = %for.body.i31
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i31

if.end54:                                         ; preds = %for.body.i31.if.end54_crit_edge, %if.then.i26, %for.cond.preheader.i22.if.end54_crit_edge, %for.inc.i.if.end54_crit_edge, %do.end17.i, %do.end.i, %vxge_napi_del_all.exit.if.end54_crit_edge
  %no_of_vpath.i33 = getelementptr i8, ptr %dev, i32 9044
  %91 = ptrtoint ptr %no_of_vpath.i33 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %no_of_vpath.i33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %cmp13.i = icmp sgt i32 %92, 0
  br i1 %cmp13.i, label %for.body.lr.ph.i35, label %if.end54.vxge_close_vpaths.exit_crit_edge

if.end54.vxge_close_vpaths.exit_crit_edge:        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_close_vpaths.exit

for.body.lr.ph.i35:                               ; preds = %if.end54
  %vpaths.i34 = getelementptr i8, ptr %dev, i32 9280
  %stats.i = getelementptr i8, ptr %dev, i32 9356
  br label %for.body.i38

for.body.i38:                                     ; preds = %if.end.i.for.body.i38_crit_edge, %for.body.lr.ph.i35
  %i.014.i = phi i32 [ 0, %for.body.lr.ph.i35 ], [ %inc.i42, %if.end.i.for.body.i38_crit_edge ]
  %93 = ptrtoint ptr %vpaths.i34 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %vpaths.i34, align 8
  %handle.i36 = getelementptr %struct.vxge_vpath, ptr %94, i32 %i.014.i, i32 2
  %95 = ptrtoint ptr %handle.i36 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %handle.i36, align 128
  %tobool.not.i37 = icmp eq ptr %96, null
  br i1 %tobool.not.i37, label %for.body.i38.if.end.i_crit_edge, label %land.lhs.true.i39

for.body.i38.if.end.i_crit_edge:                  ; preds = %for.body.i38
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i39:                                ; preds = %for.body.i38
  %is_open.i = getelementptr %struct.vxge_vpath, ptr %94, i32 %i.014.i, i32 6
  %97 = ptrtoint ptr %is_open.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %is_open.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %98)
  %tobool1.not.i = icmp eq i32 %98, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i39.if.end.i_crit_edge, label %if.then.i41

land.lhs.true.i39.if.end.i_crit_edge:             ; preds = %land.lhs.true.i39
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i41:                                      ; preds = %land.lhs.true.i39
  call void @__sanitizer_cov_trace_pc() #18
  %call.i40 = call i32 @vxge_hw_vpath_close(ptr noundef nonnull %96) #16
  %99 = ptrtoint ptr %stats.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %stats.i, align 4
  %dec.i = add i32 %100, -1
  store i32 %dec.i, ptr %stats.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i41, %land.lhs.true.i39.if.end.i_crit_edge, %for.body.i38.if.end.i_crit_edge
  %is_open3.i = getelementptr %struct.vxge_vpath, ptr %94, i32 %i.014.i, i32 6
  %101 = ptrtoint ptr %is_open3.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 0, ptr %is_open3.i, align 16
  %102 = ptrtoint ptr %handle.i36 to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr null, ptr %handle.i36, align 128
  %inc.i42 = add nuw nsw i32 %i.014.i, 1
  %103 = ptrtoint ptr %no_of_vpath.i33 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %no_of_vpath.i33, align 4
  %cmp.i43 = icmp slt i32 %inc.i42, %104
  br i1 %cmp.i43, label %if.end.i.for.body.i38_crit_edge, label %if.end.i.vxge_close_vpaths.exit_crit_edge

if.end.i.vxge_close_vpaths.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_close_vpaths.exit

if.end.i.for.body.i38_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i38

vxge_close_vpaths.exit:                           ; preds = %if.end.i.vxge_close_vpaths.exit_crit_edge, %if.end54.vxge_close_vpaths.exit_crit_edge
  %call62 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %dev, ptr noundef nonnull @.str.339, i32 noundef 3013) #19
  call void @_clear_bit(i32 noundef 0, ptr noundef %state.i) #16
  br label %cleanup

cleanup:                                          ; preds = %vxge_close_vpaths.exit, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val64) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_mgmt_reg_read(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_wait_receive_idle(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_device_intr_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vxge_reset_all_vpaths(ptr noundef %vdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %no_of_vpath = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 17
  %0 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp35 = icmp sgt i32 %1, 0
  br i1 %cmp35, label %for.body.lr.ph, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %vpaths = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  %state.i = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.036 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vpaths, align 8
  %handle = getelementptr %struct.vxge_vpath, ptr %3, i32 %i.036, i32 2
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %handle, align 128
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %for.body
  %call = tail call i32 @vxge_hw_vpath_reset(ptr noundef nonnull %5) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %if.then3, label %if.then.cleanup.sink.split_crit_edge

if.then.cleanup.sink.split_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then3:                                         ; preds = %if.then
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool5.not = icmp eq i32 %8, 0
  br i1 %tobool5.not, label %if.then3.for.inc_crit_edge, label %land.lhs.true

if.then3.for.inc_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true:                                    ; preds = %if.then3
  %9 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %handle, align 128
  %call7 = tail call i32 @vxge_hw_vpath_recover_from_reset(ptr noundef %10) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %cmp8.not = icmp eq i32 %call7, 0
  br i1 %cmp8.not, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.cleanup.sink.split_crit_edge

land.lhs.true.cleanup.sink.split_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true.for.inc_crit_edge, %if.then3.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.036, 1
  %11 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %no_of_vpath, align 4
  %cmp = icmp slt i32 %inc, %12
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

cleanup.sink.split:                               ; preds = %land.lhs.true.cleanup.sink.split_crit_edge, %if.then.cleanup.sink.split_crit_edge
  %.str.345.sink = phi ptr [ @.str.342, %land.lhs.true.cleanup.sink.split_crit_edge ], [ @.str.345, %if.then.cleanup.sink.split_crit_edge ]
  %call19 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.345.sink, i32 noundef %i.036) #19
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %for.inc.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__netif_napi_del(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_net() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_fifo_free_txdl_count_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_fifo_txdl_reserve(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_fifo_txdl_buffer_set(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vxge_hw_fifo_txdl_post(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_any(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vxge_add_mac_addr(ptr nocapture noundef readonly %vdev, ptr noundef %mac) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mac to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mac, align 4
  %2 = lshr i32 %1, 23
  %3 = and i32 %2, 2
  %4 = xor i32 %3, 2
  %vpaths = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  %5 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %vpaths, align 8
  %vpath_no = getelementptr inbounds %struct.macInfo, ptr %mac, i32 0, i32 2
  %7 = ptrtoint ptr %vpath_no to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vpath_no, align 4
  %handle = getelementptr %struct.vxge_vpath, ptr %6, i32 %8, i32 2
  %9 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %handle, align 128
  %macmask = getelementptr inbounds %struct.macInfo, ptr %mac, i32 0, i32 1
  %call4 = tail call i32 @vxge_hw_vpath_mac_addr_add(ptr noundef %10, ptr noundef %mac, ptr noundef %macmask, i32 noundef %4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp.not = icmp eq i32 %call4, 0
  br i1 %cmp.not, label %if.else10, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %device_id = getelementptr %struct.vxge_vpath, ptr %6, i32 %8, i32 3
  %11 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %device_id, align 4
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.385, i32 noundef %12) #19
  br label %if.end15

if.else10:                                        ; preds = %entry
  %mac_addr_cnt.i = getelementptr %struct.vxge_vpath, ptr %6, i32 %8, i32 10
  %13 = ptrtoint ptr %mac_addr_cnt.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %mac_addr_cnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2047, i16 %14)
  %cmp.i = icmp ugt i16 %14, 2047
  br i1 %cmp.i, label %if.else10.if.end15_crit_edge, label %if.end.i

if.else10.if.end15_crit_edge:                     ; preds = %if.else10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.end.i:                                         ; preds = %if.else10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %15 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %15, i32 noundef 2848, i32 noundef 32) #20
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %33, label %if.end7.i

if.end7.i:                                        ; preds = %if.end.i
  %mac_addr_list.i = getelementptr %struct.vxge_vpath, ptr %6, i32 %8, i32 12
  %16 = ptrtoint ptr %mac_addr_list.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mac_addr_list.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i, ptr noundef %mac_addr_list.i, ptr noundef %17) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end7.i.list_add.exit.i_crit_edge

if.end7.i.list_add.exit.i_crit_edge:              ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add.exit.i

if.end.i.i.i:                                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call7.i.i.i, ptr %prev1.i.i.i, align 4
  %19 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %17, ptr %call7.i.i.i, align 8
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %mac_addr_list.i, ptr %prev3.i.i.i, align 4
  %21 = ptrtoint ptr %mac_addr_list.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %call7.i.i.i, ptr %mac_addr_list.i, align 4
  br label %list_add.exit.i

list_add.exit.i:                                  ; preds = %if.end.i.i.i, %if.end7.i.list_add.exit.i_crit_edge
  %macaddr.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i.i, i32 0, i32 1
  %22 = call ptr @memcpy(ptr %macaddr.i, ptr %mac, i32 6)
  %state.i = getelementptr inbounds %struct.macInfo, ptr %mac, i32 0, i32 3
  %23 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %state.i, align 4
  %state9.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %call7.i.i.i, i32 0, i32 3
  %25 = ptrtoint ptr %state9.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %state9.i, align 8
  %26 = ptrtoint ptr %mac_addr_cnt.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %mac_addr_cnt.i, align 4
  %inc.i = add i16 %27, 1
  store i16 %inc.i, ptr %mac_addr_cnt.i, align 4
  %28 = ptrtoint ptr %mac to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mac, align 4
  %30 = and i32 %29, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.i.not.i = icmp eq i32 %30, 0
  br i1 %tobool.i.not.i, label %list_add.exit.i.if.end15_crit_edge, label %if.then14.i

list_add.exit.i.if.end15_crit_edge:               ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.then14.i:                                      ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %mcast_addr_cnt.i = getelementptr %struct.vxge_vpath, ptr %6, i32 %8, i32 11
  %31 = ptrtoint ptr %mcast_addr_cnt.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %mcast_addr_cnt.i, align 2
  %inc15.i = add i16 %32, 1
  store i16 %inc15.i, ptr %mcast_addr_cnt.i, align 2
  br label %if.end15

33:                                               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.308, ptr noundef nonnull @.str.3) #19
  br label %if.end15

if.end15:                                         ; preds = %33, %if.then14.i, %list_add.exit.i.if.end15_crit_edge, %if.else10.if.end15_crit_edge, %do.end
  %status.0 = phi i32 [ %call4, %do.end ], [ -1, %33 ], [ 0, %if.else10.if.end15_crit_edge ], [ 0, %if.then14.i ], [ 0, %list_add.exit.i.if.end15_crit_edge ]
  ret i32 %status.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_mcast_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_promisc_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_promisc_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vxge_del_mac_addr(ptr nocapture noundef readonly %vdev, ptr noundef %mac) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %vpaths = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  %0 = ptrtoint ptr %vpaths to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vpaths, align 8
  %vpath_no = getelementptr inbounds %struct.macInfo, ptr %mac, i32 0, i32 2
  %2 = ptrtoint ptr %vpath_no to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vpath_no, align 4
  %handle = getelementptr %struct.vxge_vpath, ptr %1, i32 %3, i32 2
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %handle, align 128
  %macmask = getelementptr inbounds %struct.macInfo, ptr %mac, i32 0, i32 1
  %call = tail call i32 @vxge_hw_vpath_mac_addr_delete(ptr noundef %5, ptr noundef %mac, ptr noundef %macmask) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.else, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %device_id = getelementptr %struct.vxge_vpath, ptr %1, i32 %3, i32 3
  %6 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %device_id, align 4
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.408, i32 noundef %7) #19
  br label %if.end

if.else:                                          ; preds = %entry
  %8 = ptrtoint ptr %mac to i32
  call void @__asan_loadN_noabort(i32 %8, i32 6)
  %del_mac.0.copyload.i = load i48, ptr %mac, align 4
  %del_mac.0.insert.ext.i = zext i48 %del_mac.0.copyload.i to i64
  %del_mac.0.insert.shift.i = shl nuw i64 %del_mac.0.insert.ext.i, 16
  %mac_addr_list.i = getelementptr %struct.vxge_vpath, ptr %1, i32 %3, i32 12
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.else
  %entry1.0.in.i = phi ptr [ %mac_addr_list.i, %if.else ], [ %entry1.0.i, %for.body.i.for.cond.i_crit_edge ]
  %9 = ptrtoint ptr %entry1.0.in.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %entry1.0.i = load ptr, ptr %entry1.0.in.i, align 4
  %cmp.i.not.i = icmp eq ptr %entry1.0.i, %mac_addr_list.i
  br i1 %cmp.i.not.i, label %for.cond.i.if.end_crit_edge, label %for.body.i

for.cond.i.if.end_crit_edge:                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.i:                                       ; preds = %for.cond.i
  %macaddr5.i = getelementptr inbounds %struct.vxge_mac_addrs, ptr %entry1.0.i, i32 0, i32 1
  %10 = ptrtoint ptr %macaddr5.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %macaddr5.i, align 8
  %cmp.i = icmp eq i64 %11, %del_mac.0.insert.shift.i
  br i1 %cmp.i, label %if.then.i, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

if.then.i:                                        ; preds = %for.body.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.0.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.list_del.exit.i_crit_edge

if.then.i.list_del.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %entry1.0.i, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %entry1.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %entry1.0.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then.i.list_del.exit.i_crit_edge
  %18 = ptrtoint ptr %entry1.0.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1.0.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %entry1.0.i, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef %entry1.0.i) #16
  %mac_addr_cnt.i = getelementptr %struct.vxge_vpath, ptr %1, i32 %3, i32 10
  %20 = ptrtoint ptr %mac_addr_cnt.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %mac_addr_cnt.i, align 4
  %dec.i = add i16 %21, -1
  store i16 %dec.i, ptr %mac_addr_cnt.i, align 4
  %22 = ptrtoint ptr %mac to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %mac, align 4
  %24 = and i32 %23, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.i.not.i = icmp eq i32 %24, 0
  br i1 %tobool.i.not.i, label %list_del.exit.i.if.end_crit_edge, label %if.then9.i

list_del.exit.i.if.end_crit_edge:                 ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then9.i:                                       ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %mcast_addr_cnt.i = getelementptr %struct.vxge_vpath, ptr %1, i32 %3, i32 11
  %25 = ptrtoint ptr %mcast_addr_cnt.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %mcast_addr_cnt.i, align 2
  %dec10.i = add i16 %26, -1
  store i16 %dec10.i, ptr %mcast_addr_cnt.i, align 2
  br label %if.end

if.end:                                           ; preds = %if.then9.i, %list_del.exit.i.if.end_crit_edge, %for.cond.i.if.end_crit_edge, %do.end
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_mac_addr_delete(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !969
  %and.i.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %do.body24.critedge.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @trace_hardirqs_off() #16
  %dep_map.c.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %1 = tail call ptr @llvm.returnaddress(i32 0) #16
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #16
  tail call void @lock_release(ptr noundef %dep_map.c.i.i, i32 noundef %2) #16
  tail call void @trace_hardirqs_on() #16
  br label %do.body24.i.i

do.body24.critedge.i.i:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dep_map.c48.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %3 = tail call ptr @llvm.returnaddress(i32 0) #16
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #16
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i, i32 noundef %4) #16
  br label %do.body24.i.i

do.body24.i.i:                                    ; preds = %do.body24.critedge.i.i, %if.then.i.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !970
  %and.i.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool32.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool32.not.i.i, label %if.then36.i.i, label %do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge, !prof !948

do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge: ; preds = %do.body24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %seqcount_lockdep_reader_access.exit.i

if.then36.i.i:                                    ; preds = %do.body24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %seqcount_lockdep_reader_access.exit.i

seqcount_lockdep_reader_access.exit.i:            ; preds = %if.then36.i.i, %do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #16, !srcloc !971
  %6 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %syncp, align 4
  %and18.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %tobool.not19.i = icmp eq i32 %and18.i, 0
  br i1 %tobool.not19.i, label %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge, label %seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge

seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i
  br label %do.end.i

seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__u64_stats_fetch_begin.exit

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !972
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #16, !srcloc !973
  %8 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %syncp, align 4
  %and.i = and i32 %9, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i.__u64_stats_fetch_begin.exit_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

do.end.i.__u64_stats_fetch_begin.exit_crit_edge:  ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__u64_stats_fetch_begin.exit

__u64_stats_fetch_begin.exit:                     ; preds = %do.end.i.__u64_stats_fetch_begin.exit_crit_edge, %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge
  %.lcssa.i = phi i32 [ %7, %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge ], [ %9, %do.end.i.__u64_stats_fetch_begin.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !974
  ret i32 %.lcssa.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vxge_hw_vpath_vid_delete(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @disable_irq(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @enable_irq(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @do_vxge_reset(ptr noundef %vdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.438, i32 noundef 1611) #19
  %state.i = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 6
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !948

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call10 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.then16, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then16:                                        ; preds = %if.end
  %3 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %vdev, align 8
  tail call void @netif_carrier_off(ptr noundef %4) #16
  %no_of_vpath = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 17
  %5 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp172 = icmp sgt i32 %6, 0
  br i1 %cmp172, label %while.cond.preheader.lr.ph, label %if.then16.for.end_crit_edge

if.then16.for.end_crit_edge:                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

while.cond.preheader.lr.ph:                       ; preds = %if.then16
  %vp_reset = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 7
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.inc.while.cond.preheader_crit_edge, %while.cond.preheader.lr.ph
  %vp_id.03 = phi i32 [ 0, %while.cond.preheader.lr.ph ], [ %inc, %for.inc.while.cond.preheader_crit_edge ]
  %div3.i = lshr i32 %vp_id.03, 5
  %arrayidx.i = getelementptr i32, ptr %vp_reset, i32 %div3.i
  %and.i = and i32 %vp_id.03, 31
  %7 = shl nuw i32 1, %and.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %arrayidx.i, align 4
  %10 = and i32 %9, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool19.not1 = icmp eq i32 %10, 0
  br i1 %tobool19.not1, label %while.cond.preheader.for.inc_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.for.inc_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  tail call void @msleep(i32 noundef 50) #16
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %arrayidx.i, align 4
  %13 = and i32 %12, %7
  %tobool19.not = icmp eq i32 %13, 0
  br i1 %tobool19.not, label %while.body.for.inc_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.body.for.inc_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.inc:                                          ; preds = %while.body.for.inc_crit_edge, %while.cond.preheader.for.inc_crit_edge
  %inc = add nuw nsw i32 %vp_id.03, 1
  %14 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %no_of_vpath, align 4
  %cmp17 = icmp slt i32 %inc, %15
  br i1 %cmp17, label %for.inc.while.cond.preheader_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.while.cond.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond.preheader

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.then16.for.end_crit_edge
  %16 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vdev, align 8
  tail call void @netif_carrier_on(ptr noundef %17) #16
  %exec_mode = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 19
  %18 = ptrtoint ptr %exec_mode to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %exec_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool21.not = icmp eq i32 %19, 0
  br i1 %tobool21.not, label %if.then43, label %do.end32, !prof !949

do.end32:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vdev, align 8
  %call35 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.440, ptr noundef %21) #19
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %state.i) #16
  %22 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vdev, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %23) #16
  br label %cleanup

if.then43:                                        ; preds = %for.end
  %devh = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 2
  %24 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %devh, align 8
  tail call void @vxge_hw_device_wait_receive_idle(ptr noundef %25) #16
  %26 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %devh, align 8
  tail call void @vxge_hw_device_intr_disable(ptr noundef %27) #16
  %cric_err_event = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 15
  %28 = ptrtoint ptr %cric_err_event to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cric_err_event, align 4
  %30 = zext i32 %29 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.564)
  switch i32 %29, label %if.then103 [
    i32 0, label %sw.bb
    i32 14, label %sw.bb86
    i32 2, label %if.then43.do.end201_crit_edge
    i32 3, label %if.then43.do.end201_crit_edge12
    i32 4, label %if.then43.do.end201_crit_edge13
    i32 5, label %if.then43.do.end201_crit_edge14
    i32 6, label %if.then43.do.end201_crit_edge15
    i32 7, label %if.then43.do.end201_crit_edge16
    i32 13, label %if.then43.do.end201_crit_edge17
    i32 12, label %if.then43.do.end201_crit_edge18
    i32 10, label %sw.bb59
    i32 11, label %sw.bb72
  ]

if.then43.do.end201_crit_edge18:                  ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end201

if.then43.do.end201_crit_edge17:                  ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end201

if.then43.do.end201_crit_edge16:                  ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end201

if.then43.do.end201_crit_edge15:                  ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end201

if.then43.do.end201_crit_edge14:                  ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end201

if.then43.do.end201_crit_edge13:                  ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end201

if.then43.do.end201_crit_edge12:                  ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end201

if.then43.do.end201_crit_edge:                    ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end201

sw.bb:                                            ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  %31 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %vdev, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %32) #16
  %33 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %vdev, align 8
  %call54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.443, ptr noundef %34) #19
  br label %do.end201

sw.bb59:                                          ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  %35 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %vdev, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %36) #16
  %37 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %vdev, align 8
  %call69 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.446, ptr noundef %38) #19
  br label %do.end201

sw.bb72:                                          ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %vdev, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %40) #16
  %41 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %vdev, align 8
  %call82 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.446, ptr noundef %42) #19
  br label %do.end201

sw.bb86:                                          ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  %43 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %vdev, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %44) #16
  %45 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %vdev, align 8
  %call96 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.451, ptr noundef %46) #19
  br label %do.end201

if.then103:                                       ; preds = %if.then43
  %47 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %vdev, align 8
  tail call void @netif_tx_stop_all_queues(ptr noundef %48) #16
  tail call fastcc void @vxge_reset_all_vpaths(ptr noundef %vdev)
  %49 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %cmp1514 = icmp sgt i32 %50, 0
  br i1 %cmp1514, label %for.body152.lr.ph, label %if.then103.for.end168_crit_edge

if.then103.for.end168_crit_edge:                  ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end168

for.body152.lr.ph:                                ; preds = %if.then103
  %vpaths153 = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  br label %for.body152

for.cond162.preheader:                            ; preds = %vxge_restore_vpath_vid_table.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %cmp1647 = icmp sgt i32 %62, 0
  br i1 %cmp1647, label %for.cond162.preheader.for.body165_crit_edge, label %for.cond162.preheader.for.end168_crit_edge

for.cond162.preheader.for.end168_crit_edge:       ; preds = %for.cond162.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end168

for.cond162.preheader.for.body165_crit_edge:      ; preds = %for.cond162.preheader
  br label %for.body165

for.body152:                                      ; preds = %vxge_restore_vpath_vid_table.exit.for.body152_crit_edge, %for.body152.lr.ph
  %vp_id.15 = phi i32 [ 0, %for.body152.lr.ph ], [ %inc160, %vxge_restore_vpath_vid_table.exit.for.body152_crit_edge ]
  %51 = ptrtoint ptr %vpaths153 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %vpaths153, align 8
  %arrayidx154 = getelementptr %struct.vxge_vpath, ptr %52, i32 %vp_id.15
  tail call fastcc void @vxge_restore_vpath_mac_addr(ptr noundef %arrayidx154)
  %53 = ptrtoint ptr %vpaths153 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %vpaths153, align 8
  %is_open.i = getelementptr %struct.vxge_vpath, ptr %54, i32 %vp_id.15, i32 6
  %55 = ptrtoint ptr %is_open.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %is_open.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.not.i = icmp eq i32 %56, 0
  br i1 %tobool.not.i, label %for.body152.vxge_restore_vpath_vid_table.exit_crit_edge, label %if.end.i

for.body152.vxge_restore_vpath_vid_table.exit_crit_edge: ; preds = %for.body152
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit

if.end.i:                                         ; preds = %for.body152
  %vdev1.i = getelementptr %struct.vxge_vpath, ptr %54, i32 %vp_id.15, i32 7
  %57 = ptrtoint ptr %vdev1.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %vdev1.i, align 4
  %active_vlans.i = getelementptr inbounds %struct.vxgedev, ptr %58, i32 0, i32 3
  %call.i = tail call i32 @_find_next_bit_be(ptr noundef %active_vlans.i, i32 noundef 4096, i32 noundef 0) #16
  %conv21.i = and i32 %call.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %conv21.i)
  %cmp2.i = icmp ult i32 %conv21.i, 4096
  br i1 %cmp2.i, label %for.body.lr.ph.i, label %if.end.i.vxge_restore_vpath_vid_table.exit_crit_edge

if.end.i.vxge_restore_vpath_vid_table.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %handle.i = getelementptr %struct.vxge_vpath, ptr %54, i32 %vp_id.15, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %conv23.i = phi i32 [ %conv21.i, %for.body.lr.ph.i ], [ %conv2.i, %for.body.i.for.body.i_crit_edge ]
  %59 = ptrtoint ptr %handle.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %handle.i, align 128
  %conv4.i = zext i32 %conv23.i to i64
  %call5.i = tail call i32 @vxge_hw_vpath_vid_add(ptr noundef %60, i64 noundef %conv4.i) #16
  %add.i = add nuw nsw i32 %conv23.i, 1
  %call9.i = tail call i32 @_find_next_bit_be(ptr noundef %active_vlans.i, i32 noundef 4096, i32 noundef %add.i) #16
  %conv2.i = and i32 %call9.i, 65535
  %cmp.i = icmp ult i32 %conv2.i, 4096
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.vxge_restore_vpath_vid_table.exit_crit_edge

for.body.i.vxge_restore_vpath_vid_table.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %vxge_restore_vpath_vid_table.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

vxge_restore_vpath_vid_table.exit:                ; preds = %for.body.i.vxge_restore_vpath_vid_table.exit_crit_edge, %if.end.i.vxge_restore_vpath_vid_table.exit_crit_edge, %for.body152.vxge_restore_vpath_vid_table.exit_crit_edge
  %inc160 = add nuw nsw i32 %vp_id.15, 1
  %61 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %no_of_vpath, align 4
  %cmp151 = icmp slt i32 %inc160, %62
  br i1 %cmp151, label %vxge_restore_vpath_vid_table.exit.for.body152_crit_edge, label %for.cond162.preheader

vxge_restore_vpath_vid_table.exit.for.body152_crit_edge: ; preds = %vxge_restore_vpath_vid_table.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body152

for.body165:                                      ; preds = %for.body165.for.body165_crit_edge, %for.cond162.preheader.for.body165_crit_edge
  %i.18 = phi i32 [ %inc167, %for.body165.for.body165_crit_edge ], [ 0, %for.cond162.preheader.for.body165_crit_edge ]
  tail call fastcc void @vxge_vpath_intr_enable(ptr noundef %vdev, i32 noundef %i.18)
  %inc167 = add nuw nsw i32 %i.18, 1
  %63 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %no_of_vpath, align 4
  %cmp164 = icmp slt i32 %inc167, %64
  br i1 %cmp164, label %for.body165.for.body165_crit_edge, label %for.body165.for.end168_crit_edge

for.body165.for.end168_crit_edge:                 ; preds = %for.body165
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end168

for.body165.for.body165_crit_edge:                ; preds = %for.body165
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body165

for.end168:                                       ; preds = %for.body165.for.end168_crit_edge, %for.cond162.preheader.for.end168_crit_edge, %if.then103.for.end168_crit_edge
  %65 = ptrtoint ptr %devh to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %devh, align 8
  tail call void @vxge_hw_device_intr_enable(ptr noundef %66) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !975
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state.i) #16
  %67 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %no_of_vpath, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %cmp1799 = icmp sgt i32 %68, 0
  br i1 %cmp1799, label %for.body180.lr.ph, label %for.end168.for.end195_crit_edge

for.end168.for.end195_crit_edge:                  ; preds = %for.end168
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end195

for.body180.lr.ph:                                ; preds = %for.end168
  %vpaths181 = getelementptr inbounds %struct.vxgedev, ptr %vdev, i32 0, i32 21
  br label %for.body180

for.body180:                                      ; preds = %for.body180.for.body180_crit_edge, %for.body180.lr.ph
  %i.210 = phi i32 [ 0, %for.body180.lr.ph ], [ %inc194, %for.body180.for.body180_crit_edge ]
  %69 = ptrtoint ptr %vpaths181 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %vpaths181, align 8
  %handle183 = getelementptr %struct.vxge_vpath, ptr %70, i32 %i.210, i32 2
  %71 = ptrtoint ptr %handle183 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %handle183, align 128
  tail call void @vxge_hw_vpath_enable(ptr noundef %72) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !976
  %73 = ptrtoint ptr %vpaths181 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %vpaths181, align 8
  %handle192 = getelementptr %struct.vxge_vpath, ptr %74, i32 %i.210, i32 2
  %75 = ptrtoint ptr %handle192 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %handle192, align 128
  tail call void @vxge_hw_vpath_rx_doorbell_init(ptr noundef %76) #16
  %inc194 = add nuw nsw i32 %i.210, 1
  %77 = ptrtoint ptr %no_of_vpath to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %no_of_vpath, align 4
  %cmp179 = icmp slt i32 %inc194, %78
  br i1 %cmp179, label %for.body180.for.body180_crit_edge, label %for.body180.for.end195_crit_edge

for.body180.for.end195_crit_edge:                 ; preds = %for.body180
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end195

for.body180.for.body180_crit_edge:                ; preds = %for.body180
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body180

for.end195:                                       ; preds = %for.body180.for.end195_crit_edge, %for.end168.for.end195_crit_edge
  %79 = ptrtoint ptr %vdev to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %vdev, align 8
  tail call fastcc void @netif_tx_wake_all_queues(ptr noundef %80)
  tail call fastcc void @vxge_config_ci_for_tti_rti(ptr noundef %vdev)
  br label %do.end201

do.end201:                                        ; preds = %for.end195, %sw.bb86, %sw.bb72, %sw.bb59, %sw.bb, %if.then43.do.end201_crit_edge, %if.then43.do.end201_crit_edge12, %if.then43.do.end201_crit_edge13, %if.then43.do.end201_crit_edge14, %if.then43.do.end201_crit_edge15, %if.then43.do.end201_crit_edge16, %if.then43.do.end201_crit_edge17, %if.then43.do.end201_crit_edge18
  %call203 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233, ptr noundef nonnull @.str.438, i32 noundef 1769) #19
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i) #16
  br label %cleanup

cleanup:                                          ; preds = %do.end201, %do.end32, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_io_error_detected(ptr noundef %pdev, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %ndev = getelementptr inbounds %struct.__vxge_hw_device, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %ndev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndev, align 4
  tail call void @netif_device_detach(ptr noundef %3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %state)
  %cmp = icmp eq i32 %state, 3
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %state.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end.if.end4_crit_edge, label %if.then2

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @do_vxge_close(ptr noundef %3, i32 noundef 0)
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  tail call void @pci_disable_device(ptr noundef %pdev) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 3, %if.end4 ], [ 4, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vxge_io_slot_reset(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %ndev = getelementptr inbounds %struct.__vxge_hw_device, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %ndev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndev, align 4
  %call2 = tail call i32 @pci_enable_device(ptr noundef %pdev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %3, ptr noundef nonnull @.str.535) #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i = getelementptr i8, ptr %3, i32 2304
  tail call void @pci_set_master(ptr noundef %pdev) #16
  tail call fastcc void @do_vxge_reset(ptr noundef %add.ptr.i)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 4, %if.then ], [ 5, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vxge_io_resume(ptr nocapture noundef readonly %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %ndev = getelementptr inbounds %struct.__vxge_hw_device, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %ndev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndev, align 4
  %state.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.if.end4_crit_edge, label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then:                                          ; preds = %entry
  %call2 = tail call i32 @vxge_open(ptr noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.then.if.end4_crit_edge, label %if.then3

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %3, ptr noundef nonnull @.str.536) #19
  br label %cleanup

if.end4:                                          ; preds = %if.then.if.end4_crit_edge, %entry.if.end4_crit_edge
  tail call void @netif_device_attach(ptr noundef %3) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then3
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_detach(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_attach(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @vxge_pm_suspend(ptr nocapture noundef readnone %dev_d) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -38
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @vxge_pm_resume(ptr nocapture noundef readnone %dev_d) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -38
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pci_register_driver(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #13

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 451)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 451)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nounwind readonly }
attributes #11 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #12 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { cold nounwind }
attributes #20 = { nounwind allocsize(2) }
attributes #21 = { nobuiltin }
attributes #22 = { nounwind allocsize(0) }
attributes #23 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !5, !7, !8, !10, !11, !13, !14, !16, !17, !19, !20, !22, !23, !25, !26, !28, !29, !30, !31, !32, !33, !35, !36, !37, !39, !40, !41, !43, !44, !45, !47, !48, !49, !51, !52, !53, !55, !57, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !75, !77, !79, !81, !83, !85, !86, !87, !88, !90, !91, !92, !94, !95, !96, !98, !99, !101, !102, !103, !105, !106, !107, !109, !110, !111, !113, !114, !115, !117, !118, !119, !121, !122, !123, !125, !126, !127, !129, !130, !131, !133, !134, !135, !137, !138, !139, !141, !142, !143, !145, !146, !147, !149, !150, !151, !153, !154, !155, !157, !158, !159, !161, !162, !163, !165, !166, !167, !169, !170, !171, !173, !174, !175, !177, !178, !179, !181, !182, !183, !185, !186, !187, !189, !190, !191, !193, !194, !195, !197, !198, !199, !201, !202, !203, !205, !206, !207, !209, !210, !211, !212, !214, !215, !216, !218, !219, !220, !222, !223, !224, !226, !227, !228, !230, !231, !232, !233, !235, !236, !237, !239, !240, !241, !243, !244, !245, !247, !249, !250, !251, !252, !254, !256, !257, !258, !260, !261, !262, !264, !266, !267, !269, !270, !271, !273, !274, !275, !277, !278, !279, !281, !282, !283, !285, !286, !288, !289, !290, !291, !293, !294, !295, !297, !298, !300, !301, !302, !304, !305, !306, !308, !309, !310, !312, !313, !314, !316, !317, !318, !320, !321, !323, !325, !326, !327, !329, !330, !331, !333, !334, !335, !337, !338, !339, !341, !342, !343, !344, !345, !347, !348, !349, !351, !352, !353, !355, !356, !357, !359, !360, !361, !363, !364, !365, !367, !368, !370, !371, !373, !374, !376, !377, !378, !379, !381, !382, !383, !384, !386, !387, !388, !390, !391, !392, !394, !395, !396, !398, !399, !401, !402, !404, !405, !406, !408, !409, !410, !412, !413, !414, !416, !417, !418, !420, !421, !422, !424, !425, !426, !428, !429, !430, !432, !433, !434, !436, !437, !439, !440, !441, !443, !444, !445, !447, !448, !449, !451, !452, !454, !455, !456, !458, !459, !460, !462, !463, !465, !466, !467, !469, !470, !471, !473, !474, !475, !477, !478, !480, !481, !482, !484, !485, !487, !488, !489, !491, !492, !494, !495, !496, !497, !499, !500, !501, !503, !505, !507, !508, !509, !511, !512, !514, !516, !517, !518, !520, !521, !523, !525, !526, !527, !528, !530, !531, !532, !534, !535, !536, !537, !539, !540, !542, !543, !544, !546, !547, !548, !549, !551, !552, !553, !555, !556, !558, !559, !561, !562, !563, !564, !566, !567, !568, !570, !571, !572, !573, !575, !576, !577, !578, !580, !581, !583, !584, !585, !586, !588, !589, !590, !592, !593, !595, !596, !597, !599, !600, !602, !603, !604, !605, !607, !608, !609, !611, !612, !613, !615, !616, !617, !619, !620, !621, !623, !624, !625, !627, !628, !629, !631, !632, !633, !635, !636, !637, !639, !640, !641, !643, !644, !645, !647, !648, !649, !651, !652, !653, !655, !656, !658, !659, !660, !662, !663, !664, !665, !667, !668, !669, !670, !672, !673, !674, !676, !677, !678, !680, !681, !682, !684, !685, !686, !688, !689, !690, !691, !692, !694, !695, !696, !698, !699, !700, !702, !703, !705, !706, !707, !708, !710, !711, !712, !714, !715, !717, !718, !720, !722, !724, !725, !726, !728, !729, !730, !731, !733, !734, !735, !737, !738, !739, !741, !742, !744, !745, !746, !748, !749, !751, !752, !753, !755, !756, !758, !759, !760, !762, !763, !765, !766, !767, !769, !770, !771, !773, !774, !775, !777, !778, !779, !781, !782, !784, !785, !786, !788, !789, !791, !792, !794, !795, !797, !798, !799, !800, !802, !803, !804, !806, !808, !810, !811, !812, !814, !816, !817, !818, !819, !821, !822, !823, !825, !826, !827, !829, !830, !831, !833, !834, !835, !837, !838, !839, !841, !842, !843, !845, !846, !848, !849, !851, !852, !854, !855, !856, !858, !859, !860, !862, !863, !864, !866, !867, !869, !870, !871, !873, !874, !875, !877, !878, !879, !880, !881, !883, !884, !885, !887, !888, !889, !891, !892, !893, !895, !896, !898, !899, !900, !902, !903, !904, !906, !907, !908, !910, !911, !913, !915, !917, !919, !921, !922, !923, !924, !926, !927, !928, !929, !931, !932, !934, !935, !936}
!llvm.named.register.sp = !{!937}
!llvm.module.flags = !{!938, !939, !940, !941, !942, !943, !944, !945}
!llvm.ident = !{!946}

!0 = !{ptr @__UNIQUE_ID_file496, !1, !"__UNIQUE_ID_file496", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 62, i32 1}
!2 = !{ptr @__UNIQUE_ID_license497, !1, !"__UNIQUE_ID_license497", i1 false, i1 false}
!3 = !{ptr @__UNIQUE_ID_description498, !4, !"__UNIQUE_ID_description498", i1 false, i1 false}
!4 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 63, i32 1}
!5 = !{ptr @__param_vlan_tag_strip, !6, !"__param_vlan_tag_strip", i1 false, i1 false}
!6 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 76, i32 1}
!7 = !{ptr @__UNIQUE_ID_vlan_tag_striptype499, !6, !"__UNIQUE_ID_vlan_tag_striptype499", i1 false, i1 false}
!8 = !{ptr @__param_addr_learn_en, !9, !"__param_addr_learn_en", i1 false, i1 false}
!9 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 77, i32 1}
!10 = !{ptr @__UNIQUE_ID_addr_learn_entype500, !9, !"__UNIQUE_ID_addr_learn_entype500", i1 false, i1 false}
!11 = !{ptr @__param_max_config_port, !12, !"__param_max_config_port", i1 false, i1 false}
!12 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 78, i32 1}
!13 = !{ptr @__UNIQUE_ID_max_config_porttype501, !12, !"__UNIQUE_ID_max_config_porttype501", i1 false, i1 false}
!14 = !{ptr @__param_max_config_vpath, !15, !"__param_max_config_vpath", i1 false, i1 false}
!15 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 79, i32 1}
!16 = !{ptr @__UNIQUE_ID_max_config_vpathtype502, !15, !"__UNIQUE_ID_max_config_vpathtype502", i1 false, i1 false}
!17 = !{ptr @__param_max_mac_vpath, !18, !"__param_max_mac_vpath", i1 false, i1 false}
!18 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 80, i32 1}
!19 = !{ptr @__UNIQUE_ID_max_mac_vpathtype503, !18, !"__UNIQUE_ID_max_mac_vpathtype503", i1 false, i1 false}
!20 = !{ptr @__param_max_config_dev, !21, !"__param_max_config_dev", i1 false, i1 false}
!21 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 81, i32 1}
!22 = !{ptr @__UNIQUE_ID_max_config_devtype504, !21, !"__UNIQUE_ID_max_config_devtype504", i1 false, i1 false}
!23 = !{ptr @__param_bw_percentage, !24, !"__param_bw_percentage", i1 false, i1 false}
!24 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 87, i32 1}
!25 = !{ptr @__UNIQUE_ID_bw_percentagetype505, !24, !"__UNIQUE_ID_bw_percentagetype505", i1 false, i1 false}
!26 = !{ptr @.str, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4119, i32 3}
!28 = !{ptr @.str.1, !27, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @.str.2, !27, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @vxge_fw_upgrade._entry, !27, !"_entry", i1 false, i1 false}
!31 = !{ptr @vxge_fw_upgrade._entry_ptr, !27, !"_entry_ptr", i1 false, i1 false}
!32 = !{ptr @.str.3, !27, !"<string literal>", i1 false, i1 false}
!33 = !{ptr @.str.5, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4127, i32 3}
!35 = !{ptr @vxge_fw_upgrade._entry.4, !34, !"_entry", i1 false, i1 false}
!36 = !{ptr @vxge_fw_upgrade._entry_ptr.6, !34, !"_entry_ptr", i1 false, i1 false}
!37 = !{ptr @.str.8, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4137, i32 3}
!39 = !{ptr @vxge_fw_upgrade._entry.7, !38, !"_entry", i1 false, i1 false}
!40 = !{ptr @vxge_fw_upgrade._entry_ptr.9, !38, !"_entry_ptr", i1 false, i1 false}
!41 = !{ptr @.str.11, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4157, i32 2}
!43 = !{ptr @vxge_fw_upgrade._entry.10, !42, !"_entry", i1 false, i1 false}
!44 = !{ptr @vxge_fw_upgrade._entry_ptr.12, !42, !"_entry_ptr", i1 false, i1 false}
!45 = !{ptr @.str.14, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4163, i32 3}
!47 = !{ptr @vxge_fw_upgrade._entry.13, !46, !"_entry", i1 false, i1 false}
!48 = !{ptr @vxge_fw_upgrade._entry_ptr.15, !46, !"_entry_ptr", i1 false, i1 false}
!49 = !{ptr @.str.17, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4169, i32 2}
!51 = !{ptr @vxge_fw_upgrade._entry.16, !50, !"_entry", i1 false, i1 false}
!52 = !{ptr @vxge_fw_upgrade._entry_ptr.18, !50, !"_entry_ptr", i1 false, i1 false}
!53 = !{ptr @__initcall__kmod_vxge__507_4808_vxge_starter6, !54, !"__initcall__kmod_vxge__507_4808_vxge_starter6", i1 false, i1 false}
!54 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4808, i32 1}
!55 = !{ptr @__exitcall_vxge_closer, !56, !"__exitcall_vxge_closer", i1 false, i1 false}
!56 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4809, i32 1}
!57 = !{ptr @driver_config, !58, !"driver_config", i1 false, i1 false}
!58 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 89, i32 32}
!59 = !{ptr @__param_str_vlan_tag_strip, !6, !"__param_str_vlan_tag_strip", i1 false, i1 false}
!60 = !{ptr @vlan_tag_strip, !6, !"vlan_tag_strip", i1 false, i1 false}
!61 = !{ptr @__param_str_addr_learn_en, !9, !"__param_str_addr_learn_en", i1 false, i1 false}
!62 = !{ptr @addr_learn_en, !9, !"addr_learn_en", i1 false, i1 false}
!63 = !{ptr @__param_str_max_config_port, !12, !"__param_str_max_config_port", i1 false, i1 false}
!64 = !{ptr @max_config_port, !12, !"max_config_port", i1 false, i1 false}
!65 = !{ptr @__param_str_max_config_vpath, !15, !"__param_str_max_config_vpath", i1 false, i1 false}
!66 = !{ptr @max_config_vpath, !15, !"max_config_vpath", i1 false, i1 false}
!67 = !{ptr @__param_str_max_mac_vpath, !18, !"__param_str_max_mac_vpath", i1 false, i1 false}
!68 = !{ptr @max_mac_vpath, !18, !"max_mac_vpath", i1 false, i1 false}
!69 = !{ptr @__param_str_max_config_dev, !21, !"__param_str_max_config_dev", i1 false, i1 false}
!70 = !{ptr @max_config_dev, !21, !"max_config_dev", i1 false, i1 false}
!71 = !{ptr @__param_str_bw_percentage, !24, !"__param_str_bw_percentage", i1 false, i1 false}
!72 = !{ptr @__param_arr_bw_percentage, !24, !"__param_arr_bw_percentage", i1 false, i1 false}
!73 = !{ptr @bw_percentage, !74, !"bw_percentage", i1 false, i1 false}
!74 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 85, i32 21}
!75 = !{ptr @vxge_driver, !76, !"vxge_driver", i1 false, i1 false}
!76 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4763, i32 26}
!77 = !{ptr @vxge_id_table, !78, !"vxge_id_table", i1 false, i1 false}
!78 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 66, i32 35}
!79 = !{ptr @vxge_probe.bus, !80, !"bus", i1 false, i1 false}
!80 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4289, i32 13}
!81 = !{ptr @vxge_probe.device, !82, !"device", i1 false, i1 false}
!82 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4289, i32 23}
!83 = !{ptr @.str.19, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4296, i32 2}
!85 = !{ptr @.str.20, !84, !"<string literal>", i1 false, i1 false}
!86 = !{ptr @vxge_probe._entry, !84, !"_entry", i1 false, i1 false}
!87 = !{ptr @vxge_probe._entry_ptr, !84, !"_entry_ptr", i1 false, i1 false}
!88 = !{ptr @.str.22, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4313, i32 4}
!90 = !{ptr @vxge_probe._entry.21, !89, !"_entry", i1 false, i1 false}
!91 = !{ptr @vxge_probe._entry_ptr.23, !89, !"_entry_ptr", i1 false, i1 false}
!92 = !{ptr @.str.25, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4338, i32 3}
!94 = !{ptr @vxge_probe._entry.24, !93, !"_entry", i1 false, i1 false}
!95 = !{ptr @vxge_probe._entry_ptr.26, !93, !"_entry_ptr", i1 false, i1 false}
!96 = !{ptr @vxge_probe._entry.27, !97, !"_entry", i1 false, i1 false}
!97 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4347, i32 3}
!98 = !{ptr @vxge_probe._entry_ptr.28, !97, !"_entry_ptr", i1 false, i1 false}
!99 = !{ptr @.str.30, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4365, i32 3}
!101 = !{ptr @vxge_probe._entry.29, !100, !"_entry", i1 false, i1 false}
!102 = !{ptr @vxge_probe._entry_ptr.31, !100, !"_entry_ptr", i1 false, i1 false}
!103 = !{ptr @.str.33, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4371, i32 3}
!105 = !{ptr @vxge_probe._entry.32, !104, !"_entry", i1 false, i1 false}
!106 = !{ptr @vxge_probe._entry_ptr.34, !104, !"_entry_ptr", i1 false, i1 false}
!107 = !{ptr @.str.36, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4380, i32 3}
!109 = !{ptr @vxge_probe._entry.35, !108, !"_entry", i1 false, i1 false}
!110 = !{ptr @vxge_probe._entry_ptr.37, !108, !"_entry_ptr", i1 false, i1 false}
!111 = !{ptr @.str.39, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4389, i32 3}
!113 = !{ptr @vxge_probe._entry.38, !112, !"_entry", i1 false, i1 false}
!114 = !{ptr @vxge_probe._entry_ptr.40, !112, !"_entry_ptr", i1 false, i1 false}
!115 = !{ptr @.str.42, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4394, i32 2}
!117 = !{ptr @vxge_probe._entry.41, !116, !"_entry", i1 false, i1 false}
!118 = !{ptr @vxge_probe._entry_ptr.43, !116, !"_entry_ptr", i1 false, i1 false}
!119 = !{ptr @.str.45, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4402, i32 3}
!121 = !{ptr @vxge_probe._entry.44, !120, !"_entry", i1 false, i1 false}
!122 = !{ptr @vxge_probe._entry_ptr.46, !120, !"_entry_ptr", i1 false, i1 false}
!123 = !{ptr @.str.48, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4411, i32 3}
!125 = !{ptr @vxge_probe._entry.47, !124, !"_entry", i1 false, i1 false}
!126 = !{ptr @vxge_probe._entry_ptr.49, !124, !"_entry_ptr", i1 false, i1 false}
!127 = !{ptr @.str.51, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4417, i32 2}
!129 = !{ptr @vxge_probe._entry.50, !128, !"_entry", i1 false, i1 false}
!130 = !{ptr @vxge_probe._entry_ptr.52, !128, !"_entry_ptr", i1 false, i1 false}
!131 = !{ptr @.str.54, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4441, i32 4}
!133 = !{ptr @vxge_probe._entry.53, !132, !"_entry", i1 false, i1 false}
!134 = !{ptr @vxge_probe._entry_ptr.55, !132, !"_entry_ptr", i1 false, i1 false}
!135 = !{ptr @.str.57, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4452, i32 3}
!137 = !{ptr @vxge_probe._entry.56, !136, !"_entry", i1 false, i1 false}
!138 = !{ptr @vxge_probe._entry_ptr.58, !136, !"_entry_ptr", i1 false, i1 false}
!139 = !{ptr @.str.60, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4463, i32 3}
!141 = !{ptr @vxge_probe._entry.59, !140, !"_entry", i1 false, i1 false}
!142 = !{ptr @vxge_probe._entry_ptr.61, !140, !"_entry_ptr", i1 false, i1 false}
!143 = !{ptr @.str.63, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4477, i32 4}
!145 = !{ptr @vxge_probe._entry.62, !144, !"_entry", i1 false, i1 false}
!146 = !{ptr @vxge_probe._entry_ptr.64, !144, !"_entry_ptr", i1 false, i1 false}
!147 = !{ptr @.str.66, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4486, i32 4}
!149 = !{ptr @vxge_probe._entry.65, !148, !"_entry", i1 false, i1 false}
!150 = !{ptr @vxge_probe._entry_ptr.67, !148, !"_entry_ptr", i1 false, i1 false}
!151 = !{ptr @.str.69, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4498, i32 3}
!153 = !{ptr @vxge_probe._entry.68, !152, !"_entry", i1 false, i1 false}
!154 = !{ptr @vxge_probe._entry_ptr.70, !152, !"_entry_ptr", i1 false, i1 false}
!155 = !{ptr @.str.72, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4515, i32 4}
!157 = !{ptr @vxge_probe._entry.71, !156, !"_entry", i1 false, i1 false}
!158 = !{ptr @vxge_probe._entry_ptr.73, !156, !"_entry_ptr", i1 false, i1 false}
!159 = !{ptr @.str.75, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4598, i32 2}
!161 = !{ptr @vxge_probe._entry.74, !160, !"_entry", i1 false, i1 false}
!162 = !{ptr @vxge_probe._entry_ptr.76, !160, !"_entry_ptr", i1 false, i1 false}
!163 = !{ptr @.str.78, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4601, i32 2}
!165 = !{ptr @vxge_probe._entry.77, !164, !"_entry", i1 false, i1 false}
!166 = !{ptr @vxge_probe._entry_ptr.79, !164, !"_entry_ptr", i1 false, i1 false}
!167 = !{ptr @.str.81, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4604, i32 2}
!169 = !{ptr @vxge_probe._entry.80, !168, !"_entry", i1 false, i1 false}
!170 = !{ptr @vxge_probe._entry_ptr.82, !168, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @.str.84, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4607, i32 2}
!173 = !{ptr @vxge_probe._entry.83, !172, !"_entry", i1 false, i1 false}
!174 = !{ptr @vxge_probe._entry_ptr.85, !172, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @.str.87, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4610, i32 2}
!177 = !{ptr @vxge_probe._entry.86, !176, !"_entry", i1 false, i1 false}
!178 = !{ptr @vxge_probe._entry_ptr.88, !176, !"_entry_ptr", i1 false, i1 false}
!179 = !{ptr @.str.90, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4613, i32 2}
!181 = !{ptr @vxge_probe._entry.89, !180, !"_entry", i1 false, i1 false}
!182 = !{ptr @vxge_probe._entry_ptr.91, !180, !"_entry_ptr", i1 false, i1 false}
!183 = !{ptr @.str.93, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4621, i32 4}
!185 = !{ptr @vxge_probe._entry.92, !184, !"_entry", i1 false, i1 false}
!186 = !{ptr @vxge_probe._entry_ptr.94, !184, !"_entry_ptr", i1 false, i1 false}
!187 = !{ptr @.str.96, !188, !"<string literal>", i1 false, i1 false}
!188 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4625, i32 4}
!189 = !{ptr @vxge_probe._entry.95, !188, !"_entry", i1 false, i1 false}
!190 = !{ptr @vxge_probe._entry_ptr.97, !188, !"_entry_ptr", i1 false, i1 false}
!191 = !{ptr @.str.99, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4629, i32 4}
!193 = !{ptr @vxge_probe._entry.98, !192, !"_entry", i1 false, i1 false}
!194 = !{ptr @vxge_probe._entry_ptr.100, !192, !"_entry_ptr", i1 false, i1 false}
!195 = !{ptr @.str.102, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4633, i32 4}
!197 = !{ptr @vxge_probe._entry.101, !196, !"_entry", i1 false, i1 false}
!198 = !{ptr @vxge_probe._entry_ptr.103, !196, !"_entry_ptr", i1 false, i1 false}
!199 = !{ptr @.str.105, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4649, i32 4}
!201 = !{ptr @vxge_probe._entry.104, !200, !"_entry", i1 false, i1 false}
!202 = !{ptr @vxge_probe._entry_ptr.106, !200, !"_entry_ptr", i1 false, i1 false}
!203 = !{ptr @.str.108, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4683, i32 2}
!205 = !{ptr @vxge_probe._entry.107, !204, !"_entry", i1 false, i1 false}
!206 = !{ptr @vxge_probe._entry_ptr.109, !204, !"_entry_ptr", i1 false, i1 false}
!207 = !{ptr @.str.110, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3876, i32 2}
!209 = !{ptr @.str.111, !208, !"<string literal>", i1 false, i1 false}
!210 = !{ptr @vxge_device_config_init._entry, !208, !"_entry", i1 false, i1 false}
!211 = !{ptr @vxge_device_config_init._entry_ptr, !208, !"_entry_ptr", i1 false, i1 false}
!212 = !{ptr @.str.113, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3878, i32 2}
!214 = !{ptr @vxge_device_config_init._entry.112, !213, !"_entry", i1 false, i1 false}
!215 = !{ptr @vxge_device_config_init._entry_ptr.114, !213, !"_entry_ptr", i1 false, i1 false}
!216 = !{ptr @.str.116, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3880, i32 2}
!218 = !{ptr @vxge_device_config_init._entry.115, !217, !"_entry", i1 false, i1 false}
!219 = !{ptr @vxge_device_config_init._entry_ptr.117, !217, !"_entry_ptr", i1 false, i1 false}
!220 = !{ptr @.str.119, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3882, i32 2}
!222 = !{ptr @vxge_device_config_init._entry.118, !221, !"_entry", i1 false, i1 false}
!223 = !{ptr @vxge_device_config_init._entry_ptr.120, !221, !"_entry_ptr", i1 false, i1 false}
!224 = !{ptr @.str.122, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3884, i32 2}
!226 = !{ptr @vxge_device_config_init._entry.121, !225, !"_entry", i1 false, i1 false}
!227 = !{ptr @vxge_device_config_init._entry_ptr.123, !225, !"_entry_ptr", i1 false, i1 false}
!228 = !{ptr @.str.124, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3686, i32 3}
!230 = !{ptr @.str.125, !229, !"<string literal>", i1 false, i1 false}
!231 = !{ptr @vxge_config_vpaths._entry, !229, !"_entry", i1 false, i1 false}
!232 = !{ptr @vxge_config_vpaths._entry_ptr, !229, !"_entry_ptr", i1 false, i1 false}
!233 = !{ptr @.str.127, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3703, i32 5}
!235 = !{ptr @vxge_config_vpaths._entry.126, !234, !"_entry", i1 false, i1 false}
!236 = !{ptr @vxge_config_vpaths._entry_ptr.128, !234, !"_entry_ptr", i1 false, i1 false}
!237 = !{ptr @.str.130, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3708, i32 5}
!239 = !{ptr @vxge_config_vpaths._entry.129, !238, !"_entry", i1 false, i1 false}
!240 = !{ptr @vxge_config_vpaths._entry_ptr.131, !238, !"_entry_ptr", i1 false, i1 false}
!241 = !{ptr @.str.133, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3714, i32 4}
!243 = !{ptr @vxge_config_vpaths._entry.132, !242, !"_entry", i1 false, i1 false}
!244 = !{ptr @vxge_config_vpaths._entry_ptr.134, !242, !"_entry_ptr", i1 false, i1 false}
!245 = !{ptr @vxge_callbacks, !246, !"vxge_callbacks", i1 false, i1 false}
!246 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4258, i32 37}
!247 = !{ptr @.str.135, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 153, i32 2}
!249 = !{ptr @.str.136, !248, !"<string literal>", i1 false, i1 false}
!250 = !{ptr @vxge_callback_link_up._entry, !248, !"_entry", i1 false, i1 false}
!251 = !{ptr @vxge_callback_link_up._entry_ptr, !248, !"_entry_ptr", i1 false, i1 false}
!252 = !{ptr @.str.137, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 155, i32 28}
!254 = !{ptr @.str.139, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 161, i32 2}
!256 = !{ptr @vxge_callback_link_up._entry.138, !255, !"_entry", i1 false, i1 false}
!257 = !{ptr @vxge_callback_link_up._entry_ptr.140, !255, !"_entry_ptr", i1 false, i1 false}
!258 = !{ptr @.str.141, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 176, i32 2}
!260 = !{ptr @vxge_callback_link_down._entry, !259, !"_entry", i1 false, i1 false}
!261 = !{ptr @vxge_callback_link_down._entry_ptr, !259, !"_entry_ptr", i1 false, i1 false}
!262 = !{ptr @.str.142, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 178, i32 28}
!264 = !{ptr @vxge_callback_link_down._entry.143, !265, !"_entry", i1 false, i1 false}
!265 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 184, i32 2}
!266 = !{ptr @vxge_callback_link_down._entry_ptr.144, !265, !"_entry_ptr", i1 false, i1 false}
!267 = !{ptr @.str.145, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3531, i32 2}
!269 = !{ptr @vxge_callback_crit_err._entry, !268, !"_entry", i1 false, i1 false}
!270 = !{ptr @vxge_callback_crit_err._entry_ptr, !268, !"_entry_ptr", i1 false, i1 false}
!271 = !{ptr @.str.147, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3547, i32 4}
!273 = !{ptr @vxge_callback_crit_err._entry.146, !272, !"_entry", i1 false, i1 false}
!274 = !{ptr @vxge_callback_crit_err._entry_ptr.148, !272, !"_entry_ptr", i1 false, i1 false}
!275 = !{ptr @.str.150, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3550, i32 4}
!277 = !{ptr @vxge_callback_crit_err._entry.149, !276, !"_entry", i1 false, i1 false}
!278 = !{ptr @vxge_callback_crit_err._entry_ptr.151, !276, !"_entry_ptr", i1 false, i1 false}
!279 = !{ptr @.str.153, !280, !"<string literal>", i1 false, i1 false}
!280 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3554, i32 4}
!281 = !{ptr @vxge_callback_crit_err._entry.152, !280, !"_entry", i1 false, i1 false}
!282 = !{ptr @vxge_callback_crit_err._entry_ptr.154, !280, !"_entry_ptr", i1 false, i1 false}
!283 = !{ptr @vxge_callback_crit_err._entry.155, !284, !"_entry", i1 false, i1 false}
!284 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3585, i32 2}
!285 = !{ptr @vxge_callback_crit_err._entry_ptr.156, !284, !"_entry_ptr", i1 false, i1 false}
!286 = !{ptr @.str.157, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3368, i32 3}
!288 = !{ptr @.str.158, !287, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @vxge_device_register._entry, !287, !"_entry", i1 false, i1 false}
!290 = !{ptr @vxge_device_register._entry_ptr, !287, !"_entry_ptr", i1 false, i1 false}
!291 = !{ptr @.str.160, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3375, i32 2}
!293 = !{ptr @vxge_device_register._entry.159, !292, !"_entry", i1 false, i1 false}
!294 = !{ptr @vxge_device_register._entry_ptr.161, !292, !"_entry_ptr", i1 false, i1 false}
!295 = !{ptr @vxge_device_register.__key, !296, !"__key", i1 false, i1 false}
!296 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3406, i32 2}
!297 = !{ptr @.str.162, !296, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @.str.164, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3414, i32 3}
!300 = !{ptr @vxge_device_register._entry.163, !299, !"_entry", i1 false, i1 false}
!301 = !{ptr @vxge_device_register._entry_ptr.165, !299, !"_entry_ptr", i1 false, i1 false}
!302 = !{ptr @.str.167, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3421, i32 2}
!304 = !{ptr @vxge_device_register._entry.166, !303, !"_entry", i1 false, i1 false}
!305 = !{ptr @vxge_device_register._entry_ptr.168, !303, !"_entry_ptr", i1 false, i1 false}
!306 = !{ptr @.str.170, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3432, i32 3}
!308 = !{ptr @vxge_device_register._entry.169, !307, !"_entry", i1 false, i1 false}
!309 = !{ptr @vxge_device_register._entry_ptr.171, !307, !"_entry_ptr", i1 false, i1 false}
!310 = !{ptr @.str.173, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3447, i32 2}
!312 = !{ptr @vxge_device_register._entry.172, !311, !"_entry", i1 false, i1 false}
!313 = !{ptr @vxge_device_register._entry_ptr.174, !311, !"_entry_ptr", i1 false, i1 false}
!314 = !{ptr @.str.176, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3463, i32 3}
!316 = !{ptr @vxge_device_register._entry.175, !315, !"_entry", i1 false, i1 false}
!317 = !{ptr @vxge_device_register._entry_ptr.177, !315, !"_entry_ptr", i1 false, i1 false}
!318 = !{ptr @vxge_device_register._entry.178, !319, !"_entry", i1 false, i1 false}
!319 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3468, i32 2}
!320 = !{ptr @vxge_device_register._entry_ptr.179, !319, !"_entry_ptr", i1 false, i1 false}
!321 = !{ptr @vxge_netdev_ops, !322, !"vxge_netdev_ops", i1 false, i1 false}
!322 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3331, i32 36}
!323 = !{ptr @.str.180, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2693, i32 2}
!325 = !{ptr @vxge_open._entry, !324, !"_entry", i1 false, i1 false}
!326 = !{ptr @vxge_open._entry_ptr, !324, !"_entry_ptr", i1 false, i1 false}
!327 = !{ptr @.str.182, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2706, i32 3}
!329 = !{ptr @vxge_open._entry.181, !328, !"_entry", i1 false, i1 false}
!330 = !{ptr @vxge_open._entry_ptr.183, !328, !"_entry_ptr", i1 false, i1 false}
!331 = !{ptr @.str.185, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2716, i32 3}
!333 = !{ptr @vxge_open._entry.184, !332, !"_entry", i1 false, i1 false}
!334 = !{ptr @vxge_open._entry_ptr.186, !332, !"_entry_ptr", i1 false, i1 false}
!335 = !{ptr @.str.188, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2744, i32 4}
!337 = !{ptr @vxge_open._entry.187, !336, !"_entry", i1 false, i1 false}
!338 = !{ptr @vxge_open._entry_ptr.189, !336, !"_entry_ptr", i1 false, i1 false}
!339 = !{ptr @.str.191, !340, !"<string literal>", i1 false, i1 false}
!340 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2751, i32 2}
!341 = !{ptr @vxge_open._entry.190, !340, !"_entry", i1 false, i1 false}
!342 = !{ptr @vxge_open._entry_ptr.192, !340, !"_entry_ptr", i1 false, i1 false}
!343 = !{ptr @.str.193, !340, !"<string literal>", i1 false, i1 false}
!344 = !{ptr @.str.194, !340, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @.str.196, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2760, i32 4}
!347 = !{ptr @vxge_open._entry.195, !346, !"_entry", i1 false, i1 false}
!348 = !{ptr @vxge_open._entry_ptr.197, !346, !"_entry_ptr", i1 false, i1 false}
!349 = !{ptr @.str.199, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2768, i32 2}
!351 = !{ptr @vxge_open._entry.198, !350, !"_entry", i1 false, i1 false}
!352 = !{ptr @vxge_open._entry_ptr.200, !350, !"_entry_ptr", i1 false, i1 false}
!353 = !{ptr @.str.202, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2783, i32 5}
!355 = !{ptr @vxge_open._entry.201, !354, !"_entry", i1 false, i1 false}
!356 = !{ptr @vxge_open._entry_ptr.203, !354, !"_entry_ptr", i1 false, i1 false}
!357 = !{ptr @.str.205, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2818, i32 4}
!359 = !{ptr @vxge_open._entry.204, !358, !"_entry", i1 false, i1 false}
!360 = !{ptr @vxge_open._entry_ptr.206, !358, !"_entry_ptr", i1 false, i1 false}
!361 = !{ptr @.str.208, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2824, i32 5}
!363 = !{ptr @vxge_open._entry.207, !362, !"_entry", i1 false, i1 false}
!364 = !{ptr @vxge_open._entry_ptr.209, !362, !"_entry_ptr", i1 false, i1 false}
!365 = !{ptr @vxge_open._entry.210, !366, !"_entry", i1 false, i1 false}
!366 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2886, i32 2}
!367 = !{ptr @vxge_open._entry_ptr.211, !366, !"_entry_ptr", i1 false, i1 false}
!368 = !{ptr @vxge_open_vpaths.__key, !369, !"__key", i1 false, i1 false}
!369 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2064, i32 4}
!370 = !{ptr @.str.212, !369, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @vxge_open_vpaths.__key.213, !372, !"__key", i1 false, i1 false}
!372 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2065, i32 4}
!373 = !{ptr @.str.214, !372, !"<string literal>", i1 false, i1 false}
!374 = !{ptr @.str.215, !375, !"<string literal>", i1 false, i1 false}
!375 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2084, i32 4}
!376 = !{ptr @.str.216, !375, !"<string literal>", i1 false, i1 false}
!377 = !{ptr @vxge_open_vpaths._entry, !375, !"_entry", i1 false, i1 false}
!378 = !{ptr @vxge_open_vpaths._entry_ptr, !375, !"_entry_ptr", i1 false, i1 false}
!379 = !{ptr @.str.217, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 555, i32 2}
!381 = !{ptr @.str.218, !380, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @vxge_xmit_compl._entry, !380, !"_entry", i1 false, i1 false}
!383 = !{ptr @vxge_xmit_compl._entry_ptr, !380, !"_entry_ptr", i1 false, i1 false}
!384 = !{ptr @.str.220, !385, !"<string literal>", i1 false, i1 false}
!385 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 569, i32 3}
!386 = !{ptr @vxge_xmit_compl._entry.219, !385, !"_entry", i1 false, i1 false}
!387 = !{ptr @vxge_xmit_compl._entry_ptr.221, !385, !"_entry_ptr", i1 false, i1 false}
!388 = !{ptr @.str.223, !389, !"<string literal>", i1 false, i1 false}
!389 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 575, i32 3}
!390 = !{ptr @vxge_xmit_compl._entry.222, !389, !"_entry", i1 false, i1 false}
!391 = !{ptr @vxge_xmit_compl._entry_ptr.224, !389, !"_entry_ptr", i1 false, i1 false}
!392 = !{ptr @.str.226, !393, !"<string literal>", i1 false, i1 false}
!393 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 581, i32 4}
!394 = !{ptr @vxge_xmit_compl._entry.225, !393, !"_entry", i1 false, i1 false}
!395 = !{ptr @vxge_xmit_compl._entry_ptr.227, !393, !"_entry_ptr", i1 false, i1 false}
!396 = !{ptr @vxge_xmit_compl._entry.228, !397, !"_entry", i1 false, i1 false}
!397 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 625, i32 2}
!398 = !{ptr @vxge_xmit_compl._entry_ptr.229, !397, !"_entry_ptr", i1 false, i1 false}
!399 = distinct !{null, !400, !"__already_done", i1 false, i1 false}
!400 = !{!"../include/linux/seqlock.h", i32 271, i32 2}
!401 = !{ptr @.str.230, !400, !"<string literal>", i1 false, i1 false}
!402 = !{ptr @.str.231, !403, !"<string literal>", i1 false, i1 false}
!403 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1041, i32 2}
!404 = !{ptr @vxge_tx_term._entry, !403, !"_entry", i1 false, i1 false}
!405 = !{ptr @vxge_tx_term._entry_ptr, !403, !"_entry_ptr", i1 false, i1 false}
!406 = !{ptr @.str.233, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1063, i32 2}
!408 = !{ptr @vxge_tx_term._entry.232, !407, !"_entry", i1 false, i1 false}
!409 = !{ptr @vxge_tx_term._entry_ptr.234, !407, !"_entry_ptr", i1 false, i1 false}
!410 = !{ptr @.str.235, !411, !"<string literal>", i1 false, i1 false}
!411 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 368, i32 2}
!412 = !{ptr @vxge_rx_1b_compl._entry, !411, !"_entry", i1 false, i1 false}
!413 = !{ptr @vxge_rx_1b_compl._entry_ptr, !411, !"_entry_ptr", i1 false, i1 false}
!414 = !{ptr @.str.237, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 382, i32 3}
!416 = !{ptr @vxge_rx_1b_compl._entry.236, !415, !"_entry", i1 false, i1 false}
!417 = !{ptr @vxge_rx_1b_compl._entry_ptr.238, !415, !"_entry_ptr", i1 false, i1 false}
!418 = !{ptr @.str.240, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 391, i32 3}
!420 = !{ptr @vxge_rx_1b_compl._entry.239, !419, !"_entry", i1 false, i1 false}
!421 = !{ptr @vxge_rx_1b_compl._entry_ptr.241, !419, !"_entry_ptr", i1 false, i1 false}
!422 = !{ptr @.str.243, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 406, i32 5}
!424 = !{ptr @vxge_rx_1b_compl._entry.242, !423, !"_entry", i1 false, i1 false}
!425 = !{ptr @vxge_rx_1b_compl._entry_ptr.244, !423, !"_entry_ptr", i1 false, i1 false}
!426 = !{ptr @.str.246, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 466, i32 5}
!428 = !{ptr @vxge_rx_1b_compl._entry.245, !427, !"_entry", i1 false, i1 false}
!429 = !{ptr @vxge_rx_1b_compl._entry_ptr.247, !427, !"_entry_ptr", i1 false, i1 false}
!430 = !{ptr @.str.249, !431, !"<string literal>", i1 false, i1 false}
!431 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 483, i32 5}
!432 = !{ptr @vxge_rx_1b_compl._entry.248, !431, !"_entry", i1 false, i1 false}
!433 = !{ptr @vxge_rx_1b_compl._entry_ptr.250, !431, !"_entry_ptr", i1 false, i1 false}
!434 = !{ptr @vxge_rx_1b_compl._entry.251, !435, !"_entry", i1 false, i1 false}
!435 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 532, i32 2}
!436 = !{ptr @vxge_rx_1b_compl._entry_ptr.252, !435, !"_entry_ptr", i1 false, i1 false}
!437 = !{ptr @.str.253, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 201, i32 2}
!439 = !{ptr @vxge_rx_alloc._entry, !438, !"_entry", i1 false, i1 false}
!440 = !{ptr @vxge_rx_alloc._entry_ptr, !438, !"_entry_ptr", i1 false, i1 false}
!441 = !{ptr @.str.255, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 210, i32 3}
!443 = !{ptr @vxge_rx_alloc._entry.254, !442, !"_entry", i1 false, i1 false}
!444 = !{ptr @vxge_rx_alloc._entry_ptr.256, !442, !"_entry_ptr", i1 false, i1 false}
!445 = !{ptr @.str.258, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 216, i32 2}
!447 = !{ptr @vxge_rx_alloc._entry.257, !446, !"_entry", i1 false, i1 false}
!448 = !{ptr @vxge_rx_alloc._entry_ptr.259, !446, !"_entry_ptr", i1 false, i1 false}
!449 = !{ptr @vxge_rx_alloc._entry.260, !450, !"_entry", i1 false, i1 false}
!450 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 225, i32 2}
!451 = !{ptr @vxge_rx_alloc._entry_ptr.261, !450, !"_entry_ptr", i1 false, i1 false}
!452 = !{ptr @.str.262, !453, !"<string literal>", i1 false, i1 false}
!453 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 239, i32 2}
!454 = !{ptr @vxge_rx_map._entry, !453, !"_entry", i1 false, i1 false}
!455 = !{ptr @vxge_rx_map._entry_ptr, !453, !"_entry_ptr", i1 false, i1 false}
!456 = !{ptr @.str.264, !457, !"<string literal>", i1 false, i1 false}
!457 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 251, i32 2}
!458 = !{ptr @vxge_rx_map._entry.263, !457, !"_entry", i1 false, i1 false}
!459 = !{ptr @vxge_rx_map._entry_ptr.265, !457, !"_entry_ptr", i1 false, i1 false}
!460 = !{ptr @vxge_rx_map._entry.266, !461, !"_entry", i1 false, i1 false}
!461 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 258, i32 2}
!462 = !{ptr @vxge_rx_map._entry_ptr.267, !461, !"_entry_ptr", i1 false, i1 false}
!463 = distinct !{null, !464, !"__already_done", i1 false, i1 false}
!464 = !{!"../include/linux/dma-mapping.h", i32 326, i32 6}
!465 = !{ptr @.str.268, !464, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @.str.269, !464, !"<string literal>", i1 false, i1 false}
!467 = !{ptr @.str.270, !468, !"<string literal>", i1 false, i1 false}
!468 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 297, i32 2}
!469 = !{ptr @vxge_rx_complete._entry, !468, !"_entry", i1 false, i1 false}
!470 = !{ptr @vxge_rx_complete._entry_ptr, !468, !"_entry_ptr", i1 false, i1 false}
!471 = !{ptr @.str.272, !472, !"<string literal>", i1 false, i1 false}
!472 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 310, i32 2}
!473 = !{ptr @vxge_rx_complete._entry.271, !472, !"_entry", i1 false, i1 false}
!474 = !{ptr @vxge_rx_complete._entry_ptr.273, !472, !"_entry_ptr", i1 false, i1 false}
!475 = !{ptr @vxge_rx_complete._entry.274, !476, !"_entry", i1 false, i1 false}
!476 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 319, i32 2}
!477 = !{ptr @vxge_rx_complete._entry_ptr.275, !476, !"_entry_ptr", i1 false, i1 false}
!478 = !{ptr @.str.276, !479, !"<string literal>", i1 false, i1 false}
!479 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 274, i32 2}
!480 = !{ptr @vxge_rx_initial_replenish._entry, !479, !"_entry", i1 false, i1 false}
!481 = !{ptr @vxge_rx_initial_replenish._entry_ptr, !479, !"_entry_ptr", i1 false, i1 false}
!482 = !{ptr @vxge_rx_initial_replenish._entry.277, !483, !"_entry", i1 false, i1 false}
!483 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 286, i32 2}
!484 = !{ptr @vxge_rx_initial_replenish._entry_ptr.278, !483, !"_entry_ptr", i1 false, i1 false}
!485 = !{ptr @.str.279, !486, !"<string literal>", i1 false, i1 false}
!486 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1011, i32 2}
!487 = !{ptr @vxge_rx_term._entry, !486, !"_entry", i1 false, i1 false}
!488 = !{ptr @vxge_rx_term._entry_ptr, !486, !"_entry_ptr", i1 false, i1 false}
!489 = !{ptr @vxge_rx_term._entry.280, !490, !"_entry", i1 false, i1 false}
!490 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1022, i32 2}
!491 = !{ptr @vxge_rx_term._entry_ptr.281, !490, !"_entry_ptr", i1 false, i1 false}
!492 = !{ptr @.str.282, !493, !"<string literal>", i1 false, i1 false}
!493 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2445, i32 3}
!494 = !{ptr @.str.283, !493, !"<string literal>", i1 false, i1 false}
!495 = !{ptr @vxge_add_isr._entry, !493, !"_entry", i1 false, i1 false}
!496 = !{ptr @vxge_add_isr._entry_ptr, !493, !"_entry_ptr", i1 false, i1 false}
!497 = !{ptr @.str.285, !498, !"<string literal>", i1 false, i1 false}
!498 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2447, i32 3}
!499 = !{ptr @vxge_add_isr._entry.284, !498, !"_entry", i1 false, i1 false}
!500 = !{ptr @vxge_add_isr._entry_ptr.286, !498, !"_entry_ptr", i1 false, i1 false}
!501 = !{ptr @.str.287, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2463, i32 6}
!503 = !{ptr @.str.288, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2478, i32 6}
!505 = !{ptr @.str.290, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2494, i32 5}
!507 = !{ptr @vxge_add_isr._entry.289, !506, !"_entry", i1 false, i1 false}
!508 = !{ptr @vxge_add_isr._entry_ptr.291, !506, !"_entry_ptr", i1 false, i1 false}
!509 = !{ptr @vxge_add_isr._entry.292, !510, !"_entry", i1 false, i1 false}
!510 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2499, i32 5}
!511 = !{ptr @vxge_add_isr._entry_ptr.293, !510, !"_entry_ptr", i1 false, i1 false}
!512 = !{ptr @.str.294, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2524, i32 4}
!514 = !{ptr @.str.296, !515, !"<string literal>", i1 false, i1 false}
!515 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2534, i32 4}
!516 = !{ptr @vxge_add_isr._entry.295, !515, !"_entry", i1 false, i1 false}
!517 = !{ptr @vxge_add_isr._entry_ptr.297, !515, !"_entry_ptr", i1 false, i1 false}
!518 = !{ptr @vxge_add_isr._entry.298, !519, !"_entry", i1 false, i1 false}
!519 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2539, i32 4}
!520 = !{ptr @vxge_add_isr._entry_ptr.299, !519, !"_entry_ptr", i1 false, i1 false}
!521 = !{ptr @.str.300, !522, !"<string literal>", i1 false, i1 false}
!522 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2556, i32 4}
!523 = !{ptr @.str.302, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2566, i32 4}
!525 = !{ptr @vxge_add_isr._entry.301, !524, !"_entry", i1 false, i1 false}
!526 = !{ptr @vxge_add_isr._entry_ptr.303, !524, !"_entry_ptr", i1 false, i1 false}
!527 = !{ptr @.str.304, !524, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @.str.306, !529, !"<string literal>", i1 false, i1 false}
!529 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2571, i32 3}
!530 = !{ptr @vxge_add_isr._entry.305, !529, !"_entry", i1 false, i1 false}
!531 = !{ptr @vxge_add_isr._entry_ptr.307, !529, !"_entry_ptr", i1 false, i1 false}
!532 = !{ptr @.str.308, !533, !"<string literal>", i1 false, i1 false}
!533 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2294, i32 3}
!534 = !{ptr @.str.309, !533, !"<string literal>", i1 false, i1 false}
!535 = !{ptr @vxge_alloc_msix._entry, !533, !"_entry", i1 false, i1 false}
!536 = !{ptr @vxge_alloc_msix._entry_ptr, !533, !"_entry_ptr", i1 false, i1 false}
!537 = !{ptr @vxge_alloc_msix._entry.310, !538, !"_entry", i1 false, i1 false}
!538 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2305, i32 3}
!539 = !{ptr @vxge_alloc_msix._entry_ptr.311, !538, !"_entry_ptr", i1 false, i1 false}
!540 = !{ptr @.str.313, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2341, i32 3}
!542 = !{ptr @vxge_alloc_msix._entry.312, !541, !"_entry", i1 false, i1 false}
!543 = !{ptr @vxge_alloc_msix._entry_ptr.314, !541, !"_entry_ptr", i1 false, i1 false}
!544 = !{ptr @.str.315, !545, !"<string literal>", i1 false, i1 false}
!545 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2271, i32 3}
!546 = !{ptr @.str.316, !545, !"<string literal>", i1 false, i1 false}
!547 = !{ptr @vxge_alarm_msix_handle._entry, !545, !"_entry", i1 false, i1 false}
!548 = !{ptr @vxge_alarm_msix_handle._entry_ptr, !545, !"_entry_ptr", i1 false, i1 false}
!549 = !{ptr @.str.317, !550, !"<string literal>", i1 false, i1 false}
!550 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2171, i32 2}
!551 = !{ptr @vxge_isr_napi._entry, !550, !"_entry", i1 false, i1 false}
!552 = !{ptr @vxge_isr_napi._entry_ptr, !550, !"_entry_ptr", i1 false, i1 false}
!553 = !{ptr @vxge_isr_napi._entry.318, !554, !"_entry", i1 false, i1 false}
!554 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2192, i32 4}
!555 = !{ptr @vxge_isr_napi._entry_ptr.319, !554, !"_entry_ptr", i1 false, i1 false}
!556 = !{ptr @vxge_isr_napi._entry.320, !557, !"_entry", i1 false, i1 false}
!557 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2206, i32 2}
!558 = !{ptr @vxge_isr_napi._entry_ptr.321, !557, !"_entry_ptr", i1 false, i1 false}
!559 = !{ptr @.str.322, !560, !"<string literal>", i1 false, i1 false}
!560 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1925, i32 3}
!561 = !{ptr @.str.323, !560, !"<string literal>", i1 false, i1 false}
!562 = !{ptr @vxge_rth_configure._entry, !560, !"_entry", i1 false, i1 false}
!563 = !{ptr @vxge_rth_configure._entry_ptr, !560, !"_entry_ptr", i1 false, i1 false}
!564 = !{ptr @.str.325, !565, !"<string literal>", i1 false, i1 false}
!565 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1953, i32 4}
!566 = !{ptr @vxge_rth_configure._entry.324, !565, !"_entry", i1 false, i1 false}
!567 = !{ptr @vxge_rth_configure._entry_ptr.326, !565, !"_entry_ptr", i1 false, i1 false}
!568 = !{ptr @.str.327, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1470, i32 6}
!570 = !{ptr @.str.328, !569, !"<string literal>", i1 false, i1 false}
!571 = !{ptr @vxge_restore_vpath_mac_addr._entry, !569, !"_entry", i1 false, i1 false}
!572 = !{ptr @vxge_restore_vpath_mac_addr._entry_ptr, !569, !"_entry_ptr", i1 false, i1 false}
!573 = !{ptr @.str.329, !574, !"<string literal>", i1 false, i1 false}
!574 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1426, i32 3}
!575 = !{ptr @.str.330, !574, !"<string literal>", i1 false, i1 false}
!576 = !{ptr @vxge_search_mac_addr_in_da_table._entry, !574, !"_entry", i1 false, i1 false}
!577 = !{ptr @vxge_search_mac_addr_in_da_table._entry_ptr, !574, !"_entry_ptr", i1 false, i1 false}
!578 = !{ptr @vxge_os_timer.__key, !579, !"__key", i1 false, i1 false}
!579 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.h", i32 423, i32 2}
!580 = !{ptr @.str.331, !579, !"<string literal>", i1 false, i1 false}
!581 = !{ptr @.str.332, !582, !"<string literal>", i1 false, i1 false}
!582 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1526, i32 5}
!583 = !{ptr @.str.333, !582, !"<string literal>", i1 false, i1 false}
!584 = !{ptr @vxge_reset_vpath._entry, !582, !"_entry", i1 false, i1 false}
!585 = !{ptr @vxge_reset_vpath._entry_ptr, !582, !"_entry_ptr", i1 false, i1 false}
!586 = !{ptr @.str.335, !587, !"<string literal>", i1 false, i1 false}
!587 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1532, i32 4}
!588 = !{ptr @vxge_reset_vpath._entry.334, !587, !"_entry", i1 false, i1 false}
!589 = !{ptr @vxge_reset_vpath._entry_ptr.336, !587, !"_entry_ptr", i1 false, i1 false}
!590 = !{ptr @vxge_reset_vpath._entry.337, !591, !"_entry", i1 false, i1 false}
!591 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1550, i32 4}
!592 = !{ptr @vxge_reset_vpath._entry_ptr.338, !591, !"_entry_ptr", i1 false, i1 false}
!593 = !{ptr @.str.339, !594, !"<string literal>", i1 false, i1 false}
!594 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 2924, i32 2}
!595 = !{ptr @do_vxge_close._entry, !594, !"_entry", i1 false, i1 false}
!596 = !{ptr @do_vxge_close._entry_ptr, !594, !"_entry_ptr", i1 false, i1 false}
!597 = !{ptr @do_vxge_close._entry.340, !598, !"_entry", i1 false, i1 false}
!598 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3012, i32 2}
!599 = !{ptr @do_vxge_close._entry_ptr.341, !598, !"_entry_ptr", i1 false, i1 false}
!600 = !{ptr @.str.342, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1976, i32 6}
!602 = !{ptr @.str.343, !601, !"<string literal>", i1 false, i1 false}
!603 = !{ptr @vxge_reset_all_vpaths._entry, !601, !"_entry", i1 false, i1 false}
!604 = !{ptr @vxge_reset_all_vpaths._entry_ptr, !601, !"_entry_ptr", i1 false, i1 false}
!605 = !{ptr @.str.345, !606, !"<string literal>", i1 false, i1 false}
!606 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1983, i32 5}
!607 = !{ptr @vxge_reset_all_vpaths._entry.344, !606, !"_entry", i1 false, i1 false}
!608 = !{ptr @vxge_reset_all_vpaths._entry_ptr.346, !606, !"_entry_ptr", i1 false, i1 false}
!609 = !{ptr @.str.347, !610, !"<string literal>", i1 false, i1 false}
!610 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 820, i32 2}
!611 = !{ptr @vxge_xmit._entry, !610, !"_entry", i1 false, i1 false}
!612 = !{ptr @vxge_xmit._entry_ptr, !610, !"_entry_ptr", i1 false, i1 false}
!613 = !{ptr @.str.349, !614, !"<string literal>", i1 false, i1 false}
!614 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 825, i32 3}
!615 = !{ptr @vxge_xmit._entry.348, !614, !"_entry", i1 false, i1 false}
!616 = !{ptr @vxge_xmit._entry_ptr.350, !614, !"_entry_ptr", i1 false, i1 false}
!617 = !{ptr @.str.352, !618, !"<string literal>", i1 false, i1 false}
!618 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 834, i32 3}
!619 = !{ptr @vxge_xmit._entry.351, !618, !"_entry", i1 false, i1 false}
!620 = !{ptr @vxge_xmit._entry_ptr.353, !618, !"_entry_ptr", i1 false, i1 false}
!621 = !{ptr @.str.355, !622, !"<string literal>", i1 false, i1 false}
!622 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 843, i32 4}
!623 = !{ptr @vxge_xmit._entry.354, !622, !"_entry", i1 false, i1 false}
!624 = !{ptr @vxge_xmit._entry_ptr.356, !622, !"_entry_ptr", i1 false, i1 false}
!625 = !{ptr @.str.358, !626, !"<string literal>", i1 false, i1 false}
!626 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 856, i32 2}
!627 = !{ptr @vxge_xmit._entry.357, !626, !"_entry", i1 false, i1 false}
!628 = !{ptr @vxge_xmit._entry_ptr.359, !626, !"_entry_ptr", i1 false, i1 false}
!629 = !{ptr @.str.361, !630, !"<string literal>", i1 false, i1 false}
!630 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 869, i32 3}
!631 = !{ptr @vxge_xmit._entry.360, !630, !"_entry", i1 false, i1 false}
!632 = !{ptr @vxge_xmit._entry_ptr.362, !630, !"_entry_ptr", i1 false, i1 false}
!633 = !{ptr @.str.364, !634, !"<string literal>", i1 false, i1 false}
!634 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 883, i32 3}
!635 = !{ptr @vxge_xmit._entry.363, !634, !"_entry", i1 false, i1 false}
!636 = !{ptr @vxge_xmit._entry_ptr.365, !634, !"_entry_ptr", i1 false, i1 false}
!637 = !{ptr @.str.367, !638, !"<string literal>", i1 false, i1 false}
!638 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 889, i32 2}
!639 = !{ptr @vxge_xmit._entry.366, !638, !"_entry", i1 false, i1 false}
!640 = !{ptr @vxge_xmit._entry_ptr.368, !638, !"_entry_ptr", i1 false, i1 false}
!641 = !{ptr @.str.370, !642, !"<string literal>", i1 false, i1 false}
!642 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 915, i32 2}
!643 = !{ptr @vxge_xmit._entry.369, !642, !"_entry", i1 false, i1 false}
!644 = !{ptr @vxge_xmit._entry_ptr.371, !642, !"_entry_ptr", i1 false, i1 false}
!645 = !{ptr @.str.373, !646, !"<string literal>", i1 false, i1 false}
!646 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 936, i32 3}
!647 = !{ptr @vxge_xmit._entry.372, !646, !"_entry", i1 false, i1 false}
!648 = !{ptr @vxge_xmit._entry_ptr.374, !646, !"_entry_ptr", i1 false, i1 false}
!649 = !{ptr @.str.376, !650, !"<string literal>", i1 false, i1 false}
!650 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 952, i32 4}
!651 = !{ptr @vxge_xmit._entry.375, !650, !"_entry", i1 false, i1 false}
!652 = !{ptr @vxge_xmit._entry_ptr.377, !650, !"_entry_ptr", i1 false, i1 false}
!653 = !{ptr @vxge_xmit._entry.378, !654, !"_entry", i1 false, i1 false}
!654 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 971, i32 2}
!655 = !{ptr @vxge_xmit._entry_ptr.379, !654, !"_entry_ptr", i1 false, i1 false}
!656 = !{ptr @.str.381, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 976, i32 2}
!658 = !{ptr @vxge_xmit._entry.380, !657, !"_entry", i1 false, i1 false}
!659 = !{ptr @vxge_xmit._entry_ptr.382, !657, !"_entry_ptr", i1 false, i1 false}
!660 = !{ptr @.str.383, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 783, i32 3}
!662 = !{ptr @.str.384, !661, !"<string literal>", i1 false, i1 false}
!663 = !{ptr @vxge_learn_mac._entry, !661, !"_entry", i1 false, i1 false}
!664 = !{ptr @vxge_learn_mac._entry_ptr, !661, !"_entry_ptr", i1 false, i1 false}
!665 = !{ptr @.str.385, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 715, i32 3}
!667 = !{ptr @.str.386, !666, !"<string literal>", i1 false, i1 false}
!668 = !{ptr @vxge_add_mac_addr._entry, !666, !"_entry", i1 false, i1 false}
!669 = !{ptr @vxge_add_mac_addr._entry_ptr, !666, !"_entry_ptr", i1 false, i1 false}
!670 = !{ptr @.str.387, !671, !"<string literal>", i1 false, i1 false}
!671 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 677, i32 3}
!672 = !{ptr @vxge_mac_list_add._entry, !671, !"_entry", i1 false, i1 false}
!673 = !{ptr @vxge_mac_list_add._entry_ptr, !671, !"_entry_ptr", i1 false, i1 false}
!674 = !{ptr @.str.388, !675, !"<string literal>", i1 false, i1 false}
!675 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1135, i32 2}
!676 = !{ptr @vxge_set_multicast._entry, !675, !"_entry", i1 false, i1 false}
!677 = !{ptr @vxge_set_multicast._entry_ptr, !675, !"_entry_ptr", i1 false, i1 false}
!678 = !{ptr @.str.390, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1149, i32 5}
!680 = !{ptr @vxge_set_multicast._entry.389, !679, !"_entry", i1 false, i1 false}
!681 = !{ptr @vxge_set_multicast._entry_ptr.391, !679, !"_entry_ptr", i1 false, i1 false}
!682 = !{ptr @.str.393, !683, !"<string literal>", i1 false, i1 false}
!683 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1159, i32 5}
!684 = !{ptr @vxge_set_multicast._entry.392, !683, !"_entry", i1 false, i1 false}
!685 = !{ptr @vxge_set_multicast._entry_ptr.394, !683, !"_entry_ptr", i1 false, i1 false}
!686 = !{ptr @.str.396, !687, !"<string literal>", i1 false, i1 false}
!687 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1178, i32 5}
!688 = !{ptr @vxge_set_multicast._entry.395, !687, !"_entry", i1 false, i1 false}
!689 = !{ptr @vxge_set_multicast._entry_ptr.397, !687, !"_entry_ptr", i1 false, i1 false}
!690 = !{ptr @.str.398, !687, !"<string literal>", i1 false, i1 false}
!691 = !{ptr @.str.399, !687, !"<string literal>", i1 false, i1 false}
!692 = !{ptr @.str.401, !693, !"<string literal>", i1 false, i1 false}
!693 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1224, i32 6}
!694 = !{ptr @vxge_set_multicast._entry.400, !693, !"_entry", i1 false, i1 false}
!695 = !{ptr @vxge_set_multicast._entry_ptr.402, !693, !"_entry_ptr", i1 false, i1 false}
!696 = !{ptr @.str.404, !697, !"<string literal>", i1 false, i1 false}
!697 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1262, i32 5}
!698 = !{ptr @vxge_set_multicast._entry.403, !697, !"_entry", i1 false, i1 false}
!699 = !{ptr @vxge_set_multicast._entry_ptr.405, !697, !"_entry_ptr", i1 false, i1 false}
!700 = !{ptr @vxge_set_multicast._entry.406, !701, !"_entry", i1 false, i1 false}
!701 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1271, i32 2}
!702 = !{ptr @vxge_set_multicast._entry_ptr.407, !701, !"_entry_ptr", i1 false, i1 false}
!703 = !{ptr @.str.408, !704, !"<string literal>", i1 false, i1 false}
!704 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1102, i32 3}
!705 = !{ptr @.str.409, !704, !"<string literal>", i1 false, i1 false}
!706 = !{ptr @vxge_del_mac_addr._entry, !704, !"_entry", i1 false, i1 false}
!707 = !{ptr @vxge_del_mac_addr._entry_ptr, !704, !"_entry_ptr", i1 false, i1 false}
!708 = !{ptr @.str.410, !709, !"<string literal>", i1 false, i1 false}
!709 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1290, i32 2}
!710 = !{ptr @vxge_set_mac_addr._entry, !709, !"_entry", i1 false, i1 false}
!711 = !{ptr @vxge_set_mac_addr._entry_ptr, !709, !"_entry_ptr", i1 false, i1 false}
!712 = !{ptr @vxge_set_mac_addr._entry.411, !713, !"_entry", i1 false, i1 false}
!713 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1300, i32 2}
!714 = !{ptr @vxge_set_mac_addr._entry_ptr.412, !713, !"_entry_ptr", i1 false, i1 false}
!715 = distinct !{null, !716, !"__already_done", i1 false, i1 false}
!716 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!717 = distinct !{null, !716, !"<string literal>", i1 false, i1 false}
!718 = distinct !{null, !719, !"<string literal>", i1 false, i1 false}
!719 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!720 = !{ptr @.str.415, !721, !"<string literal>", i1 false, i1 false}
!721 = !{!"../include/linux/uaccess.h", i32 156, i32 2}
!722 = !{ptr @.str.416, !723, !"<string literal>", i1 false, i1 false}
!723 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3049, i32 2}
!724 = !{ptr @vxge_change_mtu._entry, !723, !"_entry", i1 false, i1 false}
!725 = !{ptr @vxge_change_mtu._entry_ptr, !723, !"_entry_ptr", i1 false, i1 false}
!726 = !{ptr @.str.418, !727, !"<string literal>", i1 false, i1 false}
!727 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3056, i32 3}
!728 = !{ptr @vxge_change_mtu._entry.417, !727, !"_entry", i1 false, i1 false}
!729 = !{ptr @vxge_change_mtu._entry_ptr.419, !727, !"_entry_ptr", i1 false, i1 false}
!730 = !{ptr @.str.420, !727, !"<string literal>", i1 false, i1 false}
!731 = !{ptr @.str.422, !732, !"<string literal>", i1 false, i1 false}
!732 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3061, i32 2}
!733 = !{ptr @vxge_change_mtu._entry.421, !732, !"_entry", i1 false, i1 false}
!734 = !{ptr @vxge_change_mtu._entry_ptr.423, !732, !"_entry_ptr", i1 false, i1 false}
!735 = !{ptr @.str.425, !736, !"<string literal>", i1 false, i1 false}
!736 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3073, i32 2}
!737 = !{ptr @vxge_change_mtu._entry.424, !736, !"_entry", i1 false, i1 false}
!738 = !{ptr @vxge_change_mtu._entry_ptr.426, !736, !"_entry_ptr", i1 false, i1 false}
!739 = !{ptr @vxge_change_mtu._entry.427, !740, !"_entry", i1 false, i1 false}
!740 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3076, i32 2}
!741 = !{ptr @vxge_change_mtu._entry_ptr.428, !740, !"_entry_ptr", i1 false, i1 false}
!742 = !{ptr @.str.429, !743, !"<string literal>", i1 false, i1 false}
!743 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3264, i32 2}
!744 = !{ptr @vxge_tx_watchdog._entry, !743, !"_entry", i1 false, i1 false}
!745 = !{ptr @vxge_tx_watchdog._entry_ptr, !743, !"_entry_ptr", i1 false, i1 false}
!746 = !{ptr @vxge_tx_watchdog._entry.430, !747, !"_entry", i1 false, i1 false}
!747 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3271, i32 2}
!748 = !{ptr @vxge_tx_watchdog._entry_ptr.431, !747, !"_entry_ptr", i1 false, i1 false}
!749 = !{ptr @.str.432, !750, !"<string literal>", i1 false, i1 false}
!750 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3316, i32 2}
!751 = !{ptr @vxge_vlan_rx_kill_vid._entry, !750, !"_entry", i1 false, i1 false}
!752 = !{ptr @vxge_vlan_rx_kill_vid._entry_ptr, !750, !"_entry_ptr", i1 false, i1 false}
!753 = !{ptr @vxge_vlan_rx_kill_vid._entry.433, !754, !"_entry", i1 false, i1 false}
!754 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3325, i32 2}
!755 = !{ptr @vxge_vlan_rx_kill_vid._entry_ptr.434, !754, !"_entry_ptr", i1 false, i1 false}
!756 = !{ptr @.str.435, !757, !"<string literal>", i1 false, i1 false}
!757 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1881, i32 2}
!758 = !{ptr @vxge_netpoll._entry, !757, !"_entry", i1 false, i1 false}
!759 = !{ptr @vxge_netpoll._entry_ptr, !757, !"_entry_ptr", i1 false, i1 false}
!760 = !{ptr @vxge_netpoll._entry.436, !761, !"_entry", i1 false, i1 false}
!761 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1895, i32 2}
!762 = !{ptr @vxge_netpoll._entry_ptr.437, !761, !"_entry_ptr", i1 false, i1 false}
!763 = !{ptr @.str.438, !764, !"<string literal>", i1 false, i1 false}
!764 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1611, i32 2}
!765 = !{ptr @do_vxge_reset._entry, !764, !"_entry", i1 false, i1 false}
!766 = !{ptr @do_vxge_reset._entry_ptr, !764, !"_entry_ptr", i1 false, i1 false}
!767 = !{ptr @.str.440, !768, !"<string literal>", i1 false, i1 false}
!768 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1636, i32 4}
!769 = !{ptr @do_vxge_reset._entry.439, !768, !"_entry", i1 false, i1 false}
!770 = !{ptr @do_vxge_reset._entry_ptr.441, !768, !"_entry_ptr", i1 false, i1 false}
!771 = !{ptr @.str.443, !772, !"<string literal>", i1 false, i1 false}
!772 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1652, i32 4}
!773 = !{ptr @do_vxge_reset._entry.442, !772, !"_entry", i1 false, i1 false}
!774 = !{ptr @do_vxge_reset._entry_ptr.444, !772, !"_entry_ptr", i1 false, i1 false}
!775 = !{ptr @.str.446, !776, !"<string literal>", i1 false, i1 false}
!776 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1673, i32 4}
!777 = !{ptr @do_vxge_reset._entry.445, !776, !"_entry", i1 false, i1 false}
!778 = !{ptr @do_vxge_reset._entry_ptr.447, !776, !"_entry_ptr", i1 false, i1 false}
!779 = !{ptr @do_vxge_reset._entry.448, !780, !"_entry", i1 false, i1 false}
!780 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1683, i32 4}
!781 = !{ptr @do_vxge_reset._entry_ptr.449, !780, !"_entry_ptr", i1 false, i1 false}
!782 = !{ptr @.str.451, !783, !"<string literal>", i1 false, i1 false}
!783 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1695, i32 4}
!784 = !{ptr @do_vxge_reset._entry.450, !783, !"_entry", i1 false, i1 false}
!785 = !{ptr @do_vxge_reset._entry_ptr.452, !783, !"_entry_ptr", i1 false, i1 false}
!786 = !{ptr @do_vxge_reset._entry.453, !787, !"_entry", i1 false, i1 false}
!787 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1720, i32 6}
!788 = !{ptr @do_vxge_reset._entry_ptr.454, !787, !"_entry_ptr", i1 false, i1 false}
!789 = !{ptr @do_vxge_reset._entry.455, !790, !"_entry", i1 false, i1 false}
!790 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1728, i32 6}
!791 = !{ptr @do_vxge_reset._entry_ptr.456, !790, !"_entry_ptr", i1 false, i1 false}
!792 = !{ptr @do_vxge_reset._entry.457, !793, !"_entry", i1 false, i1 false}
!793 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 1768, i32 2}
!794 = !{ptr @do_vxge_reset._entry_ptr.458, !793, !"_entry_ptr", i1 false, i1 false}
!795 = !{ptr @.str.459, !796, !"<string literal>", i1 false, i1 false}
!796 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4195, i32 3}
!797 = !{ptr @.str.460, !796, !"<string literal>", i1 false, i1 false}
!798 = !{ptr @vxge_probe_fw_update._entry, !796, !"_entry", i1 false, i1 false}
!799 = !{ptr @vxge_probe_fw_update._entry_ptr, !796, !"_entry_ptr", i1 false, i1 false}
!800 = !{ptr @.str.462, !801, !"<string literal>", i1 false, i1 false}
!801 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4205, i32 3}
!802 = !{ptr @vxge_probe_fw_update._entry.461, !801, !"_entry", i1 false, i1 false}
!803 = !{ptr @vxge_probe_fw_update._entry_ptr.463, !801, !"_entry_ptr", i1 false, i1 false}
!804 = !{ptr @.str.464, !805, !"<string literal>", i1 false, i1 false}
!805 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4220, i32 13}
!806 = !{ptr @.str.465, !807, !"<string literal>", i1 false, i1 false}
!807 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4222, i32 13}
!808 = !{ptr @.str.467, !809, !"<string literal>", i1 false, i1 false}
!809 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4235, i32 3}
!810 = !{ptr @vxge_probe_fw_update._entry.466, !809, !"_entry", i1 false, i1 false}
!811 = !{ptr @vxge_probe_fw_update._entry_ptr.468, !809, !"_entry_ptr", i1 false, i1 false}
!812 = !{ptr @vpath_selector, !813, !"vpath_selector", i1 false, i1 false}
!813 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 83, i32 12}
!814 = !{ptr @.str.469, !815, !"<string literal>", i1 false, i1 false}
!815 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3892, i32 2}
!816 = !{ptr @.str.470, !815, !"<string literal>", i1 false, i1 false}
!817 = !{ptr @vxge_print_parm._entry, !815, !"_entry", i1 false, i1 false}
!818 = !{ptr @vxge_print_parm._entry_ptr, !815, !"_entry_ptr", i1 false, i1 false}
!819 = !{ptr @.str.472, !820, !"<string literal>", i1 false, i1 false}
!820 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3898, i32 3}
!821 = !{ptr @vxge_print_parm._entry.471, !820, !"_entry", i1 false, i1 false}
!822 = !{ptr @vxge_print_parm._entry_ptr.473, !820, !"_entry_ptr", i1 false, i1 false}
!823 = !{ptr @.str.475, !824, !"<string literal>", i1 false, i1 false}
!824 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3903, i32 3}
!825 = !{ptr @vxge_print_parm._entry.474, !824, !"_entry", i1 false, i1 false}
!826 = !{ptr @vxge_print_parm._entry_ptr.476, !824, !"_entry_ptr", i1 false, i1 false}
!827 = !{ptr @.str.478, !828, !"<string literal>", i1 false, i1 false}
!828 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3909, i32 3}
!829 = !{ptr @vxge_print_parm._entry.477, !828, !"_entry", i1 false, i1 false}
!830 = !{ptr @vxge_print_parm._entry_ptr.479, !828, !"_entry_ptr", i1 false, i1 false}
!831 = !{ptr @.str.481, !832, !"<string literal>", i1 false, i1 false}
!832 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3913, i32 3}
!833 = !{ptr @vxge_print_parm._entry.480, !832, !"_entry", i1 false, i1 false}
!834 = !{ptr @vxge_print_parm._entry_ptr.482, !832, !"_entry_ptr", i1 false, i1 false}
!835 = !{ptr @.str.484, !836, !"<string literal>", i1 false, i1 false}
!836 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3919, i32 3}
!837 = !{ptr @vxge_print_parm._entry.483, !836, !"_entry", i1 false, i1 false}
!838 = !{ptr @vxge_print_parm._entry_ptr.485, !836, !"_entry_ptr", i1 false, i1 false}
!839 = !{ptr @.str.487, !840, !"<string literal>", i1 false, i1 false}
!840 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3923, i32 3}
!841 = !{ptr @vxge_print_parm._entry.486, !840, !"_entry", i1 false, i1 false}
!842 = !{ptr @vxge_print_parm._entry_ptr.488, !840, !"_entry_ptr", i1 false, i1 false}
!843 = !{ptr @vxge_print_parm._entry.489, !844, !"_entry", i1 false, i1 false}
!844 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3926, i32 3}
!845 = !{ptr @vxge_print_parm._entry_ptr.490, !844, !"_entry_ptr", i1 false, i1 false}
!846 = !{ptr @vxge_print_parm._entry.491, !847, !"_entry", i1 false, i1 false}
!847 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3931, i32 3}
!848 = !{ptr @vxge_print_parm._entry_ptr.492, !847, !"_entry_ptr", i1 false, i1 false}
!849 = !{ptr @vxge_print_parm._entry.493, !850, !"_entry", i1 false, i1 false}
!850 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3934, i32 3}
!851 = !{ptr @vxge_print_parm._entry_ptr.494, !850, !"_entry_ptr", i1 false, i1 false}
!852 = !{ptr @.str.496, !853, !"<string literal>", i1 false, i1 false}
!853 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3939, i32 3}
!854 = !{ptr @vxge_print_parm._entry.495, !853, !"_entry", i1 false, i1 false}
!855 = !{ptr @vxge_print_parm._entry_ptr.497, !853, !"_entry_ptr", i1 false, i1 false}
!856 = !{ptr @.str.499, !857, !"<string literal>", i1 false, i1 false}
!857 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3944, i32 3}
!858 = !{ptr @vxge_print_parm._entry.498, !857, !"_entry", i1 false, i1 false}
!859 = !{ptr @vxge_print_parm._entry_ptr.500, !857, !"_entry_ptr", i1 false, i1 false}
!860 = !{ptr @.str.502, !861, !"<string literal>", i1 false, i1 false}
!861 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3949, i32 3}
!862 = !{ptr @vxge_print_parm._entry.501, !861, !"_entry", i1 false, i1 false}
!863 = !{ptr @vxge_print_parm._entry_ptr.503, !861, !"_entry_ptr", i1 false, i1 false}
!864 = !{ptr @vxge_print_parm._entry.504, !865, !"_entry", i1 false, i1 false}
!865 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3952, i32 3}
!866 = !{ptr @vxge_print_parm._entry_ptr.505, !865, !"_entry_ptr", i1 false, i1 false}
!867 = !{ptr @.str.507, !868, !"<string literal>", i1 false, i1 false}
!868 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3958, i32 3}
!869 = !{ptr @vxge_print_parm._entry.506, !868, !"_entry", i1 false, i1 false}
!870 = !{ptr @vxge_print_parm._entry_ptr.508, !868, !"_entry_ptr", i1 false, i1 false}
!871 = !{ptr @.str.510, !872, !"<string literal>", i1 false, i1 false}
!872 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3964, i32 3}
!873 = !{ptr @vxge_print_parm._entry.509, !872, !"_entry", i1 false, i1 false}
!874 = !{ptr @vxge_print_parm._entry_ptr.511, !872, !"_entry_ptr", i1 false, i1 false}
!875 = !{ptr @.str.513, !876, !"<string literal>", i1 false, i1 false}
!876 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3968, i32 3}
!877 = !{ptr @vxge_print_parm._entry.512, !876, !"_entry", i1 false, i1 false}
!878 = !{ptr @vxge_print_parm._entry_ptr.514, !876, !"_entry_ptr", i1 false, i1 false}
!879 = !{ptr @.str.515, !876, !"<string literal>", i1 false, i1 false}
!880 = !{ptr @.str.516, !876, !"<string literal>", i1 false, i1 false}
!881 = !{ptr @.str.518, !882, !"<string literal>", i1 false, i1 false}
!882 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3973, i32 3}
!883 = !{ptr @vxge_print_parm._entry.517, !882, !"_entry", i1 false, i1 false}
!884 = !{ptr @vxge_print_parm._entry_ptr.519, !882, !"_entry_ptr", i1 false, i1 false}
!885 = !{ptr @.str.520, !886, !"<string literal>", i1 false, i1 false}
!886 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3495, i32 2}
!887 = !{ptr @vxge_device_unregister._entry, !886, !"_entry", i1 false, i1 false}
!888 = !{ptr @vxge_device_unregister._entry_ptr, !886, !"_entry_ptr", i1 false, i1 false}
!889 = !{ptr @.str.522, !890, !"<string literal>", i1 false, i1 false}
!890 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3507, i32 2}
!891 = !{ptr @vxge_device_unregister._entry.521, !890, !"_entry", i1 false, i1 false}
!892 = !{ptr @vxge_device_unregister._entry_ptr.523, !890, !"_entry_ptr", i1 false, i1 false}
!893 = !{ptr @vxge_device_unregister._entry.524, !894, !"_entry", i1 false, i1 false}
!894 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3509, i32 2}
!895 = !{ptr @vxge_device_unregister._entry_ptr.525, !894, !"_entry_ptr", i1 false, i1 false}
!896 = !{ptr @.str.526, !897, !"<string literal>", i1 false, i1 false}
!897 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4733, i32 2}
!898 = !{ptr @vxge_remove._entry, !897, !"_entry", i1 false, i1 false}
!899 = !{ptr @vxge_remove._entry_ptr, !897, !"_entry_ptr", i1 false, i1 false}
!900 = !{ptr @.str.528, !901, !"<string literal>", i1 false, i1 false}
!901 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4734, i32 2}
!902 = !{ptr @vxge_remove._entry.527, !901, !"_entry", i1 false, i1 false}
!903 = !{ptr @vxge_remove._entry_ptr.529, !901, !"_entry_ptr", i1 false, i1 false}
!904 = !{ptr @.str.531, !905, !"<string literal>", i1 false, i1 false}
!905 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4749, i32 2}
!906 = !{ptr @vxge_remove._entry.530, !905, !"_entry", i1 false, i1 false}
!907 = !{ptr @vxge_remove._entry_ptr.532, !905, !"_entry_ptr", i1 false, i1 false}
!908 = !{ptr @vxge_remove._entry.533, !909, !"_entry", i1 false, i1 false}
!909 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4751, i32 2}
!910 = !{ptr @vxge_remove._entry_ptr.534, !909, !"_entry_ptr", i1 false, i1 false}
!911 = !{ptr @vxge_err_handler, !912, !"vxge_err_handler", i1 false, i1 false}
!912 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4755, i32 40}
!913 = !{ptr @.str.535, !914, !"<string literal>", i1 false, i1 false}
!914 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4046, i32 22}
!915 = !{ptr @.str.536, !916, !"<string literal>", i1 false, i1 false}
!916 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4071, i32 8}
!917 = !{ptr @vxge_pm_ops, !918, !"vxge_pm_ops", i1 false, i1 false}
!918 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4761, i32 8}
!919 = !{ptr @.str.537, !920, !"<string literal>", i1 false, i1 false}
!920 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4777, i32 2}
!921 = !{ptr @.str.538, !920, !"<string literal>", i1 false, i1 false}
!922 = !{ptr @vxge_starter._entry, !920, !"_entry", i1 false, i1 false}
!923 = !{ptr @vxge_starter._entry_ptr, !920, !"_entry_ptr", i1 false, i1 false}
!924 = !{ptr @.str.540, !925, !"<string literal>", i1 false, i1 false}
!925 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4778, i32 2}
!926 = !{ptr @vxge_starter._entry.539, !925, !"_entry", i1 false, i1 false}
!927 = !{ptr @vxge_starter._entry_ptr.541, !925, !"_entry_ptr", i1 false, i1 false}
!928 = !{ptr @.str.542, !925, !"<string literal>", i1 false, i1 false}
!929 = !{ptr @vxge_starter._entry.543, !930, !"_entry", i1 false, i1 false}
!930 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 4794, i32 3}
!931 = !{ptr @vxge_starter._entry_ptr.544, !930, !"_entry_ptr", i1 false, i1 false}
!932 = !{ptr @.str.545, !933, !"<string literal>", i1 false, i1 false}
!933 = !{!"../drivers/net/ethernet/neterion/vxge/vxge-main.c", i32 3638, i32 3}
!934 = !{ptr @.str.546, !933, !"<string literal>", i1 false, i1 false}
!935 = !{ptr @verify_bandwidth._entry, !933, !"_entry", i1 false, i1 false}
!936 = !{ptr @verify_bandwidth._entry_ptr, !933, !"_entry_ptr", i1 false, i1 false}
!937 = !{!"sp"}
!938 = !{i32 1, !"wchar_size", i32 2}
!939 = !{i32 1, !"min_enum_size", i32 4}
!940 = !{i32 8, !"branch-target-enforcement", i32 0}
!941 = !{i32 8, !"sign-return-address", i32 0}
!942 = !{i32 8, !"sign-return-address-all", i32 0}
!943 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!944 = !{i32 7, !"uwtable", i32 1}
!945 = !{i32 7, !"frame-pointer", i32 2}
!946 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!947 = !{!"auto-init"}
!948 = !{!"branch_weights", i32 1, i32 2000}
!949 = !{!"branch_weights", i32 2000, i32 1}
!950 = !{i64 2158499135}
!951 = !{i64 2158499291}
!952 = !{i64 2158499447}
!953 = !{i64 5512577}
!954 = !{i64 5512774}
!955 = !{i64 2152998007}
!956 = !{i64 2153017703, i64 2153017728}
!957 = !{i64 2150489590}
!958 = !{i64 2158398556}
!959 = !{i64 2158398712}
!960 = !{i64 2150490240}
!961 = !{i64 788510}
!962 = !{i64 2150381842}
!963 = !{i64 2150386776}
!964 = !{i64 2150408494}
!965 = !{i64 2150413388}
!966 = !{i64 2150489915}
!967 = !{!"branch_weights", i32 2000000000, i32 -288964296, i32 2002000, i32 2001000, i32 2001000000, i32 1000000}
!968 = !{i64 2158504570}
!969 = !{i64 683500, i64 683561}
!970 = !{i64 686232}
!971 = !{i64 686517}
!972 = !{i64 2151069127}
!973 = !{i64 2151068969}
!974 = !{i64 2151069297}
!975 = !{i64 2158416338}
!976 = !{i64 2158416620}
