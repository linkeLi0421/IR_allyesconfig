; ModuleID = '/llk/IR_all_yes/drivers/net/macsec.c_pt.bc'
source_filename = "../drivers/net/macsec.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+macsec_pn_wrapped\22, \22a\22\09"
module asm "\09.weak\09__crc_macsec_pn_wrapped\09\09\09\09"
module asm "\09.long\09__crc_macsec_pn_wrapped\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_macsec_pn_wrapped:\09\09\09\09\09"
module asm "\09.asciz \09\22macsec_pn_wrapped\22\09\09\09\09\09"
module asm "__kstrtabns_macsec_pn_wrapped:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.genl_family = type { i32, i32, [16 x i8], i32, i32, i32, i8, i8, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.rtnl_link_ops = type { %struct.list_head, ptr, i32, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.list_head = type { ptr, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.atomic_t = type { i32 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.48 }
%union.anon.48 = type { i32 }
%struct.genl_small_ops = type { ptr, ptr, i8, i8, i8, i8 }
%struct.cpumask = type { [1 x i32] }
%struct.lock_class_key = type { %union.anon.14 }
%union.anon.14 = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.anon.49 = type { i16, i16 }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.device_type = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.macsec_tx_sa = type { %struct.macsec_key, i32, %struct.spinlock, %union.anon.151, %struct.refcount_struct, i8, ptr, %struct.callback_head }
%struct.macsec_key = type { [16 x i8], ptr, %union.salt }
%union.salt = type { %struct.anon.146 }
%struct.anon.146 = type <{ i32, i64 }>
%struct.spinlock = type { %union.anon.12 }
%union.anon.12 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.13 }
%union.anon.13 = type { i32 }
%union.anon.151 = type { %union.pn }
%union.pn = type { i64 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { ptr, ptr }
%struct.macsec_secy = type { ptr, i32, i64, i16, i16, i32, i8, i8, i8, i8, i32, %struct.macsec_tx_sc, ptr }
%struct.macsec_tx_sc = type { i8, i8, i8, i8, i8, i8, [4 x ptr], ptr }
%struct.sk_buff = type { %union.anon, %union.anon.2, %union.anon.110, [48 x i8], %union.anon.111, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.113, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon = type { %struct.anon.0 }
%struct.anon.0 = type { ptr, ptr, %union.anon.1 }
%union.anon.1 = type { ptr }
%union.anon.2 = type { ptr }
%union.anon.110 = type { i64 }
%union.anon.111 = type { %struct.anon.112 }
%struct.anon.112 = type { i32, ptr }
%union.anon.113 = type { %struct.anon.114 }
%struct.anon.114 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.115, i32, i32, i32, i16, i16, %union.anon.117, i32, %union.anon.118, %union.anon.119, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.115 = type { i32 }
%union.anon.117 = type { i32 }
%union.anon.118 = type { i32 }
%union.anon.119 = type { i16 }
%struct.sock_common = type { %union.anon.3, %union.anon.5, %union.anon.6, i16, i8, i8, i32, %union.anon.8, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.100, [0 x i32], %union.anon.101, i16, i16, %union.anon.102, %struct.refcount_struct, [0 x i32], %union.anon.103 }
%union.anon.3 = type { i64 }
%union.anon.5 = type { i32 }
%union.anon.6 = type { i32 }
%union.anon.8 = type { %struct.hlist_node }
%struct.possible_net_t = type { ptr }
%struct.in6_addr = type { %union.anon.47 }
%union.anon.47 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.100 = type { i32 }
%union.anon.101 = type { %struct.hlist_node }
%union.anon.102 = type { i32 }
%union.anon.103 = type { i32 }
%struct.netlink_callback = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i32, i32, i32, i8, %union.anon.129 }
%union.anon.129 = type { [6 x i32], [24 x i8] }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.39, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.39 = type { %struct.anon.40 }
%struct.anon.40 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.53, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.53 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.sk_buff_head = type { %union.anon.51, i32, %struct.spinlock }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { ptr, ptr }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.macsec_context = type { %union.anon.143, i32, ptr, ptr, %struct.anon.149, %union.anon.152, i8 }
%union.anon.143 = type { ptr }
%struct.anon.149 = type { i8, [128 x i8], %union.anon.150 }
%union.anon.150 = type { ptr }
%union.anon.152 = type { ptr }
%struct.genl_info = type { i32, i32, ptr, ptr, ptr, ptr, %struct.possible_net_t, [2 x ptr], ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.142, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%union.anon.142 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.pcpu_rx_sc_stats = type { %struct.macsec_rx_sc_stats, %struct.u64_stats_sync }
%struct.macsec_rx_sc_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.macsec_rx_sc = type { ptr, i64, i8, [4 x ptr], ptr, %struct.refcount_struct, %struct.callback_head }
%struct.macsec_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.phy_device = type { %struct.mdio_device, ptr, i32, %struct.phy_c45_device_ids, i16, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [3 x i32], [3 x i32], [3 x i32], [3 x i32], i32, ptr, i32, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, %struct.delayed_work, %struct.mutex, i8, ptr, ptr, ptr, ptr, i8, i8, ptr, ptr, ptr }
%struct.mdio_device = type { %struct.device, ptr, [32 x i8], ptr, ptr, ptr, i32, i32, ptr, ptr, i32, i32 }
%struct.phy_c45_device_ids = type { i32, i32, [32 x i32] }
%struct.macsec_rx_sa = type { %struct.macsec_key, i32, %struct.spinlock, %union.anon.147, %struct.refcount_struct, i8, ptr, ptr, %struct.callback_head }
%union.anon.147 = type { %union.pn }
%struct.macsec_tx_sc_stats = type { i64, i64, i64, i64 }
%struct.macsec_tx_sa_stats = type { i32, i32 }
%struct.macsec_rx_sa_stats = type { i32, i32, i32, i32, i32 }
%struct.macsec_dev_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%struct.anon.148 = type { i32, i32 }
%struct.pcpu_tx_sc_stats = type { %struct.macsec_tx_sc_stats, %struct.u64_stats_sync }
%struct.pcpu_secy_stats = type { %struct.macsec_dev_stats, %struct.u64_stats_sync }
%struct.macsec_dev = type { %struct.macsec_secy, ptr, ptr, %struct.list_head, %struct.gro_cells, i32 }
%struct.gro_cells = type { ptr }
%struct.crypto_aead = type { i32, i32, [120 x i8], %struct.crypto_tfm }
%struct.crypto_tfm = type { i32, i32, ptr, ptr, [112 x i8], [0 x ptr] }
%struct.netdev_queue = type { ptr, ptr, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, ptr, [88 x i8], %struct.spinlock, i32, i32, i32, [72 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [116 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [88 x i8] }
%struct.pcpu_sw_netstats = type { i64, i64, i64, i64, %struct.u64_stats_sync }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.macsec_eth_header = type { %struct.ethhdr, i8, i8, i32, [8 x i8] }
%struct.crypto_async_request = type { %struct.list_head, ptr, ptr, ptr, i32 }
%struct.gcm_iv_xpn = type <{ %union.anon.160, i64 }>
%union.anon.160 = type { i32 }
%struct.gcm_iv = type { %union.anon.161, i32 }
%union.anon.161 = type { i64 }
%struct.aead_request = type { %struct.crypto_async_request, i32, i32, ptr, ptr, ptr, [84 x i8], [0 x ptr] }

@__kstrtab_macsec_pn_wrapped = external dso_local constant [0 x i8], align 1
@__kstrtabns_macsec_pn_wrapped = external dso_local constant [0 x i8], align 1
@__ksymtab_macsec_pn_wrapped = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @macsec_pn_wrapped to i32), ptr @__kstrtab_macsec_pn_wrapped, ptr @__kstrtabns_macsec_pn_wrapped }, section "___ksymtab_gpl+macsec_pn_wrapped", align 4
@macsec_fam = internal global %struct.genl_family { i32 0, i32 0, [16 x i8] c"macsec\00\00\00\00\00\00\00\00\00\00", i32 1, i32 9, i32 0, i8 -128, i8 0, i8 11, i8 0, ptr @macsec_genl_policy, ptr null, ptr null, ptr null, ptr @macsec_genl_ops, ptr null, ptr null }, section ".data..ro_after_init", align 4
@macsec_link_ops = internal global %struct.rtnl_link_ops { %struct.list_head zeroinitializer, ptr @.str, i32 88, ptr null, ptr @macsec_setup, i8 0, i32 15, ptr @macsec_rtnl_policy, ptr @macsec_validate_attr, ptr @macsec_newlink, ptr @macsec_changelink, ptr @macsec_dellink, ptr @macsec_get_size, ptr @macsec_fill_info, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null, ptr null, ptr null, ptr @macsec_get_link_net, ptr null, ptr null }, section ".data..read_mostly", align 4
@macsec_notifier = internal global { %struct.notifier_block, [20 x i8] } { %struct.notifier_block { ptr @macsec_notify, ptr null, i32 0 }, [20 x i8] zeroinitializer }, align 32
@__initcall__kmod_macsec__511_4372_macsec_init6 = internal global ptr @macsec_init, section ".initcall6.init", align 4
@__exitcall_macsec_exit = internal global ptr @macsec_exit, section ".exitcall.exit", align 4
@__UNIQUE_ID_alias512 = internal constant [30 x i8] c"macsec.alias=rtnl-link-macsec\00", section ".modinfo", align 1
@__UNIQUE_ID_alias513 = internal constant [46 x i8] c"macsec.alias=net-pf-16-proto-16-family-macsec\00", section ".modinfo", align 1
@__UNIQUE_ID_description514 = internal constant [39 x i8] c"macsec.description=MACsec IEEE 802.1AE\00", section ".modinfo", align 1
@__UNIQUE_ID_file515 = internal constant [31 x i8] c"macsec.file=drivers/net/macsec\00", section ".modinfo", align 1
@__UNIQUE_ID_license516 = internal constant [22 x i8] c"macsec.license=GPL v2\00", section ".modinfo", align 1
@__macsec_pn_wrapped.__UNIQUE_ID_ddebug476 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, i8 0, i8 114, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"macsec\00", [25 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__macsec_pn_wrapped\00", [44 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"drivers/net/macsec.c\00", [43 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"PN wrapped, transitioning to !oper\0A\00", [60 x i8] zeroinitializer }, align 32
@macsec_genl_policy = internal constant { [10 x %struct.nla_policy], [48 x i8] } { [10 x %struct.nla_policy] [%struct.nla_policy zeroinitializer, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 8, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 8, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 8, i8 0, i16 0, %union.anon.48 zeroinitializer }], [48 x i8] zeroinitializer }, align 32
@macsec_genl_ops = internal constant { [11 x %struct.genl_small_ops], [60 x i8] } { [11 x %struct.genl_small_ops] [%struct.genl_small_ops { ptr null, ptr @macsec_dump_txsc, i8 0, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @macsec_add_rxsc, ptr null, i8 1, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_del_rxsc, ptr null, i8 2, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_upd_rxsc, ptr null, i8 3, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_add_txsa, ptr null, i8 4, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_del_txsa, ptr null, i8 5, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_upd_txsa, ptr null, i8 6, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_add_rxsa, ptr null, i8 7, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_del_rxsa, ptr null, i8 8, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_upd_rxsa, ptr null, i8 9, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @macsec_upd_offload, ptr null, i8 10, i8 0, i8 1, i8 3 }], [60 x i8] zeroinitializer }, align 32
@macsec_generation = internal global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@dump_secy.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.4 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"suspicious rcu_dereference_protected() usage\00", [51 x i8] zeroinitializer }, align 32
@dump_secy.__warned.5 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@dump_secy.__warned.6 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@dump_secy.__warned.7 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.8 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"MACsec offloading commit failed (%d)\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"include/net/netlink.h\00", [42 x i8] zeroinitializer }, align 32
@macsec_genl_rxsc_policy = internal constant { [6 x %struct.nla_policy], [48 x i8] } { [6 x %struct.nla_policy] [%struct.nla_policy zeroinitializer, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer], [48 x i8] zeroinitializer }, align 32
@create_rx_sc.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.10 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&(&stat->syncp)->seq\00", [43 x i8] zeroinitializer }, align 32
@macsec_data_rtnl.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@find_rx_sc_rtnl.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@find_rx_sc_rtnl.__warned.11 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@del_rx_sc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@del_rx_sc.__warned.12 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@free_rx_sc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_add_txsa._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.14, ptr @.str.2, i32 1990, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\015macsec: nl: add_txsa: bad key length: %d != %d\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"macsec_add_txsa\00", [16 x i8] zeroinitializer }, align 32
@macsec_add_txsa._entry_ptr = internal global ptr @macsec_add_txsa._entry, section ".printk_index", align 4
@macsec_add_txsa._entry.15 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @.str.14, ptr @.str.2, i32 1998, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\015macsec: nl: add_txsa: bad pn length: %d != %d\0A\00", [47 x i8] zeroinitializer }, align 32
@macsec_add_txsa._entry_ptr.17 = internal global ptr @macsec_add_txsa._entry.15, section ".printk_index", align 4
@macsec_add_txsa._entry.18 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.14, ptr @.str.2, i32 2012, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\015macsec: nl: add_txsa: bad salt length: %d != %d\0A\00", [45 x i8] zeroinitializer }, align 32
@macsec_add_txsa._entry_ptr.20 = internal global ptr @macsec_add_txsa._entry.18, section ".printk_index", align 4
@macsec_add_txsa.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_genl_sa_policy = internal constant { <{ %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, { i8, i8, i16, { %struct.anon.49 } }, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy }>, [48 x i8] } { <{ %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, { i8, i8, i16, { %struct.anon.49 } }, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy }> <{ %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, { i8, i8, i16, { %struct.anon.49 } } { i8 11, i8 3, i16 0, { %struct.anon.49 } { %struct.anon.49 { i16 4, i16 0 } } }, %struct.nla_policy { i8 11, i8 0, i16 128, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 11, i8 0, i16 16, %union.anon.48 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 11, i8 0, i16 12, %union.anon.48 zeroinitializer } }>, [48 x i8] zeroinitializer }, align 32
@init_tx_sa.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.22 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&tx_sa->lock\00", [19 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"gcm(aes)\00", [23 x i8] zeroinitializer }, align 32
@get_txsa_from_nl.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_upd_txsa._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.25, ptr @.str.2, i32 2343, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\015macsec: nl: upd_txsa: bad pn length: %d != %d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"macsec_upd_txsa\00", [16 x i8] zeroinitializer }, align 32
@macsec_upd_txsa._entry_ptr = internal global ptr @macsec_upd_txsa._entry, section ".printk_index", align 4
@macsec_add_rxsa._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.27, ptr @.str.2, i32 1748, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\015macsec: nl: add_rxsa: bad key length: %d != %d\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"macsec_add_rxsa\00", [16 x i8] zeroinitializer }, align 32
@macsec_add_rxsa._entry_ptr = internal global ptr @macsec_add_rxsa._entry, section ".printk_index", align 4
@macsec_add_rxsa._entry.28 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.27, ptr @.str.2, i32 1756, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\015macsec: nl: add_rxsa: bad pn length: %d != %d\0A\00", [47 x i8] zeroinitializer }, align 32
@macsec_add_rxsa._entry_ptr.30 = internal global ptr @macsec_add_rxsa._entry.28, section ".printk_index", align 4
@macsec_add_rxsa._entry.31 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.27, ptr @.str.2, i32 1770, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\015macsec: nl: add_rxsa: bad salt length: %d != %d\0A\00", [45 x i8] zeroinitializer }, align 32
@macsec_add_rxsa._entry_ptr.33 = internal global ptr @macsec_add_rxsa._entry.31, section ".printk_index", align 4
@macsec_add_rxsa.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@init_rx_sa.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.34 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&rx_sa->lock\00", [19 x i8] zeroinitializer }, align 32
@get_rxsa_from_nl.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_upd_rxsa._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.35, ptr @.str.36, ptr @.str.2, i32 2440, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\015macsec: nl: upd_rxsa: bad pn length: %d != %d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"macsec_upd_rxsa\00", [16 x i8] zeroinitializer }, align 32
@macsec_upd_rxsa._entry_ptr = internal global ptr @macsec_upd_rxsa._entry, section ".printk_index", align 4
@macsec_genl_offload_policy = internal constant { [3 x %struct.nla_policy], [40 x i8] } { [3 x %struct.nla_policy] [%struct.nla_policy zeroinitializer, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy zeroinitializer], [40 x i8] zeroinitializer }, align 32
@macsec_rtnl_policy = internal constant { [16 x %struct.nla_policy], [32 x i8] } { [16 x %struct.nla_policy] [%struct.nla_policy zeroinitializer, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 2, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.48 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer], [32 x i8] zeroinitializer }, align 32
@macsec_netdev_ops = internal constant { %struct.net_device_ops, [80 x i8] } { %struct.net_device_ops { ptr @macsec_dev_init, ptr @macsec_dev_uninit, ptr @macsec_dev_open, ptr @macsec_dev_stop, ptr @macsec_start_xmit, ptr null, ptr null, ptr @macsec_dev_change_rx_flags, ptr @macsec_dev_set_rx_mode, ptr @macsec_set_mac_address, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macsec_change_mtu, ptr null, ptr null, ptr @macsec_get_stats64, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macsec_fix_features, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macsec_get_iflink, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [80 x i8] zeroinitializer }, align 32
@macsec_type = internal constant { %struct.device_type, [40 x i8] } { %struct.device_type { ptr @.str, ptr null, ptr null, ptr null, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@macsec_dev_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@__seqprop_assert.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@.str.37 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/seqlock.h\00", [40 x i8] zeroinitializer }, align 32
@macsec_txsa_get.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.38 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@rcu_bh_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock_bh.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.40 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"rcu_read_lock_bh() used illegally while idle\00", [51 x i8] zeroinitializer }, align 32
@rcu_read_unlock_bh.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.42 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"rcu_read_unlock_bh() used illegally while idle\00", [49 x i8] zeroinitializer }, align 32
@macsec_newlink.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_newlink.qdisc_tx_busylock_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@macsec_newlink.qdisc_xmit_lock_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@macsec_newlink.dev_addr_list_lock_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.43 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&dev_addr_list_lock_key\00", [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&qdisc_xmit_lock_key\00", [43 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"&macsec_netdev_addr_lock_key\00", [35 x i8] zeroinitializer }, align 32
@macsec_netdev_addr_lock_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@macsec_handle_frame.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.46 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@macsec_handle_frame.__warned.47 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@handle_not_macsec.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.48 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@macsec_data_rcu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@find_rx_sc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@find_rx_sc.__warned.49 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_rxsa_get.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.50 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@macsec_add_dev.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@macsec_add_dev.__key.51 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@macsec_changelink_common.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_del_dev.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_del_dev.__warned.52 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@macsec_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.54, ptr @.str.2, i32 4342, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\016MACsec IEEE 802.1AE\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"macsec_init\00", [20 x i8] zeroinitializer }, align 32
@macsec_init._entry_ptr = internal global ptr @macsec_init._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.55 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.56 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.57 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.58 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.59 = internal global [4 x i64] [i64 2, i64 16, i64 16, i64 32]
@__sancov_gen_cov_switch_values.60 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.61 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.62 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.63 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.64 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.65 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.66 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.67 = internal global [7 x i64] [i64 5, i64 64, i64 36030996058996737, i64 36242102291529729, i64 36242102291529730, i64 36242102291529731, i64 36242102291529732]
@__sancov_gen_cov_switch_values.68 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 2]
@__sancov_gen_cov_switch_values.69 = internal global [4 x i64] [i64 2, i64 16, i64 16, i64 32]
@__sancov_gen_cov_switch_values.70 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.71 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.72 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.73 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.74 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.75 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967181]
@__sancov_gen_cov_switch_values.76 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.77 = internal global [7 x i64] [i64 5, i64 64, i64 36030996058996737, i64 36242102291529729, i64 36242102291529730, i64 36242102291529731, i64 36242102291529732]
@__sancov_gen_cov_switch_values.78 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967181, i64 4294967222]
@__sancov_gen_cov_switch_values.79 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.80 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 2, i64 4, i64 6, i64 7]
@___asan_gen_.81 = private unnamed_addr constant [16 x i8] c"macsec_notifier\00", align 1
@___asan_gen_.83 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 4334, i32 30 }
@___asan_gen_.95 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 457, i32 2 }
@___asan_gen_.96 = private unnamed_addr constant [19 x i8] c"macsec_genl_policy\00", align 1
@___asan_gen_.98 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1602, i32 32 }
@___asan_gen_.99 = private unnamed_addr constant [16 x i8] c"macsec_genl_ops\00", align 1
@___asan_gen_.101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3291, i32 36 }
@___asan_gen_.102 = private unnamed_addr constant [18 x i8] c"macsec_generation\00", align 1
@___asan_gen_.104 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3254, i32 12 }
@___asan_gen_.107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3083, i32 32 }
@___asan_gen_.110 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1656, i32 3 }
@___asan_gen_.112 = private unnamed_addr constant [25 x i8] c"../include/net/netlink.h\00", align 1
@___asan_gen_.113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.112, i32 991, i32 3 }
@___asan_gen_.114 = private unnamed_addr constant [24 x i8] c"macsec_genl_rxsc_policy\00", align 1
@___asan_gen_.116 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1609, i32 32 }
@___asan_gen_.122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1410, i32 17 }
@___asan_gen_.131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1989, i32 3 }
@___asan_gen_.137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1997, i32 3 }
@___asan_gen_.143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 2010, i32 4 }
@___asan_gen_.144 = private unnamed_addr constant [22 x i8] c"macsec_genl_sa_policy\00", align 1
@___asan_gen_.146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1614, i32 32 }
@___asan_gen_.152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1446, i32 2 }
@___asan_gen_.155 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1312, i32 26 }
@___asan_gen_.164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 2342, i32 4 }
@___asan_gen_.173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1747, i32 3 }
@___asan_gen_.179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1755, i32 3 }
@___asan_gen_.185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1768, i32 4 }
@___asan_gen_.191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1348, i32 2 }
@___asan_gen_.200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 2439, i32 4 }
@___asan_gen_.201 = private unnamed_addr constant [27 x i8] c"macsec_genl_offload_policy\00", align 1
@___asan_gen_.203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1627, i32 32 }
@___asan_gen_.204 = private unnamed_addr constant [19 x i8] c"macsec_rtnl_policy\00", align 1
@___asan_gen_.206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3684, i32 32 }
@___asan_gen_.207 = private unnamed_addr constant [18 x i8] c"macsec_netdev_ops\00", align 1
@___asan_gen_.209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3665, i32 36 }
@___asan_gen_.210 = private unnamed_addr constant [12 x i8] c"macsec_type\00", align 1
@___asan_gen_.212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3680, i32 33 }
@___asan_gen_.215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3435, i32 16 }
@___asan_gen_.217 = private unnamed_addr constant [27 x i8] c"../include/linux/seqlock.h\00", align 1
@___asan_gen_.218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.217, i32 271, i32 2 }
@___asan_gen_.221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 199, i32 28 }
@___asan_gen_.227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.259, i32 749, i32 2 }
@___asan_gen_.230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.259, i32 760, i32 2 }
@___asan_gen_.231 = private unnamed_addr constant [22 x i8] c"qdisc_tx_busylock_key\00", align 1
@___asan_gen_.234 = private unnamed_addr constant [20 x i8] c"qdisc_xmit_lock_key\00", align 1
@___asan_gen_.237 = private unnamed_addr constant [23 x i8] c"dev_addr_list_lock_key\00", align 1
@___asan_gen_.245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 4046, i32 2 }
@___asan_gen_.248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 4047, i32 2 }
@___asan_gen_.249 = private unnamed_addr constant [28 x i8] c"macsec_netdev_addr_lock_key\00", align 1
@___asan_gen_.251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3985, i32 30 }
@___asan_gen_.254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 1134, i32 2 }
@___asan_gen_.257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.259, i32 695, i32 2 }
@___asan_gen_.259 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.259, i32 723, i32 2 }
@___asan_gen_.263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3952, i32 18 }
@___asan_gen_.264 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 3956, i32 22 }
@___asan_gen_.267 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.273 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.274 = private constant [24 x i8] c"../drivers/net/macsec.c\00", align 1
@___asan_gen_.275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.274, i32 4342, i32 2 }
@llvm.compiler.used = appending global [83 x ptr] [ptr @__UNIQUE_ID_alias512, ptr @__UNIQUE_ID_alias513, ptr @__UNIQUE_ID_description514, ptr @__UNIQUE_ID_file515, ptr @__UNIQUE_ID_license516, ptr @__exitcall_macsec_exit, ptr @__initcall__kmod_macsec__511_4372_macsec_init6, ptr @__ksymtab_macsec_pn_wrapped, ptr @macsec_add_rxsa._entry, ptr @macsec_add_rxsa._entry.28, ptr @macsec_add_rxsa._entry.31, ptr @macsec_add_rxsa._entry_ptr, ptr @macsec_add_rxsa._entry_ptr.30, ptr @macsec_add_rxsa._entry_ptr.33, ptr @macsec_add_txsa._entry, ptr @macsec_add_txsa._entry.15, ptr @macsec_add_txsa._entry.18, ptr @macsec_add_txsa._entry_ptr, ptr @macsec_add_txsa._entry_ptr.17, ptr @macsec_add_txsa._entry_ptr.20, ptr @macsec_exit, ptr @macsec_init._entry, ptr @macsec_init._entry_ptr, ptr @macsec_upd_rxsa._entry, ptr @macsec_upd_rxsa._entry_ptr, ptr @macsec_upd_txsa._entry, ptr @macsec_upd_txsa._entry_ptr, ptr @macsec_notifier, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @macsec_genl_policy, ptr @macsec_genl_ops, ptr @macsec_generation, ptr @.str.4, ptr @.str.8, ptr @.str.9, ptr @macsec_genl_rxsc_policy, ptr @create_rx_sc.__key, ptr @.str.10, ptr @.str.13, ptr @.str.14, ptr @.str.16, ptr @.str.19, ptr @macsec_genl_sa_policy, ptr @init_tx_sa.__key, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.29, ptr @.str.32, ptr @init_rx_sa.__key, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @macsec_genl_offload_policy, ptr @macsec_rtnl_policy, ptr @macsec_netdev_ops, ptr @macsec_type, ptr @macsec_dev_init.__key, ptr @.str.37, ptr @.str.38, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @macsec_newlink.qdisc_tx_busylock_key, ptr @macsec_newlink.qdisc_xmit_lock_key, ptr @macsec_newlink.dev_addr_list_lock_key, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @macsec_netdev_addr_lock_key, ptr @.str.46, ptr @.str.48, ptr @.str.50, ptr @macsec_add_dev.__key, ptr @macsec_add_dev.__key.51, ptr @.str.53, ptr @.str.54], section "llvm.metadata"
@0 = internal global [65 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_notifier to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.81 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.83 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_genl_policy to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.96 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.98 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_genl_ops to i32), i32 132, i32 192, i32 ptrtoint (ptr @___asan_gen_.99 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_generation to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.102 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.110 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_genl_rxsc_policy to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.114 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.116 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @create_rx_sc.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_add_txsa._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_add_txsa._entry.15 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_add_txsa._entry.18 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_genl_sa_policy to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_tx_sa.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_upd_txsa._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_add_rxsa._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_add_rxsa._entry.28 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_add_rxsa._entry.31 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_rx_sa.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_upd_rxsa._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_genl_offload_policy to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_rtnl_policy to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_netdev_ops to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_type to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_dev_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_newlink.qdisc_tx_busylock_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_newlink.qdisc_xmit_lock_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_newlink.dev_addr_list_lock_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_netdev_addr_lock_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_add_dev.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_add_dev.__key.51 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macsec_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @macsec_pn_wrapped(ptr nocapture noundef %secy, ptr noundef %tx_sa) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 2
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__macsec_pn_wrapped.__UNIQUE_ID_ddebug476, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macsec_pn_wrapped, %if.then.i)) #18
          to label %do.end.i [label %if.then.i], !srcloc !197

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__macsec_pn_wrapped.__UNIQUE_ID_ddebug476, ptr noundef nonnull @.str.3) #18
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %entry
  %active.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 5
  %0 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %active.i, align 4
  %protect_frames.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 8
  %1 = ptrtoint ptr %protect_frames.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %protect_frames.i, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool3.not.i = icmp eq i8 %2, 0
  br i1 %tobool3.not.i, label %do.end.i.__macsec_pn_wrapped.exit_crit_edge, label %if.then4.i

do.end.i.__macsec_pn_wrapped.exit_crit_edge:      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__macsec_pn_wrapped.exit

if.then4.i:                                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  %operational.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 7
  %3 = ptrtoint ptr %operational.i to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %operational.i, align 1
  br label %__macsec_pn_wrapped.exit

__macsec_pn_wrapped.exit:                         ; preds = %if.then4.i, %do.end.i.__macsec_pn_wrapped.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock) #18
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @macsec_exit() #1 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  %call = tail call i32 @genl_unregister_family(ptr noundef nonnull @macsec_fam) #18
  tail call void @rtnl_link_unregister(ptr noundef nonnull @macsec_link_ops) #18
  %call1 = tail call i32 @unregister_netdevice_notifier(ptr noundef nonnull @macsec_notifier) #18
  tail call void @rcu_barrier() #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @genl_unregister_family(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_link_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @unregister_netdevice_notifier(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_init() #1 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.53) #21
  %call1 = tail call i32 @register_netdevice_notifier(ptr noundef nonnull @macsec_notifier) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @rtnl_link_register(ptr noundef nonnull @macsec_link_ops) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end5, label %if.end.notifier_crit_edge

if.end.notifier_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %notifier

if.end5:                                          ; preds = %if.end
  %call6 = tail call i32 @genl_register_family(ptr noundef nonnull @macsec_fam) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %rtnl

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

rtnl:                                             ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rtnl_link_unregister(ptr noundef nonnull @macsec_link_ops) #18
  br label %notifier

notifier:                                         ; preds = %rtnl, %if.end.notifier_crit_edge
  %err.0 = phi i32 [ %call2, %if.end.notifier_crit_edge ], [ %call6, %rtnl ]
  %call10 = tail call i32 @unregister_netdevice_notifier(ptr noundef nonnull @macsec_notifier) #18
  br label %cleanup

cleanup:                                          ; preds = %notifier, %if.end5.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %notifier ], [ %call1, %entry.cleanup_crit_edge ], [ 0, %if.end5.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_dump_txsc(ptr noundef %skb, ptr nocapture noundef %cb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 9
  %3 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %skc_net.i, align 4
  %5 = getelementptr inbounds %struct.netlink_callback, ptr %cb, i32 0, i32 13
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  tail call void @rtnl_lock() #18
  %8 = load i32, ptr @macsec_generation, align 4
  %seq = getelementptr inbounds %struct.netlink_callback, ptr %cb, i32 0, i32 11
  %9 = ptrtoint ptr %seq to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %seq, align 4
  %dev_base_head = getelementptr inbounds %struct.net, ptr %4, i32 0, i32 16
  %10 = ptrtoint ptr %dev_base_head to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn37 = load ptr, ptr %dev_base_head, align 4
  %cmp.not39 = icmp eq ptr %.pn37, %dev_base_head
  br i1 %cmp.not39, label %entry.cleanup19_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup19_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup19

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn42 = phi ptr [ %.pn, %cleanup.for.body_crit_edge ], [ %.pn37, %entry.for.body_crit_edge ]
  %d.040 = phi i32 [ %inc, %cleanup.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %dev.043 = getelementptr i8, ptr %.pn42, i32 -40
  call void @__sanitizer_cov_trace_cmp4(i32 %d.040, i32 %7)
  %cmp2 = icmp slt i32 %d.040, %7
  br i1 %cmp2, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %for.body
  %priv_flags.i = getelementptr i8, ptr %.pn42, i32 72
  %11 = ptrtoint ptr %priv_flags.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %priv_flags.i, align 16
  %and.i = and i64 %12, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.ptr.i.i = getelementptr i8, ptr %.pn42, i32 2264
  %call8 = tail call fastcc i32 @dump_secy(ptr noundef %add.ptr.i.i, ptr noundef %dev.043, ptr noundef %skb, ptr noundef %cb)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.end5.cleanup19_crit_edge, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end5.cleanup19_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup19

cleanup:                                          ; preds = %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %inc = add i32 %d.040, 1
  %13 = ptrtoint ptr %.pn42 to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn = load ptr, ptr %.pn42, align 4
  %cmp.not = icmp eq ptr %.pn, %dev_base_head
  br i1 %cmp.not, label %cleanup.cleanup19_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

cleanup.cleanup19_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup19

cleanup19:                                        ; preds = %cleanup.cleanup19_crit_edge, %if.end5.cleanup19_crit_edge, %entry.cleanup19_crit_edge
  %d.0.lcssa = phi i32 [ 0, %entry.cleanup19_crit_edge ], [ %d.040, %if.end5.cleanup19_crit_edge ], [ %inc, %cleanup.cleanup19_crit_edge ]
  tail call void @rtnl_unlock() #18
  %14 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %d.0.lcssa, ptr %5, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %15 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %len, align 4
  ret i32 %16
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_add_rxsc(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tmp.i.i = alloca i64, align 8
  %tb_rxsc = alloca [6 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %tb_rxsc) #18
  %2 = getelementptr inbounds [6 x ptr], ptr %tb_rxsc, i32 0, i32 1
  %3 = getelementptr inbounds [6 x ptr], ptr %tb_rxsc, i32 0, i32 2
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %4 = call ptr @memset(ptr %tb_rxsc, i32 255, i32 24)
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %entry.cleanup55_crit_edge, label %if.end

entry.cleanup55_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 2
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end.cleanup55_crit_edge, label %if.end.i

if.end.cleanup55_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %8, align 2
  %conv.i.i.i = zext i16 %10 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_rxsc, i32 noundef 5, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_rxsc_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup55_crit_edge

if.end.i.cleanup55_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.end4:                                          ; preds = %if.end.i
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %2, align 4
  %tobool.not.i80 = icmp eq ptr %12, null
  br i1 %tobool.not.i80, label %if.end4.cleanup55_crit_edge, label %if.end.i82

if.end4.cleanup55_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.end.i82:                                       ; preds = %if.end4
  %13 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %3, align 4
  %tobool2.not.i81 = icmp eq ptr %14, null
  br i1 %tobool2.not.i81, label %if.end.i82.if.end8_crit_edge, label %if.then3.i

if.end.i82.if.end8_crit_edge:                     ; preds = %if.end.i82
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then3.i:                                       ; preds = %if.end.i82
  %add.ptr.i.i.i83 = getelementptr i8, ptr %14, i32 4
  %15 = ptrtoint ptr %add.ptr.i.i.i83 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %add.ptr.i.i.i83, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %16)
  %cmp.i = icmp ugt i8 %16, 1
  br i1 %cmp.i, label %if.then3.i.cleanup55_crit_edge, label %if.then3.i.if.end8_crit_edge

if.then3.i.if.end8_crit_edge:                     ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then3.i.cleanup55_crit_edge:                   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.end8:                                          ; preds = %if.then3.i.if.end8_crit_edge, %if.end.i82.if.end8_crit_edge
  call void @rtnl_lock() #18
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %17 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %_net.i, align 4
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx, align 4
  %add.ptr.i.i.i86 = getelementptr i8, ptr %20, i32 4
  %21 = ptrtoint ptr %add.ptr.i.i.i86 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %add.ptr.i.i.i86, align 4
  %call1.i = call ptr @__dev_get_by_index(ptr noundef %18, i32 noundef %22) #18
  %tobool.not.i87 = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i87, label %if.end8.if.then12_crit_edge, label %if.end.i88

if.end8.if.then12_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then12

if.end.i88:                                       ; preds = %if.end8
  %priv_flags.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i, i32 0, i32 15
  %23 = ptrtoint ptr %priv_flags.i.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %priv_flags.i.i, align 16
  %and.i.i = and i64 %24, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.i.not.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end.i88.if.then12_crit_edge, label %get_dev_from_nl.exit

if.end.i88.if.then12_crit_edge:                   ; preds = %if.end.i88
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then12

get_dev_from_nl.exit:                             ; preds = %if.end.i88
  %cmp.i90 = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i90, label %get_dev_from_nl.exit.if.then12_crit_edge, label %if.end14

get_dev_from_nl.exit.if.then12_crit_edge:         ; preds = %get_dev_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then12

if.then12:                                        ; preds = %get_dev_from_nl.exit.if.then12_crit_edge, %if.end.i88.if.then12_crit_edge, %if.end8.if.then12_crit_edge
  %retval.0.i89104 = phi ptr [ %call1.i, %get_dev_from_nl.exit.if.then12_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end8.if.then12_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i88.if.then12_crit_edge ]
  call void @rtnl_unlock() #18
  %25 = ptrtoint ptr %retval.0.i89104 to i32
  br label %cleanup55

if.end14:                                         ; preds = %get_dev_from_nl.exit
  %add.ptr.i.i = getelementptr i8, ptr %call1.i, i32 2304
  %26 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %2, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i) #18
  %28 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 -1, ptr %tmp.i.i, align 8, !annotation !199
  %call.i.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i.i, ptr noundef %27, i32 noundef 8) #18
  %29 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %tmp.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i) #18
  %real_dev1.i = getelementptr i8, ptr %call1.i, i32 2368
  %31 = ptrtoint ptr %real_dev1.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %real_dev1.i, align 8
  %call.i.i91 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call.i.i91, label %if.end14.macsec_data_rtnl.exit.i_crit_edge, label %land.lhs.true.i.i

if.end14.macsec_data_rtnl.exit.i_crit_edge:       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit.i

land.lhs.true.i.i:                                ; preds = %if.end14
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.macsec_data_rtnl.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.macsec_data_rtnl.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @macsec_data_rtnl.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.macsec_data_rtnl.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.macsec_data_rtnl.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rtnl.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 136, ptr noundef nonnull @.str.4) #18
  br label %macsec_data_rtnl.exit.i

macsec_data_rtnl.exit.i:                          ; preds = %if.then.i.i, %land.lhs.true2.i.i.macsec_data_rtnl.exit.i_crit_edge, %land.lhs.true.i.i.macsec_data_rtnl.exit.i_crit_edge, %if.end14.macsec_data_rtnl.exit.i_crit_edge
  %rx_handler_data.i.i = getelementptr inbounds %struct.net_device, ptr %32, i32 0, i32 95
  %33 = ptrtoint ptr %rx_handler_data.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rx_handler_data.i.i, align 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %macsec_data_rtnl.exit.i
  %.pn.in.i = phi ptr [ %34, %macsec_data_rtnl.exit.i ], [ %.pn.i, %for.body.i.for.cond.i_crit_edge ]
  %35 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %34
  br i1 %cmp.not.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %macsec.0.i = getelementptr i8, ptr %.pn.i, i32 -72
  %call6.i = call fastcc ptr @find_rx_sc_rtnl(ptr noundef %macsec.0.i, i64 noundef %30) #18
  %tobool.not.i92 = icmp eq ptr %call6.i, null
  br i1 %tobool.not.i92, label %for.body.i.for.cond.i_crit_edge, label %for.body.i.if.then21_crit_edge

for.body.i.if.then21_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then21

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %36 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %36, i32 noundef 3520, i32 noundef 56) #22
  %tobool14.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool14.not.i, label %for.end.i.if.then21_crit_edge, label %if.end17.i

for.end.i.if.then21_crit_edge:                    ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then21

if.end17.i:                                       ; preds = %for.end.i
  %call18.i = call noalias ptr @__alloc_percpu_gfp(i32 noundef 112, i32 noundef 8, i32 noundef 3264) #23
  %tobool19.not.i = icmp eq ptr %call18.i, null
  br i1 %tobool19.not.i, label %if.then35.i, label %for.cond21.preheader.i

for.cond21.preheader.i:                           ; preds = %if.end17.i
  %call22151.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %37 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call22151.i, i32 %37)
  %cmp23152.i = icmp ult i32 %call22151.i, %37
  br i1 %cmp23152.i, label %for.body24.lr.ph.i, label %for.cond21.preheader.i.if.end37.i_crit_edge

for.cond21.preheader.i.if.end37.i_crit_edge:      ; preds = %for.cond21.preheader.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end37.i

for.body24.lr.ph.i:                               ; preds = %for.cond21.preheader.i
  %38 = ptrtoint ptr %call18.i to i32
  br label %for.body24.i

for.body24.i:                                     ; preds = %for.body24.i.for.body24.i_crit_edge, %for.body24.lr.ph.i
  %call22153.i = phi i32 [ %call22151.i, %for.body24.lr.ph.i ], [ %call22.i, %for.body24.i.for.body24.i_crit_edge ]
  %arrayidx.i93 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call22153.i
  %39 = ptrtoint ptr %arrayidx.i93 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i93, align 4
  %add.i = add i32 %40, %38
  %41 = inttoptr i32 %add.i to ptr
  %syncp.i = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %41, i32 0, i32 1
  %dep_map.i.i = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %41, i32 0, i32 1, i32 0, i32 1
  call void @lockdep_init_map_type(ptr noundef %dep_map.i.i, ptr noundef nonnull @.str.10, ptr noundef nonnull @create_rx_sc.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  %42 = ptrtoint ptr %syncp.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %syncp.i, align 4
  %call22.i = call i32 @cpumask_next(i32 noundef %call22153.i, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %43 = load i32, ptr @nr_cpu_ids, align 4
  %cmp23.i = icmp ult i32 %call22.i, %43
  br i1 %cmp23.i, label %for.body24.i.for.body24.i_crit_edge, label %for.body24.i.if.end37.i_crit_edge

for.body24.i.if.end37.i_crit_edge:                ; preds = %for.body24.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end37.i

for.body24.i.for.body24.i_crit_edge:              ; preds = %for.body24.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body24.i

if.then35.i:                                      ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #20
  %stats.c.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %call7.i.i.i, i32 0, i32 4
  %44 = ptrtoint ptr %stats.c.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %stats.c.i, align 4
  call void @kfree(ptr noundef nonnull %call7.i.i.i) #18
  br label %if.then21

if.end37.i:                                       ; preds = %for.body24.i.if.end37.i_crit_edge, %for.cond21.preheader.i.if.end37.i_crit_edge
  %stats.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %call7.i.i.i, i32 0, i32 4
  %45 = ptrtoint ptr %stats.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %call18.i, ptr %stats.i, align 4
  %sci38.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %call7.i.i.i, i32 0, i32 1
  %46 = ptrtoint ptr %sci38.i to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %30, ptr %sci38.i, align 8
  %active.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %call7.i.i.i, i32 0, i32 2
  %47 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 1, ptr %active.i, align 8
  %refcnt.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %call7.i.i.i, i32 0, i32 5
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  %48 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 1, ptr %refcnt.i, align 8
  %rx_sc42.i = getelementptr i8, ptr %call1.i, i32 2364
  %49 = ptrtoint ptr %rx_sc42.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %rx_sc42.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !200
  %51 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %50, ptr %call7.i.i.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !201
  %52 = ptrtoint ptr %rx_sc42.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr %call7.i.i.i, ptr %rx_sc42.i, align 4
  %53 = ptrtoint ptr %active.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %active.i, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool122.not.i = icmp eq i8 %54, 0
  br i1 %tobool122.not.i, label %if.end37.i.create_rx_sc.exit_crit_edge, label %if.then123.i

if.end37.i.create_rx_sc.exit_crit_edge:           ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %create_rx_sc.exit

if.then123.i:                                     ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #20
  %n_rx_sc.i = getelementptr i8, ptr %call1.i, i32 2308
  %55 = ptrtoint ptr %n_rx_sc.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %n_rx_sc.i, align 4
  %inc.i = add i32 %56, 1
  store i32 %inc.i, ptr %n_rx_sc.i, align 4
  br label %create_rx_sc.exit

create_rx_sc.exit:                                ; preds = %if.then123.i, %if.end37.i.create_rx_sc.exit_crit_edge
  %cmp.i95 = icmp ugt ptr %call7.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i95, label %create_rx_sc.exit.if.then21_crit_edge, label %if.end23

create_rx_sc.exit.if.then21_crit_edge:            ; preds = %create_rx_sc.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then21

if.then21:                                        ; preds = %create_rx_sc.exit.if.then21_crit_edge, %if.then35.i, %for.end.i.if.then21_crit_edge, %for.body.i.if.then21_crit_edge
  %retval.0.i94107 = phi ptr [ %call7.i.i.i, %create_rx_sc.exit.if.then21_crit_edge ], [ inttoptr (i32 -12 to ptr), %for.end.i.if.then21_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.then35.i ], [ inttoptr (i32 -17 to ptr), %for.body.i.if.then21_crit_edge ]
  call void @rtnl_unlock() #18
  %57 = ptrtoint ptr %retval.0.i94107 to i32
  br label %cleanup55

if.end23:                                         ; preds = %create_rx_sc.exit
  %58 = ptrtoint ptr %active.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %active.i, align 8, !range !198
  %60 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %3, align 4
  %tobool26.not = icmp eq ptr %61, null
  br i1 %tobool26.not, label %if.end23.if.end34_crit_edge, label %if.then27

if.end23.if.end34_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end34

if.then27:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i96 = getelementptr i8, ptr %61, i32 4
  %62 = ptrtoint ptr %add.ptr.i.i96 to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %add.ptr.i.i96, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool30 = icmp ne i8 %63, 0
  %frombool33 = zext i1 %tobool30 to i8
  %64 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %frombool33, ptr %active.i, align 8
  br label %if.end34

if.end34:                                         ; preds = %if.then27, %if.end23.if.end34_crit_edge
  %offload.i = getelementptr i8, ptr %call1.i, i32 2388
  %65 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %66, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then37, label %if.end34.if.end50_crit_edge

if.end34.if.end50_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end50

if.then37:                                        ; preds = %if.end34
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %67 = call ptr @memset(ptr %ctx, i32 255, i32 160)
  %call39 = call fastcc ptr @macsec_get_ops(ptr noundef %add.ptr.i.i, ptr noundef nonnull %ctx)
  %tobool40.not = icmp eq ptr %call39, null
  br i1 %tobool40.not, label %if.then37.cleanup51_crit_edge, label %if.end42

if.then37.cleanup51_crit_edge:                    ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup51

if.end42:                                         ; preds = %if.then37
  %rx_sc43 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 3
  %68 = ptrtoint ptr %rx_sc43 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call7.i.i.i, ptr %rx_sc43, align 4
  %secy44 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %69 = ptrtoint ptr %secy44 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %add.ptr.i.i, ptr %secy44, align 4
  %mdo_add_rxsc = getelementptr inbounds %struct.macsec_ops, ptr %call39, i32 0, i32 5
  %70 = ptrtoint ptr %mdo_add_rxsc to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %mdo_add_rxsc, align 4
  %call45 = call fastcc i32 @macsec_offload(ptr noundef %71, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %cleanup, label %if.end42.cleanup51_crit_edge

if.end42.cleanup51_crit_edge:                     ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup51

cleanup:                                          ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end50

if.end50:                                         ; preds = %cleanup, %if.end34.if.end50_crit_edge
  call void @rtnl_unlock() #18
  br label %cleanup55

cleanup51:                                        ; preds = %if.end42.cleanup51_crit_edge, %if.then37.cleanup51_crit_edge
  %ret.0.ph = phi i32 [ %call45, %if.end42.cleanup51_crit_edge ], [ -95, %if.then37.cleanup51_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  %72 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %72)
  store i8 %59, ptr %active.i, align 8
  call void @rtnl_unlock() #18
  br label %cleanup55

cleanup55:                                        ; preds = %cleanup51, %if.end50, %if.then21, %if.then12, %if.then3.i.cleanup55_crit_edge, %if.end4.cleanup55_crit_edge, %if.end.i.cleanup55_crit_edge, %if.end.cleanup55_crit_edge, %entry.cleanup55_crit_edge
  %retval.0 = phi i32 [ %25, %if.then12 ], [ %57, %if.then21 ], [ %ret.0.ph, %cleanup51 ], [ 0, %if.end50 ], [ -22, %entry.cleanup55_crit_edge ], [ -22, %if.end.cleanup55_crit_edge ], [ -22, %if.end.i.cleanup55_crit_edge ], [ -22, %if.end4.cleanup55_crit_edge ], [ -22, %if.then3.i.cleanup55_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %tb_rxsc) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_del_rxsc(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tmp.i.i = alloca i64, align 8
  %tb_rxsc = alloca [6 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %tb_rxsc) #18
  %2 = getelementptr inbounds [6 x ptr], ptr %tb_rxsc, i32 0, i32 1
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %3 = call ptr @memset(ptr %tb_rxsc, i32 255, i32 24)
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup41_crit_edge, label %if.end

entry.cleanup41_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup41

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 2
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end.cleanup41_crit_edge, label %if.end.i

if.end.cleanup41_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup41

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %7, i32 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %7, align 2
  %conv.i.i.i = zext i16 %9 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_rxsc, i32 noundef 5, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_rxsc_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup41_crit_edge

if.end.i.cleanup41_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup41

if.end4:                                          ; preds = %if.end.i
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %2, align 4
  %tobool6.not = icmp eq ptr %11, null
  br i1 %tobool6.not, label %if.end4.cleanup41_crit_edge, label %if.end8

if.end4.cleanup41_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup41

if.end8:                                          ; preds = %if.end4
  call void @rtnl_lock() #18
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %12 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %_net.i, align 4
  %14 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %attrs1, align 4
  %arrayidx.i61 = getelementptr ptr, ptr %15, i32 1
  %16 = ptrtoint ptr %arrayidx.i61 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx.i61, align 4
  %add.ptr.i.i.i62 = getelementptr i8, ptr %17, i32 4
  %18 = ptrtoint ptr %add.ptr.i.i.i62 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %add.ptr.i.i.i62, align 4
  %call1.i = call ptr @__dev_get_by_index(ptr noundef %13, i32 noundef %19) #18
  %tobool.not.i63 = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i63, label %if.end8.if.then13_crit_edge, label %if.end.i64

if.end8.if.then13_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.end.i64:                                       ; preds = %if.end8
  %priv_flags.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i, i32 0, i32 15
  %20 = ptrtoint ptr %priv_flags.i.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %priv_flags.i.i, align 16
  %and.i.i = and i64 %21, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.i.not.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end.i64.if.then13_crit_edge, label %get_dev_from_nl.exit

if.end.i64.if.then13_crit_edge:                   ; preds = %if.end.i64
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

get_dev_from_nl.exit:                             ; preds = %if.end.i64
  %cmp.i = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %get_dev_from_nl.exit.if.then13_crit_edge, label %if.end15

get_dev_from_nl.exit.if.then13_crit_edge:         ; preds = %get_dev_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.then13:                                        ; preds = %get_dev_from_nl.exit.if.then13_crit_edge, %if.end.i64.if.then13_crit_edge, %if.end8.if.then13_crit_edge
  %retval.0.i6578 = phi ptr [ %call1.i, %get_dev_from_nl.exit.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end8.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i64.if.then13_crit_edge ]
  call void @rtnl_unlock() #18
  %22 = ptrtoint ptr %retval.0.i6578 to i32
  br label %cleanup41

if.end15:                                         ; preds = %get_dev_from_nl.exit
  %add.ptr.i.i = getelementptr i8, ptr %call1.i, i32 2304
  %23 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %2, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i) #18
  %25 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 -1, ptr %tmp.i.i, align 8, !annotation !199
  %call.i.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i.i, ptr noundef %24, i32 noundef 8) #18
  %26 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %tmp.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i) #18
  %rx_sc1.i = getelementptr i8, ptr %call1.i, i32 2364
  %call.i = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call.i, label %if.end15.do.end.i_crit_edge, label %land.lhs.true.i

if.end15.do.end.i_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true.i:                                  ; preds = %if.end15
  %call2.i = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i66 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i66, label %land.lhs.true.i.do.end.i_crit_edge, label %land.lhs.true3.i

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %.b73.i = load i1, ptr @del_rx_sc.__warned, align 1
  br i1 %.b73.i, label %land.lhs.true3.i.do.end.i_crit_edge, label %if.then.i

land.lhs.true3.i.do.end.i_crit_edge:              ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

if.then.i:                                        ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @del_rx_sc.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1379, ptr noundef nonnull @.str.4) #18
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %land.lhs.true3.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge, %if.end15.do.end.i_crit_edge
  %28 = ptrtoint ptr %rx_sc1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %rx_sc.077.i = load ptr, ptr %rx_sc1.i, align 4
  %tobool5.not78.i = icmp eq ptr %rx_sc.077.i, null
  br i1 %tobool5.not78.i, label %do.end.i.if.then22_crit_edge, label %for.body.i.preheader

do.end.i.if.then22_crit_edge:                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then22

for.body.i.preheader:                             ; preds = %do.end.i
  %sci6.i93 = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc.077.i, i32 0, i32 1
  %29 = ptrtoint ptr %sci6.i93 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %sci6.i93, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %30, i64 %27)
  %cmp.i6794 = icmp eq i64 %30, %27
  br i1 %cmp.i6794, label %for.body.i.preheader.if.then7.i_crit_edge, label %for.body.i.preheader.for.inc.i_crit_edge

for.body.i.preheader.for.inc.i_crit_edge:         ; preds = %for.body.i.preheader
  br label %for.inc.i

for.body.i.preheader.if.then7.i_crit_edge:        ; preds = %for.body.i.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then7.i

for.body.i:                                       ; preds = %do.end60.i
  %sci6.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc.0.i, i32 0, i32 1
  %31 = ptrtoint ptr %sci6.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %sci6.i, align 8
  %cmp.i67 = icmp eq i64 %32, %27
  br i1 %cmp.i67, label %for.body.i.if.then7.i_crit_edge, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.i

for.body.i.if.then7.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then7.i

if.then7.i:                                       ; preds = %for.body.i.if.then7.i_crit_edge, %for.body.i.preheader.if.then7.i_crit_edge
  %rx_sc.080.i.lcssa = phi ptr [ %rx_sc.077.i, %for.body.i.preheader.if.then7.i_crit_edge ], [ %rx_sc.0.i, %for.body.i.if.then7.i_crit_edge ]
  %rx_scp.079.i.lcssa = phi ptr [ %rx_sc1.i, %for.body.i.preheader.if.then7.i_crit_edge ], [ %rx_sc.080.i95, %for.body.i.if.then7.i_crit_edge ]
  %active.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc.080.i.lcssa, i32 0, i32 2
  %33 = ptrtoint ptr %active.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %active.i, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool8.not.i = icmp eq i8 %34, 0
  br i1 %tobool8.not.i, label %if.then7.i.if.end23_crit_edge, label %if.then9.i

if.then7.i.if.end23_crit_edge:                    ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end23

if.then9.i:                                       ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #20
  %n_rx_sc.i = getelementptr i8, ptr %call1.i, i32 2308
  %35 = ptrtoint ptr %n_rx_sc.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %n_rx_sc.i, align 4
  %dec.i = add i32 %36, -1
  store i32 %dec.i, ptr %n_rx_sc.i, align 4
  br label %if.end23

for.inc.i:                                        ; preds = %for.body.i.for.inc.i_crit_edge, %for.body.i.preheader.for.inc.i_crit_edge
  %rx_sc.080.i95 = phi ptr [ %rx_sc.0.i, %for.body.i.for.inc.i_crit_edge ], [ %rx_sc.077.i, %for.body.i.preheader.for.inc.i_crit_edge ]
  %call51.i = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call51.i, label %for.inc.i.do.end60.i_crit_edge, label %land.lhs.true52.i

for.inc.i.do.end60.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end60.i

land.lhs.true52.i:                                ; preds = %for.inc.i
  %call53.i = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53.i)
  %tobool54.not.i = icmp eq i32 %call53.i, 0
  br i1 %tobool54.not.i, label %land.lhs.true52.i.do.end60.i_crit_edge, label %land.lhs.true55.i

land.lhs.true52.i.do.end60.i_crit_edge:           ; preds = %land.lhs.true52.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end60.i

land.lhs.true55.i:                                ; preds = %land.lhs.true52.i
  %.b7172.i = load i1, ptr @del_rx_sc.__warned.12, align 1
  br i1 %.b7172.i, label %land.lhs.true55.i.do.end60.i_crit_edge, label %if.then57.i

land.lhs.true55.i.do.end60.i_crit_edge:           ; preds = %land.lhs.true55.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end60.i

if.then57.i:                                      ; preds = %land.lhs.true55.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @del_rx_sc.__warned.12, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1381, ptr noundef nonnull @.str.4) #18
  br label %do.end60.i

do.end60.i:                                       ; preds = %if.then57.i, %land.lhs.true55.i.do.end60.i_crit_edge, %land.lhs.true52.i.do.end60.i_crit_edge, %for.inc.i.do.end60.i_crit_edge
  %37 = ptrtoint ptr %rx_sc.080.i95 to i32
  call void @__asan_load4_noabort(i32 %37)
  %rx_sc.0.i = load ptr, ptr %rx_sc.080.i95, align 4
  %tobool5.not.i = icmp eq ptr %rx_sc.0.i, null
  br i1 %tobool5.not.i, label %do.end60.i.if.then22_crit_edge, label %for.body.i

do.end60.i.if.then22_crit_edge:                   ; preds = %do.end60.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then22

if.then22:                                        ; preds = %do.end60.i.if.then22_crit_edge, %do.end.i.if.then22_crit_edge
  call void @rtnl_unlock() #18
  br label %cleanup41

if.end23:                                         ; preds = %if.then9.i, %if.then7.i.if.end23_crit_edge
  %38 = ptrtoint ptr %rx_sc.080.i.lcssa to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %rx_sc.080.i.lcssa, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !202
  %40 = ptrtoint ptr %rx_scp.079.i.lcssa to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %39, ptr %rx_scp.079.i.lcssa, align 4
  %offload.i = getelementptr i8, ptr %call1.i, i32 2388
  %41 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %42, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then26, label %if.end23.if.end39_crit_edge

if.end23.if.end39_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end39

if.then26:                                        ; preds = %if.end23
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %43 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %offload.i, align 4
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then26.cleanup40_crit_edge, label %lor.lhs.false.i.i

if.then26.cleanup40_crit_edge:                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

lor.lhs.false.i.i:                                ; preds = %if.then26
  %real_dev.i.i = getelementptr i8, ptr %call1.i, i32 2368
  %45 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %46, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.cleanup40_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.cleanup40_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %47 = zext i32 %44 to i64
  call void @__sanitizer_cov_trace_switch(i64 %47, ptr @__sancov_gen_cov_switch_values)
  switch i32 %44, label %if.end.i.i.cleanup40_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.cleanup40_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 145
  %48 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %49, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.cleanup40_crit_edge, label %land.rhs.i.i

if.then2.i.i.cleanup40_crit_edge:                 ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %49, i32 0, i32 42
  %50 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %51, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.cleanup40_crit_edge, label %if.end.i71

land.rhs.i.i.cleanup40_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 23
  %52 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %features.i.i, align 16
  %and.i.i70 = and i64 %53, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i70)
  %tobool11.not.i.i = icmp eq i64 %and.i.i70, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.cleanup40_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.cleanup40_crit_edge:                 ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 151
  %54 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %55, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.cleanup40_crit_edge, label %if.end.thread.i

macsec_check_offload.exit.i.cleanup40_crit_edge:  ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.end.i71:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %56 = getelementptr inbounds i8, ptr %ctx, i32 16
  %57 = call ptr @memset(ptr %56, i32 0, i32 144)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %58 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 1, ptr %offload1.i.i, align 4
  %59 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %real_dev.i.i, align 8
  %phydev.i8.i = getelementptr inbounds %struct.net_device, ptr %60, i32 0, i32 145
  %61 = ptrtoint ptr %phydev.i8.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %phydev.i8.i, align 16
  %63 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %62, ptr %ctx, align 4
  %64 = load ptr, ptr %real_dev.i.i, align 8
  %phydev11.i.i = getelementptr inbounds %struct.net_device, ptr %64, i32 0, i32 145
  %65 = ptrtoint ptr %phydev11.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %phydev11.i.i, align 16
  %macsec_ops.i9.i = getelementptr inbounds %struct.phy_device, ptr %66, i32 0, i32 42
  br label %macsec_get_ops.exit

if.end.thread.i:                                  ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  %67 = getelementptr inbounds i8, ptr %ctx, i32 16
  %68 = call ptr @memset(ptr %67, i32 0, i32 144)
  %offload1.i16.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %69 = ptrtoint ptr %offload1.i16.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 2, ptr %offload1.i16.i, align 4
  %70 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %real_dev.i.i, align 8
  %72 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %71, ptr %ctx, align 4
  %73 = load ptr, ptr %real_dev.i.i, align 8
  %macsec_ops14.i11.i = getelementptr inbounds %struct.net_device, ptr %73, i32 0, i32 151
  br label %macsec_get_ops.exit

macsec_get_ops.exit:                              ; preds = %if.end.thread.i, %if.end.i71
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i9.i, %if.end.i71 ], [ %macsec_ops14.i11.i, %if.end.thread.i ]
  %74 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool29.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool29.not, label %macsec_get_ops.exit.cleanup40_crit_edge, label %if.end31

macsec_get_ops.exit.cleanup40_crit_edge:          ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.end31:                                         ; preds = %macsec_get_ops.exit
  %rx_sc32 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 3
  %75 = ptrtoint ptr %rx_sc32 to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %rx_sc.080.i.lcssa, ptr %rx_sc32, align 4
  %secy33 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %76 = ptrtoint ptr %secy33 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %add.ptr.i.i, ptr %secy33, align 4
  %mdo_del_rxsc = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 7
  %77 = ptrtoint ptr %mdo_del_rxsc to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %mdo_del_rxsc, align 4
  %call34 = call fastcc i32 @macsec_offload(ptr noundef %78, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %cleanup, label %if.end31.cleanup40_crit_edge

if.end31.cleanup40_crit_edge:                     ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

cleanup:                                          ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end39

if.end39:                                         ; preds = %cleanup, %if.end23.if.end39_crit_edge
  call fastcc void @free_rx_sc(ptr noundef nonnull %rx_sc.080.i.lcssa)
  call void @rtnl_unlock() #18
  br label %cleanup41

cleanup40:                                        ; preds = %if.end31.cleanup40_crit_edge, %macsec_get_ops.exit.cleanup40_crit_edge, %macsec_check_offload.exit.i.cleanup40_crit_edge, %if.then9.i.i.cleanup40_crit_edge, %land.rhs.i.i.cleanup40_crit_edge, %if.then2.i.i.cleanup40_crit_edge, %if.end.i.i.cleanup40_crit_edge, %lor.lhs.false.i.i.cleanup40_crit_edge, %if.then26.cleanup40_crit_edge
  %ret.0.ph = phi i32 [ %call34, %if.end31.cleanup40_crit_edge ], [ -95, %macsec_get_ops.exit.cleanup40_crit_edge ], [ -95, %macsec_check_offload.exit.i.cleanup40_crit_edge ], [ -95, %land.rhs.i.i.cleanup40_crit_edge ], [ -95, %lor.lhs.false.i.i.cleanup40_crit_edge ], [ -95, %if.then26.cleanup40_crit_edge ], [ -95, %if.then2.i.i.cleanup40_crit_edge ], [ -95, %if.then9.i.i.cleanup40_crit_edge ], [ -95, %if.end.i.i.cleanup40_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  call void @rtnl_unlock() #18
  br label %cleanup41

cleanup41:                                        ; preds = %cleanup40, %if.end39, %if.then22, %if.then13, %if.end4.cleanup41_crit_edge, %if.end.i.cleanup41_crit_edge, %if.end.cleanup41_crit_edge, %entry.cleanup41_crit_edge
  %retval.0 = phi i32 [ %22, %if.then13 ], [ %ret.0.ph, %cleanup40 ], [ 0, %if.end39 ], [ -19, %if.then22 ], [ -22, %entry.cleanup41_crit_edge ], [ -22, %if.end4.cleanup41_crit_edge ], [ -22, %if.end.cleanup41_crit_edge ], [ -22, %if.end.i.cleanup41_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %tb_rxsc) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_upd_rxsc(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tmp.i.i.i = alloca i64, align 8
  %tb_rxsc = alloca [6 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %tb_rxsc) #18
  %2 = getelementptr inbounds [6 x ptr], ptr %tb_rxsc, i32 0, i32 1
  %3 = getelementptr inbounds [6 x ptr], ptr %tb_rxsc, i32 0, i32 2
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %4 = call ptr @memset(ptr %tb_rxsc, i32 255, i32 24)
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %entry.cleanup60_crit_edge, label %if.end

entry.cleanup60_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup60

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 2
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end.cleanup60_crit_edge, label %if.end.i

if.end.cleanup60_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup60

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %8, align 2
  %conv.i.i.i = zext i16 %10 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_rxsc, i32 noundef 5, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_rxsc_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup60_crit_edge

if.end.i.cleanup60_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup60

if.end4:                                          ; preds = %if.end.i
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %2, align 4
  %tobool.not.i83 = icmp eq ptr %12, null
  br i1 %tobool.not.i83, label %if.end4.cleanup60_crit_edge, label %if.end.i85

if.end4.cleanup60_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup60

if.end.i85:                                       ; preds = %if.end4
  %13 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %3, align 4
  %tobool2.not.i84 = icmp eq ptr %14, null
  br i1 %tobool2.not.i84, label %if.end.i85.if.end8_crit_edge, label %if.then3.i

if.end.i85.if.end8_crit_edge:                     ; preds = %if.end.i85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then3.i:                                       ; preds = %if.end.i85
  %add.ptr.i.i.i86 = getelementptr i8, ptr %14, i32 4
  %15 = ptrtoint ptr %add.ptr.i.i.i86 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %add.ptr.i.i.i86, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %16)
  %cmp.i = icmp ugt i8 %16, 1
  br i1 %cmp.i, label %if.then3.i.cleanup60_crit_edge, label %if.then3.i.if.end8_crit_edge

if.then3.i.if.end8_crit_edge:                     ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then3.i.cleanup60_crit_edge:                   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup60

if.end8:                                          ; preds = %if.then3.i.if.end8_crit_edge, %if.end.i85.if.end8_crit_edge
  call void @rtnl_lock() #18
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %17 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %_net.i, align 4
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %20, i32 4
  %21 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %call1.i.i = call ptr @__dev_get_by_index(ptr noundef %18, i32 noundef %22) #18
  %tobool.not.i.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i.i, label %if.end8.if.then13_crit_edge, label %if.end.i.i

if.end8.if.then13_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.end.i.i:                                       ; preds = %if.end8
  %priv_flags.i.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i.i, i32 0, i32 15
  %23 = ptrtoint ptr %priv_flags.i.i.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %priv_flags.i.i.i, align 16
  %and.i.i.i = and i64 %24, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i.i.if.then13_crit_edge, label %get_dev_from_nl.exit.i

if.end.i.i.if.then13_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

get_dev_from_nl.exit.i:                           ; preds = %if.end.i.i
  %cmp.i.i = icmp ugt ptr %call1.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge, label %if.end.i91

get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge: ; preds = %get_dev_from_nl.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_rxsc_from_nl.exit

if.end.i91:                                       ; preds = %get_dev_from_nl.exit.i
  %25 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %2, align 4
  %tobool.not.i90 = icmp eq ptr %26, null
  br i1 %tobool.not.i90, label %if.end.i91.if.then13_crit_edge, label %if.end7.i

if.end.i91.if.then13_crit_edge:                   ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.end7.i:                                        ; preds = %if.end.i91
  %add.ptr.i.i.i88 = getelementptr i8, ptr %call1.i.i, i32 2304
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i.i) #18
  %27 = ptrtoint ptr %tmp.i.i.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 -1, ptr %tmp.i.i.i, align 8, !annotation !199
  %call.i.i.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i.i.i, ptr noundef nonnull %26, i32 noundef 8) #18
  %28 = ptrtoint ptr %tmp.i.i.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %tmp.i.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i.i) #18
  %call10.i = call fastcc ptr @find_rx_sc_rtnl(ptr noundef %add.ptr.i.i.i88, i64 noundef %29) #18
  %tobool11.not.i = icmp eq ptr %call10.i, null
  br i1 %tobool11.not.i, label %if.end7.i.if.then13_crit_edge, label %if.end7.i.get_rxsc_from_nl.exit_crit_edge

if.end7.i.get_rxsc_from_nl.exit_crit_edge:        ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_rxsc_from_nl.exit

if.end7.i.if.then13_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

get_rxsc_from_nl.exit:                            ; preds = %if.end7.i.get_rxsc_from_nl.exit_crit_edge, %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge
  %dev.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge ], [ %call1.i.i, %if.end7.i.get_rxsc_from_nl.exit_crit_edge ]
  %secy.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge ], [ %add.ptr.i.i.i88, %if.end7.i.get_rxsc_from_nl.exit_crit_edge ]
  %retval.0.i92 = phi ptr [ %call1.i.i, %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge ], [ %call10.i, %if.end7.i.get_rxsc_from_nl.exit_crit_edge ]
  %cmp.i93 = icmp ugt ptr %retval.0.i92, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i93, label %get_rxsc_from_nl.exit.if.then13_crit_edge, label %if.end15

get_rxsc_from_nl.exit.if.then13_crit_edge:        ; preds = %get_rxsc_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.then13:                                        ; preds = %get_rxsc_from_nl.exit.if.then13_crit_edge, %if.end7.i.if.then13_crit_edge, %if.end.i91.if.then13_crit_edge, %if.end.i.i.if.then13_crit_edge, %if.end8.if.then13_crit_edge
  %retval.0.i92117 = phi ptr [ %retval.0.i92, %get_rxsc_from_nl.exit.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i.i.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end8.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end7.i.if.then13_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i91.if.then13_crit_edge ]
  call void @rtnl_unlock() #18
  %30 = ptrtoint ptr %retval.0.i92117 to i32
  br label %cleanup60

if.end15:                                         ; preds = %get_rxsc_from_nl.exit
  %active = getelementptr inbounds %struct.macsec_rx_sc, ptr %retval.0.i92, i32 0, i32 2
  %31 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %active, align 8, !range !198
  %n_rx_sc = getelementptr inbounds %struct.macsec_secy, ptr %secy.0, i32 0, i32 1
  %33 = ptrtoint ptr %n_rx_sc to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %n_rx_sc, align 4
  %35 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %3, align 4
  %tobool18.not = icmp eq ptr %36, null
  br i1 %tobool18.not, label %if.end15.if.end38_crit_edge, label %if.then19

if.end15.if.end38_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end38

if.then19:                                        ; preds = %if.end15
  %add.ptr.i.i = getelementptr i8, ptr %36, i32 4
  %37 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %add.ptr.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %38)
  %tobool22 = icmp ne i8 %38, 0
  %frombool24 = zext i1 %tobool22 to i8
  call void @__sanitizer_cov_trace_cmp1(i8 %32, i8 %frombool24)
  %cmp.not = icmp eq i8 %32, %frombool24
  br i1 %cmp.not, label %if.then19.if.end34_crit_edge, label %if.then30

if.then19.if.end34_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end34

if.then30:                                        ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #20
  %cond = select i1 %tobool22, i32 1, i32 -1
  %add = add i32 %cond, %34
  %39 = ptrtoint ptr %n_rx_sc to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %add, ptr %n_rx_sc, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then30, %if.then19.if.end34_crit_edge
  %40 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %frombool24, ptr %active, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.end34, %if.end15.if.end38_crit_edge
  %offload.i = getelementptr i8, ptr %dev.0, i32 2388
  %41 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %42, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then41, label %if.end38.if.end54_crit_edge

if.end38.if.end54_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end54

if.then41:                                        ; preds = %if.end38
  %add.ptr.i = getelementptr i8, ptr %dev.0, i32 2304
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %43 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %offload.i, align 4
  %tobool.not.i.i96 = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not.i.i96, label %if.then41.cleanup55_crit_edge, label %lor.lhs.false.i.i

if.then41.cleanup55_crit_edge:                    ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

lor.lhs.false.i.i:                                ; preds = %if.then41
  %real_dev.i.i = getelementptr i8, ptr %dev.0, i32 2368
  %45 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %46, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.cleanup55_crit_edge, label %if.end.i.i97

lor.lhs.false.i.i.cleanup55_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.end.i.i97:                                     ; preds = %lor.lhs.false.i.i
  %47 = zext i32 %44 to i64
  call void @__sanitizer_cov_trace_switch(i64 %47, ptr @__sancov_gen_cov_switch_values.55)
  switch i32 %44, label %if.end.i.i97.cleanup55_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i97.cleanup55_crit_edge:                 ; preds = %if.end.i.i97
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.then2.i.i:                                     ; preds = %if.end.i.i97
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 145
  %48 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %49, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.cleanup55_crit_edge, label %land.rhs.i.i

if.then2.i.i.cleanup55_crit_edge:                 ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %49, i32 0, i32 42
  %50 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %51, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.cleanup55_crit_edge, label %if.end.i98

land.rhs.i.i.cleanup55_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.then9.i.i:                                     ; preds = %if.end.i.i97
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 23
  %52 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %53, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.cleanup55_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.cleanup55_crit_edge:                 ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %46, i32 0, i32 151
  %54 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %55, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.cleanup55_crit_edge, label %if.end.thread.i

macsec_check_offload.exit.i.cleanup55_crit_edge:  ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.end.i98:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %56 = getelementptr inbounds i8, ptr %ctx, i32 16
  %57 = call ptr @memset(ptr %56, i32 0, i32 144)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %58 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 1, ptr %offload1.i.i, align 4
  %59 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %real_dev.i.i, align 8
  %phydev.i8.i = getelementptr inbounds %struct.net_device, ptr %60, i32 0, i32 145
  %61 = ptrtoint ptr %phydev.i8.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %phydev.i8.i, align 16
  %63 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %62, ptr %ctx, align 4
  %64 = load ptr, ptr %real_dev.i.i, align 8
  %phydev11.i.i = getelementptr inbounds %struct.net_device, ptr %64, i32 0, i32 145
  %65 = ptrtoint ptr %phydev11.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %phydev11.i.i, align 16
  %macsec_ops.i9.i = getelementptr inbounds %struct.phy_device, ptr %66, i32 0, i32 42
  br label %macsec_get_ops.exit

if.end.thread.i:                                  ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  %67 = getelementptr inbounds i8, ptr %ctx, i32 16
  %68 = call ptr @memset(ptr %67, i32 0, i32 144)
  %offload1.i16.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %69 = ptrtoint ptr %offload1.i16.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 2, ptr %offload1.i16.i, align 4
  %70 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %real_dev.i.i, align 8
  %72 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %71, ptr %ctx, align 4
  %73 = load ptr, ptr %real_dev.i.i, align 8
  %macsec_ops14.i11.i = getelementptr inbounds %struct.net_device, ptr %73, i32 0, i32 151
  br label %macsec_get_ops.exit

macsec_get_ops.exit:                              ; preds = %if.end.thread.i, %if.end.i98
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i9.i, %if.end.i98 ], [ %macsec_ops14.i11.i, %if.end.thread.i ]
  %74 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool44.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool44.not, label %macsec_get_ops.exit.cleanup55_crit_edge, label %if.end46

macsec_get_ops.exit.cleanup55_crit_edge:          ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

if.end46:                                         ; preds = %macsec_get_ops.exit
  %rx_sc47 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 3
  %75 = ptrtoint ptr %rx_sc47 to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %retval.0.i92, ptr %rx_sc47, align 4
  %secy48 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %76 = ptrtoint ptr %secy48 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %secy.0, ptr %secy48, align 4
  %mdo_upd_rxsc = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 6
  %77 = ptrtoint ptr %mdo_upd_rxsc to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %mdo_upd_rxsc, align 4
  %tobool.not.i100 = icmp eq ptr %78, null
  br i1 %tobool.not.i100, label %if.end46.cleanup_crit_edge, label %if.end.i103, !prof !203

if.end46.cleanup_crit_edge:                       ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.i103:                                      ; preds = %if.end46
  %offload.i101 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %79 = ptrtoint ptr %offload.i101 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %offload.i101, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %80)
  %cmp.i102 = icmp eq i32 %80, 1
  br i1 %cmp.i102, label %if.then4.i, label %if.end.i103.if.end5.i_crit_edge

if.end.i103.if.end5.i_crit_edge:                  ; preds = %if.end.i103
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i103
  call void @__sanitizer_cov_trace_pc() #20
  %81 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %82, i32 0, i32 32
  call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i103.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %83 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %78(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i104, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i104:                                     ; preds = %if.end5.i
  %84 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %84)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %78(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i104.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i104.phy_unlock.i_crit_edge:              ; preds = %if.end8.i104
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i104
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i104.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %ret.0.i = phi i32 [ %call.i, %if.end5.i.phy_unlock.i_crit_edge ], [ %call13.i, %do.end.i ], [ 0, %if.end8.i104.phy_unlock.i_crit_edge ]
  %85 = ptrtoint ptr %offload.i101 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %offload.i101, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %86)
  %cmp45.i = icmp eq i32 %86, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.macsec_offload.exit_crit_edge

phy_unlock.i.macsec_offload.exit_crit_edge:       ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_offload.exit

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %87 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %88, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %macsec_offload.exit

macsec_offload.exit:                              ; preds = %if.then46.i, %phy_unlock.i.macsec_offload.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool50.not = icmp eq i32 %ret.0.i, 0
  br i1 %tobool50.not, label %macsec_offload.exit.cleanup_crit_edge, label %macsec_offload.exit.cleanup55_crit_edge

macsec_offload.exit.cleanup55_crit_edge:          ; preds = %macsec_offload.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup55

macsec_offload.exit.cleanup_crit_edge:            ; preds = %macsec_offload.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

cleanup:                                          ; preds = %macsec_offload.exit.cleanup_crit_edge, %if.end46.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end54

if.end54:                                         ; preds = %cleanup, %if.end38.if.end54_crit_edge
  call void @rtnl_unlock() #18
  br label %cleanup60

cleanup55:                                        ; preds = %macsec_offload.exit.cleanup55_crit_edge, %macsec_get_ops.exit.cleanup55_crit_edge, %macsec_check_offload.exit.i.cleanup55_crit_edge, %if.then9.i.i.cleanup55_crit_edge, %land.rhs.i.i.cleanup55_crit_edge, %if.then2.i.i.cleanup55_crit_edge, %if.end.i.i97.cleanup55_crit_edge, %lor.lhs.false.i.i.cleanup55_crit_edge, %if.then41.cleanup55_crit_edge
  %ret.0.ph = phi i32 [ %ret.0.i, %macsec_offload.exit.cleanup55_crit_edge ], [ -95, %macsec_get_ops.exit.cleanup55_crit_edge ], [ -95, %macsec_check_offload.exit.i.cleanup55_crit_edge ], [ -95, %land.rhs.i.i.cleanup55_crit_edge ], [ -95, %lor.lhs.false.i.i.cleanup55_crit_edge ], [ -95, %if.then41.cleanup55_crit_edge ], [ -95, %if.then2.i.i.cleanup55_crit_edge ], [ -95, %if.then9.i.i.cleanup55_crit_edge ], [ -95, %if.end.i.i97.cleanup55_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  %89 = ptrtoint ptr %n_rx_sc to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %34, ptr %n_rx_sc, align 4
  %90 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %90)
  store i8 %32, ptr %active, align 8
  call void @rtnl_unlock() #18
  br label %cleanup60

cleanup60:                                        ; preds = %cleanup55, %if.end54, %if.then13, %if.then3.i.cleanup60_crit_edge, %if.end4.cleanup60_crit_edge, %if.end.i.cleanup60_crit_edge, %if.end.cleanup60_crit_edge, %entry.cleanup60_crit_edge
  %retval.0 = phi i32 [ %30, %if.then13 ], [ %ret.0.ph, %cleanup55 ], [ 0, %if.end54 ], [ -22, %entry.cleanup60_crit_edge ], [ -22, %if.end.cleanup60_crit_edge ], [ -22, %if.end.i.cleanup60_crit_edge ], [ -22, %if.end4.cleanup60_crit_edge ], [ -22, %if.then3.i.cleanup60_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %tb_rxsc) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_add_txsa(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tmp.i = alloca i64, align 8
  %tb_sa = alloca [10 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %tb_sa) #18
  %2 = call ptr @memset(ptr %tb_sa, i32 255, i32 40)
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.cleanup207_crit_edge, label %if.end

entry.cleanup207_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 3
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end.cleanup207_crit_edge, label %if.end.i

if.end.cleanup207_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %6, align 2
  %conv.i.i.i = zext i16 %8 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_sa, i32 noundef 9, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_sa_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup207_crit_edge

if.end.i.cleanup207_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

if.end4:                                          ; preds = %if.end.i
  %arrayidx.i262 = getelementptr inbounds ptr, ptr %tb_sa, i32 1
  %9 = ptrtoint ptr %arrayidx.i262 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i262, align 4
  %tobool.not.i263 = icmp eq ptr %10, null
  br i1 %tobool.not.i263, label %if.end4.cleanup207_crit_edge, label %lor.lhs.false.i

if.end4.cleanup207_crit_edge:                     ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

lor.lhs.false.i:                                  ; preds = %if.end4
  %arrayidx1.i = getelementptr inbounds ptr, ptr %tb_sa, i32 3
  %11 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx1.i, align 4
  %tobool2.not.i264 = icmp eq ptr %12, null
  br i1 %tobool2.not.i264, label %lor.lhs.false.i.cleanup207_crit_edge, label %lor.lhs.false3.i

lor.lhs.false.i.cleanup207_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

lor.lhs.false3.i:                                 ; preds = %lor.lhs.false.i
  %arrayidx4.i = getelementptr inbounds ptr, ptr %tb_sa, i32 4
  %13 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx4.i, align 4
  %tobool5.not.i = icmp eq ptr %14, null
  br i1 %tobool5.not.i, label %lor.lhs.false3.i.cleanup207_crit_edge, label %lor.lhs.false6.i

lor.lhs.false3.i.cleanup207_crit_edge:            ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false3.i
  %arrayidx7.i = getelementptr inbounds ptr, ptr %tb_sa, i32 5
  %15 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx7.i, align 4
  %tobool8.not.i = icmp eq ptr %16, null
  br i1 %tobool8.not.i, label %lor.lhs.false6.i.cleanup207_crit_edge, label %if.end.i266

lor.lhs.false6.i.cleanup207_crit_edge:            ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

if.end.i266:                                      ; preds = %lor.lhs.false6.i
  %add.ptr.i.i.i265 = getelementptr i8, ptr %10, i32 4
  %17 = ptrtoint ptr %add.ptr.i.i.i265 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %add.ptr.i.i.i265, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %18)
  %cmp.i = icmp ugt i8 %18, 3
  br i1 %cmp.i, label %if.end.i266.cleanup207_crit_edge, label %if.end12.i

if.end.i266.cleanup207_crit_edge:                 ; preds = %if.end.i266
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

if.end12.i:                                       ; preds = %if.end.i266
  %add.ptr.i.i45.i = getelementptr i8, ptr %12, i32 4
  %19 = ptrtoint ptr %add.ptr.i.i45.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %add.ptr.i.i45.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp15.i = icmp eq i32 %20, 0
  br i1 %cmp15.i, label %if.end12.i.cleanup207_crit_edge, label %if.end18.i

if.end12.i.cleanup207_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

if.end18.i:                                       ; preds = %if.end12.i
  %arrayidx19.i = getelementptr inbounds ptr, ptr %tb_sa, i32 2
  %21 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx19.i, align 4
  %tobool20.not.i = icmp eq ptr %22, null
  br i1 %tobool20.not.i, label %if.end18.i.validate_add_txsa.exit_crit_edge, label %if.then21.i

if.end18.i.validate_add_txsa.exit_crit_edge:      ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %validate_add_txsa.exit

if.then21.i:                                      ; preds = %if.end18.i
  %add.ptr.i.i46.i = getelementptr i8, ptr %22, i32 4
  %23 = ptrtoint ptr %add.ptr.i.i46.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %add.ptr.i.i46.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %24)
  %cmp25.i = icmp ugt i8 %24, 1
  br i1 %cmp25.i, label %if.then21.i.cleanup207_crit_edge, label %if.then21.i.validate_add_txsa.exit_crit_edge

if.then21.i.validate_add_txsa.exit_crit_edge:     ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %validate_add_txsa.exit

if.then21.i.cleanup207_crit_edge:                 ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

validate_add_txsa.exit:                           ; preds = %if.then21.i.validate_add_txsa.exit_crit_edge, %if.end18.i.validate_add_txsa.exit_crit_edge
  %25 = ptrtoint ptr %16 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %16, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 20, i16 %26)
  %cmp32.not.i = icmp eq i16 %26, 20
  br i1 %cmp32.not.i, label %if.end8, label %validate_add_txsa.exit.cleanup207_crit_edge

validate_add_txsa.exit.cleanup207_crit_edge:      ; preds = %validate_add_txsa.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup207

if.end8:                                          ; preds = %validate_add_txsa.exit
  call void @rtnl_lock() #18
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %27 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %_net.i, align 4
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx, align 4
  %add.ptr.i.i.i269 = getelementptr i8, ptr %30, i32 4
  %31 = ptrtoint ptr %add.ptr.i.i.i269 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %add.ptr.i.i.i269, align 4
  %call1.i = call ptr @__dev_get_by_index(ptr noundef %28, i32 noundef %32) #18
  %tobool.not.i270 = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i270, label %if.end8.if.then12_crit_edge, label %if.end.i271

if.end8.if.then12_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then12

if.end.i271:                                      ; preds = %if.end8
  %priv_flags.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i, i32 0, i32 15
  %33 = ptrtoint ptr %priv_flags.i.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %priv_flags.i.i, align 16
  %and.i.i = and i64 %34, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.i.not.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end.i271.if.then12_crit_edge, label %get_dev_from_nl.exit

if.end.i271.if.then12_crit_edge:                  ; preds = %if.end.i271
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then12

get_dev_from_nl.exit:                             ; preds = %if.end.i271
  %cmp.i273 = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i273, label %get_dev_from_nl.exit.if.then12_crit_edge, label %if.end14

get_dev_from_nl.exit.if.then12_crit_edge:         ; preds = %get_dev_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then12

if.then12:                                        ; preds = %get_dev_from_nl.exit.if.then12_crit_edge, %if.end.i271.if.then12_crit_edge, %if.end8.if.then12_crit_edge
  %retval.0.i272296 = phi ptr [ %call1.i, %get_dev_from_nl.exit.if.then12_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end8.if.then12_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i271.if.then12_crit_edge ]
  call void @rtnl_unlock() #18
  %35 = ptrtoint ptr %retval.0.i272296 to i32
  br label %cleanup207

if.end14:                                         ; preds = %get_dev_from_nl.exit
  %add.ptr.i.i = getelementptr i8, ptr %call1.i, i32 2304
  %36 = ptrtoint ptr %arrayidx.i262 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx.i262, align 4
  %add.ptr.i.i274 = getelementptr i8, ptr %37, i32 4
  %38 = ptrtoint ptr %add.ptr.i.i274 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %add.ptr.i.i274, align 1
  %40 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx4.i, align 4
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %41, align 2
  %conv.i = zext i16 %43 to i32
  %sub.i = add nsw i32 %conv.i, -4
  %key_len = getelementptr i8, ptr %call1.i, i32 2320
  %44 = ptrtoint ptr %key_len to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %key_len, align 8
  %conv = zext i16 %45 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %conv)
  %cmp.not = icmp eq i32 %sub.i, %conv
  br i1 %cmp.not, label %if.end29, label %do.end

do.end:                                           ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #20
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.13, i32 noundef %sub.i, i32 noundef %conv) #21
  call void @rtnl_unlock() #18
  br label %cleanup207

if.end29:                                         ; preds = %if.end14
  %xpn = getelementptr i8, ptr %call1.i, i32 2328
  %46 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool30.not = icmp eq i8 %47, 0
  %cond = select i1 %tobool30.not, i32 4, i32 8
  %48 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx1.i, align 4
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %49, align 2
  %conv.i277 = zext i16 %51 to i32
  %sub.i278 = add nsw i32 %conv.i277, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i278, i32 %cond)
  %cmp34.not = icmp eq i32 %sub.i278, %cond
  br i1 %cmp34.not, label %if.end44, label %do.end39

do.end39:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #20
  %call43 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.16, i32 noundef %sub.i278, i32 noundef %cond) #21
  call void @rtnl_unlock() #18
  br label %cleanup207

if.end44:                                         ; preds = %if.end29
  br i1 %tobool30.not, label %if.end44.do.body68_crit_edge, label %if.then47

if.end44.do.body68_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body68

if.then47:                                        ; preds = %if.end44
  %arrayidx48 = getelementptr inbounds [10 x ptr], ptr %tb_sa, i32 0, i32 8
  %52 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx48, align 4
  %tobool49.not = icmp eq ptr %53, null
  br i1 %tobool49.not, label %if.then47.if.then52_crit_edge, label %lor.lhs.false

if.then47.if.then52_crit_edge:                    ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then52

lor.lhs.false:                                    ; preds = %if.then47
  %arrayidx50 = getelementptr inbounds [10 x ptr], ptr %tb_sa, i32 0, i32 9
  %54 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx50, align 4
  %tobool51.not = icmp eq ptr %55, null
  br i1 %tobool51.not, label %lor.lhs.false.if.then52_crit_edge, label %if.end53

lor.lhs.false.if.then52_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then52

if.then52:                                        ; preds = %lor.lhs.false.if.then52_crit_edge, %if.then47.if.then52_crit_edge
  call void @rtnl_unlock() #18
  br label %cleanup207

if.end53:                                         ; preds = %lor.lhs.false
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %55, align 2
  %conv.i281 = zext i16 %57 to i32
  %sub.i282 = add nsw i32 %conv.i281, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %sub.i282)
  %cmp56.not = icmp eq i32 %sub.i282, 12
  br i1 %cmp56.not, label %if.end53.do.body68_crit_edge, label %do.end61

if.end53.do.body68_crit_edge:                     ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body68

do.end61:                                         ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #20
  %call65 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, i32 noundef %sub.i282, i32 noundef 9) #21
  call void @rtnl_unlock() #18
  br label %cleanup207

do.body68:                                        ; preds = %if.end53.do.body68_crit_edge, %if.end44.do.body68_crit_edge
  %call69 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call69, label %do.body68.do.end77_crit_edge, label %land.lhs.true

do.body68.do.end77_crit_edge:                     ; preds = %do.body68
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end77

land.lhs.true:                                    ; preds = %do.body68
  %call70 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %land.lhs.true.do.end77_crit_edge, label %land.lhs.true72

land.lhs.true.do.end77_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end77

land.lhs.true72:                                  ; preds = %land.lhs.true
  %.b261 = load i1, ptr @macsec_add_txsa.__warned, align 1
  br i1 %.b261, label %land.lhs.true72.do.end77_crit_edge, label %if.then74

land.lhs.true72.do.end77_crit_edge:               ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end77

if.then74:                                        ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_add_txsa.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 2018, ptr noundef nonnull @.str.4) #18
  br label %do.end77

do.end77:                                         ; preds = %if.then74, %land.lhs.true72.do.end77_crit_edge, %land.lhs.true.do.end77_crit_edge, %do.body68.do.end77_crit_edge
  %idxprom = zext i8 %39 to i32
  %arrayidx79 = getelementptr %struct.macsec_secy, ptr %add.ptr.i.i, i32 0, i32 11, i32 6, i32 %idxprom
  %58 = ptrtoint ptr %arrayidx79 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx79, align 4
  %tobool80.not = icmp eq ptr %59, null
  br i1 %tobool80.not, label %if.end82, label %if.then81

if.then81:                                        ; preds = %do.end77
  call void @__sanitizer_cov_trace_pc() #20
  call void @rtnl_unlock() #18
  br label %cleanup207

if.end82:                                         ; preds = %do.end77
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %60 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %60, i32 noundef 3264, i32 noundef 112) #22
  %tobool84.not = icmp eq ptr %call7.i, null
  br i1 %tobool84.not, label %if.then85, label %if.end86

if.then85:                                        ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #20
  call void @rtnl_unlock() #18
  br label %cleanup207

if.end86:                                         ; preds = %if.end82
  %61 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %arrayidx4.i, align 4
  %add.ptr.i = getelementptr i8, ptr %62, i32 4
  %63 = ptrtoint ptr %key_len to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %key_len, align 8
  %conv90 = zext i16 %64 to i32
  %icv_len = getelementptr i8, ptr %call1.i, i32 2322
  %65 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %icv_len, align 2
  %conv91 = zext i16 %66 to i32
  %call92 = call fastcc i32 @init_tx_sa(ptr noundef nonnull %call7.i, ptr noundef %add.ptr.i, i32 noundef %conv90, i32 noundef %conv91)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92)
  %cmp93 = icmp slt i32 %call92, 0
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree(ptr noundef nonnull %call7.i) #18
  call void @rtnl_unlock() #18
  br label %cleanup207

if.end96:                                         ; preds = %if.end86
  %lock = getelementptr inbounds %struct.macsec_tx_sa, ptr %call7.i, i32 0, i32 2
  call void @_raw_spin_lock_bh(ptr noundef %lock) #18
  %67 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %arrayidx1.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %69 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %69)
  store i64 -1, ptr %tmp.i, align 8, !annotation !199
  %call.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i, ptr noundef %68, i32 noundef 8) #18
  %70 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %tmp.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  %72 = getelementptr inbounds %struct.macsec_tx_sa, ptr %call7.i, i32 0, i32 3
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_store8_noabort(i32 %73)
  store i64 %71, ptr %72, align 8
  call void @_raw_spin_unlock_bh(ptr noundef %lock) #18
  %74 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %arrayidx19.i, align 4
  %tobool101.not = icmp eq ptr %75, null
  br i1 %tobool101.not, label %if.end96.if.end107_crit_edge, label %if.then102

if.end96.if.end107_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end107

if.then102:                                       ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i285 = getelementptr i8, ptr %75, i32 4
  %76 = ptrtoint ptr %add.ptr.i.i285 to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %add.ptr.i.i285, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool105 = icmp ne i8 %77, 0
  %active = getelementptr inbounds %struct.macsec_tx_sa, ptr %call7.i, i32 0, i32 5
  %frombool = zext i1 %tobool105 to i8
  %78 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %78)
  store i8 %frombool, ptr %active, align 4
  br label %if.end107

if.end107:                                        ; preds = %if.then102, %if.end96.if.end107_crit_edge
  %operational = getelementptr i8, ptr %call1.i, i32 2329
  %79 = ptrtoint ptr %operational to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %operational, align 1, !range !198
  %encoding_sa = getelementptr i8, ptr %call1.i, i32 2337
  %81 = ptrtoint ptr %encoding_sa to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %encoding_sa, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %39, i8 %82)
  %cmp112 = icmp eq i8 %39, %82
  br i1 %cmp112, label %land.lhs.true114, label %if.end107.if.end120_crit_edge

if.end107.if.end120_crit_edge:                    ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end120

land.lhs.true114:                                 ; preds = %if.end107
  %active115 = getelementptr inbounds %struct.macsec_tx_sa, ptr %call7.i, i32 0, i32 5
  %83 = ptrtoint ptr %active115 to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %active115, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %84)
  %tobool116.not = icmp eq i8 %84, 0
  br i1 %tobool116.not, label %land.lhs.true114.if.end120_crit_edge, label %if.then118

land.lhs.true114.if.end120_crit_edge:             ; preds = %land.lhs.true114
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end120

if.then118:                                       ; preds = %land.lhs.true114
  call void @__sanitizer_cov_trace_pc() #20
  %85 = ptrtoint ptr %operational to i32
  call void @__asan_store1_noabort(i32 %85)
  store i8 1, ptr %operational, align 1
  br label %if.end120

if.end120:                                        ; preds = %if.then118, %land.lhs.true114.if.end120_crit_edge, %if.end107.if.end120_crit_edge
  %offload.i = getelementptr i8, ptr %call1.i, i32 2388
  %86 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %87, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then123, label %if.end120.if.end144_crit_edge

if.end120.if.end144_crit_edge:                    ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end144

if.then123:                                       ; preds = %if.end120
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %88 = call ptr @memset(ptr %ctx, i32 255, i32 160)
  %call125 = call fastcc ptr @macsec_get_ops(ptr noundef %add.ptr.i.i, ptr noundef nonnull %ctx)
  %tobool126.not = icmp eq ptr %call125, null
  br i1 %tobool126.not, label %if.then123.cleanup203_crit_edge, label %if.end128

if.then123.cleanup203_crit_edge:                  ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup203

if.end128:                                        ; preds = %if.then123
  %sa129 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4
  %89 = ptrtoint ptr %sa129 to i32
  call void @__asan_store1_noabort(i32 %89)
  store i8 %39, ptr %sa129, align 4
  %90 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 2
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %call7.i, ptr %90, align 4
  %secy132 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %92 = ptrtoint ptr %secy132 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %add.ptr.i.i, ptr %secy132, align 4
  %key = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 1
  %93 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %arrayidx4.i, align 4
  %add.ptr.i288 = getelementptr i8, ptr %94, i32 4
  %95 = ptrtoint ptr %key_len to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %key_len, align 8
  %conv138 = zext i16 %96 to i32
  %97 = call ptr @memcpy(ptr %key, ptr %add.ptr.i288, i32 %conv138)
  %mdo_add_txsa = getelementptr inbounds %struct.macsec_ops, ptr %call125, i32 0, i32 11
  %98 = ptrtoint ptr %mdo_add_txsa to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %mdo_add_txsa, align 4
  %call139 = call fastcc i32 @macsec_offload(ptr noundef %99, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call139)
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %cleanup, label %if.end128.cleanup203_crit_edge

if.end128.cleanup203_crit_edge:                   ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup203

cleanup:                                          ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end144

if.end144:                                        ; preds = %cleanup, %if.end120.if.end144_crit_edge
  %100 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %100)
  %101 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %101)
  %tobool146.not = icmp eq i8 %101, 0
  br i1 %tobool146.not, label %if.end144.if.end154_crit_edge, label %if.then147

if.end144.if.end154_crit_edge:                    ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end154

if.then147:                                       ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #20
  %arrayidx148 = getelementptr inbounds [10 x ptr], ptr %tb_sa, i32 0, i32 8
  %102 = ptrtoint ptr %arrayidx148 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %arrayidx148, align 4
  %add.ptr.i.i.i289 = getelementptr i8, ptr %103, i32 4
  %104 = ptrtoint ptr %add.ptr.i.i.i289 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %add.ptr.i.i.i289, align 4
  %ssci = getelementptr inbounds %struct.macsec_tx_sa, ptr %call7.i, i32 0, i32 1
  %106 = ptrtoint ptr %ssci to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %105, ptr %ssci, align 8
  %salt = getelementptr inbounds %struct.macsec_key, ptr %call7.i, i32 0, i32 2
  %arrayidx152 = getelementptr inbounds [10 x ptr], ptr %tb_sa, i32 0, i32 9
  %107 = ptrtoint ptr %arrayidx152 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %arrayidx152, align 4
  %call153 = call i32 @nla_memcpy(ptr noundef %salt, ptr noundef %108, i32 noundef 12) #18
  br label %if.end154

if.end154:                                        ; preds = %if.then147, %if.end144.if.end154_crit_edge
  %109 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %arrayidx7.i, align 4
  %call158 = call i32 @nla_memcpy(ptr noundef nonnull %call7.i, ptr noundef %110, i32 noundef 16) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !205
  %111 = ptrtoint ptr %arrayidx79 to i32
  call void @__asan_store4_noabort(i32 %111)
  store volatile ptr %call7.i, ptr %arrayidx79, align 4
  call void @rtnl_unlock() #18
  br label %cleanup207

cleanup203:                                       ; preds = %if.end128.cleanup203_crit_edge, %if.then123.cleanup203_crit_edge
  %err.0.ph = phi i32 [ %call139, %if.end128.cleanup203_crit_edge ], [ -95, %if.then123.cleanup203_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  %112 = ptrtoint ptr %operational to i32
  call void @__asan_store1_noabort(i32 %112)
  store i8 %80, ptr %operational, align 1
  call void @kfree(ptr noundef nonnull %call7.i) #18
  call void @rtnl_unlock() #18
  br label %cleanup207

cleanup207:                                       ; preds = %cleanup203, %if.end154, %if.then95, %if.then85, %if.then81, %do.end61, %if.then52, %do.end39, %do.end, %if.then12, %validate_add_txsa.exit.cleanup207_crit_edge, %if.then21.i.cleanup207_crit_edge, %if.end12.i.cleanup207_crit_edge, %if.end.i266.cleanup207_crit_edge, %lor.lhs.false6.i.cleanup207_crit_edge, %lor.lhs.false3.i.cleanup207_crit_edge, %lor.lhs.false.i.cleanup207_crit_edge, %if.end4.cleanup207_crit_edge, %if.end.i.cleanup207_crit_edge, %if.end.cleanup207_crit_edge, %entry.cleanup207_crit_edge
  %retval.0 = phi i32 [ %35, %if.then12 ], [ -22, %do.end ], [ -22, %do.end39 ], [ -22, %do.end61 ], [ -16, %if.then81 ], [ %call92, %if.then95 ], [ %err.0.ph, %cleanup203 ], [ 0, %if.end154 ], [ -12, %if.then85 ], [ -22, %if.then52 ], [ -22, %entry.cleanup207_crit_edge ], [ -22, %validate_add_txsa.exit.cleanup207_crit_edge ], [ -22, %if.end.cleanup207_crit_edge ], [ -22, %if.end.i.cleanup207_crit_edge ], [ -22, %lor.lhs.false6.i.cleanup207_crit_edge ], [ -22, %lor.lhs.false3.i.cleanup207_crit_edge ], [ -22, %lor.lhs.false.i.cleanup207_crit_edge ], [ -22, %if.end4.cleanup207_crit_edge ], [ -22, %if.end.i266.cleanup207_crit_edge ], [ -22, %if.end12.i.cleanup207_crit_edge ], [ -22, %if.then21.i.cleanup207_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %tb_sa) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_del_txsa(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tb_sa = alloca [10 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %tb_sa) #18
  %2 = call ptr @memset(ptr %tb_sa, i32 255, i32 40)
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.cleanup44_crit_edge, label %if.end

entry.cleanup44_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup44

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 3
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end.cleanup44_crit_edge, label %if.end.i

if.end.cleanup44_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup44

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %6, align 2
  %conv.i.i.i = zext i16 %8 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_sa, i32 noundef 9, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_sa_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup44_crit_edge

if.end.i.cleanup44_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup44

if.end4:                                          ; preds = %if.end.i
  call void @rtnl_lock() #18
  %arrayidx.i62 = getelementptr inbounds ptr, ptr %tb_sa, i32 1
  %9 = ptrtoint ptr %arrayidx.i62 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i62, align 4
  %tobool.not.i63 = icmp eq ptr %10, null
  br i1 %tobool.not.i63, label %if.end4.if.then9_crit_edge, label %if.end.i65

if.end4.if.then9_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then9

if.end.i65:                                       ; preds = %if.end4
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %11 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %_net.i, align 4
  %add.ptr.i.i.i64 = getelementptr i8, ptr %10, i32 4
  %13 = ptrtoint ptr %add.ptr.i.i.i64 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %add.ptr.i.i.i64, align 1
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %16, i32 4
  %17 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %call1.i.i = call ptr @__dev_get_by_index(ptr noundef %12, i32 noundef %18) #18
  %tobool.not.i.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i.i, label %if.end.i65.if.then9_crit_edge, label %if.end.i.i

if.end.i65.if.then9_crit_edge:                    ; preds = %if.end.i65
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then9

if.end.i.i:                                       ; preds = %if.end.i65
  %priv_flags.i.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i.i, i32 0, i32 15
  %19 = ptrtoint ptr %priv_flags.i.i.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %priv_flags.i.i.i, align 16
  %and.i.i.i = and i64 %20, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i.i.if.then9_crit_edge, label %get_dev_from_nl.exit.i

if.end.i.i.if.then9_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then9

get_dev_from_nl.exit.i:                           ; preds = %if.end.i.i
  %cmp.i.i = icmp ugt ptr %call1.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge, label %if.end7.i

get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge: ; preds = %get_dev_from_nl.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_txsa_from_nl.exit

if.end7.i:                                        ; preds = %get_dev_from_nl.exit.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %14)
  %cmp.i = icmp ugt i8 %14, 3
  br i1 %cmp.i, label %if.end7.i.if.then9_crit_edge, label %if.end11.i

if.end7.i.if.then9_crit_edge:                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then9

if.end11.i:                                       ; preds = %if.end7.i
  %add.ptr.i.i41.i = getelementptr i8, ptr %call1.i.i, i32 2304
  %tx_sc14.i = getelementptr i8, ptr %call1.i.i, i32 2336
  %call15.i = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call15.i, label %if.end11.i.do.end.i_crit_edge, label %land.lhs.true.i

if.end11.i.do.end.i_crit_edge:                    ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true.i:                                  ; preds = %if.end11.i
  %call16.i = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %tobool17.not.i = icmp eq i32 %call16.i, 0
  br i1 %tobool17.not.i, label %land.lhs.true.i.do.end.i_crit_edge, label %land.lhs.true18.i

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true18.i:                                ; preds = %land.lhs.true.i
  %.b40.i = load i1, ptr @get_txsa_from_nl.__warned, align 1
  br i1 %.b40.i, label %land.lhs.true18.i.do.end.i_crit_edge, label %if.then20.i

land.lhs.true18.i.do.end.i_crit_edge:             ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

if.then20.i:                                      ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @get_txsa_from_nl.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1530, ptr noundef nonnull @.str.4) #18
  br label %do.end.i

do.end.i:                                         ; preds = %if.then20.i, %land.lhs.true18.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge, %if.end11.i.do.end.i_crit_edge
  %idxprom.i = zext i8 %14 to i32
  %arrayidx22.i = getelementptr %struct.macsec_secy, ptr %add.ptr.i.i41.i, i32 0, i32 11, i32 6, i32 %idxprom.i
  %21 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx22.i, align 4
  %tobool23.not.i = icmp eq ptr %22, null
  br i1 %tobool23.not.i, label %do.end.i.if.then9_crit_edge, label %do.end.i.get_txsa_from_nl.exit_crit_edge

do.end.i.get_txsa_from_nl.exit_crit_edge:         ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_txsa_from_nl.exit

do.end.i.if.then9_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then9

get_txsa_from_nl.exit:                            ; preds = %do.end.i.get_txsa_from_nl.exit_crit_edge, %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge
  %dev.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge ], [ %call1.i.i, %do.end.i.get_txsa_from_nl.exit_crit_edge ]
  %secy.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge ], [ %add.ptr.i.i41.i, %do.end.i.get_txsa_from_nl.exit_crit_edge ]
  %tx_sc.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge ], [ %tx_sc14.i, %do.end.i.get_txsa_from_nl.exit_crit_edge ]
  %retval.0.i66 = phi ptr [ %call1.i.i, %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge ], [ %22, %do.end.i.get_txsa_from_nl.exit_crit_edge ]
  %cmp.i67 = icmp ugt ptr %retval.0.i66, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i67, label %get_txsa_from_nl.exit.if.then9_crit_edge, label %if.end11

get_txsa_from_nl.exit.if.then9_crit_edge:         ; preds = %get_txsa_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then9

if.then9:                                         ; preds = %get_txsa_from_nl.exit.if.then9_crit_edge, %do.end.i.if.then9_crit_edge, %if.end7.i.if.then9_crit_edge, %if.end.i.i.if.then9_crit_edge, %if.end.i65.if.then9_crit_edge, %if.end4.if.then9_crit_edge
  %retval.0.i6686 = phi ptr [ %retval.0.i66, %get_txsa_from_nl.exit.if.then9_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i.i.if.then9_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i65.if.then9_crit_edge ], [ inttoptr (i32 -19 to ptr), %do.end.i.if.then9_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end7.i.if.then9_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end4.if.then9_crit_edge ]
  call void @rtnl_unlock() #18
  %23 = ptrtoint ptr %retval.0.i6686 to i32
  br label %cleanup44

if.end11:                                         ; preds = %get_txsa_from_nl.exit
  %active = getelementptr inbounds %struct.macsec_tx_sa, ptr %retval.0.i66, i32 0, i32 5
  %24 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %active, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool12.not = icmp eq i8 %25, 0
  br i1 %tobool12.not, label %if.end14, label %if.then13

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  call void @rtnl_unlock() #18
  br label %cleanup44

if.end14:                                         ; preds = %if.end11
  %offload.i = getelementptr i8, ptr %dev.0, i32 2388
  %26 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %27, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then17, label %if.end14.do.body34_crit_edge

if.end14.do.body34_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body34

if.then17:                                        ; preds = %if.end14
  %add.ptr.i = getelementptr i8, ptr %dev.0, i32 2304
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %28 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %offload.i, align 4
  %tobool.not.i.i70 = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not.i.i70, label %if.then17.cleanup43_crit_edge, label %lor.lhs.false.i.i

if.then17.cleanup43_crit_edge:                    ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

lor.lhs.false.i.i:                                ; preds = %if.then17
  %real_dev.i.i = getelementptr i8, ptr %dev.0, i32 2368
  %30 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %31, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.cleanup43_crit_edge, label %if.end.i.i71

lor.lhs.false.i.i.cleanup43_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

if.end.i.i71:                                     ; preds = %lor.lhs.false.i.i
  %32 = zext i32 %29 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.56)
  switch i32 %29, label %if.end.i.i71.cleanup43_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i71.cleanup43_crit_edge:                 ; preds = %if.end.i.i71
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

if.then2.i.i:                                     ; preds = %if.end.i.i71
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 145
  %33 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %34, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.cleanup43_crit_edge, label %land.rhs.i.i

if.then2.i.i.cleanup43_crit_edge:                 ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %34, i32 0, i32 42
  %35 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %36, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.cleanup43_crit_edge, label %if.end.i72

land.rhs.i.i.cleanup43_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

if.then9.i.i:                                     ; preds = %if.end.i.i71
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 23
  %37 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %38, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.cleanup43_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.cleanup43_crit_edge:                 ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 151
  %39 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %40, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.cleanup43_crit_edge, label %if.end.thread.i

macsec_check_offload.exit.i.cleanup43_crit_edge:  ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

if.end.i72:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %41 = getelementptr inbounds i8, ptr %ctx, i32 12
  %42 = call ptr @memset(ptr %41, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %43 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 1, ptr %offload1.i.i, align 4
  %44 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %real_dev.i.i, align 8
  %phydev.i8.i = getelementptr inbounds %struct.net_device, ptr %45, i32 0, i32 145
  %46 = ptrtoint ptr %phydev.i8.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %phydev.i8.i, align 16
  %48 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %47, ptr %ctx, align 4
  %49 = load ptr, ptr %real_dev.i.i, align 8
  %phydev11.i.i = getelementptr inbounds %struct.net_device, ptr %49, i32 0, i32 145
  %50 = ptrtoint ptr %phydev11.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %phydev11.i.i, align 16
  %macsec_ops.i9.i = getelementptr inbounds %struct.phy_device, ptr %51, i32 0, i32 42
  br label %macsec_get_ops.exit

if.end.thread.i:                                  ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  %52 = getelementptr inbounds i8, ptr %ctx, i32 12
  %53 = call ptr @memset(ptr %52, i32 0, i32 148)
  %offload1.i16.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %54 = ptrtoint ptr %offload1.i16.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 2, ptr %offload1.i16.i, align 4
  %55 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %real_dev.i.i, align 8
  %57 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %56, ptr %ctx, align 4
  %58 = load ptr, ptr %real_dev.i.i, align 8
  %macsec_ops14.i11.i = getelementptr inbounds %struct.net_device, ptr %58, i32 0, i32 151
  br label %macsec_get_ops.exit

macsec_get_ops.exit:                              ; preds = %if.end.thread.i, %if.end.i72
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i9.i, %if.end.i72 ], [ %macsec_ops14.i11.i, %if.end.thread.i ]
  %59 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool20.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool20.not, label %macsec_get_ops.exit.cleanup43_crit_edge, label %if.end22

macsec_get_ops.exit.cleanup43_crit_edge:          ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

if.end22:                                         ; preds = %macsec_get_ops.exit
  %sa = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4
  %60 = ptrtoint ptr %sa to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %14, ptr %sa, align 4
  %61 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 2
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %retval.0.i66, ptr %61, align 4
  %secy25 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %63 = ptrtoint ptr %secy25 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %secy.0, ptr %secy25, align 4
  %mdo_del_txsa = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 13
  %64 = ptrtoint ptr %mdo_del_txsa to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %mdo_del_txsa, align 4
  %call26 = call fastcc i32 @macsec_offload(ptr noundef %65, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %cleanup, label %if.end22.cleanup43_crit_edge

if.end22.cleanup43_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

cleanup:                                          ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %do.body34

do.body34:                                        ; preds = %cleanup, %if.end14.do.body34_crit_edge
  %idxprom = zext i8 %14 to i32
  %arrayidx36 = getelementptr %struct.macsec_tx_sc, ptr %tx_sc.0, i32 0, i32 6, i32 %idxprom
  %66 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile ptr null, ptr %arrayidx36, align 4
  %67 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 0, ptr %active, align 4
  %refcnt.i.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %retval.0.i66, i32 0, i32 4
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #18
  %68 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %68, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %do.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.clear_tx_sa.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !204

if.end5.i.i.i.i.i.clear_tx_sa.exit_crit_edge:     ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %clear_tx_sa.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef 3) #18
  br label %clear_tx_sa.exit

if.then.i.i:                                      ; preds = %do.body34
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %retval.0.i66, i32 0, i32 7
  call void @call_rcu(ptr noundef %rcu.i.i, ptr noundef nonnull @free_txsa) #18
  br label %clear_tx_sa.exit

clear_tx_sa.exit:                                 ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.clear_tx_sa.exit_crit_edge
  call void @rtnl_unlock() #18
  br label %cleanup44

cleanup43:                                        ; preds = %if.end22.cleanup43_crit_edge, %macsec_get_ops.exit.cleanup43_crit_edge, %macsec_check_offload.exit.i.cleanup43_crit_edge, %if.then9.i.i.cleanup43_crit_edge, %land.rhs.i.i.cleanup43_crit_edge, %if.then2.i.i.cleanup43_crit_edge, %if.end.i.i71.cleanup43_crit_edge, %lor.lhs.false.i.i.cleanup43_crit_edge, %if.then17.cleanup43_crit_edge
  %ret.0.ph = phi i32 [ %call26, %if.end22.cleanup43_crit_edge ], [ -95, %macsec_get_ops.exit.cleanup43_crit_edge ], [ -95, %macsec_check_offload.exit.i.cleanup43_crit_edge ], [ -95, %land.rhs.i.i.cleanup43_crit_edge ], [ -95, %lor.lhs.false.i.i.cleanup43_crit_edge ], [ -95, %if.then17.cleanup43_crit_edge ], [ -95, %if.then2.i.i.cleanup43_crit_edge ], [ -95, %if.then9.i.i.cleanup43_crit_edge ], [ -95, %if.end.i.i71.cleanup43_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  call void @rtnl_unlock() #18
  br label %cleanup44

cleanup44:                                        ; preds = %cleanup43, %clear_tx_sa.exit, %if.then13, %if.then9, %if.end.i.cleanup44_crit_edge, %if.end.cleanup44_crit_edge, %entry.cleanup44_crit_edge
  %retval.0 = phi i32 [ %23, %if.then9 ], [ -16, %if.then13 ], [ %ret.0.ph, %cleanup43 ], [ 0, %clear_tx_sa.exit ], [ -22, %entry.cleanup44_crit_edge ], [ -22, %if.end.cleanup44_crit_edge ], [ -22, %if.end.i.cleanup44_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %tb_sa) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_upd_txsa(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tmp.i = alloca i64, align 8
  %tb_sa = alloca [10 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %tb_sa) #18
  %2 = call ptr @memset(ptr %tb_sa, i32 255, i32 40)
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.cleanup85_crit_edge, label %if.end

entry.cleanup85_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 3
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end.cleanup85_crit_edge, label %if.end.i

if.end.cleanup85_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %6, align 2
  %conv.i.i.i = zext i16 %8 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_sa, i32 noundef 9, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_sa_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup85_crit_edge

if.end.i.cleanup85_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

if.end4:                                          ; preds = %if.end.i
  %arrayidx.i120 = getelementptr inbounds ptr, ptr %tb_sa, i32 1
  %9 = ptrtoint ptr %arrayidx.i120 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i120, align 4
  %tobool.not.i121 = icmp eq ptr %10, null
  br i1 %tobool.not.i121, label %if.end4.cleanup85_crit_edge, label %lor.lhs.false.i

if.end4.cleanup85_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

lor.lhs.false.i:                                  ; preds = %if.end4
  %arrayidx1.i = getelementptr inbounds ptr, ptr %tb_sa, i32 4
  %11 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx1.i, align 4
  %tobool2.not.i122 = icmp eq ptr %12, null
  br i1 %tobool2.not.i122, label %lor.lhs.false3.i, label %lor.lhs.false.i.cleanup85_crit_edge

lor.lhs.false.i.cleanup85_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

lor.lhs.false3.i:                                 ; preds = %lor.lhs.false.i
  %arrayidx4.i = getelementptr inbounds ptr, ptr %tb_sa, i32 5
  %13 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx4.i, align 4
  %tobool5.not.i = icmp eq ptr %14, null
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false3.i.cleanup85_crit_edge

lor.lhs.false3.i.cleanup85_crit_edge:             ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false3.i
  %arrayidx7.i = getelementptr inbounds ptr, ptr %tb_sa, i32 8
  %15 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx7.i, align 4
  %tobool8.not.i = icmp eq ptr %16, null
  br i1 %tobool8.not.i, label %lor.lhs.false9.i, label %lor.lhs.false6.i.cleanup85_crit_edge

lor.lhs.false6.i.cleanup85_crit_edge:             ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

lor.lhs.false9.i:                                 ; preds = %lor.lhs.false6.i
  %arrayidx10.i = getelementptr inbounds ptr, ptr %tb_sa, i32 9
  %17 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx10.i, align 4
  %tobool11.not.i = icmp eq ptr %18, null
  br i1 %tobool11.not.i, label %if.end.i124, label %lor.lhs.false9.i.cleanup85_crit_edge

lor.lhs.false9.i.cleanup85_crit_edge:             ; preds = %lor.lhs.false9.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

if.end.i124:                                      ; preds = %lor.lhs.false9.i
  %add.ptr.i.i.i123 = getelementptr i8, ptr %10, i32 4
  %19 = ptrtoint ptr %add.ptr.i.i.i123 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %add.ptr.i.i.i123, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %20)
  %cmp.i = icmp ugt i8 %20, 3
  br i1 %cmp.i, label %if.end.i124.cleanup85_crit_edge, label %if.end15.i

if.end.i124.cleanup85_crit_edge:                  ; preds = %if.end.i124
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

if.end15.i:                                       ; preds = %if.end.i124
  %arrayidx16.i = getelementptr inbounds ptr, ptr %tb_sa, i32 3
  %21 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx16.i, align 4
  %tobool17.not.i = icmp eq ptr %22, null
  br i1 %tobool17.not.i, label %if.end15.i.if.end23.i_crit_edge, label %land.lhs.true.i

if.end15.i.if.end23.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end23.i

land.lhs.true.i:                                  ; preds = %if.end15.i
  %add.ptr.i.i46.i = getelementptr i8, ptr %22, i32 4
  %23 = ptrtoint ptr %add.ptr.i.i46.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %add.ptr.i.i46.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp20.i = icmp eq i32 %24, 0
  br i1 %cmp20.i, label %land.lhs.true.i.cleanup85_crit_edge, label %land.lhs.true.i.if.end23.i_crit_edge

land.lhs.true.i.if.end23.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end23.i

land.lhs.true.i.cleanup85_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

if.end23.i:                                       ; preds = %land.lhs.true.i.if.end23.i_crit_edge, %if.end15.i.if.end23.i_crit_edge
  %arrayidx24.i = getelementptr inbounds ptr, ptr %tb_sa, i32 2
  %25 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx24.i, align 4
  %tobool25.not.i = icmp eq ptr %26, null
  br i1 %tobool25.not.i, label %if.end23.i.if.end8_crit_edge, label %if.then26.i

if.end23.i.if.end8_crit_edge:                     ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then26.i:                                      ; preds = %if.end23.i
  %add.ptr.i.i47.i = getelementptr i8, ptr %26, i32 4
  %27 = ptrtoint ptr %add.ptr.i.i47.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %add.ptr.i.i47.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %28)
  %cmp30.i = icmp ugt i8 %28, 1
  br i1 %cmp30.i, label %if.then26.i.cleanup85_crit_edge, label %if.then26.i.if.end8_crit_edge

if.then26.i.if.end8_crit_edge:                    ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then26.i.cleanup85_crit_edge:                  ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup85

if.end8:                                          ; preds = %if.then26.i.if.end8_crit_edge, %if.end23.i.if.end8_crit_edge
  call void @rtnl_lock() #18
  %29 = ptrtoint ptr %arrayidx.i120 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.i120, align 4
  %tobool.not.i127 = icmp eq ptr %30, null
  br i1 %tobool.not.i127, label %if.end8.if.then13_crit_edge, label %if.end.i129

if.end8.if.then13_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.end.i129:                                      ; preds = %if.end8
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %31 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %_net.i, align 4
  %add.ptr.i.i.i128 = getelementptr i8, ptr %30, i32 4
  %33 = ptrtoint ptr %add.ptr.i.i.i128 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %add.ptr.i.i.i128, align 1
  %35 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %36, i32 4
  %37 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %call1.i.i = call ptr @__dev_get_by_index(ptr noundef %32, i32 noundef %38) #18
  %tobool.not.i.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i.i, label %if.end.i129.if.then13_crit_edge, label %if.end.i.i

if.end.i129.if.then13_crit_edge:                  ; preds = %if.end.i129
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.end.i.i:                                       ; preds = %if.end.i129
  %priv_flags.i.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i.i, i32 0, i32 15
  %39 = ptrtoint ptr %priv_flags.i.i.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %priv_flags.i.i.i, align 16
  %and.i.i.i = and i64 %40, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i.i.if.then13_crit_edge, label %get_dev_from_nl.exit.i

if.end.i.i.if.then13_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

get_dev_from_nl.exit.i:                           ; preds = %if.end.i.i
  %cmp.i.i = icmp ugt ptr %call1.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge, label %if.end7.i

get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge: ; preds = %get_dev_from_nl.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_txsa_from_nl.exit

if.end7.i:                                        ; preds = %get_dev_from_nl.exit.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %34)
  %cmp.i130 = icmp ugt i8 %34, 3
  br i1 %cmp.i130, label %if.end7.i.if.then13_crit_edge, label %if.end11.i

if.end7.i.if.then13_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.end11.i:                                       ; preds = %if.end7.i
  %add.ptr.i.i41.i = getelementptr i8, ptr %call1.i.i, i32 2304
  %tx_sc14.i = getelementptr i8, ptr %call1.i.i, i32 2336
  %call15.i = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call15.i, label %if.end11.i.do.end.i_crit_edge, label %land.lhs.true.i132

if.end11.i.do.end.i_crit_edge:                    ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true.i132:                               ; preds = %if.end11.i
  %call16.i = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %tobool17.not.i131 = icmp eq i32 %call16.i, 0
  br i1 %tobool17.not.i131, label %land.lhs.true.i132.do.end.i_crit_edge, label %land.lhs.true18.i

land.lhs.true.i132.do.end.i_crit_edge:            ; preds = %land.lhs.true.i132
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true18.i:                                ; preds = %land.lhs.true.i132
  %.b40.i = load i1, ptr @get_txsa_from_nl.__warned, align 1
  br i1 %.b40.i, label %land.lhs.true18.i.do.end.i_crit_edge, label %if.then20.i

land.lhs.true18.i.do.end.i_crit_edge:             ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

if.then20.i:                                      ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @get_txsa_from_nl.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1530, ptr noundef nonnull @.str.4) #18
  br label %do.end.i

do.end.i:                                         ; preds = %if.then20.i, %land.lhs.true18.i.do.end.i_crit_edge, %land.lhs.true.i132.do.end.i_crit_edge, %if.end11.i.do.end.i_crit_edge
  %idxprom.i = zext i8 %34 to i32
  %arrayidx22.i = getelementptr %struct.macsec_secy, ptr %add.ptr.i.i41.i, i32 0, i32 11, i32 6, i32 %idxprom.i
  %41 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx22.i, align 4
  %tobool23.not.i = icmp eq ptr %42, null
  br i1 %tobool23.not.i, label %do.end.i.if.then13_crit_edge, label %do.end.i.get_txsa_from_nl.exit_crit_edge

do.end.i.get_txsa_from_nl.exit_crit_edge:         ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_txsa_from_nl.exit

do.end.i.if.then13_crit_edge:                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

get_txsa_from_nl.exit:                            ; preds = %do.end.i.get_txsa_from_nl.exit_crit_edge, %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge
  %dev.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge ], [ %call1.i.i, %do.end.i.get_txsa_from_nl.exit_crit_edge ]
  %secy.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge ], [ %add.ptr.i.i41.i, %do.end.i.get_txsa_from_nl.exit_crit_edge ]
  %tx_sc.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge ], [ %tx_sc14.i, %do.end.i.get_txsa_from_nl.exit_crit_edge ]
  %retval.0.i133 = phi ptr [ %call1.i.i, %get_dev_from_nl.exit.i.get_txsa_from_nl.exit_crit_edge ], [ %42, %do.end.i.get_txsa_from_nl.exit_crit_edge ]
  %cmp.i134 = icmp ugt ptr %retval.0.i133, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i134, label %get_txsa_from_nl.exit.if.then13_crit_edge, label %if.end15

get_txsa_from_nl.exit.if.then13_crit_edge:        ; preds = %get_txsa_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.then13:                                        ; preds = %get_txsa_from_nl.exit.if.then13_crit_edge, %do.end.i.if.then13_crit_edge, %if.end7.i.if.then13_crit_edge, %if.end.i.i.if.then13_crit_edge, %if.end.i129.if.then13_crit_edge, %if.end8.if.then13_crit_edge
  %retval.0.i133161 = phi ptr [ %retval.0.i133, %get_txsa_from_nl.exit.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i.i.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i129.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %do.end.i.if.then13_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end7.i.if.then13_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end8.if.then13_crit_edge ]
  call void @rtnl_unlock() #18
  %43 = ptrtoint ptr %retval.0.i133161 to i32
  br label %cleanup85

if.end15:                                         ; preds = %get_txsa_from_nl.exit
  %44 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx16.i, align 4
  %tobool17.not = icmp eq ptr %45, null
  br i1 %tobool17.not, label %if.end15.if.end30_crit_edge, label %if.then18

if.end15.if.end30_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end30

if.then18:                                        ; preds = %if.end15
  %xpn = getelementptr inbounds %struct.macsec_secy, ptr %secy.0, i32 0, i32 6
  %46 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool19.not = icmp eq i8 %47, 0
  %cond = select i1 %tobool19.not, i32 4, i32 8
  %48 = ptrtoint ptr %45 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %45, align 2
  %conv.i = zext i16 %49 to i32
  %sub.i = add nsw i32 %conv.i, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %cond)
  %cmp.not = icmp eq i32 %sub.i, %cond
  br i1 %cmp.not, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #20
  %lock = getelementptr inbounds %struct.macsec_tx_sa, ptr %retval.0.i133, i32 0, i32 2
  call void @_raw_spin_lock_bh(ptr noundef %lock) #18
  %50 = getelementptr inbounds %struct.macsec_tx_sa, ptr %retval.0.i133, i32 0, i32 3
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load8_noabort(i32 %51)
  %prev_pn.sroa.0.0.copyload = load i64, ptr %50, align 8
  %52 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx16.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %54 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 -1, ptr %tmp.i, align 8, !annotation !199
  %call.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i, ptr noundef %53, i32 noundef 8) #18
  %55 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %tmp.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  %57 = ptrtoint ptr %50 to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %56, ptr %50, align 8
  call void @_raw_spin_unlock_bh(ptr noundef %lock) #18
  br label %if.end30

cleanup:                                          ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #20
  %call25 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.24, i32 noundef %sub.i, i32 noundef %cond) #21
  call void @rtnl_unlock() #18
  br label %cleanup85

if.end30:                                         ; preds = %cleanup.thread, %if.end15.if.end30_crit_edge
  %prev_pn.sroa.0.1 = phi i64 [ 0, %if.end15.if.end30_crit_edge ], [ %prev_pn.sroa.0.0.copyload, %cleanup.thread ]
  %active = getelementptr inbounds %struct.macsec_tx_sa, ptr %retval.0.i133, i32 0, i32 5
  %58 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %active, align 4, !range !198
  %60 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx24.i, align 4
  %tobool33.not = icmp eq ptr %61, null
  br i1 %tobool33.not, label %if.end30.if.end40_crit_edge, label %if.then34

if.end30.if.end40_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end40

if.then34:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i = getelementptr i8, ptr %61, i32 4
  %62 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %add.ptr.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool37 = icmp ne i8 %63, 0
  %frombool39 = zext i1 %tobool37 to i8
  %64 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %frombool39, ptr %active, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then34, %if.end30.if.end40_crit_edge
  %operational = getelementptr inbounds %struct.macsec_secy, ptr %secy.0, i32 0, i32 7
  %65 = ptrtoint ptr %operational to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %operational, align 1, !range !198
  %encoding_sa = getelementptr inbounds %struct.macsec_tx_sc, ptr %tx_sc.0, i32 0, i32 1
  %67 = ptrtoint ptr %encoding_sa to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %encoding_sa, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %34, i8 %68)
  %cmp44 = icmp eq i8 %34, %68
  br i1 %cmp44, label %if.then46, label %if.end40.if.end51_crit_edge

if.end40.if.end51_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end51

if.then46:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #20
  %69 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %active, align 4, !range !198
  %71 = ptrtoint ptr %operational to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %70, ptr %operational, align 1
  br label %if.end51

if.end51:                                         ; preds = %if.then46, %if.end40.if.end51_crit_edge
  %offload.i = getelementptr i8, ptr %dev.0, i32 2388
  %72 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %73, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then54, label %if.end51.if.end71_crit_edge

if.end51.if.end71_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end71

if.then54:                                        ; preds = %if.end51
  %add.ptr.i = getelementptr i8, ptr %dev.0, i32 2304
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %74 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %offload.i, align 4
  %tobool.not.i.i139 = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not.i.i139, label %if.then54.cleanup72_crit_edge, label %lor.lhs.false.i.i

if.then54.cleanup72_crit_edge:                    ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

lor.lhs.false.i.i:                                ; preds = %if.then54
  %real_dev.i.i = getelementptr i8, ptr %dev.0, i32 2368
  %76 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %77, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.cleanup72_crit_edge, label %if.end.i.i140

lor.lhs.false.i.i.cleanup72_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

if.end.i.i140:                                    ; preds = %lor.lhs.false.i.i
  %78 = zext i32 %75 to i64
  call void @__sanitizer_cov_trace_switch(i64 %78, ptr @__sancov_gen_cov_switch_values.57)
  switch i32 %75, label %if.end.i.i140.cleanup72_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i140.cleanup72_crit_edge:                ; preds = %if.end.i.i140
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

if.then2.i.i:                                     ; preds = %if.end.i.i140
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %77, i32 0, i32 145
  %79 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %80, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.cleanup72_crit_edge, label %land.rhs.i.i

if.then2.i.i.cleanup72_crit_edge:                 ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %80, i32 0, i32 42
  %81 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %82, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.cleanup72_crit_edge, label %if.end.i141

land.rhs.i.i.cleanup72_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

if.then9.i.i:                                     ; preds = %if.end.i.i140
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %77, i32 0, i32 23
  %83 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %84, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.cleanup72_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.cleanup72_crit_edge:                 ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %77, i32 0, i32 151
  %85 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %86, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.cleanup72_crit_edge, label %if.end.thread.i

macsec_check_offload.exit.i.cleanup72_crit_edge:  ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

if.end.i141:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %87 = getelementptr inbounds i8, ptr %ctx, i32 12
  %88 = call ptr @memset(ptr %87, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %89 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 1, ptr %offload1.i.i, align 4
  %90 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %real_dev.i.i, align 8
  %phydev.i8.i = getelementptr inbounds %struct.net_device, ptr %91, i32 0, i32 145
  %92 = ptrtoint ptr %phydev.i8.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %phydev.i8.i, align 16
  %94 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %93, ptr %ctx, align 4
  %95 = load ptr, ptr %real_dev.i.i, align 8
  %phydev11.i.i = getelementptr inbounds %struct.net_device, ptr %95, i32 0, i32 145
  %96 = ptrtoint ptr %phydev11.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %phydev11.i.i, align 16
  %macsec_ops.i9.i = getelementptr inbounds %struct.phy_device, ptr %97, i32 0, i32 42
  br label %macsec_get_ops.exit

if.end.thread.i:                                  ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  %98 = getelementptr inbounds i8, ptr %ctx, i32 12
  %99 = call ptr @memset(ptr %98, i32 0, i32 148)
  %offload1.i16.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %100 = ptrtoint ptr %offload1.i16.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 2, ptr %offload1.i16.i, align 4
  %101 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %real_dev.i.i, align 8
  %103 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %103)
  store ptr %102, ptr %ctx, align 4
  %104 = load ptr, ptr %real_dev.i.i, align 8
  %macsec_ops14.i11.i = getelementptr inbounds %struct.net_device, ptr %104, i32 0, i32 151
  br label %macsec_get_ops.exit

macsec_get_ops.exit:                              ; preds = %if.end.thread.i, %if.end.i141
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i9.i, %if.end.i141 ], [ %macsec_ops14.i11.i, %if.end.thread.i ]
  %105 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool57.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool57.not, label %macsec_get_ops.exit.cleanup72_crit_edge, label %if.end59

macsec_get_ops.exit.cleanup72_crit_edge:          ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

if.end59:                                         ; preds = %macsec_get_ops.exit
  %sa = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4
  %106 = ptrtoint ptr %sa to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 %34, ptr %sa, align 4
  %107 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 2
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr %retval.0.i133, ptr %107, align 4
  %secy62 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %109 = ptrtoint ptr %secy62 to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr %secy.0, ptr %secy62, align 4
  %mdo_upd_txsa = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 12
  %110 = ptrtoint ptr %mdo_upd_txsa to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %mdo_upd_txsa, align 4
  %call63 = call fastcc i32 @macsec_offload(ptr noundef %111, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %cleanup67, label %if.end59.cleanup72_crit_edge

if.end59.cleanup72_crit_edge:                     ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup72

cleanup67:                                        ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end71

if.end71:                                         ; preds = %cleanup67, %if.end51.if.end71_crit_edge
  call void @rtnl_unlock() #18
  br label %cleanup85

cleanup72:                                        ; preds = %if.end59.cleanup72_crit_edge, %macsec_get_ops.exit.cleanup72_crit_edge, %macsec_check_offload.exit.i.cleanup72_crit_edge, %if.then9.i.i.cleanup72_crit_edge, %land.rhs.i.i.cleanup72_crit_edge, %if.then2.i.i.cleanup72_crit_edge, %if.end.i.i140.cleanup72_crit_edge, %lor.lhs.false.i.i.cleanup72_crit_edge, %if.then54.cleanup72_crit_edge
  %ret.0.ph = phi i32 [ %call63, %if.end59.cleanup72_crit_edge ], [ -95, %macsec_get_ops.exit.cleanup72_crit_edge ], [ -95, %macsec_check_offload.exit.i.cleanup72_crit_edge ], [ -95, %land.rhs.i.i.cleanup72_crit_edge ], [ -95, %lor.lhs.false.i.i.cleanup72_crit_edge ], [ -95, %if.then54.cleanup72_crit_edge ], [ -95, %if.then2.i.i.cleanup72_crit_edge ], [ -95, %if.then9.i.i.cleanup72_crit_edge ], [ -95, %if.end.i.i140.cleanup72_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  %112 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %arrayidx16.i, align 4
  %tobool74.not = icmp eq ptr %113, null
  br i1 %tobool74.not, label %cleanup72.if.end78_crit_edge, label %if.then75

cleanup72.if.end78_crit_edge:                     ; preds = %cleanup72
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end78

if.then75:                                        ; preds = %cleanup72
  call void @__sanitizer_cov_trace_pc() #20
  %lock76 = getelementptr inbounds %struct.macsec_tx_sa, ptr %retval.0.i133, i32 0, i32 2
  call void @_raw_spin_lock_bh(ptr noundef %lock76) #18
  %114 = getelementptr inbounds %struct.macsec_tx_sa, ptr %retval.0.i133, i32 0, i32 3
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_store8_noabort(i32 %115)
  store i64 %prev_pn.sroa.0.1, ptr %114, align 8
  call void @_raw_spin_unlock_bh(ptr noundef %lock76) #18
  br label %if.end78

if.end78:                                         ; preds = %if.then75, %cleanup72.if.end78_crit_edge
  %116 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %116)
  store i8 %59, ptr %active, align 4
  %117 = ptrtoint ptr %operational to i32
  call void @__asan_store1_noabort(i32 %117)
  store i8 %66, ptr %operational, align 1
  call void @rtnl_unlock() #18
  br label %cleanup85

cleanup85:                                        ; preds = %if.end78, %if.end71, %cleanup, %if.then13, %if.then26.i.cleanup85_crit_edge, %land.lhs.true.i.cleanup85_crit_edge, %if.end.i124.cleanup85_crit_edge, %lor.lhs.false9.i.cleanup85_crit_edge, %lor.lhs.false6.i.cleanup85_crit_edge, %lor.lhs.false3.i.cleanup85_crit_edge, %lor.lhs.false.i.cleanup85_crit_edge, %if.end4.cleanup85_crit_edge, %if.end.i.cleanup85_crit_edge, %if.end.cleanup85_crit_edge, %entry.cleanup85_crit_edge
  %retval.2 = phi i32 [ %43, %if.then13 ], [ %ret.0.ph, %if.end78 ], [ 0, %if.end71 ], [ -22, %cleanup ], [ -22, %entry.cleanup85_crit_edge ], [ -22, %if.end.cleanup85_crit_edge ], [ -22, %if.end.i.cleanup85_crit_edge ], [ -22, %lor.lhs.false9.i.cleanup85_crit_edge ], [ -22, %lor.lhs.false6.i.cleanup85_crit_edge ], [ -22, %lor.lhs.false3.i.cleanup85_crit_edge ], [ -22, %lor.lhs.false.i.cleanup85_crit_edge ], [ -22, %if.end4.cleanup85_crit_edge ], [ -22, %if.end.i124.cleanup85_crit_edge ], [ -22, %land.lhs.true.i.cleanup85_crit_edge ], [ -22, %if.then26.i.cleanup85_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %tb_sa) #18
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_add_rxsa(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tmp.i = alloca i64, align 8
  %tmp.i.i.i = alloca i64, align 8
  %tb_rxsc = alloca [6 x ptr], align 4
  %tb_sa = alloca [10 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %tb_rxsc) #18
  %2 = getelementptr inbounds [6 x ptr], ptr %tb_rxsc, i32 0, i32 1
  %3 = call ptr @memset(ptr %tb_rxsc, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %tb_sa) #18
  %4 = call ptr @memset(ptr %tb_sa, i32 255, i32 40)
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %entry.cleanup198_crit_edge, label %if.end

entry.cleanup198_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 3
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end.cleanup198_crit_edge, label %if.end.i

if.end.cleanup198_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %8, align 2
  %conv.i.i.i = zext i16 %10 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_sa, i32 noundef 9, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_sa_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup198_crit_edge

if.end.i.cleanup198_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end4:                                          ; preds = %if.end.i
  %arrayidx.i239 = getelementptr ptr, ptr %1, i32 2
  %11 = ptrtoint ptr %arrayidx.i239 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i239, align 4
  %tobool.not.i240 = icmp eq ptr %12, null
  br i1 %tobool.not.i240, label %if.end4.cleanup198_crit_edge, label %if.end.i247

if.end4.cleanup198_crit_edge:                     ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end.i247:                                      ; preds = %if.end4
  %add.ptr.i.i.i241 = getelementptr i8, ptr %12, i32 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %12, align 2
  %conv.i.i.i242 = zext i16 %14 to i32
  %sub.i.i.i243 = add nsw i32 %conv.i.i.i242, -4
  %call2.i.i244 = call i32 @__nla_parse(ptr noundef nonnull %tb_rxsc, i32 noundef 5, ptr noundef %add.ptr.i.i.i241, i32 noundef %sub.i.i.i243, ptr noundef nonnull @macsec_genl_rxsc_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i244)
  %tobool2.not.i245 = icmp eq i32 %call2.i.i244, 0
  br i1 %tobool2.not.i245, label %if.end9, label %if.end.i247.cleanup198_crit_edge

if.end.i247.cleanup198_crit_edge:                 ; preds = %if.end.i247
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end9:                                          ; preds = %if.end.i247
  %arrayidx.i249 = getelementptr inbounds ptr, ptr %tb_sa, i32 1
  %15 = ptrtoint ptr %arrayidx.i249 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx.i249, align 4
  %tobool.not.i250 = icmp eq ptr %16, null
  br i1 %tobool.not.i250, label %if.end9.cleanup198_crit_edge, label %lor.lhs.false.i

if.end9.cleanup198_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

lor.lhs.false.i:                                  ; preds = %if.end9
  %arrayidx1.i = getelementptr inbounds ptr, ptr %tb_sa, i32 4
  %17 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx1.i, align 4
  %tobool2.not.i251 = icmp eq ptr %18, null
  br i1 %tobool2.not.i251, label %lor.lhs.false.i.cleanup198_crit_edge, label %lor.lhs.false3.i

lor.lhs.false.i.cleanup198_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

lor.lhs.false3.i:                                 ; preds = %lor.lhs.false.i
  %arrayidx4.i = getelementptr inbounds ptr, ptr %tb_sa, i32 5
  %19 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx4.i, align 4
  %tobool5.not.i = icmp eq ptr %20, null
  br i1 %tobool5.not.i, label %lor.lhs.false3.i.cleanup198_crit_edge, label %if.end.i253

lor.lhs.false3.i.cleanup198_crit_edge:            ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end.i253:                                      ; preds = %lor.lhs.false3.i
  %add.ptr.i.i.i252 = getelementptr i8, ptr %16, i32 4
  %21 = ptrtoint ptr %add.ptr.i.i.i252 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %add.ptr.i.i.i252, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %22)
  %cmp.i = icmp ugt i8 %22, 3
  br i1 %cmp.i, label %if.end.i253.cleanup198_crit_edge, label %if.end9.i

if.end.i253.cleanup198_crit_edge:                 ; preds = %if.end.i253
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end9.i:                                        ; preds = %if.end.i253
  %arrayidx10.i = getelementptr inbounds ptr, ptr %tb_sa, i32 3
  %23 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx10.i, align 4
  %tobool11.not.i = icmp eq ptr %24, null
  br i1 %tobool11.not.i, label %if.end9.i.if.end17.i_crit_edge, label %land.lhs.true.i

if.end9.i.if.end17.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end17.i

land.lhs.true.i:                                  ; preds = %if.end9.i
  %add.ptr.i.i = getelementptr i8, ptr %24, i32 4
  %25 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %add.ptr.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %26)
  %cmp14.i = icmp eq i64 %26, 0
  br i1 %cmp14.i, label %land.lhs.true.i.cleanup198_crit_edge, label %land.lhs.true.i.if.end17.i_crit_edge

land.lhs.true.i.if.end17.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end17.i

land.lhs.true.i.cleanup198_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end17.i:                                       ; preds = %land.lhs.true.i.if.end17.i_crit_edge, %if.end9.i.if.end17.i_crit_edge
  %arrayidx18.i = getelementptr inbounds ptr, ptr %tb_sa, i32 2
  %27 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx18.i, align 4
  %tobool19.not.i = icmp eq ptr %28, null
  br i1 %tobool19.not.i, label %if.end17.i.validate_add_rxsa.exit_crit_edge, label %if.then20.i

if.end17.i.validate_add_rxsa.exit_crit_edge:      ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %validate_add_rxsa.exit

if.then20.i:                                      ; preds = %if.end17.i
  %add.ptr.i.i45.i = getelementptr i8, ptr %28, i32 4
  %29 = ptrtoint ptr %add.ptr.i.i45.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %add.ptr.i.i45.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %30)
  %cmp24.i = icmp ugt i8 %30, 1
  br i1 %cmp24.i, label %if.then20.i.cleanup198_crit_edge, label %if.then20.i.validate_add_rxsa.exit_crit_edge

if.then20.i.validate_add_rxsa.exit_crit_edge:     ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %validate_add_rxsa.exit

if.then20.i.cleanup198_crit_edge:                 ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

validate_add_rxsa.exit:                           ; preds = %if.then20.i.validate_add_rxsa.exit_crit_edge, %if.end17.i.validate_add_rxsa.exit_crit_edge
  %31 = ptrtoint ptr %20 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %20, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 20, i16 %32)
  %cmp31.not.i = icmp eq i16 %32, 20
  br i1 %cmp31.not.i, label %if.end13, label %validate_add_rxsa.exit.cleanup198_crit_edge

validate_add_rxsa.exit.cleanup198_crit_edge:      ; preds = %validate_add_rxsa.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup198

if.end13:                                         ; preds = %validate_add_rxsa.exit
  call void @rtnl_lock() #18
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %33 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %_net.i, align 4
  %35 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %36, i32 4
  %37 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %call1.i.i = call ptr @__dev_get_by_index(ptr noundef %34, i32 noundef %38) #18
  %tobool.not.i.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i.i, label %if.end13.if.then18_crit_edge, label %if.end.i.i

if.end13.if.then18_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then18

if.end.i.i:                                       ; preds = %if.end13
  %priv_flags.i.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i.i, i32 0, i32 15
  %39 = ptrtoint ptr %priv_flags.i.i.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %priv_flags.i.i.i, align 16
  %and.i.i.i = and i64 %40, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i.i.if.then18_crit_edge, label %get_dev_from_nl.exit.i

if.end.i.i.if.then18_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then18

get_dev_from_nl.exit.i:                           ; preds = %if.end.i.i
  %cmp.i.i = icmp ugt ptr %call1.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge, label %if.end.i258

get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge: ; preds = %get_dev_from_nl.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_rxsc_from_nl.exit

if.end.i258:                                      ; preds = %get_dev_from_nl.exit.i
  %41 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %2, align 4
  %tobool.not.i257 = icmp eq ptr %42, null
  br i1 %tobool.not.i257, label %if.end.i258.if.then18_crit_edge, label %if.end7.i

if.end.i258.if.then18_crit_edge:                  ; preds = %if.end.i258
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then18

if.end7.i:                                        ; preds = %if.end.i258
  %add.ptr.i.i.i255 = getelementptr i8, ptr %call1.i.i, i32 2304
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i.i) #18
  %43 = ptrtoint ptr %tmp.i.i.i to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 -1, ptr %tmp.i.i.i, align 8, !annotation !199
  %call.i.i.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i.i.i, ptr noundef nonnull %42, i32 noundef 8) #18
  %44 = ptrtoint ptr %tmp.i.i.i to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %tmp.i.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i.i) #18
  %call10.i = call fastcc ptr @find_rx_sc_rtnl(ptr noundef %add.ptr.i.i.i255, i64 noundef %45) #18
  %tobool11.not.i259 = icmp eq ptr %call10.i, null
  br i1 %tobool11.not.i259, label %if.end7.i.if.then18_crit_edge, label %if.end7.i.get_rxsc_from_nl.exit_crit_edge

if.end7.i.get_rxsc_from_nl.exit_crit_edge:        ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_rxsc_from_nl.exit

if.end7.i.if.then18_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then18

get_rxsc_from_nl.exit:                            ; preds = %if.end7.i.get_rxsc_from_nl.exit_crit_edge, %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge
  %dev.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge ], [ %call1.i.i, %if.end7.i.get_rxsc_from_nl.exit_crit_edge ]
  %secy.0 = phi ptr [ inttoptr (i32 -1 to ptr), %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge ], [ %add.ptr.i.i.i255, %if.end7.i.get_rxsc_from_nl.exit_crit_edge ]
  %retval.0.i260 = phi ptr [ %call1.i.i, %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge ], [ %call10.i, %if.end7.i.get_rxsc_from_nl.exit_crit_edge ]
  %cmp.i261 = icmp ugt ptr %retval.0.i260, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i261, label %get_rxsc_from_nl.exit.if.then18_crit_edge, label %if.end20

get_rxsc_from_nl.exit.if.then18_crit_edge:        ; preds = %get_rxsc_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then18

if.then18:                                        ; preds = %get_rxsc_from_nl.exit.if.then18_crit_edge, %if.end7.i.if.then18_crit_edge, %if.end.i258.if.then18_crit_edge, %if.end.i.i.if.then18_crit_edge, %if.end13.if.then18_crit_edge
  %retval.0.i260295 = phi ptr [ %retval.0.i260, %get_rxsc_from_nl.exit.if.then18_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i.i.if.then18_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end13.if.then18_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end7.i.if.then18_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i258.if.then18_crit_edge ]
  call void @rtnl_unlock() #18
  %46 = ptrtoint ptr %retval.0.i260295 to i32
  br label %cleanup198

if.end20:                                         ; preds = %get_rxsc_from_nl.exit
  %47 = ptrtoint ptr %arrayidx.i249 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx.i249, align 4
  %add.ptr.i.i262 = getelementptr i8, ptr %48, i32 4
  %49 = ptrtoint ptr %add.ptr.i.i262 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %add.ptr.i.i262, align 1
  %51 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %arrayidx1.i, align 4
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %52, align 2
  %conv.i = zext i16 %54 to i32
  %sub.i = add nsw i32 %conv.i, -4
  %key_len = getelementptr inbounds %struct.macsec_secy, ptr %secy.0, i32 0, i32 3
  %55 = ptrtoint ptr %key_len to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %key_len, align 8
  %conv = zext i16 %56 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %conv)
  %cmp.not = icmp eq i32 %sub.i, %conv
  br i1 %cmp.not, label %if.end32, label %do.end

do.end:                                           ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26, i32 noundef %sub.i, i32 noundef %conv) #21
  call void @rtnl_unlock() #18
  br label %cleanup198

if.end32:                                         ; preds = %if.end20
  %xpn = getelementptr inbounds %struct.macsec_secy, ptr %secy.0, i32 0, i32 6
  %57 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool33.not = icmp eq i8 %58, 0
  %cond = select i1 %tobool33.not, i32 4, i32 8
  %59 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx10.i, align 4
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %60, align 2
  %conv.i265 = zext i16 %62 to i32
  %sub.i266 = add nsw i32 %conv.i265, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i266, i32 %cond)
  %cmp37.not = icmp eq i32 %sub.i266, %cond
  br i1 %cmp37.not, label %if.end47, label %do.end42

do.end42:                                         ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #20
  %call46 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, i32 noundef %sub.i266, i32 noundef %cond) #21
  call void @rtnl_unlock() #18
  br label %cleanup198

if.end47:                                         ; preds = %if.end32
  br i1 %tobool33.not, label %if.end47.do.body71_crit_edge, label %if.then50

if.end47.do.body71_crit_edge:                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body71

if.then50:                                        ; preds = %if.end47
  %arrayidx51 = getelementptr inbounds [10 x ptr], ptr %tb_sa, i32 0, i32 8
  %63 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx51, align 4
  %tobool52.not = icmp eq ptr %64, null
  br i1 %tobool52.not, label %if.then50.if.then55_crit_edge, label %lor.lhs.false

if.then50.if.then55_crit_edge:                    ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then55

lor.lhs.false:                                    ; preds = %if.then50
  %arrayidx53 = getelementptr inbounds [10 x ptr], ptr %tb_sa, i32 0, i32 9
  %65 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %arrayidx53, align 4
  %tobool54.not = icmp eq ptr %66, null
  br i1 %tobool54.not, label %lor.lhs.false.if.then55_crit_edge, label %if.end56

lor.lhs.false.if.then55_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then55

if.then55:                                        ; preds = %lor.lhs.false.if.then55_crit_edge, %if.then50.if.then55_crit_edge
  call void @rtnl_unlock() #18
  br label %cleanup198

if.end56:                                         ; preds = %lor.lhs.false
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %66, align 2
  %conv.i269 = zext i16 %68 to i32
  %sub.i270 = add nsw i32 %conv.i269, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %sub.i270)
  %cmp59.not = icmp eq i32 %sub.i270, 12
  br i1 %cmp59.not, label %if.end56.do.body71_crit_edge, label %do.end64

if.end56.do.body71_crit_edge:                     ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body71

do.end64:                                         ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #20
  %call68 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.32, i32 noundef %sub.i270, i32 noundef 9) #21
  call void @rtnl_unlock() #18
  br label %cleanup198

do.body71:                                        ; preds = %if.end56.do.body71_crit_edge, %if.end47.do.body71_crit_edge
  %call72 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call72, label %do.body71.do.end80_crit_edge, label %land.lhs.true

do.body71.do.end80_crit_edge:                     ; preds = %do.body71
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end80

land.lhs.true:                                    ; preds = %do.body71
  %call73 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73)
  %tobool74.not = icmp eq i32 %call73, 0
  br i1 %tobool74.not, label %land.lhs.true.do.end80_crit_edge, label %land.lhs.true75

land.lhs.true.do.end80_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end80

land.lhs.true75:                                  ; preds = %land.lhs.true
  %.b238 = load i1, ptr @macsec_add_rxsa.__warned, align 1
  br i1 %.b238, label %land.lhs.true75.do.end80_crit_edge, label %if.then77

land.lhs.true75.do.end80_crit_edge:               ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end80

if.then77:                                        ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_add_rxsa.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1776, ptr noundef nonnull @.str.4) #18
  br label %do.end80

do.end80:                                         ; preds = %if.then77, %land.lhs.true75.do.end80_crit_edge, %land.lhs.true.do.end80_crit_edge, %do.body71.do.end80_crit_edge
  %idxprom = zext i8 %50 to i32
  %arrayidx82 = getelementptr %struct.macsec_rx_sc, ptr %retval.0.i260, i32 0, i32 3, i32 %idxprom
  %69 = ptrtoint ptr %arrayidx82 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %arrayidx82, align 4
  %tobool83.not = icmp eq ptr %70, null
  br i1 %tobool83.not, label %if.end85, label %if.then84

if.then84:                                        ; preds = %do.end80
  call void @__sanitizer_cov_trace_pc() #20
  call void @rtnl_unlock() #18
  br label %cleanup198

if.end85:                                         ; preds = %do.end80
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %71 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %71, i32 noundef 3264, i32 noundef 112) #22
  %tobool87.not = icmp eq ptr %call7.i, null
  br i1 %tobool87.not, label %if.then88, label %if.end89

if.then88:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #20
  call void @rtnl_unlock() #18
  br label %cleanup198

if.end89:                                         ; preds = %if.end85
  %72 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx1.i, align 4
  %add.ptr.i = getelementptr i8, ptr %73, i32 4
  %74 = ptrtoint ptr %key_len to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %key_len, align 8
  %conv93 = zext i16 %75 to i32
  %icv_len = getelementptr inbounds %struct.macsec_secy, ptr %secy.0, i32 0, i32 4
  %76 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %icv_len, align 2
  %conv94 = zext i16 %77 to i32
  %call95 = call fastcc i32 @init_rx_sa(ptr noundef nonnull %call7.i, ptr noundef %add.ptr.i, i32 noundef %conv93, i32 noundef %conv94)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call95)
  %cmp96 = icmp slt i32 %call95, 0
  br i1 %cmp96, label %if.then98, label %if.end99

if.then98:                                        ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree(ptr noundef nonnull %call7.i) #18
  call void @rtnl_unlock() #18
  br label %cleanup198

if.end99:                                         ; preds = %if.end89
  %78 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arrayidx10.i, align 4
  %tobool101.not = icmp eq ptr %79, null
  br i1 %tobool101.not, label %if.end99.if.end106_crit_edge, label %if.then102

if.end99.if.end106_crit_edge:                     ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end106

if.then102:                                       ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #20
  %lock = getelementptr inbounds %struct.macsec_rx_sa, ptr %call7.i, i32 0, i32 2
  call void @_raw_spin_lock_bh(ptr noundef %lock) #18
  %80 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %arrayidx10.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %82 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %82)
  store i64 -1, ptr %tmp.i, align 8, !annotation !199
  %call.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i, ptr noundef %81, i32 noundef 8) #18
  %83 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %tmp.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  %85 = getelementptr inbounds %struct.macsec_rx_sa, ptr %call7.i, i32 0, i32 3
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_store8_noabort(i32 %86)
  store i64 %84, ptr %85, align 8
  call void @_raw_spin_unlock_bh(ptr noundef %lock) #18
  br label %if.end106

if.end106:                                        ; preds = %if.then102, %if.end99.if.end106_crit_edge
  %87 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %arrayidx18.i, align 4
  %tobool108.not = icmp eq ptr %88, null
  br i1 %tobool108.not, label %if.end106.if.end114_crit_edge, label %if.then109

if.end106.if.end114_crit_edge:                    ; preds = %if.end106
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end114

if.then109:                                       ; preds = %if.end106
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i273 = getelementptr i8, ptr %88, i32 4
  %89 = ptrtoint ptr %add.ptr.i.i273 to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %add.ptr.i.i273, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool112 = icmp ne i8 %90, 0
  %active = getelementptr inbounds %struct.macsec_rx_sa, ptr %call7.i, i32 0, i32 5
  %frombool = zext i1 %tobool112 to i8
  %91 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %91)
  store i8 %frombool, ptr %active, align 4
  br label %if.end114

if.end114:                                        ; preds = %if.then109, %if.end106.if.end114_crit_edge
  %sc = getelementptr inbounds %struct.macsec_rx_sa, ptr %call7.i, i32 0, i32 7
  %92 = ptrtoint ptr %sc to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %retval.0.i260, ptr %sc, align 4
  %offload.i = getelementptr i8, ptr %dev.0, i32 2388
  %93 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %94, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then117, label %if.end114.if.end138_crit_edge

if.end114.if.end138_crit_edge:                    ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end138

if.then117:                                       ; preds = %if.end114
  %add.ptr.i274 = getelementptr i8, ptr %dev.0, i32 2304
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %95 = call ptr @memset(ptr %ctx, i32 255, i32 160)
  %call119 = call fastcc ptr @macsec_get_ops(ptr noundef %add.ptr.i274, ptr noundef nonnull %ctx)
  %tobool120.not = icmp eq ptr %call119, null
  br i1 %tobool120.not, label %if.then117.cleanup197_crit_edge, label %if.end122

if.then117.cleanup197_crit_edge:                  ; preds = %if.then117
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup197

if.end122:                                        ; preds = %if.then117
  %sa123 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4
  %96 = ptrtoint ptr %sa123 to i32
  call void @__asan_store1_noabort(i32 %96)
  store i8 %50, ptr %sa123, align 4
  %97 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 2
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr %call7.i, ptr %97, align 4
  %secy126 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %99 = ptrtoint ptr %secy126 to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr %secy.0, ptr %secy126, align 4
  %key = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 1
  %100 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %arrayidx1.i, align 4
  %add.ptr.i276 = getelementptr i8, ptr %101, i32 4
  %102 = ptrtoint ptr %key_len to i32
  call void @__asan_load2_noabort(i32 %102)
  %103 = load i16, ptr %key_len, align 8
  %conv132 = zext i16 %103 to i32
  %104 = call ptr @memcpy(ptr %key, ptr %add.ptr.i276, i32 %conv132)
  %mdo_add_rxsa = getelementptr inbounds %struct.macsec_ops, ptr %call119, i32 0, i32 8
  %105 = ptrtoint ptr %mdo_add_rxsa to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %mdo_add_rxsa, align 4
  %call133 = call fastcc i32 @macsec_offload(ptr noundef %106, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call133)
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %cleanup, label %if.end122.cleanup197_crit_edge

if.end122.cleanup197_crit_edge:                   ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup197

cleanup:                                          ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end138

if.end138:                                        ; preds = %cleanup, %if.end114.if.end138_crit_edge
  %107 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %108)
  %tobool140.not = icmp eq i8 %108, 0
  br i1 %tobool140.not, label %if.end138.if.end148_crit_edge, label %if.then141

if.end138.if.end148_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end148

if.then141:                                       ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #20
  %arrayidx142 = getelementptr inbounds [10 x ptr], ptr %tb_sa, i32 0, i32 8
  %109 = ptrtoint ptr %arrayidx142 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %arrayidx142, align 4
  %add.ptr.i.i.i277 = getelementptr i8, ptr %110, i32 4
  %111 = ptrtoint ptr %add.ptr.i.i.i277 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %add.ptr.i.i.i277, align 4
  %ssci = getelementptr inbounds %struct.macsec_rx_sa, ptr %call7.i, i32 0, i32 1
  %113 = ptrtoint ptr %ssci to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %112, ptr %ssci, align 8
  %salt = getelementptr inbounds %struct.macsec_key, ptr %call7.i, i32 0, i32 2
  %arrayidx146 = getelementptr inbounds [10 x ptr], ptr %tb_sa, i32 0, i32 9
  %114 = ptrtoint ptr %arrayidx146 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %arrayidx146, align 4
  %call147 = call i32 @nla_memcpy(ptr noundef %salt, ptr noundef %115, i32 noundef 12) #18
  br label %if.end148

if.end148:                                        ; preds = %if.then141, %if.end138.if.end148_crit_edge
  %116 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %arrayidx4.i, align 4
  %call152 = call i32 @nla_memcpy(ptr noundef nonnull %call7.i, ptr noundef %117, i32 noundef 16) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !209
  %118 = ptrtoint ptr %arrayidx82 to i32
  call void @__asan_store4_noabort(i32 %118)
  store volatile ptr %call7.i, ptr %arrayidx82, align 4
  call void @rtnl_unlock() #18
  br label %cleanup198

cleanup197:                                       ; preds = %if.end122.cleanup197_crit_edge, %if.then117.cleanup197_crit_edge
  %err.0.ph = phi i32 [ %call133, %if.end122.cleanup197_crit_edge ], [ -95, %if.then117.cleanup197_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  call void @kfree(ptr noundef nonnull %call7.i) #18
  call void @rtnl_unlock() #18
  br label %cleanup198

cleanup198:                                       ; preds = %cleanup197, %if.end148, %if.then98, %if.then88, %if.then84, %do.end64, %if.then55, %do.end42, %do.end, %if.then18, %validate_add_rxsa.exit.cleanup198_crit_edge, %if.then20.i.cleanup198_crit_edge, %land.lhs.true.i.cleanup198_crit_edge, %if.end.i253.cleanup198_crit_edge, %lor.lhs.false3.i.cleanup198_crit_edge, %lor.lhs.false.i.cleanup198_crit_edge, %if.end9.cleanup198_crit_edge, %if.end.i247.cleanup198_crit_edge, %if.end4.cleanup198_crit_edge, %if.end.i.cleanup198_crit_edge, %if.end.cleanup198_crit_edge, %entry.cleanup198_crit_edge
  %retval.0 = phi i32 [ %46, %if.then18 ], [ -22, %do.end ], [ -22, %do.end42 ], [ -22, %do.end64 ], [ -16, %if.then84 ], [ %call95, %if.then98 ], [ %err.0.ph, %cleanup197 ], [ 0, %if.end148 ], [ -12, %if.then88 ], [ -22, %if.then55 ], [ -22, %entry.cleanup198_crit_edge ], [ -22, %validate_add_rxsa.exit.cleanup198_crit_edge ], [ -22, %if.end.cleanup198_crit_edge ], [ -22, %if.end.i.cleanup198_crit_edge ], [ -22, %if.end4.cleanup198_crit_edge ], [ -22, %if.end.i247.cleanup198_crit_edge ], [ -22, %lor.lhs.false3.i.cleanup198_crit_edge ], [ -22, %lor.lhs.false.i.cleanup198_crit_edge ], [ -22, %if.end9.cleanup198_crit_edge ], [ -22, %if.end.i253.cleanup198_crit_edge ], [ -22, %land.lhs.true.i.cleanup198_crit_edge ], [ -22, %if.then20.i.cleanup198_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %tb_sa) #18
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %tb_rxsc) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_del_rxsa(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %dev = alloca ptr, align 4
  %secy = alloca ptr, align 4
  %rx_sc = alloca ptr, align 4
  %assoc_num = alloca i8, align 1
  %tb_rxsc = alloca [6 x ptr], align 4
  %tb_sa = alloca [10 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dev) #18
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %dev, align 4, !annotation !199
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %secy) #18
  %3 = ptrtoint ptr %secy to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %secy, align 4, !annotation !199
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rx_sc) #18
  %4 = ptrtoint ptr %rx_sc to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %rx_sc, align 4, !annotation !199
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %assoc_num) #18
  %5 = ptrtoint ptr %assoc_num to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 -1, ptr %assoc_num, align 1, !annotation !199
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %tb_rxsc) #18
  %6 = call ptr @memset(ptr %tb_rxsc, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %tb_sa) #18
  %7 = call ptr @memset(ptr %tb_sa, i32 255, i32 40)
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %entry.cleanup50_crit_edge, label %if.end

entry.cleanup50_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup50

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 3
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %if.end.cleanup50_crit_edge, label %if.end.i

if.end.cleanup50_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup50

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %11, i32 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %11, align 2
  %conv.i.i.i = zext i16 %13 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_sa, i32 noundef 9, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_sa_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup50_crit_edge

if.end.i.cleanup50_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup50

if.end4:                                          ; preds = %if.end.i
  %arrayidx.i70 = getelementptr ptr, ptr %1, i32 2
  %14 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.i70, align 4
  %tobool.not.i71 = icmp eq ptr %15, null
  br i1 %tobool.not.i71, label %if.end4.cleanup50_crit_edge, label %if.end.i78

if.end4.cleanup50_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup50

if.end.i78:                                       ; preds = %if.end4
  %add.ptr.i.i.i72 = getelementptr i8, ptr %15, i32 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %15, align 2
  %conv.i.i.i73 = zext i16 %17 to i32
  %sub.i.i.i74 = add nsw i32 %conv.i.i.i73, -4
  %call2.i.i75 = call i32 @__nla_parse(ptr noundef nonnull %tb_rxsc, i32 noundef 5, ptr noundef %add.ptr.i.i.i72, i32 noundef %sub.i.i.i74, ptr noundef nonnull @macsec_genl_rxsc_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i75)
  %tobool2.not.i76 = icmp eq i32 %call2.i.i75, 0
  br i1 %tobool2.not.i76, label %if.end9, label %if.end.i78.cleanup50_crit_edge

if.end.i78.cleanup50_crit_edge:                   ; preds = %if.end.i78
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup50

if.end9:                                          ; preds = %if.end.i78
  call void @rtnl_lock() #18
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %18 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %_net.i, align 4
  %call13 = call fastcc ptr @get_rxsa_from_nl(ptr noundef %19, ptr noundef %1, ptr noundef nonnull %tb_rxsc, ptr noundef nonnull %tb_sa, ptr noundef nonnull %dev, ptr noundef nonnull %secy, ptr noundef nonnull %rx_sc, ptr noundef nonnull %assoc_num)
  %cmp.i = icmp ugt ptr %call13, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  call void @rtnl_unlock() #18
  %20 = ptrtoint ptr %call13 to i32
  br label %cleanup50

if.end17:                                         ; preds = %if.end9
  %active = getelementptr inbounds %struct.macsec_rx_sa, ptr %call13, i32 0, i32 5
  %21 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %active, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool18.not = icmp eq i8 %22, 0
  br i1 %tobool18.not, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #20
  call void @rtnl_unlock() #18
  br label %cleanup50

if.end20:                                         ; preds = %if.end17
  %23 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dev, align 4
  %offload.i = getelementptr i8, ptr %24, i32 2388
  %25 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %26, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then23, label %if.end20.do.body40_crit_edge

if.end20.do.body40_crit_edge:                     ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body40

if.then23:                                        ; preds = %if.end20
  %add.ptr.i = getelementptr i8, ptr %24, i32 2304
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %27 = call ptr @memset(ptr %ctx, i32 255, i32 160)
  %call25 = call fastcc ptr @macsec_get_ops(ptr noundef %add.ptr.i, ptr noundef nonnull %ctx)
  %tobool26.not = icmp eq ptr %call25, null
  br i1 %tobool26.not, label %if.then23.cleanup49_crit_edge, label %if.end28

if.then23.cleanup49_crit_edge:                    ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup49

if.end28:                                         ; preds = %if.then23
  %28 = ptrtoint ptr %assoc_num to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %assoc_num, align 1
  %sa = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4
  %30 = ptrtoint ptr %sa to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %sa, align 4
  %31 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 2
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %call13, ptr %31, align 4
  %33 = ptrtoint ptr %secy to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %secy, align 4
  %secy31 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %35 = ptrtoint ptr %secy31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %34, ptr %secy31, align 4
  %mdo_del_rxsa = getelementptr inbounds %struct.macsec_ops, ptr %call25, i32 0, i32 10
  %36 = ptrtoint ptr %mdo_del_rxsa to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mdo_del_rxsa, align 4
  %call32 = call fastcc i32 @macsec_offload(ptr noundef %37, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %cleanup, label %if.end28.cleanup49_crit_edge

if.end28.cleanup49_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup49

cleanup:                                          ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %do.body40

do.body40:                                        ; preds = %cleanup, %if.end20.do.body40_crit_edge
  %38 = ptrtoint ptr %rx_sc to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %rx_sc, align 4
  %40 = ptrtoint ptr %assoc_num to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %assoc_num, align 1
  %idxprom = zext i8 %41 to i32
  %arrayidx42 = getelementptr %struct.macsec_rx_sc, ptr %39, i32 0, i32 3, i32 %idxprom
  %42 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr null, ptr %arrayidx42, align 4
  call fastcc void @clear_rx_sa(ptr noundef %call13)
  call void @rtnl_unlock() #18
  br label %cleanup50

cleanup49:                                        ; preds = %if.end28.cleanup49_crit_edge, %if.then23.cleanup49_crit_edge
  %ret.0.ph = phi i32 [ %call32, %if.end28.cleanup49_crit_edge ], [ -95, %if.then23.cleanup49_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  call void @rtnl_unlock() #18
  br label %cleanup50

cleanup50:                                        ; preds = %cleanup49, %do.body40, %if.then19, %if.then15, %if.end.i78.cleanup50_crit_edge, %if.end4.cleanup50_crit_edge, %if.end.i.cleanup50_crit_edge, %if.end.cleanup50_crit_edge, %entry.cleanup50_crit_edge
  %retval.0 = phi i32 [ %20, %if.then15 ], [ -16, %if.then19 ], [ %ret.0.ph, %cleanup49 ], [ 0, %do.body40 ], [ -22, %entry.cleanup50_crit_edge ], [ -22, %if.end.cleanup50_crit_edge ], [ -22, %if.end.i.cleanup50_crit_edge ], [ -22, %if.end4.cleanup50_crit_edge ], [ -22, %if.end.i78.cleanup50_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %tb_sa) #18
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %tb_rxsc) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %assoc_num) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rx_sc) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %secy) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dev) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_upd_rxsa(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tmp.i = alloca i64, align 8
  %dev = alloca ptr, align 4
  %secy = alloca ptr, align 4
  %rx_sc = alloca ptr, align 4
  %assoc_num = alloca i8, align 1
  %tb_rxsc = alloca [6 x ptr], align 4
  %tb_sa = alloca [10 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %0 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dev) #18
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %dev, align 4, !annotation !199
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %secy) #18
  %3 = ptrtoint ptr %secy to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %secy, align 4, !annotation !199
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rx_sc) #18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %assoc_num) #18
  %4 = ptrtoint ptr %assoc_num to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 -1, ptr %assoc_num, align 1, !annotation !199
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %tb_rxsc) #18
  %5 = call ptr @memset(ptr %tb_rxsc, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %tb_sa) #18
  %6 = call ptr @memset(ptr %tb_sa, i32 255, i32 40)
  %arrayidx = getelementptr ptr, ptr %1, i32 1
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %entry.cleanup77_crit_edge, label %if.end

entry.cleanup77_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr ptr, ptr %1, i32 2
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %if.end.cleanup77_crit_edge, label %if.end.i

if.end.cleanup77_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end.i:                                         ; preds = %if.end
  %add.ptr.i.i.i = getelementptr i8, ptr %10, i32 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %10, align 2
  %conv.i.i.i = zext i16 %12 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -4
  %call2.i.i = call i32 @__nla_parse(ptr noundef nonnull %tb_rxsc, i32 noundef 5, ptr noundef %add.ptr.i.i.i, i32 noundef %sub.i.i.i, ptr noundef nonnull @macsec_genl_rxsc_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool2.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool2.not.i, label %if.end4, label %if.end.i.cleanup77_crit_edge

if.end.i.cleanup77_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end4:                                          ; preds = %if.end.i
  %arrayidx.i112 = getelementptr ptr, ptr %1, i32 3
  %13 = ptrtoint ptr %arrayidx.i112 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx.i112, align 4
  %tobool.not.i113 = icmp eq ptr %14, null
  br i1 %tobool.not.i113, label %if.end4.cleanup77_crit_edge, label %if.end.i120

if.end4.cleanup77_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end.i120:                                      ; preds = %if.end4
  %add.ptr.i.i.i114 = getelementptr i8, ptr %14, i32 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %14, align 2
  %conv.i.i.i115 = zext i16 %16 to i32
  %sub.i.i.i116 = add nsw i32 %conv.i.i.i115, -4
  %call2.i.i117 = call i32 @__nla_parse(ptr noundef nonnull %tb_sa, i32 noundef 9, ptr noundef %add.ptr.i.i.i114, i32 noundef %sub.i.i.i116, ptr noundef nonnull @macsec_genl_sa_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i117)
  %tobool2.not.i118 = icmp eq i32 %call2.i.i117, 0
  br i1 %tobool2.not.i118, label %if.end9, label %if.end.i120.cleanup77_crit_edge

if.end.i120.cleanup77_crit_edge:                  ; preds = %if.end.i120
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end9:                                          ; preds = %if.end.i120
  %arrayidx.i122 = getelementptr inbounds ptr, ptr %tb_sa, i32 1
  %17 = ptrtoint ptr %arrayidx.i122 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i122, align 4
  %tobool.not.i123 = icmp eq ptr %18, null
  br i1 %tobool.not.i123, label %if.end9.cleanup77_crit_edge, label %lor.lhs.false.i

if.end9.cleanup77_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

lor.lhs.false.i:                                  ; preds = %if.end9
  %arrayidx1.i = getelementptr inbounds ptr, ptr %tb_sa, i32 4
  %19 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx1.i, align 4
  %tobool2.not.i124 = icmp eq ptr %20, null
  br i1 %tobool2.not.i124, label %lor.lhs.false3.i, label %lor.lhs.false.i.cleanup77_crit_edge

lor.lhs.false.i.cleanup77_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

lor.lhs.false3.i:                                 ; preds = %lor.lhs.false.i
  %arrayidx4.i = getelementptr inbounds ptr, ptr %tb_sa, i32 5
  %21 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx4.i, align 4
  %tobool5.not.i = icmp eq ptr %22, null
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false3.i.cleanup77_crit_edge

lor.lhs.false3.i.cleanup77_crit_edge:             ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false3.i
  %arrayidx7.i = getelementptr inbounds ptr, ptr %tb_sa, i32 8
  %23 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx7.i, align 4
  %tobool8.not.i = icmp eq ptr %24, null
  br i1 %tobool8.not.i, label %lor.lhs.false9.i, label %lor.lhs.false6.i.cleanup77_crit_edge

lor.lhs.false6.i.cleanup77_crit_edge:             ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

lor.lhs.false9.i:                                 ; preds = %lor.lhs.false6.i
  %arrayidx10.i = getelementptr inbounds ptr, ptr %tb_sa, i32 9
  %25 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx10.i, align 4
  %tobool11.not.i = icmp eq ptr %26, null
  br i1 %tobool11.not.i, label %if.end.i126, label %lor.lhs.false9.i.cleanup77_crit_edge

lor.lhs.false9.i.cleanup77_crit_edge:             ; preds = %lor.lhs.false9.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end.i126:                                      ; preds = %lor.lhs.false9.i
  %add.ptr.i.i.i125 = getelementptr i8, ptr %18, i32 4
  %27 = ptrtoint ptr %add.ptr.i.i.i125 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %add.ptr.i.i.i125, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %28)
  %cmp.i = icmp ugt i8 %28, 3
  br i1 %cmp.i, label %if.end.i126.cleanup77_crit_edge, label %if.end15.i

if.end.i126.cleanup77_crit_edge:                  ; preds = %if.end.i126
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end15.i:                                       ; preds = %if.end.i126
  %arrayidx16.i = getelementptr inbounds ptr, ptr %tb_sa, i32 3
  %29 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx16.i, align 4
  %tobool17.not.i = icmp eq ptr %30, null
  br i1 %tobool17.not.i, label %if.end15.i.if.end23.i_crit_edge, label %land.lhs.true.i

if.end15.i.if.end23.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end23.i

land.lhs.true.i:                                  ; preds = %if.end15.i
  %add.ptr.i.i46.i = getelementptr i8, ptr %30, i32 4
  %31 = ptrtoint ptr %add.ptr.i.i46.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %add.ptr.i.i46.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp20.i = icmp eq i32 %32, 0
  br i1 %cmp20.i, label %land.lhs.true.i.cleanup77_crit_edge, label %land.lhs.true.i.if.end23.i_crit_edge

land.lhs.true.i.if.end23.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end23.i

land.lhs.true.i.cleanup77_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end23.i:                                       ; preds = %land.lhs.true.i.if.end23.i_crit_edge, %if.end15.i.if.end23.i_crit_edge
  %arrayidx24.i = getelementptr inbounds ptr, ptr %tb_sa, i32 2
  %33 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx24.i, align 4
  %tobool25.not.i = icmp eq ptr %34, null
  br i1 %tobool25.not.i, label %if.end23.i.if.end13_crit_edge, label %if.then26.i

if.end23.i.if.end13_crit_edge:                    ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end13

if.then26.i:                                      ; preds = %if.end23.i
  %add.ptr.i.i47.i = getelementptr i8, ptr %34, i32 4
  %35 = ptrtoint ptr %add.ptr.i.i47.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %add.ptr.i.i47.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %36)
  %cmp30.i = icmp ugt i8 %36, 1
  br i1 %cmp30.i, label %if.then26.i.cleanup77_crit_edge, label %if.then26.i.if.end13_crit_edge

if.then26.i.if.end13_crit_edge:                   ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end13

if.then26.i.cleanup77_crit_edge:                  ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup77

if.end13:                                         ; preds = %if.then26.i.if.end13_crit_edge, %if.end23.i.if.end13_crit_edge
  call void @rtnl_lock() #18
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %37 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %_net.i, align 4
  %call17 = call fastcc ptr @get_rxsa_from_nl(ptr noundef %38, ptr noundef %1, ptr noundef nonnull %tb_rxsc, ptr noundef nonnull %tb_sa, ptr noundef nonnull %dev, ptr noundef nonnull %secy, ptr noundef nonnull %rx_sc, ptr noundef nonnull %assoc_num)
  %cmp.i128 = icmp ugt ptr %call17, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i128, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #20
  call void @rtnl_unlock() #18
  %39 = ptrtoint ptr %call17 to i32
  br label %cleanup77

if.end21:                                         ; preds = %if.end13
  %40 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx16.i, align 4
  %tobool23.not = icmp eq ptr %41, null
  br i1 %tobool23.not, label %if.end21.if.end36_crit_edge, label %if.then24

if.end21.if.end36_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end36

if.then24:                                        ; preds = %if.end21
  %42 = ptrtoint ptr %secy to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %secy, align 4
  %xpn = getelementptr inbounds %struct.macsec_secy, ptr %43, i32 0, i32 6
  %44 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool25.not = icmp eq i8 %45, 0
  %cond = select i1 %tobool25.not, i32 4, i32 8
  %46 = ptrtoint ptr %41 to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %41, align 2
  %conv.i = zext i16 %47 to i32
  %sub.i = add nsw i32 %conv.i, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %cond)
  %cmp.not = icmp eq i32 %sub.i, %cond
  br i1 %cmp.not, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #20
  %lock = getelementptr inbounds %struct.macsec_rx_sa, ptr %call17, i32 0, i32 2
  call void @_raw_spin_lock_bh(ptr noundef %lock) #18
  %48 = getelementptr inbounds %struct.macsec_rx_sa, ptr %call17, i32 0, i32 3
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load8_noabort(i32 %49)
  %prev_pn.sroa.0.0.copyload = load i64, ptr %48, align 8
  %50 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx16.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %52 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 -1, ptr %tmp.i, align 8, !annotation !199
  %call.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i, ptr noundef %51, i32 noundef 8) #18
  %53 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %tmp.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  %55 = ptrtoint ptr %48 to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %54, ptr %48, align 8
  call void @_raw_spin_unlock_bh(ptr noundef %lock) #18
  br label %if.end36

cleanup:                                          ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #20
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.35, i32 noundef %sub.i, i32 noundef %cond) #21
  call void @rtnl_unlock() #18
  br label %cleanup77

if.end36:                                         ; preds = %cleanup.thread, %if.end21.if.end36_crit_edge
  %prev_pn.sroa.0.1 = phi i64 [ 0, %if.end21.if.end36_crit_edge ], [ %prev_pn.sroa.0.0.copyload, %cleanup.thread ]
  %active = getelementptr inbounds %struct.macsec_rx_sa, ptr %call17, i32 0, i32 5
  %56 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %active, align 4, !range !198
  %58 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx24.i, align 4
  %tobool39.not = icmp eq ptr %59, null
  br i1 %tobool39.not, label %if.end36.if.end46_crit_edge, label %if.then40

if.end36.if.end46_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end46

if.then40:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i = getelementptr i8, ptr %59, i32 4
  %60 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %add.ptr.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %tobool43 = icmp ne i8 %61, 0
  %frombool45 = zext i1 %tobool43 to i8
  %62 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 %frombool45, ptr %active, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then40, %if.end36.if.end46_crit_edge
  %63 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %dev, align 4
  %offload.i = getelementptr i8, ptr %64, i32 2388
  %65 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %66, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then49, label %if.end46.if.end66_crit_edge

if.end46.if.end66_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end66

if.then49:                                        ; preds = %if.end46
  %add.ptr.i = getelementptr i8, ptr %64, i32 2304
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %67 = call ptr @memset(ptr %ctx, i32 255, i32 160)
  %call51 = call fastcc ptr @macsec_get_ops(ptr noundef %add.ptr.i, ptr noundef nonnull %ctx)
  %tobool52.not = icmp eq ptr %call51, null
  br i1 %tobool52.not, label %if.then49.cleanup67_crit_edge, label %if.end54

if.then49.cleanup67_crit_edge:                    ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup67

if.end54:                                         ; preds = %if.then49
  %68 = ptrtoint ptr %assoc_num to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %assoc_num, align 1
  %sa = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4
  %70 = ptrtoint ptr %sa to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %69, ptr %sa, align 4
  %71 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 2
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %call17, ptr %71, align 4
  %73 = ptrtoint ptr %secy to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %secy, align 4
  %secy57 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %75 = ptrtoint ptr %secy57 to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %74, ptr %secy57, align 4
  %mdo_upd_rxsa = getelementptr inbounds %struct.macsec_ops, ptr %call51, i32 0, i32 9
  %76 = ptrtoint ptr %mdo_upd_rxsa to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %mdo_upd_rxsa, align 4
  %call58 = call fastcc i32 @macsec_offload(ptr noundef %77, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %cleanup62, label %if.end54.cleanup67_crit_edge

if.end54.cleanup67_crit_edge:                     ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup67

cleanup62:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end66

if.end66:                                         ; preds = %cleanup62, %if.end46.if.end66_crit_edge
  call void @rtnl_unlock() #18
  br label %cleanup77

cleanup67:                                        ; preds = %if.end54.cleanup67_crit_edge, %if.then49.cleanup67_crit_edge
  %ret.0.ph = phi i32 [ %call58, %if.end54.cleanup67_crit_edge ], [ -95, %if.then49.cleanup67_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  %78 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arrayidx16.i, align 4
  %tobool69.not = icmp eq ptr %79, null
  br i1 %tobool69.not, label %cleanup67.if.end73_crit_edge, label %if.then70

cleanup67.if.end73_crit_edge:                     ; preds = %cleanup67
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end73

if.then70:                                        ; preds = %cleanup67
  call void @__sanitizer_cov_trace_pc() #20
  %lock71 = getelementptr inbounds %struct.macsec_rx_sa, ptr %call17, i32 0, i32 2
  call void @_raw_spin_lock_bh(ptr noundef %lock71) #18
  %80 = getelementptr inbounds %struct.macsec_rx_sa, ptr %call17, i32 0, i32 3
  %81 = ptrtoint ptr %80 to i32
  call void @__asan_store8_noabort(i32 %81)
  store i64 %prev_pn.sroa.0.1, ptr %80, align 8
  call void @_raw_spin_unlock_bh(ptr noundef %lock71) #18
  br label %if.end73

if.end73:                                         ; preds = %if.then70, %cleanup67.if.end73_crit_edge
  %82 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 %57, ptr %active, align 4
  call void @rtnl_unlock() #18
  br label %cleanup77

cleanup77:                                        ; preds = %if.end73, %if.end66, %cleanup, %if.then19, %if.then26.i.cleanup77_crit_edge, %land.lhs.true.i.cleanup77_crit_edge, %if.end.i126.cleanup77_crit_edge, %lor.lhs.false9.i.cleanup77_crit_edge, %lor.lhs.false6.i.cleanup77_crit_edge, %lor.lhs.false3.i.cleanup77_crit_edge, %lor.lhs.false.i.cleanup77_crit_edge, %if.end9.cleanup77_crit_edge, %if.end.i120.cleanup77_crit_edge, %if.end4.cleanup77_crit_edge, %if.end.i.cleanup77_crit_edge, %if.end.cleanup77_crit_edge, %entry.cleanup77_crit_edge
  %retval.2 = phi i32 [ %39, %if.then19 ], [ %ret.0.ph, %if.end73 ], [ 0, %if.end66 ], [ -22, %cleanup ], [ -22, %entry.cleanup77_crit_edge ], [ -22, %if.end.cleanup77_crit_edge ], [ -22, %if.end.i.cleanup77_crit_edge ], [ -22, %if.end4.cleanup77_crit_edge ], [ -22, %if.end.i120.cleanup77_crit_edge ], [ -22, %lor.lhs.false9.i.cleanup77_crit_edge ], [ -22, %lor.lhs.false6.i.cleanup77_crit_edge ], [ -22, %lor.lhs.false3.i.cleanup77_crit_edge ], [ -22, %lor.lhs.false.i.cleanup77_crit_edge ], [ -22, %if.end9.cleanup77_crit_edge ], [ -22, %if.end.i126.cleanup77_crit_edge ], [ -22, %land.lhs.true.i.cleanup77_crit_edge ], [ -22, %if.then26.i.cleanup77_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %tb_sa) #18
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %tb_rxsc) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %assoc_num) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rx_sc) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %secy) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dev) #18
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_upd_offload(ptr nocapture noundef readnone %skb, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  %tb_offload = alloca [3 x ptr], align 4
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %tb_offload) #18
  %0 = ptrtoint ptr %tb_offload to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %tb_offload, align 4, !annotation !199
  %1 = getelementptr inbounds [3 x ptr], ptr %tb_offload, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !199
  %3 = getelementptr inbounds [3 x ptr], ptr %tb_offload, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %3, align 4, !annotation !199
  %attrs1 = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 5
  %5 = ptrtoint ptr %attrs1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %attrs1, align 4
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %7 = call ptr @memset(ptr %ctx, i32 255, i32 160)
  %arrayidx = getelementptr ptr, ptr %6, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx2 = getelementptr ptr, ptr %6, i32 9
  %10 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx2, align 4
  %tobool3.not = icmp eq ptr %11, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.ptr.i.i = getelementptr i8, ptr %11, i32 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %11, align 2
  %conv.i.i = zext i16 %13 to i32
  %sub.i.i = add nsw i32 %conv.i.i, -4
  %call2.i = call i32 @__nla_parse(ptr noundef nonnull %tb_offload, i32 noundef 2, ptr noundef %add.ptr.i.i, i32 noundef %sub.i.i, ptr noundef nonnull @macsec_genl_offload_policy, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool7.not = icmp eq i32 %call2.i, 0
  br i1 %tobool7.not, label %if.end9, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %_net.i = getelementptr inbounds %struct.genl_info, ptr %info, i32 0, i32 6
  %14 = ptrtoint ptr %_net.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %_net.i, align 4
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %17, i32 4
  %18 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %add.ptr.i.i.i, align 4
  %call1.i = call ptr @__dev_get_by_index(ptr noundef %15, i32 noundef %19) #18
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %if.end9.if.then13_crit_edge, label %if.end.i

if.end9.if.then13_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.end.i:                                         ; preds = %if.end9
  %priv_flags.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i, i32 0, i32 15
  %20 = ptrtoint ptr %priv_flags.i.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %priv_flags.i.i, align 16
  %and.i.i = and i64 %21, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.i.not.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end.i.if.then13_crit_edge, label %get_dev_from_nl.exit

if.end.i.if.then13_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

get_dev_from_nl.exit:                             ; preds = %if.end.i
  %cmp.i = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %get_dev_from_nl.exit.if.then13_crit_edge, label %if.end15

get_dev_from_nl.exit.if.then13_crit_edge:         ; preds = %get_dev_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.then13:                                        ; preds = %get_dev_from_nl.exit.if.then13_crit_edge, %if.end.i.if.then13_crit_edge, %if.end9.if.then13_crit_edge
  %retval.0.i99 = phi ptr [ %call1.i, %get_dev_from_nl.exit.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end9.if.then13_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i.if.then13_crit_edge ]
  %22 = ptrtoint ptr %retval.0.i99 to i32
  br label %cleanup

if.end15:                                         ; preds = %get_dev_from_nl.exit
  %add.ptr.i.i91 = getelementptr i8, ptr %call1.i, i32 2304
  %23 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %1, align 4
  %tobool18.not = icmp eq ptr %24, null
  br i1 %tobool18.not, label %if.end15.cleanup_crit_edge, label %if.end20

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end20:                                         ; preds = %if.end15
  %add.ptr.i.i92 = getelementptr i8, ptr %24, i32 4
  %25 = ptrtoint ptr %add.ptr.i.i92 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %add.ptr.i.i92, align 1
  %conv = zext i8 %26 to i32
  %offload23 = getelementptr i8, ptr %call1.i, i32 2388
  %27 = ptrtoint ptr %offload23 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %offload23, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %conv)
  %cmp = icmp eq i32 %28, %conv
  br i1 %cmp, label %if.end20.cleanup_crit_edge, label %if.end26

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end26:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %cmp27.not = icmp eq i8 %26, 0
  br i1 %cmp27.not, label %if.end26.if.end31_crit_edge, label %land.lhs.true

if.end26.if.end31_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end31

land.lhs.true:                                    ; preds = %if.end26
  %call29 = call fastcc zeroext i1 @macsec_check_offload(i32 noundef %conv, ptr noundef %add.ptr.i.i91)
  br i1 %call29, label %land.lhs.true.if.end31_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

land.lhs.true.if.end31_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end31

if.end31:                                         ; preds = %land.lhs.true.if.end31_crit_edge, %if.end26.if.end31_crit_edge
  %state.i = getelementptr inbounds %struct.net_device, ptr %call1.i, i32 0, i32 6
  %29 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end34, label %if.end31.cleanup_crit_edge

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end34:                                         ; preds = %if.end31
  call void @rtnl_lock() #18
  %31 = ptrtoint ptr %offload23 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %offload23, align 4
  store i32 %conv, ptr %offload23, align 4
  %n_rx_sc.i = getelementptr i8, ptr %call1.i, i32 2308
  %33 = ptrtoint ptr %n_rx_sc.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %n_rx_sc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp.not.i = icmp eq i32 %34, 0
  br i1 %cmp.not.i, label %for.body.preheader.i, label %if.end34.rollback_crit_edge

if.end34.rollback_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #20
  br label %rollback

for.body.preheader.i:                             ; preds = %if.end34
  %arrayidx.i93 = getelementptr i8, ptr %call1.i, i32 2344
  %35 = ptrtoint ptr %arrayidx.i93 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.i93, align 4
  %tobool.not.i94 = icmp eq ptr %36, null
  br i1 %tobool.not.i94, label %for.cond.i, label %for.body.preheader.i.rollback_crit_edge

for.body.preheader.i.rollback_crit_edge:          ; preds = %for.body.preheader.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rollback

for.cond.i:                                       ; preds = %for.body.preheader.i
  %arrayidx.1.i = getelementptr i8, ptr %call1.i, i32 2348
  %37 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx.1.i, align 4
  %tobool.not.1.i = icmp eq ptr %38, null
  br i1 %tobool.not.1.i, label %for.cond.1.i, label %for.cond.i.rollback_crit_edge

for.cond.i.rollback_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rollback

for.cond.1.i:                                     ; preds = %for.cond.i
  %arrayidx.2.i = getelementptr i8, ptr %call1.i, i32 2352
  %39 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx.2.i, align 4
  %tobool.not.2.i = icmp eq ptr %40, null
  br i1 %tobool.not.2.i, label %macsec_is_configured.exit, label %for.cond.1.i.rollback_crit_edge

for.cond.1.i.rollback_crit_edge:                  ; preds = %for.cond.1.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rollback

macsec_is_configured.exit:                        ; preds = %for.cond.1.i
  %arrayidx.3.i = getelementptr i8, ptr %call1.i, i32 2356
  %41 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx.3.i, align 4
  %tobool.not.3.i.not = icmp eq ptr %42, null
  br i1 %tobool.not.3.i.not, label %if.end39, label %macsec_is_configured.exit.rollback_crit_edge

macsec_is_configured.exit.rollback_crit_edge:     ; preds = %macsec_is_configured.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rollback

if.end39:                                         ; preds = %macsec_is_configured.exit
  %.conv = select i1 %cmp27.not, i32 %32, i32 %conv
  %43 = call ptr @memset(ptr %ctx, i32 0, i32 160)
  %offload1.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %44 = ptrtoint ptr %offload1.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %.conv, ptr %offload1.i, align 4
  %45 = zext i32 %.conv to i64
  call void @__sanitizer_cov_trace_switch(i64 %45, ptr @__sancov_gen_cov_switch_values.58)
  switch i32 %.conv, label %if.end39.if.else12.i_crit_edge [
    i32 1, label %if.end7.thread.i
    i32 2, label %if.end7.thread26.i
  ]

if.end39.if.else12.i_crit_edge:                   ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.else12.i

if.end7.thread.i:                                 ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #20
  %real_dev.i = getelementptr i8, ptr %call1.i, i32 2368
  %46 = ptrtoint ptr %real_dev.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %real_dev.i, align 8
  %phydev.i = getelementptr inbounds %struct.net_device, ptr %47, i32 0, i32 145
  %48 = ptrtoint ptr %phydev.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %phydev.i, align 16
  %50 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %49, ptr %ctx, align 4
  %51 = load ptr, ptr %real_dev.i, align 8
  %phydev11.i = getelementptr inbounds %struct.net_device, ptr %51, i32 0, i32 145
  %52 = ptrtoint ptr %phydev11.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %phydev11.i, align 16
  %macsec_ops.i = getelementptr inbounds %struct.phy_device, ptr %53, i32 0, i32 42
  br label %__macsec_get_ops.exit

if.end7.thread26.i:                               ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #20
  %real_dev5.i = getelementptr i8, ptr %call1.i, i32 2368
  %54 = ptrtoint ptr %real_dev5.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %real_dev5.i, align 8
  %56 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %55, ptr %ctx, align 4
  br label %if.else12.i

if.else12.i:                                      ; preds = %if.end7.thread26.i, %if.end39.if.else12.i_crit_edge
  %real_dev13.i = getelementptr i8, ptr %call1.i, i32 2368
  %57 = ptrtoint ptr %real_dev13.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %real_dev13.i, align 8
  %macsec_ops14.i = getelementptr inbounds %struct.net_device, ptr %58, i32 0, i32 151
  br label %__macsec_get_ops.exit

__macsec_get_ops.exit:                            ; preds = %if.else12.i, %if.end7.thread.i
  %retval.0.in.i = phi ptr [ %macsec_ops.i, %if.end7.thread.i ], [ %macsec_ops14.i, %if.else12.i ]
  %59 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %retval.0.i96 = load ptr, ptr %retval.0.in.i, align 4
  %tobool43.not = icmp eq ptr %retval.0.i96, null
  br i1 %tobool43.not, label %__macsec_get_ops.exit.rollback_crit_edge, label %if.end45

__macsec_get_ops.exit.rollback_crit_edge:         ; preds = %__macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rollback

if.end45:                                         ; preds = %__macsec_get_ops.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp46 = icmp eq i32 %32, 0
  %mdo_add_secy = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i96, i32 0, i32 2
  %mdo_del_secy = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i96, i32 0, i32 4
  %func.0.in = select i1 %cmp46, ptr %mdo_add_secy, ptr %mdo_del_secy
  %60 = ptrtoint ptr %func.0.in to i32
  call void @__asan_load4_noabort(i32 %60)
  %func.0 = load ptr, ptr %func.0.in, align 4
  %secy50 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %61 = ptrtoint ptr %secy50 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %add.ptr.i.i91, ptr %secy50, align 4
  %call51 = call fastcc i32 @macsec_offload(ptr noundef %func.0, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %if.end54, label %if.end45.rollback_crit_edge

if.end45.rollback_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #20
  br label %rollback

if.end54:                                         ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #20
  call void @netdev_update_features(ptr noundef nonnull %call1.i) #18
  call void @rtnl_unlock() #18
  br label %cleanup

rollback:                                         ; preds = %if.end45.rollback_crit_edge, %__macsec_get_ops.exit.rollback_crit_edge, %macsec_is_configured.exit.rollback_crit_edge, %for.cond.1.i.rollback_crit_edge, %for.cond.i.rollback_crit_edge, %for.body.preheader.i.rollback_crit_edge, %if.end34.rollback_crit_edge
  %ret.0 = phi i32 [ %call51, %if.end45.rollback_crit_edge ], [ -16, %macsec_is_configured.exit.rollback_crit_edge ], [ -95, %__macsec_get_ops.exit.rollback_crit_edge ], [ -16, %if.end34.rollback_crit_edge ], [ -16, %for.body.preheader.i.rollback_crit_edge ], [ -16, %for.cond.i.rollback_crit_edge ], [ -16, %for.cond.1.i.rollback_crit_edge ]
  %62 = ptrtoint ptr %offload23 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %32, ptr %offload23, align 4
  call void @rtnl_unlock() #18
  br label %cleanup

cleanup:                                          ; preds = %rollback, %if.end54, %if.end31.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end20.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.then13, %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %22, %if.then13 ], [ %ret.0, %rollback ], [ 0, %if.end54 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end5.cleanup_crit_edge ], [ -22, %if.end15.cleanup_crit_edge ], [ 0, %if.end20.cleanup_crit_edge ], [ -95, %land.lhs.true.cleanup_crit_edge ], [ -16, %if.end31.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %tb_offload) #18
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @dump_secy(ptr nocapture noundef readonly %secy, ptr noundef %dev, ptr noundef %skb, ptr nocapture noundef %cb) unnamed_addr #4 align 64 {
entry:
  %tmp.i547 = alloca i8, align 1
  %tmp.i.i545 = alloca i32, align 4
  %tmp.i543 = alloca i8, align 1
  %tmp.i.i515 = alloca i64, align 8
  %tmp.i513 = alloca i8, align 1
  %tmp.i493 = alloca i8, align 1
  %tmp.i.i491 = alloca i32, align 4
  %tmp.i489 = alloca i8, align 1
  %tmp.i124.i = alloca i32, align 4
  %tmp.i122.i = alloca i8, align 1
  %tmp.i120.i = alloca i8, align 1
  %tmp.i118.i = alloca i8, align 1
  %tmp.i116.i = alloca i8, align 1
  %tmp.i114.i = alloca i8, align 1
  %tmp.i112.i = alloca i8, align 1
  %tmp.i110.i = alloca i8, align 1
  %tmp.i108.i = alloca i8, align 1
  %tmp.i106.i = alloca i8, align 1
  %tmp.i104.i = alloca i8, align 1
  %tmp.i.i = alloca i64, align 8
  %tmp.i.i.i = alloca i64, align 8
  %tmp.i451 = alloca i8, align 1
  %tmp.i = alloca i32, align 4
  %tx_sc_stats = alloca %struct.macsec_tx_sc_stats, align 8
  %tx_sa_stats = alloca %struct.macsec_tx_sa_stats, align 8
  %rx_sc_stats = alloca %struct.macsec_rx_sc_stats, align 8
  %rx_sa_stats = alloca %struct.macsec_rx_sa_stats, align 4
  %dev_stats = alloca %struct.macsec_dev_stats, align 8
  %pn = alloca i64, align 8
  %pn166 = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %tx_sc_stats) #18
  %0 = call ptr @memset(ptr %tx_sc_stats, i32 0, i32 32)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tx_sa_stats) #18
  %1 = ptrtoint ptr %tx_sa_stats to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 0, ptr %tx_sa_stats, align 8
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %rx_sc_stats) #18
  %2 = call ptr @memset(ptr %rx_sc_stats, i32 0, i32 80)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %rx_sa_stats) #18
  %3 = call ptr @memset(ptr %rx_sa_stats, i32 0, i32 20)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %dev_stats) #18
  %4 = call ptr @memset(ptr %dev_stats, i32 0, i32 64)
  %5 = ptrtoint ptr %cb to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cb, align 4
  %portid = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 3, i32 12
  %7 = ptrtoint ptr %portid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %portid, align 4
  %nlh = getelementptr inbounds %struct.netlink_callback, ptr %cb, i32 0, i32 1
  %9 = ptrtoint ptr %nlh to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %nlh, align 4
  %nlmsg_seq = getelementptr inbounds %struct.nlmsghdr, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %nlmsg_seq to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nlmsg_seq, align 4
  %call4 = tail call ptr @genlmsg_put(ptr noundef %skb, i32 noundef %8, i32 noundef %12, ptr noundef nonnull @macsec_fam, i32 noundef 2, i8 noundef zeroext 0) #18
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %entry.cleanup252_crit_edge, label %if.end

entry.cleanup252_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup252

if.end:                                           ; preds = %entry
  %prev_seq.i.i = getelementptr inbounds %struct.netlink_callback, ptr %cb, i32 0, i32 10
  %13 = ptrtoint ptr %prev_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %prev_seq.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i.i, label %if.end.genl_dump_check_consistent.exit_crit_edge, label %land.lhs.true.i.i

if.end.genl_dump_check_consistent.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %genl_dump_check_consistent.exit

land.lhs.true.i.i:                                ; preds = %if.end
  %seq.i.i = getelementptr inbounds %struct.netlink_callback, ptr %cb, i32 0, i32 11
  %15 = ptrtoint ptr %seq.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %seq.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %14)
  %cmp.not.i.i = icmp eq i32 %16, %14
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.genl_dump_check_consistent.exit_crit_edge, label %if.then.i.i

land.lhs.true.i.i.genl_dump_check_consistent.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %genl_dump_check_consistent.exit

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %nlmsg_flags.i.i = getelementptr i8, ptr %call4, i32 -14
  %17 = ptrtoint ptr %nlmsg_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %nlmsg_flags.i.i, align 2
  %19 = or i16 %18, 16
  store i16 %19, ptr %nlmsg_flags.i.i, align 2
  br label %genl_dump_check_consistent.exit

genl_dump_check_consistent.exit:                  ; preds = %if.then.i.i, %land.lhs.true.i.i.genl_dump_check_consistent.exit_crit_edge, %if.end.genl_dump_check_consistent.exit_crit_edge
  %seq3.i.i = getelementptr inbounds %struct.netlink_callback, ptr %cb, i32 0, i32 11
  %20 = ptrtoint ptr %seq3.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %seq3.i.i, align 4
  %22 = ptrtoint ptr %prev_seq.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %prev_seq.i.i, align 4
  %ifindex = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 17
  %23 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %ifindex, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #18
  %25 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %tmp.i, align 4
  %call.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 1, i32 noundef 4, ptr noundef nonnull %tmp.i) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not = icmp eq i32 %call.i, 0
  br i1 %tobool6.not, label %if.end8, label %genl_dump_check_consistent.exit.if.then.i_crit_edge

genl_dump_check_consistent.exit.if.then.i_crit_edge: ; preds = %genl_dump_check_consistent.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

if.end8:                                          ; preds = %genl_dump_check_consistent.exit
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %26 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %tail.i.i, align 8
  %call1.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 9, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp.i = icmp slt i32 %call1.i, 0
  %tobool10.not590 = icmp eq ptr %27, null
  %tobool10.not = select i1 %cmp.i, i1 true, i1 %tobool10.not590
  br i1 %tobool10.not, label %if.end8.if.then.i_crit_edge, label %if.end12

if.end8.if.then.i_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

if.end12:                                         ; preds = %if.end8
  %offload = getelementptr i8, ptr %dev, i32 2388
  %28 = ptrtoint ptr %offload to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %offload, align 4
  %conv = trunc i32 %29 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i451) #18
  %30 = ptrtoint ptr %tmp.i451 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %conv, ptr %tmp.i451, align 1
  %call.i452 = call i32 @nla_put(ptr noundef %skb, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %tmp.i451) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i451) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i452)
  %tobool14.not = icmp eq i32 %call.i452, 0
  br i1 %tobool14.not, label %if.end16, label %if.end12.if.then.i_crit_edge

if.end12.if.then.i_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

if.end16:                                         ; preds = %if.end12
  %31 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %32 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %27 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = trunc i32 %sub.ptr.sub.i to i16
  %33 = ptrtoint ptr %27 to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %conv.i, ptr %27, align 2
  %34 = load ptr, ptr %tail.i.i, align 8
  %call1.i.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 4, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %cmp.i.i = icmp slt i32 %call1.i.i, 0
  %tobool.not127.i = icmp eq ptr %34, null
  %tobool.not.i = select i1 %cmp.i.i, i1 true, i1 %tobool.not127.i
  br i1 %tobool.not.i, label %if.end16.if.then.i_crit_edge, label %if.end.i

if.end16.if.then.i_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

if.end.i:                                         ; preds = %if.end16
  %key_len.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 3
  %35 = ptrtoint ptr %key_len.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %key_len.i, align 8
  %37 = zext i16 %36 to i64
  call void @__sanitizer_cov_trace_switch(i64 %37, ptr @__sancov_gen_cov_switch_values.59)
  switch i16 %36, label %if.end.i.if.then.i.i.i_crit_edge [
    i16 16, label %sw.bb.i
    i16 32, label %sw.bb4.i
  ]

if.end.i.if.then.i.i.i_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

sw.bb.i:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  %xpn.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 6
  %38 = ptrtoint ptr %xpn.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %xpn.i, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool2.not.i = icmp eq i8 %39, 0
  %cond.i = select i1 %tobool2.not.i, i64 36030996058996737, i64 36242102291529731
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  %xpn5.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 6
  %40 = ptrtoint ptr %xpn5.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %xpn5.i, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool6.not.i = icmp eq i8 %41, 0
  %cond8.i = select i1 %tobool6.not.i, i64 36242102291529730, i64 36242102291529732
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb4.i, %sw.bb.i
  %csid.0.i = phi i64 [ %cond8.i, %sw.bb4.i ], [ %cond.i, %sw.bb.i ]
  %sci.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 2
  %42 = ptrtoint ptr %sci.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %sci.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i.i) #18
  %44 = ptrtoint ptr %tmp.i.i.i to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %tmp.i.i.i, align 8
  %call.i.i.i = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 1, i32 noundef 8, ptr noundef nonnull %tmp.i.i.i, i32 noundef 14) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool10.not.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool10.not.i, label %lor.lhs.false.i, label %sw.epilog.i.if.then.i.i.i_crit_edge

sw.epilog.i.if.then.i.i.i_crit_edge:              ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false.i:                                  ; preds = %sw.epilog.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i) #18
  %45 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %csid.0.i, ptr %tmp.i.i, align 8
  %call.i.i = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 4, i32 noundef 8, ptr noundef nonnull %tmp.i.i, i32 noundef 14) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool12.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool12.not.i, label %lor.lhs.false13.i, label %lor.lhs.false.i.if.then.i.i.i_crit_edge

lor.lhs.false.i.if.then.i.i.i_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false13.i:                                ; preds = %lor.lhs.false.i
  %icv_len.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 4
  %46 = ptrtoint ptr %icv_len.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %icv_len.i, align 2
  %conv14.i = trunc i16 %47 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i104.i) #18
  %48 = ptrtoint ptr %tmp.i104.i to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %conv14.i, ptr %tmp.i104.i, align 1
  %call.i105.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 5, i32 noundef 1, ptr noundef nonnull %tmp.i104.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i104.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i105.i)
  %tobool16.not.i = icmp eq i32 %call.i105.i, 0
  br i1 %tobool16.not.i, label %lor.lhs.false17.i, label %lor.lhs.false13.i.if.then.i.i.i_crit_edge

lor.lhs.false13.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false13.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false17.i:                                ; preds = %lor.lhs.false13.i
  %operational.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 7
  %49 = ptrtoint ptr %operational.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %operational.i, align 1, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i106.i) #18
  %51 = ptrtoint ptr %tmp.i106.i to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %tmp.i106.i, align 1
  %call.i107.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 8, i32 noundef 1, ptr noundef nonnull %tmp.i106.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i106.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i107.i)
  %tobool21.not.i = icmp eq i32 %call.i107.i, 0
  br i1 %tobool21.not.i, label %lor.lhs.false22.i, label %lor.lhs.false17.i.if.then.i.i.i_crit_edge

lor.lhs.false17.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false17.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false22.i:                                ; preds = %lor.lhs.false17.i
  %protect_frames.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 8
  %52 = ptrtoint ptr %protect_frames.i to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %protect_frames.i, align 2, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i108.i) #18
  %54 = ptrtoint ptr %tmp.i108.i to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 %53, ptr %tmp.i108.i, align 1
  %call.i109.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 6, i32 noundef 1, ptr noundef nonnull %tmp.i108.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i108.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i109.i)
  %tobool26.not.i = icmp eq i32 %call.i109.i, 0
  br i1 %tobool26.not.i, label %lor.lhs.false27.i, label %lor.lhs.false22.i.if.then.i.i.i_crit_edge

lor.lhs.false22.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false22.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false27.i:                                ; preds = %lor.lhs.false22.i
  %replay_protect.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 9
  %55 = ptrtoint ptr %replay_protect.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %replay_protect.i, align 1, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i110.i) #18
  %57 = ptrtoint ptr %tmp.i110.i to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 %56, ptr %tmp.i110.i, align 1
  %call.i111.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 7, i32 noundef 1, ptr noundef nonnull %tmp.i110.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i110.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i111.i)
  %tobool31.not.i = icmp eq i32 %call.i111.i, 0
  br i1 %tobool31.not.i, label %lor.lhs.false32.i, label %lor.lhs.false27.i.if.then.i.i.i_crit_edge

lor.lhs.false27.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false27.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false32.i:                                ; preds = %lor.lhs.false27.i
  %validate_frames.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 5
  %58 = ptrtoint ptr %validate_frames.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %validate_frames.i, align 4
  %conv33.i = trunc i32 %59 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i112.i) #18
  %60 = ptrtoint ptr %tmp.i112.i to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %conv33.i, ptr %tmp.i112.i, align 1
  %call.i113.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 9, i32 noundef 1, ptr noundef nonnull %tmp.i112.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i112.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i113.i)
  %tobool35.not.i = icmp eq i32 %call.i113.i, 0
  br i1 %tobool35.not.i, label %lor.lhs.false36.i, label %lor.lhs.false32.i.if.then.i.i.i_crit_edge

lor.lhs.false32.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false32.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false36.i:                                ; preds = %lor.lhs.false32.i
  %encrypt.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 11, i32 2
  %61 = ptrtoint ptr %encrypt.i to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %encrypt.i, align 2, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i114.i) #18
  %63 = ptrtoint ptr %tmp.i114.i to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %62, ptr %tmp.i114.i, align 1
  %call.i115.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 10, i32 noundef 1, ptr noundef nonnull %tmp.i114.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i114.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i115.i)
  %tobool40.not.i = icmp eq i32 %call.i115.i, 0
  br i1 %tobool40.not.i, label %lor.lhs.false41.i, label %lor.lhs.false36.i.if.then.i.i.i_crit_edge

lor.lhs.false36.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false36.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false41.i:                                ; preds = %lor.lhs.false36.i
  %send_sci.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 11, i32 3
  %64 = ptrtoint ptr %send_sci.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %send_sci.i, align 1, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i116.i) #18
  %66 = ptrtoint ptr %tmp.i116.i to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 %65, ptr %tmp.i116.i, align 1
  %call.i117.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 11, i32 noundef 1, ptr noundef nonnull %tmp.i116.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i116.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i117.i)
  %tobool45.not.i = icmp eq i32 %call.i117.i, 0
  br i1 %tobool45.not.i, label %lor.lhs.false46.i, label %lor.lhs.false41.i.if.then.i.i.i_crit_edge

lor.lhs.false41.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false41.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false46.i:                                ; preds = %lor.lhs.false41.i
  %end_station.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 11, i32 4
  %67 = ptrtoint ptr %end_station.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %end_station.i, align 4, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i118.i) #18
  %69 = ptrtoint ptr %tmp.i118.i to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 %68, ptr %tmp.i118.i, align 1
  %call.i119.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 12, i32 noundef 1, ptr noundef nonnull %tmp.i118.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i118.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i119.i)
  %tobool50.not.i = icmp eq i32 %call.i119.i, 0
  br i1 %tobool50.not.i, label %lor.lhs.false51.i, label %lor.lhs.false46.i.if.then.i.i.i_crit_edge

lor.lhs.false46.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false46.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false51.i:                                ; preds = %lor.lhs.false46.i
  %scb.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 11, i32 5
  %70 = ptrtoint ptr %scb.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %scb.i, align 1, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i120.i) #18
  %72 = ptrtoint ptr %tmp.i120.i to i32
  call void @__asan_store1_noabort(i32 %72)
  store i8 %71, ptr %tmp.i120.i, align 1
  %call.i121.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 13, i32 noundef 1, ptr noundef nonnull %tmp.i120.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i120.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i121.i)
  %tobool55.not.i = icmp eq i32 %call.i121.i, 0
  br i1 %tobool55.not.i, label %lor.lhs.false56.i, label %lor.lhs.false51.i.if.then.i.i.i_crit_edge

lor.lhs.false51.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false51.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

lor.lhs.false56.i:                                ; preds = %lor.lhs.false51.i
  %encoding_sa.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 11, i32 1
  %73 = ptrtoint ptr %encoding_sa.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %encoding_sa.i, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i122.i) #18
  %75 = ptrtoint ptr %tmp.i122.i to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 %74, ptr %tmp.i122.i, align 1
  %call.i123.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 2, i32 noundef 1, ptr noundef nonnull %tmp.i122.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i122.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i123.i)
  %tobool58.not.i = icmp eq i32 %call.i123.i, 0
  br i1 %tobool58.not.i, label %if.end60.i, label %lor.lhs.false56.i.if.then.i.i.i_crit_edge

lor.lhs.false56.i.if.then.i.i.i_crit_edge:        ; preds = %lor.lhs.false56.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

if.end60.i:                                       ; preds = %lor.lhs.false56.i
  %76 = ptrtoint ptr %replay_protect.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %replay_protect.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool62.not.i = icmp eq i8 %77, 0
  br i1 %tobool62.not.i, label %if.end60.i.if.end21_crit_edge, label %if.then63.i

if.end60.i.if.end21_crit_edge:                    ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end21

if.then63.i:                                      ; preds = %if.end60.i
  %replay_window.i = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 10
  %78 = ptrtoint ptr %replay_window.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %replay_window.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i124.i) #18
  %80 = ptrtoint ptr %tmp.i124.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %79, ptr %tmp.i124.i, align 4
  %call.i125.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %tmp.i124.i) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i124.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i125.i)
  %tobool65.not.i = icmp eq i32 %call.i125.i, 0
  br i1 %tobool65.not.i, label %if.then63.i.if.end21_crit_edge, label %if.then63.i.if.then.i.i.i_crit_edge

if.then63.i.if.then.i.i.i_crit_edge:              ; preds = %if.then63.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i.i.i

if.then63.i.if.end21_crit_edge:                   ; preds = %if.then63.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end21

if.then.i.i.i:                                    ; preds = %if.then63.i.if.then.i.i.i_crit_edge, %lor.lhs.false56.i.if.then.i.i.i_crit_edge, %lor.lhs.false51.i.if.then.i.i.i_crit_edge, %lor.lhs.false46.i.if.then.i.i.i_crit_edge, %lor.lhs.false41.i.if.then.i.i.i_crit_edge, %lor.lhs.false36.i.if.then.i.i.i_crit_edge, %lor.lhs.false32.i.if.then.i.i.i_crit_edge, %lor.lhs.false27.i.if.then.i.i.i_crit_edge, %lor.lhs.false22.i.if.then.i.i.i_crit_edge, %lor.lhs.false17.i.if.then.i.i.i_crit_edge, %lor.lhs.false13.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.if.then.i.i.i_crit_edge, %sw.epilog.i.if.then.i.i.i_crit_edge, %if.end.i.if.then.i.i.i_crit_edge
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %81 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %data.i.i.i, align 4
  %cmp.i.i.i = icmp ugt ptr %82, %34
  br i1 %cmp.i.i.i, label %do.end.i.i.i, label %if.then.i.i.i.nla_nest_cancel.exit.i_crit_edge, !prof !203

if.then.i.i.i.nla_nest_cancel.exit.i_crit_edge:   ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_nest_cancel.exit.i

do.end.i.i.i:                                     ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 991, i32 noundef 9, ptr noundef null) #18
  br label %nla_nest_cancel.exit.i

nla_nest_cancel.exit.i:                           ; preds = %do.end.i.i.i, %if.then.i.i.i.nla_nest_cancel.exit.i_crit_edge
  %83 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %data.i.i.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %34 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %84 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @skb_trim(ptr noundef %skb, i32 noundef %sub.ptr.sub.i.i.i) #18
  br label %if.then.i

if.end21:                                         ; preds = %if.then63.i.if.end21_crit_edge, %if.end60.i.if.end21_crit_edge
  %85 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %86 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %34 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %conv.i.i = trunc i32 %sub.ptr.sub.i.i to i16
  %87 = ptrtoint ptr %34 to i32
  call void @__asan_store2_noabort(i32 %87)
  store i16 %conv.i.i, ptr %34, align 2
  %88 = load ptr, ptr %tail.i.i, align 8
  %call1.i455 = call i32 @nla_put(ptr noundef %skb, i32 noundef 7, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i455)
  %cmp.i456 = icmp slt i32 %call1.i455, 0
  %tobool23.not591 = icmp eq ptr %88, null
  %tobool23.not = select i1 %cmp.i456, i1 true, i1 %tobool23.not591
  br i1 %tobool23.not, label %if.end21.if.then.i_crit_edge, label %if.end25

if.end21.if.then.i_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

if.end25:                                         ; preds = %if.end21
  call fastcc void @get_tx_sc_stats(ptr noundef %dev, ptr noundef nonnull %tx_sc_stats)
  %call26 = call fastcc i32 @copy_tx_sc_stats(ptr noundef %skb, ptr noundef nonnull %tx_sc_stats)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end29, label %if.then28

if.then28:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %88)
  br label %if.then.i

if.end29:                                         ; preds = %if.end25
  %89 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i459 = ptrtoint ptr %90 to i32
  %sub.ptr.rhs.cast.i460 = ptrtoint ptr %88 to i32
  %sub.ptr.sub.i461 = sub i32 %sub.ptr.lhs.cast.i459, %sub.ptr.rhs.cast.i460
  %conv.i462 = trunc i32 %sub.ptr.sub.i461 to i16
  %91 = ptrtoint ptr %88 to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 %conv.i462, ptr %88, align 2
  %92 = load ptr, ptr %tail.i.i, align 8
  %call1.i464 = call i32 @nla_put(ptr noundef %skb, i32 noundef 8, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i464)
  %cmp.i465 = icmp slt i32 %call1.i464, 0
  %tobool32.not592 = icmp eq ptr %92, null
  %tobool32.not = select i1 %cmp.i465, i1 true, i1 %tobool32.not592
  br i1 %tobool32.not, label %if.end29.if.then.i_crit_edge, label %if.end34

if.end29.if.then.i_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

if.end34:                                         ; preds = %if.end29
  call fastcc void @get_secy_stats(ptr noundef %dev, ptr noundef nonnull %dev_stats)
  %call35 = call fastcc i32 @copy_secy_stats(ptr noundef %skb, ptr noundef nonnull %dev_stats)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.end38, label %if.then37

if.then37:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %92)
  br label %if.then.i

if.end38:                                         ; preds = %if.end34
  %93 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i468 = ptrtoint ptr %94 to i32
  %sub.ptr.rhs.cast.i469 = ptrtoint ptr %92 to i32
  %sub.ptr.sub.i470 = sub i32 %sub.ptr.lhs.cast.i468, %sub.ptr.rhs.cast.i469
  %conv.i471 = trunc i32 %sub.ptr.sub.i470 to i16
  %95 = ptrtoint ptr %92 to i32
  call void @__asan_store2_noabort(i32 %95)
  store i16 %conv.i471, ptr %92, align 2
  %96 = load ptr, ptr %tail.i.i, align 8
  %call1.i473 = call i32 @nla_put(ptr noundef %skb, i32 noundef 5, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i473)
  %cmp.i474 = icmp slt i32 %call1.i473, 0
  %tobool41.not641 = icmp eq ptr %96, null
  %tobool41.not = select i1 %cmp.i474, i1 true, i1 %tobool41.not641
  br i1 %tobool41.not, label %if.end38.if.then.i_crit_edge, label %for.cond.preheader

if.end38.if.then.i_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

for.cond.preheader:                               ; preds = %if.end38
  %xpn = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader
  %j.0633 = phi i32 [ 1, %for.cond.preheader ], [ %j.1, %for.inc.for.body_crit_edge ]
  %i.0631 = phi i32 [ 0, %for.cond.preheader ], [ %inc98, %for.inc.for.body_crit_edge ]
  %call45 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call45, label %for.body.do.end_crit_edge, label %land.lhs.true

for.body.do.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %for.body
  %call46 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true48

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true48:                                  ; preds = %land.lhs.true
  %.b450 = load i1, ptr @dump_secy.__warned, align 1
  br i1 %.b450, label %land.lhs.true48.do.end_crit_edge, label %if.then50

land.lhs.true48.do.end_crit_edge:                 ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then50:                                        ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @dump_secy.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 3083, ptr noundef nonnull @.str.4) #18
  br label %do.end

do.end:                                           ; preds = %if.then50, %land.lhs.true48.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %for.body.do.end_crit_edge
  %arrayidx = getelementptr %struct.macsec_secy, ptr %secy, i32 0, i32 11, i32 6, i32 %i.0631
  %97 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %arrayidx, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %pn) #18
  %99 = ptrtoint ptr %pn to i32
  call void @__asan_store8_noabort(i32 %99)
  store i64 -1, ptr %pn, align 8, !annotation !199
  %tobool52.not = icmp eq ptr %98, null
  br i1 %tobool52.not, label %do.end.for.inc_crit_edge, label %if.end54

do.end.for.inc_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc

if.end54:                                         ; preds = %do.end
  %inc = add i32 %j.0633, 1
  %100 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %tail.i.i, align 8
  %call1.i477 = call i32 @nla_put(ptr noundef %skb, i32 noundef %j.0633, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i477)
  %cmp.i478 = icmp slt i32 %call1.i477, 0
  %tobool56.not598 = icmp eq ptr %101, null
  %tobool56.not = select i1 %cmp.i478, i1 true, i1 %tobool56.not598
  br i1 %tobool56.not, label %if.end54.cleanup.thread_crit_edge, label %if.end58

if.end54.cleanup.thread_crit_edge:                ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

if.end58:                                         ; preds = %if.end54
  %102 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %tail.i.i, align 8
  %call1.i481 = call i32 @nla_put(ptr noundef %skb, i32 noundef 6, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i481)
  %cmp.i482 = icmp slt i32 %call1.i481, 0
  %tobool60.not599 = icmp eq ptr %103, null
  %tobool60.not = select i1 %cmp.i482, i1 true, i1 %tobool60.not599
  br i1 %tobool60.not, label %if.end58.cleanup.thread.sink.split_crit_edge, label %if.end62

if.end58.cleanup.thread.sink.split_crit_edge:     ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread.sink.split

if.end62:                                         ; preds = %if.end58
  %104 = ptrtoint ptr %tx_sa_stats to i32
  call void @__asan_store8_noabort(i32 %104)
  store i64 0, ptr %tx_sa_stats, align 8
  call fastcc void @get_tx_sa_stats(ptr noundef %dev, i32 noundef %i.0631, ptr noundef nonnull %98, ptr noundef nonnull %tx_sa_stats)
  %call63 = call fastcc i32 @copy_tx_sa_stats(ptr noundef %skb, ptr noundef nonnull %tx_sa_stats)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.end66, label %if.then65

if.then65:                                        ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %103)
  br label %cleanup.thread.sink.split

if.end66:                                         ; preds = %if.end62
  %105 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i485 = ptrtoint ptr %106 to i32
  %sub.ptr.rhs.cast.i486 = ptrtoint ptr %103 to i32
  %sub.ptr.sub.i487 = sub i32 %sub.ptr.lhs.cast.i485, %sub.ptr.rhs.cast.i486
  %conv.i488 = trunc i32 %sub.ptr.sub.i487 to i16
  %107 = ptrtoint ptr %103 to i32
  call void @__asan_store2_noabort(i32 %107)
  store i16 %conv.i488, ptr %103, align 2
  %108 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %109)
  %tobool68.not = icmp eq i8 %109, 0
  %110 = getelementptr inbounds %struct.macsec_tx_sa, ptr %98, i32 0, i32 3
  br i1 %tobool68.not, label %if.else, label %if.then69

if.then69:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #20
  %111 = ptrtoint ptr %110 to i32
  call void @__asan_load8_noabort(i32 %111)
  %112 = load i64, ptr %110, align 8
  br label %if.end71

if.else:                                          ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #20
  %lower = getelementptr inbounds %struct.anon.148, ptr %110, i32 0, i32 1
  %113 = ptrtoint ptr %lower to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %lower, align 4
  %conv70 = zext i32 %114 to i64
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then69
  %storemerge449 = phi i64 [ %conv70, %if.else ], [ %112, %if.then69 ]
  %pn_len.0 = phi i32 [ 4, %if.else ], [ 8, %if.then69 ]
  %115 = ptrtoint ptr %pn to i32
  call void @__asan_store8_noabort(i32 %115)
  store i64 %storemerge449, ptr %pn, align 8
  %conv72 = trunc i32 %i.0631 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i489) #18
  %116 = ptrtoint ptr %tmp.i489 to i32
  call void @__asan_store1_noabort(i32 %116)
  store i8 %conv72, ptr %tmp.i489, align 1
  %call.i490 = call i32 @nla_put(ptr noundef %skb, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %tmp.i489) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i489) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i490)
  %tobool74.not = icmp eq i32 %call.i490, 0
  br i1 %tobool74.not, label %lor.lhs.false, label %if.end71.cleanup.thread.sink.split_crit_edge

if.end71.cleanup.thread.sink.split_crit_edge:     ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread.sink.split

lor.lhs.false:                                    ; preds = %if.end71
  %call75 = call i32 @nla_put(ptr noundef %skb, i32 noundef 3, i32 noundef %pn_len.0, ptr noundef nonnull %pn) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75)
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %lor.lhs.false77, label %lor.lhs.false.cleanup.thread.sink.split_crit_edge

lor.lhs.false.cleanup.thread.sink.split_crit_edge: ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread.sink.split

lor.lhs.false77:                                  ; preds = %lor.lhs.false
  %call78 = call i32 @nla_put(ptr noundef %skb, i32 noundef 5, i32 noundef 16, ptr noundef nonnull %98) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %lor.lhs.false80, label %lor.lhs.false77.cleanup.thread.sink.split_crit_edge

lor.lhs.false77.cleanup.thread.sink.split_crit_edge: ; preds = %lor.lhs.false77
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread.sink.split

lor.lhs.false80:                                  ; preds = %lor.lhs.false77
  %117 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %117)
  %118 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %118)
  %tobool82.not = icmp eq i8 %118, 0
  br i1 %tobool82.not, label %lor.lhs.false80.lor.lhs.false87_crit_edge, label %land.lhs.true84

lor.lhs.false80.lor.lhs.false87_crit_edge:        ; preds = %lor.lhs.false80
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false87

land.lhs.true84:                                  ; preds = %lor.lhs.false80
  %ssci = getelementptr inbounds %struct.macsec_tx_sa, ptr %98, i32 0, i32 1
  %119 = ptrtoint ptr %ssci to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %ssci, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i.i491) #18
  %121 = ptrtoint ptr %tmp.i.i491 to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 %120, ptr %tmp.i.i491, align 4
  %call.i.i492 = call i32 @nla_put(ptr noundef %skb, i32 noundef 8, i32 noundef 4, ptr noundef nonnull %tmp.i.i491) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i.i491) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i492)
  %tobool86.not = icmp eq i32 %call.i.i492, 0
  br i1 %tobool86.not, label %land.lhs.true84.lor.lhs.false87_crit_edge, label %land.lhs.true84.cleanup.thread.sink.split_crit_edge

land.lhs.true84.cleanup.thread.sink.split_crit_edge: ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread.sink.split

land.lhs.true84.lor.lhs.false87_crit_edge:        ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %land.lhs.true84.lor.lhs.false87_crit_edge, %lor.lhs.false80.lor.lhs.false87_crit_edge
  %active = getelementptr inbounds %struct.macsec_tx_sa, ptr %98, i32 0, i32 5
  %122 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %active, align 4, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i493) #18
  %124 = ptrtoint ptr %tmp.i493 to i32
  call void @__asan_store1_noabort(i32 %124)
  store i8 %123, ptr %tmp.i493, align 1
  %call.i494 = call i32 @nla_put(ptr noundef %skb, i32 noundef 2, i32 noundef 1, ptr noundef nonnull %tmp.i493) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i493) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i494)
  %tobool91.not = icmp eq i32 %call.i494, 0
  br i1 %tobool91.not, label %if.end93, label %lor.lhs.false87.cleanup.thread.sink.split_crit_edge

lor.lhs.false87.cleanup.thread.sink.split_crit_edge: ; preds = %lor.lhs.false87
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread.sink.split

if.end93:                                         ; preds = %lor.lhs.false87
  call void @__sanitizer_cov_trace_pc() #20
  %125 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i496 = ptrtoint ptr %126 to i32
  %sub.ptr.rhs.cast.i497 = ptrtoint ptr %101 to i32
  %sub.ptr.sub.i498 = sub i32 %sub.ptr.lhs.cast.i496, %sub.ptr.rhs.cast.i497
  %conv.i499 = trunc i32 %sub.ptr.sub.i498 to i16
  %127 = ptrtoint ptr %101 to i32
  call void @__asan_store2_noabort(i32 %127)
  store i16 %conv.i499, ptr %101, align 2
  br label %for.inc

cleanup.thread.sink.split:                        ; preds = %lor.lhs.false87.cleanup.thread.sink.split_crit_edge, %land.lhs.true84.cleanup.thread.sink.split_crit_edge, %lor.lhs.false77.cleanup.thread.sink.split_crit_edge, %lor.lhs.false.cleanup.thread.sink.split_crit_edge, %if.end71.cleanup.thread.sink.split_crit_edge, %if.then65, %if.end58.cleanup.thread.sink.split_crit_edge
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %101)
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %cleanup.thread.sink.split, %if.end54.cleanup.thread_crit_edge
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %96)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %pn) #18
  br label %if.then.i

for.inc:                                          ; preds = %if.end93, %do.end.for.inc_crit_edge
  %j.1 = phi i32 [ %inc, %if.end93 ], [ %j.0633, %do.end.for.inc_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %pn) #18
  %inc98 = add nuw nsw i32 %i.0631, 1
  %exitcond.not = icmp eq i32 %inc98, 4
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

for.end:                                          ; preds = %for.inc
  %128 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i501 = ptrtoint ptr %129 to i32
  %sub.ptr.rhs.cast.i502 = ptrtoint ptr %96 to i32
  %sub.ptr.sub.i503 = sub i32 %sub.ptr.lhs.cast.i501, %sub.ptr.rhs.cast.i502
  %conv.i504 = trunc i32 %sub.ptr.sub.i503 to i16
  %130 = ptrtoint ptr %96 to i32
  call void @__asan_store2_noabort(i32 %130)
  store i16 %conv.i504, ptr %96, align 2
  %131 = load ptr, ptr %tail.i.i, align 8
  %call1.i506 = call i32 @nla_put(ptr noundef %skb, i32 noundef 6, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i506)
  %cmp.i507 = icmp slt i32 %call1.i506, 0
  %tobool101.not593 = icmp eq ptr %131, null
  %tobool101.not = select i1 %cmp.i507, i1 true, i1 %tobool101.not593
  br i1 %tobool101.not, label %for.end.if.then.i_crit_edge, label %if.end103

for.end.if.then.i_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

if.end103:                                        ; preds = %for.end
  %call105 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call105, label %if.end103.do.end114_crit_edge, label %land.lhs.true106

if.end103.do.end114_crit_edge:                    ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end114

land.lhs.true106:                                 ; preds = %if.end103
  %call107 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call107)
  %tobool108.not = icmp eq i32 %call107, 0
  br i1 %tobool108.not, label %land.lhs.true106.do.end114_crit_edge, label %land.lhs.true109

land.lhs.true106.do.end114_crit_edge:             ; preds = %land.lhs.true106
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end114

land.lhs.true109:                                 ; preds = %land.lhs.true106
  %.b443448 = load i1, ptr @dump_secy.__warned.5, align 1
  br i1 %.b443448, label %land.lhs.true109.do.end114_crit_edge, label %if.then111

land.lhs.true109.do.end114_crit_edge:             ; preds = %land.lhs.true109
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end114

if.then111:                                       ; preds = %land.lhs.true109
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @dump_secy.__warned.5, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 3140, ptr noundef nonnull @.str.4) #18
  br label %do.end114

do.end114:                                        ; preds = %if.then111, %land.lhs.true109.do.end114_crit_edge, %land.lhs.true106.do.end114_crit_edge, %if.end103.do.end114_crit_edge
  %rx_sc116 = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 12
  %132 = ptrtoint ptr %rx_sc116 to i32
  call void @__asan_load4_noabort(i32 %132)
  %rx_sc.0637 = load ptr, ptr %rx_sc116, align 4
  %tobool118.not638 = icmp eq ptr %rx_sc.0637, null
  br i1 %tobool118.not638, label %do.end114.for.end250_crit_edge, label %do.end114.for.body119_crit_edge

do.end114.for.body119_crit_edge:                  ; preds = %do.end114
  br label %for.body119

do.end114.for.end250_crit_edge:                   ; preds = %do.end114
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end250

for.body119:                                      ; preds = %do.end248.for.body119_crit_edge, %do.end114.for.body119_crit_edge
  %rx_sc.0640 = phi ptr [ %rx_sc.0, %do.end248.for.body119_crit_edge ], [ %rx_sc.0637, %do.end114.for.body119_crit_edge ]
  %j.2639 = phi i32 [ %inc120, %do.end248.for.body119_crit_edge ], [ 1, %do.end114.for.body119_crit_edge ]
  %inc120 = add i32 %j.2639, 1
  %133 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %tail.i.i, align 8
  %call1.i510 = call i32 @nla_put(ptr noundef %skb, i32 noundef %j.2639, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i510)
  %cmp.i511 = icmp slt i32 %call1.i510, 0
  %tobool122.not594 = icmp eq ptr %134, null
  %tobool122.not = select i1 %cmp.i511, i1 true, i1 %tobool122.not594
  br i1 %tobool122.not, label %if.then123, label %if.end124

if.then123:                                       ; preds = %for.body119
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %131)
  br label %if.then.i

if.end124:                                        ; preds = %for.body119
  %active125 = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc.0640, i32 0, i32 2
  %135 = ptrtoint ptr %active125 to i32
  call void @__asan_load1_noabort(i32 %135)
  %136 = load i8, ptr %active125, align 8, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i513) #18
  %137 = ptrtoint ptr %tmp.i513 to i32
  call void @__asan_store1_noabort(i32 %137)
  store i8 %136, ptr %tmp.i513, align 1
  %call.i514 = call i32 @nla_put(ptr noundef %skb, i32 noundef 2, i32 noundef 1, ptr noundef nonnull %tmp.i513) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i513) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i514)
  %tobool129.not = icmp eq i32 %call.i514, 0
  br i1 %tobool129.not, label %lor.lhs.false130, label %if.end124.if.then133_crit_edge

if.end124.if.then133_crit_edge:                   ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then133

lor.lhs.false130:                                 ; preds = %if.end124
  %sci = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc.0640, i32 0, i32 1
  %138 = ptrtoint ptr %sci to i32
  call void @__asan_load8_noabort(i32 %138)
  %139 = load i64, ptr %sci, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i515) #18
  %140 = ptrtoint ptr %tmp.i.i515 to i32
  call void @__asan_store8_noabort(i32 %140)
  store i64 %139, ptr %tmp.i.i515, align 8
  %call.i.i516 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 1, i32 noundef 8, ptr noundef nonnull %tmp.i.i515, i32 noundef 5) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i515) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i516)
  %tobool132.not = icmp eq i32 %call.i.i516, 0
  br i1 %tobool132.not, label %if.end134, label %lor.lhs.false130.if.then133_crit_edge

lor.lhs.false130.if.then133_crit_edge:            ; preds = %lor.lhs.false130
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then133

if.then133:                                       ; preds = %lor.lhs.false130.if.then133_crit_edge, %if.end124.if.then133_crit_edge
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %134)
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %131)
  br label %if.then.i

if.end134:                                        ; preds = %lor.lhs.false130
  %141 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %tail.i.i, align 8
  %call1.i518 = call i32 @nla_put(ptr noundef %skb, i32 noundef 4, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i518)
  %cmp.i519 = icmp slt i32 %call1.i518, 0
  %tobool136.not595 = icmp eq ptr %142, null
  %tobool136.not = select i1 %cmp.i519, i1 true, i1 %tobool136.not595
  br i1 %tobool136.not, label %if.then137, label %if.end138

if.then137:                                       ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %134)
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %131)
  br label %if.then.i

if.end138:                                        ; preds = %if.end134
  %143 = call ptr @memset(ptr %rx_sc_stats, i32 0, i32 80)
  call fastcc void @get_rx_sc_stats(ptr noundef %dev, ptr noundef nonnull %rx_sc.0640, ptr noundef nonnull %rx_sc_stats)
  %call139 = call fastcc i32 @copy_rx_sc_stats(ptr noundef %skb, ptr noundef nonnull %rx_sc_stats)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call139)
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %if.end142, label %if.then141

if.then141:                                       ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %142)
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %134)
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %131)
  br label %if.then.i

if.end142:                                        ; preds = %if.end138
  %144 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i522 = ptrtoint ptr %145 to i32
  %sub.ptr.rhs.cast.i523 = ptrtoint ptr %142 to i32
  %sub.ptr.sub.i524 = sub i32 %sub.ptr.lhs.cast.i522, %sub.ptr.rhs.cast.i523
  %conv.i525 = trunc i32 %sub.ptr.sub.i524 to i16
  %146 = ptrtoint ptr %142 to i32
  call void @__asan_store2_noabort(i32 %146)
  store i16 %conv.i525, ptr %142, align 2
  %147 = load ptr, ptr %tail.i.i, align 8
  %call1.i527 = call i32 @nla_put(ptr noundef %skb, i32 noundef 3, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i527)
  %cmp.i528 = icmp slt i32 %call1.i527, 0
  %tobool145.not677 = icmp eq ptr %147, null
  %tobool145.not = select i1 %cmp.i528, i1 true, i1 %tobool145.not677
  br i1 %tobool145.not, label %if.then146, label %if.end142.for.body151_crit_edge

if.end142.for.body151_crit_edge:                  ; preds = %if.end142
  br label %for.body151

if.then146:                                       ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %134)
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %131)
  br label %if.then.i

for.body151:                                      ; preds = %for.inc227.for.body151_crit_edge, %if.end142.for.body151_crit_edge
  %k.0636 = phi i32 [ %k.1, %for.inc227.for.body151_crit_edge ], [ 1, %if.end142.for.body151_crit_edge ]
  %i.1634 = phi i32 [ %inc228, %for.inc227.for.body151_crit_edge ], [ 0, %if.end142.for.body151_crit_edge ]
  %call153 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call153, label %for.body151.do.end162_crit_edge, label %land.lhs.true154

for.body151.do.end162_crit_edge:                  ; preds = %for.body151
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end162

land.lhs.true154:                                 ; preds = %for.body151
  %call155 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call155)
  %tobool156.not = icmp eq i32 %call155, 0
  br i1 %tobool156.not, label %land.lhs.true154.do.end162_crit_edge, label %land.lhs.true157

land.lhs.true154.do.end162_crit_edge:             ; preds = %land.lhs.true154
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end162

land.lhs.true157:                                 ; preds = %land.lhs.true154
  %.b444447 = load i1, ptr @dump_secy.__warned.6, align 1
  br i1 %.b444447, label %land.lhs.true157.do.end162_crit_edge, label %if.then159

land.lhs.true157.do.end162_crit_edge:             ; preds = %land.lhs.true157
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end162

if.then159:                                       ; preds = %land.lhs.true157
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @dump_secy.__warned.6, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 3183, ptr noundef nonnull @.str.4) #18
  br label %do.end162

do.end162:                                        ; preds = %if.then159, %land.lhs.true157.do.end162_crit_edge, %land.lhs.true154.do.end162_crit_edge, %for.body151.do.end162_crit_edge
  %arrayidx165 = getelementptr %struct.macsec_rx_sc, ptr %rx_sc.0640, i32 0, i32 3, i32 %i.1634
  %148 = ptrtoint ptr %arrayidx165 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %arrayidx165, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %pn166) #18
  %150 = ptrtoint ptr %pn166 to i32
  call void @__asan_store8_noabort(i32 %150)
  store i64 -1, ptr %pn166, align 8, !annotation !199
  %tobool168.not = icmp eq ptr %149, null
  br i1 %tobool168.not, label %do.end162.for.inc227_crit_edge, label %if.end170

do.end162.for.inc227_crit_edge:                   ; preds = %do.end162
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc227

if.end170:                                        ; preds = %do.end162
  %inc171 = add i32 %k.0636, 1
  %151 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %tail.i.i, align 8
  %call1.i531 = call i32 @nla_put(ptr noundef %skb, i32 noundef %k.0636, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i531)
  %cmp.i532 = icmp slt i32 %call1.i531, 0
  %tobool173.not596 = icmp eq ptr %152, null
  %tobool173.not = select i1 %cmp.i532, i1 true, i1 %tobool173.not596
  br i1 %tobool173.not, label %if.end170.cleanup221.thread_crit_edge, label %if.end175

if.end170.cleanup221.thread_crit_edge:            ; preds = %if.end170
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup221.thread

if.end175:                                        ; preds = %if.end170
  %153 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %tail.i.i, align 8
  %call1.i535 = call i32 @nla_put(ptr noundef %skb, i32 noundef 6, i32 noundef 0, ptr noundef null) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i535)
  %cmp.i536 = icmp slt i32 %call1.i535, 0
  %tobool177.not597 = icmp eq ptr %154, null
  %tobool177.not = select i1 %cmp.i536, i1 true, i1 %tobool177.not597
  br i1 %tobool177.not, label %if.end175.cleanup221.thread_crit_edge, label %if.end179

if.end175.cleanup221.thread_crit_edge:            ; preds = %if.end175
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup221.thread

if.end179:                                        ; preds = %if.end175
  %155 = call ptr @memset(ptr %rx_sa_stats, i32 0, i32 20)
  call fastcc void @get_rx_sa_stats(ptr noundef %dev, ptr noundef nonnull %rx_sc.0640, i32 noundef %i.1634, ptr noundef nonnull %149, ptr noundef nonnull %rx_sa_stats)
  %call180 = call fastcc i32 @copy_rx_sa_stats(ptr noundef %skb, ptr noundef nonnull %rx_sa_stats)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call180)
  %tobool181.not = icmp eq i32 %call180, 0
  br i1 %tobool181.not, label %if.end183, label %if.then182

if.then182:                                       ; preds = %if.end179
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %154)
  br label %cleanup221.thread

if.end183:                                        ; preds = %if.end179
  %156 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i539 = ptrtoint ptr %157 to i32
  %sub.ptr.rhs.cast.i540 = ptrtoint ptr %154 to i32
  %sub.ptr.sub.i541 = sub i32 %sub.ptr.lhs.cast.i539, %sub.ptr.rhs.cast.i540
  %conv.i542 = trunc i32 %sub.ptr.sub.i541 to i16
  %158 = ptrtoint ptr %154 to i32
  call void @__asan_store2_noabort(i32 %158)
  store i16 %conv.i542, ptr %154, align 2
  %159 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %159)
  %160 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %160)
  %tobool186.not = icmp eq i8 %160, 0
  %161 = getelementptr inbounds %struct.macsec_rx_sa, ptr %149, i32 0, i32 3
  br i1 %tobool186.not, label %if.else188, label %if.then187

if.then187:                                       ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #20
  %162 = ptrtoint ptr %161 to i32
  call void @__asan_load8_noabort(i32 %162)
  %163 = load i64, ptr %161, align 8
  br label %if.end191

if.else188:                                       ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #20
  %lower189 = getelementptr inbounds %struct.anon.148, ptr %161, i32 0, i32 1
  %164 = ptrtoint ptr %lower189 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %lower189, align 4
  %conv190 = zext i32 %165 to i64
  br label %if.end191

if.end191:                                        ; preds = %if.else188, %if.then187
  %storemerge = phi i64 [ %conv190, %if.else188 ], [ %163, %if.then187 ]
  %pn_len167.0 = phi i32 [ 4, %if.else188 ], [ 8, %if.then187 ]
  %166 = ptrtoint ptr %pn166 to i32
  call void @__asan_store8_noabort(i32 %166)
  store i64 %storemerge, ptr %pn166, align 8
  %conv192 = trunc i32 %i.1634 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i543) #18
  %167 = ptrtoint ptr %tmp.i543 to i32
  call void @__asan_store1_noabort(i32 %167)
  store i8 %conv192, ptr %tmp.i543, align 1
  %call.i544 = call i32 @nla_put(ptr noundef %skb, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %tmp.i543) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i543) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i544)
  %tobool194.not = icmp eq i32 %call.i544, 0
  br i1 %tobool194.not, label %lor.lhs.false195, label %if.end191.cleanup221.thread_crit_edge

if.end191.cleanup221.thread_crit_edge:            ; preds = %if.end191
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup221.thread

lor.lhs.false195:                                 ; preds = %if.end191
  %call196 = call i32 @nla_put(ptr noundef %skb, i32 noundef 3, i32 noundef %pn_len167.0, ptr noundef nonnull %pn166) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call196)
  %tobool197.not = icmp eq i32 %call196, 0
  br i1 %tobool197.not, label %lor.lhs.false198, label %lor.lhs.false195.cleanup221.thread_crit_edge

lor.lhs.false195.cleanup221.thread_crit_edge:     ; preds = %lor.lhs.false195
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup221.thread

lor.lhs.false198:                                 ; preds = %lor.lhs.false195
  %call202 = call i32 @nla_put(ptr noundef %skb, i32 noundef 5, i32 noundef 16, ptr noundef nonnull %149) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call202)
  %tobool203.not = icmp eq i32 %call202, 0
  br i1 %tobool203.not, label %lor.lhs.false204, label %lor.lhs.false198.cleanup221.thread_crit_edge

lor.lhs.false198.cleanup221.thread_crit_edge:     ; preds = %lor.lhs.false198
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup221.thread

lor.lhs.false204:                                 ; preds = %lor.lhs.false198
  %168 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %168)
  %169 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %169)
  %tobool206.not = icmp eq i8 %169, 0
  br i1 %tobool206.not, label %lor.lhs.false204.lor.lhs.false212_crit_edge, label %land.lhs.true208

lor.lhs.false204.lor.lhs.false212_crit_edge:      ; preds = %lor.lhs.false204
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false212

land.lhs.true208:                                 ; preds = %lor.lhs.false204
  %ssci209 = getelementptr inbounds %struct.macsec_rx_sa, ptr %149, i32 0, i32 1
  %170 = ptrtoint ptr %ssci209 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %ssci209, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i.i545) #18
  %172 = ptrtoint ptr %tmp.i.i545 to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %171, ptr %tmp.i.i545, align 4
  %call.i.i546 = call i32 @nla_put(ptr noundef %skb, i32 noundef 8, i32 noundef 4, ptr noundef nonnull %tmp.i.i545) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i.i545) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i546)
  %tobool211.not = icmp eq i32 %call.i.i546, 0
  br i1 %tobool211.not, label %land.lhs.true208.lor.lhs.false212_crit_edge, label %land.lhs.true208.cleanup221.thread_crit_edge

land.lhs.true208.cleanup221.thread_crit_edge:     ; preds = %land.lhs.true208
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup221.thread

land.lhs.true208.lor.lhs.false212_crit_edge:      ; preds = %land.lhs.true208
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false212

lor.lhs.false212:                                 ; preds = %land.lhs.true208.lor.lhs.false212_crit_edge, %lor.lhs.false204.lor.lhs.false212_crit_edge
  %active213 = getelementptr inbounds %struct.macsec_rx_sa, ptr %149, i32 0, i32 5
  %173 = ptrtoint ptr %active213 to i32
  call void @__asan_load1_noabort(i32 %173)
  %174 = load i8, ptr %active213, align 4, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i547) #18
  %175 = ptrtoint ptr %tmp.i547 to i32
  call void @__asan_store1_noabort(i32 %175)
  store i8 %174, ptr %tmp.i547, align 1
  %call.i548 = call i32 @nla_put(ptr noundef %skb, i32 noundef 2, i32 noundef 1, ptr noundef nonnull %tmp.i547) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i547) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i548)
  %tobool217.not = icmp eq i32 %call.i548, 0
  br i1 %tobool217.not, label %if.end219, label %lor.lhs.false212.cleanup221.thread_crit_edge

lor.lhs.false212.cleanup221.thread_crit_edge:     ; preds = %lor.lhs.false212
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup221.thread

if.end219:                                        ; preds = %lor.lhs.false212
  call void @__sanitizer_cov_trace_pc() #20
  %176 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i550 = ptrtoint ptr %177 to i32
  %sub.ptr.rhs.cast.i551 = ptrtoint ptr %152 to i32
  %sub.ptr.sub.i552 = sub i32 %sub.ptr.lhs.cast.i550, %sub.ptr.rhs.cast.i551
  %conv.i553 = trunc i32 %sub.ptr.sub.i552 to i16
  %178 = ptrtoint ptr %152 to i32
  call void @__asan_store2_noabort(i32 %178)
  store i16 %conv.i553, ptr %152, align 2
  br label %for.inc227

cleanup221.thread:                                ; preds = %lor.lhs.false212.cleanup221.thread_crit_edge, %land.lhs.true208.cleanup221.thread_crit_edge, %lor.lhs.false198.cleanup221.thread_crit_edge, %lor.lhs.false195.cleanup221.thread_crit_edge, %if.end191.cleanup221.thread_crit_edge, %if.then182, %if.end175.cleanup221.thread_crit_edge, %if.end170.cleanup221.thread_crit_edge
  %.lcssa704.sink = phi ptr [ %147, %if.then182 ], [ %147, %if.end170.cleanup221.thread_crit_edge ], [ %147, %if.end175.cleanup221.thread_crit_edge ], [ %152, %lor.lhs.false212.cleanup221.thread_crit_edge ], [ %152, %land.lhs.true208.cleanup221.thread_crit_edge ], [ %152, %lor.lhs.false198.cleanup221.thread_crit_edge ], [ %152, %lor.lhs.false195.cleanup221.thread_crit_edge ], [ %152, %if.end191.cleanup221.thread_crit_edge ]
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %.lcssa704.sink)
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %134)
  call fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef nonnull %131)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %pn166) #18
  br label %if.then.i

for.inc227:                                       ; preds = %if.end219, %do.end162.for.inc227_crit_edge
  %k.1 = phi i32 [ %inc171, %if.end219 ], [ %k.0636, %do.end162.for.inc227_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %pn166) #18
  %inc228 = add nuw nsw i32 %i.1634, 1
  %exitcond676.not = icmp eq i32 %inc228, 4
  br i1 %exitcond676.not, label %do.body238, label %for.inc227.for.body151_crit_edge

for.inc227.for.body151_crit_edge:                 ; preds = %for.inc227
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body151

do.body238:                                       ; preds = %for.inc227
  %179 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i555 = ptrtoint ptr %180 to i32
  %sub.ptr.rhs.cast.i556 = ptrtoint ptr %147 to i32
  %sub.ptr.sub.i557 = sub i32 %sub.ptr.lhs.cast.i555, %sub.ptr.rhs.cast.i556
  %conv.i558 = trunc i32 %sub.ptr.sub.i557 to i16
  %181 = ptrtoint ptr %147 to i32
  call void @__asan_store2_noabort(i32 %181)
  store i16 %conv.i558, ptr %147, align 2
  %182 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i560 = ptrtoint ptr %182 to i32
  %sub.ptr.rhs.cast.i561 = ptrtoint ptr %134 to i32
  %sub.ptr.sub.i562 = sub i32 %sub.ptr.lhs.cast.i560, %sub.ptr.rhs.cast.i561
  %conv.i563 = trunc i32 %sub.ptr.sub.i562 to i16
  %183 = ptrtoint ptr %134 to i32
  call void @__asan_store2_noabort(i32 %183)
  store i16 %conv.i563, ptr %134, align 2
  %call239 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call239, label %do.body238.do.end248_crit_edge, label %land.lhs.true240

do.body238.do.end248_crit_edge:                   ; preds = %do.body238
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end248

land.lhs.true240:                                 ; preds = %do.body238
  %call241 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call241)
  %tobool242.not = icmp eq i32 %call241, 0
  br i1 %tobool242.not, label %land.lhs.true240.do.end248_crit_edge, label %land.lhs.true243

land.lhs.true240.do.end248_crit_edge:             ; preds = %land.lhs.true240
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end248

land.lhs.true243:                                 ; preds = %land.lhs.true240
  %.b445446 = load i1, ptr @dump_secy.__warned.7, align 1
  br i1 %.b445446, label %land.lhs.true243.do.end248_crit_edge, label %if.then245

land.lhs.true243.do.end248_crit_edge:             ; preds = %land.lhs.true243
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end248

if.then245:                                       ; preds = %land.lhs.true243
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @dump_secy.__warned.7, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 3140, ptr noundef nonnull @.str.4) #18
  br label %do.end248

do.end248:                                        ; preds = %if.then245, %land.lhs.true243.do.end248_crit_edge, %land.lhs.true240.do.end248_crit_edge, %do.body238.do.end248_crit_edge
  %184 = ptrtoint ptr %rx_sc.0640 to i32
  call void @__asan_load4_noabort(i32 %184)
  %rx_sc.0 = load ptr, ptr %rx_sc.0640, align 4
  %tobool118.not = icmp eq ptr %rx_sc.0, null
  br i1 %tobool118.not, label %do.end248.for.end250_crit_edge, label %do.end248.for.body119_crit_edge

do.end248.for.body119_crit_edge:                  ; preds = %do.end248
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body119

do.end248.for.end250_crit_edge:                   ; preds = %do.end248
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end250

for.end250:                                       ; preds = %do.end248.for.end250_crit_edge, %do.end114.for.end250_crit_edge
  %185 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i565 = ptrtoint ptr %186 to i32
  %sub.ptr.rhs.cast.i566 = ptrtoint ptr %131 to i32
  %sub.ptr.sub.i567 = sub i32 %sub.ptr.lhs.cast.i565, %sub.ptr.rhs.cast.i566
  %conv.i568 = trunc i32 %sub.ptr.sub.i567 to i16
  %187 = ptrtoint ptr %131 to i32
  call void @__asan_store2_noabort(i32 %187)
  store i16 %conv.i568, ptr %131, align 2
  %add.ptr1.i = getelementptr i8, ptr %call4, i32 -20
  %188 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i.i570 = ptrtoint ptr %188 to i32
  %sub.ptr.rhs.cast.i.i571 = ptrtoint ptr %add.ptr1.i to i32
  %sub.ptr.sub.i.i572 = sub i32 %sub.ptr.lhs.cast.i.i570, %sub.ptr.rhs.cast.i.i571
  %189 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 %sub.ptr.sub.i.i572, ptr %add.ptr1.i, align 4
  br label %cleanup252

if.then.i:                                        ; preds = %cleanup221.thread, %if.then146, %if.then141, %if.then137, %if.then133, %if.then123, %for.end.if.then.i_crit_edge, %cleanup.thread, %if.end38.if.then.i_crit_edge, %if.then37, %if.end29.if.then.i_crit_edge, %if.then28, %if.end21.if.then.i_crit_edge, %nla_nest_cancel.exit.i, %if.end16.if.then.i_crit_edge, %if.end12.if.then.i_crit_edge, %if.end8.if.then.i_crit_edge, %genl_dump_check_consistent.exit.if.then.i_crit_edge
  %add.ptr1.i574 = getelementptr i8, ptr %call4, i32 -20
  %tobool.not.i.i.i = icmp eq ptr %add.ptr1.i574, null
  br i1 %tobool.not.i.i.i, label %if.then.i.cleanup252_crit_edge, label %if.then.i.i.i577

if.then.i.cleanup252_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup252

if.then.i.i.i577:                                 ; preds = %if.then.i
  %data.i.i.i575 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %190 = ptrtoint ptr %data.i.i.i575 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %data.i.i.i575, align 4
  %cmp.i.i.i576 = icmp ugt ptr %191, %add.ptr1.i574
  br i1 %cmp.i.i.i576, label %do.end.i.i.i578, label %if.then.i.i.i577.if.end.i.i.i_crit_edge, !prof !203

if.then.i.i.i577.if.end.i.i.i_crit_edge:          ; preds = %if.then.i.i.i577
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end.i.i.i

do.end.i.i.i578:                                  ; preds = %if.then.i.i.i577
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 991, i32 noundef 9, ptr noundef null) #18
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %do.end.i.i.i578, %if.then.i.i.i577.if.end.i.i.i_crit_edge
  %192 = ptrtoint ptr %data.i.i.i575 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %data.i.i.i575, align 4
  %sub.ptr.lhs.cast.i.i.i579 = ptrtoint ptr %add.ptr1.i574 to i32
  %sub.ptr.rhs.cast.i.i.i580 = ptrtoint ptr %193 to i32
  %sub.ptr.sub.i.i.i581 = sub i32 %sub.ptr.lhs.cast.i.i.i579, %sub.ptr.rhs.cast.i.i.i580
  call void @skb_trim(ptr noundef %skb, i32 noundef %sub.ptr.sub.i.i.i581) #18
  br label %cleanup252

cleanup252:                                       ; preds = %if.end.i.i.i, %if.then.i.cleanup252_crit_edge, %for.end250, %entry.cleanup252_crit_edge
  %retval.0 = phi i32 [ 0, %for.end250 ], [ -90, %entry.cleanup252_crit_edge ], [ -90, %if.then.i.cleanup252_crit_edge ], [ -90, %if.end.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %dev_stats) #18
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %rx_sa_stats) #18
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %rx_sc_stats) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tx_sa_stats) #18
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %tx_sc_stats) #18
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @genlmsg_put(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @get_tx_sc_stats(ptr noundef %dev, ptr noundef %sum) unnamed_addr #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %0 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %call851 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call851, i32 %2)
  %cmp52 = icmp ult i32 %call851, %2
  br i1 %cmp52, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %stats13 = getelementptr i8, ptr %dev, i32 2360
  %OutPktsEncrypted24 = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %sum, i32 0, i32 1
  %OutOctetsProtected26 = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %sum, i32 0, i32 2
  %OutOctetsEncrypted28 = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %sum, i32 0, i32 3
  br label %for.body

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then.if.end_crit_edge, label %lor.lhs.false.i.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

lor.lhs.false.i.i:                                ; preds = %if.then
  %real_dev.i.i = getelementptr i8, ptr %dev, i32 2368
  %3 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %4, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.if.end_crit_edge:               ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %5 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.60)
  switch i32 %1, label %if.end.i.i.if.end_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 145
  %6 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.if.end_crit_edge, label %land.rhs.i.i

if.then2.i.i.if.end_crit_edge:                    ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %7, i32 0, i32 42
  %8 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %9, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.if.end_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 23
  %10 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %11, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.if.end_crit_edge:                    ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 151
  %12 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %13, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.if.end_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.if.end_crit_edge:     ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %7, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %4, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %14 = getelementptr inbounds i8, ptr %ctx, i32 12
  %15 = call ptr @memset(ptr %14, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %16 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %1, ptr %offload1.i.i, align 4
  %17 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge, ptr %ctx, align 4
  %18 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool.not, label %macsec_get_ops.exit.if.end_crit_edge, label %if.then3

macsec_get_ops.exit.if.end_crit_edge:             ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then3:                                         ; preds = %macsec_get_ops.exit
  %stats = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 5
  %19 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %sum, ptr %stats, align 4
  %secy5 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %20 = ptrtoint ptr %secy5 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %add.ptr.i.i, ptr %secy5, align 4
  %mdo_get_tx_sc_stats = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 15
  %21 = ptrtoint ptr %mdo_get_tx_sc_stats to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mdo_get_tx_sc_stats, align 4
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %if.then3.if.end_crit_edge, label %if.end.i46, !prof !203

if.then3.if.end_crit_edge:                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i46:                                       ; preds = %if.then3
  %offload.i45 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %23 = ptrtoint ptr %offload.i45 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %offload.i45, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp.i = icmp eq i32 %24, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i46.if.end5.i_crit_edge

if.end.i46.if.end5.i_crit_edge:                   ; preds = %if.end.i46
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i46
  call void @__sanitizer_cov_trace_pc() #20
  %25 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %26, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i46.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %27 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %22(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %28 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %22(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %29 = ptrtoint ptr %offload.i45 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %offload.i45, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp45.i = icmp eq i32 %30, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.if.end_crit_edge

phy_unlock.i.if.end_crit_edge:                    ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %31 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %32, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %if.end

if.end:                                           ; preds = %if.then46.i, %phy_unlock.i.if.end_crit_edge, %if.then3.if.end_crit_edge, %macsec_get_ops.exit.if.end_crit_edge, %macsec_check_offload.exit.i.if.end_crit_edge, %if.then9.i.i.if.end_crit_edge, %land.rhs.i.i.if.end_crit_edge, %if.then2.i.i.if.end_crit_edge, %if.end.i.i.if.end_crit_edge, %lor.lhs.false.i.i.if.end_crit_edge, %if.then.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %cleanup

for.body:                                         ; preds = %do.end21.for.body_crit_edge, %for.body.lr.ph
  %call853 = phi i32 [ %call851, %for.body.lr.ph ], [ %call8, %do.end21.for.body_crit_edge ]
  %33 = ptrtoint ptr %stats13 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %stats13, align 8
  %35 = ptrtoint ptr %34 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call853
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx, align 4
  %add = add i32 %37, %35
  %38 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_tx_sc_stats, ptr %38, i32 0, i32 1
  %tmp.sroa.5.0.stats17.sroa_idx = getelementptr inbounds i8, ptr %38, i32 8
  %tmp.sroa.7.0.stats17.sroa_idx = getelementptr inbounds i8, ptr %38, i32 16
  %tmp.sroa.9.0.stats17.sroa_idx = getelementptr inbounds i8, ptr %38, i32 24
  br label %do.body15

do.body15:                                        ; preds = %do.body15.do.body15_crit_edge, %for.body
  %call16 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp)
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load8_noabort(i32 %39)
  %tmp.sroa.0.0.copyload = load i64, ptr %38, align 8
  %40 = ptrtoint ptr %tmp.sroa.5.0.stats17.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %40)
  %tmp.sroa.5.0.copyload = load i64, ptr %tmp.sroa.5.0.stats17.sroa_idx, align 8
  %41 = ptrtoint ptr %tmp.sroa.7.0.stats17.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %41)
  %tmp.sroa.7.0.copyload = load i64, ptr %tmp.sroa.7.0.stats17.sroa_idx, align 8
  %42 = ptrtoint ptr %tmp.sroa.9.0.stats17.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %42)
  %tmp.sroa.9.0.copyload = load i64, ptr %tmp.sroa.9.0.stats17.sroa_idx, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !210
  %43 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %syncp, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %44, %call16
  br i1 %cmp.i.i.i.i.not, label %do.end21, label %do.body15.do.body15_crit_edge

do.body15.do.body15_crit_edge:                    ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body15

do.end21:                                         ; preds = %do.body15
  %45 = ptrtoint ptr %sum to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %sum, align 8
  %add23 = add i64 %46, %tmp.sroa.0.0.copyload
  store i64 %add23, ptr %sum, align 8
  %47 = ptrtoint ptr %OutPktsEncrypted24 to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %OutPktsEncrypted24, align 8
  %add25 = add i64 %48, %tmp.sroa.5.0.copyload
  store i64 %add25, ptr %OutPktsEncrypted24, align 8
  %49 = ptrtoint ptr %OutOctetsProtected26 to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %OutOctetsProtected26, align 8
  %add27 = add i64 %50, %tmp.sroa.7.0.copyload
  store i64 %add27, ptr %OutOctetsProtected26, align 8
  %51 = ptrtoint ptr %OutOctetsEncrypted28 to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %OutOctetsEncrypted28, align 8
  %add29 = add i64 %52, %tmp.sroa.9.0.copyload
  store i64 %add29, ptr %OutOctetsEncrypted28, align 8
  %call8 = tail call i32 @cpumask_next(i32 noundef %call853, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %53 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call8, %53
  br i1 %cmp, label %do.end21.for.body_crit_edge, label %do.end21.cleanup_crit_edge

do.end21.cleanup_crit_edge:                       ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

do.end21.for.body_crit_edge:                      ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

cleanup:                                          ; preds = %do.end21.cleanup_crit_edge, %if.end, %for.cond.preheader.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_tx_sc_stats(ptr noundef %skb, ptr nocapture noundef readonly %sum) unnamed_addr #0 align 64 {
entry:
  %tmp.i19 = alloca i64, align 8
  %tmp.i17 = alloca i64, align 8
  %tmp.i15 = alloca i64, align 8
  %tmp.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %sum to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %sum, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %2 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %1, ptr %tmp.i, align 8
  %call.i = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 1, i32 noundef 8, ptr noundef nonnull %tmp.i, i32 noundef 5) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %OutPktsEncrypted = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %sum, i32 0, i32 1
  %3 = ptrtoint ptr %OutPktsEncrypted to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %OutPktsEncrypted, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i15) #18
  %5 = ptrtoint ptr %tmp.i15 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %tmp.i15, align 8
  %call.i16 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 2, i32 noundef 8, ptr noundef nonnull %tmp.i15, i32 noundef 5) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i15) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i16)
  %tobool2.not = icmp eq i32 %call.i16, 0
  br i1 %tobool2.not, label %lor.lhs.false3, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %OutOctetsProtected = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %sum, i32 0, i32 2
  %6 = ptrtoint ptr %OutOctetsProtected to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %OutOctetsProtected, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i17) #18
  %8 = ptrtoint ptr %tmp.i17 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %7, ptr %tmp.i17, align 8
  %call.i18 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 3, i32 noundef 8, ptr noundef nonnull %tmp.i17, i32 noundef 5) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i17) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18)
  %tobool5.not = icmp eq i32 %call.i18, 0
  br i1 %tobool5.not, label %lor.lhs.false6, label %lor.lhs.false3.return_crit_edge

lor.lhs.false3.return_crit_edge:                  ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #20
  %OutOctetsEncrypted = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %sum, i32 0, i32 3
  %9 = ptrtoint ptr %OutOctetsEncrypted to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %OutOctetsEncrypted, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i19) #18
  %11 = ptrtoint ptr %tmp.i19 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %tmp.i19, align 8
  %call.i20 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 4, i32 noundef 8, ptr noundef nonnull %tmp.i19, i32 noundef 5) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i19) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i20)
  %tobool8.not = icmp eq i32 %call.i20, 0
  %spec.select = select i1 %tobool8.not, i32 0, i32 -90
  br label %return

return:                                           ; preds = %lor.lhs.false6, %lor.lhs.false3.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -90, %lor.lhs.false3.return_crit_edge ], [ -90, %lor.lhs.false.return_crit_edge ], [ -90, %entry.return_crit_edge ], [ %spec.select, %lor.lhs.false6 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nla_nest_cancel(ptr noundef %skb, ptr noundef %start) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  %tobool.not.i = icmp eq ptr %start, null
  br i1 %tobool.not.i, label %entry.nlmsg_trim.exit_crit_edge, label %if.then.i

entry.nlmsg_trim.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %nlmsg_trim.exit

if.then.i:                                        ; preds = %entry
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data.i, align 4
  %cmp.i = icmp ugt ptr %1, %start
  br i1 %cmp.i, label %do.end.i, label %if.then.i.if.end.i_crit_edge, !prof !203

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end.i

do.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 991, i32 noundef 9, ptr noundef null) #18
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %if.then.i.if.end.i_crit_edge
  %2 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %start to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  tail call void @skb_trim(ptr noundef %skb, i32 noundef %sub.ptr.sub.i) #18
  br label %nlmsg_trim.exit

nlmsg_trim.exit:                                  ; preds = %if.end.i, %entry.nlmsg_trim.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @get_secy_stats(ptr noundef %dev, ptr noundef %sum) unnamed_addr #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %0 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %call862 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call862, i32 %2)
  %cmp63 = icmp ult i32 %call862, %2
  br i1 %cmp63, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %stats12 = getelementptr i8, ptr %dev, i32 2372
  %InPktsUntagged23 = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 1
  %OutPktsTooLong25 = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 2
  %InPktsNoTag27 = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 3
  %InPktsBadTag29 = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 4
  %InPktsUnknownSCI31 = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 5
  %InPktsNoSCI33 = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 6
  %InPktsOverrun35 = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 7
  br label %for.body

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then.if.end_crit_edge, label %lor.lhs.false.i.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

lor.lhs.false.i.i:                                ; preds = %if.then
  %real_dev.i.i = getelementptr i8, ptr %dev, i32 2368
  %3 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %4, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.if.end_crit_edge:               ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %5 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.61)
  switch i32 %1, label %if.end.i.i.if.end_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 145
  %6 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.if.end_crit_edge, label %land.rhs.i.i

if.then2.i.i.if.end_crit_edge:                    ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %7, i32 0, i32 42
  %8 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %9, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.if.end_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 23
  %10 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %11, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.if.end_crit_edge:                    ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 151
  %12 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %13, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.if.end_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.if.end_crit_edge:     ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %7, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %4, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %14 = getelementptr inbounds i8, ptr %ctx, i32 12
  %15 = call ptr @memset(ptr %14, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %16 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %1, ptr %offload1.i.i, align 4
  %17 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge, ptr %ctx, align 4
  %18 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool.not, label %macsec_get_ops.exit.if.end_crit_edge, label %if.then3

macsec_get_ops.exit.if.end_crit_edge:             ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then3:                                         ; preds = %macsec_get_ops.exit
  %stats = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 5
  %19 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %sum, ptr %stats, align 4
  %secy5 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %20 = ptrtoint ptr %secy5 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %add.ptr.i.i, ptr %secy5, align 4
  %mdo_get_dev_stats = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 14
  %21 = ptrtoint ptr %mdo_get_dev_stats to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mdo_get_dev_stats, align 4
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %if.then3.if.end_crit_edge, label %if.end.i57, !prof !203

if.then3.if.end_crit_edge:                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i57:                                       ; preds = %if.then3
  %offload.i56 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %23 = ptrtoint ptr %offload.i56 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %offload.i56, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp.i = icmp eq i32 %24, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i57.if.end5.i_crit_edge

if.end.i57.if.end5.i_crit_edge:                   ; preds = %if.end.i57
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i57
  call void @__sanitizer_cov_trace_pc() #20
  %25 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %26, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i57.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %27 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %22(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %28 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %22(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %29 = ptrtoint ptr %offload.i56 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %offload.i56, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp45.i = icmp eq i32 %30, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.if.end_crit_edge

phy_unlock.i.if.end_crit_edge:                    ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %31 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %32, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %if.end

if.end:                                           ; preds = %if.then46.i, %phy_unlock.i.if.end_crit_edge, %if.then3.if.end_crit_edge, %macsec_get_ops.exit.if.end_crit_edge, %macsec_check_offload.exit.i.if.end_crit_edge, %if.then9.i.i.if.end_crit_edge, %land.rhs.i.i.if.end_crit_edge, %if.then2.i.i.if.end_crit_edge, %if.end.i.i.if.end_crit_edge, %lor.lhs.false.i.i.if.end_crit_edge, %if.then.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %cleanup

for.body:                                         ; preds = %do.end20.for.body_crit_edge, %for.body.lr.ph
  %call864 = phi i32 [ %call862, %for.body.lr.ph ], [ %call8, %do.end20.for.body_crit_edge ]
  %33 = ptrtoint ptr %stats12 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %stats12, align 4
  %35 = ptrtoint ptr %34 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call864
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx, align 4
  %add = add i32 %37, %35
  %38 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_secy_stats, ptr %38, i32 0, i32 1
  %tmp.sroa.5.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %38, i32 8
  %tmp.sroa.6.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %38, i32 16
  %tmp.sroa.7.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %38, i32 24
  %tmp.sroa.8.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %38, i32 32
  %tmp.sroa.9.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %38, i32 40
  %tmp.sroa.10.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %38, i32 48
  %tmp.sroa.11.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %38, i32 56
  br label %do.body14

do.body14:                                        ; preds = %do.body14.do.body14_crit_edge, %for.body
  %call15 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp)
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load8_noabort(i32 %39)
  %tmp.sroa.0.0.copyload = load i64, ptr %38, align 8
  %40 = ptrtoint ptr %tmp.sroa.5.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %40)
  %tmp.sroa.5.0.copyload = load i64, ptr %tmp.sroa.5.0.stats16.sroa_idx, align 8
  %41 = ptrtoint ptr %tmp.sroa.6.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %41)
  %tmp.sroa.6.0.copyload = load i64, ptr %tmp.sroa.6.0.stats16.sroa_idx, align 8
  %42 = ptrtoint ptr %tmp.sroa.7.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %42)
  %tmp.sroa.7.0.copyload = load i64, ptr %tmp.sroa.7.0.stats16.sroa_idx, align 8
  %43 = ptrtoint ptr %tmp.sroa.8.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %43)
  %tmp.sroa.8.0.copyload = load i64, ptr %tmp.sroa.8.0.stats16.sroa_idx, align 8
  %44 = ptrtoint ptr %tmp.sroa.9.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %44)
  %tmp.sroa.9.0.copyload = load i64, ptr %tmp.sroa.9.0.stats16.sroa_idx, align 8
  %45 = ptrtoint ptr %tmp.sroa.10.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %45)
  %tmp.sroa.10.0.copyload = load i64, ptr %tmp.sroa.10.0.stats16.sroa_idx, align 8
  %46 = ptrtoint ptr %tmp.sroa.11.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %46)
  %tmp.sroa.11.0.copyload = load i64, ptr %tmp.sroa.11.0.stats16.sroa_idx, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !210
  %47 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %syncp, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %48, %call15
  br i1 %cmp.i.i.i.i.not, label %do.end20, label %do.body14.do.body14_crit_edge

do.body14.do.body14_crit_edge:                    ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body14

do.end20:                                         ; preds = %do.body14
  %49 = ptrtoint ptr %sum to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %sum, align 8
  %add22 = add i64 %50, %tmp.sroa.0.0.copyload
  store i64 %add22, ptr %sum, align 8
  %51 = ptrtoint ptr %InPktsUntagged23 to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %InPktsUntagged23, align 8
  %add24 = add i64 %52, %tmp.sroa.5.0.copyload
  store i64 %add24, ptr %InPktsUntagged23, align 8
  %53 = ptrtoint ptr %OutPktsTooLong25 to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %OutPktsTooLong25, align 8
  %add26 = add i64 %54, %tmp.sroa.6.0.copyload
  store i64 %add26, ptr %OutPktsTooLong25, align 8
  %55 = ptrtoint ptr %InPktsNoTag27 to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %InPktsNoTag27, align 8
  %add28 = add i64 %56, %tmp.sroa.7.0.copyload
  store i64 %add28, ptr %InPktsNoTag27, align 8
  %57 = ptrtoint ptr %InPktsBadTag29 to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %InPktsBadTag29, align 8
  %add30 = add i64 %58, %tmp.sroa.8.0.copyload
  store i64 %add30, ptr %InPktsBadTag29, align 8
  %59 = ptrtoint ptr %InPktsUnknownSCI31 to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %InPktsUnknownSCI31, align 8
  %add32 = add i64 %60, %tmp.sroa.9.0.copyload
  store i64 %add32, ptr %InPktsUnknownSCI31, align 8
  %61 = ptrtoint ptr %InPktsNoSCI33 to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %InPktsNoSCI33, align 8
  %add34 = add i64 %62, %tmp.sroa.10.0.copyload
  store i64 %add34, ptr %InPktsNoSCI33, align 8
  %63 = ptrtoint ptr %InPktsOverrun35 to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %InPktsOverrun35, align 8
  %add36 = add i64 %64, %tmp.sroa.11.0.copyload
  store i64 %add36, ptr %InPktsOverrun35, align 8
  %call8 = tail call i32 @cpumask_next(i32 noundef %call864, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %65 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call8, %65
  br i1 %cmp, label %do.end20.for.body_crit_edge, label %do.end20.cleanup_crit_edge

do.end20.cleanup_crit_edge:                       ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

do.end20.for.body_crit_edge:                      ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

cleanup:                                          ; preds = %do.end20.cleanup_crit_edge, %if.end, %for.cond.preheader.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_secy_stats(ptr noundef %skb, ptr nocapture noundef readonly %sum) unnamed_addr #0 align 64 {
entry:
  %tmp.i47 = alloca i64, align 8
  %tmp.i45 = alloca i64, align 8
  %tmp.i43 = alloca i64, align 8
  %tmp.i41 = alloca i64, align 8
  %tmp.i39 = alloca i64, align 8
  %tmp.i37 = alloca i64, align 8
  %tmp.i35 = alloca i64, align 8
  %tmp.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %sum to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %sum, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %2 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %1, ptr %tmp.i, align 8
  %call.i = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 1, i32 noundef 8, ptr noundef nonnull %tmp.i, i32 noundef 9) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %InPktsUntagged = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 1
  %3 = ptrtoint ptr %InPktsUntagged to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %InPktsUntagged, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i35) #18
  %5 = ptrtoint ptr %tmp.i35 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %tmp.i35, align 8
  %call.i36 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 2, i32 noundef 8, ptr noundef nonnull %tmp.i35, i32 noundef 9) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i35) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i36)
  %tobool2.not = icmp eq i32 %call.i36, 0
  br i1 %tobool2.not, label %lor.lhs.false3, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %OutPktsTooLong = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 2
  %6 = ptrtoint ptr %OutPktsTooLong to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %OutPktsTooLong, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i37) #18
  %8 = ptrtoint ptr %tmp.i37 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %7, ptr %tmp.i37, align 8
  %call.i38 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 3, i32 noundef 8, ptr noundef nonnull %tmp.i37, i32 noundef 9) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i37) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i38)
  %tobool5.not = icmp eq i32 %call.i38, 0
  br i1 %tobool5.not, label %lor.lhs.false6, label %lor.lhs.false3.return_crit_edge

lor.lhs.false3.return_crit_edge:                  ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %InPktsNoTag = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 3
  %9 = ptrtoint ptr %InPktsNoTag to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %InPktsNoTag, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i39) #18
  %11 = ptrtoint ptr %tmp.i39 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %tmp.i39, align 8
  %call.i40 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 4, i32 noundef 8, ptr noundef nonnull %tmp.i39, i32 noundef 9) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i39) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i40)
  %tobool8.not = icmp eq i32 %call.i40, 0
  br i1 %tobool8.not, label %lor.lhs.false9, label %lor.lhs.false6.return_crit_edge

lor.lhs.false6.return_crit_edge:                  ; preds = %lor.lhs.false6
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %InPktsBadTag = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 4
  %12 = ptrtoint ptr %InPktsBadTag to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %InPktsBadTag, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i41) #18
  %14 = ptrtoint ptr %tmp.i41 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %tmp.i41, align 8
  %call.i42 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 5, i32 noundef 8, ptr noundef nonnull %tmp.i41, i32 noundef 9) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i41) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i42)
  %tobool11.not = icmp eq i32 %call.i42, 0
  br i1 %tobool11.not, label %lor.lhs.false12, label %lor.lhs.false9.return_crit_edge

lor.lhs.false9.return_crit_edge:                  ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false12:                                  ; preds = %lor.lhs.false9
  %InPktsUnknownSCI = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 5
  %15 = ptrtoint ptr %InPktsUnknownSCI to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %InPktsUnknownSCI, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i43) #18
  %17 = ptrtoint ptr %tmp.i43 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %tmp.i43, align 8
  %call.i44 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 6, i32 noundef 8, ptr noundef nonnull %tmp.i43, i32 noundef 9) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i43) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i44)
  %tobool14.not = icmp eq i32 %call.i44, 0
  br i1 %tobool14.not, label %lor.lhs.false15, label %lor.lhs.false12.return_crit_edge

lor.lhs.false12.return_crit_edge:                 ; preds = %lor.lhs.false12
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %InPktsNoSCI = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 6
  %18 = ptrtoint ptr %InPktsNoSCI to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %InPktsNoSCI, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i45) #18
  %20 = ptrtoint ptr %tmp.i45 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %tmp.i45, align 8
  %call.i46 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 7, i32 noundef 8, ptr noundef nonnull %tmp.i45, i32 noundef 9) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i45) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i46)
  %tobool17.not = icmp eq i32 %call.i46, 0
  br i1 %tobool17.not, label %lor.lhs.false18, label %lor.lhs.false15.return_crit_edge

lor.lhs.false15.return_crit_edge:                 ; preds = %lor.lhs.false15
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  call void @__sanitizer_cov_trace_pc() #20
  %InPktsOverrun = getelementptr inbounds %struct.macsec_dev_stats, ptr %sum, i32 0, i32 7
  %21 = ptrtoint ptr %InPktsOverrun to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %InPktsOverrun, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i47) #18
  %23 = ptrtoint ptr %tmp.i47 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %tmp.i47, align 8
  %call.i48 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 8, i32 noundef 8, ptr noundef nonnull %tmp.i47, i32 noundef 9) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i47) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i48)
  %tobool20.not = icmp eq i32 %call.i48, 0
  %spec.select = select i1 %tobool20.not, i32 0, i32 -90
  br label %return

return:                                           ; preds = %lor.lhs.false18, %lor.lhs.false15.return_crit_edge, %lor.lhs.false12.return_crit_edge, %lor.lhs.false9.return_crit_edge, %lor.lhs.false6.return_crit_edge, %lor.lhs.false3.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -90, %lor.lhs.false15.return_crit_edge ], [ -90, %lor.lhs.false12.return_crit_edge ], [ -90, %lor.lhs.false9.return_crit_edge ], [ -90, %lor.lhs.false6.return_crit_edge ], [ -90, %lor.lhs.false3.return_crit_edge ], [ -90, %lor.lhs.false.return_crit_edge ], [ -90, %entry.return_crit_edge ], [ %spec.select, %lor.lhs.false18 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @lockdep_rtnl_is_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @get_tx_sa_stats(ptr noundef %dev, i32 noundef %an, ptr noundef %tx_sa, ptr noundef %sum) unnamed_addr #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %0 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %call935 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call935, i32 %2)
  %cmp36 = icmp ult i32 %call935, %2
  br i1 %cmp36, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %stats12 = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 6
  %OutPktsEncrypted16 = getelementptr inbounds %struct.macsec_tx_sa_stats, ptr %sum, i32 0, i32 1
  br label %for.body

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then.if.end_crit_edge, label %lor.lhs.false.i.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

lor.lhs.false.i.i:                                ; preds = %if.then
  %real_dev.i.i = getelementptr i8, ptr %dev, i32 2368
  %3 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %4, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.if.end_crit_edge:               ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %5 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.62)
  switch i32 %1, label %if.end.i.i.if.end_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 145
  %6 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.if.end_crit_edge, label %land.rhs.i.i

if.then2.i.i.if.end_crit_edge:                    ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %7, i32 0, i32 42
  %8 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %9, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.if.end_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 23
  %10 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %11, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.if.end_crit_edge:                    ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 151
  %12 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %13, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.if.end_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.if.end_crit_edge:     ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %7, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %4, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %14 = getelementptr inbounds i8, ptr %ctx, i32 12
  %15 = call ptr @memset(ptr %14, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %16 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %1, ptr %offload1.i.i, align 4
  %17 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge, ptr %ctx, align 4
  %18 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool.not, label %macsec_get_ops.exit.if.end_crit_edge, label %if.then3

macsec_get_ops.exit.if.end_crit_edge:             ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then3:                                         ; preds = %macsec_get_ops.exit
  %conv = trunc i32 %an to i8
  %sa = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4
  %19 = ptrtoint ptr %sa to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %conv, ptr %sa, align 4
  %20 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 2
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %tx_sa, ptr %20, align 4
  %stats = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 5
  %22 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %sum, ptr %stats, align 4
  %secy6 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %23 = ptrtoint ptr %secy6 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %add.ptr.i.i, ptr %secy6, align 4
  %mdo_get_tx_sa_stats = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 16
  %24 = ptrtoint ptr %mdo_get_tx_sa_stats to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mdo_get_tx_sa_stats, align 4
  %tobool.not.i = icmp eq ptr %25, null
  br i1 %tobool.not.i, label %if.then3.if.end_crit_edge, label %if.end.i31, !prof !203

if.then3.if.end_crit_edge:                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i31:                                       ; preds = %if.then3
  %offload.i30 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %26 = ptrtoint ptr %offload.i30 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %offload.i30, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %27)
  %cmp.i = icmp eq i32 %27, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i31.if.end5.i_crit_edge

if.end.i31.if.end5.i_crit_edge:                   ; preds = %if.end.i31
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i31
  call void @__sanitizer_cov_trace_pc() #20
  %28 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %29, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i31.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %30 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %25(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %31 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %25(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %32 = ptrtoint ptr %offload.i30 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %offload.i30, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %33)
  %cmp45.i = icmp eq i32 %33, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.if.end_crit_edge

phy_unlock.i.if.end_crit_edge:                    ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %34 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %35, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %if.end

if.end:                                           ; preds = %if.then46.i, %phy_unlock.i.if.end_crit_edge, %if.then3.if.end_crit_edge, %macsec_get_ops.exit.if.end_crit_edge, %macsec_check_offload.exit.i.if.end_crit_edge, %if.then9.i.i.if.end_crit_edge, %land.rhs.i.i.if.end_crit_edge, %if.then2.i.i.if.end_crit_edge, %if.end.i.i.if.end_crit_edge, %lor.lhs.false.i.i.if.end_crit_edge, %if.then.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %call937 = phi i32 [ %call935, %for.body.lr.ph ], [ %call9, %for.body.for.body_crit_edge ]
  %36 = ptrtoint ptr %stats12 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %stats12, align 8
  %38 = ptrtoint ptr %37 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call937
  %39 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx, align 4
  %add = add i32 %40, %38
  %41 = inttoptr i32 %add to ptr
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %41, align 4
  %44 = ptrtoint ptr %sum to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %sum, align 4
  %add15 = add i32 %45, %43
  store i32 %add15, ptr %sum, align 4
  %OutPktsEncrypted = getelementptr inbounds %struct.macsec_tx_sa_stats, ptr %41, i32 0, i32 1
  %46 = ptrtoint ptr %OutPktsEncrypted to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %OutPktsEncrypted, align 4
  %48 = ptrtoint ptr %OutPktsEncrypted16 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %OutPktsEncrypted16, align 4
  %add17 = add i32 %49, %47
  store i32 %add17, ptr %OutPktsEncrypted16, align 4
  %call9 = tail call i32 @cpumask_next(i32 noundef %call937, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %50 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call9, %50
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %if.end, %for.cond.preheader.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_tx_sa_stats(ptr noundef %skb, ptr nocapture noundef readonly %sum) unnamed_addr #0 align 64 {
entry:
  %tmp.i5 = alloca i32, align 4
  %tmp.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %sum to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sum, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #18
  %2 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %tmp.i, align 4
  %call.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 6, i32 noundef 4, ptr noundef nonnull %tmp.i) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %OutPktsEncrypted = getelementptr inbounds %struct.macsec_tx_sa_stats, ptr %sum, i32 0, i32 1
  %3 = ptrtoint ptr %OutPktsEncrypted to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %OutPktsEncrypted, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i5) #18
  %5 = ptrtoint ptr %tmp.i5 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %tmp.i5, align 4
  %call.i6 = call i32 @nla_put(ptr noundef %skb, i32 noundef 7, i32 noundef 4, ptr noundef nonnull %tmp.i5) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i5) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6)
  %tobool2.not = icmp eq i32 %call.i6, 0
  %spec.select = select i1 %tobool2.not, i32 0, i32 -90
  br label %return

return:                                           ; preds = %lor.lhs.false, %entry.return_crit_edge
  %retval.0 = phi i32 [ -90, %entry.return_crit_edge ], [ %spec.select, %lor.lhs.false ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nla_put(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @get_rx_sc_stats(ptr noundef %dev, ptr noundef %rx_sc, ptr noundef %sum) unnamed_addr #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %0 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %call967 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call967, i32 %2)
  %cmp68 = icmp ult i32 %call967, %2
  br i1 %cmp68, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %stats12 = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc, i32 0, i32 4
  %InOctetsDecrypted23 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 1
  %InPktsUnchecked25 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 2
  %InPktsDelayed27 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 3
  %InPktsOK29 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 4
  %InPktsInvalid31 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 5
  %InPktsLate33 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 6
  %InPktsNotValid35 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 7
  %InPktsNotUsingSA37 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 8
  %InPktsUnusedSA39 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 9
  br label %for.body

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then.if.end_crit_edge, label %lor.lhs.false.i.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

lor.lhs.false.i.i:                                ; preds = %if.then
  %real_dev.i.i = getelementptr i8, ptr %dev, i32 2368
  %3 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %4, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.if.end_crit_edge:               ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %5 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.63)
  switch i32 %1, label %if.end.i.i.if.end_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 145
  %6 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.if.end_crit_edge, label %land.rhs.i.i

if.then2.i.i.if.end_crit_edge:                    ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %7, i32 0, i32 42
  %8 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %9, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.if.end_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 23
  %10 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %11, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.if.end_crit_edge:                    ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 151
  %12 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %13, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.if.end_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.if.end_crit_edge:     ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %7, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %4, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %14 = getelementptr inbounds i8, ptr %ctx, i32 16
  %15 = call ptr @memset(ptr %14, i32 0, i32 144)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %16 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %1, ptr %offload1.i.i, align 4
  %17 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge, ptr %ctx, align 4
  %18 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool.not, label %macsec_get_ops.exit.if.end_crit_edge, label %if.then3

macsec_get_ops.exit.if.end_crit_edge:             ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then3:                                         ; preds = %macsec_get_ops.exit
  %stats = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 5
  %19 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %sum, ptr %stats, align 4
  %secy5 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %20 = ptrtoint ptr %secy5 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %add.ptr.i.i, ptr %secy5, align 4
  %rx_sc6 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 3
  %21 = ptrtoint ptr %rx_sc6 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %rx_sc, ptr %rx_sc6, align 4
  %mdo_get_rx_sc_stats = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 17
  %22 = ptrtoint ptr %mdo_get_rx_sc_stats to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %mdo_get_rx_sc_stats, align 4
  %tobool.not.i = icmp eq ptr %23, null
  br i1 %tobool.not.i, label %if.then3.if.end_crit_edge, label %if.end.i63, !prof !203

if.then3.if.end_crit_edge:                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i63:                                       ; preds = %if.then3
  %offload.i62 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %24 = ptrtoint ptr %offload.i62 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %offload.i62, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %25)
  %cmp.i = icmp eq i32 %25, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i63.if.end5.i_crit_edge

if.end.i63.if.end5.i_crit_edge:                   ; preds = %if.end.i63
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i63
  call void @__sanitizer_cov_trace_pc() #20
  %26 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %27, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i63.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %28 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %23(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %29 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %23(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %30 = ptrtoint ptr %offload.i62 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %offload.i62, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %31)
  %cmp45.i = icmp eq i32 %31, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.if.end_crit_edge

phy_unlock.i.if.end_crit_edge:                    ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %32 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %33, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %if.end

if.end:                                           ; preds = %if.then46.i, %phy_unlock.i.if.end_crit_edge, %if.then3.if.end_crit_edge, %macsec_get_ops.exit.if.end_crit_edge, %macsec_check_offload.exit.i.if.end_crit_edge, %if.then9.i.i.if.end_crit_edge, %land.rhs.i.i.if.end_crit_edge, %if.then2.i.i.if.end_crit_edge, %if.end.i.i.if.end_crit_edge, %lor.lhs.false.i.i.if.end_crit_edge, %if.then.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %cleanup

for.body:                                         ; preds = %do.end20.for.body_crit_edge, %for.body.lr.ph
  %call969 = phi i32 [ %call967, %for.body.lr.ph ], [ %call9, %do.end20.for.body_crit_edge ]
  %34 = ptrtoint ptr %stats12 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %stats12, align 4
  %36 = ptrtoint ptr %35 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call969
  %37 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx, align 4
  %add = add i32 %38, %36
  %39 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %39, i32 0, i32 1
  %tmp.sroa.5.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 8
  %tmp.sroa.6.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 16
  %tmp.sroa.7.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 24
  %tmp.sroa.8.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 32
  %tmp.sroa.9.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 40
  %tmp.sroa.10.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 48
  %tmp.sroa.11.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 56
  %tmp.sroa.12.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 64
  %tmp.sroa.13.0.stats16.sroa_idx = getelementptr inbounds i8, ptr %39, i32 72
  br label %do.body14

do.body14:                                        ; preds = %do.body14.do.body14_crit_edge, %for.body
  %call15 = tail call fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp)
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load8_noabort(i32 %40)
  %tmp.sroa.0.0.copyload = load i64, ptr %39, align 8
  %41 = ptrtoint ptr %tmp.sroa.5.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %41)
  %tmp.sroa.5.0.copyload = load i64, ptr %tmp.sroa.5.0.stats16.sroa_idx, align 8
  %42 = ptrtoint ptr %tmp.sroa.6.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %42)
  %tmp.sroa.6.0.copyload = load i64, ptr %tmp.sroa.6.0.stats16.sroa_idx, align 8
  %43 = ptrtoint ptr %tmp.sroa.7.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %43)
  %tmp.sroa.7.0.copyload = load i64, ptr %tmp.sroa.7.0.stats16.sroa_idx, align 8
  %44 = ptrtoint ptr %tmp.sroa.8.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %44)
  %tmp.sroa.8.0.copyload = load i64, ptr %tmp.sroa.8.0.stats16.sroa_idx, align 8
  %45 = ptrtoint ptr %tmp.sroa.9.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %45)
  %tmp.sroa.9.0.copyload = load i64, ptr %tmp.sroa.9.0.stats16.sroa_idx, align 8
  %46 = ptrtoint ptr %tmp.sroa.10.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %46)
  %tmp.sroa.10.0.copyload = load i64, ptr %tmp.sroa.10.0.stats16.sroa_idx, align 8
  %47 = ptrtoint ptr %tmp.sroa.11.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %47)
  %tmp.sroa.11.0.copyload = load i64, ptr %tmp.sroa.11.0.stats16.sroa_idx, align 8
  %48 = ptrtoint ptr %tmp.sroa.12.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %48)
  %tmp.sroa.12.0.copyload = load i64, ptr %tmp.sroa.12.0.stats16.sroa_idx, align 8
  %49 = ptrtoint ptr %tmp.sroa.13.0.stats16.sroa_idx to i32
  call void @__asan_load8_noabort(i32 %49)
  %tmp.sroa.13.0.copyload = load i64, ptr %tmp.sroa.13.0.stats16.sroa_idx, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !210
  %50 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %syncp, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %51, %call15
  br i1 %cmp.i.i.i.i.not, label %do.end20, label %do.body14.do.body14_crit_edge

do.body14.do.body14_crit_edge:                    ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body14

do.end20:                                         ; preds = %do.body14
  %52 = ptrtoint ptr %sum to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %sum, align 8
  %add22 = add i64 %53, %tmp.sroa.0.0.copyload
  store i64 %add22, ptr %sum, align 8
  %54 = ptrtoint ptr %InOctetsDecrypted23 to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %InOctetsDecrypted23, align 8
  %add24 = add i64 %55, %tmp.sroa.5.0.copyload
  store i64 %add24, ptr %InOctetsDecrypted23, align 8
  %56 = ptrtoint ptr %InPktsUnchecked25 to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %InPktsUnchecked25, align 8
  %add26 = add i64 %57, %tmp.sroa.6.0.copyload
  store i64 %add26, ptr %InPktsUnchecked25, align 8
  %58 = ptrtoint ptr %InPktsDelayed27 to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %InPktsDelayed27, align 8
  %add28 = add i64 %59, %tmp.sroa.7.0.copyload
  store i64 %add28, ptr %InPktsDelayed27, align 8
  %60 = ptrtoint ptr %InPktsOK29 to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %InPktsOK29, align 8
  %add30 = add i64 %61, %tmp.sroa.8.0.copyload
  store i64 %add30, ptr %InPktsOK29, align 8
  %62 = ptrtoint ptr %InPktsInvalid31 to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %InPktsInvalid31, align 8
  %add32 = add i64 %63, %tmp.sroa.9.0.copyload
  store i64 %add32, ptr %InPktsInvalid31, align 8
  %64 = ptrtoint ptr %InPktsLate33 to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %InPktsLate33, align 8
  %add34 = add i64 %65, %tmp.sroa.10.0.copyload
  store i64 %add34, ptr %InPktsLate33, align 8
  %66 = ptrtoint ptr %InPktsNotValid35 to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %InPktsNotValid35, align 8
  %add36 = add i64 %67, %tmp.sroa.11.0.copyload
  store i64 %add36, ptr %InPktsNotValid35, align 8
  %68 = ptrtoint ptr %InPktsNotUsingSA37 to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %InPktsNotUsingSA37, align 8
  %add38 = add i64 %69, %tmp.sroa.12.0.copyload
  store i64 %add38, ptr %InPktsNotUsingSA37, align 8
  %70 = ptrtoint ptr %InPktsUnusedSA39 to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %InPktsUnusedSA39, align 8
  %add40 = add i64 %71, %tmp.sroa.13.0.copyload
  store i64 %add40, ptr %InPktsUnusedSA39, align 8
  %call9 = tail call i32 @cpumask_next(i32 noundef %call969, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %72 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call9, %72
  br i1 %cmp, label %do.end20.for.body_crit_edge, label %do.end20.cleanup_crit_edge

do.end20.cleanup_crit_edge:                       ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

do.end20.for.body_crit_edge:                      ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

cleanup:                                          ; preds = %do.end20.cleanup_crit_edge, %if.end, %for.cond.preheader.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_rx_sc_stats(ptr noundef %skb, ptr nocapture noundef readonly %sum) unnamed_addr #0 align 64 {
entry:
  %tmp.i61 = alloca i64, align 8
  %tmp.i59 = alloca i64, align 8
  %tmp.i57 = alloca i64, align 8
  %tmp.i55 = alloca i64, align 8
  %tmp.i53 = alloca i64, align 8
  %tmp.i51 = alloca i64, align 8
  %tmp.i49 = alloca i64, align 8
  %tmp.i47 = alloca i64, align 8
  %tmp.i45 = alloca i64, align 8
  %tmp.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %sum to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %sum, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %2 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %1, ptr %tmp.i, align 8
  %call.i = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 1, i32 noundef 8, ptr noundef nonnull %tmp.i, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %InOctetsDecrypted = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 1
  %3 = ptrtoint ptr %InOctetsDecrypted to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %InOctetsDecrypted, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i45) #18
  %5 = ptrtoint ptr %tmp.i45 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %tmp.i45, align 8
  %call.i46 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 2, i32 noundef 8, ptr noundef nonnull %tmp.i45, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i45) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i46)
  %tobool2.not = icmp eq i32 %call.i46, 0
  br i1 %tobool2.not, label %lor.lhs.false3, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %InPktsUnchecked = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 2
  %6 = ptrtoint ptr %InPktsUnchecked to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %InPktsUnchecked, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i47) #18
  %8 = ptrtoint ptr %tmp.i47 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %7, ptr %tmp.i47, align 8
  %call.i48 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 3, i32 noundef 8, ptr noundef nonnull %tmp.i47, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i47) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i48)
  %tobool5.not = icmp eq i32 %call.i48, 0
  br i1 %tobool5.not, label %lor.lhs.false6, label %lor.lhs.false3.return_crit_edge

lor.lhs.false3.return_crit_edge:                  ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %InPktsDelayed = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 3
  %9 = ptrtoint ptr %InPktsDelayed to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %InPktsDelayed, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i49) #18
  %11 = ptrtoint ptr %tmp.i49 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %tmp.i49, align 8
  %call.i50 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 4, i32 noundef 8, ptr noundef nonnull %tmp.i49, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i49) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i50)
  %tobool8.not = icmp eq i32 %call.i50, 0
  br i1 %tobool8.not, label %lor.lhs.false9, label %lor.lhs.false6.return_crit_edge

lor.lhs.false6.return_crit_edge:                  ; preds = %lor.lhs.false6
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %InPktsOK = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 4
  %12 = ptrtoint ptr %InPktsOK to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %InPktsOK, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i51) #18
  %14 = ptrtoint ptr %tmp.i51 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %tmp.i51, align 8
  %call.i52 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 5, i32 noundef 8, ptr noundef nonnull %tmp.i51, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i51) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i52)
  %tobool11.not = icmp eq i32 %call.i52, 0
  br i1 %tobool11.not, label %lor.lhs.false12, label %lor.lhs.false9.return_crit_edge

lor.lhs.false9.return_crit_edge:                  ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false12:                                  ; preds = %lor.lhs.false9
  %InPktsInvalid = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 5
  %15 = ptrtoint ptr %InPktsInvalid to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %InPktsInvalid, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i53) #18
  %17 = ptrtoint ptr %tmp.i53 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %tmp.i53, align 8
  %call.i54 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 6, i32 noundef 8, ptr noundef nonnull %tmp.i53, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i53) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i54)
  %tobool14.not = icmp eq i32 %call.i54, 0
  br i1 %tobool14.not, label %lor.lhs.false15, label %lor.lhs.false12.return_crit_edge

lor.lhs.false12.return_crit_edge:                 ; preds = %lor.lhs.false12
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %InPktsLate = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 6
  %18 = ptrtoint ptr %InPktsLate to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %InPktsLate, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i55) #18
  %20 = ptrtoint ptr %tmp.i55 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %tmp.i55, align 8
  %call.i56 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 7, i32 noundef 8, ptr noundef nonnull %tmp.i55, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i55) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i56)
  %tobool17.not = icmp eq i32 %call.i56, 0
  br i1 %tobool17.not, label %lor.lhs.false18, label %lor.lhs.false15.return_crit_edge

lor.lhs.false15.return_crit_edge:                 ; preds = %lor.lhs.false15
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %InPktsNotValid = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 7
  %21 = ptrtoint ptr %InPktsNotValid to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %InPktsNotValid, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i57) #18
  %23 = ptrtoint ptr %tmp.i57 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %tmp.i57, align 8
  %call.i58 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 8, i32 noundef 8, ptr noundef nonnull %tmp.i57, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i57) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i58)
  %tobool20.not = icmp eq i32 %call.i58, 0
  br i1 %tobool20.not, label %lor.lhs.false21, label %lor.lhs.false18.return_crit_edge

lor.lhs.false18.return_crit_edge:                 ; preds = %lor.lhs.false18
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false21:                                  ; preds = %lor.lhs.false18
  %InPktsNotUsingSA = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 8
  %24 = ptrtoint ptr %InPktsNotUsingSA to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %InPktsNotUsingSA, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i59) #18
  %26 = ptrtoint ptr %tmp.i59 to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %tmp.i59, align 8
  %call.i60 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 9, i32 noundef 8, ptr noundef nonnull %tmp.i59, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i59) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i60)
  %tobool23.not = icmp eq i32 %call.i60, 0
  br i1 %tobool23.not, label %lor.lhs.false24, label %lor.lhs.false21.return_crit_edge

lor.lhs.false21.return_crit_edge:                 ; preds = %lor.lhs.false21
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false24:                                  ; preds = %lor.lhs.false21
  call void @__sanitizer_cov_trace_pc() #20
  %InPktsUnusedSA = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %sum, i32 0, i32 9
  %27 = ptrtoint ptr %InPktsUnusedSA to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %InPktsUnusedSA, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i61) #18
  %29 = ptrtoint ptr %tmp.i61 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %tmp.i61, align 8
  %call.i62 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 10, i32 noundef 8, ptr noundef nonnull %tmp.i61, i32 noundef 11) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i61) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i62)
  %tobool26.not = icmp eq i32 %call.i62, 0
  %spec.select = select i1 %tobool26.not, i32 0, i32 -90
  br label %return

return:                                           ; preds = %lor.lhs.false24, %lor.lhs.false21.return_crit_edge, %lor.lhs.false18.return_crit_edge, %lor.lhs.false15.return_crit_edge, %lor.lhs.false12.return_crit_edge, %lor.lhs.false9.return_crit_edge, %lor.lhs.false6.return_crit_edge, %lor.lhs.false3.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -90, %lor.lhs.false21.return_crit_edge ], [ -90, %lor.lhs.false18.return_crit_edge ], [ -90, %lor.lhs.false15.return_crit_edge ], [ -90, %lor.lhs.false12.return_crit_edge ], [ -90, %lor.lhs.false9.return_crit_edge ], [ -90, %lor.lhs.false6.return_crit_edge ], [ -90, %lor.lhs.false3.return_crit_edge ], [ -90, %lor.lhs.false.return_crit_edge ], [ -90, %entry.return_crit_edge ], [ %spec.select, %lor.lhs.false24 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @get_rx_sa_stats(ptr noundef %dev, ptr noundef %rx_sc, i32 noundef %an, ptr noundef %rx_sa, ptr noundef %sum) unnamed_addr #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %0 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %call1048 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call1048, i32 %2)
  %cmp49 = icmp ult i32 %call1048, %2
  br i1 %cmp49, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %stats13 = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 6
  %InPktsInvalid17 = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %sum, i32 0, i32 1
  %InPktsNotValid19 = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %sum, i32 0, i32 2
  %InPktsNotUsingSA21 = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %sum, i32 0, i32 3
  %InPktsUnusedSA23 = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %sum, i32 0, i32 4
  br label %for.body

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then.if.end_crit_edge, label %lor.lhs.false.i.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

lor.lhs.false.i.i:                                ; preds = %if.then
  %real_dev.i.i = getelementptr i8, ptr %dev, i32 2368
  %3 = ptrtoint ptr %real_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %real_dev.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %4, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.if.end_crit_edge:               ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %5 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.64)
  switch i32 %1, label %if.end.i.i.if.end_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 145
  %6 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.if.end_crit_edge, label %land.rhs.i.i

if.then2.i.i.if.end_crit_edge:                    ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %7, i32 0, i32 42
  %8 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %9, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.if.end_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 23
  %10 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %11, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.if.end_crit_edge:                    ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 151
  %12 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %13, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.if.end_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.if.end_crit_edge:     ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %7, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %4, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %14 = getelementptr inbounds i8, ptr %ctx, i32 16
  %15 = call ptr @memset(ptr %14, i32 0, i32 144)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %16 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %1, ptr %offload1.i.i, align 4
  %17 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge, ptr %ctx, align 4
  %18 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool.not, label %macsec_get_ops.exit.if.end_crit_edge, label %if.then3

macsec_get_ops.exit.if.end_crit_edge:             ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then3:                                         ; preds = %macsec_get_ops.exit
  %conv = trunc i32 %an to i8
  %sa = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4
  %19 = ptrtoint ptr %sa to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %conv, ptr %sa, align 4
  %20 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 4, i32 2
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %rx_sa, ptr %20, align 4
  %stats = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 5
  %22 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %sum, ptr %stats, align 4
  %secy6 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %23 = ptrtoint ptr %secy6 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %add.ptr.i.i, ptr %secy6, align 4
  %rx_sc7 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 3
  %24 = ptrtoint ptr %rx_sc7 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %rx_sc, ptr %rx_sc7, align 4
  %mdo_get_rx_sa_stats = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 18
  %25 = ptrtoint ptr %mdo_get_rx_sa_stats to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mdo_get_rx_sa_stats, align 4
  %tobool.not.i = icmp eq ptr %26, null
  br i1 %tobool.not.i, label %if.then3.if.end_crit_edge, label %if.end.i44, !prof !203

if.then3.if.end_crit_edge:                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i44:                                       ; preds = %if.then3
  %offload.i43 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %27 = ptrtoint ptr %offload.i43 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %offload.i43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %28)
  %cmp.i = icmp eq i32 %28, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i44.if.end5.i_crit_edge

if.end.i44.if.end5.i_crit_edge:                   ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #20
  %29 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %30, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i44.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %31 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %26(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %32 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %26(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %33 = ptrtoint ptr %offload.i43 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %offload.i43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %34)
  %cmp45.i = icmp eq i32 %34, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.if.end_crit_edge

phy_unlock.i.if.end_crit_edge:                    ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %35 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %36, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %if.end

if.end:                                           ; preds = %if.then46.i, %phy_unlock.i.if.end_crit_edge, %if.then3.if.end_crit_edge, %macsec_get_ops.exit.if.end_crit_edge, %macsec_check_offload.exit.i.if.end_crit_edge, %if.then9.i.i.if.end_crit_edge, %land.rhs.i.i.if.end_crit_edge, %if.then2.i.i.if.end_crit_edge, %if.end.i.i.if.end_crit_edge, %lor.lhs.false.i.i.if.end_crit_edge, %if.then.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %call1050 = phi i32 [ %call1048, %for.body.lr.ph ], [ %call10, %for.body.for.body_crit_edge ]
  %37 = ptrtoint ptr %stats13 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %stats13, align 8
  %39 = ptrtoint ptr %38 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call1050
  %40 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx, align 4
  %add = add i32 %41, %39
  %42 = inttoptr i32 %add to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %45 = ptrtoint ptr %sum to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sum, align 4
  %add16 = add i32 %46, %44
  store i32 %add16, ptr %sum, align 4
  %InPktsInvalid = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %42, i32 0, i32 1
  %47 = ptrtoint ptr %InPktsInvalid to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %InPktsInvalid, align 4
  %49 = ptrtoint ptr %InPktsInvalid17 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %InPktsInvalid17, align 4
  %add18 = add i32 %50, %48
  store i32 %add18, ptr %InPktsInvalid17, align 4
  %InPktsNotValid = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %42, i32 0, i32 2
  %51 = ptrtoint ptr %InPktsNotValid to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %InPktsNotValid, align 4
  %53 = ptrtoint ptr %InPktsNotValid19 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %InPktsNotValid19, align 4
  %add20 = add i32 %54, %52
  store i32 %add20, ptr %InPktsNotValid19, align 4
  %InPktsNotUsingSA = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %42, i32 0, i32 3
  %55 = ptrtoint ptr %InPktsNotUsingSA to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %InPktsNotUsingSA, align 4
  %57 = ptrtoint ptr %InPktsNotUsingSA21 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %InPktsNotUsingSA21, align 4
  %add22 = add i32 %58, %56
  store i32 %add22, ptr %InPktsNotUsingSA21, align 4
  %InPktsUnusedSA = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %42, i32 0, i32 4
  %59 = ptrtoint ptr %InPktsUnusedSA to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %InPktsUnusedSA, align 4
  %61 = ptrtoint ptr %InPktsUnusedSA23 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %InPktsUnusedSA23, align 4
  %add24 = add i32 %62, %60
  store i32 %add24, ptr %InPktsUnusedSA23, align 4
  %call10 = tail call i32 @cpumask_next(i32 noundef %call1050, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %63 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call10, %63
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %if.end, %for.cond.preheader.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_rx_sa_stats(ptr noundef %skb, ptr nocapture noundef readonly %sum) unnamed_addr #0 align 64 {
entry:
  %tmp.i26 = alloca i32, align 4
  %tmp.i24 = alloca i32, align 4
  %tmp.i22 = alloca i32, align 4
  %tmp.i20 = alloca i32, align 4
  %tmp.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %sum to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sum, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #18
  %2 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %tmp.i, align 4
  %call.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 1, i32 noundef 4, ptr noundef nonnull %tmp.i) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %InPktsInvalid = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %sum, i32 0, i32 1
  %3 = ptrtoint ptr %InPktsInvalid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %InPktsInvalid, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i20) #18
  %5 = ptrtoint ptr %tmp.i20 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %tmp.i20, align 4
  %call.i21 = call i32 @nla_put(ptr noundef %skb, i32 noundef 2, i32 noundef 4, ptr noundef nonnull %tmp.i20) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i20) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i21)
  %tobool2.not = icmp eq i32 %call.i21, 0
  br i1 %tobool2.not, label %lor.lhs.false3, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %InPktsNotValid = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %sum, i32 0, i32 2
  %6 = ptrtoint ptr %InPktsNotValid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %InPktsNotValid, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i22) #18
  %8 = ptrtoint ptr %tmp.i22 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %tmp.i22, align 4
  %call.i23 = call i32 @nla_put(ptr noundef %skb, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %tmp.i22) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i22) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i23)
  %tobool5.not = icmp eq i32 %call.i23, 0
  br i1 %tobool5.not, label %lor.lhs.false6, label %lor.lhs.false3.return_crit_edge

lor.lhs.false3.return_crit_edge:                  ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %InPktsNotUsingSA = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %sum, i32 0, i32 3
  %9 = ptrtoint ptr %InPktsNotUsingSA to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %InPktsNotUsingSA, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i24) #18
  %11 = ptrtoint ptr %tmp.i24 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %tmp.i24, align 4
  %call.i25 = call i32 @nla_put(ptr noundef %skb, i32 noundef 4, i32 noundef 4, ptr noundef nonnull %tmp.i24) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i24) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i25)
  %tobool8.not = icmp eq i32 %call.i25, 0
  br i1 %tobool8.not, label %lor.lhs.false9, label %lor.lhs.false6.return_crit_edge

lor.lhs.false6.return_crit_edge:                  ; preds = %lor.lhs.false6
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  call void @__sanitizer_cov_trace_pc() #20
  %InPktsUnusedSA = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %sum, i32 0, i32 4
  %12 = ptrtoint ptr %InPktsUnusedSA to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %InPktsUnusedSA, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i26) #18
  %14 = ptrtoint ptr %tmp.i26 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %tmp.i26, align 4
  %call.i27 = call i32 @nla_put(ptr noundef %skb, i32 noundef 5, i32 noundef 4, ptr noundef nonnull %tmp.i26) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i26) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i27)
  %tobool11.not = icmp eq i32 %call.i27, 0
  %spec.select = select i1 %tobool11.not, i32 0, i32 -90
  br label %return

return:                                           ; preds = %lor.lhs.false9, %lor.lhs.false6.return_crit_edge, %lor.lhs.false3.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -90, %lor.lhs.false6.return_crit_edge ], [ -90, %lor.lhs.false3.return_crit_edge ], [ -90, %lor.lhs.false.return_crit_edge ], [ -90, %entry.return_crit_edge ], [ %spec.select, %lor.lhs.false9 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nla_put_64bit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc ptr @macsec_get_ops(ptr noundef readonly %macsec, ptr noundef writeonly %ctx) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %offload = getelementptr inbounds %struct.macsec_dev, ptr %macsec, i32 0, i32 5
  %0 = ptrtoint ptr %offload to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offload, align 4
  %tobool.not.i = icmp eq ptr %macsec, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %lor.lhs.false.i

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false.i:                                  ; preds = %entry
  %real_dev.i = getelementptr inbounds %struct.macsec_dev, ptr %macsec, i32 0, i32 1
  %2 = ptrtoint ptr %real_dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %real_dev.i, align 8
  %tobool1.not.i = icmp eq ptr %3, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i.return_crit_edge, label %if.end.i

lor.lhs.false.i.return_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.end.i:                                         ; preds = %lor.lhs.false.i
  %4 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.65)
  switch i32 %1, label %if.end.i.return_crit_edge [
    i32 1, label %if.then2.i
    i32 2, label %if.then9.i
  ]

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.then2.i:                                       ; preds = %if.end.i
  %phydev.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 145
  %5 = ptrtoint ptr %phydev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %phydev.i, align 16
  %tobool4.not.i = icmp eq ptr %6, null
  br i1 %tobool4.not.i, label %if.then2.i.return_crit_edge, label %land.rhs.i

if.then2.i.return_crit_edge:                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

land.rhs.i:                                       ; preds = %if.then2.i
  %macsec_ops.i = getelementptr inbounds %struct.phy_device, ptr %6, i32 0, i32 42
  %7 = ptrtoint ptr %macsec_ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %macsec_ops.i, align 4
  %tobool7.i.not = icmp eq ptr %8, null
  br i1 %tobool7.i.not, label %land.rhs.i.return_crit_edge, label %if.end

land.rhs.i.return_crit_edge:                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.then9.i:                                       ; preds = %if.end.i
  %features.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 23
  %9 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %features.i, align 16
  %and.i = and i64 %10, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool11.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool11.not.i, label %if.then9.i.return_crit_edge, label %macsec_check_offload.exit

if.then9.i.return_crit_edge:                      ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

macsec_check_offload.exit:                        ; preds = %if.then9.i
  %macsec_ops14.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 151
  %11 = ptrtoint ptr %macsec_ops14.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %macsec_ops14.i, align 8
  %tobool15.i.not = icmp eq ptr %12, null
  br i1 %tobool15.i.not, label %macsec_check_offload.exit.return_crit_edge, label %if.end.thread

macsec_check_offload.exit.return_crit_edge:       ; preds = %macsec_check_offload.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.end:                                           ; preds = %land.rhs.i
  %tobool.not.i6 = icmp eq ptr %ctx, null
  br i1 %tobool.not.i6, label %if.end.if.then9.i10_crit_edge, label %if.end7.thread.i

if.end.if.then9.i10_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then9.i10

if.end.thread:                                    ; preds = %macsec_check_offload.exit
  %tobool.not.i614 = icmp eq ptr %ctx, null
  br i1 %tobool.not.i614, label %if.end.thread.if.else12.i_crit_edge, label %if.end7.thread26.i

if.end.thread.if.else12.i_crit_edge:              ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.else12.i

if.end7.thread.i:                                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %13 = call ptr @memset(ptr %ctx, i32 0, i32 160)
  %offload1.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %14 = ptrtoint ptr %offload1.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %offload1.i, align 4
  %15 = ptrtoint ptr %real_dev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %real_dev.i, align 8
  %phydev.i8 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 145
  %17 = ptrtoint ptr %phydev.i8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %phydev.i8, align 16
  %19 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %ctx, align 4
  br label %if.then9.i10

if.end7.thread26.i:                               ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #20
  %20 = call ptr @memset(ptr %ctx, i32 0, i32 160)
  %offload1.i16 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %21 = ptrtoint ptr %offload1.i16 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 2, ptr %offload1.i16, align 4
  %22 = ptrtoint ptr %real_dev.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %real_dev.i, align 8
  %24 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %ctx, align 4
  br label %if.else12.i

if.then9.i10:                                     ; preds = %if.end7.thread.i, %if.end.if.then9.i10_crit_edge
  %25 = ptrtoint ptr %real_dev.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %real_dev.i, align 8
  %phydev11.i = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 145
  %27 = ptrtoint ptr %phydev11.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %phydev11.i, align 16
  %macsec_ops.i9 = getelementptr inbounds %struct.phy_device, ptr %28, i32 0, i32 42
  br label %__macsec_get_ops.exit

if.else12.i:                                      ; preds = %if.end7.thread26.i, %if.end.thread.if.else12.i_crit_edge
  %29 = ptrtoint ptr %real_dev.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %real_dev.i, align 8
  %macsec_ops14.i11 = getelementptr inbounds %struct.net_device, ptr %30, i32 0, i32 151
  br label %__macsec_get_ops.exit

__macsec_get_ops.exit:                            ; preds = %if.else12.i, %if.then9.i10
  %retval.0.in.i = phi ptr [ %macsec_ops.i9, %if.then9.i10 ], [ %macsec_ops14.i11, %if.else12.i ]
  %31 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %retval.0.i12 = load ptr, ptr %retval.0.in.i, align 4
  br label %return

return:                                           ; preds = %__macsec_get_ops.exit, %macsec_check_offload.exit.return_crit_edge, %if.then9.i.return_crit_edge, %land.rhs.i.return_crit_edge, %if.then2.i.return_crit_edge, %if.end.i.return_crit_edge, %lor.lhs.false.i.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi ptr [ %retval.0.i12, %__macsec_get_ops.exit ], [ null, %macsec_check_offload.exit.return_crit_edge ], [ null, %land.rhs.i.return_crit_edge ], [ null, %lor.lhs.false.i.return_crit_edge ], [ null, %entry.return_crit_edge ], [ null, %if.then2.i.return_crit_edge ], [ null, %if.then9.i.return_crit_edge ], [ null, %if.end.i.return_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @macsec_offload(ptr noundef readonly %func, ptr noundef %ctx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %func, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !203

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %offload = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %0 = ptrtoint ptr %offload to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offload, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then4, label %if.end.if.end5_crit_edge

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %2 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ctx, align 4
  %lock = getelementptr inbounds %struct.phy_device, ptr %3, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #18
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end.if.end5_crit_edge
  %prepare = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %4 = ptrtoint ptr %prepare to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %prepare, align 4
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %prepare, align 4
  %call = tail call i32 %func(ptr noundef %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool6.not = icmp eq i32 %call, 0
  br i1 %tobool6.not, label %if.end8, label %if.end5.phy_unlock_crit_edge

if.end5.phy_unlock_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock

if.end8:                                          ; preds = %if.end5
  %5 = ptrtoint ptr %prepare to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load10 = load i8, ptr %prepare, align 4
  %bf.clear11 = and i8 %bf.load10, 127
  store i8 %bf.clear11, ptr %prepare, align 4
  %call13 = tail call i32 %func(ptr noundef %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end8.phy_unlock_crit_edge, label %do.end, !prof !204

if.end8.phy_unlock_crit_edge:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock

do.end:                                           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13) #18
  br label %phy_unlock

phy_unlock:                                       ; preds = %do.end, %if.end8.phy_unlock_crit_edge, %if.end5.phy_unlock_crit_edge
  %ret.0 = phi i32 [ %call, %if.end5.phy_unlock_crit_edge ], [ %call13, %do.end ], [ 0, %if.end8.phy_unlock_crit_edge ]
  %6 = ptrtoint ptr %offload to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %offload, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp45 = icmp eq i32 %7, 1
  br i1 %cmp45, label %if.then46, label %phy_unlock.cleanup_crit_edge

phy_unlock.cleanup_crit_edge:                     ; preds = %phy_unlock
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then46:                                        ; preds = %phy_unlock
  call void @__sanitizer_cov_trace_pc() #20
  %8 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ctx, align 4
  %lock47 = getelementptr inbounds %struct.phy_device, ptr %9, i32 0, i32 32
  tail call void @mutex_unlock(ptr noundef %lock47) #18
  br label %cleanup

cleanup:                                          ; preds = %if.then46, %phy_unlock.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %ret.0, %if.then46 ], [ %ret.0, %phy_unlock.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @u64_stats_fetch_begin_irq(ptr noundef %syncp) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %and.i.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %do.body24.critedge.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @trace_hardirqs_off() #18
  %dep_map.c.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %1 = tail call ptr @llvm.returnaddress(i32 0) #18
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #18
  tail call void @lock_release(ptr noundef %dep_map.c.i.i, i32 noundef %2) #18
  tail call void @trace_hardirqs_on() #18
  br label %do.body24.i.i

do.body24.critedge.i.i:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %dep_map.c48.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %3 = tail call ptr @llvm.returnaddress(i32 0) #18
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #18
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i, i32 noundef %4) #18
  br label %do.body24.i.i

do.body24.i.i:                                    ; preds = %do.body24.critedge.i.i, %if.then.i.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool32.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool32.not.i.i, label %if.then36.i.i, label %do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge, !prof !203

do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge: ; preds = %do.body24.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %seqcount_lockdep_reader_access.exit.i

if.then36.i.i:                                    ; preds = %do.body24.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @warn_bogus_irq_restore() #18
  br label %seqcount_lockdep_reader_access.exit.i

seqcount_lockdep_reader_access.exit.i:            ; preds = %if.then36.i.i, %do.body24.i.i.seqcount_lockdep_reader_access.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #18, !srcloc !213
  %6 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %syncp, align 4
  %and18.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %tobool.not19.i = icmp eq i32 %and18.i, 0
  br i1 %tobool.not19.i, label %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge, label %seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge

seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i
  br label %do.end.i

seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__u64_stats_fetch_begin.exit

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %seqcount_lockdep_reader_access.exit.i.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !214
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #18, !srcloc !215
  %8 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %syncp, align 4
  %and.i = and i32 %9, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i.__u64_stats_fetch_begin.exit_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

do.end.i.__u64_stats_fetch_begin.exit_crit_edge:  ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__u64_stats_fetch_begin.exit

__u64_stats_fetch_begin.exit:                     ; preds = %do.end.i.__u64_stats_fetch_begin.exit_crit_edge, %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge
  %.lcssa.i = phi i32 [ %7, %seqcount_lockdep_reader_access.exit.i.__u64_stats_fetch_begin.exit_crit_edge ], [ %9, %do.end.i.__u64_stats_fetch_begin.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !216
  ret i32 %.lcssa.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @macsec_check_offload(i32 noundef %offload, ptr noundef readonly %macsec) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %macsec, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %real_dev = getelementptr inbounds %struct.macsec_dev, ptr %macsec, i32 0, i32 1
  %0 = ptrtoint ptr %real_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev, align 8
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %lor.lhs.false.return_crit_edge, label %if.end

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %2 = zext i32 %offload to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.66)
  switch i32 %offload, label %if.end.return_crit_edge [
    i32 1, label %if.then2
    i32 2, label %if.then9
  ]

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.then2:                                         ; preds = %if.end
  %phydev = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 145
  %3 = ptrtoint ptr %phydev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %phydev, align 16
  %tobool4.not = icmp eq ptr %4, null
  br i1 %tobool4.not, label %if.then2.return_crit_edge, label %land.rhs

if.then2.return_crit_edge:                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

land.rhs:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #20
  %macsec_ops = getelementptr inbounds %struct.phy_device, ptr %4, i32 0, i32 42
  %5 = ptrtoint ptr %macsec_ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %macsec_ops, align 4
  %tobool7 = icmp ne ptr %6, null
  br label %return

if.then9:                                         ; preds = %if.end
  %features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 23
  %7 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %features, align 16
  %and = and i64 %8, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool11.not = icmp eq i64 %and, 0
  br i1 %tobool11.not, label %if.then9.return_crit_edge, label %land.rhs12

if.then9.return_crit_edge:                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

land.rhs12:                                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #20
  %macsec_ops14 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 151
  %9 = ptrtoint ptr %macsec_ops14 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %macsec_ops14, align 8
  %tobool15 = icmp ne ptr %10, null
  br label %return

return:                                           ; preds = %land.rhs12, %if.then9.return_crit_edge, %land.rhs, %if.then2.return_crit_edge, %if.end.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %lor.lhs.false.return_crit_edge ], [ false, %entry.return_crit_edge ], [ false, %if.then2.return_crit_edge ], [ %tobool7, %land.rhs ], [ false, %if.then9.return_crit_edge ], [ %tobool15, %land.rhs12 ], [ false, %if.end.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_trim(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__nla_parse(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__dev_get_by_index(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nla_memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_rx_sc_rtnl(ptr nocapture noundef readonly %secy, i64 noundef %sci) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b26 = load i1, ptr @find_rx_sc_rtnl.__warned, align 1
  br i1 %.b26, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @find_rx_sc_rtnl.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 987, ptr noundef nonnull @.str.4) #18
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %rx_sc4 = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 12
  %0 = ptrtoint ptr %rx_sc4 to i32
  call void @__asan_load4_noabort(i32 %0)
  %rx_sc.027 = load ptr, ptr %rx_sc4, align 4
  %tobool5.not28 = icmp eq ptr %rx_sc.027, null
  br i1 %tobool5.not28, label %do.end.cleanup_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body:                                         ; preds = %do.end19.for.body_crit_edge, %do.end.for.body_crit_edge
  %rx_sc.029 = phi ptr [ %rx_sc.0, %do.end19.for.body_crit_edge ], [ %rx_sc.027, %do.end.for.body_crit_edge ]
  %sci6 = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc.029, i32 0, i32 1
  %1 = ptrtoint ptr %sci6 to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %sci6, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %2, i64 %sci)
  %cmp = icmp eq i64 %2, %sci
  br i1 %cmp, label %for.body.cleanup_crit_edge, label %do.body9

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

do.body9:                                         ; preds = %for.body
  %call10 = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call10, label %do.body9.do.end19_crit_edge, label %land.lhs.true11

do.body9.do.end19_crit_edge:                      ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end19

land.lhs.true11:                                  ; preds = %do.body9
  %call12 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %land.lhs.true11.do.end19_crit_edge, label %land.lhs.true14

land.lhs.true11.do.end19_crit_edge:               ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end19

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %.b2425 = load i1, ptr @find_rx_sc_rtnl.__warned.11, align 1
  br i1 %.b2425, label %land.lhs.true14.do.end19_crit_edge, label %if.then16

land.lhs.true14.do.end19_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end19

if.then16:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @find_rx_sc_rtnl.__warned.11, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 987, ptr noundef nonnull @.str.4) #18
  br label %do.end19

do.end19:                                         ; preds = %if.then16, %land.lhs.true14.do.end19_crit_edge, %land.lhs.true11.do.end19_crit_edge, %do.body9.do.end19_crit_edge
  %3 = ptrtoint ptr %rx_sc.029 to i32
  call void @__asan_load4_noabort(i32 %3)
  %rx_sc.0 = load ptr, ptr %rx_sc.029, align 4
  %tobool5.not = icmp eq ptr %rx_sc.0, null
  br i1 %tobool5.not, label %do.end19.cleanup_crit_edge, label %do.end19.for.body_crit_edge

do.end19.for.body_crit_edge:                      ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

do.end19.cleanup_crit_edge:                       ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

cleanup:                                          ; preds = %do.end19.cleanup_crit_edge, %for.body.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %rx_sc.0.lcssa = phi ptr [ null, %do.end.cleanup_crit_edge ], [ null, %do.end19.cleanup_crit_edge ], [ %rx_sc.029, %for.body.cleanup_crit_edge ]
  ret ptr %rx_sc.0.lcssa
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu_gfp(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_rx_sc(ptr noundef %rx_sc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body

for.body:                                         ; preds = %if.end21.for.body_crit_edge, %entry
  %i.029 = phi i32 [ 0, %entry ], [ %inc, %if.end21.for.body_crit_edge ]
  %call = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call, label %for.body.do.end_crit_edge, label %land.lhs.true

for.body.do.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %for.body
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b28 = load i1, ptr @free_rx_sc.__warned, align 1
  br i1 %.b28, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @free_rx_sc.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1365, ptr noundef nonnull @.str.4) #18
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %for.body.do.end_crit_edge
  %arrayidx = getelementptr %struct.macsec_rx_sc, ptr %rx_sc, i32 0, i32 3, i32 %i.029
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  store volatile ptr null, ptr %arrayidx, align 4
  %tobool19.not = icmp eq ptr %1, null
  br i1 %tobool19.not, label %do.end.if.end21_crit_edge, label %if.then20

do.end.if.end21_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end21

if.then20:                                        ; preds = %do.end
  %active.i = getelementptr inbounds %struct.macsec_rx_sa, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %active.i, align 4
  %refcnt.i.i = getelementptr inbounds %struct.macsec_rx_sa, ptr %1, i32 0, i32 4
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #18
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.if.end21_crit_edge, label %if.then10.i.i.i.i.i, !prof !204

if.end5.i.i.i.i.i.if.end21_crit_edge:             ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end21

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef 3) #18
  br label %if.end21

if.then.i.i:                                      ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i.i = getelementptr inbounds %struct.macsec_rx_sa, ptr %1, i32 0, i32 8
  tail call void @call_rcu(ptr noundef %rcu.i.i, ptr noundef nonnull @free_rxsa) #18
  br label %if.end21

if.end21:                                         ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.if.end21_crit_edge, %do.end.if.end21_crit_edge
  %inc = add nuw nsw i32 %i.029, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %if.end21.for.body_crit_edge

if.end21.for.body_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

for.end:                                          ; preds = %if.end21
  %refcnt.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc, i32 0, i32 5
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %for.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.macsec_rxsc_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !204

if.end5.i.i.i.i.macsec_rxsc_put.exit_crit_edge:   ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_rxsc_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %macsec_rxsc_put.exit

if.then.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %callback_head.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc, i32 0, i32 6
  tail call void @call_rcu(ptr noundef %callback_head.i, ptr noundef nonnull @free_rx_sc_rcu) #18
  br label %macsec_rxsc_put.exit

macsec_rxsc_put.exit:                             ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.macsec_rxsc_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clear_rx_sa(ptr noundef %rx_sa) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %active = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 5
  %0 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %active, align 4
  %refcnt.i = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %1 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.macsec_rxsa_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !204

if.end5.i.i.i.i.macsec_rxsa_put.exit_crit_edge:   ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_rxsa_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %macsec_rxsa_put.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 8
  tail call void @call_rcu(ptr noundef %rcu.i, ptr noundef nonnull @free_rxsa) #18
  br label %macsec_rxsa_put.exit

macsec_rxsa_put.exit:                             ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.macsec_rxsa_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macsec_rxsc_put(ptr noundef %sc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt = getelementptr inbounds %struct.macsec_rx_sc, ptr %sc, i32 0, i32 5
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #18
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 1, ptr elementtype(i32) %refcnt) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end_crit_edge, label %if.then10.i.i.i, !prof !204

if.end5.i.i.i.if.end_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt, i32 noundef 3) #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %callback_head = getelementptr inbounds %struct.macsec_rx_sc, ptr %sc, i32 0, i32 6
  tail call void @call_rcu(ptr noundef %callback_head, ptr noundef nonnull @free_rx_sc_rcu) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then10.i.i.i, %if.end5.i.i.i.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macsec_rxsa_put(ptr noundef %sa) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt = getelementptr inbounds %struct.macsec_rx_sa, ptr %sa, i32 0, i32 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #18
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 1, ptr elementtype(i32) %refcnt) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end_crit_edge, label %if.then10.i.i.i, !prof !204

if.end5.i.i.i.if.end_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt, i32 noundef 3) #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu = getelementptr inbounds %struct.macsec_rx_sa, ptr %sa, i32 0, i32 8
  tail call void @call_rcu(ptr noundef %rcu, ptr noundef nonnull @free_rxsa) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then10.i.i.i, %if.end5.i.i.i.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_rxsa(ptr noundef %head) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %head, i32 -104
  %tfm = getelementptr i8, ptr %head, i32 -88
  %0 = ptrtoint ptr %tfm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tfm, align 8
  %base.i.i = getelementptr inbounds %struct.crypto_aead, ptr %1, i32 0, i32 3
  tail call void @crypto_destroy_tfm(ptr noundef %1, ptr noundef %base.i.i) #18
  %stats = getelementptr i8, ptr %head, i32 -8
  %2 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stats, align 8
  tail call void @free_percpu(ptr noundef %3) #18
  tail call void @kfree(ptr noundef %add.ptr) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @crypto_destroy_tfm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_rx_sc_rcu(ptr noundef %head) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %head, i32 -44
  %stats = getelementptr i8, ptr %head, i32 -8
  %0 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stats, align 4
  tail call void @free_percpu(ptr noundef %1) #18
  tail call void @kfree(ptr noundef %add.ptr) #18
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_tx_sa(ptr noundef %tx_sa, ptr noundef %sak, i32 noundef %key_len, i32 noundef %icv_len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__alloc_percpu(i32 noundef 8, i32 noundef 4) #23
  %stats = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 6
  %0 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %stats, align 8
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.end:                                           ; preds = %entry
  %call.i = tail call ptr @crypto_alloc_aead(ptr noundef nonnull @.str.23, i32 noundef 0, i32 noundef 128) #18
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end.macsec_alloc_tfm.exit_crit_edge, label %if.end.i

if.end.macsec_alloc_tfm.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_alloc_tfm.exit

if.end.i:                                         ; preds = %if.end
  %call2.i = tail call i32 @crypto_aead_setkey(ptr noundef %call.i, ptr noundef %sak, i32 noundef %key_len) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp.i = icmp slt i32 %call2.i, 0
  br i1 %cmp.i, label %if.end.i.fail.i_crit_edge, label %if.end4.i

if.end.i.fail.i_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %fail.i

if.end4.i:                                        ; preds = %if.end.i
  %call5.i = tail call i32 @crypto_aead_setauthsize(ptr noundef %call.i, i32 noundef %icv_len) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp6.i = icmp slt i32 %call5.i, 0
  br i1 %cmp6.i, label %if.end4.i.fail.i_crit_edge, label %if.end4.i.macsec_alloc_tfm.exit_crit_edge

if.end4.i.macsec_alloc_tfm.exit_crit_edge:        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_alloc_tfm.exit

if.end4.i.fail.i_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %fail.i

fail.i:                                           ; preds = %if.end4.i.fail.i_crit_edge, %if.end.i.fail.i_crit_edge
  %ret.0.i = phi i32 [ %call2.i, %if.end.i.fail.i_crit_edge ], [ %call5.i, %if.end4.i.fail.i_crit_edge ]
  %base.i.i.i = getelementptr inbounds %struct.crypto_aead, ptr %call.i, i32 0, i32 3
  tail call void @crypto_destroy_tfm(ptr noundef %call.i, ptr noundef %base.i.i.i) #18
  %1 = inttoptr i32 %ret.0.i to ptr
  br label %macsec_alloc_tfm.exit

macsec_alloc_tfm.exit:                            ; preds = %fail.i, %if.end4.i.macsec_alloc_tfm.exit_crit_edge, %if.end.macsec_alloc_tfm.exit_crit_edge
  %retval.0.i = phi ptr [ %1, %fail.i ], [ %call.i, %if.end.macsec_alloc_tfm.exit_crit_edge ], [ %call.i, %if.end4.i.macsec_alloc_tfm.exit_crit_edge ]
  %tfm = getelementptr inbounds %struct.macsec_key, ptr %tx_sa, i32 0, i32 1
  %2 = ptrtoint ptr %tfm to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %retval.0.i, ptr %tfm, align 8
  %cmp.i22 = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i22, label %if.then6, label %if.end11

if.then6:                                         ; preds = %macsec_alloc_tfm.exit
  call void @__sanitizer_cov_trace_pc() #20
  %3 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %stats, align 8
  tail call void @free_percpu(ptr noundef %4) #18
  %5 = ptrtoint ptr %tfm to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tfm, align 8
  %7 = ptrtoint ptr %6 to i32
  br label %return

if.end11:                                         ; preds = %macsec_alloc_tfm.exit
  call void @__sanitizer_cov_trace_pc() #20
  %ssci = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 1
  %8 = ptrtoint ptr %ssci to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %ssci, align 8
  %active = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 5
  %9 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %active, align 4
  %refcnt = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #18
  %10 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile i32 1, ptr %refcnt, align 4
  %lock = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.22, ptr noundef nonnull @init_tx_sa.__key, i16 noundef signext 3) #18
  br label %return

return:                                           ; preds = %if.end11, %if.then6, %entry.return_crit_edge
  %retval.0 = phi i32 [ %7, %if.then6 ], [ 0, %if.end11 ], [ -12, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @crypto_alloc_aead(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crypto_aead_setkey(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crypto_aead_setauthsize(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macsec_txsa_put(ptr noundef %sa) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt = getelementptr inbounds %struct.macsec_tx_sa, ptr %sa, i32 0, i32 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #18
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 1, ptr elementtype(i32) %refcnt) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end_crit_edge, label %if.then10.i.i.i, !prof !204

if.end5.i.i.i.if.end_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt, i32 noundef 3) #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu = getelementptr inbounds %struct.macsec_tx_sa, ptr %sa, i32 0, i32 7
  tail call void @call_rcu(ptr noundef %rcu, ptr noundef nonnull @free_txsa) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then10.i.i.i, %if.end5.i.i.i.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_txsa(ptr noundef %head) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %head, i32 -100
  %tfm = getelementptr i8, ptr %head, i32 -84
  %0 = ptrtoint ptr %tfm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tfm, align 8
  %base.i.i = getelementptr inbounds %struct.crypto_aead, ptr %1, i32 0, i32 3
  tail call void @crypto_destroy_tfm(ptr noundef %1, ptr noundef %base.i.i) #18
  %stats = getelementptr i8, ptr %head, i32 -4
  %2 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stats, align 8
  tail call void @free_percpu(ptr noundef %3) #18
  tail call void @kfree(ptr noundef %add.ptr) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_rx_sa(ptr noundef %rx_sa, ptr noundef %sak, i32 noundef %key_len, i32 noundef %icv_len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__alloc_percpu(i32 noundef 20, i32 noundef 4) #23
  %stats = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 6
  %0 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %stats, align 8
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.end:                                           ; preds = %entry
  %call.i = tail call ptr @crypto_alloc_aead(ptr noundef nonnull @.str.23, i32 noundef 0, i32 noundef 128) #18
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end.macsec_alloc_tfm.exit_crit_edge, label %if.end.i

if.end.macsec_alloc_tfm.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_alloc_tfm.exit

if.end.i:                                         ; preds = %if.end
  %call2.i = tail call i32 @crypto_aead_setkey(ptr noundef %call.i, ptr noundef %sak, i32 noundef %key_len) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp.i = icmp slt i32 %call2.i, 0
  br i1 %cmp.i, label %if.end.i.fail.i_crit_edge, label %if.end4.i

if.end.i.fail.i_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %fail.i

if.end4.i:                                        ; preds = %if.end.i
  %call5.i = tail call i32 @crypto_aead_setauthsize(ptr noundef %call.i, i32 noundef %icv_len) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp6.i = icmp slt i32 %call5.i, 0
  br i1 %cmp6.i, label %if.end4.i.fail.i_crit_edge, label %if.end4.i.macsec_alloc_tfm.exit_crit_edge

if.end4.i.macsec_alloc_tfm.exit_crit_edge:        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_alloc_tfm.exit

if.end4.i.fail.i_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %fail.i

fail.i:                                           ; preds = %if.end4.i.fail.i_crit_edge, %if.end.i.fail.i_crit_edge
  %ret.0.i = phi i32 [ %call2.i, %if.end.i.fail.i_crit_edge ], [ %call5.i, %if.end4.i.fail.i_crit_edge ]
  %base.i.i.i = getelementptr inbounds %struct.crypto_aead, ptr %call.i, i32 0, i32 3
  tail call void @crypto_destroy_tfm(ptr noundef %call.i, ptr noundef %base.i.i.i) #18
  %1 = inttoptr i32 %ret.0.i to ptr
  br label %macsec_alloc_tfm.exit

macsec_alloc_tfm.exit:                            ; preds = %fail.i, %if.end4.i.macsec_alloc_tfm.exit_crit_edge, %if.end.macsec_alloc_tfm.exit_crit_edge
  %retval.0.i = phi ptr [ %1, %fail.i ], [ %call.i, %if.end.macsec_alloc_tfm.exit_crit_edge ], [ %call.i, %if.end4.i.macsec_alloc_tfm.exit_crit_edge ]
  %tfm = getelementptr inbounds %struct.macsec_key, ptr %rx_sa, i32 0, i32 1
  %2 = ptrtoint ptr %tfm to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %retval.0.i, ptr %tfm, align 8
  %cmp.i23 = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i23, label %if.then6, label %if.end11

if.then6:                                         ; preds = %macsec_alloc_tfm.exit
  call void @__sanitizer_cov_trace_pc() #20
  %3 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %stats, align 8
  tail call void @free_percpu(ptr noundef %4) #18
  %5 = ptrtoint ptr %tfm to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tfm, align 8
  %7 = ptrtoint ptr %6 to i32
  br label %return

if.end11:                                         ; preds = %macsec_alloc_tfm.exit
  call void @__sanitizer_cov_trace_pc() #20
  %ssci = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 1
  %8 = ptrtoint ptr %ssci to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %ssci, align 8
  %active = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 5
  %9 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %active, align 4
  %10 = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 3
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 1, ptr %10, align 8
  %refcnt = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #18
  %12 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 1, ptr %refcnt, align 4
  %lock = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.34, ptr noundef nonnull @init_rx_sa.__key, i16 noundef signext 3) #18
  br label %return

return:                                           ; preds = %if.end11, %if.then6, %entry.return_crit_edge
  %retval.0 = phi i32 [ %7, %if.then6 ], [ 0, %if.end11 ], [ -12, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_rxsa_from_nl(ptr noundef %net, ptr nocapture noundef readonly %attrs, ptr nocapture noundef readonly %tb_rxsc, ptr nocapture noundef readonly %tb_sa, ptr nocapture noundef writeonly %devp, ptr nocapture noundef writeonly %secyp, ptr nocapture noundef writeonly %scp, ptr nocapture noundef %assoc_num) unnamed_addr #0 align 64 {
entry:
  %tmp.i.i.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr ptr, ptr %tb_sa, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 4
  %2 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %add.ptr.i.i, align 1
  %4 = ptrtoint ptr %assoc_num to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %3, ptr %assoc_num, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %3)
  %cmp = icmp ugt i8 %3, 3
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %arrayidx.i.i = getelementptr ptr, ptr %attrs, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %6, i32 4
  %7 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %call1.i.i = tail call ptr @__dev_get_by_index(ptr noundef %net, i32 noundef %8) #18
  %tobool.not.i.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i.i, label %if.end6.cleanup_crit_edge, label %if.end.i.i

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end6
  %priv_flags.i.i.i = getelementptr inbounds %struct.net_device, ptr %call1.i.i, i32 0, i32 15
  %9 = ptrtoint ptr %priv_flags.i.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %priv_flags.i.i.i, align 16
  %and.i.i.i = and i64 %10, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i.i.cleanup_crit_edge, label %get_dev_from_nl.exit.i

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

get_dev_from_nl.exit.i:                           ; preds = %if.end.i.i
  %cmp.i.i = icmp ugt ptr %call1.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge, label %if.end.i

get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge: ; preds = %get_dev_from_nl.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_rxsc_from_nl.exit

if.end.i:                                         ; preds = %get_dev_from_nl.exit.i
  %add.ptr.i.i.i = getelementptr i8, ptr %call1.i.i, i32 2304
  %arrayidx.i = getelementptr ptr, ptr %tb_rxsc, i32 1
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.end.i.cleanup_crit_edge, label %if.end7.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end7.i:                                        ; preds = %if.end.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i.i) #18
  %13 = ptrtoint ptr %tmp.i.i.i to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 -1, ptr %tmp.i.i.i, align 8, !annotation !199
  %call.i.i.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i.i.i, ptr noundef nonnull %12, i32 noundef 8) #18
  %14 = ptrtoint ptr %tmp.i.i.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %tmp.i.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i.i) #18
  %call10.i = call fastcc ptr @find_rx_sc_rtnl(ptr noundef %add.ptr.i.i.i, i64 noundef %15) #18
  %tobool11.not.i = icmp eq ptr %call10.i, null
  br i1 %tobool11.not.i, label %if.end7.i.cleanup_crit_edge, label %if.end14.i

if.end7.i.cleanup_crit_edge:                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end14.i:                                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  %16 = ptrtoint ptr %secyp to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %add.ptr.i.i.i, ptr %secyp, align 4
  %17 = ptrtoint ptr %devp to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call1.i.i, ptr %devp, align 4
  br label %get_rxsc_from_nl.exit

get_rxsc_from_nl.exit:                            ; preds = %if.end14.i, %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge
  %retval.0.i = phi ptr [ %call10.i, %if.end14.i ], [ %call1.i.i, %get_dev_from_nl.exit.i.get_rxsc_from_nl.exit_crit_edge ]
  %cmp.i = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %get_rxsc_from_nl.exit.cleanup_crit_edge, label %do.body

get_rxsc_from_nl.exit.cleanup_crit_edge:          ; preds = %get_rxsc_from_nl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

do.body:                                          ; preds = %get_rxsc_from_nl.exit
  %call12 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call12, label %do.body.do.end_crit_edge, label %land.lhs.true

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %do.body
  %call13 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true15

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true15:                                  ; preds = %land.lhs.true
  %.b33 = load i1, ptr @get_rxsa_from_nl.__warned, align 1
  br i1 %.b33, label %land.lhs.true15.do.end_crit_edge, label %if.then17

land.lhs.true15.do.end_crit_edge:                 ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then17:                                        ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @get_rxsa_from_nl.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1594, ptr noundef nonnull @.str.4) #18
  br label %do.end

do.end:                                           ; preds = %if.then17, %land.lhs.true15.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %do.body.do.end_crit_edge
  %18 = ptrtoint ptr %assoc_num to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %assoc_num, align 1
  %idxprom = zext i8 %19 to i32
  %arrayidx19 = getelementptr %struct.macsec_rx_sc, ptr %retval.0.i, i32 0, i32 3, i32 %idxprom
  %20 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx19, align 4
  %tobool20.not = icmp eq ptr %21, null
  br i1 %tobool20.not, label %do.end.cleanup_crit_edge, label %if.end23

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end23:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  %22 = ptrtoint ptr %scp to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %retval.0.i, ptr %scp, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %do.end.cleanup_crit_edge, %get_rxsc_from_nl.exit.cleanup_crit_edge, %if.end7.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %21, %if.end23 ], [ inttoptr (i32 -22 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.cleanup_crit_edge ], [ %retval.0.i, %get_rxsc_from_nl.exit.cleanup_crit_edge ], [ inttoptr (i32 -19 to ptr), %do.end.cleanup_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end.i.i.cleanup_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end6.cleanup_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end7.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_update_features(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_setup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @ether_setup(ptr noundef %dev) #18
  %min_mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 30
  %0 = ptrtoint ptr %min_mtu to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %min_mtu, align 8
  %max_mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 31
  %1 = ptrtoint ptr %max_mtu to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 65535, ptr %max_mtu, align 4
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 15
  %2 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %priv_flags, align 16
  %or = or i64 %3, 524288
  store i64 %or, ptr %priv_flags, align 16
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %4 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @macsec_netdev_ops, ptr %netdev_ops, align 8
  %needs_free_netdev = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 124
  %5 = ptrtoint ptr %needs_free_netdev to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %needs_free_netdev, align 8
  %priv_destructor = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 125
  %6 = ptrtoint ptr %priv_destructor to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @macsec_free_netdev, ptr %priv_destructor, align 4
  %type = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133, i32 4
  %7 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @macsec_type, ptr %type, align 4
  %broadcast = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 99
  %8 = call ptr @memset(ptr %broadcast, i32 0, i32 6)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_validate_attr(ptr nocapture noundef readnone %tb, ptr noundef readonly %data, ptr nocapture noundef readnone %extack) #0 align 64 {
entry:
  %tmp.i = alloca i64, align 8
  %dummy_key = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %data, null
  br i1 %tobool.not, label %entry.cleanup118_crit_edge, label %if.end

entry.cleanup118_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr ptr, ptr %data, i32 4
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %if.end.if.end4_crit_edge, label %if.then2

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %2 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 -1, ptr %tmp.i, align 8, !annotation !199
  %call.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i, ptr noundef nonnull %1, i32 noundef 8) #18
  %3 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %tmp.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  %csid.0 = phi i64 [ %4, %if.then2 ], [ 36030996058996737, %if.end.if.end4_crit_edge ]
  %arrayidx5 = getelementptr ptr, ptr %data, i32 3
  %5 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx5, align 4
  %tobool6.not = icmp eq ptr %6, null
  br i1 %tobool6.not, label %if.end4.if.end20_crit_edge, label %if.then7

if.end4.if.end20_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end20

if.then7:                                         ; preds = %if.end4
  %add.ptr.i.i = getelementptr i8, ptr %6, i32 4
  %7 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %add.ptr.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %8)
  %cmp.not = icmp eq i8 %8, 16
  br i1 %cmp.not, label %if.then7.if.end20_crit_edge, label %if.then11

if.then7.if.end20_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end20

if.then11:                                        ; preds = %if.then7
  %conv = zext i8 %8 to i32
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %dummy_key) #18
  %9 = call ptr @memset(ptr %dummy_key, i32 0, i32 16)
  %call.i166 = call ptr @crypto_alloc_aead(ptr noundef nonnull @.str.23, i32 noundef 0, i32 noundef 128) #18
  %cmp.i.i = icmp ugt ptr %call.i166, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then11.macsec_alloc_tfm.exit_crit_edge, label %if.end.i

if.then11.macsec_alloc_tfm.exit_crit_edge:        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_alloc_tfm.exit

if.end.i:                                         ; preds = %if.then11
  %call2.i = call i32 @crypto_aead_setkey(ptr noundef %call.i166, ptr noundef nonnull %dummy_key, i32 noundef 16) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp.i = icmp slt i32 %call2.i, 0
  br i1 %cmp.i, label %if.end.i.fail.i_crit_edge, label %if.end4.i

if.end.i.fail.i_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %fail.i

if.end4.i:                                        ; preds = %if.end.i
  %call5.i = call i32 @crypto_aead_setauthsize(ptr noundef %call.i166, i32 noundef %conv) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp6.i = icmp slt i32 %call5.i, 0
  br i1 %cmp6.i, label %if.end4.i.fail.i_crit_edge, label %if.end4.i.macsec_alloc_tfm.exit_crit_edge

if.end4.i.macsec_alloc_tfm.exit_crit_edge:        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_alloc_tfm.exit

if.end4.i.fail.i_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %fail.i

fail.i:                                           ; preds = %if.end4.i.fail.i_crit_edge, %if.end.i.fail.i_crit_edge
  %ret.0.i = phi i32 [ %call2.i, %if.end.i.fail.i_crit_edge ], [ %call5.i, %if.end4.i.fail.i_crit_edge ]
  %base.i.i.i = getelementptr inbounds %struct.crypto_aead, ptr %call.i166, i32 0, i32 3
  call void @crypto_destroy_tfm(ptr noundef %call.i166, ptr noundef %base.i.i.i) #18
  %10 = inttoptr i32 %ret.0.i to ptr
  br label %macsec_alloc_tfm.exit

macsec_alloc_tfm.exit:                            ; preds = %fail.i, %if.end4.i.macsec_alloc_tfm.exit_crit_edge, %if.then11.macsec_alloc_tfm.exit_crit_edge
  %retval.0.i = phi ptr [ %10, %fail.i ], [ %call.i166, %if.then11.macsec_alloc_tfm.exit_crit_edge ], [ %call.i166, %if.end4.i.macsec_alloc_tfm.exit_crit_edge ]
  %cmp.i167 = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i167, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %macsec_alloc_tfm.exit
  call void @__sanitizer_cov_trace_pc() #20
  %11 = ptrtoint ptr %retval.0.i to i32
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dummy_key) #18
  br label %cleanup118

cleanup:                                          ; preds = %macsec_alloc_tfm.exit
  call void @__sanitizer_cov_trace_pc() #20
  %base.i.i = getelementptr inbounds %struct.crypto_aead, ptr %retval.0.i, i32 0, i32 3
  call void @crypto_destroy_tfm(ptr noundef %retval.0.i, ptr noundef %base.i.i) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dummy_key) #18
  %phi.bo = add i8 %8, -17
  br label %if.end20

if.end20:                                         ; preds = %cleanup, %if.then7.if.end20_crit_edge, %if.end4.if.end20_crit_edge
  %icv_len.0 = phi i8 [ %phi.bo, %cleanup ], [ -1, %if.then7.if.end20_crit_edge ], [ -1, %if.end4.if.end20_crit_edge ]
  call void @__sanitizer_cov_trace_switch(i64 %csid.0, ptr @__sancov_gen_cov_switch_values.67)
  switch i64 %csid.0, label %if.end20.cleanup118_crit_edge [
    i64 36242102291529729, label %if.end20.sw.bb_crit_edge
    i64 36242102291529730, label %if.end20.sw.bb_crit_edge177
    i64 36242102291529731, label %if.end20.sw.bb_crit_edge178
    i64 36242102291529732, label %if.end20.sw.bb_crit_edge179
    i64 36030996058996737, label %if.end20.sw.bb_crit_edge180
  ]

if.end20.sw.bb_crit_edge180:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end20.sw.bb_crit_edge179:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end20.sw.bb_crit_edge178:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end20.sw.bb_crit_edge177:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end20.sw.bb_crit_edge:                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end20.cleanup118_crit_edge:                    ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

sw.bb:                                            ; preds = %if.end20.sw.bb_crit_edge, %if.end20.sw.bb_crit_edge177, %if.end20.sw.bb_crit_edge178, %if.end20.sw.bb_crit_edge179, %if.end20.sw.bb_crit_edge180
  call void @__sanitizer_cov_trace_const_cmp1(i8 -9, i8 %icv_len.0)
  %12 = icmp ult i8 %icv_len.0, -9
  br i1 %12, label %sw.bb.cleanup118_crit_edge, label %sw.epilog

sw.bb.cleanup118_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

sw.epilog:                                        ; preds = %sw.bb
  %arrayidx29 = getelementptr ptr, ptr %data, i32 6
  %13 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx29, align 4
  %tobool30.not = icmp eq ptr %14, null
  br i1 %tobool30.not, label %sw.epilog.if.end39_crit_edge, label %if.then31

sw.epilog.if.end39_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end39

if.then31:                                        ; preds = %sw.epilog
  %add.ptr.i.i168 = getelementptr i8, ptr %14, i32 4
  %15 = ptrtoint ptr %add.ptr.i.i168 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %add.ptr.i.i168, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %16)
  %cmp35 = icmp ugt i8 %16, 3
  br i1 %cmp35, label %if.then31.cleanup118_crit_edge, label %if.then31.if.end39_crit_edge

if.then31.if.end39_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end39

if.then31.cleanup118_crit_edge:                   ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

if.end39:                                         ; preds = %if.then31.if.end39_crit_edge, %sw.epilog.if.end39_crit_edge
  %arrayidx42 = getelementptr ptr, ptr %data, i32 7
  %17 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx42, align 4
  %tobool43.not = icmp eq ptr %18, null
  br i1 %tobool43.not, label %if.end39.for.inc_crit_edge, label %if.then44

if.end39.for.inc_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc

if.then44:                                        ; preds = %if.end39
  %add.ptr.i.i169 = getelementptr i8, ptr %18, i32 4
  %19 = ptrtoint ptr %add.ptr.i.i169 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %add.ptr.i.i169, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %20)
  %cmp48 = icmp ugt i8 %20, 1
  br i1 %cmp48, label %if.then44.cleanup118_crit_edge, label %if.then44.for.inc_crit_edge

if.then44.for.inc_crit_edge:                      ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc

if.then44.cleanup118_crit_edge:                   ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

for.inc:                                          ; preds = %if.then44.for.inc_crit_edge, %if.end39.for.inc_crit_edge
  %arrayidx42.1 = getelementptr ptr, ptr %data, i32 8
  %21 = ptrtoint ptr %arrayidx42.1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx42.1, align 4
  %tobool43.not.1 = icmp eq ptr %22, null
  br i1 %tobool43.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then44.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.1

if.then44.1:                                      ; preds = %for.inc
  %add.ptr.i.i169.1 = getelementptr i8, ptr %22, i32 4
  %23 = ptrtoint ptr %add.ptr.i.i169.1 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %add.ptr.i.i169.1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %24)
  %cmp48.1 = icmp ugt i8 %24, 1
  br i1 %cmp48.1, label %if.then44.1.cleanup118_crit_edge, label %if.then44.1.for.inc.1_crit_edge

if.then44.1.for.inc.1_crit_edge:                  ; preds = %if.then44.1
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.1

if.then44.1.cleanup118_crit_edge:                 ; preds = %if.then44.1
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

for.inc.1:                                        ; preds = %if.then44.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge
  %arrayidx42.2 = getelementptr ptr, ptr %data, i32 9
  %25 = ptrtoint ptr %arrayidx42.2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx42.2, align 4
  %tobool43.not.2 = icmp eq ptr %26, null
  br i1 %tobool43.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then44.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.2

if.then44.2:                                      ; preds = %for.inc.1
  %add.ptr.i.i169.2 = getelementptr i8, ptr %26, i32 4
  %27 = ptrtoint ptr %add.ptr.i.i169.2 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %add.ptr.i.i169.2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %28)
  %cmp48.2 = icmp ugt i8 %28, 1
  br i1 %cmp48.2, label %if.then44.2.cleanup118_crit_edge, label %if.then44.2.for.inc.2_crit_edge

if.then44.2.for.inc.2_crit_edge:                  ; preds = %if.then44.2
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.2

if.then44.2.cleanup118_crit_edge:                 ; preds = %if.then44.2
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

for.inc.2:                                        ; preds = %if.then44.2.for.inc.2_crit_edge, %for.inc.1.for.inc.2_crit_edge
  %arrayidx42.3 = getelementptr ptr, ptr %data, i32 10
  %29 = ptrtoint ptr %arrayidx42.3 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx42.3, align 4
  %tobool43.not.3 = icmp eq ptr %30, null
  br i1 %tobool43.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then44.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.3

if.then44.3:                                      ; preds = %for.inc.2
  %add.ptr.i.i169.3 = getelementptr i8, ptr %30, i32 4
  %31 = ptrtoint ptr %add.ptr.i.i169.3 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %add.ptr.i.i169.3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %32)
  %cmp48.3 = icmp ugt i8 %32, 1
  br i1 %cmp48.3, label %if.then44.3.cleanup118_crit_edge, label %if.then44.3.for.inc.3_crit_edge

if.then44.3.for.inc.3_crit_edge:                  ; preds = %if.then44.3
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.3

if.then44.3.cleanup118_crit_edge:                 ; preds = %if.then44.3
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

for.inc.3:                                        ; preds = %if.then44.3.for.inc.3_crit_edge, %for.inc.2.for.inc.3_crit_edge
  %arrayidx42.4 = getelementptr ptr, ptr %data, i32 11
  %33 = ptrtoint ptr %arrayidx42.4 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx42.4, align 4
  %tobool43.not.4 = icmp eq ptr %34, null
  br i1 %tobool43.not.4, label %for.inc.3.for.inc.4_crit_edge, label %if.then44.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.4

if.then44.4:                                      ; preds = %for.inc.3
  %add.ptr.i.i169.4 = getelementptr i8, ptr %34, i32 4
  %35 = ptrtoint ptr %add.ptr.i.i169.4 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %add.ptr.i.i169.4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %36)
  %cmp48.4 = icmp ugt i8 %36, 1
  br i1 %cmp48.4, label %if.then44.4.cleanup118_crit_edge, label %if.then44.4.for.inc.4_crit_edge

if.then44.4.for.inc.4_crit_edge:                  ; preds = %if.then44.4
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.4

if.then44.4.cleanup118_crit_edge:                 ; preds = %if.then44.4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

for.inc.4:                                        ; preds = %if.then44.4.for.inc.4_crit_edge, %for.inc.3.for.inc.4_crit_edge
  %arrayidx42.5 = getelementptr ptr, ptr %data, i32 12
  %37 = ptrtoint ptr %arrayidx42.5 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx42.5, align 4
  %tobool43.not.5 = icmp eq ptr %38, null
  br i1 %tobool43.not.5, label %for.inc.4.for.inc.5_crit_edge, label %if.then44.5

for.inc.4.for.inc.5_crit_edge:                    ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.5

if.then44.5:                                      ; preds = %for.inc.4
  %add.ptr.i.i169.5 = getelementptr i8, ptr %38, i32 4
  %39 = ptrtoint ptr %add.ptr.i.i169.5 to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %add.ptr.i.i169.5, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %40)
  %cmp48.5 = icmp ugt i8 %40, 1
  br i1 %cmp48.5, label %if.then44.5.cleanup118_crit_edge, label %if.then44.5.for.inc.5_crit_edge

if.then44.5.for.inc.5_crit_edge:                  ; preds = %if.then44.5
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.5

if.then44.5.cleanup118_crit_edge:                 ; preds = %if.then44.5
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

for.inc.5:                                        ; preds = %if.then44.5.for.inc.5_crit_edge, %for.inc.4.for.inc.5_crit_edge
  %41 = ptrtoint ptr %arrayidx42.3 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx42.3, align 4
  %tobool54.not = icmp eq ptr %42, null
  br i1 %tobool54.not, label %for.inc.5.cond.end_crit_edge, label %cond.true

for.inc.5.cond.end_crit_edge:                     ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #20
  br label %cond.end

cond.true:                                        ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i170 = getelementptr i8, ptr %42, i32 4
  %43 = ptrtoint ptr %add.ptr.i.i170 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %add.ptr.i.i170, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %phi.cmp = icmp eq i8 %44, 0
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %for.inc.5.cond.end_crit_edge
  %cond = phi i1 [ %phi.cmp, %cond.true ], [ true, %for.inc.5.cond.end_crit_edge ]
  %45 = ptrtoint ptr %arrayidx42.2 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx42.2, align 4
  %tobool60.not = icmp eq ptr %46, null
  br i1 %tobool60.not, label %cond.end.cond.end66_crit_edge, label %cond.true61

cond.end.cond.end66_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cond.end66

cond.true61:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i171 = getelementptr i8, ptr %46, i32 4
  %47 = ptrtoint ptr %add.ptr.i.i171 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %add.ptr.i.i171, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %phi.cmp162 = icmp eq i8 %48, 0
  br label %cond.end66

cond.end66:                                       ; preds = %cond.true61, %cond.end.cond.end66_crit_edge
  %cond67 = phi i1 [ %phi.cmp162, %cond.true61 ], [ true, %cond.end.cond.end66_crit_edge ]
  %49 = ptrtoint ptr %arrayidx42.4 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx42.4, align 4
  %tobool71.not = icmp eq ptr %50, null
  br i1 %tobool71.not, label %cond.end66.cond.end77_crit_edge, label %cond.true72

cond.end66.cond.end77_crit_edge:                  ; preds = %cond.end66
  call void @__sanitizer_cov_trace_pc() #20
  br label %cond.end77

cond.true72:                                      ; preds = %cond.end66
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i172 = getelementptr i8, ptr %50, i32 4
  %51 = ptrtoint ptr %add.ptr.i.i172 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %add.ptr.i.i172, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %phi.cmp163 = icmp eq i8 %52, 0
  br label %cond.end77

cond.end77:                                       ; preds = %cond.true72, %cond.end66.cond.end77_crit_edge
  %cond78 = phi i1 [ %phi.cmp163, %cond.true72 ], [ true, %cond.end66.cond.end77_crit_edge ]
  br i1 %cond67, label %lor.lhs.false88, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end77
  %53 = select i1 %cond78, i1 %cond, i1 false
  %brmerge164 = select i1 %cond78, i1 true, i1 %cond
  %or.cond165 = select i1 %53, i1 %brmerge164, i1 false
  br i1 %or.cond165, label %land.lhs.true.if.end95_crit_edge, label %land.lhs.true.cleanup118_crit_edge

land.lhs.true.cleanup118_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

land.lhs.true.if.end95_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end95

lor.lhs.false88:                                  ; preds = %cond.end77
  %brmerge164.old = select i1 %cond78, i1 true, i1 %cond
  br i1 %brmerge164.old, label %lor.lhs.false88.if.end95_crit_edge, label %lor.lhs.false88.cleanup118_crit_edge

lor.lhs.false88.cleanup118_crit_edge:             ; preds = %lor.lhs.false88
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

lor.lhs.false88.if.end95_crit_edge:               ; preds = %lor.lhs.false88
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end95

if.end95:                                         ; preds = %lor.lhs.false88.if.end95_crit_edge, %land.lhs.true.if.end95_crit_edge
  %arrayidx96 = getelementptr ptr, ptr %data, i32 13
  %54 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx96, align 4
  %tobool97.not = icmp eq ptr %55, null
  br i1 %tobool97.not, label %if.end95.if.end105_crit_edge, label %land.lhs.true98

if.end95.if.end105_crit_edge:                     ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end105

land.lhs.true98:                                  ; preds = %if.end95
  %add.ptr.i.i173 = getelementptr i8, ptr %55, i32 4
  %56 = ptrtoint ptr %add.ptr.i.i173 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %add.ptr.i.i173, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %57)
  %cmp102 = icmp ugt i8 %57, 2
  br i1 %cmp102, label %land.lhs.true98.cleanup118_crit_edge, label %land.lhs.true98.if.end105_crit_edge

land.lhs.true98.if.end105_crit_edge:              ; preds = %land.lhs.true98
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end105

land.lhs.true98.cleanup118_crit_edge:             ; preds = %land.lhs.true98
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

if.end105:                                        ; preds = %land.lhs.true98.if.end105_crit_edge, %if.end95.if.end105_crit_edge
  %58 = ptrtoint ptr %arrayidx42.5 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx42.5, align 4
  %tobool107.not = icmp eq ptr %59, null
  br i1 %tobool107.not, label %if.end105.if.end117_crit_edge, label %land.lhs.true108

if.end105.if.end117_crit_edge:                    ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end117

land.lhs.true108:                                 ; preds = %if.end105
  %add.ptr.i.i174 = getelementptr i8, ptr %59, i32 4
  %60 = ptrtoint ptr %add.ptr.i.i174 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %add.ptr.i.i174, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %tobool112.not = icmp eq i8 %61, 0
  br i1 %tobool112.not, label %land.lhs.true108.if.end117_crit_edge, label %land.lhs.true113

land.lhs.true108.if.end117_crit_edge:             ; preds = %land.lhs.true108
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end117

land.lhs.true113:                                 ; preds = %land.lhs.true108
  %arrayidx114 = getelementptr ptr, ptr %data, i32 5
  %62 = ptrtoint ptr %arrayidx114 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %arrayidx114, align 4
  %tobool115.not = icmp eq ptr %63, null
  br i1 %tobool115.not, label %land.lhs.true113.cleanup118_crit_edge, label %land.lhs.true113.if.end117_crit_edge

land.lhs.true113.if.end117_crit_edge:             ; preds = %land.lhs.true113
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end117

land.lhs.true113.cleanup118_crit_edge:            ; preds = %land.lhs.true113
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup118

if.end117:                                        ; preds = %land.lhs.true113.if.end117_crit_edge, %land.lhs.true108.if.end117_crit_edge, %if.end105.if.end117_crit_edge
  br label %cleanup118

cleanup118:                                       ; preds = %if.end117, %land.lhs.true113.cleanup118_crit_edge, %land.lhs.true98.cleanup118_crit_edge, %lor.lhs.false88.cleanup118_crit_edge, %land.lhs.true.cleanup118_crit_edge, %if.then44.5.cleanup118_crit_edge, %if.then44.4.cleanup118_crit_edge, %if.then44.3.cleanup118_crit_edge, %if.then44.2.cleanup118_crit_edge, %if.then44.1.cleanup118_crit_edge, %if.then44.cleanup118_crit_edge, %if.then31.cleanup118_crit_edge, %sw.bb.cleanup118_crit_edge, %if.end20.cleanup118_crit_edge, %cleanup.thread, %entry.cleanup118_crit_edge
  %retval.1 = phi i32 [ 0, %if.end117 ], [ 0, %entry.cleanup118_crit_edge ], [ -22, %sw.bb.cleanup118_crit_edge ], [ -22, %if.end20.cleanup118_crit_edge ], [ -22, %if.then31.cleanup118_crit_edge ], [ -22, %lor.lhs.false88.cleanup118_crit_edge ], [ -22, %land.lhs.true.cleanup118_crit_edge ], [ -22, %land.lhs.true98.cleanup118_crit_edge ], [ -22, %land.lhs.true113.cleanup118_crit_edge ], [ %11, %cleanup.thread ], [ -22, %if.then44.5.cleanup118_crit_edge ], [ -22, %if.then44.4.cleanup118_crit_edge ], [ -22, %if.then44.3.cleanup118_crit_edge ], [ -22, %if.then44.2.cleanup118_crit_edge ], [ -22, %if.then44.1.cleanup118_crit_edge ], [ -22, %if.then44.cleanup118_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_newlink(ptr noundef %net, ptr noundef %dev, ptr nocapture noundef readonly %tb, ptr noundef readonly %data, ptr noundef %extack) #0 align 64 {
entry:
  %tmp.i.i = alloca i64, align 8
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %arrayidx = getelementptr ptr, ptr %tb, i32 5
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup175_crit_edge, label %if.end

entry.cleanup175_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.end:                                           ; preds = %entry
  %add.ptr.i.i272 = getelementptr i8, ptr %1, i32 4
  %2 = ptrtoint ptr %add.ptr.i.i272 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i.i272, align 4
  %call3 = tail call ptr @__dev_get_by_index(ptr noundef %net, i32 noundef %3) #18
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end.cleanup175_crit_edge, label %if.end6

if.end.cleanup175_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.end6:                                          ; preds = %if.end
  %type = getelementptr inbounds %struct.net_device, ptr %call3, i32 0, i32 32
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %type, align 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %5)
  %cmp.not = icmp eq i16 %5, 1
  br i1 %cmp.not, label %if.end9, label %if.end6.cleanup175_crit_edge

if.end6.cleanup175_crit_edge:                     ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.end9:                                          ; preds = %if.end6
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 15
  %6 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %priv_flags, align 16
  %or = or i64 %7, 33554432
  store i64 %or, ptr %priv_flags, align 16
  %real_dev10 = getelementptr i8, ptr %dev, i32 2368
  %8 = ptrtoint ptr %real_dev10 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call3, ptr %real_dev10, align 8
  %tobool11.not = icmp eq ptr %data, null
  br i1 %tobool11.not, label %if.end9.if.end18_crit_edge, label %land.lhs.true

if.end9.if.end18_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end18

land.lhs.true:                                    ; preds = %if.end9
  %arrayidx12 = getelementptr ptr, ptr %data, i32 15
  %9 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx12, align 4
  %tobool13.not = icmp eq ptr %10, null
  br i1 %tobool13.not, label %land.lhs.true.if.end18_crit_edge, label %if.then14

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end18

if.then14:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i.i = getelementptr i8, ptr %10, i32 4
  %11 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %add.ptr.i.i.i, align 1
  %conv.i = zext i8 %12 to i32
  br label %if.end18

if.end18:                                         ; preds = %if.then14, %land.lhs.true.if.end18_crit_edge, %if.end9.if.end18_crit_edge
  %.sink = phi i32 [ %conv.i, %if.then14 ], [ 0, %land.lhs.true.if.end18_crit_edge ], [ 0, %if.end9.if.end18_crit_edge ]
  %offload17 = getelementptr i8, ptr %dev, i32 2388
  %13 = ptrtoint ptr %offload17 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %.sink, ptr %offload17, align 4
  %offload19 = getelementptr i8, ptr %dev, i32 2388
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.sink)
  %cmp20.not = icmp eq i32 %.sink, 0
  br i1 %cmp20.not, label %if.end18.if.end26_crit_edge, label %land.lhs.true22

if.end18.if.end26_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end26

land.lhs.true22:                                  ; preds = %if.end18
  %tobool.not.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i, label %land.lhs.true22.cleanup175_crit_edge, label %lor.lhs.false.i

land.lhs.true22.cleanup175_crit_edge:             ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

lor.lhs.false.i:                                  ; preds = %land.lhs.true22
  %14 = ptrtoint ptr %real_dev10 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %real_dev10, align 8
  %tobool1.not.i = icmp eq ptr %15, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i.cleanup175_crit_edge, label %if.end.i

lor.lhs.false.i.cleanup175_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.end.i:                                         ; preds = %lor.lhs.false.i
  %trunc = trunc i32 %.sink to i8
  %16 = zext i8 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.68)
  switch i8 %trunc, label %if.end.i.cleanup175_crit_edge [
    i8 1, label %if.then2.i
    i8 2, label %if.then9.i
  ]

if.end.i.cleanup175_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.then2.i:                                       ; preds = %if.end.i
  %phydev.i = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 145
  %17 = ptrtoint ptr %phydev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %phydev.i, align 16
  %tobool4.not.i = icmp eq ptr %18, null
  br i1 %tobool4.not.i, label %if.then2.i.cleanup175_crit_edge, label %land.rhs.i

if.then2.i.cleanup175_crit_edge:                  ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

land.rhs.i:                                       ; preds = %if.then2.i
  %macsec_ops.i = getelementptr inbounds %struct.phy_device, ptr %18, i32 0, i32 42
  %19 = ptrtoint ptr %macsec_ops.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %macsec_ops.i, align 4
  %tobool7.i.not = icmp eq ptr %20, null
  br i1 %tobool7.i.not, label %land.rhs.i.cleanup175_crit_edge, label %land.rhs.i.if.end26_crit_edge

land.rhs.i.if.end26_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end26

land.rhs.i.cleanup175_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.then9.i:                                       ; preds = %if.end.i
  %features.i = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 23
  %21 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %features.i, align 16
  %and.i = and i64 %22, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool11.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool11.not.i, label %if.then9.i.cleanup175_crit_edge, label %macsec_check_offload.exit

if.then9.i.cleanup175_crit_edge:                  ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

macsec_check_offload.exit:                        ; preds = %if.then9.i
  %macsec_ops14.i = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 151
  %23 = ptrtoint ptr %macsec_ops14.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %macsec_ops14.i, align 8
  %tobool15.i.not = icmp eq ptr %24, null
  br i1 %tobool15.i.not, label %macsec_check_offload.exit.cleanup175_crit_edge, label %macsec_check_offload.exit.if.end26_crit_edge

macsec_check_offload.exit.if.end26_crit_edge:     ; preds = %macsec_check_offload.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end26

macsec_check_offload.exit.cleanup175_crit_edge:   ; preds = %macsec_check_offload.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.end26:                                         ; preds = %macsec_check_offload.exit.if.end26_crit_edge, %land.rhs.i.if.end26_crit_edge, %if.end18.if.end26_crit_edge
  br i1 %tobool11.not, label %if.end26.if.end53_crit_edge, label %land.lhs.true28

if.end26.if.end53_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end53

land.lhs.true28:                                  ; preds = %if.end26
  %arrayidx29 = getelementptr ptr, ptr %data, i32 1
  %25 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx29, align 4
  %tobool30.not = icmp eq ptr %26, null
  br i1 %tobool30.not, label %land.lhs.true28.land.lhs.true47_crit_edge, label %land.lhs.true33

land.lhs.true28.land.lhs.true47_crit_edge:        ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #20
  br label %land.lhs.true47

land.lhs.true33:                                  ; preds = %land.lhs.true28
  %arrayidx34 = getelementptr ptr, ptr %data, i32 9
  %27 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx34, align 4
  %tobool35.not = icmp eq ptr %28, null
  br i1 %tobool35.not, label %land.lhs.true33.land.lhs.true47_crit_edge, label %if.then36

land.lhs.true33.land.lhs.true47_crit_edge:        ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #20
  br label %land.lhs.true47

if.then36:                                        ; preds = %land.lhs.true33
  %add.ptr.i.i273 = getelementptr i8, ptr %28, i32 4
  %29 = ptrtoint ptr %add.ptr.i.i273 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %add.ptr.i.i273, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool39.not = icmp eq i8 %30, 0
  br i1 %tobool39.not, label %if.then36.cleanup175_crit_edge, label %if.then36.land.lhs.true47_crit_edge

if.then36.land.lhs.true47_crit_edge:              ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #20
  br label %land.lhs.true47

if.then36.cleanup175_crit_edge:                   ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

land.lhs.true47:                                  ; preds = %if.then36.land.lhs.true47_crit_edge, %land.lhs.true33.land.lhs.true47_crit_edge, %land.lhs.true28.land.lhs.true47_crit_edge
  %arrayidx48 = getelementptr ptr, ptr %data, i32 3
  %31 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx48, align 4
  %tobool49.not = icmp eq ptr %32, null
  br i1 %tobool49.not, label %land.lhs.true47.if.end53_crit_edge, label %if.then50

land.lhs.true47.if.end53_crit_edge:               ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end53

if.then50:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i274 = getelementptr i8, ptr %32, i32 4
  %33 = ptrtoint ptr %add.ptr.i.i274 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %add.ptr.i.i274, align 1
  br label %if.end53

if.end53:                                         ; preds = %if.then50, %land.lhs.true47.if.end53_crit_edge, %if.end26.if.end53_crit_edge
  %icv_len.0 = phi i8 [ %34, %if.then50 ], [ 16, %land.lhs.true47.if.end53_crit_edge ], [ 16, %if.end26.if.end53_crit_edge ]
  %mtu54 = getelementptr inbounds %struct.net_device, ptr %call3, i32 0, i32 20
  %35 = ptrtoint ptr %mtu54 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mtu54, align 4
  %conv55 = zext i8 %icv_len.0 to i32
  %.neg = sub nuw nsw i32 -16, %conv55
  %sub57 = add i32 %.neg, %36
  %37 = call i32 @llvm.smax.i32(i32 %sub57, i32 0)
  %38 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %37, ptr %38, align 4
  %call65 = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call65, label %if.end53.do.end_crit_edge, label %land.lhs.true66

if.end53.do.end_crit_edge:                        ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true66:                                  ; preds = %if.end53
  %call67 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call67)
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %land.lhs.true66.do.end_crit_edge, label %land.lhs.true69

land.lhs.true66.do.end_crit_edge:                 ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %.b269 = load i1, ptr @macsec_newlink.__warned, align 1
  br i1 %.b269, label %land.lhs.true69.do.end_crit_edge, label %if.then71

land.lhs.true69.do.end_crit_edge:                 ; preds = %land.lhs.true69
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then71:                                        ; preds = %land.lhs.true69
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_newlink.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 4038, ptr noundef nonnull @.str.4) #18
  br label %do.end

do.end:                                           ; preds = %if.then71, %land.lhs.true69.do.end_crit_edge, %land.lhs.true66.do.end_crit_edge, %if.end53.do.end_crit_edge
  %rx_handler73 = getelementptr inbounds %struct.net_device, ptr %call3, i32 0, i32 94
  %40 = ptrtoint ptr %rx_handler73 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %rx_handler73, align 32
  %tobool74.not = icmp eq ptr %41, null
  %cmp76.not = icmp eq ptr %41, @macsec_handle_frame
  %or.cond = or i1 %tobool74.not, %cmp76.not
  br i1 %or.cond, label %if.end79, label %do.end.cleanup175_crit_edge

do.end.cleanup175_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.end79:                                         ; preds = %do.end
  %call80 = tail call i32 @register_netdevice(ptr noundef %dev) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80)
  %cmp81 = icmp slt i32 %call80, 0
  br i1 %cmp81, label %if.end79.cleanup175_crit_edge, label %if.end84

if.end79.cleanup175_crit_edge:                    ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup175

if.end84:                                         ; preds = %if.end79
  %qdisc_tx_busylock = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 147
  %42 = ptrtoint ptr %qdisc_tx_busylock to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr @macsec_newlink.qdisc_tx_busylock_key, ptr %qdisc_tx_busylock, align 8
  %dep_map = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 63, i32 0, i32 0, i32 4
  %wait_type_inner = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 63, i32 0, i32 0, i32 4, i32 4
  %43 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %wait_type_inner, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map, ptr noundef nonnull @.str.43, ptr noundef nonnull @macsec_newlink.dev_addr_list_lock_key, i32 noundef 0, i8 noundef zeroext %44, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  %num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %45 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %num_tx_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp89284.not = icmp eq i32 %46, 0
  br i1 %cmp89284.not, label %if.end84.for.end_crit_edge, label %for.body.lr.ph

if.end84.for.end_crit_edge:                       ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end84
  %_tx = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.0285 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %47 = ptrtoint ptr %_tx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %_tx, align 128
  %dep_map92 = getelementptr %struct.netdev_queue, ptr %48, i32 %i.0285, i32 10, i32 0, i32 0, i32 4
  %wait_type_inner97 = getelementptr %struct.netdev_queue, ptr %48, i32 %i.0285, i32 10, i32 0, i32 0, i32 4, i32 4
  %49 = ptrtoint ptr %wait_type_inner97 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %wait_type_inner97, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map92, ptr noundef nonnull @.str.44, ptr noundef nonnull @macsec_newlink.qdisc_xmit_lock_key, i32 noundef 0, i8 noundef zeroext %50, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  %inc = add nuw i32 %i.0285, 1
  %51 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %num_tx_queues, align 4
  %cmp89 = icmp ult i32 %inc, %52
  br i1 %cmp89, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end84.for.end_crit_edge
  %53 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %wait_type_inner, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map, ptr noundef nonnull @.str.45, ptr noundef nonnull @macsec_netdev_addr_lock_key, i32 noundef 0, i8 noundef zeroext %54, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  %call111 = tail call i32 @netdev_upper_dev_link(ptr noundef nonnull %call3, ptr noundef %dev, ptr noundef %extack) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call111)
  %cmp112 = icmp slt i32 %call111, 0
  br i1 %cmp112, label %for.end.unregister_crit_edge, label %if.end115

for.end.unregister_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %unregister

if.end115:                                        ; preds = %for.end
  br i1 %tobool11.not, label %if.end115.if.else132_crit_edge, label %land.lhs.true117

if.end115.if.else132_crit_edge:                   ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.else132

land.lhs.true117:                                 ; preds = %if.end115
  %arrayidx118 = getelementptr ptr, ptr %data, i32 1
  %55 = ptrtoint ptr %arrayidx118 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx118, align 4
  %tobool119.not = icmp eq ptr %56, null
  br i1 %tobool119.not, label %land.lhs.true125.critedge, label %if.then120

if.then120:                                       ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i) #18
  %57 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 -1, ptr %tmp.i.i, align 8, !annotation !199
  %call.i.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i.i, ptr noundef nonnull %56, i32 noundef 8) #18
  %58 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %tmp.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i) #18
  br label %if.end135

land.lhs.true125.critedge:                        ; preds = %land.lhs.true117
  %arrayidx126 = getelementptr ptr, ptr %data, i32 2
  %60 = ptrtoint ptr %arrayidx126 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx126, align 4
  %tobool127.not = icmp eq ptr %61, null
  br i1 %tobool127.not, label %land.lhs.true125.critedge.if.else132_crit_edge, label %if.then128

land.lhs.true125.critedge.if.else132_crit_edge:   ; preds = %land.lhs.true125.critedge
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.else132

if.then128:                                       ; preds = %land.lhs.true125.critedge
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i275 = getelementptr i8, ptr %61, i32 4
  %62 = ptrtoint ptr %add.ptr.i.i275 to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %add.ptr.i.i275, align 2
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %64 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dev_addr.i, align 64
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_loadN_noabort(i32 %66, i32 6)
  %sci.0.copyload.i.i = load i48, ptr %65, align 1
  %sci.0.insert.ext.i.i = zext i48 %sci.0.copyload.i.i to i64
  %sci.0.insert.shift.i.i = shl nuw i64 %sci.0.insert.ext.i.i, 16
  %sci.6.insert.ext.i.i = zext i16 %63 to i64
  %sci.6.insert.insert.i.i = or i64 %sci.0.insert.shift.i.i, %sci.6.insert.ext.i.i
  br label %if.end135

if.else132:                                       ; preds = %land.lhs.true125.critedge.if.else132_crit_edge, %if.end115.if.else132_crit_edge
  %dev_addr.i276 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %67 = ptrtoint ptr %dev_addr.i276 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %dev_addr.i276, align 64
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_loadN_noabort(i32 %69, i32 6)
  %sci.0.copyload.i.i277 = load i48, ptr %68, align 1
  %sci.0.insert.ext.i.i278 = zext i48 %sci.0.copyload.i.i277 to i64
  %sci.0.insert.shift.i.i279 = shl nuw i64 %sci.0.insert.ext.i.i278, 16
  %sci.6.insert.insert.i.i280 = or i64 %sci.0.insert.shift.i.i279, 1
  br label %if.end135

if.end135:                                        ; preds = %if.else132, %if.then128, %if.then120
  %sci.0 = phi i64 [ %59, %if.then120 ], [ %sci.6.insert.insert.i.i, %if.then128 ], [ %sci.6.insert.insert.i.i280, %if.else132 ]
  br i1 %tobool74.not, label %if.end135.if.end141_crit_edge, label %land.lhs.true137

if.end135.if.end141_crit_edge:                    ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end141

land.lhs.true137:                                 ; preds = %if.end135
  %call138 = call fastcc zeroext i1 @sci_exists(ptr noundef nonnull %call3, i64 noundef %sci.0)
  br i1 %call138, label %land.lhs.true137.unlink_crit_edge, label %land.lhs.true137.if.end141_crit_edge

land.lhs.true137.if.end141_crit_edge:             ; preds = %land.lhs.true137
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end141

land.lhs.true137.unlink_crit_edge:                ; preds = %land.lhs.true137
  call void @__sanitizer_cov_trace_pc() #20
  br label %unlink

if.end141:                                        ; preds = %land.lhs.true137.if.end141_crit_edge, %if.end135.if.end141_crit_edge
  %call142 = call fastcc i32 @macsec_add_dev(ptr noundef %dev, i64 noundef %sci.0, i8 noundef zeroext %icv_len.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call142)
  %tobool143.not = icmp eq i32 %call142, 0
  br i1 %tobool143.not, label %if.end145, label %if.end141.unlink_crit_edge

if.end141.unlink_crit_edge:                       ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #20
  br label %unlink

if.end145:                                        ; preds = %if.end141
  br i1 %tobool11.not, label %if.end145.if.end152_crit_edge, label %if.then147

if.end145.if.end152_crit_edge:                    ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end152

if.then147:                                       ; preds = %if.end145
  %call148 = call fastcc i32 @macsec_changelink_common(ptr noundef %dev, ptr noundef nonnull %data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call148)
  %tobool149.not = icmp eq i32 %call148, 0
  br i1 %tobool149.not, label %if.then147.if.end152_crit_edge, label %if.then147.del_dev_crit_edge

if.then147.del_dev_crit_edge:                     ; preds = %if.then147
  call void @__sanitizer_cov_trace_pc() #20
  br label %del_dev

if.then147.if.end152_crit_edge:                   ; preds = %if.then147
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end152

if.end152:                                        ; preds = %if.then147.if.end152_crit_edge, %if.end145.if.end152_crit_edge
  %70 = ptrtoint ptr %offload19 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %offload19, align 4
  %.off.i = add i32 %71, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then154, label %if.end152.if.end168_crit_edge

if.end152.if.end168_crit_edge:                    ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end168

if.then154:                                       ; preds = %if.end152
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %72 = call ptr @memset(ptr %ctx, i32 255, i32 160)
  %call155 = call fastcc ptr @macsec_get_ops(ptr noundef %add.ptr.i.i, ptr noundef nonnull %ctx)
  %tobool156.not = icmp eq ptr %call155, null
  br i1 %tobool156.not, label %if.then154.cleanup164.thread_crit_edge, label %if.then157

if.then154.cleanup164.thread_crit_edge:           ; preds = %if.then154
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup164.thread

if.then157:                                       ; preds = %if.then154
  %secy158 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %73 = ptrtoint ptr %secy158 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %add.ptr.i.i, ptr %secy158, align 4
  %mdo_add_secy = getelementptr inbounds %struct.macsec_ops, ptr %call155, i32 0, i32 2
  %74 = ptrtoint ptr %mdo_add_secy to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %mdo_add_secy, align 4
  %call159 = call fastcc i32 @macsec_offload(ptr noundef %75, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call159)
  %tobool160.not = icmp eq i32 %call159, 0
  br i1 %tobool160.not, label %if.then157.cleanup164.thread_crit_edge, label %cleanup164

if.then157.cleanup164.thread_crit_edge:           ; preds = %if.then157
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup164.thread

cleanup164.thread:                                ; preds = %if.then157.cleanup164.thread_crit_edge, %if.then154.cleanup164.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end168

cleanup164:                                       ; preds = %if.then157
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %del_dev

if.end168:                                        ; preds = %cleanup164.thread, %if.end152.if.end168_crit_edge
  %call169 = call fastcc i32 @register_macsec_dev(ptr noundef nonnull %call3, ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call169)
  %cmp170 = icmp slt i32 %call169, 0
  br i1 %cmp170, label %if.end168.del_dev_crit_edge, label %if.end173

if.end168.del_dev_crit_edge:                      ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #20
  br label %del_dev

if.end173:                                        ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #20
  call void @netif_stacked_transfer_operstate(ptr noundef nonnull %call3, ptr noundef %dev) #18
  call void @linkwatch_fire_event(ptr noundef %dev) #18
  %76 = load i32, ptr @macsec_generation, align 4
  %inc174 = add i32 %76, 1
  store i32 %inc174, ptr @macsec_generation, align 4
  br label %cleanup175

del_dev:                                          ; preds = %if.end168.del_dev_crit_edge, %cleanup164, %if.then147.del_dev_crit_edge
  %err.3 = phi i32 [ %call148, %if.then147.del_dev_crit_edge ], [ %call159, %cleanup164 ], [ %call169, %if.end168.del_dev_crit_edge ]
  call fastcc void @macsec_del_dev(ptr noundef %add.ptr.i.i)
  br label %unlink

unlink:                                           ; preds = %del_dev, %if.end141.unlink_crit_edge, %land.lhs.true137.unlink_crit_edge
  %err.4 = phi i32 [ %call142, %if.end141.unlink_crit_edge ], [ %err.3, %del_dev ], [ -16, %land.lhs.true137.unlink_crit_edge ]
  call void @netdev_upper_dev_unlink(ptr noundef nonnull %call3, ptr noundef %dev) #18
  br label %unregister

unregister:                                       ; preds = %unlink, %for.end.unregister_crit_edge
  %err.5 = phi i32 [ %call111, %for.end.unregister_crit_edge ], [ %err.4, %unlink ]
  call void @unregister_netdevice_queue(ptr noundef %dev, ptr noundef null) #18
  br label %cleanup175

cleanup175:                                       ; preds = %unregister, %if.end173, %if.end79.cleanup175_crit_edge, %do.end.cleanup175_crit_edge, %if.then36.cleanup175_crit_edge, %macsec_check_offload.exit.cleanup175_crit_edge, %if.then9.i.cleanup175_crit_edge, %land.rhs.i.cleanup175_crit_edge, %if.then2.i.cleanup175_crit_edge, %if.end.i.cleanup175_crit_edge, %lor.lhs.false.i.cleanup175_crit_edge, %land.lhs.true22.cleanup175_crit_edge, %if.end6.cleanup175_crit_edge, %if.end.cleanup175_crit_edge, %entry.cleanup175_crit_edge
  %retval.2 = phi i32 [ %err.5, %unregister ], [ 0, %if.end173 ], [ -22, %if.then36.cleanup175_crit_edge ], [ -22, %entry.cleanup175_crit_edge ], [ -19, %if.end.cleanup175_crit_edge ], [ -22, %if.end6.cleanup175_crit_edge ], [ -95, %macsec_check_offload.exit.cleanup175_crit_edge ], [ -16, %do.end.cleanup175_crit_edge ], [ %call80, %if.end79.cleanup175_crit_edge ], [ -95, %land.rhs.i.cleanup175_crit_edge ], [ -95, %lor.lhs.false.i.cleanup175_crit_edge ], [ -95, %land.lhs.true22.cleanup175_crit_edge ], [ -95, %if.then2.i.cleanup175_crit_edge ], [ -95, %if.then9.i.cleanup175_crit_edge ], [ -95, %if.end.i.cleanup175_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_changelink(ptr noundef %dev, ptr nocapture noundef readnone %tb, ptr noundef readonly %data, ptr nocapture noundef readnone %extack) #0 align 64 {
entry:
  %secy = alloca %struct.macsec_secy, align 8
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %secy)
  %tobool.not = icmp eq ptr %data, null
  br i1 %tobool.not, label %entry.cleanup40_crit_edge, label %if.end

entry.cleanup40_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr ptr, ptr %data, i32 4
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %lor.lhs.false, label %if.end.cleanup40_crit_edge

if.end.cleanup40_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx2 = getelementptr ptr, ptr %data, i32 3
  %2 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx2, align 4
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %lor.lhs.false4, label %lor.lhs.false.cleanup40_crit_edge

lor.lhs.false.cleanup40_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %arrayidx5 = getelementptr ptr, ptr %data, i32 1
  %4 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx5, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %lor.lhs.false7, label %lor.lhs.false4.cleanup40_crit_edge

lor.lhs.false4.cleanup40_crit_edge:               ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %arrayidx8 = getelementptr ptr, ptr %data, i32 2
  %6 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx8, align 4
  %tobool9.not = icmp eq ptr %7, null
  br i1 %tobool9.not, label %if.end11, label %lor.lhs.false7.cleanup40_crit_edge

lor.lhs.false7.cleanup40_crit_edge:               ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.end11:                                         ; preds = %lor.lhs.false7
  %8 = call ptr @memcpy(ptr %secy, ptr %add.ptr.i.i, i32 64)
  %call15 = tail call fastcc i32 @macsec_changelink_common(ptr noundef %dev, ptr noundef nonnull %data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.end11.cleanup40_crit_edge

if.end11.cleanup40_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.end18:                                         ; preds = %if.end11
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %9 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %10, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then20, label %if.end18.cleanup40_crit_edge

if.end18.cleanup40_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup40

if.then20:                                        ; preds = %if.end18
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %11 = call ptr @memset(ptr %ctx, i32 255, i32 160)
  %call23 = call fastcc ptr @macsec_get_ops(ptr noundef %add.ptr.i.i, ptr noundef nonnull %ctx)
  %tobool24.not = icmp eq ptr %call23, null
  br i1 %tobool24.not, label %if.then20.cleanup36_crit_edge, label %if.end26

if.then20.cleanup36_crit_edge:                    ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup36

if.end26:                                         ; preds = %if.then20
  %secy28 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %12 = ptrtoint ptr %secy28 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %add.ptr.i.i, ptr %secy28, align 4
  %mdo_upd_secy = getelementptr inbounds %struct.macsec_ops, ptr %call23, i32 0, i32 3
  %13 = ptrtoint ptr %mdo_upd_secy to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mdo_upd_secy, align 4
  %call29 = call fastcc i32 @macsec_offload(ptr noundef %14, ptr noundef nonnull %ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %cleanup, label %if.end26.cleanup36_crit_edge

if.end26.cleanup36_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup36

cleanup:                                          ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %cleanup40

cleanup36:                                        ; preds = %if.end26.cleanup36_crit_edge, %if.then20.cleanup36_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  %15 = call ptr @memcpy(ptr %add.ptr.i.i, ptr %secy, i32 64)
  br label %cleanup40

cleanup40:                                        ; preds = %cleanup36, %cleanup, %if.end18.cleanup40_crit_edge, %if.end11.cleanup40_crit_edge, %lor.lhs.false7.cleanup40_crit_edge, %lor.lhs.false4.cleanup40_crit_edge, %lor.lhs.false.cleanup40_crit_edge, %if.end.cleanup40_crit_edge, %entry.cleanup40_crit_edge
  %retval.0 = phi i32 [ 0, %cleanup36 ], [ 0, %entry.cleanup40_crit_edge ], [ -22, %lor.lhs.false7.cleanup40_crit_edge ], [ -22, %lor.lhs.false4.cleanup40_crit_edge ], [ -22, %lor.lhs.false.cleanup40_crit_edge ], [ -22, %if.end.cleanup40_crit_edge ], [ %call15, %if.end11.cleanup40_crit_edge ], [ 0, %cleanup ], [ 0, %if.end18.cleanup40_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %secy)
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_dellink(ptr noundef %dev, ptr noundef %head) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  %call.i = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call.i, label %entry.macsec_data_rtnl.exit_crit_edge, label %land.lhs.true.i

entry.macsec_data_rtnl.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.macsec_data_rtnl.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.macsec_data_rtnl.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @macsec_data_rtnl.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge, label %if.then.i

land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rtnl.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 136, ptr noundef nonnull @.str.4) #18
  br label %macsec_data_rtnl.exit

macsec_data_rtnl.exit:                            ; preds = %if.then.i, %land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge, %land.lhs.true.i.macsec_data_rtnl.exit_crit_edge, %entry.macsec_data_rtnl.exit_crit_edge
  %rx_handler_data.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 95
  %2 = ptrtoint ptr %rx_handler_data.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rx_handler_data.i, align 4
  tail call fastcc void @macsec_common_dellink(ptr noundef %dev, ptr noundef %head)
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %3, align 4
  %cmp.i.not = icmp eq ptr %5, %3
  br i1 %cmp.i.not, label %if.then, label %macsec_data_rtnl.exit.if.end_crit_edge

macsec_data_rtnl.exit.if.end_crit_edge:           ; preds = %macsec_data_rtnl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %macsec_data_rtnl.exit
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @netdev_rx_handler_unregister(ptr noundef %1) #18
  tail call void @kfree(ptr noundef %3) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %macsec_data_rtnl.exit.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @macsec_get_size(ptr nocapture noundef readnone %dev) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 104
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_fill_info(ptr noundef %skb, ptr nocapture noundef readonly %dev) #0 align 64 {
entry:
  %tmp.i107 = alloca i32, align 4
  %tmp.i105 = alloca i8, align 1
  %tmp.i103 = alloca i8, align 1
  %tmp.i101 = alloca i8, align 1
  %tmp.i99 = alloca i8, align 1
  %tmp.i97 = alloca i8, align 1
  %tmp.i95 = alloca i8, align 1
  %tmp.i93 = alloca i8, align 1
  %tmp.i91 = alloca i8, align 1
  %tmp.i89 = alloca i64, align 8
  %tmp.i = alloca i8, align 1
  %tmp.i.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %key_len = getelementptr i8, ptr %dev, i32 2320
  %0 = ptrtoint ptr %key_len to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %key_len, align 8
  %2 = zext i16 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.69)
  switch i16 %1, label %entry.nla_put_failure_crit_edge [
    i16 16, label %sw.bb
    i16 32, label %sw.bb4
  ]

entry.nla_put_failure_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %xpn = getelementptr i8, ptr %dev, i32 2328
  %3 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  %cond = select i1 %tobool.not, i64 36030996058996737, i64 36242102291529731
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %xpn5 = getelementptr i8, ptr %dev, i32 2328
  %5 = ptrtoint ptr %xpn5 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %xpn5, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool6.not = icmp eq i8 %6, 0
  %cond8 = select i1 %tobool6.not, i64 36242102291529730, i64 36242102291529732
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb
  %csid.0 = phi i64 [ %cond8, %sw.bb4 ], [ %cond, %sw.bb ]
  %sci = getelementptr i8, ptr %dev, i32 2312
  %7 = ptrtoint ptr %sci to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %sci, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i) #18
  %9 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %tmp.i.i, align 8
  %call.i.i = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 1, i32 noundef 8, ptr noundef nonnull %tmp.i.i, i32 noundef 14) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool10.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool10.not, label %lor.lhs.false, label %sw.epilog.nla_put_failure_crit_edge

sw.epilog.nla_put_failure_crit_edge:              ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false:                                    ; preds = %sw.epilog
  %icv_len = getelementptr i8, ptr %dev, i32 2322
  %10 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %icv_len, align 2
  %conv11 = trunc i16 %11 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i) #18
  %12 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %conv11, ptr %tmp.i, align 1
  %call.i = call i32 @nla_put(ptr noundef %skb, i32 noundef 3, i32 noundef 1, ptr noundef nonnull %tmp.i) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool13.not = icmp eq i32 %call.i, 0
  br i1 %tobool13.not, label %lor.lhs.false14, label %lor.lhs.false.nla_put_failure_crit_edge

lor.lhs.false.nla_put_failure_crit_edge:          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i89) #18
  %13 = ptrtoint ptr %tmp.i89 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %csid.0, ptr %tmp.i89, align 8
  %call.i90 = call i32 @nla_put_64bit(ptr noundef %skb, i32 noundef 4, i32 noundef 8, ptr noundef nonnull %tmp.i89, i32 noundef 14) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i89) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i90)
  %tobool16.not = icmp eq i32 %call.i90, 0
  br i1 %tobool16.not, label %lor.lhs.false17, label %lor.lhs.false14.nla_put_failure_crit_edge

lor.lhs.false14.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %encoding_sa = getelementptr i8, ptr %dev, i32 2337
  %14 = ptrtoint ptr %encoding_sa to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %encoding_sa, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i91) #18
  %16 = ptrtoint ptr %tmp.i91 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %15, ptr %tmp.i91, align 1
  %call.i92 = call i32 @nla_put(ptr noundef %skb, i32 noundef 6, i32 noundef 1, ptr noundef nonnull %tmp.i91) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i91) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i92)
  %tobool19.not = icmp eq i32 %call.i92, 0
  br i1 %tobool19.not, label %lor.lhs.false20, label %lor.lhs.false17.nla_put_failure_crit_edge

lor.lhs.false17.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false17
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false20:                                  ; preds = %lor.lhs.false17
  %encrypt = getelementptr i8, ptr %dev, i32 2338
  %17 = ptrtoint ptr %encrypt to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %encrypt, align 2, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i93) #18
  %19 = ptrtoint ptr %tmp.i93 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %18, ptr %tmp.i93, align 1
  %call.i94 = call i32 @nla_put(ptr noundef %skb, i32 noundef 7, i32 noundef 1, ptr noundef nonnull %tmp.i93) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i93) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i94)
  %tobool24.not = icmp eq i32 %call.i94, 0
  br i1 %tobool24.not, label %lor.lhs.false25, label %lor.lhs.false20.nla_put_failure_crit_edge

lor.lhs.false20.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false20
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false25:                                  ; preds = %lor.lhs.false20
  %protect_frames = getelementptr i8, ptr %dev, i32 2330
  %20 = ptrtoint ptr %protect_frames to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %protect_frames, align 2, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i95) #18
  %22 = ptrtoint ptr %tmp.i95 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %21, ptr %tmp.i95, align 1
  %call.i96 = call i32 @nla_put(ptr noundef %skb, i32 noundef 8, i32 noundef 1, ptr noundef nonnull %tmp.i95) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i95) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i96)
  %tobool29.not = icmp eq i32 %call.i96, 0
  br i1 %tobool29.not, label %lor.lhs.false30, label %lor.lhs.false25.nla_put_failure_crit_edge

lor.lhs.false25.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false25
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false30:                                  ; preds = %lor.lhs.false25
  %send_sci = getelementptr i8, ptr %dev, i32 2339
  %23 = ptrtoint ptr %send_sci to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %send_sci, align 1, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i97) #18
  %25 = ptrtoint ptr %tmp.i97 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %24, ptr %tmp.i97, align 1
  %call.i98 = call i32 @nla_put(ptr noundef %skb, i32 noundef 9, i32 noundef 1, ptr noundef nonnull %tmp.i97) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i97) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i98)
  %tobool34.not = icmp eq i32 %call.i98, 0
  br i1 %tobool34.not, label %lor.lhs.false35, label %lor.lhs.false30.nla_put_failure_crit_edge

lor.lhs.false30.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false35:                                  ; preds = %lor.lhs.false30
  %end_station = getelementptr i8, ptr %dev, i32 2340
  %26 = ptrtoint ptr %end_station to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %end_station, align 4, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i99) #18
  %28 = ptrtoint ptr %tmp.i99 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %27, ptr %tmp.i99, align 1
  %call.i100 = call i32 @nla_put(ptr noundef %skb, i32 noundef 10, i32 noundef 1, ptr noundef nonnull %tmp.i99) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i99) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i100)
  %tobool39.not = icmp eq i32 %call.i100, 0
  br i1 %tobool39.not, label %lor.lhs.false40, label %lor.lhs.false35.nla_put_failure_crit_edge

lor.lhs.false35.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false40:                                  ; preds = %lor.lhs.false35
  %scb = getelementptr i8, ptr %dev, i32 2341
  %29 = ptrtoint ptr %scb to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %scb, align 1, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i101) #18
  %31 = ptrtoint ptr %tmp.i101 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %30, ptr %tmp.i101, align 1
  %call.i102 = call i32 @nla_put(ptr noundef %skb, i32 noundef 11, i32 noundef 1, ptr noundef nonnull %tmp.i101) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i101) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i102)
  %tobool44.not = icmp eq i32 %call.i102, 0
  br i1 %tobool44.not, label %lor.lhs.false45, label %lor.lhs.false40.nla_put_failure_crit_edge

lor.lhs.false40.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false40
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false45:                                  ; preds = %lor.lhs.false40
  %replay_protect = getelementptr i8, ptr %dev, i32 2331
  %32 = ptrtoint ptr %replay_protect to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %replay_protect, align 1, !range !198
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i103) #18
  %34 = ptrtoint ptr %tmp.i103 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %33, ptr %tmp.i103, align 1
  %call.i104 = call i32 @nla_put(ptr noundef %skb, i32 noundef 12, i32 noundef 1, ptr noundef nonnull %tmp.i103) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i103) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i104)
  %tobool49.not = icmp eq i32 %call.i104, 0
  br i1 %tobool49.not, label %lor.lhs.false50, label %lor.lhs.false45.nla_put_failure_crit_edge

lor.lhs.false45.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false45
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

lor.lhs.false50:                                  ; preds = %lor.lhs.false45
  %validate_frames = getelementptr i8, ptr %dev, i32 2324
  %35 = ptrtoint ptr %validate_frames to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %validate_frames, align 4
  %conv51 = trunc i32 %36 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp.i105) #18
  %37 = ptrtoint ptr %tmp.i105 to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %conv51, ptr %tmp.i105, align 1
  %call.i106 = call i32 @nla_put(ptr noundef %skb, i32 noundef 13, i32 noundef 1, ptr noundef nonnull %tmp.i105) #18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp.i105) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i106)
  %tobool53.not = icmp eq i32 %call.i106, 0
  br i1 %tobool53.not, label %if.end, label %lor.lhs.false50.nla_put_failure_crit_edge

lor.lhs.false50.nla_put_failure_crit_edge:        ; preds = %lor.lhs.false50
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

if.end:                                           ; preds = %lor.lhs.false50
  %38 = ptrtoint ptr %replay_protect to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %replay_protect, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool55.not = icmp eq i8 %39, 0
  br i1 %tobool55.not, label %if.end.cleanup_crit_edge, label %if.then56

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then56:                                        ; preds = %if.end
  %replay_window = getelementptr i8, ptr %dev, i32 2332
  %40 = ptrtoint ptr %replay_window to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %replay_window, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i107) #18
  %42 = ptrtoint ptr %tmp.i107 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %tmp.i107, align 4
  %call.i108 = call i32 @nla_put(ptr noundef %skb, i32 noundef 5, i32 noundef 4, ptr noundef nonnull %tmp.i107) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i107) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i108)
  %tobool58.not = icmp eq i32 %call.i108, 0
  br i1 %tobool58.not, label %if.then56.cleanup_crit_edge, label %if.then56.nla_put_failure_crit_edge

if.then56.nla_put_failure_crit_edge:              ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #20
  br label %nla_put_failure

if.then56.cleanup_crit_edge:                      ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

nla_put_failure:                                  ; preds = %if.then56.nla_put_failure_crit_edge, %lor.lhs.false50.nla_put_failure_crit_edge, %lor.lhs.false45.nla_put_failure_crit_edge, %lor.lhs.false40.nla_put_failure_crit_edge, %lor.lhs.false35.nla_put_failure_crit_edge, %lor.lhs.false30.nla_put_failure_crit_edge, %lor.lhs.false25.nla_put_failure_crit_edge, %lor.lhs.false20.nla_put_failure_crit_edge, %lor.lhs.false17.nla_put_failure_crit_edge, %lor.lhs.false14.nla_put_failure_crit_edge, %lor.lhs.false.nla_put_failure_crit_edge, %sw.epilog.nla_put_failure_crit_edge, %entry.nla_put_failure_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %nla_put_failure, %if.then56.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ -90, %nla_put_failure ], [ 0, %if.then56.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @macsec_get_link_net(ptr nocapture noundef readonly %dev) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %real_dev = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev, align 8
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 127
  %2 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nd_net.i, align 4
  ret ptr %3
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ether_setup(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_free_netdev(ptr nocapture noundef readonly %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %stats = getelementptr i8, ptr %dev, i32 2372
  %0 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stats, align 4
  tail call void @free_percpu(ptr noundef %1) #18
  %stats1 = getelementptr i8, ptr %dev, i32 2360
  %2 = ptrtoint ptr %stats1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stats1, align 8
  tail call void @free_percpu(ptr noundef %3) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_dev_init(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  %call2 = tail call noalias ptr @__alloc_percpu_gfp(i32 noundef 64, i32 noundef 32, i32 noundef 3264) #23
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.end.thread, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %call375 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call375, i32 %2)
  %cmp76 = icmp ult i32 %call375, %2
  br i1 %cmp76, label %for.body.lr.ph, label %for.cond.preheader.if.end11_crit_edge

for.cond.preheader.if.end11_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end11

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %3 = ptrtoint ptr %call2 to i32
  br label %for.body

if.end.thread:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %4 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 130
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %4, align 64
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %call377 = phi i32 [ %call375, %for.body.lr.ph ], [ %call3, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call377
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %add = add i32 %7, %3
  %8 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %8, i32 0, i32 4
  %dep_map.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %8, i32 0, i32 4, i32 0, i32 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef nonnull @.str.10, ptr noundef nonnull @macsec_dev_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  %9 = ptrtoint ptr %syncp to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %syncp, align 4
  %call3 = tail call i32 @cpumask_next(i32 noundef %call377, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %10 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call3, %10
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.if.end11_crit_edge

for.body.if.end11_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end11

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

if.end11:                                         ; preds = %for.body.if.end11_crit_edge, %for.cond.preheader.if.end11_crit_edge
  %11 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 130
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call2, ptr %11, align 64
  %gro_cells = getelementptr i8, ptr %dev, i32 2384
  %call12 = tail call i32 @gro_cells_init(ptr noundef %gro_cells, ptr noundef %dev) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  %13 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %11, align 64
  tail call void @free_percpu(ptr noundef %14) #18
  br label %cleanup

if.end15:                                         ; preds = %if.end11
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %15 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %16, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  %features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 23
  %17 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %features, align 16
  br i1 %switch.i, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  %and = and i64 %18, -288476666756334465
  br label %if.end23

if.else:                                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  %and20 = and i64 %18, 97
  %or = or i64 %and20, 26845450240
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then17
  %or.sink = phi i64 [ %and, %if.then17 ], [ %or, %if.else ]
  %19 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %or.sink, ptr %19, align 16
  %needed_headroom = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 21
  %21 = ptrtoint ptr %needed_headroom to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %needed_headroom, align 8
  %conv26 = add i16 %22, 16
  %needed_headroom27 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 21
  %23 = ptrtoint ptr %needed_headroom27 to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %conv26, ptr %needed_headroom27, align 8
  %needed_tailroom = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 22
  %24 = ptrtoint ptr %needed_tailroom to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %needed_tailroom, align 2
  %add29 = add i16 %25, 16
  %needed_tailroom31 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 22
  %26 = ptrtoint ptr %needed_tailroom31 to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %add29, ptr %needed_tailroom31, align 2
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %27 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %dev_addr, align 64
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  %add.ptr.i = getelementptr i8, ptr %28, i32 4
  %31 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %add.ptr.i, align 2
  %conv.i = zext i16 %32 to i32
  %or.i = or i32 %30, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i = icmp eq i32 %or.i, 0
  br i1 %cmp.i, label %if.then33, label %if.end23.if.end34_crit_edge

if.end23.if.end34_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end34

if.then33:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #20
  %addr_assign_type.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 55
  %33 = ptrtoint ptr %addr_assign_type.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %addr_assign_type.i, align 4
  %addr_assign_type1.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 55
  %35 = ptrtoint ptr %addr_assign_type1.i to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %34, ptr %addr_assign_type1.i, align 4
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 86
  %36 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev_addr.i, align 64
  tail call void @dev_addr_mod(ptr noundef %dev, i32 noundef 0, ptr noundef %37, i32 noundef 6) #18
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %if.end23.if.end34_crit_edge
  %broadcast = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 99
  %38 = ptrtoint ptr %broadcast to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %broadcast, align 4
  %add.ptr.i71 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 99, i32 4
  %40 = ptrtoint ptr %add.ptr.i71 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %add.ptr.i71, align 2
  %conv.i72 = zext i16 %41 to i32
  %or.i73 = or i32 %39, %conv.i72
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i73)
  %cmp.i74 = icmp eq i32 %or.i73, 0
  br i1 %cmp.i74, label %if.then36, label %if.end34.cleanup_crit_edge

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then36:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #20
  %broadcast39 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 99
  %addr_len = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 56
  %42 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %addr_len, align 1
  %conv41 = zext i8 %43 to i32
  %44 = call ptr @memcpy(ptr %broadcast, ptr %broadcast39, i32 %conv41)
  br label %cleanup

cleanup:                                          ; preds = %if.then36, %if.end34.cleanup_crit_edge, %if.then14, %if.end.thread
  %retval.0 = phi i32 [ %call12, %if.then14 ], [ 0, %if.then36 ], [ 0, %if.end34.cleanup_crit_edge ], [ -12, %if.end.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_dev_uninit(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %gro_cells = getelementptr i8, ptr %dev, i32 2384
  tail call void @gro_cells_destroy(ptr noundef %gro_cells) #18
  %0 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 130
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 64
  tail call void @free_percpu(ptr noundef %2) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_dev_open(ptr noundef %dev) #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %2 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_addr, align 64
  %call2 = tail call i32 @dev_uc_add(ptr noundef %1, ptr noundef %3) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %entry.cleanup43_crit_edge, label %if.end

entry.cleanup43_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 8
  %and = and i32 %5, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.if.end8_crit_edge, label %if.then3

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @dev_set_allmulti(ptr noundef %1, i32 noundef 1) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.then3.del_unicast_crit_edge, label %if.then3.if.end8_crit_edge

if.then3.if.end8_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then3.del_unicast_crit_edge:                   ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #20
  br label %del_unicast

if.end8:                                          ; preds = %if.then3.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 8
  %and10 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.end8.if.end17_crit_edge, label %if.then12

if.end8.if.end17_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end17

if.then12:                                        ; preds = %if.end8
  %call13 = tail call i32 @dev_set_promiscuity(ptr noundef %1, i32 noundef 1) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %if.then12.clear_allmulti_crit_edge, label %if.then12.if.end17_crit_edge

if.then12.if.end17_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end17

if.then12.clear_allmulti_crit_edge:               ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #20
  br label %clear_allmulti

if.end17:                                         ; preds = %if.then12.if.end17_crit_edge, %if.end8.if.end17_crit_edge
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %8 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %9, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then19, label %if.end17.if.end31_crit_edge

if.end17.if.end31_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end31

if.then19:                                        ; preds = %if.end17
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then19.cleanup.thread_crit_edge, label %lor.lhs.false.i.i

if.then19.cleanup.thread_crit_edge:               ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

lor.lhs.false.i.i:                                ; preds = %if.then19
  %10 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %real_dev1, align 8
  %tobool1.not.i.i = icmp eq ptr %11, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.cleanup.thread_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.cleanup.thread_crit_edge:       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %12 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.70)
  switch i32 %9, label %if.end.i.i.cleanup.thread_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.cleanup.thread_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 145
  %13 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %14, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.cleanup.thread_crit_edge, label %land.rhs.i.i

if.then2.i.i.cleanup.thread_crit_edge:            ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %14, i32 0, i32 42
  %15 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %16, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.cleanup.thread_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.cleanup.thread_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 23
  %17 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %18, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.cleanup.thread_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.cleanup.thread_crit_edge:            ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 151
  %19 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %20, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.cleanup.thread_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.cleanup.thread_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %14, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %11, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %21 = getelementptr inbounds i8, ptr %ctx, i32 12
  %22 = call ptr @memset(ptr %21, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %23 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %9, ptr %offload1.i.i, align 4
  %24 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %storemerge, ptr %ctx, align 4
  %25 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool22.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool22.not, label %macsec_get_ops.exit.cleanup.thread_crit_edge, label %if.end24

macsec_get_ops.exit.cleanup.thread_crit_edge:     ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

if.end24:                                         ; preds = %macsec_get_ops.exit
  %secy25 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %26 = ptrtoint ptr %secy25 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %add.ptr.i.i, ptr %secy25, align 4
  %27 = ptrtoint ptr %retval.0.i12.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %retval.0.i12.i, align 4
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %if.end24.cleanup_crit_edge, label %if.end.i69, !prof !203

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.i69:                                       ; preds = %if.end24
  %offload.i68 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %29 = ptrtoint ptr %offload.i68 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %offload.i68, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp.i = icmp eq i32 %30, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i69.if.end5.i_crit_edge

if.end.i69.if.end5.i_crit_edge:                   ; preds = %if.end.i69
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i69
  call void @__sanitizer_cov_trace_pc() #20
  %31 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %32, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i69.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %33 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %28(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %34 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %28(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %ret.0.i = phi i32 [ %call.i, %if.end5.i.phy_unlock.i_crit_edge ], [ %call13.i, %do.end.i ], [ 0, %if.end8.i.phy_unlock.i_crit_edge ]
  %35 = ptrtoint ptr %offload.i68 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %offload.i68, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %36)
  %cmp45.i = icmp eq i32 %36, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.macsec_offload.exit_crit_edge

phy_unlock.i.macsec_offload.exit_crit_edge:       ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_offload.exit

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %37 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %38, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %macsec_offload.exit

macsec_offload.exit:                              ; preds = %if.then46.i, %phy_unlock.i.macsec_offload.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool27.not = icmp eq i32 %ret.0.i, 0
  br i1 %tobool27.not, label %macsec_offload.exit.cleanup_crit_edge, label %macsec_offload.exit.cleanup.thread_crit_edge

macsec_offload.exit.cleanup.thread_crit_edge:     ; preds = %macsec_offload.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.thread

macsec_offload.exit.cleanup_crit_edge:            ; preds = %macsec_offload.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

cleanup.thread:                                   ; preds = %macsec_offload.exit.cleanup.thread_crit_edge, %macsec_get_ops.exit.cleanup.thread_crit_edge, %macsec_check_offload.exit.i.cleanup.thread_crit_edge, %if.then9.i.i.cleanup.thread_crit_edge, %land.rhs.i.i.cleanup.thread_crit_edge, %if.then2.i.i.cleanup.thread_crit_edge, %if.end.i.i.cleanup.thread_crit_edge, %lor.lhs.false.i.i.cleanup.thread_crit_edge, %if.then19.cleanup.thread_crit_edge
  %err.0.ph = phi i32 [ %ret.0.i, %macsec_offload.exit.cleanup.thread_crit_edge ], [ -95, %macsec_get_ops.exit.cleanup.thread_crit_edge ], [ -95, %macsec_check_offload.exit.i.cleanup.thread_crit_edge ], [ -95, %land.rhs.i.i.cleanup.thread_crit_edge ], [ -95, %lor.lhs.false.i.i.cleanup.thread_crit_edge ], [ -95, %if.then19.cleanup.thread_crit_edge ], [ -95, %if.then2.i.i.cleanup.thread_crit_edge ], [ -95, %if.then9.i.i.cleanup.thread_crit_edge ], [ -95, %if.end.i.i.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %clear_allmulti

cleanup:                                          ; preds = %macsec_offload.exit.cleanup_crit_edge, %if.end24.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end31

if.end31:                                         ; preds = %cleanup, %if.end17.if.end31_crit_edge
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %39 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %state.i, align 4
  %41 = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i71 = icmp eq i32 %41, 0
  br i1 %tobool.not.i71, label %if.then33, label %if.end31.cleanup43_crit_edge

if.end31.cleanup43_crit_edge:                     ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup43

if.then33:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  call void @netif_carrier_on(ptr noundef %dev) #18
  br label %cleanup43

clear_allmulti:                                   ; preds = %cleanup.thread, %if.then12.clear_allmulti_crit_edge
  %err.1 = phi i32 [ %call13, %if.then12.clear_allmulti_crit_edge ], [ %err.0.ph, %cleanup.thread ]
  %42 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags, align 8
  %and36 = and i32 %43, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %clear_allmulti.del_unicast_crit_edge, label %if.then38

clear_allmulti.del_unicast_crit_edge:             ; preds = %clear_allmulti
  call void @__sanitizer_cov_trace_pc() #20
  br label %del_unicast

if.then38:                                        ; preds = %clear_allmulti
  call void @__sanitizer_cov_trace_pc() #20
  %call39 = call i32 @dev_set_allmulti(ptr noundef %1, i32 noundef -1) #18
  br label %del_unicast

del_unicast:                                      ; preds = %if.then38, %clear_allmulti.del_unicast_crit_edge, %if.then3.del_unicast_crit_edge
  %err.2 = phi i32 [ %call4, %if.then3.del_unicast_crit_edge ], [ %err.1, %if.then38 ], [ %err.1, %clear_allmulti.del_unicast_crit_edge ]
  %44 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %dev_addr, align 64
  %call42 = call i32 @dev_uc_del(ptr noundef %1, ptr noundef %45) #18
  call void @netif_carrier_off(ptr noundef %dev) #18
  br label %cleanup43

cleanup43:                                        ; preds = %del_unicast, %if.then33, %if.end31.cleanup43_crit_edge, %entry.cleanup43_crit_edge
  %retval.0 = phi i32 [ %err.2, %del_unicast ], [ %call2, %entry.cleanup43_crit_edge ], [ 0, %if.then33 ], [ 0, %if.end31.cleanup43_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_dev_stop(ptr noundef %dev) #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  tail call void @netif_carrier_off(ptr noundef %dev) #18
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %2 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %3, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then, label %entry.if.end7_crit_edge

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end7

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then.if.end_crit_edge, label %lor.lhs.false.i.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

lor.lhs.false.i.i:                                ; preds = %if.then
  %4 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %real_dev1, align 8
  %tobool1.not.i.i = icmp eq ptr %5, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.if.end_crit_edge:               ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %6 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.71)
  switch i32 %3, label %if.end.i.i.if.end_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 145
  %7 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %8, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.if.end_crit_edge, label %land.rhs.i.i

if.then2.i.i.if.end_crit_edge:                    ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %8, i32 0, i32 42
  %9 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %10, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.if.end_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 23
  %11 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %12, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.if.end_crit_edge:                    ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 151
  %13 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %14, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.if.end_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.if.end_crit_edge:     ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %8, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %5, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %15 = getelementptr inbounds i8, ptr %ctx, i32 12
  %16 = call ptr @memset(ptr %15, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %17 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %3, ptr %offload1.i.i, align 4
  %18 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %storemerge, ptr %ctx, align 4
  %19 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool.not, label %macsec_get_ops.exit.if.end_crit_edge, label %if.then4

macsec_get_ops.exit.if.end_crit_edge:             ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then4:                                         ; preds = %macsec_get_ops.exit
  %secy5 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %20 = ptrtoint ptr %secy5 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %add.ptr.i.i, ptr %secy5, align 4
  %mdo_dev_stop = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 1
  %21 = ptrtoint ptr %mdo_dev_stop to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mdo_dev_stop, align 4
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %if.then4.if.end_crit_edge, label %if.end.i35, !prof !203

if.then4.if.end_crit_edge:                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i35:                                       ; preds = %if.then4
  %offload.i34 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %23 = ptrtoint ptr %offload.i34 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %offload.i34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp.i = icmp eq i32 %24, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i35.if.end5.i_crit_edge

if.end.i35.if.end5.i_crit_edge:                   ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #20
  %25 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %26, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i35.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %27 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %22(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %28 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %22(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %29 = ptrtoint ptr %offload.i34 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %offload.i34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp45.i = icmp eq i32 %30, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.if.end_crit_edge

phy_unlock.i.if.end_crit_edge:                    ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %31 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %32, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %if.end

if.end:                                           ; preds = %if.then46.i, %phy_unlock.i.if.end_crit_edge, %if.then4.if.end_crit_edge, %macsec_get_ops.exit.if.end_crit_edge, %macsec_check_offload.exit.i.if.end_crit_edge, %if.then9.i.i.if.end_crit_edge, %land.rhs.i.i.if.end_crit_edge, %if.then2.i.i.if.end_crit_edge, %if.end.i.i.if.end_crit_edge, %lor.lhs.false.i.i.if.end_crit_edge, %if.then.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end7

if.end7:                                          ; preds = %if.end, %entry.if.end7_crit_edge
  call void @dev_mc_unsync(ptr noundef %1, ptr noundef %dev) #18
  call void @dev_uc_unsync(ptr noundef %1, ptr noundef %dev) #18
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %33 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags, align 8
  %and = and i32 %34, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %if.end7.if.end11_crit_edge, label %if.then9

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end11

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  %call10 = call i32 @dev_set_allmulti(ptr noundef %1, i32 noundef -1) #18
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7.if.end11_crit_edge
  %35 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %flags, align 8
  %and13 = and i32 %36, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14.not = icmp eq i32 %and13, 0
  br i1 %tobool14.not, label %if.end11.if.end17_crit_edge, label %if.then15

if.end11.if.end17_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end17

if.then15:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  %call16 = call i32 @dev_set_promiscuity(ptr noundef %1, i32 noundef -1) #18
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end11.if.end17_crit_edge
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %37 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dev_addr, align 64
  %call18 = call i32 @dev_uc_del(ptr noundef %1, ptr noundef %38) #18
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_start_xmit(ptr noundef %skb, ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %0 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %real_dev = getelementptr i8, ptr %dev, i32 2368
  %2 = ptrtoint ptr %real_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %real_dev, align 8
  %4 = getelementptr inbounds %struct.anon.0, ptr %skb, i32 0, i32 2
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %3, ptr %4, align 8
  %call4 = tail call i32 @dev_queue_xmit(ptr noundef %skb) #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %protect_frames = getelementptr i8, ptr %dev, i32 2330
  %6 = ptrtoint ptr %protect_frames to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %protect_frames, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %do.body, label %if.end13

do.body:                                          ; preds = %if.end
  %stats = getelementptr i8, ptr %dev, i32 2372
  %8 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %stats, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %10
  %17 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_secy_stats, ptr %17, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp)
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %17, align 8
  %inc = add i64 %19, 1
  store i64 %inc, ptr %17, align 8
  %dep_map.i.i = getelementptr inbounds %struct.pcpu_secy_stats, ptr %17, i32 0, i32 1, i32 0, i32 1
  %20 = tail call ptr @llvm.returnaddress(i32 0) #18
  %21 = ptrtoint ptr %20 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %21) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %22 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %23, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  %real_dev10 = getelementptr i8, ptr %dev, i32 2368
  %24 = ptrtoint ptr %real_dev10 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %real_dev10, align 8
  %26 = getelementptr inbounds %struct.anon.0, ptr %skb, i32 0, i32 2
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %25, ptr %26, align 8
  %len11 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %28 = ptrtoint ptr %len11 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %len11, align 4
  %call12 = tail call i32 @dev_queue_xmit(ptr noundef %skb) #18
  %30 = zext i32 %call12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.72)
  switch i32 %call12, label %do.body.cleanup_crit_edge [
    i32 2, label %do.body.if.then.i_crit_edge
    i32 0, label %do.body.if.then.i_crit_edge83
  ]

do.body.if.then.i_crit_edge83:                    ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

do.body.if.then.i_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then.i:                                        ; preds = %do.body.if.then.i_crit_edge, %do.body.if.then.i_crit_edge83
  %31 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 130
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 64
  %34 = ptrtoint ptr %33 to i32
  %35 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 3
  %37 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %38
  %39 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %40, %34
  %41 = inttoptr i32 %add.i to ptr
  %syncp.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %41, i32 0, i32 4
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp.i) #18
  %tx_packets.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %tx_packets.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %tx_packets.i, align 16
  %inc.i = add i64 %43, 1
  store i64 %inc.i, ptr %tx_packets.i, align 16
  %conv.i = sext i32 %29 to i64
  %tx_bytes.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %41, i32 0, i32 3
  %44 = ptrtoint ptr %tx_bytes.i to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %tx_bytes.i, align 8
  %add4.i = add i64 %45, %conv.i
  store i64 %add4.i, ptr %tx_bytes.i, align 8
  %dep_map.i.i.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %41, i32 0, i32 4, i32 0, i32 1
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %21) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %46 = ptrtoint ptr %syncp.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %syncp.i, align 4
  %inc.i.i.i.i = add i32 %47, 1
  store i32 %inc.i.i.i.i, ptr %syncp.i, align 4
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %operational = getelementptr i8, ptr %dev, i32 2329
  %48 = ptrtoint ptr %operational to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %operational, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool14.not = icmp eq i8 %49, 0
  br i1 %tobool14.not, label %if.then15, label %if.end18

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #18
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36, i32 7
  %50 = ptrtoint ptr %tx_dropped to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %tx_dropped, align 4
  %inc17 = add i32 %51, 1
  store i32 %inc17, ptr %tx_dropped, align 4
  br label %cleanup

if.end18:                                         ; preds = %if.end13
  %call19 = tail call fastcc ptr @macsec_encrypt(ptr noundef %skb, ptr noundef %dev)
  %cmp.i = icmp ugt ptr %call19, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then21, label %if.end28

if.then21:                                        ; preds = %if.end18
  %cmp.not = icmp eq ptr %call19, inttoptr (i32 -115 to ptr)
  br i1 %cmp.not, label %if.then21.cleanup_crit_edge, label %if.then23

if.then21.cleanup_crit_edge:                      ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then23:                                        ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #20
  %tx_dropped25 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36, i32 7
  %52 = ptrtoint ptr %tx_dropped25 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %tx_dropped25, align 4
  %inc26 = add i32 %53, 1
  store i32 %inc26, ptr %tx_dropped25, align 4
  br label %cleanup

if.end28:                                         ; preds = %if.end18
  %tx_sc = getelementptr i8, ptr %dev, i32 2336
  %54 = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 3, i32 4
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %54, align 4
  tail call fastcc void @macsec_count_tx(ptr noundef %call19, ptr noundef %tx_sc, ptr noundef %56)
  %real_dev.i = getelementptr i8, ptr %dev, i32 2368
  %57 = ptrtoint ptr %real_dev.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %real_dev.i, align 8
  %59 = getelementptr inbounds %struct.anon.0, ptr %call19, i32 0, i32 2
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %58, ptr %59, align 8
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 19
  %61 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 18
  %63 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %62 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %64 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %conv.i.i = trunc i32 %sub.ptr.sub.i.i to i16
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 15, i32 0, i32 21
  %65 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %conv.i.i, ptr %mac_header.i.i, align 2
  %conv.i.i.i = and i32 %sub.ptr.sub.i.i, 65535
  %add.ptr.i.i.i = getelementptr i8, ptr %64, i32 %conv.i.i.i
  %h_proto.i = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i.i, i32 0, i32 2
  %66 = ptrtoint ptr %h_proto.i to i32
  call void @__asan_loadN_noabort(i32 %66, i32 2)
  %67 = load i16, ptr %h_proto.i, align 1
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 15, i32 0, i32 18
  %68 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %67, ptr %protocol.i, align 8
  %len31 = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 6
  %69 = ptrtoint ptr %len31 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %len31, align 4
  %call32 = tail call i32 @dev_queue_xmit(ptr noundef %call19) #18
  %71 = zext i32 %call32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %71, ptr @__sancov_gen_cov_switch_values.73)
  switch i32 %call32, label %if.end28.cleanup_crit_edge [
    i32 2, label %if.end28.if.then.i81_crit_edge
    i32 0, label %if.end28.if.then.i81_crit_edge84
  ]

if.end28.if.then.i81_crit_edge84:                 ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i81

if.end28.if.then.i81_crit_edge:                   ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i81

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then.i81:                                      ; preds = %if.end28.if.then.i81_crit_edge, %if.end28.if.then.i81_crit_edge84
  %72 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 130
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %72, align 64
  %75 = ptrtoint ptr %74 to i32
  %76 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i69 = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i69 to ptr
  %cpu.i70 = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 3
  %78 = ptrtoint ptr %cpu.i70 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %cpu.i70, align 4
  %arrayidx.i71 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %79
  %80 = ptrtoint ptr %arrayidx.i71 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %arrayidx.i71, align 4
  %add.i72 = add i32 %81, %75
  %82 = inttoptr i32 %add.i72 to ptr
  %syncp.i73 = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %82, i32 0, i32 4
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp.i73) #18
  %tx_packets.i74 = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %82, i32 0, i32 2
  %83 = ptrtoint ptr %tx_packets.i74 to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %tx_packets.i74, align 16
  %inc.i75 = add i64 %84, 1
  store i64 %inc.i75, ptr %tx_packets.i74, align 16
  %conv.i76 = sext i32 %70 to i64
  %tx_bytes.i77 = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %82, i32 0, i32 3
  %85 = ptrtoint ptr %tx_bytes.i77 to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %tx_bytes.i77, align 8
  %add4.i78 = add i64 %86, %conv.i76
  store i64 %add4.i78, ptr %tx_bytes.i77, align 8
  %dep_map.i.i.i79 = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %82, i32 0, i32 4, i32 0, i32 1
  %87 = tail call ptr @llvm.returnaddress(i32 0) #18
  %88 = ptrtoint ptr %87 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i.i79, i32 noundef %88) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %89 = ptrtoint ptr %syncp.i73 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %syncp.i73, align 4
  %inc.i.i.i.i80 = add i32 %90, 1
  store i32 %inc.i.i.i.i80, ptr %syncp.i73, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then.i81, %if.end28.cleanup_crit_edge, %if.then23, %if.then21.cleanup_crit_edge, %if.then15, %if.then.i, %do.body.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %call4, %if.then ], [ 0, %if.then15 ], [ 0, %if.then23 ], [ 0, %if.then21.cleanup_crit_edge ], [ %call12, %do.body.cleanup_crit_edge ], [ %call12, %if.then.i ], [ %call32, %if.end28.cleanup_crit_edge ], [ %call32, %if.then.i81 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_dev_change_rx_flags(ptr nocapture noundef readonly %dev, i32 noundef %change) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 8
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %and2 = and i32 %change, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.end.if.end9_crit_edge, label %if.then4

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end9

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %and6 = and i32 %3, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %cond = select i1 %tobool7.not, i32 -1, i32 1
  %call8 = tail call i32 @dev_set_allmulti(ptr noundef %1, i32 noundef %cond) #18
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %if.end.if.end9_crit_edge
  %and10 = and i32 %change, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.end9.cleanup_crit_edge, label %if.then12

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 8
  %and14 = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  %cond16 = select i1 %tobool15.not, i32 -1, i32 1
  %call17 = tail call i32 @dev_set_promiscuity(ptr noundef %1, i32 noundef %cond16) #18
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %if.end9.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_dev_set_rx_mode(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  %call2 = tail call i32 @dev_mc_sync(ptr noundef %1, ptr noundef %dev) #18
  %call3 = tail call i32 @dev_uc_sync(ptr noundef %1, ptr noundef %dev) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_set_mac_address(ptr noundef %dev, ptr noundef %p) #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  %sa_data = getelementptr inbounds %struct.sockaddr, ptr %p, i32 0, i32 1
  %2 = ptrtoint ptr %sa_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sa_data, align 4
  %4 = and i32 %3, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not.i = icmp eq i32 %4, 0
  br i1 %tobool.i.not.i, label %is_valid_ether_addr.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

is_valid_ether_addr.exit:                         ; preds = %entry
  %add.ptr.i.i40 = getelementptr %struct.sockaddr, ptr %p, i32 0, i32 1, i32 4
  %5 = ptrtoint ptr %add.ptr.i.i40 to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %add.ptr.i.i40, align 2
  %conv.i.i = zext i16 %6 to i32
  %or.i.i = or i32 %3, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i.not = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.i.not, label %is_valid_ether_addr.exit.cleanup_crit_edge, label %if.end

is_valid_ether_addr.exit.cleanup_crit_edge:       ; preds = %is_valid_ether_addr.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %is_valid_ether_addr.exit
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 8
  %and = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.out_crit_edge, label %if.end4

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %out

if.end4:                                          ; preds = %if.end
  %call7 = tail call i32 @dev_uc_add(ptr noundef %1, ptr noundef %sa_data) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %cmp = icmp slt i32 %call7, 0
  br i1 %cmp, label %if.end4.cleanup_crit_edge, label %if.end9

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %9 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev_addr, align 64
  %call10 = tail call i32 @dev_uc_del(ptr noundef %1, ptr noundef %10) #18
  br label %out

out:                                              ; preds = %if.end9, %if.end.out_crit_edge
  tail call void @dev_addr_mod(ptr noundef %dev, i32 noundef 0, ptr noundef %sa_data, i32 noundef 6) #18
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %11 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev_addr.i, align 64
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_loadN_noabort(i32 %13, i32 6)
  %sci.0.copyload.i.i = load i48, ptr %12, align 1
  %sci.0.insert.ext.i.i = zext i48 %sci.0.copyload.i.i to i64
  %sci.0.insert.shift.i.i = shl nuw i64 %sci.0.insert.ext.i.i, 16
  %sci.6.insert.insert.i.i = or i64 %sci.0.insert.shift.i.i, 1
  %sci = getelementptr i8, ptr %dev, i32 2312
  %14 = ptrtoint ptr %sci to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %sci.6.insert.insert.i.i, ptr %sci, align 8
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %15 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %16, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then15, label %out.cleanup_crit_edge

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then15:                                        ; preds = %out
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i.i, label %if.then15.if.end22_crit_edge, label %lor.lhs.false.i.i

if.then15.if.end22_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

lor.lhs.false.i.i:                                ; preds = %if.then15
  %17 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %real_dev1, align 8
  %tobool1.not.i.i = icmp eq ptr %18, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end22_crit_edge, label %if.end.i.i

lor.lhs.false.i.i.if.end22_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %19 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.74)
  switch i32 %16, label %if.end.i.i.if.end22_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.if.end22_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 145
  %20 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %21, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.if.end22_crit_edge, label %land.rhs.i.i

if.then2.i.i.if.end22_crit_edge:                  ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %21, i32 0, i32 42
  %22 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %23, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.if.end22_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.if.end22_crit_edge:                  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 23
  %24 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %25, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end22_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.if.end22_crit_edge:                  ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 151
  %26 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %27, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.if.end22_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.if.end22_crit_edge:   ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %21, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %18, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %28 = getelementptr inbounds i8, ptr %ctx, i32 12
  %29 = call ptr @memset(ptr %28, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %30 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %16, ptr %offload1.i.i, align 4
  %31 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %storemerge, ptr %ctx, align 4
  %32 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool17.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool17.not, label %macsec_get_ops.exit.if.end22_crit_edge, label %if.then18

macsec_get_ops.exit.if.end22_crit_edge:           ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

if.then18:                                        ; preds = %macsec_get_ops.exit
  %secy20 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %33 = ptrtoint ptr %secy20 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %add.ptr.i.i, ptr %secy20, align 4
  %mdo_upd_secy = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 3
  %34 = ptrtoint ptr %mdo_upd_secy to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mdo_upd_secy, align 4
  %tobool.not.i = icmp eq ptr %35, null
  br i1 %tobool.not.i, label %if.then18.if.end22_crit_edge, label %if.end.i43, !prof !203

if.then18.if.end22_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

if.end.i43:                                       ; preds = %if.then18
  %offload.i42 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %36 = ptrtoint ptr %offload.i42 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %offload.i42, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %37)
  %cmp.i = icmp eq i32 %37, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i43.if.end5.i_crit_edge

if.end.i43.if.end5.i_crit_edge:                   ; preds = %if.end.i43
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i43
  call void @__sanitizer_cov_trace_pc() #20
  %38 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %39, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i43.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %40 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %35(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %41 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %35(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %42 = ptrtoint ptr %offload.i42 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %offload.i42, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %43)
  %cmp45.i = icmp eq i32 %43, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.if.end22_crit_edge

phy_unlock.i.if.end22_crit_edge:                  ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %44 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %45, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %if.end22

if.end22:                                         ; preds = %if.then46.i, %phy_unlock.i.if.end22_crit_edge, %if.then18.if.end22_crit_edge, %macsec_get_ops.exit.if.end22_crit_edge, %macsec_check_offload.exit.i.if.end22_crit_edge, %if.then9.i.i.if.end22_crit_edge, %land.rhs.i.i.if.end22_crit_edge, %if.then2.i.i.if.end22_crit_edge, %if.end.i.i.if.end22_crit_edge, %lor.lhs.false.i.i.if.end22_crit_edge, %if.then15.if.end22_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %out.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %is_valid_ether_addr.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -99, %is_valid_ether_addr.exit.cleanup_crit_edge ], [ %call7, %if.end4.cleanup_crit_edge ], [ 0, %if.end22 ], [ 0, %out.cleanup_crit_edge ], [ -99, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @macsec_change_mtu(ptr nocapture noundef %dev, i32 noundef %new_mtu) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %icv_len = getelementptr i8, ptr %dev, i32 2322
  %0 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %icv_len, align 2
  %conv = zext i16 %1 to i32
  %real_dev = getelementptr i8, ptr %dev, i32 2368
  %2 = ptrtoint ptr %real_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %real_dev, align 8
  %mtu = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 20
  %4 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mtu, align 4
  %add.neg = sub nuw nsw i32 -16, %conv
  %sub = add i32 %add.neg, %5
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %new_mtu)
  %cmp = icmp ult i32 %sub, %new_mtu
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %mtu3 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %6 = ptrtoint ptr %mtu3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %new_mtu, ptr %mtu3, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -34, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_get_stats64(ptr nocapture noundef readonly %dev, ptr noundef %s) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 130
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 64
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @dev_fetch_sw_netstats(ptr noundef %s, ptr noundef nonnull %2) #18
  %rx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36, i32 6
  %3 = ptrtoint ptr %rx_dropped to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rx_dropped, align 8
  %conv = zext i32 %4 to i64
  %rx_dropped1 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %s, i32 0, i32 6
  %5 = ptrtoint ptr %rx_dropped1 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %conv, ptr %rx_dropped1, align 8
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36, i32 7
  %6 = ptrtoint ptr %tx_dropped to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tx_dropped, align 4
  %conv3 = zext i32 %7 to i64
  %tx_dropped4 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %s, i32 0, i32 7
  %8 = ptrtoint ptr %tx_dropped4 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %conv3, ptr %tx_dropped4, align 8
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @macsec_fix_features(ptr nocapture noundef readonly %dev, i64 noundef %features) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %2 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %3, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  %features3 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 23
  %4 = ptrtoint ptr %features3 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %features3, align 16
  br i1 %switch.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %and = and i64 %5, -288476666756334465
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %and5 = and i64 %5, 97
  %or6 = or i64 %and5, 26845464576
  %and7 = and i64 %or6, %features
  %or8 = or i64 %and7, 4096
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i64 [ %and, %if.then ], [ %or8, %if.end ]
  ret i64 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @macsec_get_iflink(ptr nocapture noundef readonly %dev) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %real_dev = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev, align 8
  %ifindex = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ifindex, align 4
  ret i32 %3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gro_cells_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @gro_cells_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_uc_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_allmulti(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_promiscuity(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_uc_del(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_mc_unsync(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_uc_unsync(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_queue_xmit(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @u64_stats_update_begin(ptr noundef %syncp) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %entry.__seqprop_assert.exit_crit_edge, label %land.lhs.true.i

entry.__seqprop_assert.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %__seqprop_assert.exit

land.lhs.true.i:                                  ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !218
  %5 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !219
  %14 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i7.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i7.i to ptr
  %preempt_count.i.i8.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i8.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i8.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool20.not.i = icmp eq i32 %13, 0
  br i1 %tobool20.not.i, label %land.rhs.i, label %land.lhs.true.i.__seqprop_assert.exit_crit_edge

land.lhs.true.i.__seqprop_assert.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__seqprop_assert.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %18 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp.i = icmp eq i32 %21, 0
  br i1 %cmp.i, label %land.rhs22.i, label %land.rhs.i.__seqprop_assert.exit_crit_edge

land.rhs.i.__seqprop_assert.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__seqprop_assert.exit

land.rhs22.i:                                     ; preds = %land.rhs.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i9.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %add.i11.i = add i32 %25, 1
  store volatile i32 %add.i11.i, ptr %preempt_count.i.i10.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !220
  %26 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i, align 4
  %arrayidx46.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx46.i, align 4
  %add47.i = add i32 %29, ptrtoint (ptr @hardirqs_enabled to i32)
  %30 = inttoptr i32 %add47.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !221
  %33 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i12.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i12.i to ptr
  %preempt_count.i.i13.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i13.i, align 4
  %sub.i14.i = add i32 %36, -1
  store volatile i32 %sub.i14.i, ptr %preempt_count.i.i13.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool54.not.i = icmp eq i32 %32, 0
  br i1 %tobool54.not.i, label %land.rhs22.i.__seqprop_assert.exit_crit_edge, label %land.rhs58.i

land.rhs22.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs22.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__seqprop_assert.exit

land.rhs58.i:                                     ; preds = %land.rhs22.i
  %.b1.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i, label %land.rhs58.i.__seqprop_assert.exit_crit_edge, label %if.then.i, !prof !204

land.rhs58.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__seqprop_assert.exit

if.then.i:                                        ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.37, i32 noundef 271, i32 noundef 9, ptr noundef null) #18
  br label %__seqprop_assert.exit

__seqprop_assert.exit:                            ; preds = %if.then.i, %land.rhs58.i.__seqprop_assert.exit_crit_edge, %land.rhs22.i.__seqprop_assert.exit_crit_edge, %land.rhs.i.__seqprop_assert.exit_crit_edge, %land.lhs.true.i.__seqprop_assert.exit_crit_edge, %entry.__seqprop_assert.exit_crit_edge
  %37 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %38, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !222
  %dep_map.i.i = getelementptr inbounds %struct.seqcount, ptr %syncp, i32 0, i32 1
  %39 = tail call ptr @llvm.returnaddress(i32 0) #18
  %40 = ptrtoint ptr %39 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %40) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @macsec_encrypt(ptr noundef %skb, ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  %old.i.i.i.i = alloca i32, align 4
  %ptr.addr.i = alloca ptr, align 4
  %trailer = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %trailer) #18
  %0 = ptrtoint ptr %trailer to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %trailer, align 4, !annotation !199
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %encoding_sa = getelementptr i8, ptr %dev, i32 2337
  %1 = ptrtoint ptr %encoding_sa to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %encoding_sa, align 1
  %idxprom = zext i8 %2 to i32
  %arrayidx = getelementptr %struct.macsec_secy, ptr %add.ptr.i.i, i32 0, i32 11, i32 6, i32 %idxprom
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ptr.addr.i)
  %5 = ptrtoint ptr %ptr.addr.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %ptr.addr.i, align 4
  %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i = load volatile ptr, ptr %ptr.addr.i, align 4
  %call.i = tail call i32 @rcu_read_lock_bh_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.do.end7.i_crit_edge

entry.do.end7.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

land.lhs.true.i:                                  ; preds = %entry
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.do.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b19.i = load i1, ptr @macsec_txsa_get.__warned, align 1
  br i1 %.b19.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_txsa_get.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 199, ptr noundef nonnull @.str.38) #18
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i.do.end7.i_crit_edge, %entry.do.end7.i_crit_edge
  %tobool9.not.i = icmp eq ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, null
  br i1 %tobool9.not.i, label %do.end7.i.if.then_crit_edge, label %lor.lhs.false.i

do.end7.i.if.then_crit_edge:                      ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then

lor.lhs.false.i:                                  ; preds = %do.end7.i
  %active.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 5
  %6 = ptrtoint ptr %active.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %active.i, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool10.not.i = icmp eq i8 %7, 0
  br i1 %tobool10.not.i, label %lor.lhs.false.i.if.then_crit_edge, label %if.end12.i

lor.lhs.false.i.if.then_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then

if.end12.i:                                       ; preds = %lor.lhs.false.i
  %refcnt.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i.i) #18
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #18
  %8 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %refcnt.i, align 4
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, %if.end12.i
  %10 = phi i32 [ %9, %if.end12.i ], [ %asmresult3.i.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge ]
  %11 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i.i.i.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i.i.i.i, label %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %do.cond.i.i.i.i

do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end4.i.i.i.i

do.cond.i.i.i.i:                                  ; preds = %do.body.i.i.i.i
  %add.i.i.i.i = add i32 %10, 1
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  %call.i3.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i.i, i32 noundef 4) #18
  %12 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %old.i.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  br label %do.body.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i:                            ; preds = %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i.i
  %14 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 %13, i32 %add.i.i.i.i, ptr elementtype(i32) %refcnt.i) #18, !srcloc !223
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %14, 0
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body.i.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i:     ; preds = %do.body.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i = extractvalue { i32, i32 } %14, 1
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i, %13
  br i1 %cmp.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, !prof !204

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge
  %15 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %old.i.i.i.i, align 4
  %add5.i.i.i.i = add i32 %16, 1
  %17 = or i32 %add5.i.i.i.i, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %.not.i.i.i.i = icmp sgt i32 %17, -1
  br i1 %.not.i.i.i.i, label %if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge, label %if.then10.i.i.i.i, !prof !204

if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge: ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %refcount_inc_not_zero.exit.i

if.then10.i.i.i.i:                                ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 0) #18
  %18 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pr = load i32, ptr %old.i.i.i.i, align 4
  br label %refcount_inc_not_zero.exit.i

refcount_inc_not_zero.exit.i:                     ; preds = %if.then10.i.i.i.i, %if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge
  %19 = phi i32 [ %.pr, %if.then10.i.i.i.i ], [ %16, %if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool12.i.i.i.not.i = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i.i) #18
  br i1 %tobool12.i.i.i.not.i, label %refcount_inc_not_zero.exit.i.if.then_crit_edge, label %if.end

refcount_inc_not_zero.exit.i.if.then_crit_edge:   ; preds = %refcount_inc_not_zero.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then

if.then:                                          ; preds = %refcount_inc_not_zero.exit.i.if.then_crit_edge, %lor.lhs.false.i.if.then_crit_edge, %do.end7.i.if.then_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ptr.addr.i)
  %operational = getelementptr i8, ptr %dev, i32 2329
  %20 = ptrtoint ptr %operational to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %operational, align 1
  call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #18
  br label %cleanup126

if.end:                                           ; preds = %refcount_inc_not_zero.exit.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ptr.addr.i)
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %21 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %23 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %22 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %24 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub.ptr.sub.i)
  %cmp = icmp ult i32 %sub.ptr.sub.i, 16
  br i1 %cmp, label %if.end.if.then11_crit_edge, label %lor.rhs, !prof !203

if.end.if.then11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then11

lor.rhs:                                          ; preds = %if.end
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %25 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.i.not.i = icmp eq i32 %26, 0
  br i1 %tobool.i.not.i, label %skb_tailroom.exit, label %lor.rhs.if.then11_crit_edge

lor.rhs.if.then11_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then11

skb_tailroom.exit:                                ; preds = %lor.rhs
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %27 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %end.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %29 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %tail.i, align 8
  %sub.ptr.lhs.cast.i237 = ptrtoint ptr %28 to i32
  %sub.ptr.rhs.cast.i238 = ptrtoint ptr %30 to i32
  %sub.ptr.sub.i239 = sub i32 %sub.ptr.lhs.cast.i237, %sub.ptr.rhs.cast.i238
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub.ptr.sub.i239)
  %cmp8 = icmp slt i32 %sub.ptr.sub.i239, 16
  br i1 %cmp8, label %skb_tailroom.exit.if.then11_crit_edge, label %if.else24, !prof !203

skb_tailroom.exit.if.then11_crit_edge:            ; preds = %skb_tailroom.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then11

if.then11:                                        ; preds = %skb_tailroom.exit.if.then11_crit_edge, %lor.rhs.if.then11_crit_edge, %if.end.if.then11_crit_edge
  %call13 = call ptr @skb_copy_expand(ptr noundef %skb, i32 noundef 16, i32 noundef 16, i32 noundef 2592) #18
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup.thread, label %if.then11.if.end30.sink.split_crit_edge, !prof !203

if.then11.if.end30.sink.split_crit_edge:          ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end30.sink.split

cleanup.thread:                                   ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @macsec_txsa_put(ptr noundef nonnull %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i)
  call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #18
  br label %cleanup126

if.else24:                                        ; preds = %skb_tailroom.exit
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %31 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %if.else24.skb_unshare.exit_crit_edge, label %skb_cloned.exit.i

if.else24.skb_unshare.exit_crit_edge:             ; preds = %if.else24
  call void @__sanitizer_cov_trace_pc() #20
  br label %skb_unshare.exit

skb_cloned.exit.i:                                ; preds = %if.else24
  %32 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %end.i, align 4
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %33, i32 0, i32 10
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #18
  %34 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i.i = and i32 %35, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp.i.not.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp.i.not.i, label %skb_cloned.exit.i.skb_unshare.exit_crit_edge, label %if.then6.i

skb_cloned.exit.i.skb_unshare.exit_crit_edge:     ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %skb_unshare.exit

if.then6.i:                                       ; preds = %skb_cloned.exit.i
  %call7.i = call ptr @skb_copy(ptr noundef %skb, i32 noundef 2592) #18
  %tobool8.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool8.not.i, label %skb_unshare.exit.thread, label %if.then6.i.if.end30.sink.split_crit_edge, !prof !203

if.then6.i.if.end30.sink.split_crit_edge:         ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end30.sink.split

skb_unshare.exit.thread:                          ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #18
  br label %if.then27

skb_unshare.exit:                                 ; preds = %skb_cloned.exit.i.skb_unshare.exit_crit_edge, %if.else24.skb_unshare.exit_crit_edge
  %tobool26.not = icmp eq ptr %skb, null
  br i1 %tobool26.not, label %skb_unshare.exit.if.then27_crit_edge, label %skb_unshare.exit.if.end30_crit_edge

skb_unshare.exit.if.end30_crit_edge:              ; preds = %skb_unshare.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end30

skb_unshare.exit.if.then27_crit_edge:             ; preds = %skb_unshare.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then27

if.then27:                                        ; preds = %skb_unshare.exit.if.then27_crit_edge, %skb_unshare.exit.thread
  %call.i.i.i.i.i.i241 = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %36 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i242 = extractvalue { i32, i32, i32 } %36, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i242)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i242, 1
  br i1 %cmp.i.i.i.i, label %if.then.i245, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i242)
  %.not.i.i.i.i243 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i242, 0
  br i1 %.not.i.i.i.i243, label %if.end5.i.i.i.i.cleanup126_crit_edge, label %if.then10.i.i.i.i244, !prof !204

if.end5.i.i.i.i.cleanup126_crit_edge:             ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup126

if.then10.i.i.i.i244:                             ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %cleanup126

if.then.i245:                                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 7
  call void @call_rcu(ptr noundef %rcu.i, ptr noundef nonnull @free_txsa) #18
  br label %cleanup126

if.end30.sink.split:                              ; preds = %if.then6.i.if.end30.sink.split_crit_edge, %if.then11.if.end30.sink.split_crit_edge
  %skb.addr.1.ph = phi ptr [ %call13, %if.then11.if.end30.sink.split_crit_edge ], [ %call7.i, %if.then6.i.if.end30.sink.split_crit_edge ]
  call void @consume_skb(ptr noundef %skb) #18
  br label %if.end30

if.end30:                                         ; preds = %if.end30.sink.split, %skb_unshare.exit.if.end30_crit_edge
  %skb.addr.1 = phi ptr [ %skb, %skb_unshare.exit.if.end30_crit_edge ], [ %skb.addr.1.ph, %if.end30.sink.split ]
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 6
  %37 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %len, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 18
  %39 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %head.i.i, align 8
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 15, i32 0, i32 21
  %41 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %mac_header.i.i, align 2
  %conv.i.i = zext i16 %42 to i32
  %add.ptr.i.i246 = getelementptr i8, ptr %40, i32 %conv.i.i
  %send_sci.i = getelementptr i8, ptr %dev, i32 2339
  %43 = ptrtoint ptr %send_sci.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %send_sci.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool.not.i247 = icmp eq i8 %44, 0
  br i1 %tobool.not.i247, label %lor.rhs.i, label %if.end30.send_sci.exit.thread378_crit_edge

if.end30.send_sci.exit.thread378_crit_edge:       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #20
  br label %send_sci.exit.thread378

lor.rhs.i:                                        ; preds = %if.end30
  %n_rx_sc.i = getelementptr i8, ptr %dev, i32 2308
  %45 = ptrtoint ptr %n_rx_sc.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %n_rx_sc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %46)
  %cmp.i = icmp ugt i32 %46, 1
  br i1 %cmp.i, label %land.lhs.true.i248, label %lor.rhs.i.send_sci.exit.thread_crit_edge

lor.rhs.i.send_sci.exit.thread_crit_edge:         ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %send_sci.exit.thread

land.lhs.true.i248:                               ; preds = %lor.rhs.i
  %end_station.i = getelementptr i8, ptr %dev, i32 2340
  %47 = ptrtoint ptr %end_station.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %end_station.i, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool2.not.i = icmp eq i8 %48, 0
  br i1 %tobool2.not.i, label %send_sci.exit, label %land.lhs.true.i248.send_sci.exit.thread_crit_edge

land.lhs.true.i248.send_sci.exit.thread_crit_edge: ; preds = %land.lhs.true.i248
  call void @__sanitizer_cov_trace_pc() #20
  br label %send_sci.exit.thread

send_sci.exit:                                    ; preds = %land.lhs.true.i248
  %scb.i = getelementptr i8, ptr %dev, i32 2341
  %49 = ptrtoint ptr %scb.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %scb.i, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool3.not.i249 = icmp eq i8 %50, 0
  br i1 %tobool3.not.i249, label %send_sci.exit.send_sci.exit.thread378_crit_edge, label %send_sci.exit.send_sci.exit.thread_crit_edge

send_sci.exit.send_sci.exit.thread_crit_edge:     ; preds = %send_sci.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %send_sci.exit.thread

send_sci.exit.send_sci.exit.thread378_crit_edge:  ; preds = %send_sci.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %send_sci.exit.thread378

send_sci.exit.thread378:                          ; preds = %send_sci.exit.send_sci.exit.thread378_crit_edge, %if.end30.send_sci.exit.thread378_crit_edge
  br label %send_sci.exit.thread

send_sci.exit.thread:                             ; preds = %send_sci.exit.thread378, %send_sci.exit.send_sci.exit.thread_crit_edge, %land.lhs.true.i248.send_sci.exit.thread_crit_edge, %lor.rhs.i.send_sci.exit.thread_crit_edge
  %51 = phi i1 [ true, %send_sci.exit.thread378 ], [ false, %send_sci.exit.send_sci.exit.thread_crit_edge ], [ false, %land.lhs.true.i248.send_sci.exit.thread_crit_edge ], [ false, %lor.rhs.i.send_sci.exit.thread_crit_edge ]
  %52 = phi i32 [ 16, %send_sci.exit.thread378 ], [ 8, %send_sci.exit.send_sci.exit.thread_crit_edge ], [ 8, %land.lhs.true.i248.send_sci.exit.thread_crit_edge ], [ 8, %lor.rhs.i.send_sci.exit.thread_crit_edge ]
  %call35 = call ptr @skb_push(ptr noundef nonnull %skb.addr.1, i32 noundef %52) #18
  %53 = call ptr @memmove(ptr %call35, ptr %add.ptr.i.i246, i32 12)
  %lock.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 2
  call void @_raw_spin_lock_bh(ptr noundef %lock.i) #18, !noalias !224
  %54 = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 3
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %54, align 8, !noalias !224
  %tmp.sroa.4.0.extract.trunc = trunc i64 %56 to i32
  %xpn.i = getelementptr i8, ptr %dev, i32 2328
  %57 = ptrtoint ptr %xpn.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %xpn.i, align 8, !range !198, !noalias !224
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool.not.i250 = icmp eq i8 %58, 0
  br i1 %tobool.not.i250, label %if.else.i252, label %if.then.i251

if.then.i251:                                     ; preds = %send_sci.exit.thread
  call void @__sanitizer_cov_trace_pc() #20
  %inc.i = add i64 %56, 1
  %59 = ptrtoint ptr %54 to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 %inc.i, ptr %54, align 8, !noalias !224
  br label %if.end.i

if.else.i252:                                     ; preds = %send_sci.exit.thread
  call void @__sanitizer_cov_trace_pc() #20
  %lower.i = getelementptr inbounds %struct.anon.148, ptr %54, i32 0, i32 1
  %60 = ptrtoint ptr %lower.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %lower.i, align 4, !noalias !224
  %inc1.i = add i32 %61, 1
  store i32 %inc1.i, ptr %lower.i, align 4, !noalias !224
  %62 = ptrtoint ptr %54 to i32
  call void @__asan_load8_noabort(i32 %62)
  %.pr.i = load i64, ptr %54, align 8, !noalias !224
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i252, %if.then.i251
  %63 = phi i64 [ %.pr.i, %if.else.i252 ], [ %inc.i, %if.then.i251 ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %63)
  %cmp.i253 = icmp eq i64 %63, 0
  br i1 %cmp.i253, label %if.then2.i, label %if.end.i.tx_sa_update_pn.exit_crit_edge

if.end.i.tx_sa_update_pn.exit_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %tx_sa_update_pn.exit

if.then2.i:                                       ; preds = %if.end.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__macsec_pn_wrapped.__UNIQUE_ID_ddebug476, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macsec_encrypt, %if.then.i.i)) #18
          to label %do.end.i.i [label %if.then.i.i], !noalias !224, !srcloc !197

if.then.i.i:                                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__macsec_pn_wrapped.__UNIQUE_ID_ddebug476, ptr noundef nonnull @.str.3) #18, !noalias !224
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %if.then.i.i, %if.then2.i
  %64 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 0, ptr %active.i, align 4, !noalias !224
  %protect_frames.i.i = getelementptr i8, ptr %dev, i32 2330
  %65 = ptrtoint ptr %protect_frames.i.i to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %protect_frames.i.i, align 2, !range !198, !noalias !224
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %66)
  %tobool3.not.i.i = icmp eq i8 %66, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i.tx_sa_update_pn.exit_crit_edge, label %if.then4.i.i

do.end.i.i.tx_sa_update_pn.exit_crit_edge:        ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %tx_sa_update_pn.exit

if.then4.i.i:                                     ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %operational.i.i = getelementptr i8, ptr %dev, i32 2329
  %67 = ptrtoint ptr %operational.i.i to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 0, ptr %operational.i.i, align 1, !noalias !224
  br label %tx_sa_update_pn.exit

tx_sa_update_pn.exit:                             ; preds = %if.then4.i.i, %do.end.i.i.tx_sa_update_pn.exit_crit_edge, %if.end.i.tx_sa_update_pn.exit_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #18, !noalias !224
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %56)
  %cmp36 = icmp eq i64 %56, 0
  br i1 %cmp36, label %if.then37, label %if.end39

if.then37:                                        ; preds = %tx_sa_update_pn.exit
  %call.i.i.i.i.i.i255 = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %68 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i256 = extractvalue { i32, i32, i32 } %68, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i256)
  %cmp.i.i.i.i257 = icmp eq i32 %asmresult.i.i.i.i.i.i.i256, 1
  br i1 %cmp.i.i.i.i257, label %if.then.i262, label %if.end5.i.i.i.i259

if.end5.i.i.i.i259:                               ; preds = %if.then37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i256)
  %.not.i.i.i.i258 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i256, 0
  br i1 %.not.i.i.i.i258, label %if.end5.i.i.i.i259.macsec_txsa_put.exit264_crit_edge, label %if.then10.i.i.i.i260, !prof !204

if.end5.i.i.i.i259.macsec_txsa_put.exit264_crit_edge: ; preds = %if.end5.i.i.i.i259
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_txsa_put.exit264

if.then10.i.i.i.i260:                             ; preds = %if.end5.i.i.i.i259
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %macsec_txsa_put.exit264

if.then.i262:                                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i261 = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 7
  call void @call_rcu(ptr noundef %rcu.i261, ptr noundef nonnull @free_txsa) #18
  br label %macsec_txsa_put.exit264

macsec_txsa_put.exit264:                          ; preds = %if.then.i262, %if.then10.i.i.i.i260, %if.end5.i.i.i.i259.macsec_txsa_put.exit264_crit_edge
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.1, i32 noundef 0) #18
  br label %cleanup126

if.end39:                                         ; preds = %tx_sa_update_pn.exit
  %tci_an.i = getelementptr inbounds %struct.macsec_eth_header, ptr %call35, i32 0, i32 1
  %add.i.i = select i1 %51, i32 14, i32 6
  %69 = call ptr @memset(ptr %tci_an.i, i32 0, i32 %add.i.i)
  %h_proto.i = getelementptr inbounds %struct.ethhdr, ptr %call35, i32 0, i32 2
  %70 = ptrtoint ptr %h_proto.i to i32
  call void @__asan_storeN_noabort(i32 %70, i32 2)
  store i16 -30491, ptr %h_proto.i, align 1
  br i1 %51, label %if.then.i265, label %if.else.i267

if.then.i265:                                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #20
  %71 = ptrtoint ptr %tci_an.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %tci_an.i, align 1
  %73 = or i8 %72, 32
  store i8 %73, ptr %tci_an.i, align 1
  %secure_channel_id.i = getelementptr inbounds %struct.macsec_eth_header, ptr %call35, i32 0, i32 4
  %sci.i = getelementptr i8, ptr %dev, i32 2312
  %74 = ptrtoint ptr %sci.i to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %sci.i, align 8
  %76 = ptrtoint ptr %secure_channel_id.i to i32
  call void @__asan_storeN_noabort(i32 %76, i32 8)
  store i64 %75, ptr %secure_channel_id.i, align 1
  br label %if.end18.i

if.else.i267:                                     ; preds = %if.end39
  %end_station.i266 = getelementptr i8, ptr %dev, i32 2340
  %77 = ptrtoint ptr %end_station.i266 to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %end_station.i266, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %78)
  %tobool5.not.i = icmp eq i8 %78, 0
  br i1 %tobool5.not.i, label %if.else.i267.if.end.i270_crit_edge, label %if.then6.i268

if.else.i267.if.end.i270_crit_edge:               ; preds = %if.else.i267
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end.i270

if.then6.i268:                                    ; preds = %if.else.i267
  call void @__sanitizer_cov_trace_pc() #20
  %79 = ptrtoint ptr %tci_an.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %tci_an.i, align 1
  %81 = or i8 %80, 64
  store i8 %81, ptr %tci_an.i, align 1
  br label %if.end.i270

if.end.i270:                                      ; preds = %if.then6.i268, %if.else.i267.if.end.i270_crit_edge
  %scb.i269 = getelementptr i8, ptr %dev, i32 2341
  %82 = ptrtoint ptr %scb.i269 to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %scb.i269, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %83)
  %tobool11.not.i = icmp eq i8 %83, 0
  br i1 %tobool11.not.i, label %if.end.i270.if.end18.i_crit_edge, label %if.then12.i

if.end.i270.if.end18.i_crit_edge:                 ; preds = %if.end.i270
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end18.i

if.then12.i:                                      ; preds = %if.end.i270
  call void @__sanitizer_cov_trace_pc() #20
  %84 = ptrtoint ptr %tci_an.i to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %tci_an.i, align 1
  %86 = or i8 %85, 16
  store i8 %86, ptr %tci_an.i, align 1
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then12.i, %if.end.i270.if.end18.i_crit_edge, %if.then.i265
  %packet_number.i = getelementptr inbounds %struct.macsec_eth_header, ptr %call35, i32 0, i32 3
  %87 = ptrtoint ptr %packet_number.i to i32
  call void @__asan_storeN_noabort(i32 %87, i32 4)
  store i32 %tmp.sroa.4.0.extract.trunc, ptr %packet_number.i, align 1
  %encrypt.i = getelementptr i8, ptr %dev, i32 2338
  %88 = ptrtoint ptr %encrypt.i to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %encrypt.i, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %89)
  %tobool19.not.i = icmp eq i8 %89, 0
  br i1 %tobool19.not.i, label %if.else25.i, label %if.end18.i.if.end34.sink.split.i_crit_edge

if.end18.i.if.end34.sink.split.i_crit_edge:       ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end34.sink.split.i

if.else25.i:                                      ; preds = %if.end18.i
  %icv_len.i = getelementptr i8, ptr %dev, i32 2322
  %90 = ptrtoint ptr %icv_len.i to i32
  call void @__asan_load2_noabort(i32 %90)
  %91 = load i16, ptr %icv_len.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %91)
  %cmp.not.i = icmp eq i16 %91, 16
  br i1 %cmp.not.i, label %if.else25.i.macsec_fill_sectag.exit_crit_edge, label %if.else25.i.if.end34.sink.split.i_crit_edge

if.else25.i.if.end34.sink.split.i_crit_edge:      ; preds = %if.else25.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end34.sink.split.i

if.else25.i.macsec_fill_sectag.exit_crit_edge:    ; preds = %if.else25.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_fill_sectag.exit

if.end34.sink.split.i:                            ; preds = %if.else25.i.if.end34.sink.split.i_crit_edge, %if.end18.i.if.end34.sink.split.i_crit_edge
  %.sink57.i = phi i8 [ 12, %if.end18.i.if.end34.sink.split.i_crit_edge ], [ 4, %if.else25.i.if.end34.sink.split.i_crit_edge ]
  %92 = ptrtoint ptr %tci_an.i to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %tci_an.i, align 1
  %94 = or i8 %93, %.sink57.i
  store i8 %94, ptr %tci_an.i, align 1
  br label %macsec_fill_sectag.exit

macsec_fill_sectag.exit:                          ; preds = %if.end34.sink.split.i, %if.else25.i.macsec_fill_sectag.exit_crit_edge
  %95 = ptrtoint ptr %encoding_sa to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %encoding_sa, align 1
  %97 = ptrtoint ptr %tci_an.i to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load i8, ptr %tci_an.i, align 1
  %or3855.i = or i8 %98, %96
  store i8 %or3855.i, ptr %tci_an.i, align 1
  %sub = add i32 %38, -12
  call void @__sanitizer_cov_trace_const_cmp4(i32 48, i32 %sub)
  %cmp.i271 = icmp ult i32 %sub, 48
  br i1 %cmp.i271, label %if.then.i272, label %macsec_fill_sectag.exit.macsec_set_shortlen.exit_crit_edge

macsec_fill_sectag.exit.macsec_set_shortlen.exit_crit_edge: ; preds = %macsec_fill_sectag.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_set_shortlen.exit

if.then.i272:                                     ; preds = %macsec_fill_sectag.exit
  call void @__sanitizer_cov_trace_pc() #20
  %conv.i = trunc i32 %sub to i8
  %short_length.i = getelementptr inbounds %struct.macsec_eth_header, ptr %call35, i32 0, i32 2
  %99 = ptrtoint ptr %short_length.i to i32
  call void @__asan_load1_noabort(i32 %99)
  %bf.load.i = load i8, ptr %short_length.i, align 1
  %bf.clear.i = and i8 %bf.load.i, -64
  %bf.set.i = or i8 %bf.clear.i, %conv.i
  store i8 %bf.set.i, ptr %short_length.i, align 1
  br label %macsec_set_shortlen.exit

macsec_set_shortlen.exit:                         ; preds = %if.then.i272, %macsec_fill_sectag.exit.macsec_set_shortlen.exit_crit_edge
  %icv_len = getelementptr i8, ptr %dev, i32 2322
  %100 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %100)
  %101 = load i16, ptr %icv_len, align 2
  %conv = zext i16 %101 to i32
  %call41 = call ptr @skb_put(ptr noundef nonnull %skb.addr.1, i32 noundef %conv) #18
  %102 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %len, align 4
  %sub43 = add i32 %103, -14
  %real_dev = getelementptr i8, ptr %dev, i32 2368
  %104 = ptrtoint ptr %real_dev to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %real_dev, align 8
  %mtu = getelementptr inbounds %struct.net_device, ptr %105, i32 0, i32 20
  %106 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %mtu, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub43, i32 %107)
  %cmp45 = icmp ugt i32 %sub43, %107
  br i1 %cmp45, label %if.then47, label %if.end56

if.then47:                                        ; preds = %macsec_set_shortlen.exit
  %stats = getelementptr i8, ptr %dev, i32 2372
  %108 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %stats, align 4
  %110 = ptrtoint ptr %109 to i32
  %111 = call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i = and i32 %111, -16384
  %112 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %112, i32 0, i32 3
  %113 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %cpu, align 4
  %arrayidx51 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %114
  %115 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %arrayidx51, align 4
  %add = add i32 %116, %110
  %117 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_secy_stats, ptr %117, i32 0, i32 1
  call fastcc void @u64_stats_update_begin(ptr noundef %syncp)
  %OutPktsTooLong = getelementptr inbounds %struct.macsec_dev_stats, ptr %117, i32 0, i32 2
  %118 = ptrtoint ptr %OutPktsTooLong to i32
  call void @__asan_load8_noabort(i32 %118)
  %119 = load i64, ptr %OutPktsTooLong, align 8
  %inc = add i64 %119, 1
  store i64 %inc, ptr %OutPktsTooLong, align 8
  %dep_map.i.i = getelementptr inbounds %struct.pcpu_secy_stats, ptr %117, i32 0, i32 1, i32 0, i32 1
  %120 = call ptr @llvm.returnaddress(i32 0) #18
  %121 = ptrtoint ptr %120 to i32
  call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %121) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %122 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %123, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  %call.i.i.i.i.i.i276 = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %124 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i277 = extractvalue { i32, i32, i32 } %124, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i277)
  %cmp.i.i.i.i278 = icmp eq i32 %asmresult.i.i.i.i.i.i.i277, 1
  br i1 %cmp.i.i.i.i278, label %if.then.i283, label %if.end5.i.i.i.i280

if.end5.i.i.i.i280:                               ; preds = %if.then47
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i277)
  %.not.i.i.i.i279 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i277, 0
  br i1 %.not.i.i.i.i279, label %if.end5.i.i.i.i280.macsec_txsa_put.exit285_crit_edge, label %if.then10.i.i.i.i281, !prof !204

if.end5.i.i.i.i280.macsec_txsa_put.exit285_crit_edge: ; preds = %if.end5.i.i.i.i280
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_txsa_put.exit285

if.then10.i.i.i.i281:                             ; preds = %if.end5.i.i.i.i280
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %macsec_txsa_put.exit285

if.then.i283:                                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i282 = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 7
  call void @call_rcu(ptr noundef %rcu.i282, ptr noundef nonnull @free_txsa) #18
  br label %macsec_txsa_put.exit285

macsec_txsa_put.exit285:                          ; preds = %if.then.i283, %if.then10.i.i.i.i281, %if.end5.i.i.i.i280.macsec_txsa_put.exit285_crit_edge
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.1, i32 noundef 0) #18
  br label %cleanup126

if.end56:                                         ; preds = %macsec_set_shortlen.exit
  %call57 = call i32 @skb_cow_data(ptr noundef nonnull %skb.addr.1, i32 noundef 0, ptr noundef nonnull %trailer) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %cmp58 = icmp slt i32 %call57, 0
  br i1 %cmp58, label %if.then66, label %if.end68, !prof !203

if.then66:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @macsec_txsa_put(ptr noundef nonnull %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i)
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.1, i32 noundef 0) #18
  %125 = inttoptr i32 %call57 to ptr
  br label %cleanup126

if.end68:                                         ; preds = %if.end56
  %tfm = getelementptr inbounds %struct.macsec_key, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 1
  %126 = ptrtoint ptr %tfm to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %tfm, align 8
  %reqsize.i.i = getelementptr inbounds %struct.crypto_aead, ptr %127, i32 0, i32 1
  %128 = ptrtoint ptr %reqsize.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %reqsize.i.i, align 4
  %add2.i = add i32 %129, 143
  %and.i286 = and i32 %add2.i, -4
  %mul.i = mul i32 %call57, 20
  %add3.i = add i32 %and.i286, %mul.i
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add3.i, i32 noundef 2592) #23
  %tobool.not.i288 = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not.i288, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.end68
  %call.i.i.i.i.i.i293 = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %130 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i294 = extractvalue { i32, i32, i32 } %130, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i294)
  %cmp.i.i.i.i295 = icmp eq i32 %asmresult.i.i.i.i.i.i.i294, 1
  br i1 %cmp.i.i.i.i295, label %if.then.i300, label %if.end5.i.i.i.i297

if.end5.i.i.i.i297:                               ; preds = %if.then71
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i294)
  %.not.i.i.i.i296 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i294, 0
  br i1 %.not.i.i.i.i296, label %if.end5.i.i.i.i297.macsec_txsa_put.exit302_crit_edge, label %if.then10.i.i.i.i298, !prof !204

if.end5.i.i.i.i297.macsec_txsa_put.exit302_crit_edge: ; preds = %if.end5.i.i.i.i297
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_txsa_put.exit302

if.then10.i.i.i.i298:                             ; preds = %if.end5.i.i.i.i297
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %macsec_txsa_put.exit302

if.then.i300:                                     ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i299 = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 7
  call void @call_rcu(ptr noundef %rcu.i299, ptr noundef nonnull @free_txsa) #18
  br label %macsec_txsa_put.exit302

macsec_txsa_put.exit302:                          ; preds = %if.then.i300, %if.then10.i.i.i.i298, %if.end5.i.i.i.i297.macsec_txsa_put.exit302_crit_edge
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.1, i32 noundef 0) #18
  br label %cleanup126

if.end73:                                         ; preds = %if.end68
  %add.i289 = add i32 %129, 128
  %add.ptr.i = getelementptr i8, ptr %call9.i.i, i32 %add.i289
  %add.ptr5.i = getelementptr i8, ptr %call9.i.i, i32 %and.i286
  %base.i.i.i = getelementptr inbounds %struct.crypto_aead, ptr %127, i32 0, i32 3
  %tfm1.i.i = getelementptr inbounds %struct.crypto_async_request, ptr %call9.i.i, i32 0, i32 3
  %131 = ptrtoint ptr %tfm1.i.i to i32
  call void @__asan_store4_noabort(i32 %131)
  store ptr %base.i.i.i, ptr %tfm1.i.i, align 16
  %132 = ptrtoint ptr %xpn.i to i32
  call void @__asan_load1_noabort(i32 %132)
  %133 = load i8, ptr %xpn.i, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %133)
  %tobool74.not = icmp eq i8 %133, 0
  br i1 %tobool74.not, label %if.else77, label %if.then75

if.then75:                                        ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #20
  %ssci = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 1
  %134 = ptrtoint ptr %ssci to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %ssci, align 8
  %salt = getelementptr inbounds %struct.macsec_key, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 2
  %136 = ptrtoint ptr %salt to i32
  call void @__asan_load4_noabort(i32 %136)
  %.unpack = load i32, ptr %salt, align 4
  %.elt233 = getelementptr inbounds %struct.macsec_key, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 2, i32 0, i32 1
  %137 = ptrtoint ptr %.elt233 to i32
  call void @__asan_load4_noabort(i32 %137)
  %.unpack234 = load i32, ptr %.elt233, align 4
  %.elt235 = getelementptr inbounds [3 x i32], ptr %salt, i32 0, i32 2
  %138 = ptrtoint ptr %.elt235 to i32
  call void @__asan_load4_noabort(i32 %138)
  %.unpack236 = load i32, ptr %.elt235, align 4
  %xor.i = xor i32 %.unpack, %135
  %139 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %139, i32 4)
  store i32 %xor.i, ptr %add.ptr.i, align 1
  %salt.sroa.4.4.insert.ext.i = zext i32 %.unpack236 to i64
  %salt.sroa.2.4.insert.ext.i = zext i32 %.unpack234 to i64
  %salt.sroa.2.4.insert.shift.i = shl nuw i64 %salt.sroa.2.4.insert.ext.i, 32
  %salt.sroa.2.4.insert.insert.i = or i64 %salt.sroa.2.4.insert.shift.i, %salt.sroa.4.4.insert.ext.i
  %xor3.i = xor i64 %salt.sroa.2.4.insert.insert.i, %56
  %pn4.i = getelementptr inbounds %struct.gcm_iv_xpn, ptr %add.ptr.i, i32 0, i32 1
  %140 = ptrtoint ptr %pn4.i to i32
  call void @__asan_storeN_noabort(i32 %140, i32 8)
  store i64 %xor3.i, ptr %pn4.i, align 1
  br label %if.end79

if.else77:                                        ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #20
  %sci = getelementptr i8, ptr %dev, i32 2312
  %141 = ptrtoint ptr %sci to i32
  call void @__asan_load8_noabort(i32 %141)
  %142 = load i64, ptr %sci, align 8
  %143 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store8_noabort(i32 %143)
  store i64 %142, ptr %add.ptr.i, align 8
  %pn1.i = getelementptr inbounds %struct.gcm_iv, ptr %add.ptr.i, i32 0, i32 1
  %144 = ptrtoint ptr %pn1.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %tmp.sroa.4.0.extract.trunc, ptr %pn1.i, align 8
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then75
  call void @sg_init_table(ptr noundef %add.ptr5.i, i32 noundef %call57) #18
  %145 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %len, align 4
  %call81 = call i32 @skb_to_sgvec(ptr noundef nonnull %skb.addr.1, ptr noundef %add.ptr5.i, i32 noundef 0, i32 noundef %146) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call81)
  %cmp82 = icmp slt i32 %call81, 0
  br i1 %cmp82, label %if.then90, label %if.end92, !prof !203

if.then90:                                        ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree_sensitive(ptr noundef nonnull %call9.i.i) #18
  call fastcc void @macsec_txsa_put(ptr noundef nonnull %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i)
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.1, i32 noundef 0) #18
  %147 = inttoptr i32 %call81 to ptr
  br label %cleanup126

if.end92:                                         ; preds = %if.end79
  %148 = ptrtoint ptr %encrypt.i to i32
  call void @__asan_load1_noabort(i32 %148)
  %149 = load i8, ptr %encrypt.i, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %149)
  %tobool93.not = icmp eq i8 %149, 0
  br i1 %tobool93.not, label %if.else105, label %if.then94

if.then94:                                        ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #20
  %150 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %len, align 4
  %add.i303.neg384 = select i1 %51, i32 -28, i32 -20
  %add.i303 = select i1 %51, i32 28, i32 20
  %152 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %152)
  %153 = load i16, ptr %icv_len, align 2
  %conv101 = zext i16 %153 to i32
  %.neg = add i32 %151, %add.i303.neg384
  %sub102 = sub i32 %.neg, %conv101
  %src1.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 4
  %154 = ptrtoint ptr %src1.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store ptr %add.ptr5.i, ptr %src1.i, align 4
  %dst2.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 5
  %155 = ptrtoint ptr %dst2.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr %add.ptr5.i, ptr %dst2.i, align 8
  %cryptlen3.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 2
  %156 = ptrtoint ptr %cryptlen3.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store i32 %sub102, ptr %cryptlen3.i, align 4
  %iv4.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 3
  %157 = ptrtoint ptr %iv4.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store ptr %add.ptr.i, ptr %iv4.i, align 32
  br label %if.end110

if.else105:                                       ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #20
  %src1.i305 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 4
  %158 = ptrtoint ptr %src1.i305 to i32
  call void @__asan_store4_noabort(i32 %158)
  store ptr %add.ptr5.i, ptr %src1.i305, align 4
  %dst2.i306 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 5
  %159 = ptrtoint ptr %dst2.i306 to i32
  call void @__asan_store4_noabort(i32 %159)
  store ptr %add.ptr5.i, ptr %dst2.i306, align 8
  %cryptlen3.i307 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 2
  %160 = ptrtoint ptr %cryptlen3.i307 to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 0, ptr %cryptlen3.i307, align 4
  %iv4.i308 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 3
  %161 = ptrtoint ptr %iv4.i308 to i32
  call void @__asan_store4_noabort(i32 %161)
  store ptr %add.ptr.i, ptr %iv4.i308, align 32
  %162 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %len, align 4
  %164 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %164)
  %165 = load i16, ptr %icv_len, align 2
  %conv108 = zext i16 %165 to i32
  %sub109 = sub i32 %163, %conv108
  br label %if.end110

if.end110:                                        ; preds = %if.else105, %if.then94
  %add.i303.sink = phi i32 [ %sub109, %if.else105 ], [ %add.i303, %if.then94 ]
  %166 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 1
  %167 = ptrtoint ptr %166 to i32
  call void @__asan_store4_noabort(i32 %167)
  store i32 %add.i303.sink, ptr %166, align 8
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 3
  %168 = ptrtoint ptr %cb.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store ptr %call9.i.i, ptr %cb.i, align 4
  %169 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 3, i32 4
  %170 = ptrtoint ptr %169 to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, ptr %169, align 4
  %complete.i = getelementptr inbounds %struct.crypto_async_request, ptr %call9.i.i, i32 0, i32 1
  %171 = ptrtoint ptr %complete.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store ptr @macsec_encrypt_done, ptr %complete.i, align 8
  %data2.i = getelementptr inbounds %struct.crypto_async_request, ptr %call9.i.i, i32 0, i32 2
  %172 = ptrtoint ptr %data2.i to i32
  call void @__asan_store4_noabort(i32 %172)
  store ptr %skb.addr.1, ptr %data2.i, align 4
  %flags4.i = getelementptr inbounds %struct.crypto_async_request, ptr %call9.i.i, i32 0, i32 4
  %173 = ptrtoint ptr %flags4.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 0, ptr %flags4.i, align 4
  %174 = getelementptr inbounds %struct.anon.0, ptr %skb.addr.1, i32 0, i32 2
  %175 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %174, align 8
  %tobool.not.i311 = icmp eq ptr %176, null
  br i1 %tobool.not.i311, label %if.end110.dev_hold.exit_crit_edge, label %do.body1.i

if.end110.dev_hold.exit_crit_edge:                ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #20
  br label %dev_hold.exit

do.body1.i:                                       ; preds = %if.end110
  %177 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %176, i32 0, i32 118
  %178 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %pcpu_refcnt.i, align 4
  %180 = ptrtoint ptr %179 to i32
  %181 = call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i312 = and i32 %181, -16384
  %182 = inttoptr i32 %and.i.i312 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %182, i32 0, i32 3
  %183 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %184
  %185 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %arrayidx.i, align 4
  %add.i313 = add i32 %186, %180
  %187 = inttoptr i32 %add.i313 to ptr
  %188 = ptrtoint ptr %187 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %187, align 4
  %add13.i = add i32 %189, 1
  store i32 %add13.i, ptr %187, align 4
  %190 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i.i = and i32 %190, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !203

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @warn_bogus_irq_restore() #18
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %177) #18, !srcloc !213
  br label %dev_hold.exit

dev_hold.exit:                                    ; preds = %do.end30.i, %if.end110.dev_hold.exit_crit_edge
  %call114 = call i32 @crypto_aead_encrypt(ptr noundef nonnull %call9.i.i) #18
  %191 = zext i32 %call114 to i64
  call void @__sanitizer_cov_trace_switch(i64 %191, ptr @__sancov_gen_cov_switch_values.75)
  switch i32 %call114, label %if.then122 [
    i32 -115, label %dev_hold.exit.cleanup126_crit_edge
    i32 0, label %if.end125
  ]

dev_hold.exit.cleanup126_crit_edge:               ; preds = %dev_hold.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup126

if.then122:                                       ; preds = %dev_hold.exit
  %192 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %174, align 8
  %tobool.not.i314 = icmp eq ptr %193, null
  br i1 %tobool.not.i314, label %if.then122.dev_put.exit_crit_edge, label %do.body1.i323

if.then122.dev_put.exit_crit_edge:                ; preds = %if.then122
  call void @__sanitizer_cov_trace_pc() #20
  br label %dev_put.exit

do.body1.i323:                                    ; preds = %if.then122
  %194 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %pcpu_refcnt.i315 = getelementptr inbounds %struct.net_device, ptr %193, i32 0, i32 118
  %195 = ptrtoint ptr %pcpu_refcnt.i315 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %pcpu_refcnt.i315, align 4
  %197 = ptrtoint ptr %196 to i32
  %198 = call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i316 = and i32 %198, -16384
  %199 = inttoptr i32 %and.i.i316 to ptr
  %cpu.i317 = getelementptr inbounds %struct.thread_info, ptr %199, i32 0, i32 3
  %200 = ptrtoint ptr %cpu.i317 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %cpu.i317, align 4
  %arrayidx.i318 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %201
  %202 = ptrtoint ptr %arrayidx.i318 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %arrayidx.i318, align 4
  %add.i319 = add i32 %203, %197
  %204 = inttoptr i32 %add.i319 to ptr
  %205 = ptrtoint ptr %204 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load i32, ptr %204, align 4
  %add13.i320 = add i32 %206, -1
  store i32 %add13.i320, ptr %204, align 4
  %207 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i.i321 = and i32 %207, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i321)
  %tobool24.not.i322 = icmp eq i32 %and.i.i.i321, 0
  br i1 %tobool24.not.i322, label %if.then28.i324, label %do.body1.i323.do.end30.i325_crit_edge, !prof !203

do.body1.i323.do.end30.i325_crit_edge:            ; preds = %do.body1.i323
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end30.i325

if.then28.i324:                                   ; preds = %do.body1.i323
  call void @__sanitizer_cov_trace_pc() #20
  call void @warn_bogus_irq_restore() #18
  br label %do.end30.i325

do.end30.i325:                                    ; preds = %if.then28.i324, %do.body1.i323.do.end30.i325_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %194) #18, !srcloc !213
  br label %dev_put.exit

dev_put.exit:                                     ; preds = %do.end30.i325, %if.then122.dev_put.exit_crit_edge
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.1, i32 noundef 0) #18
  call void @kfree_sensitive(ptr noundef nonnull %call9.i.i) #18
  %call.i.i.i.i.i.i327 = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %208 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i328 = extractvalue { i32, i32, i32 } %208, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i328)
  %cmp.i.i.i.i329 = icmp eq i32 %asmresult.i.i.i.i.i.i.i328, 1
  br i1 %cmp.i.i.i.i329, label %if.then.i334, label %if.end5.i.i.i.i331

if.end5.i.i.i.i331:                               ; preds = %dev_put.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i328)
  %.not.i.i.i.i330 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i328, 0
  br i1 %.not.i.i.i.i330, label %if.end5.i.i.i.i331.cleanup126_crit_edge, label %if.then10.i.i.i.i332, !prof !204

if.end5.i.i.i.i331.cleanup126_crit_edge:          ; preds = %if.end5.i.i.i.i331
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup126

if.then10.i.i.i.i332:                             ; preds = %if.end5.i.i.i.i331
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %cleanup126

if.then.i334:                                     ; preds = %dev_put.exit
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i333 = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 7
  call void @call_rcu(ptr noundef %rcu.i333, ptr noundef nonnull @free_txsa) #18
  br label %cleanup126

if.end125:                                        ; preds = %dev_hold.exit
  %209 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %174, align 8
  %tobool.not.i337 = icmp eq ptr %210, null
  br i1 %tobool.not.i337, label %if.end125.dev_put.exit349_crit_edge, label %do.body1.i346

if.end125.dev_put.exit349_crit_edge:              ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #20
  br label %dev_put.exit349

do.body1.i346:                                    ; preds = %if.end125
  %211 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %pcpu_refcnt.i338 = getelementptr inbounds %struct.net_device, ptr %210, i32 0, i32 118
  %212 = ptrtoint ptr %pcpu_refcnt.i338 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %pcpu_refcnt.i338, align 4
  %214 = ptrtoint ptr %213 to i32
  %215 = call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i339 = and i32 %215, -16384
  %216 = inttoptr i32 %and.i.i339 to ptr
  %cpu.i340 = getelementptr inbounds %struct.thread_info, ptr %216, i32 0, i32 3
  %217 = ptrtoint ptr %cpu.i340 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %cpu.i340, align 4
  %arrayidx.i341 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %218
  %219 = ptrtoint ptr %arrayidx.i341 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %arrayidx.i341, align 4
  %add.i342 = add i32 %220, %214
  %221 = inttoptr i32 %add.i342 to ptr
  %222 = ptrtoint ptr %221 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %221, align 4
  %add13.i343 = add i32 %223, -1
  store i32 %add13.i343, ptr %221, align 4
  %224 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i.i344 = and i32 %224, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i344)
  %tobool24.not.i345 = icmp eq i32 %and.i.i.i344, 0
  br i1 %tobool24.not.i345, label %if.then28.i347, label %do.body1.i346.do.end30.i348_crit_edge, !prof !203

do.body1.i346.do.end30.i348_crit_edge:            ; preds = %do.body1.i346
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end30.i348

if.then28.i347:                                   ; preds = %do.body1.i346
  call void @__sanitizer_cov_trace_pc() #20
  call void @warn_bogus_irq_restore() #18
  br label %do.end30.i348

do.end30.i348:                                    ; preds = %if.then28.i347, %do.body1.i346.do.end30.i348_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %211) #18, !srcloc !213
  br label %dev_put.exit349

dev_put.exit349:                                  ; preds = %do.end30.i348, %if.end125.dev_put.exit349_crit_edge
  call void @kfree_sensitive(ptr noundef nonnull %call9.i.i) #18
  %call.i.i.i.i.i.i351 = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %225 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i352 = extractvalue { i32, i32, i32 } %225, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i352)
  %cmp.i.i.i.i353 = icmp eq i32 %asmresult.i.i.i.i.i.i.i352, 1
  br i1 %cmp.i.i.i.i353, label %if.then.i358, label %if.end5.i.i.i.i355

if.end5.i.i.i.i355:                               ; preds = %dev_put.exit349
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i352)
  %.not.i.i.i.i354 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i352, 0
  br i1 %.not.i.i.i.i354, label %if.end5.i.i.i.i355.cleanup126_crit_edge, label %if.then10.i.i.i.i356, !prof !204

if.end5.i.i.i.i355.cleanup126_crit_edge:          ; preds = %if.end5.i.i.i.i355
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup126

if.then10.i.i.i.i356:                             ; preds = %if.end5.i.i.i.i355
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %cleanup126

if.then.i358:                                     ; preds = %dev_put.exit349
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i357 = getelementptr inbounds %struct.macsec_tx_sa, ptr %ptr.addr.i.0.ptr.addr.i.0.ptr.addr.0.ptr.addr.0.ptr.addr.0..i, i32 0, i32 7
  call void @call_rcu(ptr noundef %rcu.i357, ptr noundef nonnull @free_txsa) #18
  br label %cleanup126

cleanup126:                                       ; preds = %if.then.i358, %if.then10.i.i.i.i356, %if.end5.i.i.i.i355.cleanup126_crit_edge, %if.then.i334, %if.then10.i.i.i.i332, %if.end5.i.i.i.i331.cleanup126_crit_edge, %dev_hold.exit.cleanup126_crit_edge, %if.then90, %macsec_txsa_put.exit302, %if.then66, %macsec_txsa_put.exit285, %macsec_txsa_put.exit264, %if.then.i245, %if.then10.i.i.i.i244, %if.end5.i.i.i.i.cleanup126_crit_edge, %cleanup.thread, %if.then
  %retval.1 = phi ptr [ inttoptr (i32 -67 to ptr), %macsec_txsa_put.exit264 ], [ inttoptr (i32 -22 to ptr), %macsec_txsa_put.exit285 ], [ %125, %if.then66 ], [ %147, %if.then90 ], [ inttoptr (i32 -12 to ptr), %macsec_txsa_put.exit302 ], [ inttoptr (i32 -22 to ptr), %if.then ], [ inttoptr (i32 -12 to ptr), %cleanup.thread ], [ inttoptr (i32 -12 to ptr), %if.end5.i.i.i.i.cleanup126_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.then10.i.i.i.i244 ], [ inttoptr (i32 -12 to ptr), %if.then.i245 ], [ inttoptr (i32 -115 to ptr), %dev_hold.exit.cleanup126_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end5.i.i.i.i331.cleanup126_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then10.i.i.i.i332 ], [ inttoptr (i32 -22 to ptr), %if.then.i334 ], [ %skb.addr.1, %if.end5.i.i.i.i355.cleanup126_crit_edge ], [ %skb.addr.1, %if.then10.i.i.i.i356 ], [ %skb.addr.1, %if.then.i358 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %trailer) #18
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macsec_count_tx(ptr nocapture noundef readonly %skb, ptr nocapture noundef readonly %tx_sc, ptr nocapture noundef readonly %tx_sa) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %stats = getelementptr inbounds %struct.macsec_tx_sc, ptr %tx_sc, i32 0, i32 7
  %0 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stats, align 4
  %2 = ptrtoint ptr %1 to i32
  %3 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx, align 4
  %add = add i32 %8, %2
  %9 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_tx_sc_stats, ptr %9, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp)
  %encrypt = getelementptr inbounds %struct.macsec_tx_sc, ptr %tx_sc, i32 0, i32 2
  %10 = ptrtoint ptr %encrypt to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %encrypt, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  %len55 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %12 = ptrtoint ptr %len55 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %len55, align 4
  %conv56 = zext i32 %13 to i64
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %OutOctetsEncrypted = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %9, i32 0, i32 3
  %14 = ptrtoint ptr %OutOctetsEncrypted to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %OutOctetsEncrypted, align 8
  %add3 = add i64 %15, %conv56
  store i64 %add3, ptr %OutOctetsEncrypted, align 8
  %OutPktsEncrypted = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %9, i32 0, i32 1
  %16 = ptrtoint ptr %OutPktsEncrypted to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %OutPktsEncrypted, align 8
  %inc = add i64 %17, 1
  store i64 %inc, ptr %OutPktsEncrypted, align 8
  %18 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %stats24 = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 6
  %19 = ptrtoint ptr %stats24 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %stats24, align 8
  %OutPktsEncrypted25 = getelementptr inbounds %struct.macsec_tx_sa_stats, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %OutPktsEncrypted25 to i32
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx29 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx29, align 4
  %add30 = add i32 %25, %21
  %26 = inttoptr i32 %add30 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  %add31 = add i32 %28, 1
  store i32 %add31, ptr %26, align 4
  %29 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool42.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool42.not, label %if.then46, label %if.then.do.end48_crit_edge, !prof !203

if.then.do.end48_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end48

if.then46:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @warn_bogus_irq_restore() #18
  br label %do.end48

do.end48:                                         ; preds = %if.then46, %if.then.do.end48_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %18) #18, !srcloc !213
  br label %if.end121

if.else:                                          ; preds = %entry
  %OutOctetsProtected = getelementptr inbounds %struct.macsec_tx_sc_stats, ptr %9, i32 0, i32 2
  %30 = ptrtoint ptr %OutOctetsProtected to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %OutOctetsProtected, align 8
  %add58 = add i64 %31, %conv56
  store i64 %add58, ptr %OutOctetsProtected, align 8
  %32 = ptrtoint ptr %9 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %9, align 8
  %inc60 = add i64 %33, 1
  store i64 %inc60, ptr %9, align 8
  %34 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %stats84 = getelementptr inbounds %struct.macsec_tx_sa, ptr %tx_sa, i32 0, i32 6
  %35 = ptrtoint ptr %stats84 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %stats84, align 8
  %37 = ptrtoint ptr %36 to i32
  %38 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu, align 4
  %arrayidx89 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %39
  %40 = ptrtoint ptr %arrayidx89 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx89, align 4
  %add90 = add i32 %41, %37
  %42 = inttoptr i32 %add90 to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %add91 = add i32 %44, 1
  store i32 %add91, ptr %42, align 4
  %45 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i131 = and i32 %45, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i131)
  %tobool102.not = icmp eq i32 %and.i.i131, 0
  br i1 %tobool102.not, label %if.then111, label %if.else.do.end114_crit_edge, !prof !203

if.else.do.end114_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end114

if.then111:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @warn_bogus_irq_restore() #18
  br label %do.end114

do.end114:                                        ; preds = %if.then111, %if.else.do.end114_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %34) #18, !srcloc !213
  br label %if.end121

if.end121:                                        ; preds = %do.end114, %do.end48
  %dep_map.i.i = getelementptr inbounds %struct.pcpu_tx_sc_stats, ptr %9, i32 0, i32 1, i32 0, i32 1
  %46 = tail call ptr @llvm.returnaddress(i32 0) #18
  %47 = ptrtoint ptr %46 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %47) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %48 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %49, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #16

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_copy_expand(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_push(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_cow_data(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sg_init_table(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_to_sgvec(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_encrypt_done(ptr nocapture noundef readonly %base, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %data = getelementptr inbounds %struct.crypto_async_request, ptr %base, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %2 = getelementptr inbounds %struct.anon.0, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 3
  %5 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 3, i32 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %8 = ptrtoint ptr %cb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cb.i, align 4
  tail call void @kfree_sensitive(ptr noundef %9) #18
  tail call fastcc void @local_bh_disable() #18
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_bh_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock_bh.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock_bh.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock_bh.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock_bh.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock_bh.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock_bh.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock_bh.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 750, ptr noundef nonnull @.str.41) #18
  br label %rcu_read_lock_bh.exit

rcu_read_lock_bh.exit:                            ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge, %land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge, %entry.rcu_read_lock_bh.exit_crit_edge
  %real_dev.i = getelementptr i8, ptr %4, i32 2368
  %10 = ptrtoint ptr %real_dev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %real_dev.i, align 8
  %12 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %2, align 8
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 19
  %13 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 18
  %15 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %14 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %16 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %conv.i.i = trunc i32 %sub.ptr.sub.i.i to i16
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15, i32 0, i32 21
  %17 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %conv.i.i, ptr %mac_header.i.i, align 2
  %conv.i.i.i = and i32 %sub.ptr.sub.i.i, 65535
  %add.ptr.i.i.i = getelementptr i8, ptr %16, i32 %conv.i.i.i
  %h_proto.i = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i.i, i32 0, i32 2
  %18 = ptrtoint ptr %h_proto.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 2)
  %19 = load i16, ptr %h_proto.i, align 1
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15, i32 0, i32 18
  %20 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %19, ptr %protocol.i, align 8
  %tx_sc = getelementptr i8, ptr %4, i32 2336
  %21 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %5, align 4
  tail call fastcc void @macsec_count_tx(ptr noundef %1, ptr noundef %tx_sc, ptr noundef %22)
  %len4 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 6
  %23 = ptrtoint ptr %len4 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %len4, align 4
  %call5 = tail call i32 @dev_queue_xmit(ptr noundef %1) #18
  %25 = zext i32 %call5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.76)
  switch i32 %call5, label %rcu_read_lock_bh.exit.count_tx.exit_crit_edge [
    i32 2, label %rcu_read_lock_bh.exit.if.then.i18_crit_edge
    i32 0, label %rcu_read_lock_bh.exit.if.then.i18_crit_edge32
  ]

rcu_read_lock_bh.exit.if.then.i18_crit_edge32:    ; preds = %rcu_read_lock_bh.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i18

rcu_read_lock_bh.exit.if.then.i18_crit_edge:      ; preds = %rcu_read_lock_bh.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then.i18

rcu_read_lock_bh.exit.count_tx.exit_crit_edge:    ; preds = %rcu_read_lock_bh.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %count_tx.exit

if.then.i18:                                      ; preds = %rcu_read_lock_bh.exit.if.then.i18_crit_edge, %rcu_read_lock_bh.exit.if.then.i18_crit_edge32
  %26 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 130
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 64
  %29 = ptrtoint ptr %28 to i32
  %30 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %35, %29
  %36 = inttoptr i32 %add.i to ptr
  %syncp.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %36, i32 0, i32 4
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp.i) #18
  %tx_packets.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %36, i32 0, i32 2
  %37 = ptrtoint ptr %tx_packets.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %tx_packets.i, align 16
  %inc.i = add i64 %38, 1
  store i64 %inc.i, ptr %tx_packets.i, align 16
  %conv.i = sext i32 %24 to i64
  %tx_bytes.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %36, i32 0, i32 3
  %39 = ptrtoint ptr %tx_bytes.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %tx_bytes.i, align 8
  %add4.i = add i64 %40, %conv.i
  store i64 %add4.i, ptr %tx_bytes.i, align 8
  %dep_map.i.i.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %36, i32 0, i32 4, i32 0, i32 1
  %41 = tail call ptr @llvm.returnaddress(i32 0) #18
  %42 = ptrtoint ptr %41 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %42) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %43 = ptrtoint ptr %syncp.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %syncp.i, align 4
  %inc.i.i.i.i = add i32 %44, 1
  store i32 %inc.i.i.i.i, ptr %syncp.i, align 4
  br label %count_tx.exit

count_tx.exit:                                    ; preds = %if.then.i18, %rcu_read_lock_bh.exit.count_tx.exit_crit_edge
  %call.i19 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i19, label %count_tx.exit.rcu_read_unlock_bh.exit_crit_edge, label %land.lhs.true.i22

count_tx.exit.rcu_read_unlock_bh.exit_crit_edge:  ; preds = %count_tx.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit

land.lhs.true.i22:                                ; preds = %count_tx.exit
  %call1.i20 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i20)
  %tobool.not.i21 = icmp eq i32 %call1.i20, 0
  br i1 %tobool.not.i21, label %land.lhs.true.i22.rcu_read_unlock_bh.exit_crit_edge, label %land.lhs.true2.i24

land.lhs.true.i22.rcu_read_unlock_bh.exit_crit_edge: ; preds = %land.lhs.true.i22
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit

land.lhs.true2.i24:                               ; preds = %land.lhs.true.i22
  %.b4.i23 = load i1, ptr @rcu_read_unlock_bh.__warned, align 1
  br i1 %.b4.i23, label %land.lhs.true2.i24.rcu_read_unlock_bh.exit_crit_edge, label %if.then.i25

land.lhs.true2.i24.rcu_read_unlock_bh.exit_crit_edge: ; preds = %land.lhs.true2.i24
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit

if.then.i25:                                      ; preds = %land.lhs.true2.i24
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock_bh.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 761, ptr noundef nonnull @.str.42) #18
  br label %rcu_read_unlock_bh.exit

rcu_read_unlock_bh.exit:                          ; preds = %if.then.i25, %land.lhs.true2.i24.rcu_read_unlock_bh.exit_crit_edge, %land.lhs.true.i22.rcu_read_unlock_bh.exit_crit_edge, %count_tx.exit.rcu_read_unlock_bh.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_bh_lock_map) #18
  tail call fastcc void @local_bh_enable() #18
  %refcnt.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %7, i32 0, i32 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %45 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %45, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i26, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %rcu_read_unlock_bh.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.macsec_txsa_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !204

if.end5.i.i.i.i.macsec_txsa_put.exit_crit_edge:   ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_txsa_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %macsec_txsa_put.exit

if.then.i26:                                      ; preds = %rcu_read_unlock_bh.exit
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %7, i32 0, i32 7
  tail call void @call_rcu(ptr noundef %rcu.i, ptr noundef nonnull @free_txsa) #18
  br label %macsec_txsa_put.exit

macsec_txsa_put.exit:                             ; preds = %if.then.i26, %if.then10.i.i.i.i, %if.end5.i.i.i.i.macsec_txsa_put.exit_crit_edge
  %tobool.not.i27 = icmp eq ptr %4, null
  br i1 %tobool.not.i27, label %macsec_txsa_put.exit.dev_put.exit_crit_edge, label %do.body1.i

macsec_txsa_put.exit.dev_put.exit_crit_edge:      ; preds = %macsec_txsa_put.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %dev_put.exit

do.body1.i:                                       ; preds = %macsec_txsa_put.exit
  %46 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 118
  %47 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pcpu_refcnt.i, align 4
  %49 = ptrtoint ptr %48 to i32
  %50 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i28 = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i28 to ptr
  %cpu.i29 = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 3
  %52 = ptrtoint ptr %cpu.i29 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cpu.i29, align 4
  %arrayidx.i30 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx.i30 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.i30, align 4
  %add.i31 = add i32 %55, %49
  %56 = inttoptr i32 %add.i31 to ptr
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 4
  %add13.i = add i32 %58, -1
  store i32 %add13.i, ptr %56, align 4
  %59 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i.i = and i32 %59, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !203

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @warn_bogus_irq_restore() #18
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %46) #18, !srcloc !213
  br label %dev_put.exit

dev_put.exit:                                     ; preds = %do.end30.i, %macsec_txsa_put.exit.dev_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crypto_aead_encrypt(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_bh_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_copy(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_sensitive(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #18
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr noundef %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @lock_acquire(ptr noundef %map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr noundef %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @lock_release(ptr noundef %map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #18
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_mc_sync(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_uc_sync(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_fetch_sw_netstats(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_handle_frame(ptr nocapture noundef %pskb) #0 align 64 {
entry:
  %old.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pskb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pskb, align 4
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 19
  %2 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 18
  %4 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %5 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %sub.ptr.sub.i)
  %cmp = icmp ult i32 %sub.ptr.sub.i, 14
  br i1 %cmp, label %entry.drop_direct_crit_edge, label %if.end

entry.drop_direct_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %drop_direct

if.end:                                           ; preds = %entry
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15, i32 0, i32 21
  %6 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %mac_header.i.i, align 2
  %conv.i.i = zext i16 %7 to i32
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 %conv.i.i
  %h_proto = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i, i32 0, i32 2
  %8 = ptrtoint ptr %h_proto to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %h_proto, align 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 -30491, i16 %9)
  %cmp2.not = icmp eq i16 %9, -30491
  br i1 %cmp2.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %10 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %13, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !227
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i.i, label %if.then4.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.then4.rcu_read_lock.exit.i_crit_edge:          ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.then4
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 696, ptr noundef nonnull @.str.48) #18
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.then4.rcu_read_lock.exit.i_crit_edge
  %14 = getelementptr inbounds %struct.anon.0, ptr %1, i32 0, i32 2
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 8
  %rx_handler_data.i.i = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 95
  %17 = ptrtoint ptr %rx_handler_data.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %rx_handler_data.i.i, align 4
  %call.i116.i = tail call i32 @rcu_read_lock_bh_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i116.i)
  %tobool.not.i117.i = icmp eq i32 %call.i116.i, 0
  br i1 %tobool.not.i117.i, label %land.lhs.true.i118.i, label %rcu_read_lock.exit.i.macsec_data_rcu.exit.i_crit_edge

rcu_read_lock.exit.i.macsec_data_rcu.exit.i_crit_edge: ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rcu.exit.i

land.lhs.true.i118.i:                             ; preds = %rcu_read_lock.exit.i
  %call2.i.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i118.i.macsec_data_rcu.exit.i_crit_edge, label %land.lhs.true4.i.i

land.lhs.true.i118.i.macsec_data_rcu.exit.i_crit_edge: ; preds = %land.lhs.true.i118.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rcu.exit.i

land.lhs.true4.i.i:                               ; preds = %land.lhs.true.i118.i
  %.b9.i.i = load i1, ptr @macsec_data_rcu.__warned, align 1
  br i1 %.b9.i.i, label %land.lhs.true4.i.i.macsec_data_rcu.exit.i_crit_edge, label %if.then.i119.i

land.lhs.true4.i.i.macsec_data_rcu.exit.i_crit_edge: ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rcu.exit.i

if.then.i119.i:                                   ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 131, ptr noundef nonnull @.str.38) #18
  br label %macsec_data_rcu.exit.i

macsec_data_rcu.exit.i:                           ; preds = %if.then.i119.i, %land.lhs.true4.i.i.macsec_data_rcu.exit.i_crit_edge, %land.lhs.true.i118.i.macsec_data_rcu.exit.i_crit_edge, %rcu_read_lock.exit.i.macsec_data_rcu.exit.i_crit_edge
  %call2.i = tail call i32 @rcu_read_lock_any_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i459 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i459, label %land.lhs.true.i460, label %macsec_data_rcu.exit.i.do.end.i_crit_edge

macsec_data_rcu.exit.i.do.end.i_crit_edge:        ; preds = %macsec_data_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true.i460:                               ; preds = %macsec_data_rcu.exit.i
  %call3.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i460.do.end.i_crit_edge, label %land.lhs.true5.i

land.lhs.true.i460.do.end.i_crit_edge:            ; preds = %land.lhs.true.i460
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i460
  %.b115.i = load i1, ptr @handle_not_macsec.__warned, align 1
  br i1 %.b115.i, label %land.lhs.true5.i.do.end.i_crit_edge, label %if.then.i461

land.lhs.true5.i.do.end.i_crit_edge:              ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

if.then.i461:                                     ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @handle_not_macsec.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1006, ptr noundef nonnull @.str.46) #18
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i461, %land.lhs.true5.i.do.end.i_crit_edge, %land.lhs.true.i460.do.end.i_crit_edge, %macsec_data_rcu.exit.i.do.end.i_crit_edge
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn142.i = load volatile ptr, ptr %18, align 4
  %cmp.not143.i = icmp eq ptr %.pn142.i, %18
  br i1 %cmp.not143.i, label %do.end.i.out.i_crit_edge, label %for.body.lr.ph.i

do.end.i.out.i_crit_edge:                         ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %out.i

for.body.lr.ph.i:                                 ; preds = %do.end.i
  %add.ptr.i.i120.i = getelementptr i8, ptr %add.ptr.i.i, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn144.i = phi ptr [ %.pn142.i, %for.body.lr.ph.i ], [ %.pn.i, %for.inc.i.for.body.i_crit_edge ]
  %macsec.0.i = getelementptr i8, ptr %.pn144.i, i32 -72
  %stats.i = getelementptr i8, ptr %.pn144.i, i32 -4
  %20 = ptrtoint ptr %stats.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %stats.i, align 4
  %22 = ptrtoint ptr %21 to i32
  %23 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %28, %22
  %29 = inttoptr i32 %add.i to ptr
  %30 = ptrtoint ptr %macsec.0.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %macsec.0.i, align 8
  %offload.i.i = getelementptr i8, ptr %.pn144.i, i32 12
  %32 = ptrtoint ptr %offload.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %offload.i.i, align 4
  %.off.i.i = add i32 %33, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i.i)
  %switch.i.i = icmp ult i32 %.off.i.i, 2
  br i1 %switch.i.i, label %land.lhs.true20.i, label %for.body.i.if.end51.i_crit_edge

for.body.i.if.end51.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end51.i

land.lhs.true20.i:                                ; preds = %for.body.i
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 6
  %34 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %land.lhs.true20.i.if.end51.i_crit_edge, label %if.then22.i

land.lhs.true20.i.if.end51.i_crit_edge:           ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end51.i

if.then22.i:                                      ; preds = %land.lhs.true20.i
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 86
  %36 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev_addr.i, align 64
  %38 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %add.ptr.i.i, align 4
  %40 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %37, align 4
  %xor.i.i.i = xor i32 %41, %39
  %42 = ptrtoint ptr %add.ptr.i.i120.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %add.ptr.i.i120.i, align 2
  %add.ptr1.i.i.i = getelementptr i8, ptr %37, i32 4
  %44 = ptrtoint ptr %add.ptr1.i.i.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %add.ptr1.i.i.i, align 2
  %xor37.i.i.i = xor i16 %45, %43
  %xor3.i.i.i = zext i16 %xor37.i.i.i to i32
  %or.i.i.i = or i32 %xor.i.i.i, %xor3.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i.i)
  %cmp.i.i.i = icmp eq i32 %or.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then24.i, label %if.else.i

if.then24.i:                                      ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #20
  %46 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %31, ptr %14, align 8
  %pkt_type.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15
  %47 = ptrtoint ptr %pkt_type.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %bf.load.i = load i16, ptr %pkt_type.i, align 8
  %bf.clear.i = and i16 %bf.load.i, 8191
  store i16 %bf.clear.i, ptr %pkt_type.i, align 8
  br label %out.i

if.else.i:                                        ; preds = %if.then22.i
  %48 = and i32 %39, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.i.i.not.i = icmp eq i32 %48, 0
  br i1 %tobool.i.i.not.i, label %if.else.i.for.inc.i_crit_edge, label %if.then28.i

if.else.i.for.inc.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.i

if.then28.i:                                      ; preds = %if.else.i
  %call29.i = tail call ptr @skb_clone(ptr noundef %1, i32 noundef 2592) #18
  %tobool30.not.i = icmp eq ptr %call29.i, null
  br i1 %tobool30.not.i, label %if.then28.i.out.i_crit_edge, label %if.end32.i

if.then28.i.out.i_crit_edge:                      ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %out.i

if.end32.i:                                       ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #20
  %49 = getelementptr inbounds %struct.anon.0, ptr %call29.i, i32 0, i32 2
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %31, ptr %49, align 8
  %broadcast.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 99
  %51 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %add.ptr.i.i, align 4
  %53 = ptrtoint ptr %broadcast.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %broadcast.i, align 4
  %xor.i.i121.i = xor i32 %54, %52
  %55 = ptrtoint ptr %add.ptr.i.i120.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %add.ptr.i.i120.i, align 2
  %add.ptr1.i.i123.i = getelementptr %struct.net_device, ptr %31, i32 0, i32 99, i32 4
  %57 = ptrtoint ptr %add.ptr1.i.i123.i to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %add.ptr1.i.i123.i, align 2
  %xor37.i.i124.i = xor i16 %58, %56
  %xor3.i.i125.i = zext i16 %xor37.i.i124.i to i32
  %or.i.i126.i = or i32 %xor.i.i121.i, %xor3.i.i125.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i126.i)
  %cmp.i.i127.i = icmp eq i32 %or.i.i126.i, 0
  %pkt_type38.i = getelementptr inbounds %struct.sk_buff, ptr %call29.i, i32 0, i32 15
  %59 = ptrtoint ptr %pkt_type38.i to i32
  call void @__asan_load2_noabort(i32 %59)
  %bf.load39.i = load i16, ptr %pkt_type38.i, align 8
  %bf.clear40.i = and i16 %bf.load39.i, 8191
  %..i = select i1 %cmp.i.i127.i, i16 8192, i16 16384
  %bf.set46.i = or i16 %..i, %bf.clear40.i
  store i16 %bf.set46.i, ptr %pkt_type38.i, align 8
  %call48.i = tail call i32 @netif_rx(ptr noundef nonnull %call29.i) #18
  br label %for.inc.i

if.end51.i:                                       ; preds = %land.lhs.true20.i.if.end51.i_crit_edge, %for.body.i.if.end51.i_crit_edge
  %validate_frames.i = getelementptr i8, ptr %.pn144.i, i32 -52
  %60 = ptrtoint ptr %validate_frames.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %validate_frames.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %61)
  %cmp53.i = icmp eq i32 %61, 2
  br i1 %cmp53.i, label %if.then54.i, label %if.end57.i

if.then54.i:                                      ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #20
  %syncp.i = getelementptr inbounds %struct.pcpu_secy_stats, ptr %29, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp.i) #18
  %InPktsNoTag.i = getelementptr inbounds %struct.macsec_dev_stats, ptr %29, i32 0, i32 3
  %62 = ptrtoint ptr %InPktsNoTag.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %InPktsNoTag.i, align 8
  %inc.i = add i64 %63, 1
  store i64 %inc.i, ptr %InPktsNoTag.i, align 8
  %dep_map.i.i.i = getelementptr inbounds %struct.pcpu_secy_stats, ptr %29, i32 0, i32 1, i32 0, i32 1
  %64 = tail call ptr @llvm.returnaddress(i32 0) #18
  %65 = ptrtoint ptr %64 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %65) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %66 = ptrtoint ptr %syncp.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %syncp.i, align 4
  %inc.i.i.i.i = add i32 %67, 1
  store i32 %inc.i.i.i.i, ptr %syncp.i, align 4
  br label %for.inc.i

if.end57.i:                                       ; preds = %if.end51.i
  %call58.i = tail call ptr @skb_clone(ptr noundef %1, i32 noundef 2592) #18
  %tobool59.not.i = icmp eq ptr %call58.i, null
  br i1 %tobool59.not.i, label %if.end57.i.out.i_crit_edge, label %if.end61.i

if.end57.i.out.i_crit_edge:                       ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %out.i

if.end61.i:                                       ; preds = %if.end57.i
  %68 = getelementptr inbounds %struct.anon.0, ptr %call58.i, i32 0, i32 2
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %31, ptr %68, align 8
  %call62.i = tail call i32 @netif_rx(ptr noundef nonnull %call58.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62.i)
  %cmp63.i = icmp eq i32 %call62.i, 0
  br i1 %cmp63.i, label %if.then64.i, label %if.end61.i.for.inc.i_crit_edge

if.end61.i.for.inc.i_crit_edge:                   ; preds = %if.end61.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.inc.i

if.then64.i:                                      ; preds = %if.end61.i
  call void @__sanitizer_cov_trace_pc() #20
  %syncp65.i = getelementptr inbounds %struct.pcpu_secy_stats, ptr %29, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp65.i) #18
  %InPktsUntagged.i = getelementptr inbounds %struct.macsec_dev_stats, ptr %29, i32 0, i32 1
  %70 = ptrtoint ptr %InPktsUntagged.i to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %InPktsUntagged.i, align 8
  %inc67.i = add i64 %71, 1
  store i64 %inc67.i, ptr %InPktsUntagged.i, align 8
  %dep_map.i.i128.i = getelementptr inbounds %struct.pcpu_secy_stats, ptr %29, i32 0, i32 1, i32 0, i32 1
  %72 = tail call ptr @llvm.returnaddress(i32 0) #18
  %73 = ptrtoint ptr %72 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i128.i, i32 noundef %73) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %74 = ptrtoint ptr %syncp65.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %syncp65.i, align 4
  %inc.i.i.i129.i = add i32 %75, 1
  store i32 %inc.i.i.i129.i, ptr %syncp65.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then64.i, %if.end61.i.for.inc.i_crit_edge, %if.then54.i, %if.end32.i, %if.else.i.for.inc.i_crit_edge
  %76 = ptrtoint ptr %.pn144.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %.pn.i = load volatile ptr, ptr %.pn144.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %18
  br i1 %cmp.not.i, label %for.inc.i.out.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body.i

for.inc.i.out.i_crit_edge:                        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %out.i

out.i:                                            ; preds = %for.inc.i.out.i_crit_edge, %if.end57.i.out.i_crit_edge, %if.then28.i.out.i_crit_edge, %if.then24.i, %do.end.i.out.i_crit_edge
  %ret.2.i = phi i32 [ 1, %if.then24.i ], [ 3, %do.end.i.out.i_crit_edge ], [ 3, %if.then28.i.out.i_crit_edge ], [ 3, %if.end57.i.out.i_crit_edge ], [ 3, %for.inc.i.out.i_crit_edge ]
  %call.i130.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i130.i, label %out.i.handle_not_macsec.exit_crit_edge, label %land.lhs.true.i133.i

out.i.handle_not_macsec.exit_crit_edge:           ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %handle_not_macsec.exit

land.lhs.true.i133.i:                             ; preds = %out.i
  %call1.i131.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i131.i)
  %tobool.not.i132.i = icmp eq i32 %call1.i131.i, 0
  br i1 %tobool.not.i132.i, label %land.lhs.true.i133.i.handle_not_macsec.exit_crit_edge, label %land.lhs.true2.i135.i

land.lhs.true.i133.i.handle_not_macsec.exit_crit_edge: ; preds = %land.lhs.true.i133.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %handle_not_macsec.exit

land.lhs.true2.i135.i:                            ; preds = %land.lhs.true.i133.i
  %.b4.i134.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i134.i, label %land.lhs.true2.i135.i.handle_not_macsec.exit_crit_edge, label %if.then.i136.i

land.lhs.true2.i135.i.handle_not_macsec.exit_crit_edge: ; preds = %land.lhs.true2.i135.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %handle_not_macsec.exit

if.then.i136.i:                                   ; preds = %land.lhs.true2.i135.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 724, ptr noundef nonnull @.str.50) #18
  br label %handle_not_macsec.exit

handle_not_macsec.exit:                           ; preds = %if.then.i136.i, %land.lhs.true2.i135.i.handle_not_macsec.exit_crit_edge, %land.lhs.true.i133.i.handle_not_macsec.exit_crit_edge, %out.i.handle_not_macsec.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !228
  %77 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i.i.i137.i = and i32 %77, -16384
  %78 = inttoptr i32 %and.i.i.i.i.i137.i to ptr
  %preempt_count.i.i.i.i138.i = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 1
  %79 = ptrtoint ptr %preempt_count.i.i.i.i138.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %preempt_count.i.i.i.i138.i, align 4
  %sub.i.i.i.i = add i32 %80, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i138.i, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  br label %cleanup316

if.end6:                                          ; preds = %if.end
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 12
  %81 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %81)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i462 = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i462, label %if.end6.skb_unshare.exit_crit_edge, label %skb_cloned.exit.i

if.end6.skb_unshare.exit_crit_edge:               ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %skb_unshare.exit

skb_cloned.exit.i:                                ; preds = %if.end6
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %82 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %end.i.i.i, align 4
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %83, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #18
  %84 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i.i463 = and i32 %85, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i463)
  %cmp.i.not.i = icmp eq i32 %and.i.i463, 1
  br i1 %cmp.i.not.i, label %skb_cloned.exit.i.skb_unshare.exit_crit_edge, label %if.then6.i

skb_cloned.exit.i.skb_unshare.exit_crit_edge:     ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %skb_unshare.exit

if.then6.i:                                       ; preds = %skb_cloned.exit.i
  %call7.i = tail call ptr @skb_copy(ptr noundef %1, i32 noundef 2592) #18
  %tobool8.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool8.not.i, label %skb_unshare.exit.thread, label %skb_unshare.exit.thread541, !prof !203

skb_unshare.exit.thread541:                       ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @consume_skb(ptr noundef %1) #18
  %86 = ptrtoint ptr %pskb to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %call7.i, ptr %pskb, align 4
  br label %if.end9

skb_unshare.exit.thread:                          ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @kfree_skb_reason(ptr noundef %1, i32 noundef 0) #18
  %87 = ptrtoint ptr %pskb to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr null, ptr %pskb, align 4
  br label %cleanup316

skb_unshare.exit:                                 ; preds = %skb_cloned.exit.i.skb_unshare.exit_crit_edge, %if.end6.skb_unshare.exit_crit_edge
  %88 = ptrtoint ptr %pskb to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %1, ptr %pskb, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %skb_unshare.exit.cleanup316_crit_edge, label %skb_unshare.exit.if.end9_crit_edge

skb_unshare.exit.if.end9_crit_edge:               ; preds = %skb_unshare.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end9

skb_unshare.exit.cleanup316_crit_edge:            ; preds = %skb_unshare.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup316

if.end9:                                          ; preds = %skb_unshare.exit.if.end9_crit_edge, %skb_unshare.exit.thread541
  %skb.addr.0.i544 = phi ptr [ %call7.i, %skb_unshare.exit.thread541 ], [ %1, %skb_unshare.exit.if.end9_crit_edge ]
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i544, i32 0, i32 6
  %89 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i544, i32 0, i32 7
  %91 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %90, %92
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub.i.i)
  %cmp.not.i465 = icmp ult i32 %sub.i.i, 16
  br i1 %cmp.not.i465, label %if.end.i, label %if.end9.if.end18_crit_edge, !prof !203

if.end9.if.end18_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end18

if.end.i:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %90)
  %cmp3.i = icmp ult i32 %90, 16
  br i1 %cmp3.i, label %if.end.i.if.then13_crit_edge, label %pskb_may_pull.exit, !prof !203

if.end.i.if.then13_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

pskb_may_pull.exit:                               ; preds = %if.end.i
  %sub.i = sub nuw nsw i32 16, %sub.i.i
  %call13.i = tail call ptr @__pskb_pull_tail(ptr noundef nonnull %skb.addr.0.i544, i32 noundef %sub.i) #18
  %cmp14.i.not = icmp eq ptr %call13.i, null
  br i1 %cmp14.i.not, label %pskb_may_pull.exit.if.then13_crit_edge, label %pskb_may_pull.exit.if.end18_crit_edge

pskb_may_pull.exit.if.end18_crit_edge:            ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end18

pskb_may_pull.exit.if.then13_crit_edge:           ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then13

if.then13:                                        ; preds = %pskb_may_pull.exit.if.then13_crit_edge, %if.end.i.if.then13_crit_edge
  %93 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %len.i.i, align 4
  %95 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i468 = sub i32 %94, %96
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sub.i.i468)
  %cmp.not.i469 = icmp ult i32 %sub.i.i468, 8
  br i1 %cmp.not.i469, label %if.end.i471, label %if.then13.if.end18_crit_edge, !prof !203

if.then13.if.end18_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end18

if.end.i471:                                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %94)
  %cmp3.i470 = icmp ult i32 %94, 8
  br i1 %cmp3.i470, label %if.end.i471.drop_direct_crit_edge, label %pskb_may_pull.exit477, !prof !203

if.end.i471.drop_direct_crit_edge:                ; preds = %if.end.i471
  call void @__sanitizer_cov_trace_pc() #20
  br label %drop_direct

pskb_may_pull.exit477:                            ; preds = %if.end.i471
  %sub.i472 = sub nuw nsw i32 8, %sub.i.i468
  %call13.i473 = tail call ptr @__pskb_pull_tail(ptr noundef nonnull %skb.addr.0.i544, i32 noundef %sub.i472) #18
  %cmp14.i474.not = icmp eq ptr %call13.i473, null
  br i1 %cmp14.i474.not, label %pskb_may_pull.exit477.drop_direct_crit_edge, label %pskb_may_pull.exit477.if.end18_crit_edge

pskb_may_pull.exit477.if.end18_crit_edge:         ; preds = %pskb_may_pull.exit477
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end18

pskb_may_pull.exit477.drop_direct_crit_edge:      ; preds = %pskb_may_pull.exit477
  call void @__sanitizer_cov_trace_pc() #20
  br label %drop_direct

if.end18:                                         ; preds = %pskb_may_pull.exit477.if.end18_crit_edge, %if.then13.if.end18_crit_edge, %pskb_may_pull.exit.if.end18_crit_edge, %if.end9.if.end18_crit_edge
  %retval.0.i546 = phi i1 [ false, %pskb_may_pull.exit477.if.end18_crit_edge ], [ true, %pskb_may_pull.exit.if.end18_crit_edge ], [ true, %if.end9.if.end18_crit_edge ], [ false, %if.then13.if.end18_crit_edge ]
  %head.i.i478 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i544, i32 0, i32 18
  %97 = ptrtoint ptr %head.i.i478 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %head.i.i478, align 8
  %mac_header.i.i479 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i544, i32 0, i32 15, i32 0, i32 21
  %99 = ptrtoint ptr %mac_header.i.i479 to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %mac_header.i.i479, align 2
  %conv.i.i480 = zext i16 %100 to i32
  %add.ptr.i.i481 = getelementptr i8, ptr %98, i32 %conv.i.i480
  %tci_an = getelementptr inbounds %struct.macsec_eth_header, ptr %add.ptr.i.i481, i32 0, i32 1
  %101 = ptrtoint ptr %tci_an to i32
  call void @__asan_load1_noabort(i32 %101)
  %102 = load i8, ptr %tci_an, align 1
  %conv20 = zext i8 %102 to i32
  %and = and i32 %conv20, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %and)
  %cmp21 = icmp eq i32 %and, 8
  br i1 %cmp21, label %if.end18.cleanup316_crit_edge, label %if.end24

if.end18.cleanup316_crit_edge:                    ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup316

if.end24:                                         ; preds = %if.end18
  %and27 = and i32 %conv20, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27)
  %tobool28.not = icmp eq i32 %and27, 0
  %brmerge = or i1 %retval.0.i546, %tobool28.not
  br i1 %brmerge, label %if.end33, label %if.end24.drop_direct_crit_edge

if.end24.drop_direct_crit_edge:                   ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #20
  br label %drop_direct

if.end33:                                         ; preds = %if.end24
  %call34 = tail call ptr @skb_push(ptr noundef nonnull %skb.addr.0.i544, i32 noundef 14) #18
  %103 = ptrtoint ptr %tci_an to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %tci_an, align 1
  %has_sci = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i544, i32 0, i32 3, i32 10
  %105 = lshr i8 %104, 5
  %.lobit = and i8 %105, 1
  %106 = ptrtoint ptr %has_sci to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 %.lobit, ptr %has_sci, align 2
  %107 = load i8, ptr %tci_an, align 1
  %108 = and i8 %107, 3
  %assoc_num = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i544, i32 0, i32 3, i32 8
  %109 = ptrtoint ptr %assoc_num to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 %108, ptr %assoc_num, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.lobit)
  %tobool49.not = icmp eq i8 %.lobit, 0
  br i1 %tobool49.not, label %if.else.i485, label %if.then.i484

if.then.i484:                                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #20
  %secure_channel_id.i = getelementptr inbounds %struct.macsec_eth_header, ptr %add.ptr.i.i481, i32 0, i32 4
  %110 = ptrtoint ptr %secure_channel_id.i to i32
  call void @__asan_loadN_noabort(i32 %110, i32 8)
  %sci.0.copyload.i = load i64, ptr %secure_channel_id.i, align 1
  br label %macsec_frame_sci.exit

if.else.i485:                                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #20
  %h_source.i = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i481, i32 0, i32 1
  %111 = ptrtoint ptr %h_source.i to i32
  call void @__asan_loadN_noabort(i32 %111, i32 6)
  %sci.0.copyload.i.i = load i48, ptr %h_source.i, align 1
  %sci.0.insert.ext.i.i = zext i48 %sci.0.copyload.i.i to i64
  %sci.0.insert.shift.i.i = shl nuw i64 %sci.0.insert.ext.i.i, 16
  %sci.6.insert.insert.i.i = or i64 %sci.0.insert.shift.i.i, 1
  br label %macsec_frame_sci.exit

macsec_frame_sci.exit:                            ; preds = %if.else.i485, %if.then.i484
  %sci.0.i = phi i64 [ %sci.0.copyload.i, %if.then.i484 ], [ %sci.6.insert.insert.i.i, %if.else.i485 ]
  %112 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i.i.i = and i32 %112, -16384
  %113 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %113, i32 0, i32 1
  %114 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %115, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !227
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %macsec_frame_sci.exit.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

macsec_frame_sci.exit.rcu_read_lock.exit_crit_edge: ; preds = %macsec_frame_sci.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %macsec_frame_sci.exit
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 696, ptr noundef nonnull @.str.48) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %macsec_frame_sci.exit.rcu_read_lock.exit_crit_edge
  %116 = getelementptr inbounds %struct.anon.0, ptr %skb.addr.0.i544, i32 0, i32 2
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %116, align 8
  %rx_handler_data.i = getelementptr inbounds %struct.net_device, ptr %118, i32 0, i32 95
  %119 = ptrtoint ptr %rx_handler_data.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile ptr, ptr %rx_handler_data.i, align 4
  %call.i487 = tail call i32 @rcu_read_lock_bh_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i487)
  %tobool.not.i488 = icmp eq i32 %call.i487, 0
  br i1 %tobool.not.i488, label %land.lhs.true.i490, label %rcu_read_lock.exit.macsec_data_rcu.exit_crit_edge

rcu_read_lock.exit.macsec_data_rcu.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rcu.exit

land.lhs.true.i490:                               ; preds = %rcu_read_lock.exit
  %call2.i489 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i489)
  %tobool3.not.i = icmp eq i32 %call2.i489, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i490.macsec_data_rcu.exit_crit_edge, label %land.lhs.true4.i

land.lhs.true.i490.macsec_data_rcu.exit_crit_edge: ; preds = %land.lhs.true.i490
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rcu.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i490
  %.b9.i = load i1, ptr @macsec_data_rcu.__warned, align 1
  br i1 %.b9.i, label %land.lhs.true4.i.macsec_data_rcu.exit_crit_edge, label %if.then.i491

land.lhs.true4.i.macsec_data_rcu.exit_crit_edge:  ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rcu.exit

if.then.i491:                                     ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 131, ptr noundef nonnull @.str.38) #18
  br label %macsec_data_rcu.exit

macsec_data_rcu.exit:                             ; preds = %if.then.i491, %land.lhs.true4.i.macsec_data_rcu.exit_crit_edge, %land.lhs.true.i490.macsec_data_rcu.exit_crit_edge, %rcu_read_lock.exit.macsec_data_rcu.exit_crit_edge
  %call52 = tail call i32 @rcu_read_lock_any_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %land.lhs.true, label %macsec_data_rcu.exit.for.cond.preheader_crit_edge

macsec_data_rcu.exit.for.cond.preheader_crit_edge: ; preds = %macsec_data_rcu.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.cond.preheader

land.lhs.true:                                    ; preds = %macsec_data_rcu.exit
  %call54 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %land.lhs.true.for.cond.preheader_crit_edge, label %land.lhs.true56

land.lhs.true.for.cond.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.cond.preheader

land.lhs.true56:                                  ; preds = %land.lhs.true
  %.b458 = load i1, ptr @macsec_handle_frame.__warned, align 1
  br i1 %.b458, label %land.lhs.true56.for.cond.preheader_crit_edge, label %if.then58

land.lhs.true56.for.cond.preheader_crit_edge:     ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.cond.preheader

if.then58:                                        ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_handle_frame.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1134, ptr noundef nonnull @.str.46) #18
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then58, %land.lhs.true56.for.cond.preheader_crit_edge, %land.lhs.true.for.cond.preheader_crit_edge, %macsec_data_rcu.exit.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %cond.end.for.cond_crit_edge, %for.cond.preheader
  %.pn.in = phi ptr [ %.pn, %cond.end.for.cond_crit_edge ], [ %120, %for.cond.preheader ]
  %121 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %121)
  %.pn = load volatile ptr, ptr %.pn.in, align 4
  %cmp66.not = icmp eq ptr %.pn, %120
  br i1 %cmp66.not, label %for.cond.nosci_crit_edge, label %for.body

for.cond.nosci_crit_edge:                         ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #20
  br label %nosci

for.body:                                         ; preds = %for.cond
  %rx_sc1.i = getelementptr i8, ptr %.pn, i32 -12
  %122 = ptrtoint ptr %rx_sc1.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile ptr, ptr %rx_sc1.i, align 4
  %call.i492 = call i32 @rcu_read_lock_bh_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i492)
  %tobool.not.i493 = icmp eq i32 %call.i492, 0
  br i1 %tobool.not.i493, label %land.lhs.true.i496, label %for.body.do.end8.i_crit_edge

for.body.do.end8.i_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end8.i

land.lhs.true.i496:                               ; preds = %for.body
  %call3.i494 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i494)
  %tobool4.not.i495 = icmp eq i32 %call3.i494, 0
  br i1 %tobool4.not.i495, label %land.lhs.true.i496.do.end8.i_crit_edge, label %land.lhs.true5.i497

land.lhs.true.i496.do.end8.i_crit_edge:           ; preds = %land.lhs.true.i496
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end8.i

land.lhs.true5.i497:                              ; preds = %land.lhs.true.i496
  %.b36.i = load i1, ptr @find_rx_sc.__warned, align 1
  br i1 %.b36.i, label %land.lhs.true5.i497.do.end8.i_crit_edge, label %if.then.i498

land.lhs.true5.i497.do.end8.i_crit_edge:          ; preds = %land.lhs.true5.i497
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end8.i

if.then.i498:                                     ; preds = %land.lhs.true5.i497
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @find_rx_sc.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 975, ptr noundef nonnull @.str.38) #18
  br label %do.end8.i

do.end8.i:                                        ; preds = %if.then.i498, %land.lhs.true5.i497.do.end8.i_crit_edge, %land.lhs.true.i496.do.end8.i_crit_edge, %for.body.do.end8.i_crit_edge
  %tobool10.not37.i = icmp eq ptr %123, null
  br i1 %tobool10.not37.i, label %do.end8.i.cond.end_crit_edge, label %do.end8.i.for.body.i499_crit_edge

do.end8.i.for.body.i499_crit_edge:                ; preds = %do.end8.i
  br label %for.body.i499

do.end8.i.cond.end_crit_edge:                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cond.end

for.body.i499:                                    ; preds = %do.end29.i.for.body.i499_crit_edge, %do.end8.i.for.body.i499_crit_edge
  %rx_sc.038.i = phi ptr [ %127, %do.end29.i.for.body.i499_crit_edge ], [ %123, %do.end8.i.for.body.i499_crit_edge ]
  %sci11.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc.038.i, i32 0, i32 1
  %124 = ptrtoint ptr %sci11.i to i32
  call void @__asan_load8_noabort(i32 %124)
  %125 = load i64, ptr %sci11.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %125, i64 %sci.0.i)
  %cmp.i = icmp eq i64 %125, %sci.0.i
  br i1 %cmp.i, label %cond.true, label %for.inc.i500

for.inc.i500:                                     ; preds = %for.body.i499
  %126 = ptrtoint ptr %rx_sc.038.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load volatile ptr, ptr %rx_sc.038.i, align 8
  %call19.i = call i32 @rcu_read_lock_bh_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i)
  %tobool20.not.i = icmp eq i32 %call19.i, 0
  br i1 %tobool20.not.i, label %land.lhs.true21.i, label %for.inc.i500.do.end29.i_crit_edge

for.inc.i500.do.end29.i_crit_edge:                ; preds = %for.inc.i500
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end29.i

land.lhs.true21.i:                                ; preds = %for.inc.i500
  %call22.i = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22.i)
  %tobool23.not.i = icmp eq i32 %call22.i, 0
  br i1 %tobool23.not.i, label %land.lhs.true21.i.do.end29.i_crit_edge, label %land.lhs.true24.i

land.lhs.true21.i.do.end29.i_crit_edge:           ; preds = %land.lhs.true21.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end29.i

land.lhs.true24.i:                                ; preds = %land.lhs.true21.i
  %.b3435.i = load i1, ptr @find_rx_sc.__warned.49, align 1
  br i1 %.b3435.i, label %land.lhs.true24.i.do.end29.i_crit_edge, label %if.then26.i

land.lhs.true24.i.do.end29.i_crit_edge:           ; preds = %land.lhs.true24.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end29.i

if.then26.i:                                      ; preds = %land.lhs.true24.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @find_rx_sc.__warned.49, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 975, ptr noundef nonnull @.str.38) #18
  br label %do.end29.i

do.end29.i:                                       ; preds = %if.then26.i, %land.lhs.true24.i.do.end29.i_crit_edge, %land.lhs.true21.i.do.end29.i_crit_edge, %for.inc.i500.do.end29.i_crit_edge
  %tobool10.not.i = icmp eq ptr %127, null
  br i1 %tobool10.not.i, label %do.end29.i.cond.end_crit_edge, label %do.end29.i.for.body.i499_crit_edge

do.end29.i.for.body.i499_crit_edge:               ; preds = %do.end29.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body.i499

do.end29.i.cond.end_crit_edge:                    ; preds = %do.end29.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cond.end

cond.true:                                        ; preds = %for.body.i499
  %refcnt.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %rx_sc.038.i, i32 0, i32 5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i.i) #18
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #18
  %128 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %refcnt.i, align 4
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, %cond.true
  %130 = phi i32 [ %129, %cond.true ], [ %asmresult3.i.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge ]
  %131 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 %130, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %130)
  %tobool.not.i.i.i.i = icmp eq i32 %130, 0
  br i1 %tobool.not.i.i.i.i, label %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %do.cond.i.i.i.i

do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end4.i.i.i.i

do.cond.i.i.i.i:                                  ; preds = %do.body.i.i.i.i
  %add.i.i.i.i501 = add i32 %130, 1
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  %call.i3.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i.i, i32 noundef 4) #18
  %132 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %old.i.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  br label %do.body.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i:                            ; preds = %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i.i
  %134 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 %133, i32 %add.i.i.i.i501, ptr elementtype(i32) %refcnt.i) #18, !srcloc !223
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %134, 0
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body.i.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i:     ; preds = %do.body.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i = extractvalue { i32, i32 } %134, 1
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i, %133
  br i1 %cmp.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, !prof !204

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge
  %135 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %old.i.i.i.i, align 4
  %add5.i.i.i.i = add i32 %136, 1
  %137 = or i32 %add5.i.i.i.i, %136
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %137)
  %.not.i.i.i.i = icmp sgt i32 %137, -1
  br i1 %.not.i.i.i.i, label %if.end4.i.i.i.i.macsec_rxsc_get.exit_crit_edge, label %if.then10.i.i.i.i, !prof !204

if.end4.i.i.i.i.macsec_rxsc_get.exit_crit_edge:   ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_rxsc_get.exit

if.then10.i.i.i.i:                                ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 0) #18
  %138 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %.pr = load i32, ptr %old.i.i.i.i, align 4
  br label %macsec_rxsc_get.exit

macsec_rxsc_get.exit:                             ; preds = %if.then10.i.i.i.i, %if.end4.i.i.i.i.macsec_rxsc_get.exit_crit_edge
  %139 = phi i32 [ %136, %if.end4.i.i.i.i.macsec_rxsc_get.exit_crit_edge ], [ %.pr, %if.then10.i.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %139)
  %tobool12.i.i.i.not.i = icmp eq i32 %139, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i.i) #18
  %spec.select = select i1 %tobool12.i.i.i.not.i, ptr null, ptr %rx_sc.038.i
  br label %cond.end

cond.end:                                         ; preds = %macsec_rxsc_get.exit, %do.end29.i.cond.end_crit_edge, %do.end8.i.cond.end_crit_edge
  %cond = phi ptr [ null, %do.end8.i.cond.end_crit_edge ], [ %spec.select, %macsec_rxsc_get.exit ], [ null, %do.end29.i.cond.end_crit_edge ]
  %tobool72.not = icmp eq ptr %cond, null
  br i1 %tobool72.not, label %cond.end.for.cond_crit_edge, label %for.end

cond.end.for.cond_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.cond

for.end:                                          ; preds = %cond.end
  %macsec.0.le = getelementptr i8, ptr %.pn, i32 -72
  %tobool85.not = icmp eq ptr %macsec.0.le, null
  br i1 %tobool85.not, label %for.end.nosci_crit_edge, label %if.end87

for.end.nosci_crit_edge:                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %nosci

if.end87:                                         ; preds = %for.end
  %140 = ptrtoint ptr %macsec.0.le to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %macsec.0.le, align 8
  %add.ptr.i.i502 = getelementptr i8, ptr %141, i32 2304
  %142 = call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i = and i32 %142, -16384
  %143 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %143, i32 0, i32 3
  %144 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %145
  %146 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %arrayidx, align 4
  %stats101 = getelementptr inbounds %struct.macsec_rx_sc, ptr %cond, i32 0, i32 4
  %148 = ptrtoint ptr %stats101 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %stats101, align 4
  %150 = ptrtoint ptr %149 to i32
  %add106 = add i32 %147, %150
  %151 = inttoptr i32 %add106 to ptr
  %icv_len = getelementptr i8, ptr %.pn, i32 -54
  %152 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %152)
  %153 = load i16, ptr %icv_len, align 2
  %xpn = getelementptr i8, ptr %.pn, i32 -48
  %154 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %154)
  %155 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %155)
  %tobool107 = icmp ne i8 %155, 0
  %call108 = call fastcc zeroext i1 @macsec_validate_skb(ptr noundef nonnull %skb.addr.0.i544, i16 noundef zeroext %153, i1 noundef zeroext %tobool107)
  br i1 %call108, label %if.end112, label %if.then109

if.then109:                                       ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #20
  %stats = getelementptr i8, ptr %141, i32 2372
  %156 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %stats, align 4
  %158 = ptrtoint ptr %157 to i32
  %add = add i32 %147, %158
  %159 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_secy_stats, ptr %159, i32 0, i32 1
  call fastcc void @u64_stats_update_begin(ptr noundef %syncp)
  %InPktsBadTag = getelementptr inbounds %struct.macsec_dev_stats, ptr %159, i32 0, i32 4
  %160 = ptrtoint ptr %InPktsBadTag to i32
  call void @__asan_load8_noabort(i32 %160)
  %161 = load i64, ptr %InPktsBadTag, align 8
  %inc = add i64 %161, 1
  store i64 %inc, ptr %InPktsBadTag, align 8
  %dep_map.i.i = getelementptr inbounds %struct.pcpu_secy_stats, ptr %159, i32 0, i32 1, i32 0, i32 1
  %162 = call ptr @llvm.returnaddress(i32 0) #18
  %163 = ptrtoint ptr %162 to i32
  call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %163) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %164 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %165, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  br label %drop_nosa

if.end112:                                        ; preds = %if.end87
  %166 = ptrtoint ptr %assoc_num to i32
  call void @__asan_load1_noabort(i32 %166)
  %167 = load i8, ptr %assoc_num, align 4
  %idxprom = zext i8 %167 to i32
  %arrayidx115 = getelementptr %struct.macsec_rx_sc, ptr %cond, i32 0, i32 3, i32 %idxprom
  %168 = ptrtoint ptr %arrayidx115 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %arrayidx115, align 4
  %call116 = call fastcc ptr @macsec_rxsa_get(ptr noundef %169)
  %tobool117.not = icmp eq ptr %call116, null
  br i1 %tobool117.not, label %if.then118, label %if.end135

if.then118:                                       ; preds = %if.end112
  %170 = ptrtoint ptr %tci_an to i32
  call void @__asan_load1_noabort(i32 %170)
  %171 = load i8, ptr %tci_an, align 1
  %172 = and i8 %171, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %172)
  %tobool122.not = icmp eq i8 %172, 0
  br i1 %tobool122.not, label %lor.lhs.false, label %if.then118.if.then125_crit_edge

if.then118.if.then125_crit_edge:                  ; preds = %if.then118
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then125

lor.lhs.false:                                    ; preds = %if.then118
  %validate_frames = getelementptr i8, ptr %.pn, i32 -52
  %173 = ptrtoint ptr %validate_frames to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %validate_frames, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %174)
  %cmp123 = icmp eq i32 %174, 2
  br i1 %cmp123, label %lor.lhs.false.if.then125_crit_edge, label %if.end130

lor.lhs.false.if.then125_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then125

if.then125:                                       ; preds = %lor.lhs.false.if.then125_crit_edge, %if.then118.if.then125_crit_edge
  %syncp126 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %151, i32 0, i32 1
  call fastcc void @u64_stats_update_begin(ptr noundef %syncp126)
  %InPktsNotUsingSA = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %151, i32 0, i32 8
  %175 = ptrtoint ptr %InPktsNotUsingSA to i32
  call void @__asan_load8_noabort(i32 %175)
  %176 = load i64, ptr %InPktsNotUsingSA, align 8
  %inc128 = add i64 %176, 1
  store i64 %inc128, ptr %InPktsNotUsingSA, align 8
  %dep_map.i.i504 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %151, i32 0, i32 1, i32 0, i32 1
  %177 = call ptr @llvm.returnaddress(i32 0) #18
  %178 = ptrtoint ptr %177 to i32
  call void @lock_release(ptr noundef %dep_map.i.i504, i32 noundef %178) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %179 = ptrtoint ptr %syncp126 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %syncp126, align 4
  %inc.i.i.i505 = add i32 %180, 1
  store i32 %inc.i.i.i505, ptr %syncp126, align 4
  br label %drop_nosa

if.end130:                                        ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  %syncp131 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %151, i32 0, i32 1
  call fastcc void @u64_stats_update_begin(ptr noundef %syncp131)
  %InPktsUnusedSA = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %151, i32 0, i32 9
  %181 = ptrtoint ptr %InPktsUnusedSA to i32
  call void @__asan_load8_noabort(i32 %181)
  %182 = load i64, ptr %InPktsUnusedSA, align 8
  %inc133 = add i64 %182, 1
  store i64 %inc133, ptr %InPktsUnusedSA, align 8
  %dep_map.i.i506 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %151, i32 0, i32 1, i32 0, i32 1
  %183 = call ptr @llvm.returnaddress(i32 0) #18
  %184 = ptrtoint ptr %183 to i32
  call void @lock_release(ptr noundef %dep_map.i.i506, i32 noundef %184) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %185 = ptrtoint ptr %syncp131 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %syncp131, align 4
  %inc.i.i.i507 = add i32 %186, 1
  store i32 %inc.i.i.i507, ptr %syncp131, align 4
  br label %deliver

if.end135:                                        ; preds = %if.end112
  %packet_number = getelementptr inbounds %struct.macsec_eth_header, ptr %add.ptr.i.i481, i32 0, i32 3
  %187 = ptrtoint ptr %packet_number to i32
  call void @__asan_loadN_noabort(i32 %187, i32 4)
  %188 = load i32, ptr %packet_number, align 1
  %replay_protect = getelementptr i8, ptr %.pn, i32 -45
  %189 = ptrtoint ptr %replay_protect to i32
  call void @__asan_load1_noabort(i32 %189)
  %190 = load i8, ptr %replay_protect, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %190)
  %tobool136.not = icmp eq i8 %190, 0
  br i1 %tobool136.not, label %if.end135.if.end169_crit_edge, label %if.then137

if.end135.if.end169_crit_edge:                    ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end169

if.then137:                                       ; preds = %if.end135
  %lock = getelementptr inbounds %struct.macsec_rx_sa, ptr %call116, i32 0, i32 2
  call void @_raw_spin_lock(ptr noundef %lock) #18
  %191 = getelementptr inbounds %struct.macsec_rx_sa, ptr %call116, i32 0, i32 3
  %lower = getelementptr inbounds %struct.anon.148, ptr %191, i32 0, i32 1
  %192 = ptrtoint ptr %lower to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %lower, align 4
  %replay_window = getelementptr i8, ptr %.pn, i32 -44
  %194 = ptrtoint ptr %replay_window to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %replay_window, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %193, i32 %195)
  %cmp138.not = icmp uge i32 %193, %195
  %sub = sub i32 %193, %195
  call void @__sanitizer_cov_trace_cmp4(i32 %188, i32 %sub)
  %cmp142 = icmp ult i32 %188, %sub
  %196 = select i1 %cmp138.not, i1 %cmp142, i1 false
  %197 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %197)
  %198 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %198)
  %tobool146.not = icmp eq i8 %198, 0
  br i1 %tobool146.not, label %if.end157, label %if.then147

if.then147:                                       ; preds = %if.then137
  br i1 %196, label %land.rhs150, label %if.end165.critedge

land.rhs150:                                      ; preds = %if.then147
  %shr457 = xor i32 %193, %188
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %shr457)
  %tobool153.not = icmp sgt i32 %shr457, -1
  call void @_raw_spin_unlock(ptr noundef %lock) #18
  br i1 %tobool153.not, label %land.rhs150.cleanup166_crit_edge, label %land.rhs150.if.end169_crit_edge

land.rhs150.if.end169_crit_edge:                  ; preds = %land.rhs150
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end169

land.rhs150.cleanup166_crit_edge:                 ; preds = %land.rhs150
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup166

if.end157:                                        ; preds = %if.then137
  call void @_raw_spin_unlock(ptr noundef %lock) #18
  br i1 %196, label %if.end157.cleanup166_crit_edge, label %if.end157.if.end169_crit_edge

if.end157.if.end169_crit_edge:                    ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end169

if.end157.cleanup166_crit_edge:                   ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup166

if.end165.critedge:                               ; preds = %if.then147
  call void @__sanitizer_cov_trace_pc() #20
  call void @_raw_spin_unlock(ptr noundef %lock) #18
  br label %if.end169

cleanup166:                                       ; preds = %if.end157.cleanup166_crit_edge, %land.rhs150.cleanup166_crit_edge
  %syncp161 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %151, i32 0, i32 1
  call fastcc void @u64_stats_update_begin(ptr noundef %syncp161)
  %InPktsLate = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %151, i32 0, i32 6
  %199 = ptrtoint ptr %InPktsLate to i32
  call void @__asan_load8_noabort(i32 %199)
  %200 = load i64, ptr %InPktsLate, align 8
  %inc163 = add i64 %200, 1
  store i64 %inc163, ptr %InPktsLate, align 8
  %dep_map.i.i508 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %151, i32 0, i32 1, i32 0, i32 1
  %201 = call ptr @llvm.returnaddress(i32 0) #18
  %202 = ptrtoint ptr %201 to i32
  call void @lock_release(ptr noundef %dep_map.i.i508, i32 noundef %202) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %203 = ptrtoint ptr %syncp161 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %syncp161, align 4
  %inc.i.i.i509 = add i32 %204, 1
  store i32 %inc.i.i.i509, ptr %syncp161, align 4
  br label %drop

if.end169:                                        ; preds = %if.end165.critedge, %if.end157.if.end169_crit_edge, %land.rhs150.if.end169_crit_edge, %if.end135.if.end169_crit_edge
  %205 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i544, i32 0, i32 3, i32 4
  %206 = ptrtoint ptr %205 to i32
  call void @__asan_store4_noabort(i32 %206)
  store ptr %call116, ptr %205, align 4
  %207 = ptrtoint ptr %tci_an to i32
  call void @__asan_load1_noabort(i32 %207)
  %208 = load i8, ptr %tci_an, align 1
  %209 = and i8 %208, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %209)
  %tobool174.not = icmp eq i8 %209, 0
  br i1 %tobool174.not, label %lor.lhs.false175, label %if.end169.if.then179_crit_edge

if.end169.if.then179_crit_edge:                   ; preds = %if.end169
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then179

lor.lhs.false175:                                 ; preds = %if.end169
  %validate_frames176 = getelementptr i8, ptr %.pn, i32 -52
  %210 = ptrtoint ptr %validate_frames176 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %validate_frames176, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %211)
  %cmp177.not = icmp eq i32 %211, 0
  br i1 %cmp177.not, label %lor.lhs.false175.if.end181_crit_edge, label %lor.lhs.false175.if.then179_crit_edge

lor.lhs.false175.if.then179_crit_edge:            ; preds = %lor.lhs.false175
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then179

lor.lhs.false175.if.end181_crit_edge:             ; preds = %lor.lhs.false175
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end181

if.then179:                                       ; preds = %lor.lhs.false175.if.then179_crit_edge, %if.end169.if.then179_crit_edge
  %call180 = call fastcc ptr @macsec_decrypt(ptr noundef nonnull %skb.addr.0.i544, ptr noundef %141, ptr noundef nonnull %call116, i64 noundef %sci.0.i, ptr noundef nonnull %macsec.0.le)
  br label %if.end181

if.end181:                                        ; preds = %if.then179, %lor.lhs.false175.if.end181_crit_edge
  %skb.0 = phi ptr [ %call180, %if.then179 ], [ %skb.addr.0.i544, %lor.lhs.false175.if.end181_crit_edge ]
  %cmp.i511 = icmp ugt ptr %skb.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i511, label %if.then183, label %if.end189

if.then183:                                       ; preds = %if.end181
  %cmp185.not = icmp eq ptr %skb.0, inttoptr (i32 -115 to ptr)
  br i1 %cmp185.not, label %if.then183.if.end188_crit_edge, label %if.then187

if.then183.if.end188_crit_edge:                   ; preds = %if.then183
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end188

if.then187:                                       ; preds = %if.then183
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @macsec_rxsa_put(ptr noundef nonnull %call116)
  call fastcc void @macsec_rxsc_put(ptr noundef nonnull %cond)
  br label %if.end188

if.end188:                                        ; preds = %if.then187, %if.then183.if.end188_crit_edge
  call fastcc void @rcu_read_unlock()
  %212 = ptrtoint ptr %pskb to i32
  call void @__asan_store4_noabort(i32 %212)
  store ptr null, ptr %pskb, align 4
  br label %cleanup316

if.end189:                                        ; preds = %if.end181
  %call190 = call fastcc zeroext i1 @macsec_post_decrypt(ptr noundef %skb.0, ptr noundef nonnull %macsec.0.le, i32 noundef %188)
  br i1 %call190, label %if.end189.deliver_crit_edge, label %if.end189.drop_crit_edge

if.end189.drop_crit_edge:                         ; preds = %if.end189
  call void @__sanitizer_cov_trace_pc() #20
  br label %drop

if.end189.deliver_crit_edge:                      ; preds = %if.end189
  call void @__sanitizer_cov_trace_pc() #20
  br label %deliver

deliver:                                          ; preds = %if.end189.deliver_crit_edge, %if.end130
  %skb.1 = phi ptr [ %skb.0, %if.end189.deliver_crit_edge ], [ %skb.addr.0.i544, %if.end130 ]
  %213 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %213)
  %214 = load i16, ptr %icv_len, align 2
  %conv194 = trunc i16 %214 to i8
  %has_sci196 = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 3, i32 10
  %215 = ptrtoint ptr %has_sci196 to i32
  call void @__asan_load1_noabort(i32 %215)
  %216 = load i8, ptr %has_sci196, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %216)
  %tobool197.not = icmp eq i8 %216, 0
  %conv199 = select i1 %tobool197.not, i8 8, i8 16
  call fastcc void @macsec_finalize_skb(ptr noundef %skb.1, i8 noundef zeroext %conv194, i8 noundef zeroext %conv199)
  %217 = ptrtoint ptr %macsec.0.le to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %macsec.0.le, align 8
  call fastcc void @macsec_reset_skb(ptr noundef %skb.1, ptr noundef %218)
  br i1 %tobool117.not, label %deliver.if.end203_crit_edge, label %if.then202

deliver.if.end203_crit_edge:                      ; preds = %deliver
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end203

if.then202:                                       ; preds = %deliver
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @macsec_rxsa_put(ptr noundef nonnull %call116)
  br label %if.end203

if.end203:                                        ; preds = %if.then202, %deliver.if.end203_crit_edge
  call fastcc void @macsec_rxsc_put(ptr noundef nonnull %cond)
  %destructor.i = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 4, i32 0, i32 1
  %219 = ptrtoint ptr %destructor.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %destructor.i, align 4
  %tobool.not.i514 = icmp eq ptr %220, null
  br i1 %tobool.not.i514, label %do.body.i, label %if.then.i515

if.then.i515:                                     ; preds = %if.end203
  call void @__sanitizer_cov_trace_pc() #20
  call void %220(ptr noundef %skb.1) #18
  %221 = ptrtoint ptr %destructor.i to i32
  call void @__asan_store4_noabort(i32 %221)
  store ptr null, ptr %destructor.i, align 4
  %222 = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 1
  %223 = ptrtoint ptr %222 to i32
  call void @__asan_store4_noabort(i32 %223)
  store ptr null, ptr %222, align 4
  br label %skb_orphan.exit

do.body.i:                                        ; preds = %if.end203
  %224 = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 1
  %225 = ptrtoint ptr %224 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %224, align 4
  %tobool3.not.i516 = icmp eq ptr %226, null
  br i1 %tobool3.not.i516, label %do.body.i.skb_orphan.exit_crit_edge, label %do.body7.i, !prof !204

do.body.i.skb_orphan.exit_crit_edge:              ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %skb_orphan.exit

do.body7.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #18, !srcloc !229
  unreachable

skb_orphan.exit:                                  ; preds = %do.body.i.skb_orphan.exit_crit_edge, %if.then.i515
  %len204 = getelementptr inbounds %struct.sk_buff, ptr %skb.1, i32 0, i32 6
  %227 = ptrtoint ptr %len204 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %len204, align 4
  %gro_cells = getelementptr i8, ptr %141, i32 2384
  %call205 = call i32 @gro_cells_receive(ptr noundef %gro_cells, ptr noundef %skb.1) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call205)
  %cmp206 = icmp eq i32 %call205, 0
  br i1 %cmp206, label %if.then208, label %if.else

if.then208:                                       ; preds = %skb_orphan.exit
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @count_rx(ptr noundef %141, i32 noundef %228)
  br label %if.end213

if.else:                                          ; preds = %skb_orphan.exit
  call void @__sanitizer_cov_trace_pc() #20
  %229 = ptrtoint ptr %add.ptr.i.i502 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %add.ptr.i.i502, align 8
  %rx_dropped = getelementptr inbounds %struct.net_device, ptr %230, i32 0, i32 36, i32 6
  %231 = ptrtoint ptr %rx_dropped to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %rx_dropped, align 8
  %inc212 = add i32 %232, 1
  store i32 %inc212, ptr %rx_dropped, align 8
  br label %if.end213

if.end213:                                        ; preds = %if.else, %if.then208
  call fastcc void @rcu_read_unlock()
  %233 = ptrtoint ptr %pskb to i32
  call void @__asan_store4_noabort(i32 %233)
  store ptr null, ptr %pskb, align 4
  br label %cleanup316

drop:                                             ; preds = %if.end189.drop_crit_edge, %cleanup166
  %skb.2 = phi ptr [ %skb.addr.0.i544, %cleanup166 ], [ %skb.0, %if.end189.drop_crit_edge ]
  call fastcc void @macsec_rxsa_put(ptr noundef nonnull %call116)
  br label %drop_nosa

drop_nosa:                                        ; preds = %drop, %if.then125, %if.then109
  %skb.3 = phi ptr [ %skb.2, %drop ], [ %skb.addr.0.i544, %if.then125 ], [ %skb.addr.0.i544, %if.then109 ]
  call fastcc void @macsec_rxsc_put(ptr noundef nonnull %cond)
  call fastcc void @rcu_read_unlock()
  br label %drop_direct

drop_direct:                                      ; preds = %drop_nosa, %if.end24.drop_direct_crit_edge, %pskb_may_pull.exit477.drop_direct_crit_edge, %if.end.i471.drop_direct_crit_edge, %entry.drop_direct_crit_edge
  %skb.4 = phi ptr [ %1, %entry.drop_direct_crit_edge ], [ %skb.3, %drop_nosa ], [ %skb.addr.0.i544, %pskb_may_pull.exit477.drop_direct_crit_edge ], [ %skb.addr.0.i544, %if.end24.drop_direct_crit_edge ], [ %skb.addr.0.i544, %if.end.i471.drop_direct_crit_edge ]
  call void @kfree_skb_reason(ptr noundef %skb.4, i32 noundef 0) #18
  %234 = ptrtoint ptr %pskb to i32
  call void @__asan_store4_noabort(i32 %234)
  store ptr null, ptr %pskb, align 4
  br label %cleanup316

nosci:                                            ; preds = %for.end.nosci_crit_edge, %for.cond.nosci_crit_edge
  %235 = ptrtoint ptr %tci_an to i32
  call void @__asan_load1_noabort(i32 %235)
  %236 = load i8, ptr %tci_an, align 1
  %237 = and i8 %236, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %237)
  %tobool217.not = icmp eq i8 %237, 0
  br i1 %tobool217.not, label %if.then222, label %nosci.do.body229_crit_edge

nosci.do.body229_crit_edge:                       ; preds = %nosci
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body229

if.then222:                                       ; preds = %nosci
  call void @__sanitizer_cov_trace_pc() #20
  %238 = ptrtoint ptr %has_sci to i32
  call void @__asan_load1_noabort(i32 %238)
  %239 = load i8, ptr %has_sci, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %239)
  %tobool225.not = icmp eq i8 %239, 0
  %conv227 = select i1 %tobool225.not, i8 8, i8 16
  call fastcc void @macsec_finalize_skb(ptr noundef nonnull %skb.addr.0.i544, i8 noundef zeroext 16, i8 noundef zeroext %conv227)
  br label %do.body229

do.body229:                                       ; preds = %if.then222, %nosci.do.body229_crit_edge
  %call230 = call i32 @rcu_read_lock_any_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call230)
  %tobool231.not = icmp eq i32 %call230, 0
  br i1 %tobool231.not, label %land.lhs.true232, label %do.body229.do.end240_crit_edge

do.body229.do.end240_crit_edge:                   ; preds = %do.body229
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end240

land.lhs.true232:                                 ; preds = %do.body229
  %call233 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call233)
  %tobool234.not = icmp eq i32 %call233, 0
  br i1 %tobool234.not, label %land.lhs.true232.do.end240_crit_edge, label %land.lhs.true235

land.lhs.true232.do.end240_crit_edge:             ; preds = %land.lhs.true232
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end240

land.lhs.true235:                                 ; preds = %land.lhs.true232
  %.b454456 = load i1, ptr @macsec_handle_frame.__warned.47, align 1
  br i1 %.b454456, label %land.lhs.true235.do.end240_crit_edge, label %if.then237

land.lhs.true235.do.end240_crit_edge:             ; preds = %land.lhs.true235
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end240

if.then237:                                       ; preds = %land.lhs.true235
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_handle_frame.__warned.47, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1266, ptr noundef nonnull @.str.46) #18
  br label %do.end240

do.end240:                                        ; preds = %if.then237, %land.lhs.true235.do.end240_crit_edge, %land.lhs.true232.do.end240_crit_edge, %do.body229.do.end240_crit_edge
  %240 = ptrtoint ptr %120 to i32
  call void @__asan_load4_noabort(i32 %240)
  %.pn455565 = load volatile ptr, ptr %120, align 4
  %cmp253.not567 = icmp eq ptr %.pn455565, %120
  br i1 %cmp253.not567, label %do.end240.for.end315_crit_edge, label %do.end240.for.body255_crit_edge

do.end240.for.body255_crit_edge:                  ; preds = %do.end240
  br label %for.body255

do.end240.for.end315_crit_edge:                   ; preds = %do.end240
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end315

for.body255:                                      ; preds = %cleanup302.for.body255_crit_edge, %do.end240.for.body255_crit_edge
  %.pn455568 = phi ptr [ %.pn455, %cleanup302.for.body255_crit_edge ], [ %.pn455565, %do.end240.for.body255_crit_edge ]
  %macsec.1569 = getelementptr i8, ptr %.pn455568, i32 -72
  %stats262 = getelementptr i8, ptr %.pn455568, i32 -4
  %241 = ptrtoint ptr %stats262 to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %stats262, align 4
  %243 = ptrtoint ptr %242 to i32
  %244 = call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i520 = and i32 %244, -16384
  %245 = inttoptr i32 %and.i520 to ptr
  %cpu265 = getelementptr inbounds %struct.thread_info, ptr %245, i32 0, i32 3
  %246 = ptrtoint ptr %cpu265 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %cpu265, align 4
  %arrayidx266 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %247
  %248 = ptrtoint ptr %arrayidx266 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %arrayidx266, align 4
  %add267 = add i32 %249, %243
  %250 = inttoptr i32 %add267 to ptr
  br i1 %tobool217.not, label %lor.lhs.false270, label %for.body255.if.then275_crit_edge

for.body255.if.then275_crit_edge:                 ; preds = %for.body255
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then275

lor.lhs.false270:                                 ; preds = %for.body255
  %validate_frames272 = getelementptr i8, ptr %.pn455568, i32 -52
  %251 = ptrtoint ptr %validate_frames272 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %validate_frames272, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %252)
  %cmp273 = icmp eq i32 %252, 2
  br i1 %cmp273, label %lor.lhs.false270.if.then275_crit_edge, label %if.end280

lor.lhs.false270.if.then275_crit_edge:            ; preds = %lor.lhs.false270
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then275

if.then275:                                       ; preds = %lor.lhs.false270.if.then275_crit_edge, %for.body255.if.then275_crit_edge
  %syncp276 = getelementptr inbounds %struct.pcpu_secy_stats, ptr %250, i32 0, i32 1
  call fastcc void @u64_stats_update_begin(ptr noundef %syncp276)
  %InPktsNoSCI = getelementptr inbounds %struct.macsec_dev_stats, ptr %250, i32 0, i32 6
  %253 = ptrtoint ptr %InPktsNoSCI to i32
  call void @__asan_load8_noabort(i32 %253)
  %254 = load i64, ptr %InPktsNoSCI, align 8
  %inc278 = add i64 %254, 1
  store i64 %inc278, ptr %InPktsNoSCI, align 8
  %dep_map.i.i521 = getelementptr inbounds %struct.pcpu_secy_stats, ptr %250, i32 0, i32 1, i32 0, i32 1
  %255 = call ptr @llvm.returnaddress(i32 0) #18
  %256 = ptrtoint ptr %255 to i32
  call void @lock_release(ptr noundef %dep_map.i.i521, i32 noundef %256) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %257 = ptrtoint ptr %syncp276 to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %syncp276, align 4
  %inc.i.i.i522 = add i32 %258, 1
  store i32 %inc.i.i.i522, ptr %syncp276, align 4
  br label %cleanup302

if.end280:                                        ; preds = %lor.lhs.false270
  %call281 = call ptr @skb_clone(ptr noundef nonnull %skb.addr.0.i544, i32 noundef 2592) #18
  %tobool282.not = icmp eq ptr %call281, null
  br i1 %tobool282.not, label %if.end280.for.end315_crit_edge, label %if.end284

if.end280.for.end315_crit_edge:                   ; preds = %if.end280
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end315

if.end284:                                        ; preds = %if.end280
  %259 = ptrtoint ptr %macsec.1569 to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load ptr, ptr %macsec.1569, align 8
  %pkt_type.i523 = getelementptr inbounds %struct.sk_buff, ptr %call281, i32 0, i32 15
  %261 = ptrtoint ptr %pkt_type.i523 to i32
  call void @__asan_load2_noabort(i32 %261)
  %bf.load.i524 = load i16, ptr %pkt_type.i523, align 8
  %bf.clear.i525 = and i16 %bf.load.i524, 8191
  store i16 %bf.clear.i525, ptr %pkt_type.i523, align 8
  %call.i526 = call zeroext i16 @eth_type_trans(ptr noundef nonnull %call281, ptr noundef %260) #18
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %call281, i32 0, i32 15, i32 0, i32 18
  %262 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %262)
  store i16 %call.i526, ptr %protocol.i, align 8
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %call281, i32 0, i32 19
  %263 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %data.i.i, align 4
  %head.i.i527 = getelementptr inbounds %struct.sk_buff, ptr %call281, i32 0, i32 18
  %265 = ptrtoint ptr %head.i.i527 to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %head.i.i527, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %264 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %266 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %conv.i.i528 = trunc i32 %sub.ptr.sub.i.i to i16
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %call281, i32 0, i32 15, i32 0, i32 20
  %267 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_store2_noabort(i32 %267)
  store i16 %conv.i.i528, ptr %network_header.i.i, align 4
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %call281, i32 0, i32 15, i32 0, i32 19
  %268 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %268)
  %269 = load i16, ptr %transport_header.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %269)
  %cmp.i.not.i529 = icmp eq i16 %269, -1
  br i1 %cmp.i.not.i529, label %if.then.i530, label %if.end284.macsec_reset_skb.exit_crit_edge

if.end284.macsec_reset_skb.exit_crit_edge:        ; preds = %if.end284
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_reset_skb.exit

if.then.i530:                                     ; preds = %if.end284
  call void @__sanitizer_cov_trace_pc() #20
  %270 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_store2_noabort(i32 %270)
  store i16 %conv.i.i528, ptr %transport_header.i.i, align 2
  br label %macsec_reset_skb.exit

macsec_reset_skb.exit:                            ; preds = %if.then.i530, %if.end284.macsec_reset_skb.exit_crit_edge
  %mac_header.i.i531 = getelementptr inbounds %struct.sk_buff, ptr %call281, i32 0, i32 15, i32 0, i32 21
  %271 = ptrtoint ptr %mac_header.i.i531 to i32
  call void @__asan_load2_noabort(i32 %271)
  %272 = load i16, ptr %mac_header.i.i531, align 2
  %sub.i.i532 = sub i16 %conv.i.i528, %272
  %mac_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %call281, i32 0, i32 8
  %273 = ptrtoint ptr %mac_len.i.i to i32
  call void @__asan_store2_noabort(i32 %273)
  store i16 %sub.i.i532, ptr %mac_len.i.i, align 4
  %call287 = call i32 @netif_rx(ptr noundef nonnull %call281) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call287)
  %cmp288 = icmp eq i32 %call287, 0
  br i1 %cmp288, label %if.then290, label %if.else295

if.then290:                                       ; preds = %macsec_reset_skb.exit
  call void @__sanitizer_cov_trace_pc() #20
  %syncp291 = getelementptr inbounds %struct.pcpu_secy_stats, ptr %250, i32 0, i32 1
  call fastcc void @u64_stats_update_begin(ptr noundef %syncp291)
  %InPktsUnknownSCI = getelementptr inbounds %struct.macsec_dev_stats, ptr %250, i32 0, i32 5
  %274 = ptrtoint ptr %InPktsUnknownSCI to i32
  call void @__asan_load8_noabort(i32 %274)
  %275 = load i64, ptr %InPktsUnknownSCI, align 8
  %inc293 = add i64 %275, 1
  store i64 %inc293, ptr %InPktsUnknownSCI, align 8
  %dep_map.i.i534 = getelementptr inbounds %struct.pcpu_secy_stats, ptr %250, i32 0, i32 1, i32 0, i32 1
  %276 = call ptr @llvm.returnaddress(i32 0) #18
  %277 = ptrtoint ptr %276 to i32
  call void @lock_release(ptr noundef %dep_map.i.i534, i32 noundef %277) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %278 = ptrtoint ptr %syncp291 to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %syncp291, align 4
  %inc.i.i.i535 = add i32 %279, 1
  store i32 %inc.i.i.i535, ptr %syncp291, align 4
  br label %cleanup302

if.else295:                                       ; preds = %macsec_reset_skb.exit
  call void @__sanitizer_cov_trace_pc() #20
  %280 = ptrtoint ptr %macsec.1569 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %macsec.1569, align 8
  %rx_dropped299 = getelementptr inbounds %struct.net_device, ptr %281, i32 0, i32 36, i32 6
  %282 = ptrtoint ptr %rx_dropped299 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %rx_dropped299, align 8
  %inc300 = add i32 %283, 1
  store i32 %inc300, ptr %rx_dropped299, align 8
  br label %cleanup302

cleanup302:                                       ; preds = %if.else295, %if.then290, %if.then275
  %284 = ptrtoint ptr %.pn455568 to i32
  call void @__asan_load4_noabort(i32 %284)
  %.pn455 = load volatile ptr, ptr %.pn455568, align 4
  %cmp253.not = icmp eq ptr %.pn455, %120
  br i1 %cmp253.not, label %cleanup302.for.end315_crit_edge, label %cleanup302.for.body255_crit_edge

cleanup302.for.body255_crit_edge:                 ; preds = %cleanup302
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body255

cleanup302.for.end315_crit_edge:                  ; preds = %cleanup302
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end315

for.end315:                                       ; preds = %cleanup302.for.end315_crit_edge, %if.end280.for.end315_crit_edge, %do.end240.for.end315_crit_edge
  call fastcc void @rcu_read_unlock()
  %285 = ptrtoint ptr %pskb to i32
  call void @__asan_store4_noabort(i32 %285)
  store ptr %skb.addr.0.i544, ptr %pskb, align 4
  br label %cleanup316

cleanup316:                                       ; preds = %for.end315, %drop_direct, %if.end213, %if.end188, %if.end18.cleanup316_crit_edge, %skb_unshare.exit.cleanup316_crit_edge, %skb_unshare.exit.thread, %handle_not_macsec.exit
  %retval.0 = phi i32 [ 0, %drop_direct ], [ %ret.2.i, %handle_not_macsec.exit ], [ 0, %if.end188 ], [ 0, %if.end213 ], [ 3, %for.end315 ], [ 0, %skb_unshare.exit.cleanup316_crit_edge ], [ 3, %if.end18.cleanup316_crit_edge ], [ 0, %skb_unshare.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdevice(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_upper_dev_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @sci_exists(ptr nocapture noundef readonly %dev, i64 noundef %sci) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call.i, label %entry.macsec_data_rtnl.exit_crit_edge, label %land.lhs.true.i

entry.macsec_data_rtnl.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.macsec_data_rtnl.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.macsec_data_rtnl.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @macsec_data_rtnl.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge, label %if.then.i

land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rtnl.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 136, ptr noundef nonnull @.str.4) #18
  br label %macsec_data_rtnl.exit

macsec_data_rtnl.exit:                            ; preds = %if.then.i, %land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge, %land.lhs.true.i.macsec_data_rtnl.exit_crit_edge, %entry.macsec_data_rtnl.exit_crit_edge
  %rx_handler_data.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 95
  %0 = ptrtoint ptr %rx_handler_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rx_handler_data.i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %macsec_data_rtnl.exit
  %.pn.in = phi ptr [ %1, %macsec_data_rtnl.exit ], [ %.pn, %for.body.for.cond_crit_edge ]
  %2 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %1
  br i1 %cmp.not, label %for.cond.cleanup_crit_edge, label %for.body

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %sci3 = getelementptr i8, ptr %.pn, i32 -64
  %3 = ptrtoint ptr %sci3 to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %sci3, align 8
  %cmp4 = icmp eq i64 %4, %sci
  br i1 %cmp4, label %for.body.cleanup_crit_edge, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.cond

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %for.cond.cleanup_crit_edge
  %5 = xor i1 %cmp.not, true
  ret i1 %5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @macsec_add_dev(ptr noundef %dev, i64 noundef %sci, i8 noundef zeroext %icv_len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %call2 = tail call noalias ptr @__alloc_percpu_gfp(i32 noundef 96, i32 noundef 8, i32 noundef 3264) #23
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.end.thread, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %call394 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call394, i32 %0)
  %cmp95 = icmp ult i32 %call394, %0
  br i1 %cmp95, label %for.body.lr.ph, label %for.cond.preheader.if.end12_crit_edge

for.cond.preheader.if.end12_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end12

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %1 = ptrtoint ptr %call2 to i32
  br label %for.body

if.end.thread:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %stats91 = getelementptr i8, ptr %dev, i32 2372
  %2 = ptrtoint ptr %stats91 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %stats91, align 4
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %call396 = phi i32 [ %call394, %for.body.lr.ph ], [ %call3, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call396
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx, align 4
  %add = add i32 %4, %1
  %5 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_secy_stats, ptr %5, i32 0, i32 1
  %dep_map.i = getelementptr inbounds %struct.pcpu_secy_stats, ptr %5, i32 0, i32 1, i32 0, i32 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef nonnull @.str.10, ptr noundef nonnull @macsec_add_dev.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  %6 = ptrtoint ptr %syncp to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %syncp, align 4
  %call3 = tail call i32 @cpumask_next(i32 noundef %call396, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %7 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call3, %7
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.if.end12_crit_edge

for.body.if.end12_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end12

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

if.end12:                                         ; preds = %for.body.if.end12_crit_edge, %for.cond.preheader.if.end12_crit_edge
  %stats = getelementptr i8, ptr %dev, i32 2372
  %8 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call2, ptr %stats, align 4
  %call14 = tail call noalias ptr @__alloc_percpu_gfp(i32 noundef 64, i32 noundef 8, i32 noundef 3264) #23
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.then44, label %for.cond18.preheader

for.cond18.preheader:                             ; preds = %if.end12
  %call1997 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call1997, i32 %9)
  %cmp2098 = icmp ult i32 %call1997, %9
  br i1 %cmp2098, label %for.body21.lr.ph, label %for.cond18.preheader.if.end46_crit_edge

for.cond18.preheader.if.end46_crit_edge:          ; preds = %for.cond18.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end46

for.body21.lr.ph:                                 ; preds = %for.cond18.preheader
  %10 = ptrtoint ptr %call14 to i32
  br label %for.body21

for.body21:                                       ; preds = %for.body21.for.body21_crit_edge, %for.body21.lr.ph
  %call1999 = phi i32 [ %call1997, %for.body21.lr.ph ], [ %call19, %for.body21.for.body21_crit_edge ]
  %arrayidx30 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call1999
  %11 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx30, align 4
  %add31 = add i32 %12, %10
  %13 = inttoptr i32 %add31 to ptr
  %syncp33 = getelementptr inbounds %struct.pcpu_tx_sc_stats, ptr %13, i32 0, i32 1
  %dep_map.i90 = getelementptr inbounds %struct.pcpu_tx_sc_stats, ptr %13, i32 0, i32 1, i32 0, i32 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i90, ptr noundef nonnull @.str.10, ptr noundef nonnull @macsec_add_dev.__key.51, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  %14 = ptrtoint ptr %syncp33 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %syncp33, align 4
  %call19 = tail call i32 @cpumask_next(i32 noundef %call1999, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %15 = load i32, ptr @nr_cpu_ids, align 4
  %cmp20 = icmp ult i32 %call19, %15
  br i1 %cmp20, label %for.body21.for.body21_crit_edge, label %for.body21.if.end46_crit_edge

for.body21.if.end46_crit_edge:                    ; preds = %for.body21
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end46

for.body21.for.body21_crit_edge:                  ; preds = %for.body21
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body21

if.then44:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #20
  %stats4093 = getelementptr i8, ptr %dev, i32 2360
  %16 = ptrtoint ptr %stats4093 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %stats4093, align 8
  %17 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %stats, align 4
  tail call void @free_percpu(ptr noundef %18) #18
  br label %cleanup

if.end46:                                         ; preds = %for.body21.if.end46_crit_edge, %for.cond18.preheader.if.end46_crit_edge
  %tx_sc = getelementptr i8, ptr %dev, i32 2336
  %stats40 = getelementptr i8, ptr %dev, i32 2360
  %19 = ptrtoint ptr %stats40 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call14, ptr %stats40, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %sci)
  %cmp47 = icmp eq i64 %sci, -1
  br i1 %cmp47, label %if.then48, label %if.end46.if.end50_crit_edge

if.end46.if.end50_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end50

if.then48:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #20
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %20 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev_addr.i, align 64
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_loadN_noabort(i32 %22, i32 6)
  %sci.0.copyload.i.i = load i48, ptr %21, align 1
  %sci.0.insert.ext.i.i = zext i48 %sci.0.copyload.i.i to i64
  %sci.0.insert.shift.i.i = shl nuw i64 %sci.0.insert.ext.i.i, 16
  %sci.6.insert.insert.i.i = or i64 %sci.0.insert.shift.i.i, 1
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.end46.if.end50_crit_edge
  %sci.addr.0 = phi i64 [ %sci.6.insert.insert.i.i, %if.then48 ], [ %sci, %if.end46.if.end50_crit_edge ]
  %23 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %dev, ptr %add.ptr.i.i, align 8
  %operational = getelementptr i8, ptr %dev, i32 2329
  %24 = ptrtoint ptr %operational to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 1, ptr %operational, align 1
  %key_len = getelementptr i8, ptr %dev, i32 2320
  %25 = ptrtoint ptr %key_len to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 16, ptr %key_len, align 8
  %conv = zext i8 %icv_len to i16
  %icv_len51 = getelementptr i8, ptr %dev, i32 2322
  %26 = ptrtoint ptr %icv_len51 to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %conv, ptr %icv_len51, align 2
  %validate_frames = getelementptr i8, ptr %dev, i32 2324
  %27 = ptrtoint ptr %validate_frames to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 2, ptr %validate_frames, align 4
  %protect_frames = getelementptr i8, ptr %dev, i32 2330
  %28 = ptrtoint ptr %protect_frames to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 1, ptr %protect_frames, align 2
  %replay_protect = getelementptr i8, ptr %dev, i32 2331
  %29 = ptrtoint ptr %replay_protect to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 0, ptr %replay_protect, align 1
  %xpn = getelementptr i8, ptr %dev, i32 2328
  %30 = ptrtoint ptr %xpn to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 0, ptr %xpn, align 8
  %sci52 = getelementptr i8, ptr %dev, i32 2312
  %31 = ptrtoint ptr %sci52 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %sci.addr.0, ptr %sci52, align 8
  %32 = ptrtoint ptr %tx_sc to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 1, ptr %tx_sc, align 8
  %encoding_sa = getelementptr i8, ptr %dev, i32 2337
  %33 = ptrtoint ptr %encoding_sa to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 0, ptr %encoding_sa, align 1
  %encrypt = getelementptr i8, ptr %dev, i32 2338
  %34 = ptrtoint ptr %encrypt to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 0, ptr %encrypt, align 2
  %send_sci = getelementptr i8, ptr %dev, i32 2339
  %35 = ptrtoint ptr %send_sci to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 1, ptr %send_sci, align 1
  %end_station = getelementptr i8, ptr %dev, i32 2340
  %36 = ptrtoint ptr %end_station to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 0, ptr %end_station, align 4
  %scb = getelementptr i8, ptr %dev, i32 2341
  %37 = ptrtoint ptr %scb to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 0, ptr %scb, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end50, %if.then44, %if.end.thread
  %retval.0 = phi i32 [ 0, %if.end50 ], [ -12, %if.then44 ], [ -12, %if.end.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @macsec_changelink_common(ptr nocapture noundef %dev, ptr nocapture noundef readonly %data) unnamed_addr #0 align 64 {
entry:
  %tmp.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %arrayidx = getelementptr ptr, ptr %data, i32 6
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end15_crit_edge, label %if.then

entry.if.end15_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15

if.then:                                          ; preds = %entry
  %add.ptr.i.i153 = getelementptr i8, ptr %1, i32 4
  %2 = ptrtoint ptr %add.ptr.i.i153 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %add.ptr.i.i153, align 1
  %encoding_sa = getelementptr i8, ptr %dev, i32 2337
  %4 = ptrtoint ptr %encoding_sa to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %3, ptr %encoding_sa, align 1
  %call5 = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call5, label %if.then.do.end_crit_edge, label %land.lhs.true

if.then.do.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %if.then
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true8

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true8:                                   ; preds = %land.lhs.true
  %.b152 = load i1, ptr @macsec_changelink_common.__warned, align 1
  br i1 %.b152, label %land.lhs.true8.do.end_crit_edge, label %if.then10

land.lhs.true8.do.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then10:                                        ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_changelink_common.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 3736, ptr noundef nonnull @.str.4) #18
  br label %do.end

do.end:                                           ; preds = %if.then10, %land.lhs.true8.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %if.then.do.end_crit_edge
  %5 = ptrtoint ptr %encoding_sa to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %encoding_sa, align 1
  %idxprom = zext i8 %6 to i32
  %arrayidx12 = getelementptr %struct.macsec_secy, ptr %add.ptr.i.i, i32 0, i32 11, i32 6, i32 %idxprom
  %7 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx12, align 4
  %tobool13.not = icmp eq ptr %8, null
  br i1 %tobool13.not, label %do.end.land.end_crit_edge, label %land.rhs

do.end.land.end_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %land.end

land.rhs:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  %active = getelementptr inbounds %struct.macsec_tx_sa, ptr %8, i32 0, i32 5
  %9 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %active, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool14 = icmp ne i8 %10, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end.land.end_crit_edge
  %11 = phi i1 [ false, %do.end.land.end_crit_edge ], [ %tobool14, %land.rhs ]
  %operational = getelementptr i8, ptr %dev, i32 2329
  %frombool = zext i1 %11 to i8
  %12 = ptrtoint ptr %operational to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %frombool, ptr %operational, align 1
  br label %if.end15

if.end15:                                         ; preds = %land.end, %entry.if.end15_crit_edge
  %arrayidx16 = getelementptr ptr, ptr %data, i32 5
  %13 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx16, align 4
  %tobool17.not = icmp eq ptr %14, null
  br i1 %tobool17.not, label %if.end15.if.end21_crit_edge, label %if.then18

if.end15.if.end21_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end21

if.then18:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i154 = getelementptr i8, ptr %14, i32 4
  %15 = ptrtoint ptr %add.ptr.i.i154 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %add.ptr.i.i154, align 4
  %replay_window = getelementptr i8, ptr %dev, i32 2332
  %17 = ptrtoint ptr %replay_window to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %replay_window, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then18, %if.end15.if.end21_crit_edge
  %arrayidx22 = getelementptr ptr, ptr %data, i32 7
  %18 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx22, align 4
  %tobool23.not = icmp eq ptr %19, null
  br i1 %tobool23.not, label %if.end21.if.end30_crit_edge, label %if.then24

if.end21.if.end30_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end30

if.then24:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i155 = getelementptr i8, ptr %19, i32 4
  %20 = ptrtoint ptr %add.ptr.i.i155 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %add.ptr.i.i155, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool27 = icmp ne i8 %21, 0
  %encrypt = getelementptr i8, ptr %dev, i32 2338
  %frombool29 = zext i1 %tobool27 to i8
  %22 = ptrtoint ptr %encrypt to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %frombool29, ptr %encrypt, align 2
  br label %if.end30

if.end30:                                         ; preds = %if.then24, %if.end21.if.end30_crit_edge
  %arrayidx31 = getelementptr ptr, ptr %data, i32 8
  %23 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx31, align 4
  %tobool32.not = icmp eq ptr %24, null
  br i1 %tobool32.not, label %if.end30.if.end40_crit_edge, label %if.then33

if.end30.if.end40_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end40

if.then33:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i156 = getelementptr i8, ptr %24, i32 4
  %25 = ptrtoint ptr %add.ptr.i.i156 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %add.ptr.i.i156, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool36 = icmp ne i8 %26, 0
  %protect_frames = getelementptr i8, ptr %dev, i32 2330
  %frombool39 = zext i1 %tobool36 to i8
  %27 = ptrtoint ptr %protect_frames to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %frombool39, ptr %protect_frames, align 2
  br label %if.end40

if.end40:                                         ; preds = %if.then33, %if.end30.if.end40_crit_edge
  %arrayidx41 = getelementptr ptr, ptr %data, i32 9
  %28 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx41, align 4
  %tobool42.not = icmp eq ptr %29, null
  br i1 %tobool42.not, label %if.end40.if.end50_crit_edge, label %if.then43

if.end40.if.end50_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end50

if.then43:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i157 = getelementptr i8, ptr %29, i32 4
  %30 = ptrtoint ptr %add.ptr.i.i157 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %add.ptr.i.i157, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool46 = icmp ne i8 %31, 0
  %send_sci = getelementptr i8, ptr %dev, i32 2339
  %frombool49 = zext i1 %tobool46 to i8
  %32 = ptrtoint ptr %send_sci to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %frombool49, ptr %send_sci, align 1
  br label %if.end50

if.end50:                                         ; preds = %if.then43, %if.end40.if.end50_crit_edge
  %arrayidx51 = getelementptr ptr, ptr %data, i32 10
  %33 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx51, align 4
  %tobool52.not = icmp eq ptr %34, null
  br i1 %tobool52.not, label %if.end50.if.end60_crit_edge, label %if.then53

if.end50.if.end60_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end60

if.then53:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i158 = getelementptr i8, ptr %34, i32 4
  %35 = ptrtoint ptr %add.ptr.i.i158 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %add.ptr.i.i158, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool56 = icmp ne i8 %36, 0
  %end_station = getelementptr i8, ptr %dev, i32 2340
  %frombool59 = zext i1 %tobool56 to i8
  %37 = ptrtoint ptr %end_station to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %frombool59, ptr %end_station, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.then53, %if.end50.if.end60_crit_edge
  %arrayidx61 = getelementptr ptr, ptr %data, i32 11
  %38 = ptrtoint ptr %arrayidx61 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx61, align 4
  %tobool62.not = icmp eq ptr %39, null
  br i1 %tobool62.not, label %if.end60.if.end70_crit_edge, label %if.then63

if.end60.if.end70_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end70

if.then63:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i159 = getelementptr i8, ptr %39, i32 4
  %40 = ptrtoint ptr %add.ptr.i.i159 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %add.ptr.i.i159, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool66 = icmp ne i8 %41, 0
  %scb = getelementptr i8, ptr %dev, i32 2341
  %frombool69 = zext i1 %tobool66 to i8
  %42 = ptrtoint ptr %scb to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %frombool69, ptr %scb, align 1
  br label %if.end70

if.end70:                                         ; preds = %if.then63, %if.end60.if.end70_crit_edge
  %arrayidx71 = getelementptr ptr, ptr %data, i32 12
  %43 = ptrtoint ptr %arrayidx71 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx71, align 4
  %tobool72.not = icmp eq ptr %44, null
  br i1 %tobool72.not, label %if.end70.if.end80_crit_edge, label %if.then73

if.end70.if.end80_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end80

if.then73:                                        ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i160 = getelementptr i8, ptr %44, i32 4
  %45 = ptrtoint ptr %add.ptr.i.i160 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %add.ptr.i.i160, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool76 = icmp ne i8 %46, 0
  %replay_protect = getelementptr i8, ptr %dev, i32 2331
  %frombool79 = zext i1 %tobool76 to i8
  %47 = ptrtoint ptr %replay_protect to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %frombool79, ptr %replay_protect, align 1
  br label %if.end80

if.end80:                                         ; preds = %if.then73, %if.end70.if.end80_crit_edge
  %arrayidx81 = getelementptr ptr, ptr %data, i32 13
  %48 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx81, align 4
  %tobool82.not = icmp eq ptr %49, null
  br i1 %tobool82.not, label %if.end80.if.end86_crit_edge, label %if.then83

if.end80.if.end86_crit_edge:                      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end86

if.then83:                                        ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #20
  %add.ptr.i.i161 = getelementptr i8, ptr %49, i32 4
  %50 = ptrtoint ptr %add.ptr.i.i161 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %add.ptr.i.i161, align 1
  %conv = zext i8 %51 to i32
  %validate_frames = getelementptr i8, ptr %dev, i32 2324
  %52 = ptrtoint ptr %validate_frames to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %conv, ptr %validate_frames, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then83, %if.end80.if.end86_crit_edge
  %arrayidx87 = getelementptr ptr, ptr %data, i32 4
  %53 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx87, align 4
  %tobool88.not = icmp eq ptr %54, null
  br i1 %tobool88.not, label %if.end86.cleanup_crit_edge, label %if.then89

if.end86.cleanup_crit_edge:                       ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then89:                                        ; preds = %if.end86
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #18
  %55 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 -1, ptr %tmp.i, align 8, !annotation !199
  %call.i = call i32 @nla_memcpy(ptr noundef nonnull %tmp.i, ptr noundef nonnull %54, i32 noundef 8) #18
  %56 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %tmp.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #18
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.77)
  switch i64 %57, label %if.then89.cleanup_crit_edge [
    i64 36242102291529729, label %if.then89.cleanup.sink.split_crit_edge
    i64 36030996058996737, label %if.then89.cleanup.sink.split_crit_edge163
    i64 36242102291529730, label %sw.bb92
    i64 36242102291529731, label %sw.bb95
    i64 36242102291529732, label %sw.bb98
  ]

if.then89.cleanup.sink.split_crit_edge163:        ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.sink.split

if.then89.cleanup.sink.split_crit_edge:           ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.sink.split

if.then89.cleanup_crit_edge:                      ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

sw.bb92:                                          ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.sink.split

sw.bb95:                                          ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.sink.split

sw.bb98:                                          ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %sw.bb98, %sw.bb95, %sw.bb92, %if.then89.cleanup.sink.split_crit_edge, %if.then89.cleanup.sink.split_crit_edge163
  %.sink162 = phi i16 [ 32, %sw.bb98 ], [ 16, %sw.bb95 ], [ 32, %sw.bb92 ], [ 16, %if.then89.cleanup.sink.split_crit_edge ], [ 16, %if.then89.cleanup.sink.split_crit_edge163 ]
  %.sink = phi i8 [ 1, %sw.bb98 ], [ 1, %sw.bb95 ], [ 0, %sw.bb92 ], [ 0, %if.then89.cleanup.sink.split_crit_edge ], [ 0, %if.then89.cleanup.sink.split_crit_edge163 ]
  %key_len99 = getelementptr i8, ptr %dev, i32 2320
  %58 = ptrtoint ptr %key_len99 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %.sink162, ptr %key_len99, align 8
  %xpn100 = getelementptr i8, ptr %dev, i32 2328
  %59 = ptrtoint ptr %xpn100 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 %.sink, ptr %xpn100, align 8
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.then89.cleanup_crit_edge, %if.end86.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.then89.cleanup_crit_edge ], [ 0, %if.end86.cleanup_crit_edge ], [ 0, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @register_macsec_dev(ptr noundef %real_dev, ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call.i, label %entry.macsec_data_rtnl.exit_crit_edge, label %land.lhs.true.i

entry.macsec_data_rtnl.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.macsec_data_rtnl.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.macsec_data_rtnl.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @macsec_data_rtnl.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge, label %if.then.i

land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rtnl.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 136, ptr noundef nonnull @.str.4) #18
  br label %macsec_data_rtnl.exit

macsec_data_rtnl.exit:                            ; preds = %if.then.i, %land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge, %land.lhs.true.i.macsec_data_rtnl.exit_crit_edge, %entry.macsec_data_rtnl.exit_crit_edge
  %rx_handler_data.i = getelementptr inbounds %struct.net_device, ptr %real_dev, i32 0, i32 95
  %0 = ptrtoint ptr %rx_handler_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rx_handler_data.i, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %macsec_data_rtnl.exit.if.end8_crit_edge

macsec_data_rtnl.exit.if.end8_crit_edge:          ; preds = %macsec_data_rtnl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then:                                          ; preds = %macsec_data_rtnl.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3264, i32 noundef 8) #22
  %tobool3.not = icmp eq ptr %call7.i, null
  br i1 %tobool3.not, label %if.then.cleanup11_crit_edge, label %if.end

if.then.cleanup11_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup11

if.end:                                           ; preds = %if.then
  %3 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %call7.i, ptr %call7.i, align 8
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call7.i, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call7.i, ptr %prev.i, align 4
  %call5 = tail call i32 @netdev_rx_handler_register(ptr noundef %real_dev, ptr noundef nonnull @macsec_handle_frame, ptr noundef nonnull %call7.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp = icmp slt i32 %call5, 0
  br i1 %cmp, label %if.then6, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @kfree(ptr noundef nonnull %call7.i) #18
  br label %cleanup11

if.end8:                                          ; preds = %if.end.if.end8_crit_edge, %macsec_data_rtnl.exit.if.end8_crit_edge
  %rxd.0 = phi ptr [ %1, %macsec_data_rtnl.exit.if.end8_crit_edge ], [ %call7.i, %if.end.if.end8_crit_edge ]
  %secys9 = getelementptr i8, ptr %dev, i32 2376
  %prev.i20 = getelementptr inbounds %struct.list_head, ptr %rxd.0, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i20 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i20, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %secys9, ptr noundef %6, ptr noundef nonnull %rxd.0) #18
  br i1 %call.i.i, label %if.end.i.i, label %if.end8.cleanup11_crit_edge

if.end8.cleanup11_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup11

if.end.i.i:                                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  %7 = ptrtoint ptr %secys9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %rxd.0, ptr %secys9, align 4
  %prev2.i.i = getelementptr i8, ptr %dev, i32 2380
  %8 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %6, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !230
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %secys9, ptr %6, align 4
  %10 = ptrtoint ptr %prev.i20 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %secys9, ptr %prev.i20, align 4
  br label %cleanup11

cleanup11:                                        ; preds = %if.end.i.i, %if.end8.cleanup11_crit_edge, %if.then6, %if.then.cleanup11_crit_edge
  %retval.1 = phi i32 [ 0, %if.end8.cleanup11_crit_edge ], [ 0, %if.end.i.i ], [ -12, %if.then.cleanup11_crit_edge ], [ %call5, %if.then6 ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_stacked_transfer_operstate(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_fire_event(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macsec_del_dev(ptr noundef %macsec) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_sc = getelementptr inbounds %struct.macsec_secy, ptr %macsec, i32 0, i32 12
  %0 = ptrtoint ptr %rx_sc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rx_sc, align 4
  %tobool.not94 = icmp eq ptr %1, null
  br i1 %tobool.not94, label %entry.for.body.preheader_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.for.body.preheader_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body.preheader

while.body:                                       ; preds = %do.end.while.body_crit_edge, %entry.while.body_crit_edge
  %call = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call, label %while.body.do.end_crit_edge, label %land.lhs.true

while.body.do.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %while.body
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true4

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b93 = load i1, ptr @macsec_del_dev.__warned, align 1
  br i1 %.b93, label %land.lhs.true4.do.end_crit_edge, label %if.then

land.lhs.true4.do.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_del_dev.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 3852, ptr noundef nonnull @.str.4) #18
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true4.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %while.body.do.end_crit_edge
  %2 = ptrtoint ptr %rx_sc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rx_sc, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !231
  %6 = ptrtoint ptr %rx_sc to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %5, ptr %rx_sc, align 4
  tail call fastcc void @free_rx_sc(ptr noundef %3)
  %7 = ptrtoint ptr %rx_sc to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rx_sc, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %do.end.for.body.preheader_crit_edge, label %do.end.while.body_crit_edge

do.end.while.body_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %while.body

do.end.for.body.preheader_crit_edge:              ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body.preheader

for.body.preheader:                               ; preds = %do.end.for.body.preheader_crit_edge, %entry.for.body.preheader_crit_edge
  br label %for.body

for.body:                                         ; preds = %if.end81.for.body_crit_edge, %for.body.preheader
  %i.095 = phi i32 [ %inc, %if.end81.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %call50 = tail call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call50, label %for.body.do.end59_crit_edge, label %land.lhs.true51

for.body.do.end59_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end59

land.lhs.true51:                                  ; preds = %for.body
  %call52 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %land.lhs.true51.do.end59_crit_edge, label %land.lhs.true54

land.lhs.true51.do.end59_crit_edge:               ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end59

land.lhs.true54:                                  ; preds = %land.lhs.true51
  %.b9192 = load i1, ptr @macsec_del_dev.__warned.52, align 1
  br i1 %.b9192, label %land.lhs.true54.do.end59_crit_edge, label %if.then56

land.lhs.true54.do.end59_crit_edge:               ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end59

if.then56:                                        ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_del_dev.__warned.52, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 3859, ptr noundef nonnull @.str.4) #18
  br label %do.end59

do.end59:                                         ; preds = %if.then56, %land.lhs.true54.do.end59_crit_edge, %land.lhs.true51.do.end59_crit_edge, %for.body.do.end59_crit_edge
  %arrayidx = getelementptr %struct.macsec_secy, ptr %macsec, i32 0, i32 11, i32 6, i32 %i.095
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 4
  %tobool63.not = icmp eq ptr %10, null
  br i1 %tobool63.not, label %do.end59.if.end81_crit_edge, label %do.body70

do.end59.if.end81_crit_edge:                      ; preds = %do.end59
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end81

do.body70:                                        ; preds = %do.end59
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr null, ptr %arrayidx, align 4
  %active.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %10, i32 0, i32 5
  %12 = ptrtoint ptr %active.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %active.i, align 4
  %refcnt.i.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %10, i32 0, i32 4
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #18
  %13 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %do.body70
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.if.end81_crit_edge, label %if.then10.i.i.i.i.i, !prof !204

if.end5.i.i.i.i.i.if.end81_crit_edge:             ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end81

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef 3) #18
  br label %if.end81

if.then.i.i:                                      ; preds = %do.body70
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i.i = getelementptr inbounds %struct.macsec_tx_sa, ptr %10, i32 0, i32 7
  tail call void @call_rcu(ptr noundef %rcu.i.i, ptr noundef nonnull @free_txsa) #18
  br label %if.end81

if.end81:                                         ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.if.end81_crit_edge, %do.end59.if.end81_crit_edge
  %inc = add nuw nsw i32 %i.095, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %if.end81.for.body_crit_edge

if.end81.for.body_crit_edge:                      ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

for.end:                                          ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_upper_dev_unlink(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @macsec_validate_skb(ptr nocapture noundef readonly %skb, i16 noundef zeroext %icv_len, i1 noundef zeroext %xpn) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %2 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len1, align 4
  %sub = add i32 %3, -12
  %tci_an = getelementptr inbounds %struct.macsec_eth_header, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %tci_an to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %tci_an, align 1
  %6 = and i8 %5, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  %add.i = select i1 %tobool.not, i32 8, i32 16
  %conv3 = zext i16 %icv_len to i32
  %add = add nuw nsw i32 %add.i, %conv3
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %3)
  %cmp = icmp ult i32 %3, 17
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv7 = zext i8 %5 to i32
  %and8 = and i32 %conv7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end11, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end11:                                         ; preds = %if.end
  %7 = and i32 %conv7, 80
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %8 = icmp eq i32 %7, 0
  %or.cond62 = select i1 %8, i1 true, i1 %tobool.not
  br i1 %or.cond62, label %if.end25, label %if.end11.cleanup_crit_edge

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end25:                                         ; preds = %if.end11
  %unused = getelementptr inbounds %struct.macsec_eth_header, ptr %1, i32 0, i32 2
  %9 = ptrtoint ptr %unused to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load = load i8, ptr %unused, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %bf.load)
  %tobool26.not = icmp ult i8 %bf.load, 64
  br i1 %tobool26.not, label %if.end28, label %if.end25.cleanup_crit_edge

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end28:                                         ; preds = %if.end25
  %packet_number = getelementptr inbounds %struct.macsec_eth_header, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %packet_number to i32
  call void @__asan_loadN_noabort(i32 %10, i32 4)
  %11 = load i32, ptr %packet_number, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool29.not = icmp ne i32 %11, 0
  %brmerge = or i1 %tobool29.not, %xpn
  br i1 %brmerge, label %if.end33, label %if.end28.cleanup_crit_edge

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end33:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.load)
  %tobool35.not = icmp eq i8 %bf.load, 0
  br i1 %tobool35.not, label %if.end44, label %if.then36

if.then36:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #20
  %conv40 = zext i8 %bf.load to i32
  %add41 = add nuw nsw i32 %add, %conv40
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %add41)
  %cmp42 = icmp eq i32 %sub, %add41
  br label %cleanup

if.end44:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #20
  %add45 = add nuw nsw i32 %add, 48
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %add45)
  %cmp46 = icmp sge i32 %sub, %add45
  br label %cleanup

cleanup:                                          ; preds = %if.end44, %if.then36, %if.end28.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %cmp42, %if.then36 ], [ %cmp46, %if.end44 ], [ false, %entry.cleanup_crit_edge ], [ false, %if.end.cleanup_crit_edge ], [ false, %if.end25.cleanup_crit_edge ], [ false, %if.end28.cleanup_crit_edge ], [ false, %if.end11.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @macsec_rxsa_get(ptr noundef %ptr) unnamed_addr #0 align 64 {
entry:
  %old.i.i.i = alloca i32, align 4
  %ptr.addr = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ptr.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %ptr, ptr %ptr.addr, align 4
  %ptr.addr.0.ptr.addr.0.ptr.addr.0. = load volatile ptr, ptr %ptr.addr, align 4
  %call = tail call i32 @rcu_read_lock_bh_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end7_crit_edge

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b19 = load i1, ptr @macsec_rxsa_get.__warned, align 1
  br i1 %.b19, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_rxsa_get.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 152, ptr noundef nonnull @.str.38) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %entry.do.end7_crit_edge
  %tobool9.not = icmp eq ptr %ptr.addr.0.ptr.addr.0.ptr.addr.0., null
  br i1 %tobool9.not, label %do.end7.cleanup_crit_edge, label %lor.lhs.false

do.end7.cleanup_crit_edge:                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

lor.lhs.false:                                    ; preds = %do.end7
  %active = getelementptr inbounds %struct.macsec_rx_sa, ptr %ptr.addr.0.ptr.addr.0.ptr.addr.0., i32 0, i32 5
  %1 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %active, align 4, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool10.not = icmp eq i8 %2, 0
  br i1 %tobool10.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end12

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end12:                                         ; preds = %lor.lhs.false
  %refcnt = getelementptr inbounds %struct.macsec_rx_sa, ptr %ptr.addr.0.ptr.addr.0.ptr.addr.0., i32 0, i32 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i) #18
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #18
  %3 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %refcnt, align 4
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, %if.end12
  %5 = phi i32 [ %4, %if.end12 ], [ %asmresult3.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge ]
  %6 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %old.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i.i.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i.i.i, label %do.body.i.i.i.if.end4.i.i.i_crit_edge, label %do.cond.i.i.i

do.body.i.i.i.if.end4.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end4.i.i.i

do.cond.i.i.i:                                    ; preds = %do.body.i.i.i
  %add.i.i.i = add i32 %5, 1
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #18
  %call.i3.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i, i32 noundef 4) #18
  %7 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %old.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #18
  br label %do.body.i.i.i.i.i.i

do.body.i.i.i.i.i.i:                              ; preds = %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i
  %9 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 %8, i32 %add.i.i.i, ptr elementtype(i32) %refcnt) #18, !srcloc !223
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i, label %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i:       ; preds = %do.body.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 1
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i, %8
  br i1 %cmp.not.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, !prof !204

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, %do.body.i.i.i.if.end4.i.i.i_crit_edge
  %10 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %old.i.i.i, align 4
  %add5.i.i.i = add i32 %11, 1
  %12 = or i32 %add5.i.i.i, %11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %.not.i.i.i = icmp sgt i32 %12, -1
  br i1 %.not.i.i.i, label %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge, label %if.then10.i.i.i, !prof !204

if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge: ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %refcount_inc_not_zero.exit

if.then10.i.i.i:                                  ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %refcnt, i32 noundef 0) #18
  br label %refcount_inc_not_zero.exit

refcount_inc_not_zero.exit:                       ; preds = %if.then10.i.i.i, %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge
  %13 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %old.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool12.i.i.i.not = icmp eq i32 %14, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i) #18
  %ptr.addr.0.. = select i1 %tobool12.i.i.i.not, ptr null, ptr %ptr.addr.0.ptr.addr.0.ptr.addr.0.
  br label %cleanup

cleanup:                                          ; preds = %refcount_inc_not_zero.exit, %lor.lhs.false.cleanup_crit_edge, %do.end7.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %lor.lhs.false.cleanup_crit_edge ], [ null, %do.end7.cleanup_crit_edge ], [ %ptr.addr.0.., %refcount_inc_not_zero.exit ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @macsec_decrypt(ptr noundef %skb, ptr noundef %dev, ptr nocapture noundef readonly %rx_sa, i64 noundef %sci, ptr nocapture noundef readonly %secy) unnamed_addr #0 align 64 {
entry:
  %trailer = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %trailer) #18
  %0 = ptrtoint ptr %trailer to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %trailer, align 4, !annotation !199
  %icv_len1 = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 4
  %1 = ptrtoint ptr %icv_len1 to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %icv_len1, align 2
  %valid = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 9
  %3 = ptrtoint ptr %valid to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %valid, align 1
  %users.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i.i, i32 noundef 4) #18
  %4 = ptrtoint ptr %users.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %users.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i.not.i = icmp eq i32 %5, 1
  br i1 %cmp.i.not.i, label %skb_share_check.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %call7.i = tail call ptr @skb_clone(ptr noundef %skb, i32 noundef 2592) #18
  %tobool8.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool8.not.i, label %skb_share_check.exit.thread, label %skb_share_check.exit.thread190, !prof !203

skb_share_check.exit.thread190:                   ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @consume_skb(ptr noundef %skb) #18
  br label %if.end

skb_share_check.exit.thread:                      ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #18
  br label %cleanup80

skb_share_check.exit:                             ; preds = %entry
  %tobool.not = icmp eq ptr %skb, null
  br i1 %tobool.not, label %skb_share_check.exit.cleanup80_crit_edge, label %skb_share_check.exit.if.end_crit_edge

skb_share_check.exit.if.end_crit_edge:            ; preds = %skb_share_check.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

skb_share_check.exit.cleanup80_crit_edge:         ; preds = %skb_share_check.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup80

if.end:                                           ; preds = %skb_share_check.exit.if.end_crit_edge, %skb_share_check.exit.thread190
  %skb.addr.0.i193 = phi ptr [ %call7.i, %skb_share_check.exit.thread190 ], [ %skb, %skb_share_check.exit.if.end_crit_edge ]
  %call4 = call i32 @skb_cow_data(ptr noundef nonnull %skb.addr.0.i193, i32 noundef 0, ptr noundef nonnull %trailer) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp = icmp slt i32 %call4, 0
  br i1 %cmp, label %if.then7, label %if.end9, !prof !203

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.0.i193, i32 noundef 0) #18
  %6 = inttoptr i32 %call4 to ptr
  br label %cleanup80

if.end9:                                          ; preds = %if.end
  %tfm = getelementptr inbounds %struct.macsec_key, ptr %rx_sa, i32 0, i32 1
  %7 = ptrtoint ptr %tfm to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tfm, align 8
  %reqsize.i.i = getelementptr inbounds %struct.crypto_aead, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %reqsize.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %reqsize.i.i, align 4
  %add2.i = add i32 %10, 143
  %and.i = and i32 %add2.i, -4
  %mul.i = mul i32 %call4, 20
  %add3.i = add i32 %and.i, %mul.i
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add3.i, i32 noundef 2592) #23
  %tobool.not.i = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not.i, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.0.i193, i32 noundef 0) #18
  br label %cleanup80

if.end14:                                         ; preds = %if.end9
  %add.i = add i32 %10, 128
  %add.ptr.i = getelementptr i8, ptr %call9.i.i, i32 %add.i
  %add.ptr5.i = getelementptr i8, ptr %call9.i.i, i32 %and.i
  %base.i.i.i = getelementptr inbounds %struct.crypto_aead, ptr %8, i32 0, i32 3
  %tfm1.i.i = getelementptr inbounds %struct.crypto_async_request, ptr %call9.i.i, i32 0, i32 3
  %11 = ptrtoint ptr %tfm1.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %base.i.i.i, ptr %tfm1.i.i, align 16
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i193, i32 0, i32 19
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data, align 4
  %packet_number = getelementptr inbounds %struct.macsec_eth_header, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %packet_number to i32
  call void @__asan_loadN_noabort(i32 %14, i32 4)
  %15 = load i32, ptr %packet_number, align 1
  %xpn = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 6
  %16 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool15.not = icmp eq i8 %17, 0
  br i1 %tobool15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #20
  %18 = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 3
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %recovered_pn.sroa.0.0.copyload = load i32, ptr %18, align 8
  %lower17 = getelementptr inbounds %struct.anon.148, ptr %18, i32 0, i32 1
  %20 = ptrtoint ptr %lower17 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lower17, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %21)
  %cmp18 = icmp ult i32 %15, %21
  %shr148 = xor i32 %21, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr148)
  %tobool21.not = icmp slt i32 %shr148, 0
  %not.or.cond = and i1 %cmp18, %tobool21.not
  %inc = zext i1 %not.or.cond to i32
  %recovered_pn.sroa.0.0 = add i32 %recovered_pn.sroa.0.0.copyload, %inc
  %ssci = getelementptr inbounds %struct.macsec_rx_sa, ptr %rx_sa, i32 0, i32 1
  %22 = ptrtoint ptr %ssci to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ssci, align 8
  %recovered_pn.sroa.7.0.insert.ext = zext i32 %15 to i64
  %recovered_pn.sroa.0.0.insert.ext = zext i32 %recovered_pn.sroa.0.0 to i64
  %recovered_pn.sroa.0.0.insert.shift = shl nuw i64 %recovered_pn.sroa.0.0.insert.ext, 32
  %recovered_pn.sroa.0.0.insert.insert = or i64 %recovered_pn.sroa.0.0.insert.shift, %recovered_pn.sroa.7.0.insert.ext
  %salt = getelementptr inbounds %struct.macsec_key, ptr %rx_sa, i32 0, i32 2
  %24 = ptrtoint ptr %salt to i32
  call void @__asan_load4_noabort(i32 %24)
  %.unpack = load i32, ptr %salt, align 4
  %.elt144 = getelementptr inbounds %struct.macsec_key, ptr %rx_sa, i32 0, i32 2, i32 0, i32 1
  %25 = ptrtoint ptr %.elt144 to i32
  call void @__asan_load4_noabort(i32 %25)
  %.unpack145 = load i32, ptr %.elt144, align 4
  %.elt146 = getelementptr inbounds [3 x i32], ptr %salt, i32 0, i32 2
  %26 = ptrtoint ptr %.elt146 to i32
  call void @__asan_load4_noabort(i32 %26)
  %.unpack147 = load i32, ptr %.elt146, align 4
  %xor.i = xor i32 %.unpack, %23
  %27 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %27, i32 4)
  store i32 %xor.i, ptr %add.ptr.i, align 1
  %salt.sroa.4.4.insert.ext.i = zext i32 %.unpack147 to i64
  %salt.sroa.2.4.insert.ext.i = zext i32 %.unpack145 to i64
  %salt.sroa.2.4.insert.shift.i = shl nuw i64 %salt.sroa.2.4.insert.ext.i, 32
  %salt.sroa.2.4.insert.insert.i = or i64 %salt.sroa.2.4.insert.shift.i, %salt.sroa.4.4.insert.ext.i
  %xor3.i = xor i64 %recovered_pn.sroa.0.0.insert.insert, %salt.sroa.2.4.insert.insert.i
  %pn4.i = getelementptr inbounds %struct.gcm_iv_xpn, ptr %add.ptr.i, i32 0, i32 1
  %28 = ptrtoint ptr %pn4.i to i32
  call void @__asan_storeN_noabort(i32 %28, i32 8)
  store i64 %xor3.i, ptr %pn4.i, align 1
  br label %if.end25

if.else:                                          ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #20
  %29 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %sci, ptr %add.ptr.i, align 8
  %pn1.i = getelementptr inbounds %struct.gcm_iv, ptr %add.ptr.i, i32 0, i32 1
  %30 = ptrtoint ptr %pn1.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %15, ptr %pn1.i, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then16
  call void @sg_init_table(ptr noundef %add.ptr5.i, i32 noundef %call4) #18
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i193, i32 0, i32 6
  %31 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %len, align 4
  %call26 = call i32 @skb_to_sgvec(ptr noundef nonnull %skb.addr.0.i193, ptr noundef %add.ptr5.i, i32 noundef 0, i32 noundef %32) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %cmp27 = icmp slt i32 %call26, 0
  br i1 %cmp27, label %if.then34, label %if.end36, !prof !203

if.then34:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree_sensitive(ptr noundef nonnull %call9.i.i) #18
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.0.i193, i32 noundef 0) #18
  %33 = inttoptr i32 %call26 to ptr
  br label %cleanup80

if.end36:                                         ; preds = %if.end25
  %tci_an = getelementptr inbounds %struct.macsec_eth_header, ptr %13, i32 0, i32 1
  %34 = ptrtoint ptr %tci_an to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %tci_an, align 1
  %36 = and i8 %35, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool37.not = icmp eq i8 %36, 0
  br i1 %tobool37.not, label %if.else53, label %if.then38

if.then38:                                        ; preds = %if.end36
  %37 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %len, align 4
  %has_sci = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i193, i32 0, i32 3, i32 10
  %39 = ptrtoint ptr %has_sci to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %has_sci, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool42.not = icmp eq i8 %40, 0
  %add.i150.neg = select i1 %tobool42.not, i32 -20, i32 -28
  %sub = add i32 %add.i150.neg, %38
  %src1.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 4
  %41 = ptrtoint ptr %src1.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %add.ptr5.i, ptr %src1.i, align 4
  %dst2.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 5
  %42 = ptrtoint ptr %dst2.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %add.ptr5.i, ptr %dst2.i, align 8
  %cryptlen3.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 2
  %43 = ptrtoint ptr %cryptlen3.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %sub, ptr %cryptlen3.i, align 4
  %iv4.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 3
  %44 = ptrtoint ptr %iv4.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %add.ptr.i, ptr %iv4.i, align 32
  %45 = ptrtoint ptr %has_sci to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %has_sci, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool46.not = icmp eq i8 %46, 0
  %add.i152 = select i1 %tobool46.not, i32 20, i32 28
  %assoclen1.i = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 1
  %47 = ptrtoint ptr %assoclen1.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %add.i152, ptr %assoclen1.i, align 8
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i193, i32 0, i32 12
  %48 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %if.then38.if.end58_crit_edge, label %skb_cloned.exit.i

if.then38.if.end58_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end58

skb_cloned.exit.i:                                ; preds = %if.then38
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i193, i32 0, i32 17
  %49 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %end.i.i.i, align 4
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %50, i32 0, i32 10
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #18
  %51 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i.i = and i32 %52, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp.i.not.i153 = icmp eq i32 %and.i.i, 1
  br i1 %cmp.i.not.i153, label %skb_cloned.exit.i.if.end58_crit_edge, label %if.then6.i156

skb_cloned.exit.i.if.end58_crit_edge:             ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end58

if.then6.i156:                                    ; preds = %skb_cloned.exit.i
  %call7.i154 = call ptr @skb_copy(ptr noundef nonnull %skb.addr.0.i193, i32 noundef 2592) #18
  %tobool8.not.i155 = icmp eq ptr %call7.i154, null
  br i1 %tobool8.not.i155, label %cleanup.thread, label %if.then11.i157, !prof !203

if.then11.i157:                                   ; preds = %if.then6.i156
  call void @__sanitizer_cov_trace_pc() #20
  call void @consume_skb(ptr noundef nonnull %skb.addr.0.i193) #18
  br label %if.end58

cleanup.thread:                                   ; preds = %if.then6.i156
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.0.i193, i32 noundef 0) #18
  call void @kfree_sensitive(ptr noundef nonnull %call9.i.i) #18
  br label %cleanup80

if.else53:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #20
  %conv54 = zext i16 %2 to i32
  %src1.i160 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 4
  %53 = ptrtoint ptr %src1.i160 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %add.ptr5.i, ptr %src1.i160, align 4
  %dst2.i161 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 5
  %54 = ptrtoint ptr %dst2.i161 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %add.ptr5.i, ptr %dst2.i161, align 8
  %cryptlen3.i162 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 2
  %55 = ptrtoint ptr %cryptlen3.i162 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %conv54, ptr %cryptlen3.i162, align 4
  %iv4.i163 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 3
  %56 = ptrtoint ptr %iv4.i163 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %add.ptr.i, ptr %iv4.i163, align 32
  %57 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %len, align 4
  %sub57 = sub i32 %58, %conv54
  %assoclen1.i164 = getelementptr inbounds %struct.aead_request, ptr %call9.i.i, i32 0, i32 1
  %59 = ptrtoint ptr %assoclen1.i164 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %sub57, ptr %assoclen1.i164, align 8
  br label %if.end58

if.end58:                                         ; preds = %if.else53, %if.then11.i157, %skb_cloned.exit.i.if.end58_crit_edge, %if.then38.if.end58_crit_edge
  %skb.addr.0 = phi ptr [ %skb.addr.0.i193, %if.else53 ], [ %skb.addr.0.i193, %if.then38.if.end58_crit_edge ], [ %call7.i154, %if.then11.i157 ], [ %skb.addr.0.i193, %skb_cloned.exit.i.if.end58_crit_edge ]
  %cb.i165 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0, i32 0, i32 3
  %60 = ptrtoint ptr %cb.i165 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %call9.i.i, ptr %cb.i165, align 4
  %61 = getelementptr inbounds %struct.anon.0, ptr %skb.addr.0, i32 0, i32 2
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %dev, ptr %61, align 8
  %complete.i = getelementptr inbounds %struct.crypto_async_request, ptr %call9.i.i, i32 0, i32 1
  %63 = ptrtoint ptr %complete.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr @macsec_decrypt_done, ptr %complete.i, align 8
  %data2.i = getelementptr inbounds %struct.crypto_async_request, ptr %call9.i.i, i32 0, i32 2
  %64 = ptrtoint ptr %data2.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %skb.addr.0, ptr %data2.i, align 4
  %flags4.i = getelementptr inbounds %struct.crypto_async_request, ptr %call9.i.i, i32 0, i32 4
  %65 = ptrtoint ptr %flags4.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 0, ptr %flags4.i, align 4
  %tobool.not.i166 = icmp eq ptr %dev, null
  br i1 %tobool.not.i166, label %if.end58.dev_hold.exit_crit_edge, label %do.body1.i

if.end58.dev_hold.exit_crit_edge:                 ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #20
  br label %dev_hold.exit

do.body1.i:                                       ; preds = %if.end58
  %66 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 118
  %67 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %pcpu_refcnt.i, align 4
  %69 = ptrtoint ptr %68 to i32
  %70 = call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i167 = and i32 %70, -16384
  %71 = inttoptr i32 %and.i.i167 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %71, i32 0, i32 3
  %72 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %73
  %74 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %arrayidx.i, align 4
  %add.i168 = add i32 %75, %69
  %76 = inttoptr i32 %add.i168 to ptr
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %76, align 4
  %add13.i = add i32 %78, 1
  store i32 %add13.i, ptr %76, align 4
  %79 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i.i = and i32 %79, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !203

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @warn_bogus_irq_restore() #18
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %66) #18, !srcloc !213
  br label %dev_hold.exit

dev_hold.exit:                                    ; preds = %do.end30.i, %if.end58.dev_hold.exit_crit_edge
  %call61 = call i32 @crypto_aead_decrypt(ptr noundef nonnull %call9.i.i) #18
  %80 = zext i32 %call61 to i64
  call void @__sanitizer_cov_trace_switch(i64 %80, ptr @__sancov_gen_cov_switch_values.78)
  switch i32 %call61, label %if.then72 [
    i32 -115, label %dev_hold.exit.cleanup80_crit_edge
    i32 0, label %if.else75
    i32 -74, label %dev_hold.exit.if.end79_crit_edge
  ]

dev_hold.exit.if.end79_crit_edge:                 ; preds = %dev_hold.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end79

dev_hold.exit.cleanup80_crit_edge:                ; preds = %dev_hold.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup80

if.then72:                                        ; preds = %dev_hold.exit
  call void @__sanitizer_cov_trace_pc() #20
  call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.0, i32 noundef 0) #18
  %81 = inttoptr i32 %call61 to ptr
  br label %if.end79

if.else75:                                        ; preds = %dev_hold.exit
  call void @__sanitizer_cov_trace_pc() #20
  %valid77 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0, i32 0, i32 3, i32 9
  %82 = ptrtoint ptr %valid77 to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 1, ptr %valid77, align 1
  br label %if.end79

if.end79:                                         ; preds = %if.else75, %if.then72, %dev_hold.exit.if.end79_crit_edge
  %skb.addr.1 = phi ptr [ %81, %if.then72 ], [ %skb.addr.0, %if.else75 ], [ %skb.addr.0, %dev_hold.exit.if.end79_crit_edge ]
  br i1 %tobool.not.i166, label %if.end79.dev_put.exit_crit_edge, label %do.body1.i179

if.end79.dev_put.exit_crit_edge:                  ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #20
  br label %dev_put.exit

do.body1.i179:                                    ; preds = %if.end79
  %83 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %pcpu_refcnt.i171 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 118
  %84 = ptrtoint ptr %pcpu_refcnt.i171 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %pcpu_refcnt.i171, align 4
  %86 = ptrtoint ptr %85 to i32
  %87 = call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i172 = and i32 %87, -16384
  %88 = inttoptr i32 %and.i.i172 to ptr
  %cpu.i173 = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 3
  %89 = ptrtoint ptr %cpu.i173 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %cpu.i173, align 4
  %arrayidx.i174 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %90
  %91 = ptrtoint ptr %arrayidx.i174 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %arrayidx.i174, align 4
  %add.i175 = add i32 %92, %86
  %93 = inttoptr i32 %add.i175 to ptr
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %93, align 4
  %add13.i176 = add i32 %95, -1
  store i32 %add13.i176, ptr %93, align 4
  %96 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i.i177 = and i32 %96, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i177)
  %tobool24.not.i178 = icmp eq i32 %and.i.i.i177, 0
  br i1 %tobool24.not.i178, label %if.then28.i180, label %do.body1.i179.do.end30.i181_crit_edge, !prof !203

do.body1.i179.do.end30.i181_crit_edge:            ; preds = %do.body1.i179
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end30.i181

if.then28.i180:                                   ; preds = %do.body1.i179
  call void @__sanitizer_cov_trace_pc() #20
  call void @warn_bogus_irq_restore() #18
  br label %do.end30.i181

do.end30.i181:                                    ; preds = %if.then28.i180, %do.body1.i179.do.end30.i181_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %83) #18, !srcloc !213
  br label %dev_put.exit

dev_put.exit:                                     ; preds = %do.end30.i181, %if.end79.dev_put.exit_crit_edge
  call void @kfree_sensitive(ptr noundef nonnull %call9.i.i) #18
  br label %cleanup80

cleanup80:                                        ; preds = %dev_put.exit, %dev_hold.exit.cleanup80_crit_edge, %cleanup.thread, %if.then34, %if.then12, %if.then7, %skb_share_check.exit.cleanup80_crit_edge, %skb_share_check.exit.thread
  %retval.1 = phi ptr [ %6, %if.then7 ], [ %33, %if.then34 ], [ %skb.addr.1, %dev_put.exit ], [ inttoptr (i32 -12 to ptr), %if.then12 ], [ inttoptr (i32 -12 to ptr), %skb_share_check.exit.thread ], [ inttoptr (i32 -12 to ptr), %skb_share_check.exit.cleanup80_crit_edge ], [ inttoptr (i32 -12 to ptr), %cleanup.thread ], [ inttoptr (i32 -115 to ptr), %dev_hold.exit.cleanup80_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %trailer) #18
  ret ptr %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  %call = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 724, ptr noundef nonnull @.str.50) #18
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !228
  %0 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @macsec_post_decrypt(ptr nocapture noundef readonly %skb, ptr nocapture noundef readonly %secy, i32 noundef %pn) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %sc = getelementptr inbounds %struct.macsec_rx_sa, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc, align 4
  %stats = getelementptr inbounds %struct.macsec_rx_sc, ptr %4, i32 0, i32 4
  %5 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %stats, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add = add i32 %13, %7
  %14 = inttoptr i32 %add to ptr
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %15 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %head.i.i, align 8
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %17 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %mac_header.i.i, align 2
  %conv.i.i = zext i16 %18 to i32
  %add.ptr.i.i = getelementptr i8, ptr %16, i32 %conv.i.i
  %lock = getelementptr inbounds %struct.macsec_rx_sa, ptr %2, i32 0, i32 2
  tail call void @_raw_spin_lock(ptr noundef %lock) #18
  %19 = getelementptr inbounds %struct.macsec_rx_sa, ptr %2, i32 0, i32 3
  %lower = getelementptr inbounds %struct.anon.148, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %lower to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lower, align 4
  %replay_window = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 10
  %22 = ptrtoint ptr %replay_window to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %replay_window, align 4
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %21, i32 %23)
  %replay_protect = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 9
  %25 = ptrtoint ptr %replay_protect to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %replay_protect, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.not = icmp ne i8 %26, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %pn)
  %cmp6 = icmp ugt i32 %24, %pn
  %or.cond = select i1 %tobool.not, i1 %cmp6, i1 false
  br i1 %or.cond, label %land.lhs.true7, label %entry.if.end15_crit_edge

entry.if.end15_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15

land.lhs.true7:                                   ; preds = %entry
  %xpn = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 6
  %27 = ptrtoint ptr %xpn to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %xpn, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool8.not = icmp eq i8 %28, 0
  %shr277 = xor i32 %24, %pn
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %shr277)
  %tobool10.not = icmp sgt i32 %shr277, -1
  %or.cond278 = select i1 %tobool8.not, i1 true, i1 %tobool10.not
  br i1 %or.cond278, label %if.then11, label %land.lhs.true7.if.end15_crit_edge

land.lhs.true7.if.end15_crit_edge:                ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15

if.then11:                                        ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @_raw_spin_unlock(ptr noundef %lock) #18
  %syncp = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp)
  %InPktsLate = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %14, i32 0, i32 6
  %29 = ptrtoint ptr %InPktsLate to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %InPktsLate, align 8
  %inc = add i64 %30, 1
  store i64 %inc, ptr %InPktsLate, align 8
  %dep_map.i.i = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1, i32 0, i32 1
  %31 = tail call ptr @llvm.returnaddress(i32 0) #18
  %32 = ptrtoint ptr %31 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %32) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %33 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %34, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  br label %cleanup

if.end15:                                         ; preds = %land.lhs.true7.if.end15_crit_edge, %entry.if.end15_crit_edge
  %validate_frames = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 5
  %35 = ptrtoint ptr %validate_frames to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %validate_frames, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp16.not = icmp eq i32 %36, 0
  br i1 %cmp16.not, label %if.end15.if.end30_crit_edge, label %if.then17

if.end15.if.end30_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end30

if.then17:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  %syncp18 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp18)
  %tci_an = getelementptr inbounds %struct.macsec_eth_header, ptr %add.ptr.i.i, i32 0, i32 1
  %37 = ptrtoint ptr %tci_an to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %tci_an, align 1
  %39 = and i8 %38, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool19.not = icmp eq i8 %39, 0
  %len24 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %40 = ptrtoint ptr %len24 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %len24, align 4
  %conv25 = zext i32 %41 to i64
  %InOctetsDecrypted = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %14, i32 0, i32 1
  %.sink291 = select i1 %tobool19.not, ptr %14, ptr %InOctetsDecrypted
  %42 = ptrtoint ptr %.sink291 to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %.sink291, align 8
  %add27 = add i64 %43, %conv25
  store i64 %add27, ptr %.sink291, align 8
  %dep_map.i.i280 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1, i32 0, i32 1
  %44 = tail call ptr @llvm.returnaddress(i32 0) #18
  %45 = ptrtoint ptr %44 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i280, i32 noundef %45) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %46 = ptrtoint ptr %syncp18 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %syncp18, align 4
  %inc.i.i.i281 = add i32 %47, 1
  store i32 %inc.i.i.i281, ptr %syncp18, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then17, %if.end15.if.end30_crit_edge
  %valid = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 9
  %48 = ptrtoint ptr %valid to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %valid, align 1, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool32.not = icmp eq i8 %49, 0
  br i1 %tobool32.not, label %if.then33, label %if.else120

if.then33:                                        ; preds = %if.end30
  tail call void @_raw_spin_unlock(ptr noundef %lock) #18
  %tci_an35 = getelementptr inbounds %struct.macsec_eth_header, ptr %add.ptr.i.i, i32 0, i32 1
  %50 = ptrtoint ptr %tci_an35 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %tci_an35, align 1
  %52 = and i8 %51, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool38.not = icmp eq i8 %52, 0
  br i1 %tobool38.not, label %lor.lhs.false39, label %if.then33.if.then43_crit_edge

if.then33.if.then43_crit_edge:                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then43

lor.lhs.false39:                                  ; preds = %if.then33
  %53 = ptrtoint ptr %validate_frames to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %validate_frames, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %54)
  %cmp41 = icmp eq i32 %54, 2
  br i1 %cmp41, label %lor.lhs.false39.if.then43_crit_edge, label %if.end48

lor.lhs.false39.if.then43_crit_edge:              ; preds = %lor.lhs.false39
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then43

if.then43:                                        ; preds = %lor.lhs.false39.if.then43_crit_edge, %if.then33.if.then43_crit_edge
  %syncp44 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp44)
  %InPktsNotValid = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %14, i32 0, i32 7
  %55 = ptrtoint ptr %InPktsNotValid to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %InPktsNotValid, align 8
  %inc46 = add i64 %56, 1
  store i64 %inc46, ptr %InPktsNotValid, align 8
  %dep_map.i.i283 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1, i32 0, i32 1
  %57 = tail call ptr @llvm.returnaddress(i32 0) #18
  %58 = ptrtoint ptr %57 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i283, i32 noundef %58) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %59 = ptrtoint ptr %syncp44 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %syncp44, align 4
  %inc.i.i.i284 = add i32 %60, 1
  store i32 %inc.i.i.i284, ptr %syncp44, align 4
  br label %cleanup

if.end48:                                         ; preds = %lor.lhs.false39
  %syncp49 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp49)
  %61 = ptrtoint ptr %validate_frames to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %validate_frames, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %62)
  %cmp51 = icmp eq i32 %62, 1
  br i1 %cmp51, label %if.then53, label %if.else108

if.then53:                                        ; preds = %if.end48
  %InPktsInvalid = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %14, i32 0, i32 5
  %63 = ptrtoint ptr %InPktsInvalid to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %InPktsInvalid, align 8
  %inc55 = add i64 %64, 1
  store i64 %inc55, ptr %InPktsInvalid, align 8
  %65 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %stats76 = getelementptr inbounds %struct.macsec_rx_sa, ptr %2, i32 0, i32 6
  %66 = ptrtoint ptr %stats76 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %stats76, align 8
  %InPktsInvalid77 = getelementptr inbounds %struct.macsec_rx_sa_stats, ptr %67, i32 0, i32 1
  %68 = ptrtoint ptr %InPktsInvalid77 to i32
  %69 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %cpu, align 4
  %arrayidx81 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %70
  %71 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %arrayidx81, align 4
  %add82 = add i32 %72, %68
  %73 = inttoptr i32 %add82 to ptr
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %73, align 4
  %add83 = add i32 %75, 1
  store i32 %add83, ptr %73, align 4
  %76 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i = and i32 %76, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool94.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool94.not, label %if.then98, label %if.then53.do.end101_crit_edge, !prof !203

if.then53.do.end101_crit_edge:                    ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end101

if.then98:                                        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @warn_bogus_irq_restore() #18
  br label %do.end101

do.end101:                                        ; preds = %if.then98, %if.then53.do.end101_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %65) #18, !srcloc !213
  br label %if.end118

if.else108:                                       ; preds = %if.end48
  br i1 %cmp6, label %if.then111, label %if.else114

if.then111:                                       ; preds = %if.else108
  call void @__sanitizer_cov_trace_pc() #20
  %InPktsDelayed = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %14, i32 0, i32 3
  %77 = ptrtoint ptr %InPktsDelayed to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %InPktsDelayed, align 8
  %inc113 = add i64 %78, 1
  store i64 %inc113, ptr %InPktsDelayed, align 8
  br label %if.end118

if.else114:                                       ; preds = %if.else108
  call void @__sanitizer_cov_trace_pc() #20
  %InPktsUnchecked = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %14, i32 0, i32 2
  %79 = ptrtoint ptr %InPktsUnchecked to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %InPktsUnchecked, align 8
  %inc116 = add i64 %80, 1
  store i64 %inc116, ptr %InPktsUnchecked, align 8
  br label %if.end118

if.end118:                                        ; preds = %if.else114, %if.then111, %do.end101
  %dep_map.i.i285 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1, i32 0, i32 1
  %81 = tail call ptr @llvm.returnaddress(i32 0) #18
  %82 = ptrtoint ptr %81 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i285, i32 noundef %82) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %83 = ptrtoint ptr %syncp49 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %syncp49, align 4
  %inc.i.i.i286 = add i32 %84, 1
  store i32 %inc.i.i.i286, ptr %syncp49, align 4
  br label %cleanup

if.else120:                                       ; preds = %if.end30
  %syncp121 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp121)
  br i1 %cmp6, label %if.then124, label %if.else128

if.then124:                                       ; preds = %if.else120
  call void @__sanitizer_cov_trace_pc() #20
  %InPktsDelayed126 = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %14, i32 0, i32 3
  %85 = ptrtoint ptr %InPktsDelayed126 to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %InPktsDelayed126, align 8
  %inc127 = add i64 %86, 1
  store i64 %inc127, ptr %InPktsDelayed126, align 8
  br label %if.end191

if.else128:                                       ; preds = %if.else120
  %InPktsOK = getelementptr inbounds %struct.macsec_rx_sc_stats, ptr %14, i32 0, i32 4
  %87 = ptrtoint ptr %InPktsOK to i32
  call void @__asan_load8_noabort(i32 %87)
  %88 = load i64, ptr %InPktsOK, align 8
  %inc130 = add i64 %88, 1
  store i64 %inc130, ptr %InPktsOK, align 8
  %89 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %stats154 = getelementptr inbounds %struct.macsec_rx_sa, ptr %2, i32 0, i32 6
  %90 = ptrtoint ptr %stats154 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %stats154, align 8
  %92 = ptrtoint ptr %91 to i32
  %93 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %cpu, align 4
  %arrayidx159 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %94
  %95 = ptrtoint ptr %arrayidx159 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %arrayidx159, align 4
  %add160 = add i32 %96, %92
  %97 = inttoptr i32 %add160 to ptr
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %97, align 4
  %add161 = add i32 %99, 1
  store i32 %add161, ptr %97, align 4
  %100 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i287 = and i32 %100, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i287)
  %tobool172.not = icmp eq i32 %and.i.i287, 0
  br i1 %tobool172.not, label %if.then181, label %if.else128.do.end184_crit_edge, !prof !203

if.else128.do.end184_crit_edge:                   ; preds = %if.else128
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end184

if.then181:                                       ; preds = %if.else128
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @warn_bogus_irq_restore() #18
  br label %do.end184

do.end184:                                        ; preds = %if.then181, %if.else128.do.end184_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %89) #18, !srcloc !213
  br label %if.end191

if.end191:                                        ; preds = %do.end184, %if.then124
  %dep_map.i.i288 = getelementptr inbounds %struct.pcpu_rx_sc_stats, ptr %14, i32 0, i32 1, i32 0, i32 1
  %101 = tail call ptr @llvm.returnaddress(i32 0) #18
  %102 = ptrtoint ptr %101 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i288, i32 noundef %102) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %103 = ptrtoint ptr %syncp121 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %syncp121, align 4
  %inc.i.i.i289 = add i32 %104, 1
  store i32 %inc.i.i.i289, ptr %syncp121, align 4
  %add193 = add i32 %pn, 1
  %105 = ptrtoint ptr %lower to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %lower, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add193, i32 %106)
  %cmp195 = icmp ugt i32 %add193, %106
  br i1 %cmp195, label %if.end191.if.end215.sink.split_crit_edge, label %if.else200

if.end191.if.end215.sink.split_crit_edge:         ; preds = %if.end191
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end215.sink.split

if.else200:                                       ; preds = %if.end191
  %xpn201 = getelementptr inbounds %struct.macsec_secy, ptr %secy, i32 0, i32 6
  %107 = ptrtoint ptr %xpn201 to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %xpn201, align 8, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %108)
  %tobool202.not = icmp eq i8 %108, 0
  %shr205276 = xor i32 %106, %pn
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %shr205276)
  %tobool209.not = icmp sgt i32 %shr205276, -1
  %or.cond279 = select i1 %tobool202.not, i1 true, i1 %tobool209.not
  br i1 %or.cond279, label %if.else200.if.end215_crit_edge, label %if.then210

if.else200.if.end215_crit_edge:                   ; preds = %if.else200
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end215

if.then210:                                       ; preds = %if.else200
  call void @__sanitizer_cov_trace_pc() #20
  %109 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %19, align 8
  %inc211 = add i32 %110, 1
  store i32 %inc211, ptr %19, align 8
  br label %if.end215.sink.split

if.end215.sink.split:                             ; preds = %if.then210, %if.end191.if.end215.sink.split_crit_edge
  %111 = ptrtoint ptr %lower to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 %add193, ptr %lower, align 4
  br label %if.end215

if.end215:                                        ; preds = %if.end215.sink.split, %if.else200.if.end215_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end215, %if.end118, %if.then43, %if.then11
  %retval.0 = phi i1 [ false, %if.then43 ], [ false, %if.then11 ], [ true, %if.end215 ], [ true, %if.end118 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macsec_finalize_skb(ptr noundef %skb, i8 noundef zeroext %icv_len, i8 noundef zeroext %hdr_len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %ip_summed, align 8
  %bf.clear = and i16 %bf.load, -1537
  store i16 %bf.clear, ptr %ip_summed, align 8
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %1 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %data, align 4
  %conv = zext i8 %hdr_len to i32
  %add.ptr = getelementptr i8, ptr %2, i32 %conv
  %3 = call ptr @memmove(ptr %add.ptr, ptr %2, i32 12)
  %call = tail call ptr @skb_pull(ptr noundef %skb, i32 noundef %conv) #18
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  %conv3 = zext i8 %icv_len to i32
  %sub = sub i32 %5, %conv3
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %sub)
  %cmp.i.i = icmp ugt i32 %5, %sub
  br i1 %cmp.i.i, label %cond.true.i.i, label %entry.pskb_trim_unique.exit_crit_edge

entry.pskb_trim_unique.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %pskb_trim_unique.exit

cond.true.i.i:                                    ; preds = %entry
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %6 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_len.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i.i.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i.i.i, label %__skb_trim.exit.i.i.i, label %pskb_trim.exit.i

__skb_trim.exit.i.i.i:                            ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %8 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %sub, ptr %len, align 4
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %data, align 4
  %add.ptr.i.i.i.i.i.i = getelementptr i8, ptr %10, i32 %sub
  %tail.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %11 = ptrtoint ptr %tail.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %add.ptr.i.i.i.i.i.i, ptr %tail.i.i.i.i.i.i, align 8
  br label %pskb_trim_unique.exit

pskb_trim.exit.i:                                 ; preds = %cond.true.i.i
  %call.i.i.i = tail call i32 @___pskb_trim(ptr noundef %skb, i32 noundef %sub) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i, label %pskb_trim.exit.i.pskb_trim_unique.exit_crit_edge, label %do.body3.i, !prof !204

pskb_trim.exit.i.pskb_trim_unique.exit_crit_edge: ; preds = %pskb_trim.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %pskb_trim_unique.exit

do.body3.i:                                       ; preds = %pskb_trim.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2827, 0\0A.popsection", ""() #18, !srcloc !232
  unreachable

pskb_trim_unique.exit:                            ; preds = %pskb_trim.exit.i.pskb_trim_unique.exit_crit_edge, %__skb_trim.exit.i.i.i, %entry.pskb_trim_unique.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macsec_reset_skb(ptr noundef %skb, ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %pkt_type = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %pkt_type, align 8
  %bf.clear = and i16 %bf.load, 8191
  store i16 %bf.clear, ptr %pkt_type, align 8
  %call = tail call zeroext i16 @eth_type_trans(ptr noundef %skb, ptr noundef %dev) #18
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %1 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 %call, ptr %protocol, align 8
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %2 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %4 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %5 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = trunc i32 %sub.ptr.sub.i to i16
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %6 = ptrtoint ptr %network_header.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %conv.i, ptr %network_header.i, align 4
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %7 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %transport_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %8)
  %cmp.i.not = icmp eq i16 %8, -1
  br i1 %cmp.i.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %9 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %conv.i, ptr %transport_header.i, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %10 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %mac_header.i, align 2
  %sub.i = sub i16 %conv.i, %11
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %12 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %sub.i, ptr %mac_len.i, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gro_cells_receive(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @count_rx(ptr nocapture noundef readonly %dev, i32 noundef %len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 130
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 64
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %3
  %10 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %10, i32 0, i32 4
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp)
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %10, align 32
  %inc = add i64 %12, 1
  store i64 %inc, ptr %10, align 32
  %conv = sext i32 %len to i64
  %rx_bytes = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %rx_bytes to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %rx_bytes, align 8
  %add2 = add i64 %14, %conv
  store i64 %add2, ptr %rx_bytes, align 8
  %dep_map.i.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %10, i32 0, i32 4, i32 0, i32 1
  %15 = tail call ptr @llvm.returnaddress(i32 0) #18
  %16 = ptrtoint ptr %15 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %16) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %17 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %syncp, align 4
  %inc.i.i.i = add i32 %18, 1
  store i32 %inc.i.i.i, ptr %syncp, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_clone(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_rx(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__pskb_pull_tail(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macsec_decrypt_done(ptr nocapture noundef readonly %base, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %data = getelementptr inbounds %struct.crypto_async_request, ptr %base, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %2 = getelementptr inbounds %struct.anon.0, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %add.ptr.i.i = getelementptr i8, ptr %4, i32 2304
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 3
  %5 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 3, i32 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %sc = getelementptr inbounds %struct.macsec_rx_sa, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sc, align 4
  %10 = ptrtoint ptr %cb.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cb.i, align 4
  tail call void @kfree_sensitive(ptr noundef %11) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err)
  %tobool.not = icmp eq i32 %err, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %valid = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 3, i32 9
  %12 = ptrtoint ptr %valid to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %valid, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call fastcc void @local_bh_disable() #18
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_bh_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %if.end.rcu_read_lock_bh.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock_bh.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock_bh.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock_bh.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock_bh.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock_bh.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock_bh.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 750, ptr noundef nonnull @.str.41) #18
  br label %rcu_read_lock_bh.exit

rcu_read_lock_bh.exit:                            ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge, %land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge, %if.end.rcu_read_lock_bh.exit_crit_edge
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 18
  %13 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %head.i.i, align 8
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15, i32 0, i32 21
  %15 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %mac_header.i.i, align 2
  %conv.i.i = zext i16 %16 to i32
  %add.ptr.i.i38 = getelementptr i8, ptr %14, i32 %conv.i.i
  %packet_number = getelementptr inbounds %struct.macsec_eth_header, ptr %add.ptr.i.i38, i32 0, i32 3
  %17 = ptrtoint ptr %packet_number to i32
  call void @__asan_loadN_noabort(i32 %17, i32 4)
  %18 = load i32, ptr %packet_number, align 1
  %call5 = tail call fastcc zeroext i1 @macsec_post_decrypt(ptr noundef %1, ptr noundef %add.ptr.i.i, i32 noundef %18)
  br i1 %call5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %rcu_read_lock_bh.exit
  %call.i39 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i39, label %if.then6.rcu_read_unlock_bh.exit_crit_edge, label %land.lhs.true.i42

if.then6.rcu_read_unlock_bh.exit_crit_edge:       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit

land.lhs.true.i42:                                ; preds = %if.then6
  %call1.i40 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i40)
  %tobool.not.i41 = icmp eq i32 %call1.i40, 0
  br i1 %tobool.not.i41, label %land.lhs.true.i42.rcu_read_unlock_bh.exit_crit_edge, label %land.lhs.true2.i44

land.lhs.true.i42.rcu_read_unlock_bh.exit_crit_edge: ; preds = %land.lhs.true.i42
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit

land.lhs.true2.i44:                               ; preds = %land.lhs.true.i42
  %.b4.i43 = load i1, ptr @rcu_read_unlock_bh.__warned, align 1
  br i1 %.b4.i43, label %land.lhs.true2.i44.rcu_read_unlock_bh.exit_crit_edge, label %if.then.i45

land.lhs.true2.i44.rcu_read_unlock_bh.exit_crit_edge: ; preds = %land.lhs.true2.i44
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit

if.then.i45:                                      ; preds = %land.lhs.true2.i44
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock_bh.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 761, ptr noundef nonnull @.str.42) #18
  br label %rcu_read_unlock_bh.exit

rcu_read_unlock_bh.exit:                          ; preds = %if.then.i45, %land.lhs.true2.i44.rcu_read_unlock_bh.exit_crit_edge, %land.lhs.true.i42.rcu_read_unlock_bh.exit_crit_edge, %if.then6.rcu_read_unlock_bh.exit_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_bh_lock_map) #18
  tail call fastcc void @local_bh_enable() #18
  tail call void @kfree_skb_reason(ptr noundef %1, i32 noundef 0) #18
  br label %out

if.end7:                                          ; preds = %rcu_read_lock_bh.exit
  %icv_len = getelementptr i8, ptr %4, i32 2322
  %19 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %icv_len, align 2
  %has_sci = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 3, i32 10
  %21 = ptrtoint ptr %has_sci to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %has_sci, align 2, !range !198
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool10.not = icmp eq i8 %22, 0
  %conv12 = select i1 %tobool10.not, i32 8, i32 16
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15
  %23 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.clear.i = and i16 %bf.load.i, -1537
  store i16 %bf.clear.i, ptr %ip_summed.i, align 8
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 19
  %24 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %25, i32 %conv12
  %26 = call ptr @memmove(ptr %add.ptr.i, ptr %25, i32 12)
  %call.i47 = tail call ptr @skb_pull(ptr noundef %1, i32 noundef %conv12) #18
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 6
  %27 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %len.i, align 4
  %29 = and i16 %20, 255
  %conv3.i = zext i16 %29 to i32
  %sub.i = sub i32 %28, %conv3.i
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %sub.i)
  %cmp.i.i.i = icmp ugt i32 %28, %sub.i
  br i1 %cmp.i.i.i, label %cond.true.i.i.i, label %if.end7.macsec_finalize_skb.exit_crit_edge

if.end7.macsec_finalize_skb.exit_crit_edge:       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_finalize_skb.exit

cond.true.i.i.i:                                  ; preds = %if.end7
  %data_len.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 7
  %30 = ptrtoint ptr %data_len.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %data_len.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i.i.i.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i.i.i.i, label %__skb_trim.exit.i.i.i.i, label %pskb_trim.exit.i.i

__skb_trim.exit.i.i.i.i:                          ; preds = %cond.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %32 = ptrtoint ptr %len.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %sub.i, ptr %len.i, align 4
  %33 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %data.i, align 4
  %add.ptr.i.i.i.i.i.i.i = getelementptr i8, ptr %34, i32 %sub.i
  %tail.i.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 16
  %35 = ptrtoint ptr %tail.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %add.ptr.i.i.i.i.i.i.i, ptr %tail.i.i.i.i.i.i.i, align 8
  br label %macsec_finalize_skb.exit

pskb_trim.exit.i.i:                               ; preds = %cond.true.i.i.i
  %call.i.i.i.i = tail call i32 @___pskb_trim(ptr noundef %1, i32 noundef %sub.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %pskb_trim.exit.i.i.macsec_finalize_skb.exit_crit_edge, label %do.body3.i.i, !prof !204

pskb_trim.exit.i.i.macsec_finalize_skb.exit_crit_edge: ; preds = %pskb_trim.exit.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_finalize_skb.exit

do.body3.i.i:                                     ; preds = %pskb_trim.exit.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2827, 0\0A.popsection", ""() #18, !srcloc !232
  unreachable

macsec_finalize_skb.exit:                         ; preds = %pskb_trim.exit.i.i.macsec_finalize_skb.exit_crit_edge, %__skb_trim.exit.i.i.i.i, %if.end7.macsec_finalize_skb.exit_crit_edge
  %36 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %add.ptr.i.i, align 8
  %38 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %bf.load.i48 = load i16, ptr %ip_summed.i, align 8
  %bf.clear.i49 = and i16 %bf.load.i48, 8191
  store i16 %bf.clear.i49, ptr %ip_summed.i, align 8
  %call.i50 = tail call zeroext i16 @eth_type_trans(ptr noundef %1, ptr noundef %37) #18
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15, i32 0, i32 18
  %39 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %call.i50, ptr %protocol.i, align 8
  %40 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %data.i, align 4
  %42 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %41 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %43 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %conv.i.i52 = trunc i32 %sub.ptr.sub.i.i to i16
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15, i32 0, i32 20
  %44 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %conv.i.i52, ptr %network_header.i.i, align 4
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15, i32 0, i32 19
  %45 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %transport_header.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %46)
  %cmp.i.not.i = icmp eq i16 %46, -1
  br i1 %cmp.i.not.i, label %if.then.i53, label %macsec_finalize_skb.exit.macsec_reset_skb.exit_crit_edge

macsec_finalize_skb.exit.macsec_reset_skb.exit_crit_edge: ; preds = %macsec_finalize_skb.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_reset_skb.exit

if.then.i53:                                      ; preds = %macsec_finalize_skb.exit
  call void @__sanitizer_cov_trace_pc() #20
  %47 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 %conv.i.i52, ptr %transport_header.i.i, align 2
  br label %macsec_reset_skb.exit

macsec_reset_skb.exit:                            ; preds = %if.then.i53, %macsec_finalize_skb.exit.macsec_reset_skb.exit_crit_edge
  %48 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %mac_header.i.i, align 2
  %sub.i.i = sub i16 %conv.i.i52, %49
  %mac_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 8
  %50 = ptrtoint ptr %mac_len.i.i to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %sub.i.i, ptr %mac_len.i.i, align 4
  %51 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %len.i, align 4
  %gro_cells = getelementptr i8, ptr %4, i32 2384
  %call15 = tail call i32 @gro_cells_receive(ptr noundef %gro_cells, ptr noundef %1) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %cmp = icmp eq i32 %call15, 0
  br i1 %cmp, label %if.then17, label %macsec_reset_skb.exit.if.end18_crit_edge

macsec_reset_skb.exit.if.end18_crit_edge:         ; preds = %macsec_reset_skb.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end18

if.then17:                                        ; preds = %macsec_reset_skb.exit
  call void @__sanitizer_cov_trace_pc() #20
  %53 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 130
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %53, align 64
  %56 = ptrtoint ptr %55 to i32
  %57 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 3
  %59 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %60
  %61 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx.i, align 4
  %add.i55 = add i32 %62, %56
  %63 = inttoptr i32 %add.i55 to ptr
  %syncp.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %63, i32 0, i32 4
  tail call fastcc void @u64_stats_update_begin(ptr noundef %syncp.i) #18
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %63, align 32
  %inc.i = add i64 %65, 1
  store i64 %inc.i, ptr %63, align 32
  %conv.i56 = sext i32 %52 to i64
  %rx_bytes.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %63, i32 0, i32 1
  %66 = ptrtoint ptr %rx_bytes.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %rx_bytes.i, align 8
  %add2.i = add i64 %67, %conv.i56
  store i64 %add2.i, ptr %rx_bytes.i, align 8
  %dep_map.i.i.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %63, i32 0, i32 4, i32 0, i32 1
  %68 = tail call ptr @llvm.returnaddress(i32 0) #18
  %69 = ptrtoint ptr %68 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %69) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !217
  %70 = ptrtoint ptr %syncp.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %syncp.i, align 4
  %inc.i.i.i.i = add i32 %71, 1
  store i32 %inc.i.i.i.i, ptr %syncp.i, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %macsec_reset_skb.exit.if.end18_crit_edge
  %call.i57 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i57, label %if.end18.rcu_read_unlock_bh.exit64_crit_edge, label %land.lhs.true.i60

if.end18.rcu_read_unlock_bh.exit64_crit_edge:     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit64

land.lhs.true.i60:                                ; preds = %if.end18
  %call1.i58 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i58)
  %tobool.not.i59 = icmp eq i32 %call1.i58, 0
  br i1 %tobool.not.i59, label %land.lhs.true.i60.rcu_read_unlock_bh.exit64_crit_edge, label %land.lhs.true2.i62

land.lhs.true.i60.rcu_read_unlock_bh.exit64_crit_edge: ; preds = %land.lhs.true.i60
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit64

land.lhs.true2.i62:                               ; preds = %land.lhs.true.i60
  %.b4.i61 = load i1, ptr @rcu_read_unlock_bh.__warned, align 1
  br i1 %.b4.i61, label %land.lhs.true2.i62.rcu_read_unlock_bh.exit64_crit_edge, label %if.then.i63

land.lhs.true2.i62.rcu_read_unlock_bh.exit64_crit_edge: ; preds = %land.lhs.true2.i62
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock_bh.exit64

if.then.i63:                                      ; preds = %land.lhs.true2.i62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock_bh.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 761, ptr noundef nonnull @.str.42) #18
  br label %rcu_read_unlock_bh.exit64

rcu_read_unlock_bh.exit64:                        ; preds = %if.then.i63, %land.lhs.true2.i62.rcu_read_unlock_bh.exit64_crit_edge, %land.lhs.true.i60.rcu_read_unlock_bh.exit64_crit_edge, %if.end18.rcu_read_unlock_bh.exit64_crit_edge
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_bh_lock_map) #18
  tail call fastcc void @local_bh_enable() #18
  br label %out

out:                                              ; preds = %rcu_read_unlock_bh.exit64, %rcu_read_unlock_bh.exit
  %refcnt.i = getelementptr inbounds %struct.macsec_rx_sa, ptr %7, i32 0, i32 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #18
  %72 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %72, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i65, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %out
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.macsec_rxsa_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !204

if.end5.i.i.i.i.macsec_rxsa_put.exit_crit_edge:   ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_rxsa_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i, i32 noundef 3) #18
  br label %macsec_rxsa_put.exit

if.then.i65:                                      ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %rcu.i = getelementptr inbounds %struct.macsec_rx_sa, ptr %7, i32 0, i32 8
  tail call void @call_rcu(ptr noundef %rcu.i, ptr noundef nonnull @free_rxsa) #18
  br label %macsec_rxsa_put.exit

macsec_rxsa_put.exit:                             ; preds = %if.then.i65, %if.then10.i.i.i.i, %if.end5.i.i.i.i.macsec_rxsa_put.exit_crit_edge
  %refcnt.i66 = getelementptr inbounds %struct.macsec_rx_sc, ptr %9, i32 0, i32 5
  %call.i.i.i.i.i.i67 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i66, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !206
  tail call void @llvm.prefetch.p0(ptr %refcnt.i66, i32 1, i32 3, i32 1) #18
  %73 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i66, ptr %refcnt.i66, i32 1, ptr elementtype(i32) %refcnt.i66) #18, !srcloc !207
  %asmresult.i.i.i.i.i.i.i68 = extractvalue { i32, i32, i32 } %73, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i68)
  %cmp.i.i.i.i69 = icmp eq i32 %asmresult.i.i.i.i.i.i.i68, 1
  br i1 %cmp.i.i.i.i69, label %if.then.i73, label %if.end5.i.i.i.i71

if.end5.i.i.i.i71:                                ; preds = %macsec_rxsa_put.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i68)
  %.not.i.i.i.i70 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i68, 0
  br i1 %.not.i.i.i.i70, label %if.end5.i.i.i.i71.macsec_rxsc_put.exit_crit_edge, label %if.then10.i.i.i.i72, !prof !204

if.end5.i.i.i.i71.macsec_rxsc_put.exit_crit_edge: ; preds = %if.end5.i.i.i.i71
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_rxsc_put.exit

if.then10.i.i.i.i72:                              ; preds = %if.end5.i.i.i.i71
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i66, i32 noundef 3) #18
  br label %macsec_rxsc_put.exit

if.then.i73:                                      ; preds = %macsec_rxsa_put.exit
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !208
  %callback_head.i = getelementptr inbounds %struct.macsec_rx_sc, ptr %9, i32 0, i32 6
  tail call void @call_rcu(ptr noundef %callback_head.i, ptr noundef nonnull @free_rx_sc_rcu) #18
  br label %macsec_rxsc_put.exit

macsec_rxsc_put.exit:                             ; preds = %if.then.i73, %if.then10.i.i.i.i72, %if.end5.i.i.i.i71.macsec_rxsc_put.exit_crit_edge
  %tobool.not.i74 = icmp eq ptr %4, null
  br i1 %tobool.not.i74, label %macsec_rxsc_put.exit.dev_put.exit_crit_edge, label %do.body1.i

macsec_rxsc_put.exit.dev_put.exit_crit_edge:      ; preds = %macsec_rxsc_put.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %dev_put.exit

do.body1.i:                                       ; preds = %macsec_rxsc_put.exit
  %74 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #18, !srcloc !211
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 118
  %75 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %pcpu_refcnt.i, align 4
  %77 = ptrtoint ptr %76 to i32
  %78 = tail call i32 @llvm.read_register.i32(metadata !187) #18
  %and.i.i75 = and i32 %78, -16384
  %79 = inttoptr i32 %and.i.i75 to ptr
  %cpu.i76 = getelementptr inbounds %struct.thread_info, ptr %79, i32 0, i32 3
  %80 = ptrtoint ptr %cpu.i76 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %cpu.i76, align 4
  %arrayidx.i77 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %81
  %82 = ptrtoint ptr %arrayidx.i77 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %arrayidx.i77, align 4
  %add.i78 = add i32 %83, %77
  %84 = inttoptr i32 %add.i78 to ptr
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %84, align 4
  %add13.i = add i32 %86, -1
  store i32 %add13.i, ptr %84, align 4
  %87 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #18, !srcloc !212
  %and.i.i.i = and i32 %87, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !203

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @warn_bogus_irq_restore() #18
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %74) #18, !srcloc !213
  br label %dev_put.exit

dev_put.exit:                                     ; preds = %do.end30.i, %macsec_rxsc_put.exit.dev_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crypto_aead_decrypt(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_pull(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___pskb_trim(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_rx_handler_register(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdevice_queue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macsec_common_dellink(ptr noundef %dev, ptr noundef %head) unnamed_addr #0 align 64 {
entry:
  %ctx = alloca %struct.macsec_context, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i.i = getelementptr i8, ptr %dev, i32 2304
  %real_dev1 = getelementptr i8, ptr %dev, i32 2368
  %0 = ptrtoint ptr %real_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %real_dev1, align 8
  %offload.i = getelementptr i8, ptr %dev, i32 2388
  %2 = ptrtoint ptr %offload.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %offload.i, align 4
  %.off.i = add i32 %3, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then, label %entry.if.end8_crit_edge

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %ctx) #18
  %tobool.not.i.i = icmp eq ptr %add.ptr.i.i, null
  %tobool1.not.i.i = icmp eq ptr %1, null
  %or.cond = select i1 %tobool.not.i.i, i1 true, i1 %tobool1.not.i.i
  br i1 %or.cond, label %if.then.if.end_crit_edge, label %if.end.i.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i.i:                                       ; preds = %if.then
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.79)
  switch i32 %3, label %if.end.i.i.if.end_crit_edge [
    i32 1, label %if.then2.i.i
    i32 2, label %if.then9.i.i
  ]

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then2.i.i:                                     ; preds = %if.end.i.i
  %phydev.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 145
  %5 = ptrtoint ptr %phydev.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %phydev.i.i, align 16
  %tobool4.not.i.i = icmp eq ptr %6, null
  br i1 %tobool4.not.i.i, label %if.then2.i.i.if.end_crit_edge, label %land.rhs.i.i

if.then2.i.i.if.end_crit_edge:                    ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %macsec_ops.i.i = getelementptr inbounds %struct.phy_device, ptr %6, i32 0, i32 42
  %7 = ptrtoint ptr %macsec_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %macsec_ops.i.i, align 4
  %tobool7.i.not.i = icmp eq ptr %8, null
  br i1 %tobool7.i.not.i, label %land.rhs.i.i.if.end_crit_edge, label %land.rhs.i.i.macsec_get_ops.exit_crit_edge

land.rhs.i.i.macsec_get_ops.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then9.i.i:                                     ; preds = %if.end.i.i
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 23
  %9 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %features.i.i, align 16
  %and.i.i = and i64 %10, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool11.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool11.not.i.i, label %if.then9.i.i.if.end_crit_edge, label %macsec_check_offload.exit.i

if.then9.i.i.if.end_crit_edge:                    ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_check_offload.exit.i:                      ; preds = %if.then9.i.i
  %macsec_ops14.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 151
  %11 = ptrtoint ptr %macsec_ops14.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %macsec_ops14.i.i, align 8
  %tobool15.i.not.i = icmp eq ptr %12, null
  br i1 %tobool15.i.not.i, label %macsec_check_offload.exit.i.if.end_crit_edge, label %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge

macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge: ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_get_ops.exit

macsec_check_offload.exit.i.if.end_crit_edge:     ; preds = %macsec_check_offload.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

macsec_get_ops.exit:                              ; preds = %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge, %land.rhs.i.i.macsec_get_ops.exit_crit_edge
  %storemerge = phi ptr [ %6, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %1, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %retval.0.in.i.i = phi ptr [ %macsec_ops.i.i, %land.rhs.i.i.macsec_get_ops.exit_crit_edge ], [ %macsec_ops14.i.i, %macsec_check_offload.exit.i.macsec_get_ops.exit_crit_edge ]
  %13 = getelementptr inbounds i8, ptr %ctx, i32 12
  %14 = call ptr @memset(ptr %13, i32 0, i32 148)
  %offload1.i.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %15 = ptrtoint ptr %offload1.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %3, ptr %offload1.i.i, align 4
  %16 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %storemerge, ptr %ctx, align 4
  %17 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %retval.0.i12.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool.not = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool.not, label %macsec_get_ops.exit.if.end_crit_edge, label %if.then5

macsec_get_ops.exit.if.end_crit_edge:             ; preds = %macsec_get_ops.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then5:                                         ; preds = %macsec_get_ops.exit
  %secy6 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 2
  %18 = ptrtoint ptr %secy6 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %add.ptr.i.i, ptr %secy6, align 4
  %mdo_del_secy = getelementptr inbounds %struct.macsec_ops, ptr %retval.0.i12.i, i32 0, i32 4
  %19 = ptrtoint ptr %mdo_del_secy to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mdo_del_secy, align 4
  %tobool.not.i = icmp eq ptr %20, null
  br i1 %tobool.not.i, label %if.then5.if.end_crit_edge, label %if.end.i19, !prof !203

if.then5.if.end_crit_edge:                        ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end.i19:                                       ; preds = %if.then5
  %offload.i18 = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 1
  %21 = ptrtoint ptr %offload.i18 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %offload.i18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp.i = icmp eq i32 %22, 1
  br i1 %cmp.i, label %if.then4.i, label %if.end.i19.if.end5.i_crit_edge

if.end.i19.if.end5.i_crit_edge:                   ; preds = %if.end.i19
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i19
  call void @__sanitizer_cov_trace_pc() #20
  %23 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ctx, align 4
  %lock.i = getelementptr inbounds %struct.phy_device, ptr %24, i32 0, i32 32
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #18
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i19.if.end5.i_crit_edge
  %prepare.i = getelementptr inbounds %struct.macsec_context, ptr %ctx, i32 0, i32 6
  %25 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %bf.load.i = load i8, ptr %prepare.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %prepare.i, align 4
  %call.i = call i32 %20(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end5.i.phy_unlock.i_crit_edge

if.end5.i.phy_unlock.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

if.end8.i:                                        ; preds = %if.end5.i
  %26 = ptrtoint ptr %prepare.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load10.i = load i8, ptr %prepare.i, align 4
  %bf.clear11.i = and i8 %bf.load10.i, 127
  store i8 %bf.clear11.i, ptr %prepare.i, align 4
  %call13.i = call i32 %20(ptr noundef nonnull %ctx) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8.i.phy_unlock.i_crit_edge, label %do.end.i, !prof !204

if.end8.i.phy_unlock.i_crit_edge:                 ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %phy_unlock.i

do.end.i:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #20
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1656, i32 noundef 9, ptr noundef nonnull @.str.8, i32 noundef %call13.i) #18
  br label %phy_unlock.i

phy_unlock.i:                                     ; preds = %do.end.i, %if.end8.i.phy_unlock.i_crit_edge, %if.end5.i.phy_unlock.i_crit_edge
  %27 = ptrtoint ptr %offload.i18 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %offload.i18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %28)
  %cmp45.i = icmp eq i32 %28, 1
  br i1 %cmp45.i, label %if.then46.i, label %phy_unlock.i.if.end_crit_edge

phy_unlock.i.if.end_crit_edge:                    ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then46.i:                                      ; preds = %phy_unlock.i
  call void @__sanitizer_cov_trace_pc() #20
  %29 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ctx, align 4
  %lock47.i = getelementptr inbounds %struct.phy_device, ptr %30, i32 0, i32 32
  call void @mutex_unlock(ptr noundef %lock47.i) #18
  br label %if.end

if.end:                                           ; preds = %if.then46.i, %phy_unlock.i.if.end_crit_edge, %if.then5.if.end_crit_edge, %macsec_get_ops.exit.if.end_crit_edge, %macsec_check_offload.exit.i.if.end_crit_edge, %if.then9.i.i.if.end_crit_edge, %land.rhs.i.i.if.end_crit_edge, %if.then2.i.i.if.end_crit_edge, %if.end.i.i.if.end_crit_edge, %if.then.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %ctx) #18
  br label %if.end8

if.end8:                                          ; preds = %if.end, %entry.if.end8_crit_edge
  call void @unregister_netdevice_queue(ptr noundef %dev, ptr noundef %head) #18
  %secys = getelementptr i8, ptr %dev, i32 2376
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %secys) #18
  br i1 %call.i.i, label %if.end.i.i21, label %if.end8.list_del_rcu.exit_crit_edge

if.end8.list_del_rcu.exit_crit_edge:              ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  br label %list_del_rcu.exit

if.end.i.i21:                                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #20
  %prev.i.i = getelementptr i8, ptr %dev, i32 2380
  %31 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %prev.i.i, align 4
  %33 = ptrtoint ptr %secys to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %secys, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %32, ptr %prev1.i.i.i, align 4
  %36 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %34, ptr %32, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i21, %if.end8.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr i8, ptr %dev, i32 2380
  %37 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  call fastcc void @macsec_del_dev(ptr noundef %add.ptr.i.i)
  call void @netdev_upper_dev_unlink(ptr noundef %1, ptr noundef %dev) #18
  %38 = load i32, ptr @macsec_generation, align 4
  %inc = add i32 %38, 1
  store i32 %inc, ptr @macsec_generation, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_rx_handler_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macsec_notify(ptr nocapture noundef readnone %this, i32 noundef %event, ptr nocapture noundef readonly %ptr) #0 align 64 {
entry:
  %head = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ptr, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %head) #18
  %2 = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %3 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %head, ptr %head, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %head, ptr %2, align 4
  %rx_handler.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 94
  %5 = ptrtoint ptr %rx_handler.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %rx_handler.i, align 32
  %cmp.i = icmp eq ptr %6, @macsec_handle_frame
  br i1 %cmp.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = zext i32 %event to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.80)
  switch i32 %event, label %if.end.cleanup_crit_edge [
    i32 2, label %if.end.sw.bb_crit_edge
    i32 1, label %if.end.sw.bb_crit_edge136
    i32 4, label %if.end.sw.bb_crit_edge137
    i32 6, label %sw.bb16
    i32 7, label %sw.bb46
  ]

if.end.sw.bb_crit_edge137:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end.sw.bb_crit_edge136:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

sw.bb:                                            ; preds = %if.end.sw.bb_crit_edge, %if.end.sw.bb_crit_edge136, %if.end.sw.bb_crit_edge137
  %call.i = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call.i, label %sw.bb.macsec_data_rtnl.exit_crit_edge, label %land.lhs.true.i

sw.bb.macsec_data_rtnl.exit_crit_edge:            ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

land.lhs.true.i:                                  ; preds = %sw.bb
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.macsec_data_rtnl.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.macsec_data_rtnl.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @macsec_data_rtnl.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge, label %if.then.i

land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rtnl.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 136, ptr noundef nonnull @.str.4) #18
  br label %macsec_data_rtnl.exit

macsec_data_rtnl.exit:                            ; preds = %if.then.i, %land.lhs.true2.i.macsec_data_rtnl.exit_crit_edge, %land.lhs.true.i.macsec_data_rtnl.exit_crit_edge, %sw.bb.macsec_data_rtnl.exit_crit_edge
  %rx_handler_data.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 95
  %8 = ptrtoint ptr %rx_handler_data.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rx_handler_data.i, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %cmp.not130 = icmp eq ptr %11, %9
  br i1 %cmp.not130, label %macsec_data_rtnl.exit.cleanup_crit_edge, label %macsec_data_rtnl.exit.for.body_crit_edge

macsec_data_rtnl.exit.for.body_crit_edge:         ; preds = %macsec_data_rtnl.exit
  br label %for.body

macsec_data_rtnl.exit.cleanup_crit_edge:          ; preds = %macsec_data_rtnl.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %macsec_data_rtnl.exit.for.body_crit_edge
  %.pn103.in131 = phi ptr [ %.pn103, %for.body.for.body_crit_edge ], [ %11, %macsec_data_rtnl.exit.for.body_crit_edge ]
  %m.0 = getelementptr i8, ptr %.pn103.in131, i32 -72
  %12 = ptrtoint ptr %.pn103.in131 to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn103 = load ptr, ptr %.pn103.in131, align 8
  %13 = ptrtoint ptr %m.0 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %m.0, align 8
  call void @netif_stacked_transfer_operstate(ptr noundef %1, ptr noundef %14) #18
  %cmp.not = icmp eq ptr %.pn103, %9
  br i1 %cmp.not, label %for.body.cleanup_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

sw.bb16:                                          ; preds = %if.end
  %call.i106 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call.i106, label %sw.bb16.macsec_data_rtnl.exit114_crit_edge, label %land.lhs.true.i109

sw.bb16.macsec_data_rtnl.exit114_crit_edge:       ; preds = %sw.bb16
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit114

land.lhs.true.i109:                               ; preds = %sw.bb16
  %call1.i107 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i107)
  %tobool.not.i108 = icmp eq i32 %call1.i107, 0
  br i1 %tobool.not.i108, label %land.lhs.true.i109.macsec_data_rtnl.exit114_crit_edge, label %land.lhs.true2.i111

land.lhs.true.i109.macsec_data_rtnl.exit114_crit_edge: ; preds = %land.lhs.true.i109
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit114

land.lhs.true2.i111:                              ; preds = %land.lhs.true.i109
  %.b4.i110 = load i1, ptr @macsec_data_rtnl.__warned, align 1
  br i1 %.b4.i110, label %land.lhs.true2.i111.macsec_data_rtnl.exit114_crit_edge, label %if.then.i112

land.lhs.true2.i111.macsec_data_rtnl.exit114_crit_edge: ; preds = %land.lhs.true2.i111
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit114

if.then.i112:                                     ; preds = %land.lhs.true2.i111
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rtnl.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 136, ptr noundef nonnull @.str.4) #18
  br label %macsec_data_rtnl.exit114

macsec_data_rtnl.exit114:                         ; preds = %if.then.i112, %land.lhs.true2.i111.macsec_data_rtnl.exit114_crit_edge, %land.lhs.true.i109.macsec_data_rtnl.exit114_crit_edge, %sw.bb16.macsec_data_rtnl.exit114_crit_edge
  %rx_handler_data.i113 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 95
  %15 = ptrtoint ptr %rx_handler_data.i113 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rx_handler_data.i113, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %cmp34.not128 = icmp eq ptr %18, %16
  br i1 %cmp34.not128, label %macsec_data_rtnl.exit114.for.end45_crit_edge, label %macsec_data_rtnl.exit114.for.body36_crit_edge

macsec_data_rtnl.exit114.for.body36_crit_edge:    ; preds = %macsec_data_rtnl.exit114
  br label %for.body36

macsec_data_rtnl.exit114.for.end45_crit_edge:     ; preds = %macsec_data_rtnl.exit114
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end45

for.body36:                                       ; preds = %for.body36.for.body36_crit_edge, %macsec_data_rtnl.exit114.for.body36_crit_edge
  %.pn102.in129 = phi ptr [ %.pn102, %for.body36.for.body36_crit_edge ], [ %18, %macsec_data_rtnl.exit114.for.body36_crit_edge ]
  %m17.0 = getelementptr i8, ptr %.pn102.in129, i32 -72
  %19 = ptrtoint ptr %.pn102.in129 to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn102 = load ptr, ptr %.pn102.in129, align 8
  %20 = ptrtoint ptr %m17.0 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %m17.0, align 8
  call fastcc void @macsec_common_dellink(ptr noundef %21, ptr noundef nonnull %head)
  %cmp34.not = icmp eq ptr %.pn102, %16
  br i1 %cmp34.not, label %for.body36.for.end45_crit_edge, label %for.body36.for.body36_crit_edge

for.body36.for.body36_crit_edge:                  ; preds = %for.body36
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body36

for.body36.for.end45_crit_edge:                   ; preds = %for.body36
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end45

for.end45:                                        ; preds = %for.body36.for.end45_crit_edge, %macsec_data_rtnl.exit114.for.end45_crit_edge
  call void @netdev_rx_handler_unregister(ptr noundef %1) #18
  call void @kfree(ptr noundef %16) #18
  call void @unregister_netdevice_many(ptr noundef nonnull %head) #18
  br label %cleanup

sw.bb46:                                          ; preds = %if.end
  %call.i115 = call zeroext i1 @lockdep_rtnl_is_held() #18
  br i1 %call.i115, label %sw.bb46.macsec_data_rtnl.exit123_crit_edge, label %land.lhs.true.i118

sw.bb46.macsec_data_rtnl.exit123_crit_edge:       ; preds = %sw.bb46
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit123

land.lhs.true.i118:                               ; preds = %sw.bb46
  %call1.i116 = call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i116)
  %tobool.not.i117 = icmp eq i32 %call1.i116, 0
  br i1 %tobool.not.i117, label %land.lhs.true.i118.macsec_data_rtnl.exit123_crit_edge, label %land.lhs.true2.i120

land.lhs.true.i118.macsec_data_rtnl.exit123_crit_edge: ; preds = %land.lhs.true.i118
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit123

land.lhs.true2.i120:                              ; preds = %land.lhs.true.i118
  %.b4.i119 = load i1, ptr @macsec_data_rtnl.__warned, align 1
  br i1 %.b4.i119, label %land.lhs.true2.i120.macsec_data_rtnl.exit123_crit_edge, label %if.then.i121

land.lhs.true2.i120.macsec_data_rtnl.exit123_crit_edge: ; preds = %land.lhs.true2.i120
  call void @__sanitizer_cov_trace_pc() #20
  br label %macsec_data_rtnl.exit123

if.then.i121:                                     ; preds = %land.lhs.true2.i120
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @macsec_data_rtnl.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 136, ptr noundef nonnull @.str.4) #18
  br label %macsec_data_rtnl.exit123

macsec_data_rtnl.exit123:                         ; preds = %if.then.i121, %land.lhs.true2.i120.macsec_data_rtnl.exit123_crit_edge, %land.lhs.true.i118.macsec_data_rtnl.exit123_crit_edge, %sw.bb46.macsec_data_rtnl.exit123_crit_edge
  %rx_handler_data.i122 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 95
  %22 = ptrtoint ptr %rx_handler_data.i122 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rx_handler_data.i122, align 4
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %.pn125 = load ptr, ptr %23, align 4
  %cmp58.not126 = icmp eq ptr %.pn125, %23
  br i1 %cmp58.not126, label %macsec_data_rtnl.exit123.cleanup_crit_edge, label %for.body60.lr.ph

macsec_data_rtnl.exit123.cleanup_crit_edge:       ; preds = %macsec_data_rtnl.exit123
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

for.body60.lr.ph:                                 ; preds = %macsec_data_rtnl.exit123
  %mtu64 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 20
  br label %for.body60

for.body60:                                       ; preds = %if.end72.for.body60_crit_edge, %for.body60.lr.ph
  %.pn127 = phi ptr [ %.pn125, %for.body60.lr.ph ], [ %.pn, %if.end72.for.body60_crit_edge ]
  %m47.0 = getelementptr i8, ptr %.pn127, i32 -72
  %25 = ptrtoint ptr %m47.0 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %m47.0, align 8
  %27 = ptrtoint ptr %mtu64 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %mtu64, align 4
  %icv_len = getelementptr i8, ptr %.pn127, i32 -54
  %29 = ptrtoint ptr %icv_len to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %icv_len, align 2
  %conv = zext i16 %30 to i32
  %add.neg = add i32 %28, -16
  %sub = sub i32 %add.neg, %conv
  %mtu67 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 20
  %31 = ptrtoint ptr %mtu67 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mtu67, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %sub)
  %cmp68 = icmp ugt i32 %32, %sub
  br i1 %cmp68, label %if.then70, label %for.body60.if.end72_crit_edge

for.body60.if.end72_crit_edge:                    ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end72

if.then70:                                        ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #20
  %call71 = call i32 @dev_set_mtu(ptr noundef %26, i32 noundef %sub) #18
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %for.body60.if.end72_crit_edge
  %33 = ptrtoint ptr %.pn127 to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn = load ptr, ptr %.pn127, align 4
  %cmp58.not = icmp eq ptr %.pn, %23
  br i1 %cmp58.not, label %if.end72.cleanup_crit_edge, label %if.end72.for.body60_crit_edge

if.end72.for.body60_crit_edge:                    ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body60

if.end72.cleanup_crit_edge:                       ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

cleanup:                                          ; preds = %if.end72.cleanup_crit_edge, %macsec_data_rtnl.exit123.cleanup_crit_edge, %for.end45, %for.body.cleanup_crit_edge, %macsec_data_rtnl.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 1, %if.end.cleanup_crit_edge ], [ 1, %for.end45 ], [ 1, %macsec_data_rtnl.exit.cleanup_crit_edge ], [ 1, %macsec_data_rtnl.exit123.cleanup_crit_edge ], [ 1, %for.body.cleanup_crit_edge ], [ 1, %if.end72.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %head) #18
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdevice_many(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_mtu(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdevice_notifier(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rtnl_link_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @genl_register_family(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #17

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #18

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #19 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 65)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #19 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 65)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #4 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #10 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #13 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { nounwind readonly }
attributes #17 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #18 = { nounwind }
attributes #19 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #20 = { nomerge }
attributes #21 = { cold nounwind }
attributes #22 = { nounwind allocsize(2) }
attributes #23 = { nounwind allocsize(0) }
attributes #24 = { nounwind readonly willreturn }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !15, !17, !18, !19, !20, !21, !23, !25, !27, !29, !31, !32, !34, !36, !37, !39, !41, !43, !45, !46, !48, !50, !51, !53, !55, !57, !59, !60, !61, !62, !64, !65, !66, !68, !69, !70, !72, !74, !76, !77, !79, !81, !83, !84, !85, !86, !88, !89, !90, !91, !93, !94, !95, !97, !98, !99, !101, !103, !104, !106, !108, !109, !110, !111, !113, !115, !117, !119, !121, !122, !124, !125, !127, !129, !130, !131, !133, !134, !136, !138, !140, !142, !143, !144, !145, !146, !148, !150, !151, !153, !155, !157, !158, !160, !162, !163, !165, !167, !168, !170, !172, !174, !176, !178, !180, !182, !184, !185, !186}
!llvm.named.register.sp = !{!187}
!llvm.module.flags = !{!188, !189, !190, !191, !192, !193, !194, !195}
!llvm.ident = !{!196}

!0 = !{ptr @__ksymtab_macsec_pn_wrapped, !1, !"__ksymtab_macsec_pn_wrapped", i1 false, i1 false}
!1 = !{!"../drivers/net/macsec.c", i32 469, i32 1}
!2 = !{ptr @__initcall__kmod_macsec__511_4372_macsec_init6, !3, !"__initcall__kmod_macsec__511_4372_macsec_init6", i1 false, i1 false}
!3 = !{!"../drivers/net/macsec.c", i32 4372, i32 1}
!4 = !{ptr @__exitcall_macsec_exit, !5, !"__exitcall_macsec_exit", i1 false, i1 false}
!5 = !{!"../drivers/net/macsec.c", i32 4373, i32 1}
!6 = !{ptr @__UNIQUE_ID_alias512, !7, !"__UNIQUE_ID_alias512", i1 false, i1 false}
!7 = !{!"../drivers/net/macsec.c", i32 4375, i32 1}
!8 = !{ptr @__UNIQUE_ID_alias513, !9, !"__UNIQUE_ID_alias513", i1 false, i1 false}
!9 = !{!"../drivers/net/macsec.c", i32 4376, i32 1}
!10 = !{ptr @__UNIQUE_ID_description514, !11, !"__UNIQUE_ID_description514", i1 false, i1 false}
!11 = !{!"../drivers/net/macsec.c", i32 4378, i32 1}
!12 = !{ptr @__UNIQUE_ID_file515, !13, !"__UNIQUE_ID_file515", i1 false, i1 false}
!13 = !{!"../drivers/net/macsec.c", i32 4379, i32 1}
!14 = !{ptr @__UNIQUE_ID_license516, !13, !"__UNIQUE_ID_license516", i1 false, i1 false}
!15 = !{ptr @.str, !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"../drivers/net/macsec.c", i32 457, i32 2}
!17 = !{ptr @.str.1, !16, !"<string literal>", i1 false, i1 false}
!18 = !{ptr @.str.2, !16, !"<string literal>", i1 false, i1 false}
!19 = !{ptr @.str.3, !16, !"<string literal>", i1 false, i1 false}
!20 = !{ptr @__macsec_pn_wrapped.__UNIQUE_ID_ddebug476, !16, !"__UNIQUE_ID_ddebug476", i1 false, i1 false}
!21 = !{ptr @macsec_fam, !22, !"macsec_fam", i1 false, i1 false}
!22 = !{!"../drivers/net/macsec.c", i32 3359, i32 27}
!23 = !{ptr @macsec_genl_policy, !24, !"macsec_genl_policy", i1 false, i1 false}
!24 = !{!"../drivers/net/macsec.c", i32 1602, i32 32}
!25 = !{ptr @macsec_genl_ops, !26, !"macsec_genl_ops", i1 false, i1 false}
!26 = !{!"../drivers/net/macsec.c", i32 3291, i32 36}
!27 = !{ptr @macsec_generation, !28, !"macsec_generation", i1 false, i1 false}
!28 = !{!"../drivers/net/macsec.c", i32 3254, i32 12}
!29 = distinct !{null, !30, !"__warned", i1 false, i1 false}
!30 = !{!"../drivers/net/macsec.c", i32 3083, i32 32}
!31 = !{ptr @.str.4, !30, !"<string literal>", i1 false, i1 false}
!32 = distinct !{null, !33, !"__warned", i1 false, i1 false}
!33 = !{!"../drivers/net/macsec.c", i32 3140, i32 2}
!34 = distinct !{null, !35, !"__warned", i1 false, i1 false}
!35 = !{!"../drivers/net/macsec.c", i32 3183, i32 33}
!36 = distinct !{null, !33, !"__warned", i1 false, i1 false}
!37 = !{ptr @.str.8, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../drivers/net/macsec.c", i32 1656, i32 3}
!39 = !{ptr @.str.9, !40, !"<string literal>", i1 false, i1 false}
!40 = !{!"../include/net/netlink.h", i32 991, i32 3}
!41 = !{ptr @macsec_genl_rxsc_policy, !42, !"macsec_genl_rxsc_policy", i1 false, i1 false}
!42 = !{!"../drivers/net/macsec.c", i32 1609, i32 32}
!43 = !{ptr @create_rx_sc.__key, !44, !"__key", i1 false, i1 false}
!44 = !{!"../drivers/net/macsec.c", i32 1410, i32 17}
!45 = !{ptr @.str.10, !44, !"<string literal>", i1 false, i1 false}
!46 = distinct !{null, !47, !"__warned", i1 false, i1 false}
!47 = !{!"../drivers/net/macsec.c", i32 136, i32 9}
!48 = distinct !{null, !49, !"__warned", i1 false, i1 false}
!49 = !{!"../drivers/net/macsec.c", i32 987, i32 2}
!50 = distinct !{null, !49, !"__warned", i1 false, i1 false}
!51 = distinct !{null, !52, !"__warned", i1 false, i1 false}
!52 = !{!"../drivers/net/macsec.c", i32 1379, i32 38}
!53 = distinct !{null, !54, !"__warned", i1 false, i1 false}
!54 = !{!"../drivers/net/macsec.c", i32 1381, i32 38}
!55 = distinct !{null, !56, !"__warned", i1 false, i1 false}
!56 = !{!"../drivers/net/macsec.c", i32 1365, i32 29}
!57 = !{ptr @.str.13, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../drivers/net/macsec.c", i32 1989, i32 3}
!59 = !{ptr @.str.14, !58, !"<string literal>", i1 false, i1 false}
!60 = !{ptr @macsec_add_txsa._entry, !58, !"_entry", i1 false, i1 false}
!61 = !{ptr @macsec_add_txsa._entry_ptr, !58, !"_entry_ptr", i1 false, i1 false}
!62 = !{ptr @.str.16, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../drivers/net/macsec.c", i32 1997, i32 3}
!64 = !{ptr @macsec_add_txsa._entry.15, !63, !"_entry", i1 false, i1 false}
!65 = !{ptr @macsec_add_txsa._entry_ptr.17, !63, !"_entry_ptr", i1 false, i1 false}
!66 = !{ptr @.str.19, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/net/macsec.c", i32 2010, i32 4}
!68 = !{ptr @macsec_add_txsa._entry.18, !67, !"_entry", i1 false, i1 false}
!69 = !{ptr @macsec_add_txsa._entry_ptr.20, !67, !"_entry_ptr", i1 false, i1 false}
!70 = distinct !{null, !71, !"__warned", i1 false, i1 false}
!71 = !{!"../drivers/net/macsec.c", i32 2018, i32 10}
!72 = !{ptr @macsec_genl_sa_policy, !73, !"macsec_genl_sa_policy", i1 false, i1 false}
!73 = !{!"../drivers/net/macsec.c", i32 1614, i32 32}
!74 = !{ptr @init_tx_sa.__key, !75, !"__key", i1 false, i1 false}
!75 = !{!"../drivers/net/macsec.c", i32 1446, i32 2}
!76 = !{ptr @.str.22, !75, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @.str.23, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../drivers/net/macsec.c", i32 1312, i32 26}
!79 = distinct !{null, !80, !"__warned", i1 false, i1 false}
!80 = !{!"../drivers/net/macsec.c", i32 1530, i32 10}
!81 = !{ptr @.str.24, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../drivers/net/macsec.c", i32 2342, i32 4}
!83 = !{ptr @.str.25, !82, !"<string literal>", i1 false, i1 false}
!84 = !{ptr @macsec_upd_txsa._entry, !82, !"_entry", i1 false, i1 false}
!85 = !{ptr @macsec_upd_txsa._entry_ptr, !82, !"_entry_ptr", i1 false, i1 false}
!86 = !{ptr @.str.26, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/net/macsec.c", i32 1747, i32 3}
!88 = !{ptr @.str.27, !87, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @macsec_add_rxsa._entry, !87, !"_entry", i1 false, i1 false}
!90 = !{ptr @macsec_add_rxsa._entry_ptr, !87, !"_entry_ptr", i1 false, i1 false}
!91 = !{ptr @.str.29, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../drivers/net/macsec.c", i32 1755, i32 3}
!93 = !{ptr @macsec_add_rxsa._entry.28, !92, !"_entry", i1 false, i1 false}
!94 = !{ptr @macsec_add_rxsa._entry_ptr.30, !92, !"_entry_ptr", i1 false, i1 false}
!95 = !{ptr @.str.32, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../drivers/net/macsec.c", i32 1768, i32 4}
!97 = !{ptr @macsec_add_rxsa._entry.31, !96, !"_entry", i1 false, i1 false}
!98 = !{ptr @macsec_add_rxsa._entry_ptr.33, !96, !"_entry_ptr", i1 false, i1 false}
!99 = distinct !{null, !100, !"__warned", i1 false, i1 false}
!100 = !{!"../drivers/net/macsec.c", i32 1776, i32 10}
!101 = !{ptr @init_rx_sa.__key, !102, !"__key", i1 false, i1 false}
!102 = !{!"../drivers/net/macsec.c", i32 1348, i32 2}
!103 = !{ptr @.str.34, !102, !"<string literal>", i1 false, i1 false}
!104 = distinct !{null, !105, !"__warned", i1 false, i1 false}
!105 = !{!"../drivers/net/macsec.c", i32 1594, i32 10}
!106 = !{ptr @.str.35, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../drivers/net/macsec.c", i32 2439, i32 4}
!108 = !{ptr @.str.36, !107, !"<string literal>", i1 false, i1 false}
!109 = !{ptr @macsec_upd_rxsa._entry, !107, !"_entry", i1 false, i1 false}
!110 = !{ptr @macsec_upd_rxsa._entry_ptr, !107, !"_entry_ptr", i1 false, i1 false}
!111 = !{ptr @macsec_genl_offload_policy, !112, !"macsec_genl_offload_policy", i1 false, i1 false}
!112 = !{!"../drivers/net/macsec.c", i32 1627, i32 32}
!113 = !{ptr @macsec_link_ops, !114, !"macsec_link_ops", i1 false, i1 false}
!114 = !{!"../drivers/net/macsec.c", i32 4256, i32 29}
!115 = !{ptr @macsec_netdev_ops, !116, !"macsec_netdev_ops", i1 false, i1 false}
!116 = !{!"../drivers/net/macsec.c", i32 3665, i32 36}
!117 = !{ptr @macsec_dev_init.__key, !118, !"__key", i1 false, i1 false}
!118 = !{!"../drivers/net/macsec.c", i32 3435, i32 16}
!119 = distinct !{null, !120, !"__already_done", i1 false, i1 false}
!120 = !{!"../include/linux/seqlock.h", i32 271, i32 2}
!121 = !{ptr @.str.37, !120, !"<string literal>", i1 false, i1 false}
!122 = distinct !{null, !123, !"__warned", i1 false, i1 false}
!123 = !{!"../drivers/net/macsec.c", i32 199, i32 28}
!124 = !{ptr @.str.38, !123, !"<string literal>", i1 false, i1 false}
!125 = distinct !{null, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../include/linux/skbuff.h", i32 1846, i32 2}
!127 = distinct !{null, !128, !"__warned", i1 false, i1 false}
!128 = !{!"../include/linux/rcupdate.h", i32 749, i32 2}
!129 = !{ptr @.str.40, !128, !"<string literal>", i1 false, i1 false}
!130 = !{ptr @.str.41, !128, !"<string literal>", i1 false, i1 false}
!131 = distinct !{null, !132, !"__warned", i1 false, i1 false}
!132 = !{!"../include/linux/rcupdate.h", i32 760, i32 2}
!133 = !{ptr @.str.42, !132, !"<string literal>", i1 false, i1 false}
!134 = !{ptr @macsec_type, !135, !"macsec_type", i1 false, i1 false}
!135 = !{!"../drivers/net/macsec.c", i32 3680, i32 33}
!136 = !{ptr @macsec_rtnl_policy, !137, !"macsec_rtnl_policy", i1 false, i1 false}
!137 = !{!"../drivers/net/macsec.c", i32 3684, i32 32}
!138 = distinct !{null, !139, !"__warned", i1 false, i1 false}
!139 = !{!"../drivers/net/macsec.c", i32 4038, i32 15}
!140 = !{ptr @macsec_newlink.qdisc_tx_busylock_key, !141, !"qdisc_tx_busylock_key", i1 false, i1 false}
!141 = !{!"../drivers/net/macsec.c", i32 4046, i32 2}
!142 = !{ptr @macsec_newlink.qdisc_xmit_lock_key, !141, !"qdisc_xmit_lock_key", i1 false, i1 false}
!143 = !{ptr @macsec_newlink.dev_addr_list_lock_key, !141, !"dev_addr_list_lock_key", i1 false, i1 false}
!144 = !{ptr @.str.43, !141, !"<string literal>", i1 false, i1 false}
!145 = !{ptr @.str.44, !141, !"<string literal>", i1 false, i1 false}
!146 = !{ptr @.str.45, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../drivers/net/macsec.c", i32 4047, i32 2}
!148 = distinct !{null, !149, !"__warned", i1 false, i1 false}
!149 = !{!"../drivers/net/macsec.c", i32 1134, i32 2}
!150 = !{ptr @.str.46, !149, !"<string literal>", i1 false, i1 false}
!151 = distinct !{null, !152, !"__warned", i1 false, i1 false}
!152 = !{!"../drivers/net/macsec.c", i32 1266, i32 2}
!153 = distinct !{null, !154, !"__warned", i1 false, i1 false}
!154 = !{!"../drivers/net/macsec.c", i32 1006, i32 2}
!155 = distinct !{null, !156, !"__warned", i1 false, i1 false}
!156 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!157 = !{ptr @.str.48, !156, !"<string literal>", i1 false, i1 false}
!158 = distinct !{null, !159, !"__warned", i1 false, i1 false}
!159 = !{!"../drivers/net/macsec.c", i32 131, i32 9}
!160 = distinct !{null, !161, !"__warned", i1 false, i1 false}
!161 = !{!"../drivers/net/macsec.c", i32 975, i32 2}
!162 = distinct !{null, !161, !"__warned", i1 false, i1 false}
!163 = distinct !{null, !164, !"__warned", i1 false, i1 false}
!164 = !{!"../drivers/net/macsec.c", i32 152, i32 28}
!165 = distinct !{null, !166, !"__warned", i1 false, i1 false}
!166 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!167 = !{ptr @.str.50, !166, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @macsec_netdev_addr_lock_key, !169, !"macsec_netdev_addr_lock_key", i1 false, i1 false}
!169 = !{!"../drivers/net/macsec.c", i32 3985, i32 30}
!170 = !{ptr @macsec_add_dev.__key, !171, !"__key", i1 false, i1 false}
!171 = !{!"../drivers/net/macsec.c", i32 3952, i32 18}
!172 = !{ptr @macsec_add_dev.__key.51, !173, !"__key", i1 false, i1 false}
!173 = !{!"../drivers/net/macsec.c", i32 3956, i32 22}
!174 = distinct !{null, !175, !"__warned", i1 false, i1 false}
!175 = !{!"../drivers/net/macsec.c", i32 3736, i32 11}
!176 = distinct !{null, !177, !"__warned", i1 false, i1 false}
!177 = !{!"../drivers/net/macsec.c", i32 3852, i32 32}
!178 = distinct !{null, !179, !"__warned", i1 false, i1 false}
!179 = !{!"../drivers/net/macsec.c", i32 3859, i32 29}
!180 = !{ptr @macsec_notifier, !181, !"macsec_notifier", i1 false, i1 false}
!181 = !{!"../drivers/net/macsec.c", i32 4334, i32 30}
!182 = !{ptr @.str.53, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/net/macsec.c", i32 4342, i32 2}
!184 = !{ptr @.str.54, !183, !"<string literal>", i1 false, i1 false}
!185 = !{ptr @macsec_init._entry, !183, !"_entry", i1 false, i1 false}
!186 = !{ptr @macsec_init._entry_ptr, !183, !"_entry_ptr", i1 false, i1 false}
!187 = !{!"sp"}
!188 = !{i32 1, !"wchar_size", i32 2}
!189 = !{i32 1, !"min_enum_size", i32 4}
!190 = !{i32 8, !"branch-target-enforcement", i32 0}
!191 = !{i32 8, !"sign-return-address", i32 0}
!192 = !{i32 8, !"sign-return-address-all", i32 0}
!193 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!194 = !{i32 7, !"uwtable", i32 1}
!195 = !{i32 7, !"frame-pointer", i32 2}
!196 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!197 = !{i64 2148937148, i64 2148937153, i64 2148937166, i64 2148937210, i64 2148937244, i64 2148937265}
!198 = !{i8 0, i8 2}
!199 = !{!"auto-init"}
!200 = !{i64 2157777512}
!201 = !{i64 2157784907}
!202 = !{i64 2157764514}
!203 = !{!"branch_weights", i32 1, i32 2000}
!204 = !{!"branch_weights", i32 2000, i32 1}
!205 = !{i64 2157818288}
!206 = !{i64 2148544864}
!207 = !{i64 2148459328, i64 2148459360, i64 2148459389, i64 2148459423, i64 2148459454, i64 2148459477}
!208 = !{i64 2150626517}
!209 = !{i64 2157803425}
!210 = !{i64 2150368339}
!211 = !{i64 847814, i64 847875}
!212 = !{i64 850546}
!213 = !{i64 850831}
!214 = !{i64 2155068271}
!215 = !{i64 2155068113}
!216 = !{i64 2155068441}
!217 = !{i64 2150368989}
!218 = !{i64 2150260591}
!219 = !{i64 2150265525}
!220 = !{i64 2150287243}
!221 = !{i64 2150292137}
!222 = !{i64 2150368664}
!223 = !{i64 939069, i64 939093, i64 939114, i64 939131, i64 939148}
!224 = !{!225}
!225 = distinct !{!225, !226, !"tx_sa_update_pn: %agg.result"}
!226 = distinct !{!226, !"tx_sa_update_pn"}
!227 = !{i64 2149751970}
!228 = !{i64 2149752236}
!229 = !{i64 2154686182, i64 2154686670, i64 2154686219, i64 2154686275, i64 2154686309, i64 2154686333, i64 2154686374, i64 2154686395, i64 2154686423, i64 2154686457}
!230 = !{i64 2149777362}
!231 = !{i64 2157860088}
!232 = !{i64 2154684072, i64 2154684560, i64 2154684109, i64 2154684165, i64 2154684199, i64 2154684223, i64 2154684264, i64 2154684285, i64 2154684313, i64 2154684347}
