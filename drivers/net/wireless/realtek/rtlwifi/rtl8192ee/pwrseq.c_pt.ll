; ModuleID = '/llk/IR_all_yes/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c_pt.bc'
source_filename = "../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

@rtl8192E_power_on_flow = dso_local global { <{ [8 x { i16, i8, i8, i8, i8, i8 }], [11 x { i16, i8, i8, i8, i8, i8 }] }>, [40 x i8] } { <{ [8 x { i16, i8, i8, i8, i8, i8 }], [11 x { i16, i8, i8, i8, i8, i8 }] }> <{ [8 x { i16, i8, i8, i8, i8, i8 }] [{ i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 -128, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 4, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 24, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 6, i8 -1, i8 -1, i8 2, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 6, i8 -1, i8 -1, i8 1, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 2, i8 1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }], [11 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [40 x i8] zeroinitializer }, align 32
@rtl8192E_radio_off_flow = dso_local global { <{ { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, [14 x { i16, i8, i8, i8, i8, i8 }] }>, [40 x i8] } { <{ { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, [14 x { i16, i8, i8, i8, i8, i8 }] }> <{ { i16, i8, i8, i8, i8, i8 } { i16 31, i8 -1, i8 -1, i8 1, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 78, i8 -1, i8 -1, i8 1, i8 -128, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 2, i8 2, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }, [14 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [40 x i8] zeroinitializer }, align 32
@rtl8192E_card_disable_flow = dso_local global { <{ [12 x { i16, i8, i8, i8, i8, i8 }], [25 x { i16, i8, i8, i8, i8, i8 }] }>, [88 x i8] } { <{ [12 x { i16, i8, i8, i8, i8, i8 }], [25 x { i16, i8, i8, i8, i8, i8 }] }> <{ [12 x { i16, i8, i8, i8, i8, i8 }] [{ i16, i8, i8, i8, i8, i8 } { i16 31, i8 -1, i8 -1, i8 1, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 78, i8 -1, i8 -1, i8 1, i8 -128, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 2, i8 2, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 7, i8 -1, i8 -15, i8 1, i8 -1, i8 32 }, { i16, i8, i8, i8, i8, i8 } { i16 204, i8 -1, i8 -15, i8 1, i8 4, i8 4 }, { i16, i8, i8, i8, i8, i8 } { i16 17, i8 -1, i8 -15, i8 1, i8 1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -13, i8 1, i8 24, i8 8 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -12, i8 1, i8 4, i8 4 }, { i16, i8, i8, i8, i8, i8 } { i16 134, i8 -1, i8 -15, i8 49, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 134, i8 -1, i8 -15, i8 50, i8 2, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }], [25 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [88 x i8] zeroinitializer }, align 32
@rtl8192E_card_enable_flow = dso_local global { <{ [13 x { i16, i8, i8, i8, i8, i8 }], [24 x { i16, i8, i8, i8, i8, i8 }] }>, [88 x i8] } { <{ [13 x { i16, i8, i8, i8, i8, i8 }], [24 x { i16, i8, i8, i8, i8, i8 }] }> <{ [13 x { i16, i8, i8, i8, i8, i8 }] [{ i16, i8, i8, i8, i8, i8 } { i16 134, i8 -1, i8 -15, i8 49, i8 1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 134, i8 -1, i8 -15, i8 50, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 17, i8 -1, i8 -15, i8 1, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 204, i8 -1, i8 -15, i8 1, i8 4, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 24, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 -128, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 4, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 24, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 6, i8 -1, i8 -1, i8 2, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 6, i8 -1, i8 -1, i8 1, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 2, i8 1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }], [24 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [88 x i8] zeroinitializer }, align 32
@rtl8192E_suspend_flow = dso_local global { <{ [10 x { i16, i8, i8, i8, i8, i8 }], [27 x { i16, i8, i8, i8, i8, i8 }] }>, [88 x i8] } { <{ [10 x { i16, i8, i8, i8, i8, i8 }], [27 x { i16, i8, i8, i8, i8, i8 }] }> <{ [10 x { i16, i8, i8, i8, i8, i8 }] [{ i16, i8, i8, i8, i8, i8 } { i16 31, i8 -1, i8 -1, i8 1, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 78, i8 -1, i8 -1, i8 1, i8 -128, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 2, i8 2, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -12, i8 1, i8 24, i8 24 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -13, i8 1, i8 24, i8 8 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -12, i8 1, i8 24, i8 24 }, { i16, i8, i8, i8, i8, i8 } { i16 134, i8 -1, i8 -15, i8 49, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 134, i8 -1, i8 -15, i8 50, i8 2, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }], [27 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [88 x i8] zeroinitializer }, align 32
@rtl8192E_resume_flow = dso_local global { <{ [11 x { i16, i8, i8, i8, i8, i8 }], [26 x { i16, i8, i8, i8, i8, i8 }] }>, [88 x i8] } { <{ [11 x { i16, i8, i8, i8, i8, i8 }], [26 x { i16, i8, i8, i8, i8, i8 }] }> <{ [11 x { i16, i8, i8, i8, i8, i8 }] [{ i16, i8, i8, i8, i8, i8 } { i16 134, i8 -1, i8 -15, i8 49, i8 1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 134, i8 -1, i8 -15, i8 50, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 24, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 -128, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 4, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 24, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 6, i8 -1, i8 -1, i8 2, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 6, i8 -1, i8 -1, i8 1, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 1, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 2, i8 1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }], [26 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [88 x i8] zeroinitializer }, align 32
@rtl8192E_hwpdn_flow = dso_local global { <{ { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, [30 x { i16, i8, i8, i8, i8, i8 }] }>, [88 x i8] } { <{ { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, { i16, i8, i8, i8, i8, i8 }, [30 x { i16, i8, i8, i8, i8, i8 }] }> <{ { i16, i8, i8, i8, i8, i8 } { i16 31, i8 -1, i8 -1, i8 1, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 78, i8 -1, i8 -1, i8 1, i8 -128, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 2, i8 2, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 6, i8 -1, i8 -1, i8 1, i8 1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 5, i8 -1, i8 -1, i8 1, i8 -128, i8 -128 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }, [30 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [88 x i8] zeroinitializer }, align 32
@rtl8192E_enter_lps_flow = dso_local global { <{ [14 x { i16, i8, i8, i8, i8, i8 }], [10 x { i16, i8, i8, i8, i8, i8 }] }>, [32 x i8] } { <{ [14 x { i16, i8, i8, i8, i8, i8 }], [10 x { i16, i8, i8, i8, i8, i8 }] }> <{ [14 x { i16, i8, i8, i8, i8, i8 }] [{ i16, i8, i8, i8, i8, i8 } { i16 769, i8 -1, i8 -12, i8 1, i8 -1, i8 -1 }, { i16, i8, i8, i8, i8, i8 } { i16 1314, i8 -1, i8 -1, i8 1, i8 -1, i8 -1 }, { i16, i8, i8, i8, i8, i8 } { i16 1528, i8 -1, i8 -1, i8 2, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 1529, i8 -1, i8 -1, i8 2, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 1530, i8 -1, i8 -1, i8 2, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 1531, i8 -1, i8 -1, i8 2, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 2, i8 -1, i8 -1, i8 1, i8 1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 2, i8 -1, i8 -1, i8 3, i8 0, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 2, i8 -1, i8 -1, i8 1, i8 2, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 256, i8 -1, i8 -1, i8 1, i8 -1, i8 3 }, { i16, i8, i8, i8, i8, i8 } { i16 257, i8 -1, i8 -1, i8 1, i8 2, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 147, i8 -1, i8 -15, i8 1, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 1363, i8 -1, i8 -1, i8 1, i8 32, i8 32 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }], [10 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [32 x i8] zeroinitializer }, align 32
@rtl8192E_leave_lps_flow = dso_local global { <{ [12 x { i16, i8, i8, i8, i8, i8 }], [12 x { i16, i8, i8, i8, i8, i8 }] }>, [32 x i8] } { <{ [12 x { i16, i8, i8, i8, i8, i8 }], [12 x { i16, i8, i8, i8, i8, i8 }] }> <{ [12 x { i16, i8, i8, i8, i8, i8 }] [{ i16, i8, i8, i8, i8, i8 } { i16 128, i8 -1, i8 -15, i8 49, i8 -1, i8 -124 }, { i16, i8, i8, i8, i8, i8 } { i16 -424, i8 -1, i8 -14, i8 1, i8 -1, i8 -124 }, { i16, i8, i8, i8, i8, i8 } { i16 865, i8 -1, i8 -12, i8 1, i8 -1, i8 -124 }, { i16, i8, i8, i8, i8, i8 } { i16 2, i8 -1, i8 -1, i8 3, i8 0, i8 1 }, { i16, i8, i8, i8, i8, i8 } { i16 8, i8 -1, i8 -1, i8 1, i8 16, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 265, i8 -1, i8 -1, i8 2, i8 -128, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 257, i8 -1, i8 -1, i8 1, i8 2, i8 2 }, { i16, i8, i8, i8, i8, i8 } { i16 256, i8 -1, i8 -1, i8 1, i8 -1, i8 -1 }, { i16, i8, i8, i8, i8, i8 } { i16 2, i8 -1, i8 -1, i8 1, i8 3, i8 3 }, { i16, i8, i8, i8, i8, i8 } { i16 1314, i8 -1, i8 -1, i8 1, i8 -1, i8 0 }, { i16, i8, i8, i8, i8, i8 } { i16 317, i8 -1, i8 -1, i8 1, i8 -1, i8 -1 }, { i16, i8, i8, i8, i8, i8 } { i16 -1, i8 -1, i8 -1, i8 4, i8 0, i8 0 }], [12 x { i16, i8, i8, i8, i8, i8 }] zeroinitializer }>, [32 x i8] zeroinitializer }, align 32
@___asan_gen_.1 = private unnamed_addr constant [23 x i8] c"rtl8192E_power_on_flow\00", align 1
@___asan_gen_.3 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 9, i32 21 }
@___asan_gen_.4 = private unnamed_addr constant [24 x i8] c"rtl8192E_radio_off_flow\00", align 1
@___asan_gen_.6 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 17, i32 21 }
@___asan_gen_.7 = private unnamed_addr constant [27 x i8] c"rtl8192E_card_disable_flow\00", align 1
@___asan_gen_.9 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 25, i32 21 }
@___asan_gen_.10 = private unnamed_addr constant [26 x i8] c"rtl8192E_card_enable_flow\00", align 1
@___asan_gen_.12 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 35, i32 21 }
@___asan_gen_.13 = private unnamed_addr constant [22 x i8] c"rtl8192E_suspend_flow\00", align 1
@___asan_gen_.15 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 45, i32 21 }
@___asan_gen_.16 = private unnamed_addr constant [21 x i8] c"rtl8192E_resume_flow\00", align 1
@___asan_gen_.18 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 55, i32 21 }
@___asan_gen_.19 = private unnamed_addr constant [20 x i8] c"rtl8192E_hwpdn_flow\00", align 1
@___asan_gen_.21 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 65, i32 21 }
@___asan_gen_.22 = private unnamed_addr constant [24 x i8] c"rtl8192E_enter_lps_flow\00", align 1
@___asan_gen_.24 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 75, i32 21 }
@___asan_gen_.25 = private unnamed_addr constant [24 x i8] c"rtl8192E_leave_lps_flow\00", align 1
@___asan_gen_.26 = private constant [59 x i8] c"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c\00", align 1
@___asan_gen_.27 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.26, i32 84, i32 21 }
@llvm.compiler.used = appending global [9 x ptr] [ptr @rtl8192E_power_on_flow, ptr @rtl8192E_radio_off_flow, ptr @rtl8192E_card_disable_flow, ptr @rtl8192E_card_enable_flow, ptr @rtl8192E_suspend_flow, ptr @rtl8192E_resume_flow, ptr @rtl8192E_hwpdn_flow, ptr @rtl8192E_enter_lps_flow, ptr @rtl8192E_leave_lps_flow], section "llvm.metadata"
@0 = internal global [9 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_power_on_flow to i32), i32 152, i32 192, i32 ptrtoint (ptr @___asan_gen_.1 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_radio_off_flow to i32), i32 152, i32 192, i32 ptrtoint (ptr @___asan_gen_.4 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.6 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_card_disable_flow to i32), i32 296, i32 384, i32 ptrtoint (ptr @___asan_gen_.7 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.9 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_card_enable_flow to i32), i32 296, i32 384, i32 ptrtoint (ptr @___asan_gen_.10 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.12 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_suspend_flow to i32), i32 296, i32 384, i32 ptrtoint (ptr @___asan_gen_.13 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_resume_flow to i32), i32 296, i32 384, i32 ptrtoint (ptr @___asan_gen_.16 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.18 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_hwpdn_flow to i32), i32 296, i32 384, i32 ptrtoint (ptr @___asan_gen_.19 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.21 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_enter_lps_flow to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.22 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.24 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rtl8192E_leave_lps_flow to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.25 to i32), i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.27 to i32), i32 0 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #0 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 9)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #0 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 9)
  ret void
}

attributes #0 = { nounwind uwtable(sync) "frame-pointer"="all" }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16}
!llvm.module.flags = !{!18, !19, !20, !21, !22, !23, !24, !25}
!llvm.ident = !{!26}

!0 = !{ptr @rtl8192E_power_on_flow, !1, !"rtl8192E_power_on_flow", i1 false, i1 false}
!1 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 9, i32 21}
!2 = !{ptr @rtl8192E_radio_off_flow, !3, !"rtl8192E_radio_off_flow", i1 false, i1 false}
!3 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 17, i32 21}
!4 = !{ptr @rtl8192E_card_disable_flow, !5, !"rtl8192E_card_disable_flow", i1 false, i1 false}
!5 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 25, i32 21}
!6 = !{ptr @rtl8192E_card_enable_flow, !7, !"rtl8192E_card_enable_flow", i1 false, i1 false}
!7 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 35, i32 21}
!8 = !{ptr @rtl8192E_suspend_flow, !9, !"rtl8192E_suspend_flow", i1 false, i1 false}
!9 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 45, i32 21}
!10 = !{ptr @rtl8192E_resume_flow, !11, !"rtl8192E_resume_flow", i1 false, i1 false}
!11 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 55, i32 21}
!12 = !{ptr @rtl8192E_hwpdn_flow, !13, !"rtl8192E_hwpdn_flow", i1 false, i1 false}
!13 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 65, i32 21}
!14 = !{ptr @rtl8192E_enter_lps_flow, !15, !"rtl8192E_enter_lps_flow", i1 false, i1 false}
!15 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 75, i32 21}
!16 = !{ptr @rtl8192E_leave_lps_flow, !17, !"rtl8192E_leave_lps_flow", i1 false, i1 false}
!17 = !{!"../drivers/net/wireless/realtek/rtlwifi/rtl8192ee/pwrseq.c", i32 84, i32 21}
!18 = !{i32 1, !"wchar_size", i32 2}
!19 = !{i32 1, !"min_enum_size", i32 4}
!20 = !{i32 8, !"branch-target-enforcement", i32 0}
!21 = !{i32 8, !"sign-return-address", i32 0}
!22 = !{i32 8, !"sign-return-address-all", i32 0}
!23 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!24 = !{i32 7, !"uwtable", i32 1}
!25 = !{i32 7, !"frame-pointer", i32 2}
!26 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
