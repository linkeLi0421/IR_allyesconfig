; ModuleID = '/llk/IR_all_yes/drivers/pci/pci.c_pt.bc'
source_filename = "../drivers/pci/pci.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+pci_power_names\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_power_names\09\09\09\09"
module asm "\09.long\09__crc_pci_power_names\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_power_names:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_power_names\22\09\09\09\09\09"
module asm "__kstrtabns_pci_power_names:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+isa_dma_bridge_buggy\22, \22a\22\09"
module asm "\09.weak\09__crc_isa_dma_bridge_buggy\09\09\09\09"
module asm "\09.long\09__crc_isa_dma_bridge_buggy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_isa_dma_bridge_buggy:\09\09\09\09\09"
module asm "\09.asciz \09\22isa_dma_bridge_buggy\22\09\09\09\09\09"
module asm "__kstrtabns_isa_dma_bridge_buggy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_pci_problems\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_pci_problems\09\09\09\09"
module asm "\09.long\09__crc_pci_pci_problems\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_pci_problems:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_pci_problems\22\09\09\09\09\09"
module asm "__kstrtabns_pci_pci_problems:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_ats_disabled\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_ats_disabled\09\09\09\09"
module asm "\09.long\09__crc_pci_ats_disabled\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_ats_disabled:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_ats_disabled\22\09\09\09\09\09"
module asm "__kstrtabns_pci_ats_disabled:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_bus_max_busnr\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_bus_max_busnr\09\09\09\09"
module asm "\09.long\09__crc_pci_bus_max_busnr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_bus_max_busnr:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_bus_max_busnr\22\09\09\09\09\09"
module asm "__kstrtabns_pci_bus_max_busnr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_status_get_and_clear_errors\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_status_get_and_clear_errors\09\09\09\09"
module asm "\09.long\09__crc_pci_status_get_and_clear_errors\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_status_get_and_clear_errors:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_status_get_and_clear_errors\22\09\09\09\09\09"
module asm "__kstrtabns_pci_status_get_and_clear_errors:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_ioremap_bar\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_ioremap_bar\09\09\09\09"
module asm "\09.long\09__crc_pci_ioremap_bar\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_ioremap_bar:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_ioremap_bar\22\09\09\09\09\09"
module asm "__kstrtabns_pci_ioremap_bar:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_ioremap_wc_bar\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_ioremap_wc_bar\09\09\09\09"
module asm "\09.long\09__crc_pci_ioremap_wc_bar\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_ioremap_wc_bar:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_ioremap_wc_bar\22\09\09\09\09\09"
module asm "__kstrtabns_pci_ioremap_wc_bar:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_find_next_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_next_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_find_next_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_next_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_next_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_next_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_find_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_find_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_bus_find_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_bus_find_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_bus_find_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_bus_find_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_bus_find_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_bus_find_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_find_next_ext_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_next_ext_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_find_next_ext_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_next_ext_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_next_ext_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_next_ext_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_find_ext_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_ext_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_find_ext_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_ext_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_ext_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_ext_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_get_dsn\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_get_dsn\09\09\09\09"
module asm "\09.long\09__crc_pci_get_dsn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_get_dsn:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_get_dsn\22\09\09\09\09\09"
module asm "__kstrtabns_pci_get_dsn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_find_next_ht_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_next_ht_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_find_next_ht_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_next_ht_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_next_ht_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_next_ht_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_find_ht_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_ht_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_find_ht_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_ht_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_ht_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_ht_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_find_vsec_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_vsec_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_find_vsec_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_vsec_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_vsec_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_vsec_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_find_dvsec_capability\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_dvsec_capability\09\09\09\09"
module asm "\09.long\09__crc_pci_find_dvsec_capability\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_dvsec_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_dvsec_capability\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_dvsec_capability:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_find_parent_resource\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_parent_resource\09\09\09\09"
module asm "\09.long\09__crc_pci_find_parent_resource\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_parent_resource:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_parent_resource\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_parent_resource:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_find_resource\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_find_resource\09\09\09\09"
module asm "\09.long\09__crc_pci_find_resource\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_find_resource:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_find_resource\22\09\09\09\09\09"
module asm "__kstrtabns_pci_find_resource:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_platform_power_transition\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_platform_power_transition\09\09\09\09"
module asm "\09.long\09__crc_pci_platform_power_transition\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_platform_power_transition:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_platform_power_transition\22\09\09\09\09\09"
module asm "__kstrtabns_pci_platform_power_transition:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_set_power_state\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_set_power_state\09\09\09\09"
module asm "\09.long\09__crc_pci_set_power_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_set_power_state:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_set_power_state\22\09\09\09\09\09"
module asm "__kstrtabns_pci_set_power_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_save_state\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_save_state\09\09\09\09"
module asm "\09.long\09__crc_pci_save_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_save_state:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_save_state\22\09\09\09\09\09"
module asm "__kstrtabns_pci_save_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_restore_state\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_restore_state\09\09\09\09"
module asm "\09.long\09__crc_pci_restore_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_restore_state:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_restore_state\22\09\09\09\09\09"
module asm "__kstrtabns_pci_restore_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_store_saved_state\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_store_saved_state\09\09\09\09"
module asm "\09.long\09__crc_pci_store_saved_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_store_saved_state:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_store_saved_state\22\09\09\09\09\09"
module asm "__kstrtabns_pci_store_saved_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_load_saved_state\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_load_saved_state\09\09\09\09"
module asm "\09.long\09__crc_pci_load_saved_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_load_saved_state:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_load_saved_state\22\09\09\09\09\09"
module asm "__kstrtabns_pci_load_saved_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_load_and_free_saved_state\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_load_and_free_saved_state\09\09\09\09"
module asm "\09.long\09__crc_pci_load_and_free_saved_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_load_and_free_saved_state:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_load_and_free_saved_state\22\09\09\09\09\09"
module asm "__kstrtabns_pci_load_and_free_saved_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_reenable_device\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_reenable_device\09\09\09\09"
module asm "\09.long\09__crc_pci_reenable_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_reenable_device:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_reenable_device\22\09\09\09\09\09"
module asm "__kstrtabns_pci_reenable_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_enable_device_io\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_enable_device_io\09\09\09\09"
module asm "\09.long\09__crc_pci_enable_device_io\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_enable_device_io:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_enable_device_io\22\09\09\09\09\09"
module asm "__kstrtabns_pci_enable_device_io:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_enable_device_mem\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_enable_device_mem\09\09\09\09"
module asm "\09.long\09__crc_pci_enable_device_mem\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_enable_device_mem:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_enable_device_mem\22\09\09\09\09\09"
module asm "__kstrtabns_pci_enable_device_mem:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_enable_device\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_enable_device\09\09\09\09"
module asm "\09.long\09__crc_pci_enable_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_enable_device:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_enable_device\22\09\09\09\09\09"
module asm "__kstrtabns_pci_enable_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcim_enable_device\22, \22a\22\09"
module asm "\09.weak\09__crc_pcim_enable_device\09\09\09\09"
module asm "\09.long\09__crc_pcim_enable_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcim_enable_device:\09\09\09\09\09"
module asm "\09.asciz \09\22pcim_enable_device\22\09\09\09\09\09"
module asm "__kstrtabns_pcim_enable_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcim_pin_device\22, \22a\22\09"
module asm "\09.weak\09__crc_pcim_pin_device\09\09\09\09"
module asm "\09.long\09__crc_pcim_pin_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcim_pin_device:\09\09\09\09\09"
module asm "\09.asciz \09\22pcim_pin_device\22\09\09\09\09\09"
module asm "__kstrtabns_pcim_pin_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_disable_device\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_disable_device\09\09\09\09"
module asm "\09.long\09__crc_pci_disable_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_disable_device:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_disable_device\22\09\09\09\09\09"
module asm "__kstrtabns_pci_disable_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_set_pcie_reset_state\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_set_pcie_reset_state\09\09\09\09"
module asm "\09.long\09__crc_pci_set_pcie_reset_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_set_pcie_reset_state:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_set_pcie_reset_state\22\09\09\09\09\09"
module asm "__kstrtabns_pci_set_pcie_reset_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_pme_capable\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_pme_capable\09\09\09\09"
module asm "\09.long\09__crc_pci_pme_capable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_pme_capable:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_pme_capable\22\09\09\09\09\09"
module asm "__kstrtabns_pci_pme_capable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_pme_active\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_pme_active\09\09\09\09"
module asm "\09.long\09__crc_pci_pme_active\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_pme_active:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_pme_active\22\09\09\09\09\09"
module asm "__kstrtabns_pci_pme_active:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_enable_wake\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_enable_wake\09\09\09\09"
module asm "\09.long\09__crc_pci_enable_wake\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_enable_wake:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_enable_wake\22\09\09\09\09\09"
module asm "__kstrtabns_pci_enable_wake:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_wake_from_d3\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_wake_from_d3\09\09\09\09"
module asm "\09.long\09__crc_pci_wake_from_d3\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_wake_from_d3:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_wake_from_d3\22\09\09\09\09\09"
module asm "__kstrtabns_pci_wake_from_d3:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_prepare_to_sleep\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_prepare_to_sleep\09\09\09\09"
module asm "\09.long\09__crc_pci_prepare_to_sleep\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_prepare_to_sleep:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_prepare_to_sleep\22\09\09\09\09\09"
module asm "__kstrtabns_pci_prepare_to_sleep:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_back_from_sleep\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_back_from_sleep\09\09\09\09"
module asm "\09.long\09__crc_pci_back_from_sleep\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_back_from_sleep:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_back_from_sleep\22\09\09\09\09\09"
module asm "__kstrtabns_pci_back_from_sleep:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_dev_run_wake\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_dev_run_wake\09\09\09\09"
module asm "\09.long\09__crc_pci_dev_run_wake\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_dev_run_wake:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_dev_run_wake\22\09\09\09\09\09"
module asm "__kstrtabns_pci_dev_run_wake:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_choose_state\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_choose_state\09\09\09\09"
module asm "\09.long\09__crc_pci_choose_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_choose_state:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_choose_state\22\09\09\09\09\09"
module asm "__kstrtabns_pci_choose_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_d3cold_enable\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_d3cold_enable\09\09\09\09"
module asm "\09.long\09__crc_pci_d3cold_enable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_d3cold_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_d3cold_enable\22\09\09\09\09\09"
module asm "__kstrtabns_pci_d3cold_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_d3cold_disable\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_d3cold_disable\09\09\09\09"
module asm "\09.long\09__crc_pci_d3cold_disable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_d3cold_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_d3cold_disable\22\09\09\09\09\09"
module asm "__kstrtabns_pci_d3cold_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_rebar_get_possible_sizes\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_rebar_get_possible_sizes\09\09\09\09"
module asm "\09.long\09__crc_pci_rebar_get_possible_sizes\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_rebar_get_possible_sizes:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_rebar_get_possible_sizes\22\09\09\09\09\09"
module asm "__kstrtabns_pci_rebar_get_possible_sizes:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_enable_atomic_ops_to_root\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_enable_atomic_ops_to_root\09\09\09\09"
module asm "\09.long\09__crc_pci_enable_atomic_ops_to_root\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_enable_atomic_ops_to_root:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_enable_atomic_ops_to_root\22\09\09\09\09\09"
module asm "__kstrtabns_pci_enable_atomic_ops_to_root:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_common_swizzle\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_common_swizzle\09\09\09\09"
module asm "\09.long\09__crc_pci_common_swizzle\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_common_swizzle:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_common_swizzle\22\09\09\09\09\09"
module asm "__kstrtabns_pci_common_swizzle:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_release_region\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_release_region\09\09\09\09"
module asm "\09.long\09__crc_pci_release_region\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_release_region:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_release_region\22\09\09\09\09\09"
module asm "__kstrtabns_pci_release_region:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_request_region\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_request_region\09\09\09\09"
module asm "\09.long\09__crc_pci_request_region\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_request_region:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_request_region\22\09\09\09\09\09"
module asm "__kstrtabns_pci_request_region:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_release_selected_regions\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_release_selected_regions\09\09\09\09"
module asm "\09.long\09__crc_pci_release_selected_regions\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_release_selected_regions:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_release_selected_regions\22\09\09\09\09\09"
module asm "__kstrtabns_pci_release_selected_regions:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_request_selected_regions\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_request_selected_regions\09\09\09\09"
module asm "\09.long\09__crc_pci_request_selected_regions\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_request_selected_regions:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_request_selected_regions\22\09\09\09\09\09"
module asm "__kstrtabns_pci_request_selected_regions:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_request_selected_regions_exclusive\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_request_selected_regions_exclusive\09\09\09\09"
module asm "\09.long\09__crc_pci_request_selected_regions_exclusive\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_request_selected_regions_exclusive:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_request_selected_regions_exclusive\22\09\09\09\09\09"
module asm "__kstrtabns_pci_request_selected_regions_exclusive:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_release_regions\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_release_regions\09\09\09\09"
module asm "\09.long\09__crc_pci_release_regions\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_release_regions:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_release_regions\22\09\09\09\09\09"
module asm "__kstrtabns_pci_release_regions:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_request_regions\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_request_regions\09\09\09\09"
module asm "\09.long\09__crc_pci_request_regions\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_request_regions:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_request_regions\22\09\09\09\09\09"
module asm "__kstrtabns_pci_request_regions:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_request_regions_exclusive\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_request_regions_exclusive\09\09\09\09"
module asm "\09.long\09__crc_pci_request_regions_exclusive\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_request_regions_exclusive:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_request_regions_exclusive\22\09\09\09\09\09"
module asm "__kstrtabns_pci_request_regions_exclusive:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_pio_to_address\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_pio_to_address\09\09\09\09"
module asm "\09.long\09__crc_pci_pio_to_address\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_pio_to_address:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_pio_to_address\22\09\09\09\09\09"
module asm "__kstrtabns_pci_pio_to_address:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_unmap_iospace\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_unmap_iospace\09\09\09\09"
module asm "\09.long\09__crc_pci_unmap_iospace\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_unmap_iospace:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_unmap_iospace\22\09\09\09\09\09"
module asm "__kstrtabns_pci_unmap_iospace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+devm_pci_remap_iospace\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_pci_remap_iospace\09\09\09\09"
module asm "\09.long\09__crc_devm_pci_remap_iospace\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_pci_remap_iospace:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_pci_remap_iospace\22\09\09\09\09\09"
module asm "__kstrtabns_devm_pci_remap_iospace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+devm_pci_remap_cfgspace\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_pci_remap_cfgspace\09\09\09\09"
module asm "\09.long\09__crc_devm_pci_remap_cfgspace\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_pci_remap_cfgspace:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_pci_remap_cfgspace\22\09\09\09\09\09"
module asm "__kstrtabns_devm_pci_remap_cfgspace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+devm_pci_remap_cfg_resource\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_pci_remap_cfg_resource\09\09\09\09"
module asm "\09.long\09__crc_devm_pci_remap_cfg_resource\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_pci_remap_cfg_resource:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_pci_remap_cfg_resource\22\09\09\09\09\09"
module asm "__kstrtabns_devm_pci_remap_cfg_resource:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_set_master\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_set_master\09\09\09\09"
module asm "\09.long\09__crc_pci_set_master\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_set_master:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_set_master\22\09\09\09\09\09"
module asm "__kstrtabns_pci_set_master:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_clear_master\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_clear_master\09\09\09\09"
module asm "\09.long\09__crc_pci_clear_master\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_clear_master:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_clear_master\22\09\09\09\09\09"
module asm "__kstrtabns_pci_clear_master:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_set_cacheline_size\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_set_cacheline_size\09\09\09\09"
module asm "\09.long\09__crc_pci_set_cacheline_size\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_set_cacheline_size:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_set_cacheline_size\22\09\09\09\09\09"
module asm "__kstrtabns_pci_set_cacheline_size:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_set_mwi\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_set_mwi\09\09\09\09"
module asm "\09.long\09__crc_pci_set_mwi\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_set_mwi:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_set_mwi\22\09\09\09\09\09"
module asm "__kstrtabns_pci_set_mwi:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcim_set_mwi\22, \22a\22\09"
module asm "\09.weak\09__crc_pcim_set_mwi\09\09\09\09"
module asm "\09.long\09__crc_pcim_set_mwi\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcim_set_mwi:\09\09\09\09\09"
module asm "\09.asciz \09\22pcim_set_mwi\22\09\09\09\09\09"
module asm "__kstrtabns_pcim_set_mwi:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_try_set_mwi\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_try_set_mwi\09\09\09\09"
module asm "\09.long\09__crc_pci_try_set_mwi\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_try_set_mwi:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_try_set_mwi\22\09\09\09\09\09"
module asm "__kstrtabns_pci_try_set_mwi:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_clear_mwi\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_clear_mwi\09\09\09\09"
module asm "\09.long\09__crc_pci_clear_mwi\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_clear_mwi:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_clear_mwi\22\09\09\09\09\09"
module asm "__kstrtabns_pci_clear_mwi:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_intx\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_intx\09\09\09\09"
module asm "\09.long\09__crc_pci_intx\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_intx:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_intx\22\09\09\09\09\09"
module asm "__kstrtabns_pci_intx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_check_and_mask_intx\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_check_and_mask_intx\09\09\09\09"
module asm "\09.long\09__crc_pci_check_and_mask_intx\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_check_and_mask_intx:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_check_and_mask_intx\22\09\09\09\09\09"
module asm "__kstrtabns_pci_check_and_mask_intx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_check_and_unmask_intx\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_check_and_unmask_intx\09\09\09\09"
module asm "\09.long\09__crc_pci_check_and_unmask_intx\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_check_and_unmask_intx:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_check_and_unmask_intx\22\09\09\09\09\09"
module asm "__kstrtabns_pci_check_and_unmask_intx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_wait_for_pending_transaction\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_wait_for_pending_transaction\09\09\09\09"
module asm "\09.long\09__crc_pci_wait_for_pending_transaction\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_wait_for_pending_transaction:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_wait_for_pending_transaction\22\09\09\09\09\09"
module asm "__kstrtabns_pci_wait_for_pending_transaction:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pcie_flr\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_flr\09\09\09\09"
module asm "\09.long\09__crc_pcie_flr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_flr:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_flr\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_flr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pcie_reset_flr\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_reset_flr\09\09\09\09"
module asm "\09.long\09__crc_pcie_reset_flr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_reset_flr:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_reset_flr\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_reset_flr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_bridge_secondary_bus_reset\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_bridge_secondary_bus_reset\09\09\09\09"
module asm "\09.long\09__crc_pci_bridge_secondary_bus_reset\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_bridge_secondary_bus_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_bridge_secondary_bus_reset\22\09\09\09\09\09"
module asm "__kstrtabns_pci_bridge_secondary_bus_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_dev_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_dev_lock\09\09\09\09"
module asm "\09.long\09__crc_pci_dev_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_dev_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_dev_lock\22\09\09\09\09\09"
module asm "__kstrtabns_pci_dev_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_dev_trylock\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_dev_trylock\09\09\09\09"
module asm "\09.long\09__crc_pci_dev_trylock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_dev_trylock:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_dev_trylock\22\09\09\09\09\09"
module asm "__kstrtabns_pci_dev_trylock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_dev_unlock\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_dev_unlock\09\09\09\09"
module asm "\09.long\09__crc_pci_dev_unlock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_dev_unlock:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_dev_unlock\22\09\09\09\09\09"
module asm "__kstrtabns_pci_dev_unlock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__pci_reset_function_locked\22, \22a\22\09"
module asm "\09.weak\09__crc___pci_reset_function_locked\09\09\09\09"
module asm "\09.long\09__crc___pci_reset_function_locked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___pci_reset_function_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22__pci_reset_function_locked\22\09\09\09\09\09"
module asm "__kstrtabns___pci_reset_function_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_reset_function\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_reset_function\09\09\09\09"
module asm "\09.long\09__crc_pci_reset_function\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_reset_function:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_reset_function\22\09\09\09\09\09"
module asm "__kstrtabns_pci_reset_function:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_reset_function_locked\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_reset_function_locked\09\09\09\09"
module asm "\09.long\09__crc_pci_reset_function_locked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_reset_function_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_reset_function_locked\22\09\09\09\09\09"
module asm "__kstrtabns_pci_reset_function_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_try_reset_function\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_try_reset_function\09\09\09\09"
module asm "\09.long\09__crc_pci_try_reset_function\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_try_reset_function:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_try_reset_function\22\09\09\09\09\09"
module asm "__kstrtabns_pci_try_reset_function:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_probe_reset_slot\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_probe_reset_slot\09\09\09\09"
module asm "\09.long\09__crc_pci_probe_reset_slot\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_probe_reset_slot:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_probe_reset_slot\22\09\09\09\09\09"
module asm "__kstrtabns_pci_probe_reset_slot:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_probe_reset_bus\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_probe_reset_bus\09\09\09\09"
module asm "\09.long\09__crc_pci_probe_reset_bus\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_probe_reset_bus:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_probe_reset_bus\22\09\09\09\09\09"
module asm "__kstrtabns_pci_probe_reset_bus:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_reset_bus\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_reset_bus\09\09\09\09"
module asm "\09.long\09__crc_pci_reset_bus\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_reset_bus:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_reset_bus\22\09\09\09\09\09"
module asm "__kstrtabns_pci_reset_bus:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcix_get_max_mmrbc\22, \22a\22\09"
module asm "\09.weak\09__crc_pcix_get_max_mmrbc\09\09\09\09"
module asm "\09.long\09__crc_pcix_get_max_mmrbc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcix_get_max_mmrbc:\09\09\09\09\09"
module asm "\09.asciz \09\22pcix_get_max_mmrbc\22\09\09\09\09\09"
module asm "__kstrtabns_pcix_get_max_mmrbc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcix_get_mmrbc\22, \22a\22\09"
module asm "\09.weak\09__crc_pcix_get_mmrbc\09\09\09\09"
module asm "\09.long\09__crc_pcix_get_mmrbc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcix_get_mmrbc:\09\09\09\09\09"
module asm "\09.asciz \09\22pcix_get_mmrbc\22\09\09\09\09\09"
module asm "__kstrtabns_pcix_get_mmrbc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcix_set_mmrbc\22, \22a\22\09"
module asm "\09.weak\09__crc_pcix_set_mmrbc\09\09\09\09"
module asm "\09.long\09__crc_pcix_set_mmrbc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcix_set_mmrbc:\09\09\09\09\09"
module asm "\09.asciz \09\22pcix_set_mmrbc\22\09\09\09\09\09"
module asm "__kstrtabns_pcix_set_mmrbc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcie_get_readrq\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_get_readrq\09\09\09\09"
module asm "\09.long\09__crc_pcie_get_readrq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_get_readrq:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_get_readrq\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_get_readrq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcie_set_readrq\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_set_readrq\09\09\09\09"
module asm "\09.long\09__crc_pcie_set_readrq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_set_readrq:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_set_readrq\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_set_readrq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcie_get_mps\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_get_mps\09\09\09\09"
module asm "\09.long\09__crc_pcie_get_mps\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_get_mps:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_get_mps\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_get_mps:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcie_set_mps\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_set_mps\09\09\09\09"
module asm "\09.long\09__crc_pcie_set_mps\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_set_mps:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_set_mps\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_set_mps:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcie_bandwidth_available\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_bandwidth_available\09\09\09\09"
module asm "\09.long\09__crc_pcie_bandwidth_available\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_bandwidth_available:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_bandwidth_available\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_bandwidth_available:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcie_get_speed_cap\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_get_speed_cap\09\09\09\09"
module asm "\09.long\09__crc_pcie_get_speed_cap\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_get_speed_cap:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_get_speed_cap\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_get_speed_cap:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcie_get_width_cap\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_get_width_cap\09\09\09\09"
module asm "\09.long\09__crc_pcie_get_width_cap\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_get_width_cap:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_get_width_cap\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_get_width_cap:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pcie_print_link_status\22, \22a\22\09"
module asm "\09.weak\09__crc_pcie_print_link_status\09\09\09\09"
module asm "\09.long\09__crc_pcie_print_link_status\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pcie_print_link_status:\09\09\09\09\09"
module asm "\09.asciz \09\22pcie_print_link_status\22\09\09\09\09\09"
module asm "__kstrtabns_pcie_print_link_status:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_select_bars\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_select_bars\09\09\09\09"
module asm "\09.long\09__crc_pci_select_bars\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_select_bars:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_select_bars\22\09\09\09\09\09"
module asm "__kstrtabns_pci_select_bars:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_device_is_present\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_device_is_present\09\09\09\09"
module asm "\09.long\09__crc_pci_device_is_present\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_device_is_present:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_device_is_present\22\09\09\09\09\09"
module asm "__kstrtabns_pci_device_is_present:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pci_ignore_hotplug\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_ignore_hotplug\09\09\09\09"
module asm "\09.long\09__crc_pci_ignore_hotplug\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_ignore_hotplug:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_ignore_hotplug\22\09\09\09\09\09"
module asm "__kstrtabns_pci_ignore_hotplug:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pci_fixup_cardbus\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_fixup_cardbus\09\09\09\09"
module asm "\09.long\09__crc_pci_fixup_cardbus\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_fixup_cardbus:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_fixup_cardbus\22\09\09\09\09\09"
module asm "__kstrtabns_pci_fixup_cardbus:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon }
%union.anon = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.pci_reset_fn_method = type { ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.bus_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lock_class_key, i8 }
%struct.bus_attribute = type { %struct.attribute, ptr, ptr }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.73, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.hlist_head = type { ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.73 = type { ptr }
%struct.pci_bus = type { %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, [4 x ptr], %struct.list_head, %struct.resource, ptr, ptr, ptr, i8, i8, i8, i8, i32, [48 x i8], i16, i16, ptr, %struct.device, ptr, ptr, i8 }
%struct.pci_cap_saved_state = type { %struct.hlist_node, %struct.pci_cap_saved_data }
%struct.pci_cap_saved_data = type { i16, i8, i32, [0 x i32] }
%struct.pci_saved_state = type { [16 x i32], [0 x %struct.pci_cap_saved_data] }
%struct.pci_pme_device = type { %struct.list_head, ptr }
%struct.pci_devres = type { i8, i32 }
%struct.logic_pio_hwaddr = type { %struct.list_head, ptr, i32, i32, i32, i32, ptr, ptr }
%struct.pci_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.pci_driver = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.device_driver, %struct.pci_dynids }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pci_error_handlers = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_slot = type { ptr, %struct.list_head, ptr, i8, %struct.kobject }
%struct.hotplug_slot = type { ptr, %struct.list_head, ptr, ptr, ptr }
%struct.hotplug_slot_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }

@.str = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"pci_slot_mutex.wait_lock\00", [39 x i8] zeroinitializer }, align 32
@pci_slot_mutex = dso_local global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @pci_slot_mutex, i64 52), ptr getelementptr (i8, ptr @pci_slot_mutex, i64 52) }, ptr @pci_slot_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.1, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"pci_slot_mutex\00", [17 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"D0\00", [29 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"D1\00", [29 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"D2\00", [29 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"D3hot\00", [26 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"D3cold\00", [25 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unknown\00", [24 x i8] zeroinitializer }, align 32
@pci_power_names = dso_local global { [7 x ptr], [36 x i8] } { [7 x ptr] [ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8], [36 x i8] zeroinitializer }, align 32
@__kstrtab_pci_power_names = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_power_names = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_power_names = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_power_names to i32), ptr @__kstrtab_pci_power_names, ptr @__kstrtabns_pci_power_names }, section "___ksymtab_gpl+pci_power_names", align 4
@isa_dma_bridge_buggy = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__kstrtab_isa_dma_bridge_buggy = external dso_local constant [0 x i8], align 1
@__kstrtabns_isa_dma_bridge_buggy = external dso_local constant [0 x i8], align 1
@__ksymtab_isa_dma_bridge_buggy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @isa_dma_bridge_buggy to i32), ptr @__kstrtab_isa_dma_bridge_buggy, ptr @__kstrtabns_isa_dma_bridge_buggy }, section "___ksymtab+isa_dma_bridge_buggy", align 4
@pci_pci_problems = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__kstrtab_pci_pci_problems = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_pci_problems = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_pci_problems = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_pci_problems to i32), ptr @__kstrtab_pci_pci_problems, ptr @__kstrtabns_pci_pci_problems }, section "___ksymtab+pci_pci_problems", align 4
@pci_domains_supported = dso_local global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@pci_cardbus_io_size = dso_local global { i32, [28 x i8] } { i32 256, [28 x i8] zeroinitializer }, align 32
@pci_cardbus_mem_size = dso_local global { i32, [28 x i8] } { i32 67108864, [28 x i8] zeroinitializer }, align 32
@pci_hotplug_io_size = dso_local global { i32, [28 x i8] } { i32 256, [28 x i8] zeroinitializer }, align 32
@pci_hotplug_mmio_size = dso_local global { i32, [28 x i8] } { i32 2097152, [28 x i8] zeroinitializer }, align 32
@pci_hotplug_mmio_pref_size = dso_local global { i32, [28 x i8] } { i32 2097152, [28 x i8] zeroinitializer }, align 32
@pci_hotplug_bus_size = dso_local global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@pcie_bus_config = dso_local global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@pci_dfl_cache_line_size = dso_local global { i8, [31 x i8] } { i8 32, [31 x i8] zeroinitializer }, align 32
@pcibios_max_latency = dso_local global { i32, [28 x i8] } { i32 255, [28 x i8] zeroinitializer }, align 32
@pcie_ats_disabled = internal global { i1, [31 x i8] } zeroinitializer, align 32
@__kstrtab_pci_ats_disabled = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_ats_disabled = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_ats_disabled = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_ats_disabled to i32), ptr @__kstrtab_pci_ats_disabled, ptr @__kstrtabns_pci_ats_disabled }, section "___ksymtab_gpl+pci_ats_disabled", align 4
@__setup_str_pcie_port_pm_setup = internal constant [14 x i8] c"pcie_port_pm=\00", section ".init.rodata", align 1
@__setup_pcie_port_pm_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_pcie_port_pm_setup, ptr @pcie_port_pm_setup, i32 0 }, section ".init.setup", align 4
@__kstrtab_pci_bus_max_busnr = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_bus_max_busnr = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_bus_max_busnr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_bus_max_busnr to i32), ptr @__kstrtab_pci_bus_max_busnr, ptr @__kstrtabns_pci_bus_max_busnr }, section "___ksymtab_gpl+pci_bus_max_busnr", align 4
@__kstrtab_pci_status_get_and_clear_errors = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_status_get_and_clear_errors = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_status_get_and_clear_errors = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_status_get_and_clear_errors to i32), ptr @__kstrtab_pci_status_get_and_clear_errors, ptr @__kstrtabns_pci_status_get_and_clear_errors }, section "___ksymtab_gpl+pci_status_get_and_clear_errors", align 4
@__kstrtab_pci_ioremap_bar = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_ioremap_bar = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_ioremap_bar = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_ioremap_bar to i32), ptr @__kstrtab_pci_ioremap_bar, ptr @__kstrtabns_pci_ioremap_bar }, section "___ksymtab_gpl+pci_ioremap_bar", align 4
@__kstrtab_pci_ioremap_wc_bar = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_ioremap_wc_bar = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_ioremap_wc_bar = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_ioremap_wc_bar to i32), ptr @__kstrtab_pci_ioremap_wc_bar, ptr @__kstrtabns_pci_ioremap_wc_bar }, section "___ksymtab_gpl+pci_ioremap_wc_bar", align 4
@__kstrtab_pci_find_next_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_next_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_next_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_next_capability to i32), ptr @__kstrtab_pci_find_next_capability, ptr @__kstrtabns_pci_find_next_capability }, section "___ksymtab_gpl+pci_find_next_capability", align 4
@__kstrtab_pci_find_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_capability to i32), ptr @__kstrtab_pci_find_capability, ptr @__kstrtabns_pci_find_capability }, section "___ksymtab+pci_find_capability", align 4
@__kstrtab_pci_bus_find_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_bus_find_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_bus_find_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_bus_find_capability to i32), ptr @__kstrtab_pci_bus_find_capability, ptr @__kstrtabns_pci_bus_find_capability }, section "___ksymtab+pci_bus_find_capability", align 4
@__kstrtab_pci_find_next_ext_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_next_ext_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_next_ext_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_next_ext_capability to i32), ptr @__kstrtab_pci_find_next_ext_capability, ptr @__kstrtabns_pci_find_next_ext_capability }, section "___ksymtab_gpl+pci_find_next_ext_capability", align 4
@__kstrtab_pci_find_ext_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_ext_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_ext_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_ext_capability to i32), ptr @__kstrtab_pci_find_ext_capability, ptr @__kstrtabns_pci_find_ext_capability }, section "___ksymtab_gpl+pci_find_ext_capability", align 4
@__kstrtab_pci_get_dsn = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_get_dsn = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_get_dsn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_get_dsn to i32), ptr @__kstrtab_pci_get_dsn, ptr @__kstrtabns_pci_get_dsn }, section "___ksymtab_gpl+pci_get_dsn", align 4
@__kstrtab_pci_find_next_ht_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_next_ht_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_next_ht_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_next_ht_capability to i32), ptr @__kstrtab_pci_find_next_ht_capability, ptr @__kstrtabns_pci_find_next_ht_capability }, section "___ksymtab_gpl+pci_find_next_ht_capability", align 4
@__kstrtab_pci_find_ht_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_ht_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_ht_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_ht_capability to i32), ptr @__kstrtab_pci_find_ht_capability, ptr @__kstrtabns_pci_find_ht_capability }, section "___ksymtab_gpl+pci_find_ht_capability", align 4
@__kstrtab_pci_find_vsec_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_vsec_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_vsec_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_vsec_capability to i32), ptr @__kstrtab_pci_find_vsec_capability, ptr @__kstrtabns_pci_find_vsec_capability }, section "___ksymtab_gpl+pci_find_vsec_capability", align 4
@__kstrtab_pci_find_dvsec_capability = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_dvsec_capability = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_dvsec_capability = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_dvsec_capability to i32), ptr @__kstrtab_pci_find_dvsec_capability, ptr @__kstrtabns_pci_find_dvsec_capability }, section "___ksymtab_gpl+pci_find_dvsec_capability", align 4
@__kstrtab_pci_find_parent_resource = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_parent_resource = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_parent_resource = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_parent_resource to i32), ptr @__kstrtab_pci_find_parent_resource, ptr @__kstrtabns_pci_find_parent_resource }, section "___ksymtab+pci_find_parent_resource", align 4
@__kstrtab_pci_find_resource = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_find_resource = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_find_resource = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_find_resource to i32), ptr @__kstrtab_pci_find_resource, ptr @__kstrtabns_pci_find_resource }, section "___ksymtab+pci_find_resource", align 4
@pci_acs_enable = internal global { i1, [31 x i8] } zeroinitializer, align 32
@__kstrtab_pci_platform_power_transition = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_platform_power_transition = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_platform_power_transition = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_platform_power_transition to i32), ptr @__kstrtab_pci_platform_power_transition, ptr @__kstrtabns_pci_platform_power_transition }, section "___ksymtab_gpl+pci_platform_power_transition", align 4
@__kstrtab_pci_set_power_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_set_power_state = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_set_power_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_set_power_state to i32), ptr @__kstrtab_pci_set_power_state, ptr @__kstrtabns_pci_set_power_state }, section "___ksymtab+pci_set_power_state", align 4
@pci_bridge_reconfigure_ltr.__UNIQUE_ID_ddebug237 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, i8 1, i8 115, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.9 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pci\00", [28 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"pci_bridge_reconfigure_ltr\00", [37 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"drivers/pci/pci.c\00", [46 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"re-enabling LTR\0A\00", [47 x i8] zeroinitializer }, align 32
@pci_save_state.__UNIQUE_ID_ddebug238 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.13, ptr @.str.11, ptr @.str.14, i8 1, i8 -111, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.13 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"pci_save_state\00", [17 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"saving config space at offset %#x (reading %#x)\0A\00", [47 x i8] zeroinitializer }, align 32
@__kstrtab_pci_save_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_save_state = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_save_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_save_state to i32), ptr @__kstrtab_pci_save_state, ptr @__kstrtabns_pci_save_state }, section "___ksymtab+pci_save_state", align 4
@__kstrtab_pci_restore_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_restore_state = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_restore_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_restore_state to i32), ptr @__kstrtab_pci_restore_state, ptr @__kstrtabns_pci_restore_state }, section "___ksymtab+pci_restore_state", align 4
@__kstrtab_pci_store_saved_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_store_saved_state = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_store_saved_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_store_saved_state to i32), ptr @__kstrtab_pci_store_saved_state, ptr @__kstrtabns_pci_store_saved_state }, section "___ksymtab_gpl+pci_store_saved_state", align 4
@__kstrtab_pci_load_saved_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_load_saved_state = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_load_saved_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_load_saved_state to i32), ptr @__kstrtab_pci_load_saved_state, ptr @__kstrtabns_pci_load_saved_state }, section "___ksymtab_gpl+pci_load_saved_state", align 4
@__kstrtab_pci_load_and_free_saved_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_load_and_free_saved_state = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_load_and_free_saved_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_load_and_free_saved_state to i32), ptr @__kstrtab_pci_load_and_free_saved_state, ptr @__kstrtabns_pci_load_and_free_saved_state }, section "___ksymtab_gpl+pci_load_and_free_saved_state", align 4
@__kstrtab_pci_reenable_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_reenable_device = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_reenable_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_reenable_device to i32), ptr @__kstrtab_pci_reenable_device, ptr @__kstrtabns_pci_reenable_device }, section "___ksymtab+pci_reenable_device", align 4
@__kstrtab_pci_enable_device_io = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_enable_device_io = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_enable_device_io = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_enable_device_io to i32), ptr @__kstrtab_pci_enable_device_io, ptr @__kstrtabns_pci_enable_device_io }, section "___ksymtab+pci_enable_device_io", align 4
@__kstrtab_pci_enable_device_mem = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_enable_device_mem = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_enable_device_mem = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_enable_device_mem to i32), ptr @__kstrtab_pci_enable_device_mem, ptr @__kstrtabns_pci_enable_device_mem }, section "___ksymtab+pci_enable_device_mem", align 4
@__kstrtab_pci_enable_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_enable_device = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_enable_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_enable_device to i32), ptr @__kstrtab_pci_enable_device, ptr @__kstrtabns_pci_enable_device }, section "___ksymtab+pci_enable_device", align 4
@__kstrtab_pcim_enable_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcim_enable_device = external dso_local constant [0 x i8], align 1
@__ksymtab_pcim_enable_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcim_enable_device to i32), ptr @__kstrtab_pcim_enable_device, ptr @__kstrtabns_pcim_enable_device }, section "___ksymtab+pcim_enable_device", align 4
@__kstrtab_pcim_pin_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcim_pin_device = external dso_local constant [0 x i8], align 1
@__ksymtab_pcim_pin_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcim_pin_device to i32), ptr @__kstrtab_pcim_pin_device, ptr @__kstrtabns_pcim_pin_device }, section "___ksymtab+pcim_pin_device", align 4
@pci_disable_device.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.15 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%s %s: disabling already-disabled device\00", [55 x i8] zeroinitializer }, align 32
@__kstrtab_pci_disable_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_disable_device = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_disable_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_disable_device to i32), ptr @__kstrtab_pci_disable_device, ptr @__kstrtabns_pci_disable_device }, section "___ksymtab+pci_disable_device", align 4
@__kstrtab_pci_set_pcie_reset_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_set_pcie_reset_state = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_set_pcie_reset_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_set_pcie_reset_state to i32), ptr @__kstrtab_pci_set_pcie_reset_state, ptr @__kstrtabns_pci_set_pcie_reset_state }, section "___ksymtab_gpl+pci_set_pcie_reset_state", align 4
@__kstrtab_pci_pme_capable = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_pme_capable = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_pme_capable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_pme_capable to i32), ptr @__kstrtab_pci_pme_capable, ptr @__kstrtabns_pci_pme_capable }, section "___ksymtab+pci_pme_capable", align 4
@pci_pme_active._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @.str.17, ptr @.str.11, i32 2446, ptr @.str.18, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"can't enable PME#\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"pci_pme_active\00", [17 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@pci_pme_active._entry_ptr = internal global ptr @pci_pme_active._entry, section ".printk_index", align 4
@pci_pme_list_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.125, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @pci_pme_list_mutex, i64 52), ptr getelementptr (i8, ptr @pci_pme_list_mutex, i64 52) }, ptr @pci_pme_list_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.126, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@pci_pme_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @pci_pme_list, ptr @pci_pme_list }, [24 x i8] zeroinitializer }, align 32
@system_freezable_wq = external dso_local local_unnamed_addr global ptr, align 4
@pci_pme_work = internal global { %struct.delayed_work, [60 x i8] } { %struct.delayed_work { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @pci_pme_work, i64 4), ptr getelementptr (i8, ptr @pci_pme_work, i64 4) }, ptr @pci_pme_list_scan, %struct.lockdep_map { ptr @pci_pme_work, [2 x ptr] zeroinitializer, ptr @.str.127, i8 0, i8 0, i8 0, i32 0, i32 0 } }, %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @delayed_work_timer_fn, i32 2097152, %struct.lockdep_map { ptr @.str.128, [2 x ptr] zeroinitializer, ptr @.str.128, i8 0, i8 0, i8 0, i32 0, i32 0 } }, ptr null, i32 0 }, [60 x i8] zeroinitializer }, align 32
@pci_pme_active.__UNIQUE_ID_ddebug240 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.17, ptr @.str.11, ptr @.str.20, i8 2, i8 105, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.20 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"PME# %s\0A\00", [23 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"enabled\00", [24 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"disabled\00", [23 x i8] zeroinitializer }, align 32
@__kstrtab_pci_pme_active = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_pme_active = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_pme_active = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_pme_active to i32), ptr @__kstrtab_pci_pme_active, ptr @__kstrtabns_pci_pme_active }, section "___ksymtab+pci_pme_active", align 4
@__kstrtab_pci_enable_wake = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_enable_wake = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_enable_wake = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_enable_wake to i32), ptr @__kstrtab_pci_enable_wake, ptr @__kstrtabns_pci_enable_wake }, section "___ksymtab+pci_enable_wake", align 4
@__kstrtab_pci_wake_from_d3 = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_wake_from_d3 = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_wake_from_d3 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_wake_from_d3 to i32), ptr @__kstrtab_pci_wake_from_d3, ptr @__kstrtabns_pci_wake_from_d3 }, section "___ksymtab+pci_wake_from_d3", align 4
@__kstrtab_pci_prepare_to_sleep = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_prepare_to_sleep = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_prepare_to_sleep = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_prepare_to_sleep to i32), ptr @__kstrtab_pci_prepare_to_sleep, ptr @__kstrtabns_pci_prepare_to_sleep }, section "___ksymtab+pci_prepare_to_sleep", align 4
@__kstrtab_pci_back_from_sleep = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_back_from_sleep = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_back_from_sleep = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_back_from_sleep to i32), ptr @__kstrtab_pci_back_from_sleep, ptr @__kstrtabns_pci_back_from_sleep }, section "___ksymtab+pci_back_from_sleep", align 4
@__kstrtab_pci_dev_run_wake = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_dev_run_wake = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_dev_run_wake = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_dev_run_wake to i32), ptr @__kstrtab_pci_dev_run_wake, ptr @__kstrtabns_pci_dev_run_wake }, section "___ksymtab_gpl+pci_dev_run_wake", align 4
@__kstrtab_pci_choose_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_choose_state = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_choose_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_choose_state to i32), ptr @__kstrtab_pci_choose_state, ptr @__kstrtabns_pci_choose_state }, section "___ksymtab+pci_choose_state", align 4
@pci_bridge_d3_disable = internal global { i1, [31 x i8] } zeroinitializer, align 32
@pci_bridge_d3_force = internal global { i1, [31 x i8] } zeroinitializer, align 32
@__kstrtab_pci_d3cold_enable = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_d3cold_enable = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_d3cold_enable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_d3cold_enable to i32), ptr @__kstrtab_pci_d3cold_enable, ptr @__kstrtabns_pci_d3cold_enable }, section "___ksymtab_gpl+pci_d3cold_enable", align 4
@__kstrtab_pci_d3cold_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_d3cold_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_d3cold_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_d3cold_disable to i32), ptr @__kstrtab_pci_d3cold_disable, ptr @__kstrtabns_pci_d3cold_disable }, section "___ksymtab_gpl+pci_d3cold_disable", align 4
@pci_pm_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.24, ptr @.str.11, i32 3122, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"unsupported PM cap regs version (%u)\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"pci_pm_init\00", [20 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@pci_pm_init._entry_ptr = internal global ptr @pci_pm_init._entry, section ".printk_index", align 4
@pci_pm_init._entry.26 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.24, ptr @.str.11, i32 3143, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"supports%s%s\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@pci_pm_init._entry_ptr.29 = internal global ptr @pci_pm_init._entry.26, section ".printk_index", align 4
@.str.30 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" D1\00", [28 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.32 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" D2\00", [28 x i8] zeroinitializer }, align 32
@pci_pm_init._entry.33 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.24, ptr @.str.11, i32 3153, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"PME# supported from%s%s%s%s%s\0A\00", [33 x i8] zeroinitializer }, align 32
@pci_pm_init._entry_ptr.35 = internal global ptr @pci_pm_init._entry.33, section ".printk_index", align 4
@.str.36 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" D0\00", [28 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c" D3hot\00", [25 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c" D3cold\00", [24 x i8] zeroinitializer }, align 32
@pci_allocate_cap_save_buffers._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.40, ptr @.str.11, i32 3422, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"unable to preallocate PCI Express save buffer\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"pci_allocate_cap_save_buffers\00", [34 x i8] zeroinitializer }, align 32
@pci_allocate_cap_save_buffers._entry_ptr = internal global ptr @pci_allocate_cap_save_buffers._entry, section ".printk_index", align 4
@pci_allocate_cap_save_buffers._entry.41 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.42, ptr @.str.40, ptr @.str.11, i32 3426, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"unable to preallocate PCI-X save buffer\0A\00", [55 x i8] zeroinitializer }, align 32
@pci_allocate_cap_save_buffers._entry_ptr.43 = internal global ptr @pci_allocate_cap_save_buffers._entry.41, section ".printk_index", align 4
@pci_allocate_cap_save_buffers._entry.44 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.40, ptr @.str.11, i32 3431, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"unable to allocate suspend buffer for LTR\0A\00", [53 x i8] zeroinitializer }, align 32
@pci_allocate_cap_save_buffers._entry_ptr.46 = internal global ptr @pci_allocate_cap_save_buffers._entry.44, section ".printk_index", align 4
@pcie_ari_disabled = internal global { i1, [31 x i8] } zeroinitializer, align 32
@__kstrtab_pci_rebar_get_possible_sizes = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_rebar_get_possible_sizes = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_rebar_get_possible_sizes = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_rebar_get_possible_sizes to i32), ptr @__kstrtab_pci_rebar_get_possible_sizes, ptr @__kstrtabns_pci_rebar_get_possible_sizes }, section "___ksymtab+pci_rebar_get_possible_sizes", align 4
@__kstrtab_pci_enable_atomic_ops_to_root = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_enable_atomic_ops_to_root = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_enable_atomic_ops_to_root = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_enable_atomic_ops_to_root to i32), ptr @__kstrtab_pci_enable_atomic_ops_to_root, ptr @__kstrtabns_pci_enable_atomic_ops_to_root }, section "___ksymtab+pci_enable_atomic_ops_to_root", align 4
@__kstrtab_pci_common_swizzle = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_common_swizzle = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_common_swizzle = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_common_swizzle to i32), ptr @__kstrtab_pci_common_swizzle, ptr @__kstrtabns_pci_common_swizzle }, section "___ksymtab_gpl+pci_common_swizzle", align 4
@ioport_resource = external dso_local global %struct.resource, align 4
@iomem_resource = external dso_local global %struct.resource, align 4
@__kstrtab_pci_release_region = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_release_region = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_release_region = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_release_region to i32), ptr @__kstrtab_pci_release_region, ptr @__kstrtabns_pci_release_region }, section "___ksymtab+pci_release_region", align 4
@__kstrtab_pci_request_region = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_request_region = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_request_region = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_request_region to i32), ptr @__kstrtab_pci_request_region, ptr @__kstrtabns_pci_request_region }, section "___ksymtab+pci_request_region", align 4
@__kstrtab_pci_release_selected_regions = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_release_selected_regions = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_release_selected_regions = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_release_selected_regions to i32), ptr @__kstrtab_pci_release_selected_regions, ptr @__kstrtabns_pci_release_selected_regions }, section "___ksymtab+pci_release_selected_regions", align 4
@__kstrtab_pci_request_selected_regions = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_request_selected_regions = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_request_selected_regions = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_request_selected_regions to i32), ptr @__kstrtab_pci_request_selected_regions, ptr @__kstrtabns_pci_request_selected_regions }, section "___ksymtab+pci_request_selected_regions", align 4
@__kstrtab_pci_request_selected_regions_exclusive = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_request_selected_regions_exclusive = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_request_selected_regions_exclusive = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_request_selected_regions_exclusive to i32), ptr @__kstrtab_pci_request_selected_regions_exclusive, ptr @__kstrtabns_pci_request_selected_regions_exclusive }, section "___ksymtab+pci_request_selected_regions_exclusive", align 4
@__kstrtab_pci_release_regions = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_release_regions = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_release_regions = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_release_regions to i32), ptr @__kstrtab_pci_release_regions, ptr @__kstrtabns_pci_release_regions }, section "___ksymtab+pci_release_regions", align 4
@__kstrtab_pci_request_regions = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_request_regions = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_request_regions = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_request_regions to i32), ptr @__kstrtab_pci_request_regions, ptr @__kstrtabns_pci_request_regions }, section "___ksymtab+pci_request_regions", align 4
@__kstrtab_pci_request_regions_exclusive = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_request_regions_exclusive = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_request_regions_exclusive = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_request_regions_exclusive to i32), ptr @__kstrtab_pci_request_regions_exclusive, ptr @__kstrtabns_pci_request_regions_exclusive }, section "___ksymtab+pci_request_regions_exclusive", align 4
@__kstrtab_pci_pio_to_address = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_pio_to_address = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_pio_to_address = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_pio_to_address to i32), ptr @__kstrtab_pci_pio_to_address, ptr @__kstrtabns_pci_pio_to_address }, section "___ksymtab_gpl+pci_pio_to_address", align 4
@__kstrtab_pci_unmap_iospace = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_unmap_iospace = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_unmap_iospace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_unmap_iospace to i32), ptr @__kstrtab_pci_unmap_iospace, ptr @__kstrtabns_pci_unmap_iospace }, section "___ksymtab+pci_unmap_iospace", align 4
@.str.47 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"devm_pci_unmap_iospace\00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_devm_pci_remap_iospace = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_pci_remap_iospace = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_pci_remap_iospace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_pci_remap_iospace to i32), ptr @__kstrtab_devm_pci_remap_iospace, ptr @__kstrtabns_devm_pci_remap_iospace }, section "___ksymtab+devm_pci_remap_iospace", align 4
@.str.48 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"devm_ioremap_release\00", [43 x i8] zeroinitializer }, align 32
@__kstrtab_devm_pci_remap_cfgspace = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_pci_remap_cfgspace = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_pci_remap_cfgspace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_pci_remap_cfgspace to i32), ptr @__kstrtab_devm_pci_remap_cfgspace, ptr @__kstrtabns_devm_pci_remap_cfgspace }, section "___ksymtab+devm_pci_remap_cfgspace", align 4
@devm_pci_remap_cfg_resource._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.50, ptr @.str.11, i32 4307, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"invalid resource\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"devm_pci_remap_cfg_resource\00", [36 x i8] zeroinitializer }, align 32
@devm_pci_remap_cfg_resource._entry_ptr = internal global ptr @devm_pci_remap_cfg_resource._entry, section ".printk_index", align 4
@.str.51 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s %s\00", [26 x i8] zeroinitializer }, align 32
@devm_pci_remap_cfg_resource._entry.52 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.50, ptr @.str.11, i32 4322, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"can't request region for resource %pR\0A\00", [57 x i8] zeroinitializer }, align 32
@devm_pci_remap_cfg_resource._entry_ptr.54 = internal global ptr @devm_pci_remap_cfg_resource._entry.52, section ".printk_index", align 4
@devm_pci_remap_cfg_resource._entry.55 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.56, ptr @.str.50, ptr @.str.11, i32 4328, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"ioremap failed for resource %pR\0A\00", [63 x i8] zeroinitializer }, align 32
@devm_pci_remap_cfg_resource._entry_ptr.57 = internal global ptr @devm_pci_remap_cfg_resource._entry.55, section ".printk_index", align 4
@__kstrtab_devm_pci_remap_cfg_resource = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_pci_remap_cfg_resource = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_pci_remap_cfg_resource = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_pci_remap_cfg_resource to i32), ptr @__kstrtab_devm_pci_remap_cfg_resource, ptr @__kstrtabns_devm_pci_remap_cfg_resource }, section "___ksymtab+devm_pci_remap_cfg_resource", align 4
@__kstrtab_pci_set_master = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_set_master = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_set_master = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_set_master to i32), ptr @__kstrtab_pci_set_master, ptr @__kstrtabns_pci_set_master }, section "___ksymtab+pci_set_master", align 4
@__kstrtab_pci_clear_master = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_clear_master = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_clear_master = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_clear_master to i32), ptr @__kstrtab_pci_clear_master, ptr @__kstrtabns_pci_clear_master }, section "___ksymtab+pci_clear_master", align 4
@pci_cache_line_size = dso_local global { i8, [31 x i8] } zeroinitializer, align 32
@pci_set_cacheline_size.__UNIQUE_ID_ddebug242 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.58, ptr @.str.11, ptr @.str.59, i8 4, i8 88, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.58 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pci_set_cacheline_size\00", [41 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"cache line size of %d is not supported\0A\00", [56 x i8] zeroinitializer }, align 32
@__kstrtab_pci_set_cacheline_size = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_set_cacheline_size = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_set_cacheline_size = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_set_cacheline_size to i32), ptr @__kstrtab_pci_set_cacheline_size, ptr @__kstrtabns_pci_set_cacheline_size }, section "___ksymtab_gpl+pci_set_cacheline_size", align 4
@pci_set_mwi.__UNIQUE_ID_ddebug243 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.60, ptr @.str.11, ptr @.str.61, i8 4, i8 95, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.60 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"pci_set_mwi\00", [20 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"enabling Mem-Wr-Inval\0A\00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_pci_set_mwi = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_set_mwi = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_set_mwi = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_set_mwi to i32), ptr @__kstrtab_pci_set_mwi, ptr @__kstrtabns_pci_set_mwi }, section "___ksymtab+pci_set_mwi", align 4
@__kstrtab_pcim_set_mwi = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcim_set_mwi = external dso_local constant [0 x i8], align 1
@__ksymtab_pcim_set_mwi = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcim_set_mwi to i32), ptr @__kstrtab_pcim_set_mwi, ptr @__kstrtabns_pcim_set_mwi }, section "___ksymtab+pcim_set_mwi", align 4
@__kstrtab_pci_try_set_mwi = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_try_set_mwi = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_try_set_mwi = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_try_set_mwi to i32), ptr @__kstrtab_pci_try_set_mwi, ptr @__kstrtabns_pci_try_set_mwi }, section "___ksymtab+pci_try_set_mwi", align 4
@__kstrtab_pci_clear_mwi = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_clear_mwi = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_clear_mwi = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_clear_mwi to i32), ptr @__kstrtab_pci_clear_mwi, ptr @__kstrtabns_pci_clear_mwi }, section "___ksymtab+pci_clear_mwi", align 4
@__kstrtab_pci_intx = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_intx = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_intx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_intx to i32), ptr @__kstrtab_pci_intx, ptr @__kstrtabns_pci_intx }, section "___ksymtab_gpl+pci_intx", align 4
@__kstrtab_pci_check_and_mask_intx = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_check_and_mask_intx = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_check_and_mask_intx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_check_and_mask_intx to i32), ptr @__kstrtab_pci_check_and_mask_intx, ptr @__kstrtabns_pci_check_and_mask_intx }, section "___ksymtab_gpl+pci_check_and_mask_intx", align 4
@__kstrtab_pci_check_and_unmask_intx = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_check_and_unmask_intx = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_check_and_unmask_intx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_check_and_unmask_intx to i32), ptr @__kstrtab_pci_check_and_unmask_intx, ptr @__kstrtabns_pci_check_and_unmask_intx }, section "___ksymtab_gpl+pci_check_and_unmask_intx", align 4
@__kstrtab_pci_wait_for_pending_transaction = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_wait_for_pending_transaction = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_wait_for_pending_transaction = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_wait_for_pending_transaction to i32), ptr @__kstrtab_pci_wait_for_pending_transaction, ptr @__kstrtabns_pci_wait_for_pending_transaction }, section "___ksymtab+pci_wait_for_pending_transaction", align 4
@pcie_flr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.62, ptr @.str.63, ptr @.str.11, i32 4693, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"timed out waiting for pending transaction; performing function level reset anyway\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pcie_flr\00", [23 x i8] zeroinitializer }, align 32
@pcie_flr._entry_ptr = internal global ptr @pcie_flr._entry, section ".printk_index", align 4
@.str.64 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"FLR\00", [28 x i8] zeroinitializer }, align 32
@__kstrtab_pcie_flr = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_flr = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_flr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_flr to i32), ptr @__kstrtab_pcie_flr, ptr @__kstrtabns_pcie_flr }, section "___ksymtab_gpl+pcie_flr", align 4
@__kstrtab_pcie_reset_flr = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_reset_flr = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_reset_flr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_reset_flr to i32), ptr @__kstrtab_pcie_reset_flr, ptr @__kstrtabns_pcie_reset_flr }, section "___ksymtab_gpl+pcie_reset_flr", align 4
@pci_bus_sem = external dso_local global %struct.rw_semaphore, align 4
@pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug248 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.65, ptr @.str.11, ptr @.str.66, i8 4, i8 -40, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.65 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"pci_bridge_wait_for_secondary_bus\00", [62 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"waiting %d ms for secondary bus\0A\00", [63 x i8] zeroinitializer }, align 32
@pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug249 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.65, ptr @.str.11, ptr @.str.67, i8 4, i8 -34, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.67 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"waiting %d ms for downstream link\0A\00", [61 x i8] zeroinitializer }, align 32
@pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug250 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.65, ptr @.str.11, ptr @.str.68, i8 4, i8 -33, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.68 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"waiting %d ms for downstream link, after activation\0A\00", [43 x i8] zeroinitializer }, align 32
@pci_bridge_wait_for_secondary_bus._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.65, ptr @.str.11, i32 4994, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Data Link Layer Link Active not set in 1000 msec\0A\00", [46 x i8] zeroinitializer }, align 32
@pci_bridge_wait_for_secondary_bus._entry_ptr = internal global ptr @pci_bridge_wait_for_secondary_bus._entry, section ".printk_index", align 4
@pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug251 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.65, ptr @.str.11, ptr @.str.70, i8 4, i8 -30, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.70 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"waiting additional %d ms to become accessible\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"bus reset\00", [22 x i8] zeroinitializer }, align 32
@__kstrtab_pci_bridge_secondary_bus_reset = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_bridge_secondary_bus_reset = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_bridge_secondary_bus_reset = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_bridge_secondary_bus_reset to i32), ptr @__kstrtab_pci_bridge_secondary_bus_reset, ptr @__kstrtabns_pci_bridge_secondary_bus_reset }, section "___ksymtab_gpl+pci_bridge_secondary_bus_reset", align 4
@__kstrtab_pci_dev_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_dev_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_dev_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_dev_lock to i32), ptr @__kstrtab_pci_dev_lock, ptr @__kstrtabns_pci_dev_lock }, section "___ksymtab_gpl+pci_dev_lock", align 4
@__kstrtab_pci_dev_trylock = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_dev_trylock = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_dev_trylock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_dev_trylock to i32), ptr @__kstrtab_pci_dev_trylock, ptr @__kstrtabns_pci_dev_trylock }, section "___ksymtab_gpl+pci_dev_trylock", align 4
@__kstrtab_pci_dev_unlock = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_dev_unlock = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_dev_unlock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_dev_unlock to i32), ptr @__kstrtab_pci_dev_unlock, ptr @__kstrtabns_pci_dev_unlock }, section "___ksymtab_gpl+pci_dev_unlock", align 4
@pci_dev_reset_method_attrs = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @dev_attr_reset_method, ptr null], [24 x i8] zeroinitializer }, align 32
@pci_dev_reset_method_attr_group = dso_local constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr @pci_dev_reset_method_attr_is_visible, ptr null, ptr @pci_dev_reset_method_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@pci_reset_fn_methods = internal constant { [7 x %struct.pci_reset_fn_method], [40 x i8] } { [7 x %struct.pci_reset_fn_method] [%struct.pci_reset_fn_method zeroinitializer, %struct.pci_reset_fn_method { ptr @pci_dev_specific_reset, ptr @.str.185 }, %struct.pci_reset_fn_method { ptr @pci_dev_acpi_reset, ptr @.str.186 }, %struct.pci_reset_fn_method { ptr @pcie_reset_flr, ptr @.str.187 }, %struct.pci_reset_fn_method { ptr @pci_af_flr, ptr @.str.188 }, %struct.pci_reset_fn_method { ptr @pci_pm_reset, ptr @.str.189 }, %struct.pci_reset_fn_method { ptr @pci_reset_bus_function, ptr @.str.190 }], [40 x i8] zeroinitializer }, align 32
@__kstrtab___pci_reset_function_locked = external dso_local constant [0 x i8], align 1
@__kstrtabns___pci_reset_function_locked = external dso_local constant [0 x i8], align 1
@__ksymtab___pci_reset_function_locked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__pci_reset_function_locked to i32), ptr @__kstrtab___pci_reset_function_locked, ptr @__kstrtabns___pci_reset_function_locked }, section "___ksymtab_gpl+__pci_reset_function_locked", align 4
@__kstrtab_pci_reset_function = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_reset_function = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_reset_function = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_reset_function to i32), ptr @__kstrtab_pci_reset_function, ptr @__kstrtabns_pci_reset_function }, section "___ksymtab_gpl+pci_reset_function", align 4
@__kstrtab_pci_reset_function_locked = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_reset_function_locked = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_reset_function_locked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_reset_function_locked to i32), ptr @__kstrtab_pci_reset_function_locked, ptr @__kstrtabns_pci_reset_function_locked }, section "___ksymtab_gpl+pci_reset_function_locked", align 4
@__kstrtab_pci_try_reset_function = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_try_reset_function = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_try_reset_function = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_try_reset_function to i32), ptr @__kstrtab_pci_try_reset_function, ptr @__kstrtabns_pci_try_reset_function }, section "___ksymtab_gpl+pci_try_reset_function", align 4
@__kstrtab_pci_probe_reset_slot = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_probe_reset_slot = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_probe_reset_slot = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_probe_reset_slot to i32), ptr @__kstrtab_pci_probe_reset_slot, ptr @__kstrtabns_pci_probe_reset_slot }, section "___ksymtab_gpl+pci_probe_reset_slot", align 4
@__kstrtab_pci_probe_reset_bus = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_probe_reset_bus = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_probe_reset_bus = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_probe_reset_bus to i32), ptr @__kstrtab_pci_probe_reset_bus, ptr @__kstrtabns_pci_probe_reset_bus }, section "___ksymtab_gpl+pci_probe_reset_bus", align 4
@__kstrtab_pci_reset_bus = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_reset_bus = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_reset_bus = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_reset_bus to i32), ptr @__kstrtab_pci_reset_bus, ptr @__kstrtabns_pci_reset_bus }, section "___ksymtab_gpl+pci_reset_bus", align 4
@__kstrtab_pcix_get_max_mmrbc = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcix_get_max_mmrbc = external dso_local constant [0 x i8], align 1
@__ksymtab_pcix_get_max_mmrbc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcix_get_max_mmrbc to i32), ptr @__kstrtab_pcix_get_max_mmrbc, ptr @__kstrtabns_pcix_get_max_mmrbc }, section "___ksymtab+pcix_get_max_mmrbc", align 4
@__kstrtab_pcix_get_mmrbc = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcix_get_mmrbc = external dso_local constant [0 x i8], align 1
@__ksymtab_pcix_get_mmrbc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcix_get_mmrbc to i32), ptr @__kstrtab_pcix_get_mmrbc, ptr @__kstrtabns_pcix_get_mmrbc }, section "___ksymtab+pcix_get_mmrbc", align 4
@__kstrtab_pcix_set_mmrbc = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcix_set_mmrbc = external dso_local constant [0 x i8], align 1
@__ksymtab_pcix_set_mmrbc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcix_set_mmrbc to i32), ptr @__kstrtab_pcix_set_mmrbc, ptr @__kstrtabns_pcix_set_mmrbc }, section "___ksymtab+pcix_set_mmrbc", align 4
@__kstrtab_pcie_get_readrq = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_get_readrq = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_get_readrq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_get_readrq to i32), ptr @__kstrtab_pcie_get_readrq, ptr @__kstrtabns_pcie_get_readrq }, section "___ksymtab+pcie_get_readrq", align 4
@__kstrtab_pcie_set_readrq = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_set_readrq = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_set_readrq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_set_readrq to i32), ptr @__kstrtab_pcie_set_readrq, ptr @__kstrtabns_pcie_set_readrq }, section "___ksymtab+pcie_set_readrq", align 4
@__kstrtab_pcie_get_mps = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_get_mps = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_get_mps = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_get_mps to i32), ptr @__kstrtab_pcie_get_mps, ptr @__kstrtabns_pcie_get_mps }, section "___ksymtab+pcie_get_mps", align 4
@__kstrtab_pcie_set_mps = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_set_mps = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_set_mps = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_set_mps to i32), ptr @__kstrtab_pcie_set_mps, ptr @__kstrtabns_pcie_set_mps }, section "___ksymtab+pcie_set_mps", align 4
@pcie_link_speed = external dso_local local_unnamed_addr constant [0 x i8], align 1
@__kstrtab_pcie_bandwidth_available = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_bandwidth_available = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_bandwidth_available = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_bandwidth_available to i32), ptr @__kstrtab_pcie_bandwidth_available, ptr @__kstrtabns_pcie_bandwidth_available }, section "___ksymtab+pcie_bandwidth_available", align 4
@__kstrtab_pcie_get_speed_cap = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_get_speed_cap = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_get_speed_cap = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_get_speed_cap to i32), ptr @__kstrtab_pcie_get_speed_cap, ptr @__kstrtabns_pcie_get_speed_cap }, section "___ksymtab+pcie_get_speed_cap", align 4
@__kstrtab_pcie_get_width_cap = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_get_width_cap = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_get_width_cap = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_get_width_cap to i32), ptr @__kstrtab_pcie_get_width_cap, ptr @__kstrtabns_pcie_get_width_cap }, section "___ksymtab+pcie_get_width_cap", align 4
@__pcie_print_link_status._entry = internal constant %struct.pi_entry { ptr @.str.72, ptr @.str.73, ptr @.str.11, i32 6223, ptr @.str.28, ptr @.str.19 }, align 1
@.str.72 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"%u.%03u Gb/s available PCIe bandwidth (%s x%d link)\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"__pcie_print_link_status\00", [39 x i8] zeroinitializer }, align 32
@__pcie_print_link_status._entry_ptr = internal global ptr @__pcie_print_link_status._entry, section ".printk_index", align 4
@__pcie_print_link_status._entry.74 = internal constant %struct.pi_entry { ptr @.str.75, ptr @.str.73, ptr @.str.11, i32 6230, ptr @.str.28, ptr @.str.19 }, align 1
@.str.75 = internal constant { [112 x i8], [48 x i8] } { [112 x i8] c"%u.%03u Gb/s available PCIe bandwidth, limited by %s x%d link at %s (capable of %u.%03u Gb/s with %s x%d link)\0A\00", [48 x i8] zeroinitializer }, align 32
@__pcie_print_link_status._entry_ptr.76 = internal global ptr @__pcie_print_link_status._entry.74, section ".printk_index", align 4
@.str.77 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"<unknown>\00", [22 x i8] zeroinitializer }, align 32
@__kstrtab_pcie_print_link_status = external dso_local constant [0 x i8], align 1
@__kstrtabns_pcie_print_link_status = external dso_local constant [0 x i8], align 1
@__ksymtab_pcie_print_link_status = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pcie_print_link_status to i32), ptr @__kstrtab_pcie_print_link_status, ptr @__kstrtabns_pcie_print_link_status }, section "___ksymtab+pcie_print_link_status", align 4
@__kstrtab_pci_select_bars = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_select_bars = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_select_bars = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_select_bars to i32), ptr @__kstrtab_pci_select_bars, ptr @__kstrtabns_pci_select_bars }, section "___ksymtab+pci_select_bars", align 4
@arch_set_vga_state = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@pci_add_dma_alias._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str.11, i32 6381, ptr @.str.18, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Unable to allocate DMA alias mask\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"pci_add_dma_alias\00", [46 x i8] zeroinitializer }, align 32
@pci_add_dma_alias._entry_ptr = internal global ptr @pci_add_dma_alias._entry, section ".printk_index", align 4
@pci_add_dma_alias._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.79, ptr @.str.11, i32 6389, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Enabling fixed DMA alias to %02x.%d\0A\00", [59 x i8] zeroinitializer }, align 32
@pci_add_dma_alias._entry_ptr.82 = internal global ptr @pci_add_dma_alias._entry.80, section ".printk_index", align 4
@pci_add_dma_alias._entry.83 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.79, ptr @.str.11, i32 6393, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"Enabling fixed DMA alias for devfn range from %02x.%d to %02x.%d\0A\00", [62 x i8] zeroinitializer }, align 32
@pci_add_dma_alias._entry_ptr.85 = internal global ptr @pci_add_dma_alias._entry.83, section ".printk_index", align 4
@__kstrtab_pci_device_is_present = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_device_is_present = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_device_is_present = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_device_is_present to i32), ptr @__kstrtab_pci_device_is_present, ptr @__kstrtabns_pci_device_is_present }, section "___ksymtab_gpl+pci_device_is_present", align 4
@__kstrtab_pci_ignore_hotplug = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_ignore_hotplug = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_ignore_hotplug = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_ignore_hotplug to i32), ptr @__kstrtab_pci_ignore_hotplug, ptr @__kstrtabns_pci_ignore_hotplug }, section "___ksymtab_gpl+pci_ignore_hotplug", align 4
@pci_reassigndev_resource_alignment._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.87, ptr @.str.11, i32 6617, ptr @.str.18, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Can't reassign resources to host bridge\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"pci_reassigndev_resource_alignment\00", [61 x i8] zeroinitializer }, align 32
@pci_reassigndev_resource_alignment._entry_ptr = internal global ptr @pci_reassigndev_resource_alignment._entry, section ".printk_index", align 4
@__initcall__kmod_pci__255_6696_pci_resource_alignment_sysfs_init7 = internal global ptr @pci_resource_alignment_sysfs_init, section ".initcall7.init", align 4
@__kstrtab_pci_fixup_cardbus = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_fixup_cardbus = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_fixup_cardbus = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_fixup_cardbus to i32), ptr @__kstrtab_pci_fixup_cardbus, ptr @__kstrtabns_pci_fixup_cardbus }, section "___ksymtab+pci_fixup_cardbus", align 4
@__setup_str_pci_setup = internal constant [4 x i8] c"pci\00", section ".init.rodata", align 1
@__setup_pci_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_pci_setup, ptr @pci_setup, i32 1 }, section ".init.setup", align 4
@__initcall__kmod_pci__256_6871_pci_realloc_setup_params0 = internal global ptr @pci_realloc_setup_params, section ".initcall0.init", align 4
@pci_pm_d3hot_delay = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@pci_early_dump = dso_local global { i8, [31 x i8] } zeroinitializer, align 32
@.str.88 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"off\00", [28 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"force\00", [26 x i8] zeroinitializer }, align 32
@__pci_ioremap_resource._entry = internal constant %struct.pi_entry { ptr @.str.90, ptr @.str.91, ptr @.str.11, i32 226, ptr @.str.25, ptr @.str.19 }, align 1
@.str.90 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"can't ioremap BAR %d: %pR\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"__pci_ioremap_resource\00", [41 x i8] zeroinitializer }, align 32
@__pci_ioremap_resource._entry_ptr = internal global ptr @__pci_ioremap_resource._entry, section ".printk_index", align 4
@pci_raw_set_power_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.92, ptr @.str.93, ptr @.str.11, i32 1108, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"invalid power transition (from %s to %s)\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"pci_raw_set_power_state\00", [40 x i8] zeroinitializer }, align 32
@pci_raw_set_power_state._entry_ptr = internal global ptr @pci_raw_set_power_state._entry, section ".printk_index", align 4
@pci_raw_set_power_state._entry.94 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.93, ptr @.str.11, i32 1121, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"can't change power state from %s to %s (config space inaccessible)\0A\00", [60 x i8] zeroinitializer }, align 32
@pci_raw_set_power_state._entry_ptr.96 = internal global ptr @pci_raw_set_power_state._entry.94, section ".printk_index", align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@pci_raw_set_power_state._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.97, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@pci_raw_set_power_state._entry.98 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.93, ptr @.str.11, i32 1166, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"refused to change power state from %s to %s\0A\00", [51 x i8] zeroinitializer }, align 32
@pci_raw_set_power_state._entry_ptr.100 = internal global ptr @pci_raw_set_power_state._entry.98, section ".printk_index", align 4
@pci_save_pcie_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.101, ptr @.str.102, ptr @.str.11, i32 1458, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"buffer not found in %s\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"pci_save_pcie_state\00", [44 x i8] zeroinitializer }, align 32
@pci_save_pcie_state._entry_ptr = internal global ptr @pci_save_pcie_state._entry, section ".printk_index", align 4
@pci_save_pcix_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.101, ptr @.str.103, ptr @.str.11, i32 1530, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"pci_save_pcix_state\00", [44 x i8] zeroinitializer }, align 32
@pci_save_pcix_state._entry_ptr = internal global ptr @pci_save_pcix_state._entry, section ".printk_index", align 4
@pci_save_ltr_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.104, ptr @.str.105, ptr @.str.11, i32 1570, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"no suspend buffer for LTR; ASPM issues possible after resume\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"pci_save_ltr_state\00", [45 x i8] zeroinitializer }, align 32
@pci_save_ltr_state._entry_ptr = internal global ptr @pci_save_ltr_state._entry, section ".printk_index", align 4
@pci_restore_config_dword.__UNIQUE_ID_ddebug239 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.106, ptr @.str.11, ptr @.str.107, i8 1, i8 -103, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.106 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"pci_restore_config_dword\00", [39 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"restoring config space at offset %#x (was %#x, writing %#x)\0A\00", [35 x i8] zeroinitializer }, align 32
@disable_acs_redir_param = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@pci_disable_acs_redir.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@pci_disable_acs_redir._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.109, ptr @.str.11, i32 894, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016PCI: Can't parse disable_acs_redir parameter: %s\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"pci_disable_acs_redir\00", [42 x i8] zeroinitializer }, align 32
@pci_disable_acs_redir._entry_ptr = internal global ptr @pci_disable_acs_redir._entry, section ".printk_index", align 4
@pci_disable_acs_redir._entry.110 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.111, ptr @.str.109, ptr @.str.11, i32 917, ptr @.str.18, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"cannot disable ACS redirect for this hardware as it does not have ACS capabilities\0A\00", [44 x i8] zeroinitializer }, align 32
@pci_disable_acs_redir._entry_ptr.112 = internal global ptr @pci_disable_acs_redir._entry.110, section ".printk_index", align 4
@pci_disable_acs_redir._entry.113 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.114, ptr @.str.109, ptr @.str.11, i32 928, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"disabled ACS redirect\0A\00", [41 x i8] zeroinitializer }, align 32
@pci_disable_acs_redir._entry_ptr.115 = internal global ptr @pci_disable_acs_redir._entry.113, section ".printk_index", align 4
@.str.116 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pci:\00", [27 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"%hx:%hx:%hx:%hx%n\00", [46 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"%hx:%hx%n\00", [22 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"/%x.%x%c\00", [23 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"%x:%x:%x.%x%c\00", [18 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%x:%x.%x%c\00", [21 x i8] zeroinitializer }, align 32
@pci_enable_bridge._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.122, ptr @.str.123, ptr @.str.11, i32 1922, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Error enabling bridge (%d), continuing\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"pci_enable_bridge\00", [46 x i8] zeroinitializer }, align 32
@pci_enable_bridge._entry_ptr = internal global ptr @pci_enable_bridge._entry, section ".printk_index", align 4
@.str.124 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"pcim_release\00", [19 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.125 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"pci_pme_list_mutex.wait_lock\00", [35 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"pci_pme_list_mutex\00", [45 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"(pci_pme_work).work\00", [44 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"drivers/pci/pci.c:56\00", [43 x i8] zeroinitializer }, align 32
@pci_ea_read._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.130, ptr @.str.11, i32 3244, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Unsupported EA entry BEI: %u\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"pci_ea_read\00", [20 x i8] zeroinitializer }, align 32
@pci_ea_read._entry_ptr = internal global ptr @pci_ea_read._entry, section ".printk_index", align 4
@pci_ea_read._entry.131 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.130, ptr @.str.11, i32 3250, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Unsupported EA properties: %#x\0A\00", [32 x i8] zeroinitializer }, align 32
@pci_ea_read._entry_ptr.133 = internal global ptr @pci_ea_read._entry.131, section ".printk_index", align 4
@pci_ea_read._entry.134 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.130, ptr @.str.11, i32 3300, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"EA Entry crosses address boundary\0A\00", [61 x i8] zeroinitializer }, align 32
@pci_ea_read._entry_ptr.136 = internal global ptr @pci_ea_read._entry.134, section ".printk_index", align 4
@pci_ea_read._entry.137 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.130, ptr @.str.11, i32 3306, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"EA Entry Size (%d) does not match length read (%d)\0A\00", [44 x i8] zeroinitializer }, align 32
@pci_ea_read._entry_ptr.139 = internal global ptr @pci_ea_read._entry.137, section ".printk_index", align 4
@pci_ea_read._entry.140 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.130, ptr @.str.11, i32 3317, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"BAR %d: %pR (from Enhanced Allocation, properties %#02x)\0A\00", [38 x i8] zeroinitializer }, align 32
@pci_ea_read._entry_ptr.142 = internal global ptr @pci_ea_read._entry.140, section ".printk_index", align 4
@pci_ea_read._entry.143 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.130, ptr @.str.11, i32 3320, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"ROM: %pR (from Enhanced Allocation, properties %#02x)\0A\00", [41 x i8] zeroinitializer }, align 32
@pci_ea_read._entry_ptr.145 = internal global ptr @pci_ea_read._entry.143, section ".printk_index", align 4
@pci_ea_read._entry.146 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.130, ptr @.str.11, i32 3323, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"VF BAR %d: %pR (from Enhanced Allocation, properties %#02x)\0A\00", [35 x i8] zeroinitializer }, align 32
@pci_ea_read._entry_ptr.148 = internal global ptr @pci_ea_read._entry.146, section ".printk_index", align 4
@pci_ea_read._entry.149 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.130, ptr @.str.11, i32 3326, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"BEI %d res: %pR (from Enhanced Allocation, properties %#02x)\0A\00", [34 x i8] zeroinitializer }, align 32
@pci_ea_read._entry_ptr.151 = internal global ptr @pci_ea_read._entry.149, section ".printk_index", align 4
@__pci_request_region._entry = internal constant %struct.pi_entry { ptr @.str.152, ptr @.str.153, ptr @.str.11, i32 3953, ptr @.str.18, ptr @.str.19 }, align 1
@.str.152 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"BAR %d: can't reserve %pR\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__pci_request_region\00", [43 x i8] zeroinitializer }, align 32
@__pci_request_region._entry_ptr = internal global ptr @__pci_request_region._entry, section ".printk_index", align 4
@__pci_set_master.__UNIQUE_ID_ddebug241 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.9, ptr @.str.154, ptr @.str.11, ptr @.str.155, i8 4, i8 63, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.154 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__pci_set_master\00", [47 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"%s bus mastering\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"enabling\00", [23 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"disabling\00", [22 x i8] zeroinitializer }, align 32
@pci_lock = external dso_local global %struct.raw_spinlock, align 4
@pci_dev_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.158, ptr @.str.159, ptr @.str.11, i32 1286, ptr @.str.18, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"not ready %dms after %s; giving up\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"pci_dev_wait\00", [19 x i8] zeroinitializer }, align 32
@pci_dev_wait._entry_ptr = internal global ptr @pci_dev_wait._entry, section ".printk_index", align 4
@pci_dev_wait._entry.160 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.161, ptr @.str.159, ptr @.str.11, i32 1292, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"not ready %dms after %s; waiting\0A\00", [62 x i8] zeroinitializer }, align 32
@pci_dev_wait._entry_ptr.162 = internal global ptr @pci_dev_wait._entry.160, section ".printk_index", align 4
@pci_dev_wait._entry.163 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.159, ptr @.str.11, i32 1301, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ready %dms after %s\0A\00", [43 x i8] zeroinitializer }, align 32
@pci_dev_wait._entry_ptr.165 = internal global ptr @pci_dev_wait._entry.163, section ".printk_index", align 4
@dev_attr_reset_method = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.166, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @reset_method_show, ptr @reset_method_store }, [36 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"reset_method\00", [19 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%s%s\00", [27 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c" \00", [30 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@reset_method_store._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.170, ptr @.str.171, ptr @.str.11, i32 5235, ptr @.str.18, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"All device reset methods disabled by user\00", [54 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"reset_method_store\00", [45 x i8] zeroinitializer }, align 32
@reset_method_store._entry_ptr = internal global ptr @reset_method_store._entry, section ".printk_index", align 4
@.str.172 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"default\00", [24 x i8] zeroinitializer }, align 32
@reset_method_store._entry.173 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.171, ptr @.str.11, i32 5257, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Invalid reset method '%s'\00", [38 x i8] zeroinitializer }, align 32
@reset_method_store._entry_ptr.175 = internal global ptr @reset_method_store._entry.173, section ".printk_index", align 4
@reset_method_store._entry.176 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.171, ptr @.str.11, i32 5262, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Unsupported reset method '%s'\00", [34 x i8] zeroinitializer }, align 32
@reset_method_store._entry_ptr.178 = internal global ptr @reset_method_store._entry.176, section ".printk_index", align 4
@reset_method_store._entry.179 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.171, ptr @.str.11, i32 5267, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Too many reset methods\0A\00", [40 x i8] zeroinitializer }, align 32
@reset_method_store._entry_ptr.181 = internal global ptr @reset_method_store._entry.179, section ".printk_index", align 4
@reset_method_store._entry.182 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.171, ptr @.str.11, i32 5279, ptr @.str.18, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Device-specific reset disabled/de-prioritized by user\00", [42 x i8] zeroinitializer }, align 32
@reset_method_store._entry_ptr.184 = internal global ptr @reset_method_store._entry.182, section ".printk_index", align 4
@.str.185 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"device_specific\00", [16 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"acpi\00", [27 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"flr\00", [28 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"af_flr\00", [25 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"pm\00", [29 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"bus\00", [28 x i8] zeroinitializer }, align 32
@pci_af_flr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.191, ptr @.str.192, ptr @.str.11, i32 4759, ptr @.str.25, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [86 x i8], [42 x i8] } { [86 x i8] c"timed out waiting for pending transaction; performing AF function level reset anyway\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"pci_af_flr\00", [21 x i8] zeroinitializer }, align 32
@pci_af_flr._entry_ptr = internal global ptr @pci_af_flr._entry, section ".printk_index", align 4
@.str.193 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"AF_FLR\00", [25 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"PM D3hot->D0\00", [19 x i8] zeroinitializer }, align 32
@resource_alignment_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.1 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.204, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@resource_alignment_param = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@pci_specified_resource_alignment.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@pci_specified_resource_alignment._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.196, ptr @.str.11, i32 6484, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\016PCI: Ignoring requested alignments (PCI_PROBE_ONLY)\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"pci_specified_resource_alignment\00", [63 x i8] zeroinitializer }, align 32
@pci_specified_resource_alignment._entry_ptr = internal global ptr @pci_specified_resource_alignment._entry, section ".printk_index", align 4
@.str.197 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%d%n\00", [27 x i8] zeroinitializer }, align 32
@pci_specified_resource_alignment._entry.198 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.199, ptr @.str.196, ptr @.str.11, i32 6495, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\013PCI: Invalid requested alignment (order %d)\0A\00", [49 x i8] zeroinitializer }, align 32
@pci_specified_resource_alignment._entry_ptr.200 = internal global ptr @pci_specified_resource_alignment._entry.198, section ".printk_index", align 4
@pci_specified_resource_alignment._entry.201 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.202, ptr @.str.196, ptr @.str.11, i32 6509, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\013PCI: Can't parse resource_alignment parameter: %s\0A\00", [43 x i8] zeroinitializer }, align 32
@pci_specified_resource_alignment._entry_ptr.203 = internal global ptr @pci_specified_resource_alignment._entry.201, section ".printk_index", align 4
@.str.204 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"resource_alignment_lock\00", [40 x i8] zeroinitializer }, align 32
@pci_flags = external dso_local local_unnamed_addr global i32, align 4
@pci_request_resource_alignment._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.205, ptr @.str.206, ptr @.str.11, i32 6535, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"BAR%d %pR: ignoring requested alignment %#llx\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"pci_request_resource_alignment\00", [33 x i8] zeroinitializer }, align 32
@pci_request_resource_alignment._entry_ptr = internal global ptr @pci_request_resource_alignment._entry, section ".printk_index", align 4
@pci_request_resource_alignment._entry.207 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.208, ptr @.str.206, ptr @.str.11, i32 6572, ptr @.str.28, ptr @.str.19 }, [40 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"BAR%d %pR: requesting alignment to %#llx\0A\00", [54 x i8] zeroinitializer }, align 32
@pci_request_resource_alignment._entry_ptr.209 = internal global ptr @pci_request_resource_alignment._entry.207, section ".printk_index", align 4
@pci_bus_type = external dso_local global %struct.bus_type, align 4
@bus_attr_resource_alignment = internal global { %struct.bus_attribute, [36 x i8] } { %struct.bus_attribute { %struct.attribute { ptr @.str.210, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @resource_alignment_show, ptr @resource_alignment_store }, [36 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"resource_alignment\00", [45 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@of_pci_bus_find_domain_nr.use_dt_domains = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@of_pci_bus_find_domain_nr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.212, ptr @.str.213, ptr @.str.11, i32 6754, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"\013Node %pOF has \00", [47 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"of_pci_bus_find_domain_nr\00", [38 x i8] zeroinitializer }, align 32
@of_pci_bus_find_domain_nr._entry_ptr = internal global ptr @of_pci_bus_find_domain_nr._entry, section ".printk_index", align 4
@of_pci_bus_find_domain_nr._entry.214 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.215, ptr @.str.213, ptr @.str.11, i32 6755, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013Inconsistent \22linux,pci-domain\22 property in DT\0A\00", [46 x i8] zeroinitializer }, align 32
@of_pci_bus_find_domain_nr._entry_ptr.216 = internal global ptr @of_pci_bus_find_domain_nr._entry.214, section ".printk_index", align 4
@__domain_nr = internal global %struct.atomic_t { i32 -1 }, align 4
@.str.217 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"nomsi\00", [26 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"noats\00", [26 x i8] zeroinitializer }, align 32
@pci_setup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.219, ptr @.str.220, ptr @.str.11, i32 6796, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\016PCIe: ATS is disabled\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"pci_setup\00", [22 x i8] zeroinitializer }, align 32
@pci_setup._entry_ptr = internal global ptr @pci_setup._entry, section ".printk_index", align 4
@.str.221 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"noaer\00", [26 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"earlydump\00", [22 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"realloc=\00", [23 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"realloc\00", [24 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"on\00", [29 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nodomains\00", [22 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"noari\00", [26 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"cbiosize=\00", [22 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"cbmemsize=\00", [21 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"resource_alignment=\00", [44 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ecrc=\00", [26 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"hpiosize=\00", [22 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"hpmmiosize=\00", [20 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"hpmmioprefsize=\00", [16 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"hpmemsize=\00", [21 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"hpbussize=\00", [21 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"pcie_bus_tune_off\00", [46 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"pcie_bus_safe\00", [18 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"pcie_bus_perf\00", [18 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"pcie_bus_peer2peer\00", [45 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"pcie_scan_all\00", [18 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"disable_acs_redir=\00", [45 x i8] zeroinitializer }, align 32
@pci_setup._entry.243 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.244, ptr @.str.220, ptr @.str.11, i32 6845, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\013PCI: Unknown option `%s'\0A\00", [36 x i8] zeroinitializer }, align 32
@pci_setup._entry_ptr.245 = internal global ptr @pci_setup._entry.243, section ".printk_index", align 4
@switch.table.pci_ea_init = internal constant { [5 x i32], [44 x i8] } { [5 x i32] [i32 560, i32 8752, i32 304, i32 8752, i32 560], [44 x i8] zeroinitializer }, align 32
@switch.table.pcie_set_readrq = internal constant { [9 x i32], [60 x i8] } { [9 x i32] [i32 -2, i32 -34, i32 -25, i32 -34, i32 -34, i32 -19, i32 -14, i32 -5, i32 -28], [60 x i8] zeroinitializer }, align 32
@switch.table.pcie_set_mps = internal constant { [9 x i32], [60 x i8] } { [9 x i32] [i32 -2, i32 -34, i32 -25, i32 -34, i32 -34, i32 -19, i32 -14, i32 -5, i32 -28], [60 x i8] zeroinitializer }, align 32
@switch.table.pcie_bandwidth_available = internal constant { [5 x i32], [44 x i8] } { [5 x i32] [i32 4000, i32 7876, i32 15753, i32 31507, i32 63015], [44 x i8] zeroinitializer }, align 32
@switch.table.pcie_bandwidth_capable = internal constant { [5 x i32], [44 x i8] } { [5 x i32] [i32 4000, i32 7876, i32 15753, i32 31507, i32 63015], [44 x i8] zeroinitializer }, align 32
@switch.table.__pcie_print_link_status = internal constant { [5 x i32], [44 x i8] } { [5 x i32] [i32 4000, i32 7876, i32 15753, i32 31507, i32 63015], [44 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 8, i64 8, i64 255]
@__sancov_gen_cov_switch_values.246 = internal global [4 x i64] [i64 2, i64 8, i64 8, i64 255]
@__sancov_gen_cov_switch_values.247 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.248 = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.249 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.250 = internal global [4 x i64] [i64 2, i64 8, i64 44, i64 59]
@__sancov_gen_cov_switch_values.251 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 1, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10]
@__sancov_gen_cov_switch_values.252 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 9]
@__sancov_gen_cov_switch_values.253 = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 5, i64 6]
@__sancov_gen_cov_switch_values.254 = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 6, i64 8]
@__sancov_gen_cov_switch_values.255 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967271]
@__sancov_gen_cov_switch_values.256 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.257 = internal global [4 x i64] [i64 2, i64 8, i64 44, i64 59]
@___asan_gen_.261 = private unnamed_addr constant [15 x i8] c"pci_slot_mutex\00", align 1
@___asan_gen_.266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 37, i32 1 }
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 40, i32 2 }
@___asan_gen_.272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 40, i32 11 }
@___asan_gen_.275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 40, i32 17 }
@___asan_gen_.278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 40, i32 23 }
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 40, i32 29 }
@___asan_gen_.284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 40, i32 38 }
@___asan_gen_.287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 40, i32 48 }
@___asan_gen_.288 = private unnamed_addr constant [16 x i8] c"pci_power_names\00", align 1
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 39, i32 13 }
@___asan_gen_.291 = private unnamed_addr constant [21 x i8] c"isa_dma_bridge_buggy\00", align 1
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 44, i32 5 }
@___asan_gen_.294 = private unnamed_addr constant [17 x i8] c"pci_pci_problems\00", align 1
@___asan_gen_.296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 47, i32 5 }
@___asan_gen_.297 = private unnamed_addr constant [22 x i8] c"pci_domains_supported\00", align 1
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 82, i32 5 }
@___asan_gen_.300 = private unnamed_addr constant [20 x i8] c"pci_cardbus_io_size\00", align 1
@___asan_gen_.302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 88, i32 15 }
@___asan_gen_.303 = private unnamed_addr constant [21 x i8] c"pci_cardbus_mem_size\00", align 1
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 89, i32 15 }
@___asan_gen_.306 = private unnamed_addr constant [20 x i8] c"pci_hotplug_io_size\00", align 1
@___asan_gen_.308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 95, i32 15 }
@___asan_gen_.309 = private unnamed_addr constant [22 x i8] c"pci_hotplug_mmio_size\00", align 1
@___asan_gen_.311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 101, i32 15 }
@___asan_gen_.312 = private unnamed_addr constant [27 x i8] c"pci_hotplug_mmio_pref_size\00", align 1
@___asan_gen_.314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 102, i32 15 }
@___asan_gen_.315 = private unnamed_addr constant [21 x i8] c"pci_hotplug_bus_size\00", align 1
@___asan_gen_.317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 105, i32 15 }
@___asan_gen_.318 = private unnamed_addr constant [16 x i8] c"pcie_bus_config\00", align 1
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 118, i32 28 }
@___asan_gen_.321 = private unnamed_addr constant [24 x i8] c"pci_dfl_cache_line_size\00", align 1
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 127, i32 4 }
@___asan_gen_.324 = private unnamed_addr constant [20 x i8] c"pcibios_max_latency\00", align 1
@___asan_gen_.326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 134, i32 14 }
@___asan_gen_.327 = private unnamed_addr constant [18 x i8] c"pcie_ats_disabled\00", align 1
@___asan_gen_.328 = private unnamed_addr constant [15 x i8] c"pci_acs_enable\00", align 1
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1484, i32 4 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1606, i32 3 }
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 2196, i32 2 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 2446, i32 5 }
@___asan_gen_.365 = private unnamed_addr constant [19 x i8] c"pci_pme_list_mutex\00", align 1
@___asan_gen_.368 = private unnamed_addr constant [13 x i8] c"pci_pme_list\00", align 1
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 54, i32 8 }
@___asan_gen_.371 = private unnamed_addr constant [13 x i8] c"pci_pme_work\00", align 1
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 2470, i32 2 }
@___asan_gen_.383 = private unnamed_addr constant [22 x i8] c"pci_bridge_d3_disable\00", align 1
@___asan_gen_.384 = private unnamed_addr constant [20 x i8] c"pci_bridge_d3_force\00", align 1
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3121, i32 3 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3141, i32 4 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3148, i32 3 }
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3422, i32 3 }
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3426, i32 3 }
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3431, i32 3 }
@___asan_gen_.451 = private unnamed_addr constant [18 x i8] c"pcie_ari_disabled\00", align 1
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4232, i32 8 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4263, i32 8 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4307, i32 3 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4314, i32 42 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4322, i32 3 }
@___asan_gen_.481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4328, i32 3 }
@___asan_gen_.482 = private unnamed_addr constant [20 x i8] c"pci_cache_line_size\00", align 1
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 128, i32 4 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4448, i32 2 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4477, i32 3 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4693, i32 3 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4707, i32 27 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4961, i32 3 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4987, i32 3 }
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4990, i32 3 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4994, i32 4 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5000, i32 3 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5048, i32 27 }
@___asan_gen_.533 = private unnamed_addr constant [27 x i8] c"pci_dev_reset_method_attrs\00", align 1
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5291, i32 26 }
@___asan_gen_.536 = private unnamed_addr constant [32 x i8] c"pci_dev_reset_method_attr_group\00", align 1
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5307, i32 30 }
@___asan_gen_.539 = private unnamed_addr constant [21 x i8] c"pci_reset_fn_methods\00", align 1
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5180, i32 41 }
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6221, i32 3 }
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6225, i32 3 }
@___asan_gen_.554 = private unnamed_addr constant [19 x i8] c"arch_set_vga_state\00", align 1
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6263, i32 29 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6381, i32 3 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6388, i32 3 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6391, i32 3 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6617, i32 3 }
@___asan_gen_.587 = private unnamed_addr constant [19 x i8] c"pci_pm_d3hot_delay\00", align 1
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 50, i32 14 }
@___asan_gen_.590 = private unnamed_addr constant [15 x i8] c"pci_early_dump\00", align 1
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 143, i32 6 }
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 158, i32 19 }
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 160, i32 24 }
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 226, i32 3 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1106, i32 3 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1119, i32 3 }
@___asan_gen_.620 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1164, i32 3 }
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1458, i32 3 }
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1530, i32 3 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1570, i32 3 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1637, i32 3 }
@___asan_gen_.662 = private unnamed_addr constant [24 x i8] c"disable_acs_redir_param\00", align 1
@___asan_gen_.664 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 871, i32 20 }
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 893, i32 4 }
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 917, i32 3 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 928, i32 2 }
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 369, i32 17 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 372, i32 19 }
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 375, i32 20 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 286, i32 19 }
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 312, i32 22 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 316, i32 23 }
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1921, i32 3 }
@___asan_gen_.715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 2049, i32 11 }
@___asan_gen_.721 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 55, i32 8 }
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 56, i32 8 }
@___asan_gen_.736 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3244, i32 3 }
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3250, i32 3 }
@___asan_gen_.748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3300, i32 3 }
@___asan_gen_.754 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3305, i32 3 }
@___asan_gen_.760 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3316, i32 3 }
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3319, i32 3 }
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3322, i32 3 }
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3325, i32 3 }
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 3952, i32 2 }
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4347, i32 3 }
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1285, i32 4 }
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1291, i32 4 }
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 1300, i32 3 }
@___asan_gen_.818 = private unnamed_addr constant [22 x i8] c"dev_attr_reset_method\00", align 1
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5289, i32 8 }
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5202, i32 34 }
@___asan_gen_.829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5202, i32 48 }
@___asan_gen_.832 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5207, i32 34 }
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5235, i32 3 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5239, i32 23 }
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5257, i32 4 }
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5262, i32 4 }
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5267, i32 4 }
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5279, i32 3 }
@___asan_gen_.871 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5182, i32 36 }
@___asan_gen_.874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5183, i32 32 }
@___asan_gen_.877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5184, i32 28 }
@___asan_gen_.880 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5185, i32 24 }
@___asan_gen_.883 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5186, i32 26 }
@___asan_gen_.886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 5187, i32 36 }
@___asan_gen_.895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4759, i32 3 }
@___asan_gen_.898 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4774, i32 27 }
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 4819, i32 27 }
@___asan_gen_.902 = private unnamed_addr constant [24 x i8] c"resource_alignment_lock\00", align 1
@___asan_gen_.905 = private unnamed_addr constant [25 x i8] c"resource_alignment_param\00", align 1
@___asan_gen_.907 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6459, i32 14 }
@___asan_gen_.916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6484, i32 3 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6490, i32 17 }
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6494, i32 5 }
@___asan_gen_.931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6508, i32 4 }
@___asan_gen_.934 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6460, i32 8 }
@___asan_gen_.943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6534, i32 3 }
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6571, i32 2 }
@___asan_gen_.950 = private unnamed_addr constant [28 x i8] c"bus_attr_resource_alignment\00", align 1
@___asan_gen_.955 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6689, i32 8 }
@___asan_gen_.958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6652, i32 27 }
@___asan_gen_.959 = private unnamed_addr constant [15 x i8] c"use_dt_domains\00", align 1
@___asan_gen_.961 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6715, i32 13 }
@___asan_gen_.970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6754, i32 4 }
@___asan_gen_.976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6755, i32 3 }
@___asan_gen_.979 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6793, i32 21 }
@___asan_gen_.982 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6795, i32 29 }
@___asan_gen_.991 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6796, i32 5 }
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6798, i32 28 }
@___asan_gen_.997 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6800, i32 28 }
@___asan_gen_.1000 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6802, i32 29 }
@___asan_gen_.1003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6804, i32 29 }
@___asan_gen_.1006 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6805, i32 25 }
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6806, i32 28 }
@___asan_gen_.1012 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6808, i32 29 }
@___asan_gen_.1015 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6810, i32 29 }
@___asan_gen_.1018 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6812, i32 29 }
@___asan_gen_.1021 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6814, i32 29 }
@___asan_gen_.1024 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6816, i32 29 }
@___asan_gen_.1027 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6818, i32 29 }
@___asan_gen_.1030 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6820, i32 29 }
@___asan_gen_.1033 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6822, i32 29 }
@___asan_gen_.1036 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6824, i32 29 }
@___asan_gen_.1039 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6827, i32 29 }
@___asan_gen_.1042 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6832, i32 29 }
@___asan_gen_.1045 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6834, i32 29 }
@___asan_gen_.1048 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6836, i32 29 }
@___asan_gen_.1051 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6838, i32 29 }
@___asan_gen_.1054 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6840, i32 29 }
@___asan_gen_.1057 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6842, i32 29 }
@___asan_gen_.1058 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1061 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1062 = private constant [21 x i8] c"../drivers/pci/pci.c\00", align 1
@___asan_gen_.1063 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1062, i32 6845, i32 5 }
@___asan_gen_.1064 = private unnamed_addr constant [25 x i8] c"switch.table.pci_ea_init\00", align 1
@___asan_gen_.1065 = private unnamed_addr constant [29 x i8] c"switch.table.pcie_set_readrq\00", align 1
@___asan_gen_.1066 = private unnamed_addr constant [26 x i8] c"switch.table.pcie_set_mps\00", align 1
@___asan_gen_.1067 = private unnamed_addr constant [38 x i8] c"switch.table.pcie_bandwidth_available\00", align 1
@___asan_gen_.1068 = private unnamed_addr constant [36 x i8] c"switch.table.pcie_bandwidth_capable\00", align 1
@___asan_gen_.1069 = private unnamed_addr constant [38 x i8] c"switch.table.__pcie_print_link_status\00", align 1
@llvm.compiler.used = appending global [442 x ptr] [ptr @__initcall__kmod_pci__255_6696_pci_resource_alignment_sysfs_init7, ptr @__initcall__kmod_pci__256_6871_pci_realloc_setup_params0, ptr @__ksymtab___pci_reset_function_locked, ptr @__ksymtab_devm_pci_remap_cfg_resource, ptr @__ksymtab_devm_pci_remap_cfgspace, ptr @__ksymtab_devm_pci_remap_iospace, ptr @__ksymtab_isa_dma_bridge_buggy, ptr @__ksymtab_pci_ats_disabled, ptr @__ksymtab_pci_back_from_sleep, ptr @__ksymtab_pci_bridge_secondary_bus_reset, ptr @__ksymtab_pci_bus_find_capability, ptr @__ksymtab_pci_bus_max_busnr, ptr @__ksymtab_pci_check_and_mask_intx, ptr @__ksymtab_pci_check_and_unmask_intx, ptr @__ksymtab_pci_choose_state, ptr @__ksymtab_pci_clear_master, ptr @__ksymtab_pci_clear_mwi, ptr @__ksymtab_pci_common_swizzle, ptr @__ksymtab_pci_d3cold_disable, ptr @__ksymtab_pci_d3cold_enable, ptr @__ksymtab_pci_dev_lock, ptr @__ksymtab_pci_dev_run_wake, ptr @__ksymtab_pci_dev_trylock, ptr @__ksymtab_pci_dev_unlock, ptr @__ksymtab_pci_device_is_present, ptr @__ksymtab_pci_disable_device, ptr @__ksymtab_pci_enable_atomic_ops_to_root, ptr @__ksymtab_pci_enable_device, ptr @__ksymtab_pci_enable_device_io, ptr @__ksymtab_pci_enable_device_mem, ptr @__ksymtab_pci_enable_wake, ptr @__ksymtab_pci_find_capability, ptr @__ksymtab_pci_find_dvsec_capability, ptr @__ksymtab_pci_find_ext_capability, ptr @__ksymtab_pci_find_ht_capability, ptr @__ksymtab_pci_find_next_capability, ptr @__ksymtab_pci_find_next_ext_capability, ptr @__ksymtab_pci_find_next_ht_capability, ptr @__ksymtab_pci_find_parent_resource, ptr @__ksymtab_pci_find_resource, ptr @__ksymtab_pci_find_vsec_capability, ptr @__ksymtab_pci_fixup_cardbus, ptr @__ksymtab_pci_get_dsn, ptr @__ksymtab_pci_ignore_hotplug, ptr @__ksymtab_pci_intx, ptr @__ksymtab_pci_ioremap_bar, ptr @__ksymtab_pci_ioremap_wc_bar, ptr @__ksymtab_pci_load_and_free_saved_state, ptr @__ksymtab_pci_load_saved_state, ptr @__ksymtab_pci_pci_problems, ptr @__ksymtab_pci_pio_to_address, ptr @__ksymtab_pci_platform_power_transition, ptr @__ksymtab_pci_pme_active, ptr @__ksymtab_pci_pme_capable, ptr @__ksymtab_pci_power_names, ptr @__ksymtab_pci_prepare_to_sleep, ptr @__ksymtab_pci_probe_reset_bus, ptr @__ksymtab_pci_probe_reset_slot, ptr @__ksymtab_pci_rebar_get_possible_sizes, ptr @__ksymtab_pci_reenable_device, ptr @__ksymtab_pci_release_region, ptr @__ksymtab_pci_release_regions, ptr @__ksymtab_pci_release_selected_regions, ptr @__ksymtab_pci_request_region, ptr @__ksymtab_pci_request_regions, ptr @__ksymtab_pci_request_regions_exclusive, ptr @__ksymtab_pci_request_selected_regions, ptr @__ksymtab_pci_request_selected_regions_exclusive, ptr @__ksymtab_pci_reset_bus, ptr @__ksymtab_pci_reset_function, ptr @__ksymtab_pci_reset_function_locked, ptr @__ksymtab_pci_restore_state, ptr @__ksymtab_pci_save_state, ptr @__ksymtab_pci_select_bars, ptr @__ksymtab_pci_set_cacheline_size, ptr @__ksymtab_pci_set_master, ptr @__ksymtab_pci_set_mwi, ptr @__ksymtab_pci_set_pcie_reset_state, ptr @__ksymtab_pci_set_power_state, ptr @__ksymtab_pci_status_get_and_clear_errors, ptr @__ksymtab_pci_store_saved_state, ptr @__ksymtab_pci_try_reset_function, ptr @__ksymtab_pci_try_set_mwi, ptr @__ksymtab_pci_unmap_iospace, ptr @__ksymtab_pci_wait_for_pending_transaction, ptr @__ksymtab_pci_wake_from_d3, ptr @__ksymtab_pcie_bandwidth_available, ptr @__ksymtab_pcie_flr, ptr @__ksymtab_pcie_get_mps, ptr @__ksymtab_pcie_get_readrq, ptr @__ksymtab_pcie_get_speed_cap, ptr @__ksymtab_pcie_get_width_cap, ptr @__ksymtab_pcie_print_link_status, ptr @__ksymtab_pcie_reset_flr, ptr @__ksymtab_pcie_set_mps, ptr @__ksymtab_pcie_set_readrq, ptr @__ksymtab_pcim_enable_device, ptr @__ksymtab_pcim_pin_device, ptr @__ksymtab_pcim_set_mwi, ptr @__ksymtab_pcix_get_max_mmrbc, ptr @__ksymtab_pcix_get_mmrbc, ptr @__ksymtab_pcix_set_mmrbc, ptr @__pci_ioremap_resource._entry, ptr @__pci_ioremap_resource._entry_ptr, ptr @__pci_request_region._entry, ptr @__pci_request_region._entry_ptr, ptr @__pcie_print_link_status._entry, ptr @__pcie_print_link_status._entry.74, ptr @__pcie_print_link_status._entry_ptr, ptr @__pcie_print_link_status._entry_ptr.76, ptr @__setup_pci_setup, ptr @__setup_pcie_port_pm_setup, ptr @devm_pci_remap_cfg_resource._entry, ptr @devm_pci_remap_cfg_resource._entry.52, ptr @devm_pci_remap_cfg_resource._entry.55, ptr @devm_pci_remap_cfg_resource._entry_ptr, ptr @devm_pci_remap_cfg_resource._entry_ptr.54, ptr @devm_pci_remap_cfg_resource._entry_ptr.57, ptr @of_pci_bus_find_domain_nr._entry, ptr @of_pci_bus_find_domain_nr._entry.214, ptr @of_pci_bus_find_domain_nr._entry_ptr, ptr @of_pci_bus_find_domain_nr._entry_ptr.216, ptr @pci_add_dma_alias._entry, ptr @pci_add_dma_alias._entry.80, ptr @pci_add_dma_alias._entry.83, ptr @pci_add_dma_alias._entry_ptr, ptr @pci_add_dma_alias._entry_ptr.82, ptr @pci_add_dma_alias._entry_ptr.85, ptr @pci_af_flr._entry, ptr @pci_af_flr._entry_ptr, ptr @pci_allocate_cap_save_buffers._entry, ptr @pci_allocate_cap_save_buffers._entry.41, ptr @pci_allocate_cap_save_buffers._entry.44, ptr @pci_allocate_cap_save_buffers._entry_ptr, ptr @pci_allocate_cap_save_buffers._entry_ptr.43, ptr @pci_allocate_cap_save_buffers._entry_ptr.46, ptr @pci_bridge_wait_for_secondary_bus._entry, ptr @pci_bridge_wait_for_secondary_bus._entry_ptr, ptr @pci_dev_wait._entry, ptr @pci_dev_wait._entry.160, ptr @pci_dev_wait._entry.163, ptr @pci_dev_wait._entry_ptr, ptr @pci_dev_wait._entry_ptr.162, ptr @pci_dev_wait._entry_ptr.165, ptr @pci_disable_acs_redir._entry, ptr @pci_disable_acs_redir._entry.110, ptr @pci_disable_acs_redir._entry.113, ptr @pci_disable_acs_redir._entry_ptr, ptr @pci_disable_acs_redir._entry_ptr.112, ptr @pci_disable_acs_redir._entry_ptr.115, ptr @pci_ea_read._entry, ptr @pci_ea_read._entry.131, ptr @pci_ea_read._entry.134, ptr @pci_ea_read._entry.137, ptr @pci_ea_read._entry.140, ptr @pci_ea_read._entry.143, ptr @pci_ea_read._entry.146, ptr @pci_ea_read._entry.149, ptr @pci_ea_read._entry_ptr, ptr @pci_ea_read._entry_ptr.133, ptr @pci_ea_read._entry_ptr.136, ptr @pci_ea_read._entry_ptr.139, ptr @pci_ea_read._entry_ptr.142, ptr @pci_ea_read._entry_ptr.145, ptr @pci_ea_read._entry_ptr.148, ptr @pci_ea_read._entry_ptr.151, ptr @pci_enable_bridge._entry, ptr @pci_enable_bridge._entry_ptr, ptr @pci_pm_init._entry, ptr @pci_pm_init._entry.26, ptr @pci_pm_init._entry.33, ptr @pci_pm_init._entry_ptr, ptr @pci_pm_init._entry_ptr.29, ptr @pci_pm_init._entry_ptr.35, ptr @pci_pme_active._entry, ptr @pci_pme_active._entry_ptr, ptr @pci_raw_set_power_state._entry, ptr @pci_raw_set_power_state._entry.94, ptr @pci_raw_set_power_state._entry.98, ptr @pci_raw_set_power_state._entry_ptr, ptr @pci_raw_set_power_state._entry_ptr.100, ptr @pci_raw_set_power_state._entry_ptr.96, ptr @pci_reassigndev_resource_alignment._entry, ptr @pci_reassigndev_resource_alignment._entry_ptr, ptr @pci_request_resource_alignment._entry, ptr @pci_request_resource_alignment._entry.207, ptr @pci_request_resource_alignment._entry_ptr, ptr @pci_request_resource_alignment._entry_ptr.209, ptr @pci_save_ltr_state._entry, ptr @pci_save_ltr_state._entry_ptr, ptr @pci_save_pcie_state._entry, ptr @pci_save_pcie_state._entry_ptr, ptr @pci_save_pcix_state._entry, ptr @pci_save_pcix_state._entry_ptr, ptr @pci_setup._entry, ptr @pci_setup._entry.243, ptr @pci_setup._entry_ptr, ptr @pci_setup._entry_ptr.245, ptr @pci_specified_resource_alignment._entry, ptr @pci_specified_resource_alignment._entry.198, ptr @pci_specified_resource_alignment._entry.201, ptr @pci_specified_resource_alignment._entry_ptr, ptr @pci_specified_resource_alignment._entry_ptr.200, ptr @pci_specified_resource_alignment._entry_ptr.203, ptr @pcie_flr._entry, ptr @pcie_flr._entry_ptr, ptr @reset_method_store._entry, ptr @reset_method_store._entry.173, ptr @reset_method_store._entry.176, ptr @reset_method_store._entry.179, ptr @reset_method_store._entry.182, ptr @reset_method_store._entry_ptr, ptr @reset_method_store._entry_ptr.175, ptr @reset_method_store._entry_ptr.178, ptr @reset_method_store._entry_ptr.181, ptr @reset_method_store._entry_ptr.184, ptr @.str, ptr @pci_slot_mutex, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @pci_power_names, ptr @isa_dma_bridge_buggy, ptr @pci_pci_problems, ptr @pci_domains_supported, ptr @pci_cardbus_io_size, ptr @pci_cardbus_mem_size, ptr @pci_hotplug_io_size, ptr @pci_hotplug_mmio_size, ptr @pci_hotplug_mmio_pref_size, ptr @pci_hotplug_bus_size, ptr @pcie_bus_config, ptr @pci_dfl_cache_line_size, ptr @pcibios_max_latency, ptr @pcie_ats_disabled, ptr @pci_acs_enable, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @pci_pme_list_mutex, ptr @pci_pme_list, ptr @pci_pme_work, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @pci_bridge_d3_disable, ptr @pci_bridge_d3_force, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.27, ptr @.str.28, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.34, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.42, ptr @.str.45, ptr @pcie_ari_disabled, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.53, ptr @.str.56, ptr @pci_cache_line_size, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @pci_dev_reset_method_attrs, ptr @pci_dev_reset_method_attr_group, ptr @pci_reset_fn_methods, ptr @.str.72, ptr @.str.73, ptr @.str.75, ptr @.str.77, ptr @arch_set_vga_state, ptr @.str.78, ptr @.str.79, ptr @.str.81, ptr @.str.84, ptr @.str.86, ptr @.str.87, ptr @pci_pm_d3hot_delay, ptr @pci_early_dump, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.95, ptr @pci_raw_set_power_state._rs, ptr @.str.97, ptr @.str.99, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @disable_acs_redir_param, ptr @.str.108, ptr @.str.109, ptr @.str.111, ptr @.str.114, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.132, ptr @.str.135, ptr @.str.138, ptr @.str.141, ptr @.str.144, ptr @.str.147, ptr @.str.150, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.161, ptr @.str.164, ptr @dev_attr_reset_method, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.174, ptr @.str.177, ptr @.str.180, ptr @.str.183, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @resource_alignment_lock, ptr @resource_alignment_param, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.199, ptr @.str.202, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.208, ptr @bus_attr_resource_alignment, ptr @.str.210, ptr @.str.211, ptr @of_pci_bus_find_domain_nr.use_dt_domains, ptr @.str.212, ptr @.str.213, ptr @.str.215, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.244, ptr @switch.table.pci_ea_init, ptr @switch.table.pcie_set_readrq, ptr @switch.table.pcie_set_mps, ptr @switch.table.pcie_bandwidth_available, ptr @switch.table.pcie_bandwidth_capable, ptr @switch.table.__pcie_print_link_status], section "llvm.metadata"
@0 = internal global [278 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_slot_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_power_names to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @isa_dma_bridge_buggy to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pci_problems to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_domains_supported to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_cardbus_io_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_cardbus_mem_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_hotplug_io_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_hotplug_mmio_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_hotplug_mmio_pref_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_hotplug_bus_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcie_bus_config to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_dfl_cache_line_size to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcibios_max_latency to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcie_ats_disabled to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_acs_enable to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pme_active._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pme_list_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pme_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pme_work to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_bridge_d3_disable to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_bridge_d3_force to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pm_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pm_init._entry.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pm_init._entry.33 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_allocate_cap_save_buffers._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_allocate_cap_save_buffers._entry.41 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_allocate_cap_save_buffers._entry.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcie_ari_disabled to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devm_pci_remap_cfg_resource._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devm_pci_remap_cfg_resource._entry.52 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devm_pci_remap_cfg_resource._entry.55 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_cache_line_size to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcie_flr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_bridge_wait_for_secondary_bus._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_dev_reset_method_attrs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_dev_reset_method_attr_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_reset_fn_methods to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @arch_set_vga_state to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_add_dma_alias._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_add_dma_alias._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_add_dma_alias._entry.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_reassigndev_resource_alignment._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_pm_d3hot_delay to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_early_dump to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_raw_set_power_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_raw_set_power_state._entry.94 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_raw_set_power_state._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_raw_set_power_state._entry.98 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_save_pcie_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_save_pcix_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_save_ltr_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @disable_acs_redir_param to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_disable_acs_redir._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_disable_acs_redir._entry.110 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_disable_acs_redir._entry.113 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_enable_bridge._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_ea_read._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_ea_read._entry.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_ea_read._entry.134 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_ea_read._entry.137 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_ea_read._entry.140 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_ea_read._entry.143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_ea_read._entry.146 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_ea_read._entry.149 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_dev_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_dev_wait._entry.160 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_dev_wait._entry.163 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_reset_method to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @reset_method_store._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @reset_method_store._entry.173 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @reset_method_store._entry.176 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @reset_method_store._entry.179 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @reset_method_store._entry.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.871 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_af_flr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @resource_alignment_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @resource_alignment_param to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_specified_resource_alignment._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_specified_resource_alignment._entry.198 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_specified_resource_alignment._entry.201 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_request_resource_alignment._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_request_resource_alignment._entry.207 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bus_attr_resource_alignment to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_pci_bus_find_domain_nr.use_dt_domains to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.961 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_pci_bus_find_domain_nr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_pci_bus_find_domain_nr._entry.214 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.979 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_setup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1006 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1012 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_setup._entry.243 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.pci_ea_init to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.pcie_set_readrq to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.pcie_set_mps to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.pcie_bandwidth_available to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1067 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.pcie_bandwidth_capable to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1068 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.__pcie_print_link_status to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1069 to i32), i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @pci_reset_supported(ptr nocapture noundef readonly %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %reset_methods = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 82
  %0 = ptrtoint ptr %reset_methods to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %reset_methods, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp = icmp ne i8 %1, 0
  ret i1 %cmp
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @pci_ats_disabled() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %.b1 = load i1, ptr @pcie_ats_disabled, align 1
  ret i1 %.b1
}

; Function Attrs: cold mustprogress nofree nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pcie_port_pm_setup(ptr nocapture noundef readonly %str) #2 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @strcmp(ptr noundef %str, ptr noundef nonnull dereferenceable(4) @.str.88) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end4.sink.split_crit_edge, label %if.else

entry.if.end4.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4.sink.split

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @strcmp(ptr noundef %str, ptr noundef nonnull dereferenceable(6) @.str.89) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.else.if.end4.sink.split_crit_edge, label %if.else.if.end4_crit_edge

if.else.if.end4_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4

if.else.if.end4.sink.split_crit_edge:             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4.sink.split

if.end4.sink.split:                               ; preds = %if.else.if.end4.sink.split_crit_edge, %entry.if.end4.sink.split_crit_edge
  %pci_bridge_d3_force.sink = phi ptr [ @pci_bridge_d3_disable, %entry.if.end4.sink.split_crit_edge ], [ @pci_bridge_d3_force, %if.else.if.end4.sink.split_crit_edge ]
  %0 = ptrtoint ptr %pci_bridge_d3_force.sink to i32
  call void @__asan_store1_noabort(i32 %0)
  store i1 true, ptr %pci_bridge_d3_force.sink, align 1
  br label %if.end4

if.end4:                                          ; preds = %if.end4.sink.split, %if.else.if.end4_crit_edge
  ret i32 1
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @pci_bus_max_busnr(ptr noundef readonly %bus) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %end = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 8, i32 1
  %0 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %end, align 4
  %conv = trunc i32 %1 to i8
  %children = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 2
  %2 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %2)
  %tmp.019 = load ptr, ptr %children, align 4
  %cmp.not20 = icmp eq ptr %tmp.019, %children
  br i1 %cmp.not20, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %tmp.022 = phi ptr [ %tmp.0, %for.body.for.body_crit_edge ], [ %tmp.019, %entry.for.body_crit_edge ]
  %max.021 = phi i8 [ %3, %for.body.for.body_crit_edge ], [ %conv, %entry.for.body_crit_edge ]
  %call = tail call zeroext i8 @pci_bus_max_busnr(ptr noundef %tmp.022)
  %3 = tail call i8 @llvm.umax.i8(i8 %call, i8 %max.021)
  %4 = ptrtoint ptr %tmp.022 to i32
  call void @__asan_load4_noabort(i32 %4)
  %tmp.0 = load ptr, ptr %tmp.022, align 4
  %cmp.not = icmp eq ptr %tmp.0, %children
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %max.0.lcssa = phi i8 [ %conv, %entry.for.end_crit_edge ], [ %3, %for.body.for.end_crit_edge ]
  ret i8 %max.0.lcssa
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_status_get_and_clear_errors(ptr noundef %pdev) #5 align 64 {
entry:
  %status = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status) #24
  %0 = ptrtoint ptr %status to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %status, align 2, !annotation !731
  %call = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef 6, ptr noundef nonnull %status) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %status to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %status, align 2
  %3 = and i16 %2, -1792
  store i16 %3, ptr %status, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  br i1 %tobool.not, label %if.end.if.end4_crit_edge, label %if.then2

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %call3 = call i32 @pci_write_config_word(ptr noundef %pdev, i32 noundef 6, i16 noundef zeroext %3) #24
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %status, align 2
  %conv5 = zext i16 %5 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %conv5, %if.end4 ], [ -5, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status) #24
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_config_word(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pci_ioremap_bar(ptr noundef %pdev, i32 noundef %bar) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar
  %flags.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar, i32 3
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %2 = and i32 %1, 536871424
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %2)
  %.not.i = icmp eq i32 %2, 512
  br i1 %.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.90, i32 noundef %bar, ptr noundef %arrayidx.i) #28
  br label %__pci_ioremap_resource.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx.i, align 4
  %sub.i.i = sub i32 1, %4
  %end.i.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar, i32 1
  %5 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %end.i.i, align 4
  %add.i.i = add i32 %sub.i.i, %6
  %call9.i = tail call ptr @ioremap(i32 noundef %4, i32 noundef %add.i.i) #24
  br label %__pci_ioremap_resource.exit

__pci_ioremap_resource.exit:                      ; preds = %if.end.i, %do.end.i
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %call9.i, %if.end.i ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pci_ioremap_wc_bar(ptr noundef %pdev, i32 noundef %bar) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar
  %flags.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar, i32 3
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %2 = and i32 %1, 536871424
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %2)
  %.not.i = icmp eq i32 %2, 512
  br i1 %.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.90, i32 noundef %bar, ptr noundef %arrayidx.i) #28
  br label %__pci_ioremap_resource.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx.i, align 4
  %sub.i.i = sub i32 1, %4
  %end.i.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar, i32 1
  %5 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %end.i.i, align 4
  %add.i.i = add i32 %sub.i.i, %6
  %call7.i = tail call ptr @ioremap_wc(i32 noundef %4, i32 noundef %add.i.i) #24
  br label %__pci_ioremap_resource.exit

__pci_ioremap_resource.exit:                      ; preds = %if.end.i, %do.end.i
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %call7.i, %if.end.i ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @pci_find_next_capability(ptr nocapture noundef readonly %dev, i8 noundef zeroext %pos, i32 noundef %cap) #5 align 64 {
entry:
  %pos.addr.i.i = alloca i8, align 1
  %ent.i.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %2 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %devfn, align 4
  %add = add i8 %pos, 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %pos.addr.i.i) #24
  %4 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %add, ptr %pos.addr.i.i, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ent.i.i) #24
  %5 = ptrtoint ptr %ent.i.i to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 -1, ptr %ent.i.i, align 2, !annotation !731
  %conv.i.i = zext i8 %add to i32
  %call.i.i = call i32 @pci_bus_read_config_byte(ptr noundef %1, i32 noundef %3, i32 noundef %conv.i.i, ptr noundef nonnull %pos.addr.i.i) #24
  %6 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %.pr.i.i = load i8, ptr %pos.addr.i.i, align 1
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.end19.i.i.while.body.i.i_crit_edge, %entry
  %ttl.0.i = phi i32 [ 47, %entry ], [ %dec.i.i, %if.end19.i.i.while.body.i.i_crit_edge ]
  %7 = phi i8 [ %.pr.i.i, %entry ], [ %conv21.i.i, %if.end19.i.i.while.body.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %7)
  %cmp.i.i = icmp ult i8 %7, 64
  br i1 %cmp.i.i, label %while.body.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end.i.i

while.body.i.i.__pci_find_next_cap.exit_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

if.end.i.i:                                       ; preds = %while.body.i.i
  %8 = and i8 %7, -4
  %9 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %pos.addr.i.i, align 1
  %conv5.i.i = zext i8 %8 to i32
  %call6.i.i = call i32 @pci_bus_read_config_word(ptr noundef %1, i32 noundef %3, i32 noundef %conv5.i.i, ptr noundef nonnull %ent.i.i) #24
  %10 = ptrtoint ptr %ent.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %ent.i.i, align 2
  %12 = and i16 %11, 255
  call void @__sanitizer_cov_trace_const_cmp2(i16 255, i16 %12)
  %cmp11.i.i = icmp eq i16 %12, 255
  br i1 %cmp11.i.i, label %if.end.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end14.i.i

if.end.i.i.__pci_find_next_cap.exit_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

if.end14.i.i:                                     ; preds = %if.end.i.i
  %conv10.i.i = zext i16 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv10.i.i, i32 %cap)
  %cmp16.i.i = icmp eq i32 %conv10.i.i, %cap
  br i1 %cmp16.i.i, label %if.then18.i.i, label %if.end19.i.i

if.then18.i.i:                                    ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %13 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %pos.addr.i.i, align 1
  br label %__pci_find_next_cap.exit

if.end19.i.i:                                     ; preds = %if.end14.i.i
  %15 = lshr i16 %11, 8
  %conv21.i.i = trunc i16 %15 to i8
  %16 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv21.i.i, ptr %pos.addr.i.i, align 1
  %dec.i.i = add nsw i32 %ttl.0.i, -1
  %tobool.not.i.i = icmp eq i32 %ttl.0.i, 0
  br i1 %tobool.not.i.i, label %if.end19.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end19.i.i.while.body.i.i_crit_edge

if.end19.i.i.while.body.i.i_crit_edge:            ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i.i

if.end19.i.i.__pci_find_next_cap.exit_crit_edge:  ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

__pci_find_next_cap.exit:                         ; preds = %if.end19.i.i.__pci_find_next_cap.exit_crit_edge, %if.then18.i.i, %if.end.i.i.__pci_find_next_cap.exit_crit_edge, %while.body.i.i.__pci_find_next_cap.exit_crit_edge
  %retval.0.i.i = phi i8 [ %14, %if.then18.i.i ], [ 0, %if.end19.i.i.__pci_find_next_cap.exit_crit_edge ], [ 0, %if.end.i.i.__pci_find_next_cap.exit_crit_edge ], [ 0, %while.body.i.i.__pci_find_next_cap.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ent.i.i) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %pos.addr.i.i) #24
  ret i8 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @pci_find_capability(ptr nocapture noundef readonly %dev, i32 noundef %cap) #5 align 64 {
entry:
  %pos.addr.i.i = alloca i8, align 1
  %ent.i.i = alloca i16, align 2
  %status.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %2 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %devfn, align 4
  %hdr_type = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 13
  %4 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %hdr_type, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status.i) #24
  %6 = ptrtoint ptr %status.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 -1, ptr %status.i, align 2, !annotation !731
  %call.i = call i32 @pci_bus_read_config_word(ptr noundef %1, i32 noundef %3, i32 noundef 6, ptr noundef nonnull %status.i) #24
  %7 = ptrtoint ptr %status.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %status.i, align 2
  %9 = and i16 %8, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not.i = icmp ne i16 %9, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %5)
  %10 = icmp ult i8 %5, 3
  %or.cond = select i1 %tobool.not.i, i1 %10, i1 false
  br i1 %or.cond, label %switch.lookup, label %__pci_bus_find_cap_start.exit.thread

__pci_bus_find_cap_start.exit.thread:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status.i) #24
  br label %if.end

switch.lookup:                                    ; preds = %entry
  %switch.cast = zext i8 %5 to i24
  %switch.shiftamt = shl nuw nsw i24 %switch.cast, 3
  %switch.downshift = lshr i24 1324084, %switch.shiftamt
  %switch.masked = trunc i24 %switch.downshift to i8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status.i) #24
  %11 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bus, align 8
  %13 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %devfn, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %pos.addr.i.i) #24
  %15 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %switch.masked, ptr %pos.addr.i.i, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ent.i.i) #24
  %16 = ptrtoint ptr %ent.i.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 -1, ptr %ent.i.i, align 2, !annotation !731
  %switch.masked.mask = and i24 %switch.downshift, 255
  %conv.i.i = zext i24 %switch.masked.mask to i32
  %call.i.i = call i32 @pci_bus_read_config_byte(ptr noundef %12, i32 noundef %14, i32 noundef %conv.i.i, ptr noundef nonnull %pos.addr.i.i) #24
  %17 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %.pr.i.i = load i8, ptr %pos.addr.i.i, align 1
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.end19.i.i.while.body.i.i_crit_edge, %switch.lookup
  %ttl.0.i = phi i32 [ 47, %switch.lookup ], [ %dec.i.i, %if.end19.i.i.while.body.i.i_crit_edge ]
  %18 = phi i8 [ %.pr.i.i, %switch.lookup ], [ %conv21.i.i, %if.end19.i.i.while.body.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %18)
  %cmp.i.i = icmp ult i8 %18, 64
  br i1 %cmp.i.i, label %while.body.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end.i.i

while.body.i.i.__pci_find_next_cap.exit_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

if.end.i.i:                                       ; preds = %while.body.i.i
  %19 = and i8 %18, -4
  %20 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %pos.addr.i.i, align 1
  %conv5.i.i = zext i8 %19 to i32
  %call6.i.i = call i32 @pci_bus_read_config_word(ptr noundef %12, i32 noundef %14, i32 noundef %conv5.i.i, ptr noundef nonnull %ent.i.i) #24
  %21 = ptrtoint ptr %ent.i.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %ent.i.i, align 2
  %23 = and i16 %22, 255
  call void @__sanitizer_cov_trace_const_cmp2(i16 255, i16 %23)
  %cmp11.i.i = icmp eq i16 %23, 255
  br i1 %cmp11.i.i, label %if.end.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end14.i.i

if.end.i.i.__pci_find_next_cap.exit_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

if.end14.i.i:                                     ; preds = %if.end.i.i
  %conv10.i.i = zext i16 %23 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv10.i.i, i32 %cap)
  %cmp16.i.i = icmp eq i32 %conv10.i.i, %cap
  br i1 %cmp16.i.i, label %if.then18.i.i, label %if.end19.i.i

if.then18.i.i:                                    ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %24 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %pos.addr.i.i, align 1
  br label %__pci_find_next_cap.exit

if.end19.i.i:                                     ; preds = %if.end14.i.i
  %26 = lshr i16 %22, 8
  %conv21.i.i = trunc i16 %26 to i8
  %27 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %conv21.i.i, ptr %pos.addr.i.i, align 1
  %dec.i.i = add nsw i32 %ttl.0.i, -1
  %tobool.not.i.i = icmp eq i32 %ttl.0.i, 0
  br i1 %tobool.not.i.i, label %if.end19.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end19.i.i.while.body.i.i_crit_edge

if.end19.i.i.while.body.i.i_crit_edge:            ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i.i

if.end19.i.i.__pci_find_next_cap.exit_crit_edge:  ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

__pci_find_next_cap.exit:                         ; preds = %if.end19.i.i.__pci_find_next_cap.exit_crit_edge, %if.then18.i.i, %if.end.i.i.__pci_find_next_cap.exit_crit_edge, %while.body.i.i.__pci_find_next_cap.exit_crit_edge
  %retval.0.i.i = phi i8 [ %25, %if.then18.i.i ], [ 0, %if.end19.i.i.__pci_find_next_cap.exit_crit_edge ], [ 0, %if.end.i.i.__pci_find_next_cap.exit_crit_edge ], [ 0, %while.body.i.i.__pci_find_next_cap.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ent.i.i) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %pos.addr.i.i) #24
  br label %if.end

if.end:                                           ; preds = %__pci_find_next_cap.exit, %__pci_bus_find_cap_start.exit.thread
  %pos.0 = phi i8 [ %retval.0.i.i, %__pci_find_next_cap.exit ], [ 0, %__pci_bus_find_cap_start.exit.thread ]
  ret i8 %pos.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @pci_bus_find_capability(ptr noundef %bus, i32 noundef %devfn, i32 noundef %cap) #5 align 64 {
entry:
  %pos.addr.i.i = alloca i8, align 1
  %ent.i.i = alloca i16, align 2
  %status.i = alloca i16, align 2
  %hdr_type = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %hdr_type) #24
  %0 = ptrtoint ptr %hdr_type to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %hdr_type, align 1, !annotation !731
  %call = call i32 @pci_bus_read_config_byte(ptr noundef %bus, i32 noundef %devfn, i32 noundef 14, ptr noundef nonnull %hdr_type) #24
  %1 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %hdr_type, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status.i) #24
  %3 = ptrtoint ptr %status.i to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %status.i, align 2, !annotation !731
  %call.i = call i32 @pci_bus_read_config_word(ptr noundef %bus, i32 noundef %devfn, i32 noundef 6, ptr noundef nonnull %status.i) #24
  %4 = ptrtoint ptr %status.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %status.i, align 2
  %6 = and i16 %5, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %tobool.not.i = icmp ne i16 %6, 0
  %trunc = trunc i8 %2 to i7
  %7 = sext i7 %trunc to i8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %7)
  %8 = icmp ult i7 %trunc, 3
  %or.cond = select i1 %tobool.not.i, i1 %8, i1 false
  br i1 %or.cond, label %switch.lookup, label %__pci_bus_find_cap_start.exit.thread

__pci_bus_find_cap_start.exit.thread:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status.i) #24
  br label %if.end

switch.lookup:                                    ; preds = %entry
  %trunc.mask = and i8 %2, 127
  %switch.cast = zext i8 %trunc.mask to i24
  %switch.shiftamt = shl nuw nsw i24 %switch.cast, 3
  %switch.downshift = lshr i24 1324084, %switch.shiftamt
  %switch.masked = trunc i24 %switch.downshift to i8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status.i) #24
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %pos.addr.i.i) #24
  %9 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %switch.masked, ptr %pos.addr.i.i, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ent.i.i) #24
  %10 = ptrtoint ptr %ent.i.i to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 -1, ptr %ent.i.i, align 2, !annotation !731
  %switch.masked.mask = and i24 %switch.downshift, 255
  %conv.i.i = zext i24 %switch.masked.mask to i32
  %call.i.i = call i32 @pci_bus_read_config_byte(ptr noundef %bus, i32 noundef %devfn, i32 noundef %conv.i.i, ptr noundef nonnull %pos.addr.i.i) #24
  %11 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %.pr.i.i = load i8, ptr %pos.addr.i.i, align 1
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.end19.i.i.while.body.i.i_crit_edge, %switch.lookup
  %ttl.0.i = phi i32 [ 47, %switch.lookup ], [ %dec.i.i, %if.end19.i.i.while.body.i.i_crit_edge ]
  %12 = phi i8 [ %.pr.i.i, %switch.lookup ], [ %conv21.i.i, %if.end19.i.i.while.body.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %12)
  %cmp.i.i = icmp ult i8 %12, 64
  br i1 %cmp.i.i, label %while.body.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end.i.i

while.body.i.i.__pci_find_next_cap.exit_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

if.end.i.i:                                       ; preds = %while.body.i.i
  %13 = and i8 %12, -4
  %14 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %pos.addr.i.i, align 1
  %conv5.i.i = zext i8 %13 to i32
  %call6.i.i = call i32 @pci_bus_read_config_word(ptr noundef %bus, i32 noundef %devfn, i32 noundef %conv5.i.i, ptr noundef nonnull %ent.i.i) #24
  %15 = ptrtoint ptr %ent.i.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %ent.i.i, align 2
  %17 = and i16 %16, 255
  call void @__sanitizer_cov_trace_const_cmp2(i16 255, i16 %17)
  %cmp11.i.i = icmp eq i16 %17, 255
  br i1 %cmp11.i.i, label %if.end.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end14.i.i

if.end.i.i.__pci_find_next_cap.exit_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

if.end14.i.i:                                     ; preds = %if.end.i.i
  %conv10.i.i = zext i16 %17 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv10.i.i, i32 %cap)
  %cmp16.i.i = icmp eq i32 %conv10.i.i, %cap
  br i1 %cmp16.i.i, label %if.then18.i.i, label %if.end19.i.i

if.then18.i.i:                                    ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %18 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %pos.addr.i.i, align 1
  br label %__pci_find_next_cap.exit

if.end19.i.i:                                     ; preds = %if.end14.i.i
  %20 = lshr i16 %16, 8
  %conv21.i.i = trunc i16 %20 to i8
  %21 = ptrtoint ptr %pos.addr.i.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv21.i.i, ptr %pos.addr.i.i, align 1
  %dec.i.i = add nsw i32 %ttl.0.i, -1
  %tobool.not.i.i = icmp eq i32 %ttl.0.i, 0
  br i1 %tobool.not.i.i, label %if.end19.i.i.__pci_find_next_cap.exit_crit_edge, label %if.end19.i.i.while.body.i.i_crit_edge

if.end19.i.i.while.body.i.i_crit_edge:            ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i.i

if.end19.i.i.__pci_find_next_cap.exit_crit_edge:  ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap.exit

__pci_find_next_cap.exit:                         ; preds = %if.end19.i.i.__pci_find_next_cap.exit_crit_edge, %if.then18.i.i, %if.end.i.i.__pci_find_next_cap.exit_crit_edge, %while.body.i.i.__pci_find_next_cap.exit_crit_edge
  %retval.0.i.i = phi i8 [ %19, %if.then18.i.i ], [ 0, %if.end19.i.i.__pci_find_next_cap.exit_crit_edge ], [ 0, %if.end.i.i.__pci_find_next_cap.exit_crit_edge ], [ 0, %while.body.i.i.__pci_find_next_cap.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ent.i.i) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %pos.addr.i.i) #24
  br label %if.end

if.end:                                           ; preds = %__pci_find_next_cap.exit, %__pci_bus_find_cap_start.exit.thread
  %pos.0 = phi i8 [ %retval.0.i.i, %__pci_find_next_cap.exit ], [ 0, %__pci_bus_find_cap_start.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %hdr_type) #24
  ret i8 %pos.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_bus_read_config_byte(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @pci_find_next_ext_capability(ptr noundef %dev, i16 noundef zeroext %start, i32 noundef %cap) #5 align 64 {
entry:
  %header = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header) #24
  %0 = ptrtoint ptr %header to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %header, align 4, !annotation !731
  %cfg_size = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %1 = ptrtoint ptr %cfg_size to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cfg_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %2)
  %cmp = icmp slt i32 %2, 257
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %start)
  %tobool.not = icmp eq i16 %start, 0
  %spec.select = select i1 %tobool.not, i16 256, i16 %start
  %conv = zext i16 %spec.select to i32
  %call = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv, ptr noundef nonnull %header) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp3.not = icmp eq i32 %call, 0
  br i1 %cmp3.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %3 = ptrtoint ptr %header to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %header, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp7 = icmp eq i32 %4, 0
  br i1 %cmp7, label %if.end6.cleanup_crit_edge, label %if.end6.while.cond_crit_edge

if.end6.while.cond_crit_edge:                     ; preds = %if.end6
  br label %while.cond

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.cond:                                       ; preds = %if.end27.while.cond_crit_edge, %if.end6.while.cond_crit_edge
  %ttl.0 = phi i32 [ %dec, %if.end27.while.cond_crit_edge ], [ 480, %if.end6.while.cond_crit_edge ]
  %pos.1 = phi i16 [ %conv22, %if.end27.while.cond_crit_edge ], [ %spec.select, %if.end6.while.cond_crit_edge ]
  %dec = add nsw i32 %ttl.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ttl.0)
  %cmp11.not = icmp eq i32 %ttl.0, 0
  br i1 %cmp11.not, label %while.cond.cleanup_crit_edge, label %while.body

while.cond.cleanup_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.body:                                       ; preds = %while.cond
  %5 = ptrtoint ptr %header to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %header, align 4
  %and = and i32 %6, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %cap)
  %cmp13 = icmp ne i32 %and, %cap
  call void @__sanitizer_cov_trace_cmp2(i16 %pos.1, i16 %start)
  %cmp17.not = icmp eq i16 %pos.1, %start
  %or.cond = select i1 %cmp13, i1 true, i1 %cmp17.not
  br i1 %or.cond, label %if.end20, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end20:                                         ; preds = %while.body
  %shr = lshr i32 %6, 20
  %7 = trunc i32 %shr to i16
  %conv22 = and i16 %7, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22)
  %cmp24 = icmp ult i16 %conv22, 256
  br i1 %cmp24, label %if.end20.cleanup_crit_edge, label %if.end27

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end27:                                         ; preds = %if.end20
  %conv23 = zext i16 %conv22 to i32
  %call29 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23, ptr noundef nonnull %header) #24
  %cmp30.not = icmp eq i32 %call29, 0
  br i1 %cmp30.not, label %if.end27.while.cond_crit_edge, label %if.end27.cleanup_crit_edge

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end27.while.cond_crit_edge:                    ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.cond

cleanup:                                          ; preds = %if.end27.cleanup_crit_edge, %if.end20.cleanup_crit_edge, %while.body.cleanup_crit_edge, %while.cond.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i16 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end6.cleanup_crit_edge ], [ 0, %while.cond.cleanup_crit_edge ], [ 0, %if.end20.cleanup_crit_edge ], [ 0, %if.end27.cleanup_crit_edge ], [ %pos.1, %while.body.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header) #24
  ret i16 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_dword(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @pci_find_ext_capability(ptr noundef %dev, i32 noundef %cap) #5 align 64 {
entry:
  %header.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i) #24
  %0 = ptrtoint ptr %header.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %header.i, align 4, !annotation !731
  %cfg_size.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %1 = ptrtoint ptr %cfg_size.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cfg_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %2)
  %cmp.i = icmp slt i32 %2, 257
  br i1 %cmp.i, label %entry.pci_find_next_ext_capability.exit_crit_edge, label %if.end.i

entry.pci_find_next_ext_capability.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit

if.end.i:                                         ; preds = %entry
  %call.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp3.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp3.not.i, label %if.end6.i, label %if.end.i.pci_find_next_ext_capability.exit_crit_edge

if.end.i.pci_find_next_ext_capability.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit

if.end6.i:                                        ; preds = %if.end.i
  %3 = ptrtoint ptr %header.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %header.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp7.i = icmp eq i32 %4, 0
  br i1 %cmp7.i, label %if.end6.i.pci_find_next_ext_capability.exit_crit_edge, label %while.body.i.preheader

if.end6.i.pci_find_next_ext_capability.exit_crit_edge: ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit

while.body.i.preheader:                           ; preds = %if.end6.i
  %5 = ptrtoint ptr %header.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %header.i, align 4
  %and.i3 = and i32 %6, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i3, i32 %cap)
  %cmp13.i.not4 = icmp eq i32 %and.i3, %cap
  br i1 %cmp13.i.not4, label %while.body.i.preheader.pci_find_next_ext_capability.exit_crit_edge, label %while.body.i.preheader.if.end20.i_crit_edge

while.body.i.preheader.if.end20.i_crit_edge:      ; preds = %while.body.i.preheader
  br label %if.end20.i

while.body.i.preheader.pci_find_next_ext_capability.exit_crit_edge: ; preds = %while.body.i.preheader
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit

while.body.i:                                     ; preds = %if.end27.i
  %dec.i = add nsw i32 %dec.i25, -1
  %7 = ptrtoint ptr %header.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %header.i, align 4
  %and.i = and i32 %8, 65535
  %cmp13.i.not = icmp eq i32 %and.i, %cap
  br i1 %cmp13.i.not, label %while.body.i.pci_find_next_ext_capability.exit_crit_edge, label %while.body.i.if.end20.i_crit_edge

while.body.i.if.end20.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i

while.body.i.pci_find_next_ext_capability.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit

if.end20.i:                                       ; preds = %while.body.i.if.end20.i_crit_edge, %while.body.i.preheader.if.end20.i_crit_edge
  %9 = phi i32 [ %8, %while.body.i.if.end20.i_crit_edge ], [ %6, %while.body.i.preheader.if.end20.i_crit_edge ]
  %dec.i25 = phi i32 [ %dec.i, %while.body.i.if.end20.i_crit_edge ], [ 479, %while.body.i.preheader.if.end20.i_crit_edge ]
  %shr.i = lshr i32 %9, 20
  %10 = trunc i32 %shr.i to i16
  %conv22.i = and i16 %10, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i)
  %cmp24.i = icmp ult i16 %conv22.i, 256
  br i1 %cmp24.i, label %if.end20.i.pci_find_next_ext_capability.exit_crit_edge, label %if.end27.i

if.end20.i.pci_find_next_ext_capability.exit_crit_edge: ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit

if.end27.i:                                       ; preds = %if.end20.i
  %conv23.i = zext i16 %conv22.i to i32
  %call29.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i, ptr noundef nonnull %header.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i)
  %cmp30.not.i = icmp ne i32 %call29.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i25)
  %cmp11.not.i = icmp eq i32 %dec.i25, 0
  %or.cond = select i1 %cmp30.not.i, i1 true, i1 %cmp11.not.i
  br i1 %or.cond, label %if.end27.i.pci_find_next_ext_capability.exit_crit_edge, label %while.body.i

if.end27.i.pci_find_next_ext_capability.exit_crit_edge: ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit

pci_find_next_ext_capability.exit:                ; preds = %if.end27.i.pci_find_next_ext_capability.exit_crit_edge, %if.end20.i.pci_find_next_ext_capability.exit_crit_edge, %while.body.i.pci_find_next_ext_capability.exit_crit_edge, %while.body.i.preheader.pci_find_next_ext_capability.exit_crit_edge, %if.end6.i.pci_find_next_ext_capability.exit_crit_edge, %if.end.i.pci_find_next_ext_capability.exit_crit_edge, %entry.pci_find_next_ext_capability.exit_crit_edge
  %retval.0.i = phi i16 [ 0, %entry.pci_find_next_ext_capability.exit_crit_edge ], [ 0, %if.end.i.pci_find_next_ext_capability.exit_crit_edge ], [ 0, %if.end6.i.pci_find_next_ext_capability.exit_crit_edge ], [ 256, %while.body.i.preheader.pci_find_next_ext_capability.exit_crit_edge ], [ %conv22.i, %while.body.i.pci_find_next_ext_capability.exit_crit_edge ], [ 0, %if.end20.i.pci_find_next_ext_capability.exit_crit_edge ], [ 0, %if.end27.i.pci_find_next_ext_capability.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i) #24
  ret i16 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @pci_get_dsn(ptr noundef %dev) #5 align 64 {
entry:
  %header.i.i = alloca i32, align 4
  %dword = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dword) #24
  %0 = ptrtoint ptr %dword to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %dword, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i) #24
  %1 = ptrtoint ptr %header.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %header.i.i, align 4, !annotation !731
  %cfg_size.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %2 = ptrtoint ptr %cfg_size.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cfg_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %3)
  %cmp.i.i = icmp slt i32 %3, 257
  br i1 %cmp.i.i, label %entry.pci_find_ext_capability.exit.thread_crit_edge, label %if.end.i.i

entry.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end.i.i:                                       ; preds = %entry
  %call.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp3.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp3.not.i.i, label %if.end6.i.i, label %if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge

if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end6.i.i:                                      ; preds = %if.end.i.i
  %4 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %header.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp7.i.i = icmp eq i32 %5, 0
  br i1 %cmp7.i.i, label %if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %while.body.i.i.preheader

if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

while.body.i.i.preheader:                         ; preds = %if.end6.i.i
  %6 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %header.i.i, align 4
  %and.i.i17 = and i32 %7, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i.i17)
  %cmp13.i.not.i18 = icmp eq i32 %and.i.i17, 3
  br i1 %cmp13.i.not.i18, label %while.body.i.i.preheader.if.end_crit_edge, label %while.body.i.i.preheader.if.end20.i.i_crit_edge

while.body.i.i.preheader.if.end20.i.i_crit_edge:  ; preds = %while.body.i.i.preheader
  br label %if.end20.i.i

while.body.i.i.preheader.if.end_crit_edge:        ; preds = %while.body.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

while.body.i.i:                                   ; preds = %if.end27.i.i
  %dec.i.i = add nsw i32 %dec.i2.i19, -1
  %8 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %header.i.i, align 4
  %and.i.i = and i32 %9, 65535
  %cmp13.i.not.i = icmp eq i32 %and.i.i, 3
  br i1 %cmp13.i.not.i, label %if.end.loopexit, label %while.body.i.i.if.end20.i.i_crit_edge

while.body.i.i.if.end20.i.i_crit_edge:            ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i.i

if.end20.i.i:                                     ; preds = %while.body.i.i.if.end20.i.i_crit_edge, %while.body.i.i.preheader.if.end20.i.i_crit_edge
  %10 = phi i32 [ %9, %while.body.i.i.if.end20.i.i_crit_edge ], [ %7, %while.body.i.i.preheader.if.end20.i.i_crit_edge ]
  %dec.i2.i19 = phi i32 [ %dec.i.i, %while.body.i.i.if.end20.i.i_crit_edge ], [ 479, %while.body.i.i.preheader.if.end20.i.i_crit_edge ]
  %shr.i.i = lshr i32 %10, 20
  %11 = trunc i32 %shr.i.i to i16
  %conv22.i.i = and i16 %11, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i)
  %cmp24.i.i = icmp ult i16 %conv22.i.i, 256
  br i1 %cmp24.i.i, label %if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %if.end27.i.i

if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end27.i.i:                                     ; preds = %if.end20.i.i
  %conv23.i.i = zext i16 %conv22.i.i to i32
  %call29.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i.i, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i)
  %cmp30.not.i.i = icmp ne i32 %call29.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i19)
  %cmp11.not.i.i = icmp eq i32 %dec.i2.i19, 0
  %or.cond.i = select i1 %cmp30.not.i.i, i1 true, i1 %cmp11.not.i.i
  br i1 %or.cond.i, label %if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %while.body.i.i

if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

pci_find_ext_capability.exit.thread:              ; preds = %if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge, %entry.pci_find_ext_capability.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  br label %cleanup

if.end.loopexit:                                  ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %phi.cast = zext i16 %conv22.i.i to i32
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %while.body.i.i.preheader.if.end_crit_edge
  %pos.1.i1.i.lcssa = phi i32 [ %phi.cast, %if.end.loopexit ], [ 256, %while.body.i.i.preheader.if.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  %add = add nuw nsw i32 %pos.1.i1.i.lcssa, 4
  %call1 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %dword) #24
  %12 = ptrtoint ptr %dword to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dword, align 4
  %conv2 = zext i32 %13 to i64
  %add3 = add nuw nsw i32 %pos.1.i1.i.lcssa, 8
  %call4 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add3, ptr noundef nonnull %dword) #24
  %14 = ptrtoint ptr %dword to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %dword, align 4
  %conv5 = zext i32 %15 to i64
  %shl = shl nuw i64 %conv5, 32
  %or = or i64 %shl, %conv2
  br label %cleanup

cleanup:                                          ; preds = %if.end, %pci_find_ext_capability.exit.thread
  %retval.0 = phi i64 [ %or, %if.end ], [ 0, %pci_find_ext_capability.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dword) #24
  ret i64 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @pci_find_next_ht_capability(ptr noundef %dev, i8 noundef zeroext %pos, i32 noundef %ht_cap) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i8 %pos, 1
  %call = tail call fastcc zeroext i8 @__pci_find_next_ht_cap(ptr noundef %dev, i8 noundef zeroext %add, i32 noundef %ht_cap)
  ret i8 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i8 @__pci_find_next_ht_cap(ptr noundef %dev, i8 noundef zeroext %pos, i32 noundef %ht_cap) unnamed_addr #5 align 64 {
while.body.preheader.i:
  %pos.addr.i32 = alloca i8, align 1
  %ent.i33 = alloca i16, align 2
  %pos.addr.i = alloca i8, align 1
  %ent.i = alloca i16, align 2
  %cap = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %cap) #24
  %0 = ptrtoint ptr %cap to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %cap, align 1, !annotation !731
  %switch.and = and i32 %ht_cap, -33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %switch.and)
  %switch.selectcmp = icmp eq i32 %switch.and, 0
  %1 = select i1 %switch.selectcmp, i32 224, i32 248
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus, align 8
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %4 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %devfn, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %pos.addr.i)
  %6 = ptrtoint ptr %pos.addr.i to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %pos, ptr %pos.addr.i, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ent.i) #24
  %7 = ptrtoint ptr %ent.i to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 -1, ptr %ent.i, align 2, !annotation !731
  %conv.i = zext i8 %pos to i32
  %call.i = call i32 @pci_bus_read_config_byte(ptr noundef %3, i32 noundef %5, i32 noundef %conv.i, ptr noundef nonnull %pos.addr.i) #24
  %8 = ptrtoint ptr %pos.addr.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %.pr.i = load i8, ptr %pos.addr.i, align 1
  br label %while.body.i

while.body.i:                                     ; preds = %if.end19.i.while.body.i_crit_edge, %while.body.preheader.i
  %ttl.0 = phi i32 [ 47, %while.body.preheader.i ], [ %dec.i, %if.end19.i.while.body.i_crit_edge ]
  %9 = phi i8 [ %.pr.i, %while.body.preheader.i ], [ %conv21.i, %if.end19.i.while.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %9)
  %cmp.i = icmp ult i8 %9, 64
  br i1 %cmp.i, label %while.body.i.__pci_find_next_cap_ttl.exit.thread_crit_edge, label %if.end.i

while.body.i.__pci_find_next_cap_ttl.exit.thread_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap_ttl.exit.thread

if.end.i:                                         ; preds = %while.body.i
  %10 = and i8 %9, -4
  %11 = ptrtoint ptr %pos.addr.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %pos.addr.i, align 1
  %conv5.i = zext i8 %10 to i32
  %call6.i = call i32 @pci_bus_read_config_word(ptr noundef %3, i32 noundef %5, i32 noundef %conv5.i, ptr noundef nonnull %ent.i) #24
  %12 = ptrtoint ptr %ent.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %ent.i, align 2
  %trunc = trunc i16 %13 to i8
  %14 = zext i8 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values)
  switch i8 %trunc, label %if.end19.i [
    i8 -1, label %if.end.i.__pci_find_next_cap_ttl.exit.thread_crit_edge
    i8 8, label %__pci_find_next_cap_ttl.exit
  ]

if.end.i.__pci_find_next_cap_ttl.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap_ttl.exit.thread

if.end19.i:                                       ; preds = %if.end.i
  %15 = lshr i16 %13, 8
  %conv21.i = trunc i16 %15 to i8
  %16 = ptrtoint ptr %pos.addr.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv21.i, ptr %pos.addr.i, align 1
  %dec.i = add nsw i32 %ttl.0, -1
  %tobool.not.i = icmp eq i32 %ttl.0, 0
  br i1 %tobool.not.i, label %if.end19.i.__pci_find_next_cap_ttl.exit.thread_crit_edge, label %if.end19.i.while.body.i_crit_edge

if.end19.i.while.body.i_crit_edge:                ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i

if.end19.i.__pci_find_next_cap_ttl.exit.thread_crit_edge: ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap_ttl.exit.thread

__pci_find_next_cap_ttl.exit.thread:              ; preds = %if.end19.i.__pci_find_next_cap_ttl.exit.thread_crit_edge, %if.end.i.__pci_find_next_cap_ttl.exit.thread_crit_edge, %while.body.i.__pci_find_next_cap_ttl.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ent.i) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %pos.addr.i)
  br label %cleanup

__pci_find_next_cap_ttl.exit:                     ; preds = %if.end.i
  %17 = ptrtoint ptr %pos.addr.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %pos.addr.i, align 1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ent.i) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %pos.addr.i)
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not61 = icmp eq i8 %18, 0
  br i1 %tobool.not61, label %__pci_find_next_cap_ttl.exit.cleanup_crit_edge, label %__pci_find_next_cap_ttl.exit.while.body_crit_edge

__pci_find_next_cap_ttl.exit.while.body_crit_edge: ; preds = %__pci_find_next_cap_ttl.exit
  br label %while.body

__pci_find_next_cap_ttl.exit.cleanup_crit_edge:   ; preds = %__pci_find_next_cap_ttl.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.body:                                       ; preds = %__pci_find_next_cap_ttl.exit55.while.body_crit_edge, %__pci_find_next_cap_ttl.exit.while.body_crit_edge
  %pos.addr.063 = phi i8 [ %37, %__pci_find_next_cap_ttl.exit55.while.body_crit_edge ], [ %18, %__pci_find_next_cap_ttl.exit.while.body_crit_edge ]
  %ttl.262 = phi i32 [ %ttl.3, %__pci_find_next_cap_ttl.exit55.while.body_crit_edge ], [ %ttl.0, %__pci_find_next_cap_ttl.exit.while.body_crit_edge ]
  %conv = zext i8 %pos.addr.063 to i32
  %add = add nuw nsw i32 %conv, 3
  %call2 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %cap) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp3.not = icmp eq i32 %call2, 0
  br i1 %cmp3.not, label %if.end6, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end6:                                          ; preds = %while.body
  %19 = ptrtoint ptr %cap to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %cap, align 1
  %conv7 = zext i8 %20 to i32
  %and = and i32 %1, %conv7
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %ht_cap)
  %cmp9 = icmp eq i32 %and, %ht_cap
  br i1 %cmp9, label %if.end6.cleanup_crit_edge, label %if.end12

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end12:                                         ; preds = %if.end6
  %21 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bus, align 8
  %23 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %devfn, align 4
  %add16 = add i8 %pos.addr.063, 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %pos.addr.i32)
  %25 = ptrtoint ptr %pos.addr.i32 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %add16, ptr %pos.addr.i32, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ent.i33) #24
  %26 = ptrtoint ptr %ent.i33 to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 -1, ptr %ent.i33, align 2, !annotation !731
  %conv.i34 = zext i8 %add16 to i32
  %call.i35 = call i32 @pci_bus_read_config_byte(ptr noundef %22, i32 noundef %24, i32 noundef %conv.i34, ptr noundef nonnull %pos.addr.i32) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ttl.262)
  %tobool.not27.i37 = icmp eq i32 %ttl.262, 0
  br i1 %tobool.not27.i37, label %if.end12.__pci_find_next_cap_ttl.exit55.thread_crit_edge, label %while.body.preheader.i39

if.end12.__pci_find_next_cap_ttl.exit55.thread_crit_edge: ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap_ttl.exit55.thread

while.body.preheader.i39:                         ; preds = %if.end12
  %27 = ptrtoint ptr %pos.addr.i32 to i32
  call void @__asan_load1_noabort(i32 %27)
  %.pr.i38 = load i8, ptr %pos.addr.i32, align 1
  br label %while.body.i41

while.body.i41:                                   ; preds = %if.end19.i53.while.body.i41_crit_edge, %while.body.preheader.i39
  %ttl.3.in = phi i32 [ %ttl.262, %while.body.preheader.i39 ], [ %ttl.3, %if.end19.i53.while.body.i41_crit_edge ]
  %28 = phi i8 [ %.pr.i38, %while.body.preheader.i39 ], [ %conv21.i50, %if.end19.i53.while.body.i41_crit_edge ]
  %ttl.3 = add i32 %ttl.3.in, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %28)
  %cmp.i40 = icmp ult i8 %28, 64
  br i1 %cmp.i40, label %while.body.i41.__pci_find_next_cap_ttl.exit55.thread_crit_edge, label %if.end.i45

while.body.i41.__pci_find_next_cap_ttl.exit55.thread_crit_edge: ; preds = %while.body.i41
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap_ttl.exit55.thread

if.end.i45:                                       ; preds = %while.body.i41
  %29 = and i8 %28, -4
  %30 = ptrtoint ptr %pos.addr.i32 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %pos.addr.i32, align 1
  %conv5.i42 = zext i8 %29 to i32
  %call6.i43 = call i32 @pci_bus_read_config_word(ptr noundef %22, i32 noundef %24, i32 noundef %conv5.i42, ptr noundef nonnull %ent.i33) #24
  %31 = ptrtoint ptr %ent.i33 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %ent.i33, align 2
  %trunc66 = trunc i16 %32 to i8
  %33 = zext i8 %trunc66 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.246)
  switch i8 %trunc66, label %if.end19.i53 [
    i8 -1, label %if.end.i45.__pci_find_next_cap_ttl.exit55.thread_crit_edge
    i8 8, label %__pci_find_next_cap_ttl.exit55
  ]

if.end.i45.__pci_find_next_cap_ttl.exit55.thread_crit_edge: ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap_ttl.exit55.thread

if.end19.i53:                                     ; preds = %if.end.i45
  %34 = lshr i16 %32, 8
  %conv21.i50 = trunc i16 %34 to i8
  %35 = ptrtoint ptr %pos.addr.i32 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %conv21.i50, ptr %pos.addr.i32, align 1
  %tobool.not.i52 = icmp eq i32 %ttl.3, 0
  br i1 %tobool.not.i52, label %if.end19.i53.__pci_find_next_cap_ttl.exit55.thread_crit_edge, label %if.end19.i53.while.body.i41_crit_edge

if.end19.i53.while.body.i41_crit_edge:            ; preds = %if.end19.i53
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i41

if.end19.i53.__pci_find_next_cap_ttl.exit55.thread_crit_edge: ; preds = %if.end19.i53
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_find_next_cap_ttl.exit55.thread

__pci_find_next_cap_ttl.exit55.thread:            ; preds = %if.end19.i53.__pci_find_next_cap_ttl.exit55.thread_crit_edge, %if.end.i45.__pci_find_next_cap_ttl.exit55.thread_crit_edge, %while.body.i41.__pci_find_next_cap_ttl.exit55.thread_crit_edge, %if.end12.__pci_find_next_cap_ttl.exit55.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ent.i33) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %pos.addr.i32)
  br label %cleanup

__pci_find_next_cap_ttl.exit55:                   ; preds = %if.end.i45
  %36 = ptrtoint ptr %pos.addr.i32 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %pos.addr.i32, align 1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ent.i33) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %pos.addr.i32)
  %tobool.not = icmp eq i8 %37, 0
  br i1 %tobool.not, label %__pci_find_next_cap_ttl.exit55.cleanup_crit_edge, label %__pci_find_next_cap_ttl.exit55.while.body_crit_edge

__pci_find_next_cap_ttl.exit55.while.body_crit_edge: ; preds = %__pci_find_next_cap_ttl.exit55
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

__pci_find_next_cap_ttl.exit55.cleanup_crit_edge: ; preds = %__pci_find_next_cap_ttl.exit55
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cleanup:                                          ; preds = %__pci_find_next_cap_ttl.exit55.cleanup_crit_edge, %__pci_find_next_cap_ttl.exit55.thread, %if.end6.cleanup_crit_edge, %while.body.cleanup_crit_edge, %__pci_find_next_cap_ttl.exit.cleanup_crit_edge, %__pci_find_next_cap_ttl.exit.thread
  %retval.0 = phi i8 [ 0, %__pci_find_next_cap_ttl.exit.cleanup_crit_edge ], [ 0, %__pci_find_next_cap_ttl.exit.thread ], [ 0, %__pci_find_next_cap_ttl.exit55.thread ], [ 0, %__pci_find_next_cap_ttl.exit55.cleanup_crit_edge ], [ %pos.addr.063, %if.end6.cleanup_crit_edge ], [ 0, %while.body.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %cap) #24
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @pci_find_ht_capability(ptr noundef %dev, i32 noundef %ht_cap) #5 align 64 {
entry:
  %status.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %2 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %devfn, align 4
  %hdr_type = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 13
  %4 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %hdr_type, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status.i) #24
  %6 = ptrtoint ptr %status.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 -1, ptr %status.i, align 2, !annotation !731
  %call.i = call i32 @pci_bus_read_config_word(ptr noundef %1, i32 noundef %3, i32 noundef 6, ptr noundef nonnull %status.i) #24
  %7 = ptrtoint ptr %status.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %status.i, align 2
  %9 = and i16 %8, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not.i = icmp ne i16 %9, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %5)
  %10 = icmp ult i8 %5, 3
  %or.cond = select i1 %tobool.not.i, i1 %10, i1 false
  br i1 %or.cond, label %switch.lookup, label %__pci_bus_find_cap_start.exit.thread

__pci_bus_find_cap_start.exit.thread:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status.i) #24
  br label %if.end

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %switch.cast = zext i8 %5 to i24
  %switch.shiftamt = shl nuw nsw i24 %switch.cast, 3
  %switch.downshift = lshr i24 1324084, %switch.shiftamt
  %switch.masked = trunc i24 %switch.downshift to i8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status.i) #24
  %call1 = call fastcc zeroext i8 @__pci_find_next_ht_cap(ptr noundef %dev, i8 noundef zeroext %switch.masked, i32 noundef %ht_cap)
  br label %if.end

if.end:                                           ; preds = %switch.lookup, %__pci_bus_find_cap_start.exit.thread
  %pos.0 = phi i8 [ %call1, %switch.lookup ], [ 0, %__pci_bus_find_cap_start.exit.thread ]
  ret i8 %pos.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @pci_find_vsec_capability(ptr noundef %dev, i16 noundef zeroext %vendor, i32 noundef %cap) #5 align 64 {
entry:
  %header.i = alloca i32, align 4
  %header = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header) #24
  %0 = ptrtoint ptr %header to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %header, align 4, !annotation !731
  %vendor1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 7
  %1 = ptrtoint ptr %vendor1 to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %vendor1, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %2, i16 %vendor)
  %cmp.not = icmp eq i16 %2, %vendor
  br i1 %cmp.not, label %while.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.cond.preheader:                             ; preds = %entry
  %cfg_size.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i) #24
  %3 = ptrtoint ptr %header.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %header.i, align 4, !annotation !731
  %4 = ptrtoint ptr %cfg_size.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cfg_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %5)
  %cmp.i22 = icmp slt i32 %5, 257
  br i1 %cmp.i22, label %while.cond.preheader.pci_find_next_ext_capability.exit.thread_crit_edge, label %while.cond.preheader.if.end.i_crit_edge

while.cond.preheader.if.end.i_crit_edge:          ; preds = %while.cond.preheader
  br label %if.end.i

while.cond.preheader.pci_find_next_ext_capability.exit.thread_crit_edge: ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit.thread

if.end.i:                                         ; preds = %if.end11.if.end.i_crit_edge, %while.cond.preheader.if.end.i_crit_edge
  %vsec.023 = phi i16 [ %pos.1.i, %if.end11.if.end.i_crit_edge ], [ 0, %while.cond.preheader.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vsec.023)
  %tobool.not.i = icmp eq i16 %vsec.023, 0
  %spec.select.i = select i1 %tobool.not.i, i16 256, i16 %vsec.023
  %conv.i = zext i16 %spec.select.i to i32
  %call.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv.i, ptr noundef nonnull %header.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp3.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp3.not.i, label %if.end6.i, label %if.end.i.pci_find_next_ext_capability.exit.thread_crit_edge

if.end.i.pci_find_next_ext_capability.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit.thread

if.end6.i:                                        ; preds = %if.end.i
  %6 = ptrtoint ptr %header.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %header.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp7.i = icmp eq i32 %7, 0
  br i1 %cmp7.i, label %if.end6.i.pci_find_next_ext_capability.exit.thread_crit_edge, label %if.end6.i.while.cond.i_crit_edge

if.end6.i.while.cond.i_crit_edge:                 ; preds = %if.end6.i
  br label %while.cond.i

if.end6.i.pci_find_next_ext_capability.exit.thread_crit_edge: ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit.thread

while.cond.i:                                     ; preds = %if.end27.i.while.cond.i_crit_edge, %if.end6.i.while.cond.i_crit_edge
  %ttl.0.i = phi i32 [ %dec.i, %if.end27.i.while.cond.i_crit_edge ], [ 480, %if.end6.i.while.cond.i_crit_edge ]
  %pos.1.i = phi i16 [ %conv22.i, %if.end27.i.while.cond.i_crit_edge ], [ %spec.select.i, %if.end6.i.while.cond.i_crit_edge ]
  %dec.i = add nsw i32 %ttl.0.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ttl.0.i)
  %cmp11.not.i = icmp eq i32 %ttl.0.i, 0
  br i1 %cmp11.not.i, label %while.cond.i.pci_find_next_ext_capability.exit.thread_crit_edge, label %while.body.i

while.cond.i.pci_find_next_ext_capability.exit.thread_crit_edge: ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit.thread

while.body.i:                                     ; preds = %while.cond.i
  %8 = ptrtoint ptr %header.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %header.i, align 4
  %and.i = and i32 %9, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %and.i)
  %cmp13.i = icmp ne i32 %and.i, 11
  call void @__sanitizer_cov_trace_cmp2(i16 %pos.1.i, i16 %vsec.023)
  %cmp17.not.i = icmp eq i16 %pos.1.i, %vsec.023
  %or.cond.i = select i1 %cmp13.i, i1 true, i1 %cmp17.not.i
  br i1 %or.cond.i, label %if.end20.i, label %while.body

if.end20.i:                                       ; preds = %while.body.i
  %shr.i = lshr i32 %9, 20
  %10 = trunc i32 %shr.i to i16
  %conv22.i = and i16 %10, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i)
  %cmp24.i = icmp ult i16 %conv22.i, 256
  br i1 %cmp24.i, label %if.end20.i.pci_find_next_ext_capability.exit.thread_crit_edge, label %if.end27.i

if.end20.i.pci_find_next_ext_capability.exit.thread_crit_edge: ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit.thread

if.end27.i:                                       ; preds = %if.end20.i
  %conv23.i = zext i16 %conv22.i to i32
  %call29.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i, ptr noundef nonnull %header.i) #24
  %cmp30.not.i = icmp eq i32 %call29.i, 0
  br i1 %cmp30.not.i, label %if.end27.i.while.cond.i_crit_edge, label %if.end27.i.pci_find_next_ext_capability.exit.thread_crit_edge

if.end27.i.pci_find_next_ext_capability.exit.thread_crit_edge: ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit.thread

if.end27.i.while.cond.i_crit_edge:                ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.cond.i

pci_find_next_ext_capability.exit.thread:         ; preds = %if.end11.pci_find_next_ext_capability.exit.thread_crit_edge, %if.end27.i.pci_find_next_ext_capability.exit.thread_crit_edge, %if.end20.i.pci_find_next_ext_capability.exit.thread_crit_edge, %while.cond.i.pci_find_next_ext_capability.exit.thread_crit_edge, %if.end6.i.pci_find_next_ext_capability.exit.thread_crit_edge, %if.end.i.pci_find_next_ext_capability.exit.thread_crit_edge, %while.cond.preheader.pci_find_next_ext_capability.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i) #24
  br label %cleanup

while.body:                                       ; preds = %while.body.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i) #24
  %conv4 = zext i16 %pos.1.i to i32
  %add = add nuw nsw i32 %conv4, 4
  %call5 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %header) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %land.lhs.true, label %while.body.if.end11_crit_edge

while.body.if.end11_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end11

land.lhs.true:                                    ; preds = %while.body
  %11 = ptrtoint ptr %header to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %header, align 4
  %and = and i32 %12, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %cap)
  %cmp8 = icmp eq i32 %and, %cap
  br i1 %cmp8, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end11_crit_edge

land.lhs.true.if.end11_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end11

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end11:                                         ; preds = %land.lhs.true.if.end11_crit_edge, %while.body.if.end11_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i) #24
  %13 = ptrtoint ptr %header.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %header.i, align 4, !annotation !731
  %14 = ptrtoint ptr %cfg_size.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cfg_size.i, align 8
  %cmp.i = icmp slt i32 %15, 257
  br i1 %cmp.i, label %if.end11.pci_find_next_ext_capability.exit.thread_crit_edge, label %if.end11.if.end.i_crit_edge

if.end11.if.end.i_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

if.end11.pci_find_next_ext_capability.exit.thread_crit_edge: ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_next_ext_capability.exit.thread

cleanup:                                          ; preds = %land.lhs.true.cleanup_crit_edge, %pci_find_next_ext_capability.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i16 [ 0, %entry.cleanup_crit_edge ], [ 0, %pci_find_next_ext_capability.exit.thread ], [ %pos.1.i, %land.lhs.true.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header) #24
  ret i16 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @pci_find_dvsec_capability(ptr noundef %dev, i16 noundef zeroext %vendor, i16 noundef zeroext %dvsec) #5 align 64 {
entry:
  %header.i = alloca i32, align 4
  %header.i.i = alloca i32, align 4
  %v = alloca i16, align 2
  %id = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i) #24
  %0 = ptrtoint ptr %header.i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %header.i.i, align 4, !annotation !731
  %cfg_size.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %1 = ptrtoint ptr %cfg_size.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cfg_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %2)
  %cmp.i.i = icmp slt i32 %2, 257
  br i1 %cmp.i.i, label %entry.pci_find_ext_capability.exit.thread_crit_edge, label %if.end.i.i

entry.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end.i.i:                                       ; preds = %entry
  %call.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp3.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp3.not.i.i, label %if.end6.i.i, label %if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge

if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end6.i.i:                                      ; preds = %if.end.i.i
  %3 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %header.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp7.i.i = icmp eq i32 %4, 0
  br i1 %cmp7.i.i, label %if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %while.body.i.i.preheader

if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

while.body.i.i.preheader:                         ; preds = %if.end6.i.i
  %5 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %header.i.i, align 4
  %and.i.i37 = and i32 %6, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 35, i32 %and.i.i37)
  %cmp13.i.not.i38 = icmp eq i32 %and.i.i37, 35
  br i1 %cmp13.i.not.i38, label %while.body.i.i.preheader.pci_find_ext_capability.exit_crit_edge, label %while.body.i.i.preheader.if.end20.i.i_crit_edge

while.body.i.i.preheader.if.end20.i.i_crit_edge:  ; preds = %while.body.i.i.preheader
  br label %if.end20.i.i

while.body.i.i.preheader.pci_find_ext_capability.exit_crit_edge: ; preds = %while.body.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

while.body.i.i:                                   ; preds = %if.end27.i.i
  %dec.i.i = add nsw i32 %dec.i2.i39, -1
  %7 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %header.i.i, align 4
  %and.i.i = and i32 %8, 65535
  %cmp13.i.not.i = icmp eq i32 %and.i.i, 35
  br i1 %cmp13.i.not.i, label %while.body.i.i.pci_find_ext_capability.exit_crit_edge, label %while.body.i.i.if.end20.i.i_crit_edge

while.body.i.i.if.end20.i.i_crit_edge:            ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i.i

while.body.i.i.pci_find_ext_capability.exit_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

if.end20.i.i:                                     ; preds = %while.body.i.i.if.end20.i.i_crit_edge, %while.body.i.i.preheader.if.end20.i.i_crit_edge
  %9 = phi i32 [ %8, %while.body.i.i.if.end20.i.i_crit_edge ], [ %6, %while.body.i.i.preheader.if.end20.i.i_crit_edge ]
  %dec.i2.i39 = phi i32 [ %dec.i.i, %while.body.i.i.if.end20.i.i_crit_edge ], [ 479, %while.body.i.i.preheader.if.end20.i.i_crit_edge ]
  %shr.i.i = lshr i32 %9, 20
  %10 = trunc i32 %shr.i.i to i16
  %conv22.i.i = and i16 %10, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i)
  %cmp24.i.i = icmp ult i16 %conv22.i.i, 256
  br i1 %cmp24.i.i, label %if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %if.end27.i.i

if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end27.i.i:                                     ; preds = %if.end20.i.i
  %conv23.i.i = zext i16 %conv22.i.i to i32
  %call29.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i.i, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i)
  %cmp30.not.i.i = icmp ne i32 %call29.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i39)
  %cmp11.not.i.i = icmp eq i32 %dec.i2.i39, 0
  %or.cond.i = select i1 %cmp30.not.i.i, i1 true, i1 %cmp11.not.i.i
  br i1 %or.cond.i, label %if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %while.body.i.i

if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

pci_find_ext_capability.exit.thread:              ; preds = %if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge, %entry.pci_find_ext_capability.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  br label %cleanup19

pci_find_ext_capability.exit:                     ; preds = %while.body.i.i.pci_find_ext_capability.exit_crit_edge, %while.body.i.i.preheader.pci_find_ext_capability.exit_crit_edge
  %pos.1.i1.i.lcssa = phi i16 [ 256, %while.body.i.i.preheader.pci_find_ext_capability.exit_crit_edge ], [ %conv22.i.i, %while.body.i.i.pci_find_ext_capability.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  br label %while.body

while.body:                                       ; preds = %cleanup, %pci_find_ext_capability.exit
  %pos.0.in40 = phi i16 [ %pos.1.i1.i.lcssa, %pci_find_ext_capability.exit ], [ %pos.1.i, %cleanup ]
  %pos.0 = zext i16 %pos.0.in40 to i32
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %v) #24
  %11 = ptrtoint ptr %v to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 -1, ptr %v, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %id) #24
  %12 = ptrtoint ptr %id to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 -1, ptr %id, align 2, !annotation !731
  %add = add nuw nsw i32 %pos.0, 4
  %call2 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %v) #24
  %add3 = add nuw nsw i32 %pos.0, 8
  %call4 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add3, ptr noundef nonnull %id) #24
  %13 = ptrtoint ptr %v to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %v, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %14, i16 %vendor)
  %cmp = icmp eq i16 %14, %vendor
  br i1 %cmp, label %land.lhs.true, label %while.body.if.end14_crit_edge

while.body.if.end14_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

land.lhs.true:                                    ; preds = %while.body
  %15 = ptrtoint ptr %id to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %id, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %16, i16 %dvsec)
  %cmp10 = icmp eq i16 %16, %dvsec
  br i1 %cmp10, label %cleanup.thread, label %land.lhs.true.if.end14_crit_edge

land.lhs.true.if.end14_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

cleanup.thread:                                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %id) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %v) #24
  br label %cleanup19

if.end14:                                         ; preds = %land.lhs.true.if.end14_crit_edge, %while.body.if.end14_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i) #24
  %17 = ptrtoint ptr %header.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -1, ptr %header.i, align 4, !annotation !731
  %18 = ptrtoint ptr %cfg_size.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cfg_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %19)
  %cmp.i = icmp slt i32 %19, 257
  br i1 %cmp.i, label %if.end14.cleanup19.loopexit_crit_edge, label %if.end.i

if.end14.cleanup19.loopexit_crit_edge:            ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup19.loopexit

if.end.i:                                         ; preds = %if.end14
  %call.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %pos.0, ptr noundef nonnull %header.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp3.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp3.not.i, label %if.end6.i, label %if.end.i.cleanup19.loopexit_crit_edge

if.end.i.cleanup19.loopexit_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup19.loopexit

if.end6.i:                                        ; preds = %if.end.i
  %20 = ptrtoint ptr %header.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %header.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp7.i = icmp eq i32 %21, 0
  br i1 %cmp7.i, label %if.end6.i.cleanup19.loopexit_crit_edge, label %if.end6.i.while.cond.i_crit_edge

if.end6.i.while.cond.i_crit_edge:                 ; preds = %if.end6.i
  br label %while.cond.i

if.end6.i.cleanup19.loopexit_crit_edge:           ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup19.loopexit

while.cond.i:                                     ; preds = %if.end27.i.while.cond.i_crit_edge, %if.end6.i.while.cond.i_crit_edge
  %ttl.0.i = phi i32 [ %dec.i, %if.end27.i.while.cond.i_crit_edge ], [ 480, %if.end6.i.while.cond.i_crit_edge ]
  %pos.1.i = phi i16 [ %conv22.i, %if.end27.i.while.cond.i_crit_edge ], [ %pos.0.in40, %if.end6.i.while.cond.i_crit_edge ]
  %dec.i = add nsw i32 %ttl.0.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ttl.0.i)
  %cmp11.not.i = icmp eq i32 %ttl.0.i, 0
  br i1 %cmp11.not.i, label %while.cond.i.cleanup19.loopexit_crit_edge, label %while.body.i

while.cond.i.cleanup19.loopexit_crit_edge:        ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup19.loopexit

while.body.i:                                     ; preds = %while.cond.i
  %22 = ptrtoint ptr %header.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %header.i, align 4
  %and.i = and i32 %23, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 35, i32 %and.i)
  %cmp13.i = icmp ne i32 %and.i, 35
  call void @__sanitizer_cov_trace_cmp2(i16 %pos.1.i, i16 %pos.0.in40)
  %cmp17.not.i = icmp eq i16 %pos.1.i, %pos.0.in40
  %or.cond.i28 = select i1 %cmp13.i, i1 true, i1 %cmp17.not.i
  br i1 %or.cond.i28, label %if.end20.i, label %cleanup

if.end20.i:                                       ; preds = %while.body.i
  %shr.i = lshr i32 %23, 20
  %24 = trunc i32 %shr.i to i16
  %conv22.i = and i16 %24, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i)
  %cmp24.i = icmp ult i16 %conv22.i, 256
  br i1 %cmp24.i, label %if.end20.i.cleanup19.loopexit_crit_edge, label %if.end27.i

if.end20.i.cleanup19.loopexit_crit_edge:          ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup19.loopexit

if.end27.i:                                       ; preds = %if.end20.i
  %conv23.i = zext i16 %conv22.i to i32
  %call29.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i, ptr noundef nonnull %header.i) #24
  %cmp30.not.i = icmp eq i32 %call29.i, 0
  br i1 %cmp30.not.i, label %if.end27.i.while.cond.i_crit_edge, label %if.end27.i.cleanup19.loopexit_crit_edge

if.end27.i.cleanup19.loopexit_crit_edge:          ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup19.loopexit

if.end27.i.while.cond.i_crit_edge:                ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.cond.i

cleanup:                                          ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %id) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %v) #24
  br label %while.body

cleanup19.loopexit:                               ; preds = %if.end27.i.cleanup19.loopexit_crit_edge, %if.end20.i.cleanup19.loopexit_crit_edge, %while.cond.i.cleanup19.loopexit_crit_edge, %if.end6.i.cleanup19.loopexit_crit_edge, %if.end.i.cleanup19.loopexit_crit_edge, %if.end14.cleanup19.loopexit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %id) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %v) #24
  br label %cleanup19

cleanup19:                                        ; preds = %cleanup19.loopexit, %cleanup.thread, %pci_find_ext_capability.exit.thread
  %retval.2 = phi i16 [ 0, %pci_find_ext_capability.exit.thread ], [ %pos.0.in40, %cleanup.thread ], [ 0, %cleanup19.loopexit ]
  ret i16 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pci_find_parent_resource(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %res) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1, align 8
  %call24 = tail call ptr @pci_bus_resource_n(ptr noundef %1, i32 noundef 0) #24
  %tobool.not25 = icmp eq ptr %call24, null
  %flags.i17.i = getelementptr inbounds %struct.resource, ptr %res, i32 0, i32 3
  %end9.i = getelementptr inbounds %struct.resource, ptr %res, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %tobool.not28 = phi i1 [ %tobool.not25, %entry ], [ %tobool.not, %for.inc.for.body_crit_edge ]
  %call27 = phi ptr [ %call24, %entry ], [ %call, %for.inc.for.body_crit_edge ]
  %i.026 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  br i1 %tobool.not28, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.end:                                           ; preds = %for.body
  %flags.i.i = getelementptr inbounds %struct.resource, ptr %call27, i32 0, i32 3
  %2 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i.i, align 4
  %4 = ptrtoint ptr %flags.i17.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i17.i, align 4
  %6 = xor i32 %5, %3
  %7 = and i32 %6, 7936
  %and.i = and i32 %3, 536870912
  %8 = or i32 %7, %and.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %9 = icmp eq i32 %8, 0
  %and3.i = and i32 %5, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  %or.cond19.i = select i1 %9, i1 %tobool4.not.i, i1 false
  br i1 %or.cond19.i, label %if.end6.i, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.end6.i:                                        ; preds = %if.end
  %10 = ptrtoint ptr %call27 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %call27, align 4
  %12 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %res, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %13)
  %cmp8.not.i = icmp ugt i32 %11, %13
  br i1 %cmp8.not.i, label %if.end6.i.for.inc_crit_edge, label %resource_contains.exit

if.end6.i.for.inc_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

resource_contains.exit:                           ; preds = %if.end6.i
  %end.i = getelementptr inbounds %struct.resource, ptr %call27, i32 0, i32 1
  %14 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %end.i, align 4
  %16 = ptrtoint ptr %end9.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %end9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %17)
  %cmp10.i.not = icmp ult i32 %15, %17
  br i1 %cmp10.i.not, label %resource_contains.exit.for.inc_crit_edge, label %if.then4

resource_contains.exit.for.inc_crit_edge:         ; preds = %resource_contains.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then4:                                         ; preds = %resource_contains.exit
  call void @__sanitizer_cov_trace_pc() #26
  %and = and i32 %3, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp ne i32 %and, 0
  %and7 = and i32 %5, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  %or.cond21 = select i1 %tobool5.not, i1 %tobool8.not, i1 false
  %spec.select = select i1 %or.cond21, ptr null, ptr %call27
  br label %cleanup

for.inc:                                          ; preds = %resource_contains.exit.for.inc_crit_edge, %if.end6.i.for.inc_crit_edge, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add i32 %i.026, 1
  %call = tail call ptr @pci_bus_resource_n(ptr noundef %1, i32 noundef %inc) #24
  %tobool.not = icmp eq ptr %call, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %inc)
  %cmp = icmp sgt i32 %inc, 3
  %18 = and i1 %cmp, %tobool.not
  br i1 %18, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then4
  %retval.0 = phi ptr [ %spec.select, %if.then4 ], [ null, %for.inc.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_bus_resource_n(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pci_find_resource(ptr noundef readonly %dev, ptr nocapture noundef readonly %res) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i17.i = getelementptr inbounds %struct.resource, ptr %res, i32 0, i32 3
  %end9.i = getelementptr inbounds %struct.resource, ptr %res, i32 0, i32 1
  %arrayidx = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.for.inc_crit_edge, label %land.lhs.true

entry.for.inc_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

land.lhs.true:                                    ; preds = %entry
  %flags.i.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 3
  %2 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i.i, align 4
  %4 = ptrtoint ptr %flags.i17.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i17.i, align 4
  %6 = xor i32 %5, %3
  %7 = and i32 %6, 7936
  %and.i = and i32 %3, 536870912
  %8 = or i32 %7, %and.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %9 = icmp eq i32 %8, 0
  %and3.i = and i32 %5, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  %or.cond19.i = select i1 %9, i1 %tobool4.not.i, i1 false
  br i1 %or.cond19.i, label %if.end6.i, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.end6.i:                                        ; preds = %land.lhs.true
  %10 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %res, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %11)
  %cmp8.not.i = icmp ugt i32 %1, %11
  br i1 %cmp8.not.i, label %if.end6.i.for.inc_crit_edge, label %resource_contains.exit

if.end6.i.for.inc_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

resource_contains.exit:                           ; preds = %if.end6.i
  %end.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 1
  %12 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %end.i, align 4
  %14 = ptrtoint ptr %end9.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %end9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %15)
  %cmp10.i.not = icmp ult i32 %13, %15
  br i1 %cmp10.i.not, label %resource_contains.exit.for.inc_crit_edge, label %resource_contains.exit.cleanup1_crit_edge

resource_contains.exit.cleanup1_crit_edge:        ; preds = %resource_contains.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup1

resource_contains.exit.for.inc_crit_edge:         ; preds = %resource_contains.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

for.inc:                                          ; preds = %resource_contains.exit.for.inc_crit_edge, %if.end6.i.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %entry.for.inc_crit_edge
  %arrayidx.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1
  %16 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.1 = icmp eq i32 %17, 0
  br i1 %tobool.not.1, label %for.inc.for.inc.1_crit_edge, label %land.lhs.true.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.1

land.lhs.true.1:                                  ; preds = %for.inc
  %flags.i.i.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 3
  %18 = ptrtoint ptr %flags.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.i.i.1, align 4
  %20 = ptrtoint ptr %flags.i17.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i17.i, align 4
  %22 = xor i32 %21, %19
  %23 = and i32 %22, 7936
  %and.i.1 = and i32 %19, 536870912
  %24 = or i32 %23, %and.i.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %25 = icmp eq i32 %24, 0
  %and3.i.1 = and i32 %21, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.1)
  %tobool4.not.i.1 = icmp eq i32 %and3.i.1, 0
  %or.cond19.i.1 = select i1 %25, i1 %tobool4.not.i.1, i1 false
  br i1 %or.cond19.i.1, label %if.end6.i.1, label %land.lhs.true.1.for.inc.1_crit_edge

land.lhs.true.1.for.inc.1_crit_edge:              ; preds = %land.lhs.true.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.1

if.end6.i.1:                                      ; preds = %land.lhs.true.1
  %26 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %res, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %27)
  %cmp8.not.i.1 = icmp ugt i32 %17, %27
  br i1 %cmp8.not.i.1, label %if.end6.i.1.for.inc.1_crit_edge, label %resource_contains.exit.1

if.end6.i.1.for.inc.1_crit_edge:                  ; preds = %if.end6.i.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.1

resource_contains.exit.1:                         ; preds = %if.end6.i.1
  %end.i.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 1
  %28 = ptrtoint ptr %end.i.1 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %end.i.1, align 4
  %30 = ptrtoint ptr %end9.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %end9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %31)
  %cmp10.i.not.1 = icmp ult i32 %29, %31
  br i1 %cmp10.i.not.1, label %resource_contains.exit.1.for.inc.1_crit_edge, label %resource_contains.exit.1.cleanup1_crit_edge

resource_contains.exit.1.cleanup1_crit_edge:      ; preds = %resource_contains.exit.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup1

resource_contains.exit.1.for.inc.1_crit_edge:     ; preds = %resource_contains.exit.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.1

for.inc.1:                                        ; preds = %resource_contains.exit.1.for.inc.1_crit_edge, %if.end6.i.1.for.inc.1_crit_edge, %land.lhs.true.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge
  %arrayidx.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2
  %32 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.not.2 = icmp eq i32 %33, 0
  br i1 %tobool.not.2, label %for.inc.1.for.inc.2_crit_edge, label %land.lhs.true.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.2

land.lhs.true.2:                                  ; preds = %for.inc.1
  %flags.i.i.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 3
  %34 = ptrtoint ptr %flags.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags.i.i.2, align 4
  %36 = ptrtoint ptr %flags.i17.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags.i17.i, align 4
  %38 = xor i32 %37, %35
  %39 = and i32 %38, 7936
  %and.i.2 = and i32 %35, 536870912
  %40 = or i32 %39, %and.i.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %41 = icmp eq i32 %40, 0
  %and3.i.2 = and i32 %37, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.2)
  %tobool4.not.i.2 = icmp eq i32 %and3.i.2, 0
  %or.cond19.i.2 = select i1 %41, i1 %tobool4.not.i.2, i1 false
  br i1 %or.cond19.i.2, label %if.end6.i.2, label %land.lhs.true.2.for.inc.2_crit_edge

land.lhs.true.2.for.inc.2_crit_edge:              ; preds = %land.lhs.true.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.2

if.end6.i.2:                                      ; preds = %land.lhs.true.2
  %42 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %res, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %43)
  %cmp8.not.i.2 = icmp ugt i32 %33, %43
  br i1 %cmp8.not.i.2, label %if.end6.i.2.for.inc.2_crit_edge, label %resource_contains.exit.2

if.end6.i.2.for.inc.2_crit_edge:                  ; preds = %if.end6.i.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.2

resource_contains.exit.2:                         ; preds = %if.end6.i.2
  %end.i.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 1
  %44 = ptrtoint ptr %end.i.2 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %end.i.2, align 4
  %46 = ptrtoint ptr %end9.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %end9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %45, i32 %47)
  %cmp10.i.not.2 = icmp ult i32 %45, %47
  br i1 %cmp10.i.not.2, label %resource_contains.exit.2.for.inc.2_crit_edge, label %resource_contains.exit.2.cleanup1_crit_edge

resource_contains.exit.2.cleanup1_crit_edge:      ; preds = %resource_contains.exit.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup1

resource_contains.exit.2.for.inc.2_crit_edge:     ; preds = %resource_contains.exit.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.2

for.inc.2:                                        ; preds = %resource_contains.exit.2.for.inc.2_crit_edge, %if.end6.i.2.for.inc.2_crit_edge, %land.lhs.true.2.for.inc.2_crit_edge, %for.inc.1.for.inc.2_crit_edge
  %arrayidx.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 3
  %48 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.not.3 = icmp eq i32 %49, 0
  br i1 %tobool.not.3, label %for.inc.2.for.inc.3_crit_edge, label %land.lhs.true.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.3

land.lhs.true.3:                                  ; preds = %for.inc.2
  %flags.i.i.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 3, i32 3
  %50 = ptrtoint ptr %flags.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %flags.i.i.3, align 4
  %52 = ptrtoint ptr %flags.i17.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %flags.i17.i, align 4
  %54 = xor i32 %53, %51
  %55 = and i32 %54, 7936
  %and.i.3 = and i32 %51, 536870912
  %56 = or i32 %55, %and.i.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %57 = icmp eq i32 %56, 0
  %and3.i.3 = and i32 %53, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.3)
  %tobool4.not.i.3 = icmp eq i32 %and3.i.3, 0
  %or.cond19.i.3 = select i1 %57, i1 %tobool4.not.i.3, i1 false
  br i1 %or.cond19.i.3, label %if.end6.i.3, label %land.lhs.true.3.for.inc.3_crit_edge

land.lhs.true.3.for.inc.3_crit_edge:              ; preds = %land.lhs.true.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.3

if.end6.i.3:                                      ; preds = %land.lhs.true.3
  %58 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %res, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %59)
  %cmp8.not.i.3 = icmp ugt i32 %49, %59
  br i1 %cmp8.not.i.3, label %if.end6.i.3.for.inc.3_crit_edge, label %resource_contains.exit.3

if.end6.i.3.for.inc.3_crit_edge:                  ; preds = %if.end6.i.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.3

resource_contains.exit.3:                         ; preds = %if.end6.i.3
  %end.i.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 3, i32 1
  %60 = ptrtoint ptr %end.i.3 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %end.i.3, align 4
  %62 = ptrtoint ptr %end9.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %end9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %61, i32 %63)
  %cmp10.i.not.3 = icmp ult i32 %61, %63
  br i1 %cmp10.i.not.3, label %resource_contains.exit.3.for.inc.3_crit_edge, label %resource_contains.exit.3.cleanup1_crit_edge

resource_contains.exit.3.cleanup1_crit_edge:      ; preds = %resource_contains.exit.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup1

resource_contains.exit.3.for.inc.3_crit_edge:     ; preds = %resource_contains.exit.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.3

for.inc.3:                                        ; preds = %resource_contains.exit.3.for.inc.3_crit_edge, %if.end6.i.3.for.inc.3_crit_edge, %land.lhs.true.3.for.inc.3_crit_edge, %for.inc.2.for.inc.3_crit_edge
  %arrayidx.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4
  %64 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.not.4 = icmp eq i32 %65, 0
  br i1 %tobool.not.4, label %for.inc.3.for.inc.4_crit_edge, label %land.lhs.true.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.4

land.lhs.true.4:                                  ; preds = %for.inc.3
  %flags.i.i.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4, i32 3
  %66 = ptrtoint ptr %flags.i.i.4 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %flags.i.i.4, align 4
  %68 = ptrtoint ptr %flags.i17.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %flags.i17.i, align 4
  %70 = xor i32 %69, %67
  %71 = and i32 %70, 7936
  %and.i.4 = and i32 %67, 536870912
  %72 = or i32 %71, %and.i.4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %73 = icmp eq i32 %72, 0
  %and3.i.4 = and i32 %69, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.4)
  %tobool4.not.i.4 = icmp eq i32 %and3.i.4, 0
  %or.cond19.i.4 = select i1 %73, i1 %tobool4.not.i.4, i1 false
  br i1 %or.cond19.i.4, label %if.end6.i.4, label %land.lhs.true.4.for.inc.4_crit_edge

land.lhs.true.4.for.inc.4_crit_edge:              ; preds = %land.lhs.true.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.4

if.end6.i.4:                                      ; preds = %land.lhs.true.4
  %74 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %res, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %65, i32 %75)
  %cmp8.not.i.4 = icmp ugt i32 %65, %75
  br i1 %cmp8.not.i.4, label %if.end6.i.4.for.inc.4_crit_edge, label %resource_contains.exit.4

if.end6.i.4.for.inc.4_crit_edge:                  ; preds = %if.end6.i.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.4

resource_contains.exit.4:                         ; preds = %if.end6.i.4
  %end.i.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4, i32 1
  %76 = ptrtoint ptr %end.i.4 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %end.i.4, align 4
  %78 = ptrtoint ptr %end9.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %end9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %77, i32 %79)
  %cmp10.i.not.4 = icmp ult i32 %77, %79
  br i1 %cmp10.i.not.4, label %resource_contains.exit.4.for.inc.4_crit_edge, label %resource_contains.exit.4.cleanup1_crit_edge

resource_contains.exit.4.cleanup1_crit_edge:      ; preds = %resource_contains.exit.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup1

resource_contains.exit.4.for.inc.4_crit_edge:     ; preds = %resource_contains.exit.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.4

for.inc.4:                                        ; preds = %resource_contains.exit.4.for.inc.4_crit_edge, %if.end6.i.4.for.inc.4_crit_edge, %land.lhs.true.4.for.inc.4_crit_edge, %for.inc.3.for.inc.4_crit_edge
  %arrayidx.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 5
  %80 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %arrayidx.5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool.not.5 = icmp eq i32 %81, 0
  br i1 %tobool.not.5, label %for.inc.4.for.inc.5_crit_edge, label %land.lhs.true.5

for.inc.4.for.inc.5_crit_edge:                    ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.5

land.lhs.true.5:                                  ; preds = %for.inc.4
  %flags.i.i.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 5, i32 3
  %82 = ptrtoint ptr %flags.i.i.5 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %flags.i.i.5, align 4
  %84 = ptrtoint ptr %flags.i17.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %flags.i17.i, align 4
  %86 = xor i32 %85, %83
  %87 = and i32 %86, 7936
  %and.i.5 = and i32 %83, 536870912
  %88 = or i32 %87, %and.i.5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %88)
  %89 = icmp eq i32 %88, 0
  %and3.i.5 = and i32 %85, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.5)
  %tobool4.not.i.5 = icmp eq i32 %and3.i.5, 0
  %or.cond19.i.5 = select i1 %89, i1 %tobool4.not.i.5, i1 false
  br i1 %or.cond19.i.5, label %if.end6.i.5, label %land.lhs.true.5.for.inc.5_crit_edge

land.lhs.true.5.for.inc.5_crit_edge:              ; preds = %land.lhs.true.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.5

if.end6.i.5:                                      ; preds = %land.lhs.true.5
  %90 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %res, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %81, i32 %91)
  %cmp8.not.i.5 = icmp ugt i32 %81, %91
  br i1 %cmp8.not.i.5, label %if.end6.i.5.for.inc.5_crit_edge, label %resource_contains.exit.5

if.end6.i.5.for.inc.5_crit_edge:                  ; preds = %if.end6.i.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.5

resource_contains.exit.5:                         ; preds = %if.end6.i.5
  %end.i.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 5, i32 1
  %92 = ptrtoint ptr %end.i.5 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %end.i.5, align 4
  %94 = ptrtoint ptr %end9.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %end9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %93, i32 %95)
  %cmp10.i.not.5 = icmp ult i32 %93, %95
  br i1 %cmp10.i.not.5, label %resource_contains.exit.5.for.inc.5_crit_edge, label %resource_contains.exit.5.cleanup1_crit_edge

resource_contains.exit.5.cleanup1_crit_edge:      ; preds = %resource_contains.exit.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup1

resource_contains.exit.5.for.inc.5_crit_edge:     ; preds = %resource_contains.exit.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.5

for.inc.5:                                        ; preds = %resource_contains.exit.5.for.inc.5_crit_edge, %if.end6.i.5.for.inc.5_crit_edge, %land.lhs.true.5.for.inc.5_crit_edge, %for.inc.4.for.inc.5_crit_edge
  br label %cleanup1

cleanup1:                                         ; preds = %for.inc.5, %resource_contains.exit.5.cleanup1_crit_edge, %resource_contains.exit.4.cleanup1_crit_edge, %resource_contains.exit.3.cleanup1_crit_edge, %resource_contains.exit.2.cleanup1_crit_edge, %resource_contains.exit.1.cleanup1_crit_edge, %resource_contains.exit.cleanup1_crit_edge
  %retval.2 = phi ptr [ %arrayidx, %resource_contains.exit.cleanup1_crit_edge ], [ %arrayidx.1, %resource_contains.exit.1.cleanup1_crit_edge ], [ %arrayidx.2, %resource_contains.exit.2.cleanup1_crit_edge ], [ %arrayidx.3, %resource_contains.exit.3.cleanup1_crit_edge ], [ %arrayidx.4, %resource_contains.exit.4.cleanup1_crit_edge ], [ %arrayidx.5, %resource_contains.exit.5.cleanup1_crit_edge ], [ null, %for.inc.5 ]
  ret ptr %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_wait_for_pending(ptr noundef %dev, i32 noundef %pos, i16 noundef zeroext %mask) local_unnamed_addr #5 align 64 {
if.end:
  %status = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status) #24
  %0 = ptrtoint ptr %status to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %status, align 2, !annotation !731
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %pos, ptr noundef nonnull %status) #24
  %1 = ptrtoint ptr %status to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %status, align 2
  %and9 = and i16 %2, %mask
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and9)
  %tobool2.not = icmp eq i16 %and9, 0
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status) #24
  br i1 %tobool2.not, label %if.end.cleanup5_crit_edge, label %if.end.1

if.end.cleanup5_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup5

if.end.1:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status) #24
  %3 = ptrtoint ptr %status to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %status, align 2, !annotation !731
  call void @msleep(i32 noundef 100) #24
  %call.1 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %pos, ptr noundef nonnull %status) #24
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %status, align 2
  %and9.1 = and i16 %5, %mask
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and9.1)
  %tobool2.not.1 = icmp eq i16 %and9.1, 0
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status) #24
  br i1 %tobool2.not.1, label %if.end.1.cleanup5_crit_edge, label %if.end.2

if.end.1.cleanup5_crit_edge:                      ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup5

if.end.2:                                         ; preds = %if.end.1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status) #24
  %6 = ptrtoint ptr %status to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 -1, ptr %status, align 2, !annotation !731
  call void @msleep(i32 noundef 200) #24
  %call.2 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %pos, ptr noundef nonnull %status) #24
  %7 = ptrtoint ptr %status to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %status, align 2
  %and9.2 = and i16 %8, %mask
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and9.2)
  %tobool2.not.2 = icmp eq i16 %and9.2, 0
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status) #24
  br i1 %tobool2.not.2, label %if.end.2.cleanup5_crit_edge, label %if.end.3

if.end.2.cleanup5_crit_edge:                      ; preds = %if.end.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup5

if.end.3:                                         ; preds = %if.end.2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status) #24
  %9 = ptrtoint ptr %status to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 -1, ptr %status, align 2, !annotation !731
  call void @msleep(i32 noundef 400) #24
  %call.3 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %pos, ptr noundef nonnull %status) #24
  %10 = ptrtoint ptr %status to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %status, align 2
  %and9.3 = and i16 %11, %mask
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and9.3)
  %tobool2.not.3 = icmp eq i16 %and9.3, 0
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status) #24
  %spec.select = zext i1 %tobool2.not.3 to i32
  br label %cleanup5

cleanup5:                                         ; preds = %if.end.3, %if.end.2.cleanup5_crit_edge, %if.end.1.cleanup5_crit_edge, %if.end.cleanup5_crit_edge
  %retval.2 = phi i32 [ 1, %if.end.cleanup5_crit_edge ], [ 1, %if.end.1.cleanup5_crit_edge ], [ 1, %if.end.2.cleanup5_crit_edge ], [ %spec.select, %if.end.3 ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @pci_request_acs() local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  store i1 true, ptr @pci_acs_enable, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_update_current_state(ptr noundef %dev, i32 noundef %state) local_unnamed_addr #5 align 64 {
entry:
  %v.i = alloca i32, align 4
  %pmcsr = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %v.i) #24
  %0 = ptrtoint ptr %v.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %v.i, align 4, !annotation !731
  %error_state.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 43
  %1 = ptrtoint ptr %error_state.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %error_state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %2)
  %cmp.i.i = icmp eq i32 %2, 3
  br i1 %cmp.i.i, label %pci_device_is_present.exit.thread, label %pci_device_is_present.exit

pci_device_is_present.exit.thread:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v.i) #24
  br label %if.then

pci_device_is_present.exit:                       ; preds = %entry
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %3 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bus.i, align 8
  %devfn.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %5 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %devfn.i, align 4
  %call1.i = call zeroext i1 @pci_bus_read_dev_vendor_id(ptr noundef %4, i32 noundef %6, ptr noundef nonnull %v.i, i32 noundef 0) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v.i) #24
  br i1 %call1.i, label %if.else, label %pci_device_is_present.exit.if.then_crit_edge

pci_device_is_present.exit.if.then_crit_edge:     ; preds = %pci_device_is_present.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then

if.then:                                          ; preds = %pci_device_is_present.exit.if.then_crit_edge, %pci_device_is_present.exit.thread
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %7 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 4, ptr %current_state, align 4
  br label %if.end9

if.else:                                          ; preds = %pci_device_is_present.exit
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %8 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %pm_cap, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not = icmp eq i8 %9, 0
  br i1 %tobool.not, label %if.else7, label %if.then2

if.then2:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr) #24
  %10 = ptrtoint ptr %pmcsr to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 -1, ptr %pmcsr, align 2, !annotation !731
  %conv = zext i8 %9 to i32
  %add = add nuw nsw i32 %conv, 4
  %call4 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %pmcsr) #24
  %11 = ptrtoint ptr %pmcsr to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %pmcsr, align 2
  %13 = and i16 %12, 3
  %and = zext i16 %13 to i32
  %current_state6 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %14 = ptrtoint ptr %current_state6 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %and, ptr %current_state6, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr) #24
  br label %if.end9

if.else7:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  %current_state8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %15 = ptrtoint ptr %current_state8 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %state, ptr %current_state8, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then2, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pci_device_is_present(ptr nocapture noundef readonly %pdev) #5 align 64 {
entry:
  %v = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %v) #24
  %0 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %v, align 4, !annotation !731
  %error_state.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 43
  %1 = ptrtoint ptr %error_state.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %error_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %2)
  %cmp.i = icmp eq i32 %2, 3
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %bus = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 1
  %3 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bus, align 8
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 6
  %5 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %devfn, align 4
  %call1 = call zeroext i1 @pci_bus_read_dev_vendor_id(ptr noundef %4, i32 noundef %6, ptr noundef nonnull %v, i32 noundef 0) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %call1, %if.end ], [ false, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v) #24
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_refresh_power_state(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %v.i.i = alloca i32, align 4
  %pmcsr.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %0 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %current_state, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %v.i.i) #24
  %2 = ptrtoint ptr %v.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %v.i.i, align 4, !annotation !731
  %error_state.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 43
  %3 = ptrtoint ptr %error_state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %error_state.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %4)
  %cmp.i.i.i = icmp eq i32 %4, 3
  br i1 %cmp.i.i.i, label %pci_device_is_present.exit.thread.i, label %pci_device_is_present.exit.i

pci_device_is_present.exit.thread.i:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v.i.i) #24
  br label %if.then.i

pci_device_is_present.exit.i:                     ; preds = %entry
  %bus.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %5 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bus.i.i, align 8
  %devfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %7 = ptrtoint ptr %devfn.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %devfn.i.i, align 4
  %call1.i.i = call zeroext i1 @pci_bus_read_dev_vendor_id(ptr noundef %6, i32 noundef %8, ptr noundef nonnull %v.i.i, i32 noundef 0) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v.i.i) #24
  br i1 %call1.i.i, label %if.else.i, label %pci_device_is_present.exit.i.if.then.i_crit_edge

pci_device_is_present.exit.i.if.then.i_crit_edge: ; preds = %pci_device_is_present.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then.i

if.then.i:                                        ; preds = %pci_device_is_present.exit.i.if.then.i_crit_edge, %pci_device_is_present.exit.thread.i
  %9 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 4, ptr %current_state, align 4
  br label %pci_update_current_state.exit

if.else.i:                                        ; preds = %pci_device_is_present.exit.i
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %10 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %if.else7.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr.i) #24
  %12 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 -1, ptr %pmcsr.i, align 2, !annotation !731
  %conv.i = zext i8 %11 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call4.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %pmcsr.i) #24
  %13 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %pmcsr.i, align 2
  %15 = and i16 %14, 3
  %and.i = zext i16 %15 to i32
  %16 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %and.i, ptr %current_state, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i) #24
  br label %pci_update_current_state.exit

if.else7.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  %17 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %1, ptr %current_state, align 4
  br label %pci_update_current_state.exit

pci_update_current_state.exit:                    ; preds = %if.else7.i, %if.then2.i, %if.then.i
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @pci_platform_power_transition(ptr nocapture noundef %dev, i32 %state) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %0 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pm_cap, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool1.not = icmp eq i8 %1, 0
  br i1 %tobool1.not, label %if.then2, label %entry.if.end3_crit_edge

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end3

if.then2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %2 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %current_state, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %entry.if.end3_crit_edge
  ret i32 -19
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_resume_bus(ptr noundef %bus) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %bus, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_walk_bus(ptr noundef nonnull %bus, ptr noundef nonnull @pci_resume_one, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_walk_bus(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_resume_one(ptr noundef %pci_dev, ptr nocapture noundef readnone %ign) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %dev, i32 noundef 1) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_power_up(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %0 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool1.not.i = icmp eq i8 %1, 0
  br i1 %tobool1.not.i, label %if.then2.i, label %entry.pci_platform_power_transition.exit_crit_edge

entry.pci_platform_power_transition.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_platform_power_transition.exit

if.then2.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %2 = ptrtoint ptr %current_state.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %current_state.i, align 4
  br label %pci_platform_power_transition.exit

pci_platform_power_transition.exit:               ; preds = %if.then2.i, %entry.pci_platform_power_transition.exit_crit_edge
  %runtime_d3cold = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %3 = ptrtoint ptr %runtime_d3cold to i32
  call void @__asan_loadN_noabort(i32 %3, i32 4)
  %bf.load = load i32, ptr %runtime_d3cold, align 2
  %4 = and i32 %bf.load, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %pci_platform_power_transition.exit.if.end_crit_edge, label %if.then

pci_platform_power_transition.exit.if.end_crit_edge: ; preds = %pci_platform_power_transition.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %pci_platform_power_transition.exit
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %5 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %subordinate, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %if.then.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_walk_bus(ptr noundef nonnull %6, ptr noundef nonnull @pci_resume_one, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then.if.end_crit_edge, %pci_platform_power_transition.exit.if.end_crit_edge
  %call1 = tail call fastcc i32 @pci_raw_set_power_state(ptr noundef %dev, i32 noundef 0)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_raw_set_power_state(ptr noundef %dev, i32 noundef %state) unnamed_addr #5 align 64 {
entry:
  %pmcsr = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr) #24
  %0 = ptrtoint ptr %pmcsr to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %pmcsr, align 2, !annotation !731
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %1 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %current_state, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %state)
  %cmp = icmp eq i32 %2, %state
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %3 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %pm_cap, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp7.not = icmp ne i32 %state, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %2)
  %cmp9 = icmp slt i32 %2, 5
  %or.cond = select i1 %cmp7.not, i1 %cmp9, i1 false
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %state)
  %cmp12 = icmp sgt i32 %2, %state
  %or.cond156 = select i1 %or.cond, i1 %cmp12, i1 false
  br i1 %or.cond156, label %do.end, label %if.end17

do.end:                                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #26
  %dev14 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i = add nsw i32 %2, 1
  %arrayidx.i = getelementptr [0 x ptr], ptr @pci_power_names, i32 0, i32 %add.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %add.i159 = add nsw i32 %state, 1
  %arrayidx.i160 = getelementptr [0 x ptr], ptr @pci_power_names, i32 0, i32 %add.i159
  %7 = ptrtoint ptr %arrayidx.i160 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i160, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev14, ptr noundef nonnull @.str.92, ptr noundef %6, ptr noundef %8) #28
  br label %cleanup

if.end17:                                         ; preds = %if.end6
  %9 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.247)
  switch i32 %state, label %if.end17.if.end29_crit_edge [
    i32 1, label %land.lhs.true19
    i32 2, label %land.lhs.true23
  ]

if.end17.if.end29_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end29

land.lhs.true19:                                  ; preds = %if.end17
  %d1_support = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %10 = ptrtoint ptr %d1_support to i32
  call void @__asan_loadN_noabort(i32 %10, i32 4)
  %bf.load = load i32, ptr %d1_support, align 2
  %11 = and i32 %bf.load, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool20.not = icmp eq i32 %11, 0
  br i1 %tobool20.not, label %land.lhs.true19.cleanup_crit_edge, label %land.lhs.true19.if.end29_crit_edge

land.lhs.true19.if.end29_crit_edge:               ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end29

land.lhs.true19.cleanup_crit_edge:                ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true23:                                  ; preds = %if.end17
  %d2_support = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %12 = ptrtoint ptr %d2_support to i32
  call void @__asan_loadN_noabort(i32 %12, i32 4)
  %bf.load24 = load i32, ptr %d2_support, align 2
  %13 = and i32 %bf.load24, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool27.not = icmp eq i32 %13, 0
  br i1 %tobool27.not, label %land.lhs.true23.cleanup_crit_edge, label %land.lhs.true23.if.end29_crit_edge

land.lhs.true23.if.end29_crit_edge:               ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end29

land.lhs.true23.cleanup_crit_edge:                ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end29:                                         ; preds = %land.lhs.true23.if.end29_crit_edge, %land.lhs.true19.if.end29_crit_edge, %if.end17.if.end29_crit_edge
  %cmp22170 = phi i1 [ true, %land.lhs.true23.if.end29_crit_edge ], [ false, %land.lhs.true19.if.end29_crit_edge ], [ false, %if.end17.if.end29_crit_edge ]
  %conv = zext i8 %4 to i32
  %add = add nuw nsw i32 %conv, 4
  %call31 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %pmcsr) #24
  %14 = ptrtoint ptr %pmcsr to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %pmcsr, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %15)
  %cmp33 = icmp eq i16 %15, -1
  br i1 %cmp33, label %do.end38, label %if.end43

do.end38:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #26
  %dev39 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %16 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %current_state, align 4
  %add.i161 = add i32 %17, 1
  %arrayidx.i162 = getelementptr [0 x ptr], ptr @pci_power_names, i32 0, i32 %add.i161
  %18 = ptrtoint ptr %arrayidx.i162 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.i162, align 4
  %add.i163 = add i32 %state, 1
  %arrayidx.i164 = getelementptr [0 x ptr], ptr @pci_power_names, i32 0, i32 %add.i163
  %20 = ptrtoint ptr %arrayidx.i164 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx.i164, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev39, ptr noundef nonnull @.str.95, ptr noundef %19, ptr noundef %21) #28
  br label %cleanup

if.end43:                                         ; preds = %if.end29
  %22 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %current_state, align 4
  %24 = zext i32 %23 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.248)
  switch i32 %23, label %if.end43.sw.epilog_crit_edge [
    i32 0, label %if.end43.sw.bb_crit_edge
    i32 1, label %if.end43.sw.bb_crit_edge171
    i32 2, label %if.end43.sw.bb_crit_edge172
    i32 3, label %if.end43.sw.bb49_crit_edge
    i32 4, label %if.end43.sw.bb49_crit_edge173
    i32 5, label %if.end43.sw.bb49_crit_edge174
  ]

if.end43.sw.bb49_crit_edge174:                    ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb49

if.end43.sw.bb49_crit_edge173:                    ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb49

if.end43.sw.bb49_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb49

if.end43.sw.bb_crit_edge172:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb

if.end43.sw.bb_crit_edge171:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb

if.end43.sw.bb_crit_edge:                         ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb

if.end43.sw.epilog_crit_edge:                     ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end43.sw.bb_crit_edge, %if.end43.sw.bb_crit_edge171, %if.end43.sw.bb_crit_edge172
  %25 = and i16 %15, -4
  %26 = trunc i32 %state to i16
  %conv48 = or i16 %25, %26
  br label %sw.epilog

sw.bb49:                                          ; preds = %if.end43.sw.bb49_crit_edge, %if.end43.sw.bb49_crit_edge173, %if.end43.sw.bb49_crit_edge174
  %27 = and i16 %15, 11
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %27)
  %28 = icmp eq i16 %27, 3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb49, %sw.bb, %if.end43.sw.epilog_crit_edge
  %storemerge = phi i16 [ %conv48, %sw.bb ], [ 0, %if.end43.sw.epilog_crit_edge ], [ 0, %sw.bb49 ]
  %need_restore.1.off0 = phi i1 [ false, %sw.bb ], [ false, %if.end43.sw.epilog_crit_edge ], [ %28, %sw.bb49 ]
  %29 = ptrtoint ptr %pmcsr to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %storemerge, ptr %pmcsr, align 2
  %30 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %pm_cap, align 1
  %conv61 = zext i8 %31 to i32
  %add62 = add nuw nsw i32 %conv61, 4
  %call63 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add62, i16 noundef zeroext %storemerge) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %state)
  %cmp64 = icmp eq i32 %state, 3
  br i1 %cmp64, label %sw.epilog.if.then70_crit_edge, label %lor.lhs.false66

sw.epilog.if.then70_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then70

lor.lhs.false66:                                  ; preds = %sw.epilog
  %32 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %current_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %33)
  %cmp68 = icmp eq i32 %33, 3
  br i1 %cmp68, label %lor.lhs.false66.if.then70_crit_edge, label %if.else

lor.lhs.false66.if.then70_crit_edge:              ; preds = %lor.lhs.false66
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then70

if.then70:                                        ; preds = %lor.lhs.false66.if.then70_crit_edge, %sw.epilog.if.then70_crit_edge
  %d3hot_delay.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 35
  %34 = ptrtoint ptr %d3hot_delay.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %d3hot_delay.i, align 8
  %36 = load i32, ptr @pci_pm_d3hot_delay, align 4
  %37 = call i32 @llvm.umax.i32(i32 %35, i32 %36) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.i = icmp eq i32 %37, 0
  br i1 %tobool.not.i, label %if.then70.if.end79_crit_edge, label %if.then1.i

if.then70.if.end79_crit_edge:                     ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end79

if.then1.i:                                       ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #26
  call void @msleep(i32 noundef %37) #24
  br label %if.end79

if.else:                                          ; preds = %lor.lhs.false66
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %33)
  %cmp75 = icmp eq i32 %33, 2
  %or.cond158 = select i1 %cmp22170, i1 true, i1 %cmp75
  br i1 %or.cond158, label %if.then77, label %if.else.if.end79_crit_edge

if.else.if.end79_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end79

if.then77:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %38 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %38(i32 noundef 42949600) #24
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %if.else.if.end79_crit_edge, %if.then1.i, %if.then70.if.end79_crit_edge
  %39 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %pm_cap, align 1
  %conv81 = zext i8 %40 to i32
  %add82 = add nuw nsw i32 %conv81, 4
  %call83 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add82, ptr noundef nonnull %pmcsr) #24
  %41 = ptrtoint ptr %pmcsr to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %pmcsr, align 2
  %43 = and i16 %42, 3
  %and85 = zext i16 %43 to i32
  %44 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %and85, ptr %current_state, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %and85, i32 %state)
  %cmp88.not = icmp eq i32 %and85, %state
  br i1 %cmp88.not, label %if.end79.if.end105_crit_edge, label %do.body91

if.end79.if.end105_crit_edge:                     ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end105

do.body91:                                        ; preds = %if.end79
  %call92 = call i32 @___ratelimit(ptr noundef nonnull @pci_raw_set_power_state._rs, ptr noundef nonnull @.str.93) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92)
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %do.body91.if.end105_crit_edge, label %do.end97

do.body91.if.end105_crit_edge:                    ; preds = %do.body91
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end105

do.end97:                                         ; preds = %do.body91
  call void @__sanitizer_cov_trace_pc() #26
  %dev98 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %45 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %current_state, align 4
  %add.i165 = add i32 %46, 1
  %arrayidx.i166 = getelementptr [0 x ptr], ptr @pci_power_names, i32 0, i32 %add.i165
  %47 = ptrtoint ptr %arrayidx.i166 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx.i166, align 4
  %add.i167 = add i32 %state, 1
  %arrayidx.i168 = getelementptr [0 x ptr], ptr @pci_power_names, i32 0, i32 %add.i167
  %49 = ptrtoint ptr %arrayidx.i168 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx.i168, align 4
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev98, ptr noundef nonnull @.str.99, ptr noundef %48, ptr noundef %50) #28
  br label %if.end105

if.end105:                                        ; preds = %do.end97, %do.body91.if.end105_crit_edge, %if.end79.if.end105_crit_edge
  br i1 %need_restore.1.off0, label %if.then107, label %if.end105.if.end108_crit_edge

if.end105.if.end108_crit_edge:                    ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end108

if.then107:                                       ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #26
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 0) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 1) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 2) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 3) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 4) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 5) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 6) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 7) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 8) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 9) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 10) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 11) #24
  call void @pci_update_resource(ptr noundef %dev, i32 noundef 12) #24
  br label %if.end108

if.end108:                                        ; preds = %if.then107, %if.end105.if.end108_crit_edge
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %51 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %bus, align 8
  %self = getelementptr inbounds %struct.pci_bus, ptr %52, i32 0, i32 4
  %53 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %self, align 4
  %tobool109.not = icmp eq ptr %54, null
  br i1 %tobool109.not, label %if.end108.cleanup_crit_edge, label %if.then110

if.end108.cleanup_crit_edge:                      ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then110:                                       ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #26
  call void @pcie_aspm_pm_state_change(ptr noundef nonnull %54) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then110, %if.end108.cleanup_crit_edge, %do.end38, %land.lhs.true23.cleanup_crit_edge, %land.lhs.true19.cleanup_crit_edge, %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ -5, %do.end38 ], [ 0, %entry.cleanup_crit_edge ], [ -5, %if.end.cleanup_crit_edge ], [ -5, %land.lhs.true23.cleanup_crit_edge ], [ -5, %land.lhs.true19.cleanup_crit_edge ], [ 0, %if.then110 ], [ 0, %if.end108.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_bus_set_current_state(ptr noundef %bus, i32 noundef %state) local_unnamed_addr #5 align 64 {
entry:
  %state.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %state.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %state, ptr %state.addr, align 4
  %tobool.not = icmp eq ptr %bus, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  call void @pci_walk_bus(ptr noundef nonnull %bus, ptr noundef nonnull @__pci_dev_set_current_state, ptr noundef nonnull %state.addr) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @__pci_dev_set_current_state(ptr nocapture noundef writeonly %dev, ptr nocapture noundef readonly %data) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %data, align 4
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %2 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %current_state, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_set_power_state(ptr noundef %dev, i32 noundef %state) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %state)
  %cmp = icmp sgt i32 %state, 4
  br i1 %cmp, label %if.end8.thread, label %if.else

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp1 = icmp slt i32 %state, 0
  br i1 %cmp1, label %if.end8.thread69, label %if.else3

if.else3:                                         ; preds = %if.else
  %state.off = add nsw i32 %state, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state.off)
  %switch = icmp ult i32 %state.off, 2
  br i1 %switch, label %land.lhs.true, label %if.else3.if.end8_crit_edge

if.else3.if.end8_crit_edge:                       ; preds = %if.else3
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8

land.lhs.true:                                    ; preds = %if.else3
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus.i, align 8
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %self.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %land.lhs.true.pci_no_d1d2.exit_crit_edge, label %if.then.i

land.lhs.true.pci_no_d1d2.exit_crit_edge:         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_no_d1d2.exit

if.then.i:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  %no_d1d2.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %no_d1d2.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 4)
  %bf.load.i = load i32, ptr %no_d1d2.i, align 2
  %5 = and i32 %bf.load.i, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %phi.cmp = icmp eq i32 %5, 0
  br label %pci_no_d1d2.exit

pci_no_d1d2.exit:                                 ; preds = %if.then.i, %land.lhs.true.pci_no_d1d2.exit_crit_edge
  %parent_dstates.0.i = phi i1 [ %phi.cmp, %if.then.i ], [ true, %land.lhs.true.pci_no_d1d2.exit_crit_edge ]
  %no_d1d23.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %6 = ptrtoint ptr %no_d1d23.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 4)
  %bf.load4.i = load i32, ptr %no_d1d23.i, align 2
  %7 = and i32 %bf.load4.i, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool7.not.i = icmp eq i32 %7, 0
  %tobool.not = select i1 %tobool7.not.i, i1 %parent_dstates.0.i, i1 false
  br i1 %tobool.not, label %pci_no_d1d2.exit.if.end8_crit_edge, label %pci_no_d1d2.exit.cleanup_crit_edge

pci_no_d1d2.exit.cleanup_crit_edge:               ; preds = %pci_no_d1d2.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_no_d1d2.exit.if.end8_crit_edge:               ; preds = %pci_no_d1d2.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8

if.end8:                                          ; preds = %pci_no_d1d2.exit.if.end8_crit_edge, %if.else3.if.end8_crit_edge
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %8 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %current_state, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %state)
  %cmp9 = icmp eq i32 %9, %state
  br i1 %cmp9, label %if.end8.cleanup_crit_edge, label %if.end11

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end8.thread69:                                 ; preds = %if.else
  %current_state71 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %10 = ptrtoint ptr %current_state71 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %current_state71, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp972 = icmp eq i32 %11, 0
  br i1 %cmp972, label %if.end8.thread69.cleanup_crit_edge, label %if.end8.thread69.if.then13_crit_edge

if.end8.thread69.if.then13_crit_edge:             ; preds = %if.end8.thread69
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then13

if.end8.thread69.cleanup_crit_edge:               ; preds = %if.end8.thread69
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end8.thread:                                   ; preds = %entry
  %current_state52 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %12 = ptrtoint ptr %current_state52 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %current_state52, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %13)
  %cmp953 = icmp eq i32 %13, 4
  br i1 %cmp953, label %if.end8.thread.cleanup_crit_edge, label %if.end8.thread.land.lhs.true17_crit_edge

if.end8.thread.land.lhs.true17_crit_edge:         ; preds = %if.end8.thread
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true17

if.end8.thread.cleanup_crit_edge:                 ; preds = %if.end8.thread
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp12 = icmp eq i32 %state, 0
  br i1 %cmp12, label %if.end11.if.then13_crit_edge, label %if.end15

if.end11.if.then13_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then13

if.then13:                                        ; preds = %if.end11.if.then13_crit_edge, %if.end8.thread69.if.then13_crit_edge
  %current_state7478 = phi ptr [ %current_state, %if.end11.if.then13_crit_edge ], [ %current_state71, %if.end8.thread69.if.then13_crit_edge ]
  %pm_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %14 = ptrtoint ptr %pm_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %pm_cap.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool1.not.i.i = icmp eq i8 %15, 0
  br i1 %tobool1.not.i.i, label %if.then2.i.i, label %if.then13.pci_platform_power_transition.exit.i_crit_edge

if.then13.pci_platform_power_transition.exit.i_crit_edge: ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_platform_power_transition.exit.i

if.then2.i.i:                                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #26
  %16 = ptrtoint ptr %current_state7478 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %current_state7478, align 4
  br label %pci_platform_power_transition.exit.i

pci_platform_power_transition.exit.i:             ; preds = %if.then2.i.i, %if.then13.pci_platform_power_transition.exit.i_crit_edge
  %runtime_d3cold.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %17 = ptrtoint ptr %runtime_d3cold.i to i32
  call void @__asan_loadN_noabort(i32 %17, i32 4)
  %bf.load.i48 = load i32, ptr %runtime_d3cold.i, align 2
  %18 = and i32 %bf.load.i48, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i49 = icmp eq i32 %18, 0
  br i1 %tobool.not.i49, label %pci_platform_power_transition.exit.i.pci_power_up.exit_crit_edge, label %if.then.i50

pci_platform_power_transition.exit.i.pci_power_up.exit_crit_edge: ; preds = %pci_platform_power_transition.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_power_up.exit

if.then.i50:                                      ; preds = %pci_platform_power_transition.exit.i
  %subordinate.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %19 = ptrtoint ptr %subordinate.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %subordinate.i, align 4
  %tobool.not.i.i = icmp eq ptr %20, null
  br i1 %tobool.not.i.i, label %if.then.i50.pci_power_up.exit_crit_edge, label %if.then.i.i

if.then.i50.pci_power_up.exit_crit_edge:          ; preds = %if.then.i50
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_power_up.exit

if.then.i.i:                                      ; preds = %if.then.i50
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_walk_bus(ptr noundef nonnull %20, ptr noundef nonnull @pci_resume_one, ptr noundef null) #24
  br label %pci_power_up.exit

pci_power_up.exit:                                ; preds = %if.then.i.i, %if.then.i50.pci_power_up.exit_crit_edge, %pci_platform_power_transition.exit.i.pci_power_up.exit_crit_edge
  %call1.i = tail call fastcc i32 @pci_raw_set_power_state(ptr noundef %dev, i32 noundef 0) #24
  br label %cleanup

if.end15:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %cmp16 = icmp ugt i32 %state, 2
  br i1 %cmp16, label %if.end15.land.lhs.true17_crit_edge, label %if.end15.if.end20_crit_edge

if.end15.if.end20_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20

if.end15.land.lhs.true17_crit_edge:               ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true17

land.lhs.true17:                                  ; preds = %if.end15.land.lhs.true17_crit_edge, %if.end8.thread.land.lhs.true17_crit_edge
  %current_state555967 = phi ptr [ %current_state, %if.end15.land.lhs.true17_crit_edge ], [ %current_state52, %if.end8.thread.land.lhs.true17_crit_edge ]
  %state.addr.0546065 = phi i32 [ %state, %if.end15.land.lhs.true17_crit_edge ], [ 4, %if.end8.thread.land.lhs.true17_crit_edge ]
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %21 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %dev_flags, align 2
  %23 = and i16 %22, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %tobool18.not = icmp eq i16 %23, 0
  br i1 %tobool18.not, label %land.lhs.true17.if.end20_crit_edge, label %land.lhs.true17.cleanup_crit_edge

land.lhs.true17.cleanup_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true17.if.end20_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20

if.end20:                                         ; preds = %land.lhs.true17.if.end20_crit_edge, %if.end15.if.end20_crit_edge
  %current_state555966 = phi ptr [ %current_state555967, %land.lhs.true17.if.end20_crit_edge ], [ %current_state, %if.end15.if.end20_crit_edge ]
  %state.addr.0546064 = phi i32 [ %state.addr.0546065, %land.lhs.true17.if.end20_crit_edge ], [ %state, %if.end15.if.end20_crit_edge ]
  %24 = tail call i32 @llvm.umin.i32(i32 %state.addr.0546064, i32 3)
  %call23 = tail call fastcc i32 @pci_raw_set_power_state(ptr noundef %dev, i32 noundef %24)
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %25 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool1.not.i = icmp eq i8 %26, 0
  br i1 %tobool1.not.i, label %if.then2.i, label %if.end20.cleanup_crit_edge

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then2.i:                                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #26
  %27 = ptrtoint ptr %current_state555966 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %current_state555966, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then2.i, %if.end20.cleanup_crit_edge, %land.lhs.true17.cleanup_crit_edge, %pci_power_up.exit, %if.end8.thread.cleanup_crit_edge, %if.end8.thread69.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %pci_no_d1d2.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1.i, %pci_power_up.exit ], [ 0, %pci_no_d1d2.exit.cleanup_crit_edge ], [ 0, %if.end8.cleanup_crit_edge ], [ 0, %land.lhs.true17.cleanup_crit_edge ], [ 0, %if.end8.thread.cleanup_crit_edge ], [ %call23, %if.end20.cleanup_crit_edge ], [ %call23, %if.then2.i ], [ 0, %if.end8.thread69.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pci_find_saved_cap(ptr nocapture noundef readonly %dev, i8 noundef zeroext %cap) local_unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i8 %cap to i16
  %saved_cap_space.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %0 = ptrtoint ptr %saved_cap_space.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %tmp.033.i = load ptr, ptr %saved_cap_space.i, align 4
  %tobool3.not34.i = icmp eq ptr %tmp.033.i, null
  br i1 %tobool3.not34.i, label %entry._pci_find_saved_cap.exit_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry._pci_find_saved_cap.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_find_saved_cap.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %tmp.035.i = phi ptr [ %tmp.0.i, %for.inc.i.for.body.i_crit_edge ], [ %tmp.033.i, %entry.for.body.i_crit_edge ]
  %cap_extended.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i, i32 0, i32 1, i32 1
  %1 = ptrtoint ptr %cap_extended.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %cap_extended.i, align 2, !range !732
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %cmp.i = icmp eq i8 %2, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %cap4.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i, i32 0, i32 1
  %3 = ptrtoint ptr %cap4.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %cap4.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %4, i16 %conv)
  %cmp12.i = icmp eq i16 %4, %conv
  br i1 %cmp12.i, label %land.lhs.true.i._pci_find_saved_cap.exit_crit_edge, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

land.lhs.true.i._pci_find_saved_cap.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_find_saved_cap.exit

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %5 = ptrtoint ptr %tmp.035.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %tmp.0.i = load ptr, ptr %tmp.035.i, align 4
  %tobool3.not.i = icmp eq ptr %tmp.0.i, null
  br i1 %tobool3.not.i, label %for.inc.i._pci_find_saved_cap.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i

for.inc.i._pci_find_saved_cap.exit_crit_edge:     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_find_saved_cap.exit

_pci_find_saved_cap.exit:                         ; preds = %for.inc.i._pci_find_saved_cap.exit_crit_edge, %land.lhs.true.i._pci_find_saved_cap.exit_crit_edge, %entry._pci_find_saved_cap.exit_crit_edge
  %tmp.0.lcssa.i = phi ptr [ null, %entry._pci_find_saved_cap.exit_crit_edge ], [ %tmp.035.i, %land.lhs.true.i._pci_find_saved_cap.exit_crit_edge ], [ null, %for.inc.i._pci_find_saved_cap.exit_crit_edge ]
  ret ptr %tmp.0.lcssa.i
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pci_find_saved_ext_cap(ptr nocapture noundef readonly %dev, i16 noundef zeroext %cap) local_unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %saved_cap_space.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %0 = ptrtoint ptr %saved_cap_space.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %tmp.033.i = load ptr, ptr %saved_cap_space.i, align 4
  %tobool3.not34.i = icmp eq ptr %tmp.033.i, null
  br i1 %tobool3.not34.i, label %entry._pci_find_saved_cap.exit_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry._pci_find_saved_cap.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_find_saved_cap.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %tmp.035.i = phi ptr [ %tmp.0.i, %for.inc.i.for.body.i_crit_edge ], [ %tmp.033.i, %entry.for.body.i_crit_edge ]
  %cap_extended.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i, i32 0, i32 1, i32 1
  %1 = ptrtoint ptr %cap_extended.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %cap_extended.i, align 2, !range !732
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %2)
  %cmp.i = icmp eq i8 %2, 1
  br i1 %cmp.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %cap4.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i, i32 0, i32 1
  %3 = ptrtoint ptr %cap4.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %cap4.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %4, i16 %cap)
  %cmp12.i = icmp eq i16 %4, %cap
  br i1 %cmp12.i, label %land.lhs.true.i._pci_find_saved_cap.exit_crit_edge, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

land.lhs.true.i._pci_find_saved_cap.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_find_saved_cap.exit

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %5 = ptrtoint ptr %tmp.035.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %tmp.0.i = load ptr, ptr %tmp.035.i, align 4
  %tobool3.not.i = icmp eq ptr %tmp.0.i, null
  br i1 %tobool3.not.i, label %for.inc.i._pci_find_saved_cap.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i

for.inc.i._pci_find_saved_cap.exit_crit_edge:     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_find_saved_cap.exit

_pci_find_saved_cap.exit:                         ; preds = %for.inc.i._pci_find_saved_cap.exit_crit_edge, %land.lhs.true.i._pci_find_saved_cap.exit_crit_edge, %entry._pci_find_saved_cap.exit_crit_edge
  %tmp.0.lcssa.i = phi ptr [ null, %entry._pci_find_saved_cap.exit_crit_edge ], [ %tmp.035.i, %land.lhs.true.i._pci_find_saved_cap.exit_crit_edge ], [ null, %for.inc.i._pci_find_saved_cap.exit_crit_edge ]
  ret ptr %tmp.0.lcssa.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_bridge_reconfigure_ltr(ptr nocapture noundef readonly %dev) local_unnamed_addr #5 align 64 {
entry:
  %ctl = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctl) #24
  %0 = ptrtoint ptr %ctl to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ctl, align 4, !annotation !731
  %is_virtfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %1 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %1, i32 5)
  %bf.load.i.i = load i40, ptr %is_virtfn.i.i, align 1
  %2 = and i40 %bf.load.i.i, 65536
  %tobool.not.i.i = icmp eq i40 %2, 0
  br i1 %tobool.not.i.i, label %entry.pci_physfn.exit.i_crit_edge, label %if.then.i.i

entry.pci_physfn.exit.i_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_physfn.exit.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %3 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 66
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  br label %pci_physfn.exit.i

pci_physfn.exit.i:                                ; preds = %if.then.i.i, %entry.pci_physfn.exit.i_crit_edge
  %dev.addr.0.i.i = phi ptr [ %5, %if.then.i.i ], [ %dev, %entry.pci_physfn.exit.i_crit_edge ]
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i5.i = icmp eq ptr %9, null
  br i1 %tobool.not.i5.i, label %pci_physfn.exit.i.if.end14_crit_edge, label %pci_upstream_bridge.exit

pci_physfn.exit.i.if.end14_crit_edge:             ; preds = %pci_physfn.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

pci_upstream_bridge.exit:                         ; preds = %pci_physfn.exit.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %7, i32 0, i32 4
  %10 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %self.i, align 4
  %tobool.not = icmp eq ptr %11, null
  br i1 %tobool.not, label %pci_upstream_bridge.exit.if.end14_crit_edge, label %land.lhs.true

pci_upstream_bridge.exit.if.end14_crit_edge:      ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

land.lhs.true:                                    ; preds = %pci_upstream_bridge.exit
  %ltr_path = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 38
  %12 = ptrtoint ptr %ltr_path to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load = load i8, ptr %ltr_path, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool1.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool1.not, label %land.lhs.true.if.end14_crit_edge, label %if.then

land.lhs.true.if.end14_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32 @pcie_capability_read_dword(ptr noundef nonnull %11, i32 noundef 40, ptr noundef nonnull %ctl) #24
  %13 = ptrtoint ptr %ctl to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %ctl, align 4
  %and = and i32 %14, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %do.body, label %if.then.if.end14_crit_edge

if.then.if.end14_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

do.body:                                          ; preds = %if.then
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_bridge_reconfigure_ltr.__UNIQUE_ID_ddebug237, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_bridge_reconfigure_ltr, %do.end)) #24
          to label %if.then10 [label %do.end], !srcloc !733

if.then10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #26
  %dev11 = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_bridge_reconfigure_ltr.__UNIQUE_ID_ddebug237, ptr noundef %dev11, ptr noundef nonnull @.str.12) #24
  br label %do.end

do.end:                                           ; preds = %if.then10, %do.body
  %call.i = call i32 @pcie_capability_clear_and_set_word(ptr noundef nonnull %11, i32 noundef 40, i16 noundef zeroext 0, i16 noundef zeroext 1024) #24
  br label %if.end14

if.end14:                                         ; preds = %do.end, %if.then.if.end14_crit_edge, %land.lhs.true.if.end14_crit_edge, %pci_upstream_bridge.exit.if.end14_crit_edge, %pci_physfn.exit.i.if.end14_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctl) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_read_dword(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_save_state(ptr noundef %dev) #5 align 64 {
entry:
  %header.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.084 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %mul = shl i32 %i.084, 2
  %arrayidx = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 52, i32 %i.084
  %call = tail call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %mul, ptr noundef %arrayidx) #24
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_save_state.__UNIQUE_ID_ddebug238, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_save_state, %for.inc)) #24
          to label %if.then [label %for.inc], !srcloc !733

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_save_state.__UNIQUE_ID_ddebug238, ptr noundef %dev5, ptr noundef nonnull @.str.14, i32 noundef %mul, i32 noundef %1) #24
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body
  %inc = add nuw nsw i32 %i.084, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.end:                                          ; preds = %for.inc
  %state_saved = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %2 = ptrtoint ptr %state_saved to i32
  call void @__asan_loadN_noabort(i32 %2, i32 5)
  %bf.load = load i40, ptr %state_saved, align 1
  %bf.set = or i40 %bf.load, 262144
  store i40 %bf.set, ptr %state_saved, align 1
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %3 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.i.not.i = icmp eq i8 %4, 0
  br i1 %tobool.i.not.i, label %for.end.if.end12_crit_edge, label %if.end.i

for.end.if.end12_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end12

if.end.i:                                         ; preds = %for.end
  %saved_cap_space.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %5 = ptrtoint ptr %saved_cap_space.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %tmp.033.i.i.i = load ptr, ptr %saved_cap_space.i.i.i, align 4
  %tobool3.not34.i.i.i = icmp eq ptr %tmp.033.i.i.i, null
  br i1 %tobool3.not34.i.i.i, label %if.end.i.pci_save_pcie_state.exit_crit_edge, label %if.end.i.for.body.i.i.i_crit_edge

if.end.i.for.body.i.i.i_crit_edge:                ; preds = %if.end.i
  br label %for.body.i.i.i

if.end.i.pci_save_pcie_state.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_save_pcie_state.exit

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.end.i.for.body.i.i.i_crit_edge
  %tmp.035.i.i.i = phi ptr [ %tmp.0.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ %tmp.033.i.i.i, %if.end.i.for.body.i.i.i_crit_edge ]
  %cap_extended.i.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %cap_extended.i.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %cap_extended.i.i.i, align 2, !range !732
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp.i.i.i = icmp eq i8 %7, 0
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %cap4.i.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %cap4.i.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %cap4.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %9)
  %cmp12.i.i.i = icmp eq i16 %9, 16
  br i1 %cmp12.i.i.i, label %if.end4.i, label %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge

land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %10 = ptrtoint ptr %tmp.035.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %tmp.0.i.i.i = load ptr, ptr %tmp.035.i.i.i, align 4
  %tobool3.not.i.i.i = icmp eq ptr %tmp.0.i.i.i, null
  br i1 %tobool3.not.i.i.i, label %for.inc.i.i.i.pci_save_pcie_state.exit_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i.i.i

for.inc.i.i.i.pci_save_pcie_state.exit_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_save_pcie_state.exit

if.end4.i:                                        ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %data.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 1
  %call7.i = tail call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 8, ptr noundef %data.i) #24
  %arrayidx9.i = getelementptr i16, ptr %data.i, i32 1
  %call10.i = tail call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 16, ptr noundef %arrayidx9.i) #24
  %arrayidx12.i = getelementptr %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 1, i32 0, i32 1
  %call13.i = tail call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 24, ptr noundef %arrayidx12.i) #24
  %arrayidx15.i = getelementptr i16, ptr %data.i, i32 3
  %call16.i = tail call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 28, ptr noundef %arrayidx15.i) #24
  %arrayidx18.i = getelementptr %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 1, i32 1
  %call19.i = tail call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 40, ptr noundef %arrayidx18.i) #24
  %arrayidx21.i = getelementptr %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 1, i32 1, i32 1
  %call22.i = tail call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 48, ptr noundef %arrayidx21.i) #24
  %arrayidx24.i = getelementptr %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 1, i32 1, i32 2
  %call25.i = tail call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 56, ptr noundef %arrayidx24.i) #24
  br label %if.end12

pci_save_pcie_state.exit:                         ; preds = %for.inc.i.i.i.pci_save_pcie_state.exit_crit_edge, %if.end.i.pci_save_pcie_state.exit_crit_edge
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.101, ptr noundef nonnull @.str.102) #28
  br label %cleanup

if.end12:                                         ; preds = %if.end4.i, %for.end.if.end12_crit_edge
  %call.i = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 7) #24
  %conv.i = zext i8 %call.i to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call.i)
  %tobool.not.i = icmp eq i8 %call.i, 0
  br i1 %tobool.not.i, label %if.end12.if.end16_crit_edge, label %if.end.i42

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end16

if.end.i42:                                       ; preds = %if.end12
  %saved_cap_space.i.i.i39 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %11 = ptrtoint ptr %saved_cap_space.i.i.i39 to i32
  call void @__asan_load4_noabort(i32 %11)
  %tmp.033.i.i.i40 = load ptr, ptr %saved_cap_space.i.i.i39, align 4
  %tobool3.not34.i.i.i41 = icmp eq ptr %tmp.033.i.i.i40, null
  br i1 %tobool3.not34.i.i.i41, label %if.end.i42.pci_save_pcix_state.exit_crit_edge, label %if.end.i42.for.body.i.i.i46_crit_edge

if.end.i42.for.body.i.i.i46_crit_edge:            ; preds = %if.end.i42
  br label %for.body.i.i.i46

if.end.i42.pci_save_pcix_state.exit_crit_edge:    ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_save_pcix_state.exit

for.body.i.i.i46:                                 ; preds = %for.inc.i.i.i52.for.body.i.i.i46_crit_edge, %if.end.i42.for.body.i.i.i46_crit_edge
  %tmp.035.i.i.i43 = phi ptr [ %tmp.0.i.i.i50, %for.inc.i.i.i52.for.body.i.i.i46_crit_edge ], [ %tmp.033.i.i.i40, %if.end.i42.for.body.i.i.i46_crit_edge ]
  %cap_extended.i.i.i44 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i43, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %cap_extended.i.i.i44 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %cap_extended.i.i.i44, align 2, !range !732
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %cmp.i.i.i45 = icmp eq i8 %13, 0
  br i1 %cmp.i.i.i45, label %land.lhs.true.i.i.i49, label %for.body.i.i.i46.for.inc.i.i.i52_crit_edge

for.body.i.i.i46.for.inc.i.i.i52_crit_edge:       ; preds = %for.body.i.i.i46
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i52

land.lhs.true.i.i.i49:                            ; preds = %for.body.i.i.i46
  %cap4.i.i.i47 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i43, i32 0, i32 1
  %14 = ptrtoint ptr %cap4.i.i.i47 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %cap4.i.i.i47, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %15)
  %cmp12.i.i.i48 = icmp eq i16 %15, 7
  br i1 %cmp12.i.i.i48, label %if.end5.i, label %land.lhs.true.i.i.i49.for.inc.i.i.i52_crit_edge

land.lhs.true.i.i.i49.for.inc.i.i.i52_crit_edge:  ; preds = %land.lhs.true.i.i.i49
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i52

for.inc.i.i.i52:                                  ; preds = %land.lhs.true.i.i.i49.for.inc.i.i.i52_crit_edge, %for.body.i.i.i46.for.inc.i.i.i52_crit_edge
  %16 = ptrtoint ptr %tmp.035.i.i.i43 to i32
  call void @__asan_load4_noabort(i32 %16)
  %tmp.0.i.i.i50 = load ptr, ptr %tmp.035.i.i.i43, align 4
  %tobool3.not.i.i.i51 = icmp eq ptr %tmp.0.i.i.i50, null
  br i1 %tobool3.not.i.i.i51, label %for.inc.i.i.i52.pci_save_pcix_state.exit_crit_edge, label %for.inc.i.i.i52.for.body.i.i.i46_crit_edge

for.inc.i.i.i52.for.body.i.i.i46_crit_edge:       ; preds = %for.inc.i.i.i52
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i.i.i46

for.inc.i.i.i52.pci_save_pcix_state.exit_crit_edge: ; preds = %for.inc.i.i.i52
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_save_pcix_state.exit

if.end5.i:                                        ; preds = %land.lhs.true.i.i.i49
  call void @__sanitizer_cov_trace_pc() #26
  %add.i = add nuw nsw i32 %conv.i, 2
  %data.i54 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i43, i32 1
  %call6.i = tail call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add.i, ptr noundef %data.i54) #24
  br label %if.end16

pci_save_pcix_state.exit:                         ; preds = %for.inc.i.i.i52.pci_save_pcix_state.exit_crit_edge, %if.end.i42.pci_save_pcix_state.exit_crit_edge
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.101, ptr noundef nonnull @.str.103) #28
  br label %cleanup

if.end16:                                         ; preds = %if.end5.i, %if.end12.if.end16_crit_edge
  %17 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.i.not.i57 = icmp eq i8 %18, 0
  br i1 %tobool.i.not.i57, label %if.end16.pci_save_ltr_state.exit_crit_edge, label %if.end.i59

if.end16.pci_save_ltr_state.exit_crit_edge:       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_save_ltr_state.exit

if.end.i59:                                       ; preds = %if.end16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i.i) #24
  %19 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -1, ptr %header.i.i.i, align 4, !annotation !731
  %cfg_size.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %20 = ptrtoint ptr %cfg_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cfg_size.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %21)
  %cmp.i.i.i58 = icmp slt i32 %21, 257
  br i1 %cmp.i.i.i58, label %if.end.i59.pci_find_ext_capability.exit.thread.i_crit_edge, label %if.end.i.i.i

if.end.i59.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end.i59
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

if.end.i.i.i:                                     ; preds = %if.end.i59
  %call.i.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp3.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp3.not.i.i.i, label %if.end6.i.i.i, label %if.end.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge

if.end.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

if.end6.i.i.i:                                    ; preds = %if.end.i.i.i
  %22 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %header.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp7.i.i.i = icmp eq i32 %23, 0
  br i1 %cmp7.i.i.i, label %if.end6.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, label %while.body.i.i.preheader.i

if.end6.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

while.body.i.i.preheader.i:                       ; preds = %if.end6.i.i.i
  %and.i.i27.i = and i32 %23, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and.i.i27.i)
  %cmp13.i.not.i28.i = icmp eq i32 %and.i.i27.i, 24
  br i1 %cmp13.i.not.i28.i, label %while.body.i.i.preheader.i.if.end3.i_crit_edge, label %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge

while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge: ; preds = %while.body.i.i.preheader.i
  br label %if.end20.i.i.i

while.body.i.i.preheader.i.if.end3.i_crit_edge:   ; preds = %while.body.i.i.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end3.i

while.body.i.i.i:                                 ; preds = %if.end27.i.i.i
  %dec.i.i.i = add nsw i32 %dec.i2.i29.i, -1
  %24 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %header.i.i.i, align 4
  %and.i.i.i = and i32 %25, 65535
  %cmp13.i.not.i.i = icmp eq i32 %and.i.i.i, 24
  br i1 %cmp13.i.not.i.i, label %if.end3.loopexit.i, label %while.body.i.i.i.if.end20.i.i.i_crit_edge

while.body.i.i.i.if.end20.i.i.i_crit_edge:        ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i.i.i

if.end20.i.i.i:                                   ; preds = %while.body.i.i.i.if.end20.i.i.i_crit_edge, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge
  %26 = phi i32 [ %25, %while.body.i.i.i.if.end20.i.i.i_crit_edge ], [ %23, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge ]
  %dec.i2.i29.i = phi i32 [ %dec.i.i.i, %while.body.i.i.i.if.end20.i.i.i_crit_edge ], [ 479, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge ]
  %shr.i.i.i = lshr i32 %26, 20
  %27 = trunc i32 %shr.i.i.i to i16
  %conv22.i.i.i = and i16 %27, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i.i)
  %cmp24.i.i.i = icmp ult i16 %conv22.i.i.i, 256
  br i1 %cmp24.i.i.i, label %if.end20.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, label %if.end27.i.i.i

if.end20.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end20.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

if.end27.i.i.i:                                   ; preds = %if.end20.i.i.i
  %conv23.i.i.i = zext i16 %conv22.i.i.i to i32
  %call29.i.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i.i.i, ptr noundef nonnull %header.i.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i.i)
  %cmp30.not.i.i.i = icmp ne i32 %call29.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i29.i)
  %cmp11.not.i.i.i = icmp eq i32 %dec.i2.i29.i, 0
  %or.cond.i.i = select i1 %cmp30.not.i.i.i, i1 true, i1 %cmp11.not.i.i.i
  br i1 %or.cond.i.i, label %if.end27.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, label %while.body.i.i.i

if.end27.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end27.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

pci_find_ext_capability.exit.thread.i:            ; preds = %if.end27.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, %if.end20.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, %if.end6.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, %if.end.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, %if.end.i59.pci_find_ext_capability.exit.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i) #24
  br label %pci_save_ltr_state.exit

if.end3.loopexit.i:                               ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %phi.bo.i = add nuw nsw i16 %conv22.i.i.i, 4
  %phi.cast.i = zext i16 %phi.bo.i to i32
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.end3.loopexit.i, %while.body.i.i.preheader.i.if.end3.i_crit_edge
  %pos.1.i1.i.lcssa.i = phi i32 [ 260, %while.body.i.i.preheader.i.if.end3.i_crit_edge ], [ %phi.cast.i, %if.end3.loopexit.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i) #24
  %saved_cap_space.i.i.i60 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %28 = ptrtoint ptr %saved_cap_space.i.i.i60 to i32
  call void @__asan_load4_noabort(i32 %28)
  %tmp.033.i.i.i61 = load ptr, ptr %saved_cap_space.i.i.i60, align 4
  %tobool3.not34.i.i.i62 = icmp eq ptr %tmp.033.i.i.i61, null
  br i1 %tobool3.not34.i.i.i62, label %if.end3.i.do.end.i72_crit_edge, label %if.end3.i.for.body.i.i.i65_crit_edge

if.end3.i.for.body.i.i.i65_crit_edge:             ; preds = %if.end3.i
  br label %for.body.i.i.i65

if.end3.i.do.end.i72_crit_edge:                   ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end.i72

for.body.i.i.i65:                                 ; preds = %for.inc.i.i.i71.for.body.i.i.i65_crit_edge, %if.end3.i.for.body.i.i.i65_crit_edge
  %tmp.035.i.i.i63 = phi ptr [ %tmp.0.i.i.i69, %for.inc.i.i.i71.for.body.i.i.i65_crit_edge ], [ %tmp.033.i.i.i61, %if.end3.i.for.body.i.i.i65_crit_edge ]
  %cap_extended.i.i.i64 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i63, i32 0, i32 1, i32 1
  %29 = ptrtoint ptr %cap_extended.i.i.i64 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %cap_extended.i.i.i64, align 2, !range !732
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %30)
  %cmp.i.i19.i = icmp eq i8 %30, 1
  br i1 %cmp.i.i19.i, label %land.lhs.true.i.i.i68, label %for.body.i.i.i65.for.inc.i.i.i71_crit_edge

for.body.i.i.i65.for.inc.i.i.i71_crit_edge:       ; preds = %for.body.i.i.i65
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i71

land.lhs.true.i.i.i68:                            ; preds = %for.body.i.i.i65
  %cap4.i.i.i66 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i63, i32 0, i32 1
  %31 = ptrtoint ptr %cap4.i.i.i66 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %cap4.i.i.i66, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 24, i16 %32)
  %cmp12.i.i.i67 = icmp eq i16 %32, 24
  br i1 %cmp12.i.i.i67, label %if.end8.i, label %land.lhs.true.i.i.i68.for.inc.i.i.i71_crit_edge

land.lhs.true.i.i.i68.for.inc.i.i.i71_crit_edge:  ; preds = %land.lhs.true.i.i.i68
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i71

for.inc.i.i.i71:                                  ; preds = %land.lhs.true.i.i.i68.for.inc.i.i.i71_crit_edge, %for.body.i.i.i65.for.inc.i.i.i71_crit_edge
  %33 = ptrtoint ptr %tmp.035.i.i.i63 to i32
  call void @__asan_load4_noabort(i32 %33)
  %tmp.0.i.i.i69 = load ptr, ptr %tmp.035.i.i.i63, align 4
  %tobool3.not.i.i.i70 = icmp eq ptr %tmp.0.i.i.i69, null
  br i1 %tobool3.not.i.i.i70, label %for.inc.i.i.i71.do.end.i72_crit_edge, label %for.inc.i.i.i71.for.body.i.i.i65_crit_edge

for.inc.i.i.i71.for.body.i.i.i65_crit_edge:       ; preds = %for.inc.i.i.i71
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i.i.i65

for.inc.i.i.i71.do.end.i72_crit_edge:             ; preds = %for.inc.i.i.i71
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end.i72

do.end.i72:                                       ; preds = %for.inc.i.i.i71.do.end.i72_crit_edge, %if.end3.i.do.end.i72_crit_edge
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev5, ptr noundef nonnull @.str.104) #28
  br label %pci_save_ltr_state.exit

if.end8.i:                                        ; preds = %land.lhs.true.i.i.i68
  call void @__sanitizer_cov_trace_pc() #26
  %data.i73 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i63, i32 1
  %call10.i74 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %pos.1.i1.i.lcssa.i, ptr noundef %data.i73) #24
  br label %pci_save_ltr_state.exit

pci_save_ltr_state.exit:                          ; preds = %if.end8.i, %do.end.i72, %pci_find_ext_capability.exit.thread.i, %if.end16.pci_save_ltr_state.exit_crit_edge
  call void @pci_save_dpc_state(ptr noundef %dev) #24
  call void @pci_save_aer_state(ptr noundef %dev) #24
  call void @pci_save_ptm_state(ptr noundef %dev) #24
  %call17 = call i32 @pci_save_vc_state(ptr noundef %dev) #24
  br label %cleanup

cleanup:                                          ; preds = %pci_save_ltr_state.exit, %pci_save_pcix_state.exit, %pci_save_pcie_state.exit
  %retval.0 = phi i32 [ %call17, %pci_save_ltr_state.exit ], [ -12, %pci_save_pcie_state.exit ], [ -12, %pci_save_pcix_state.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_save_dpc_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_save_aer_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_save_ptm_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_save_vc_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_restore_state(ptr noundef %dev) #5 align 64 {
entry:
  %header.i.i.i36 = alloca i32, align 4
  %ctrl.i = alloca i32, align 4
  %header.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %state_saved = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %state_saved to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %state_saved, align 1
  %1 = and i40 %bf.load, 262144
  %tobool.not = icmp eq i40 %1, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %entry
  %saved_cap_space.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %2 = ptrtoint ptr %saved_cap_space.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %tmp.033.i.i.i = load ptr, ptr %saved_cap_space.i.i.i, align 4
  %tobool3.not34.i.i.i = icmp eq ptr %tmp.033.i.i.i, null
  br i1 %tobool3.not34.i.i.i, label %if.end.pci_find_saved_ext_cap.exit.i_crit_edge, label %if.end.for.body.i.i.i_crit_edge

if.end.for.body.i.i.i_crit_edge:                  ; preds = %if.end
  br label %for.body.i.i.i

if.end.pci_find_saved_ext_cap.exit.i_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_saved_ext_cap.exit.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.end.for.body.i.i.i_crit_edge
  %tmp.035.i.i.i = phi ptr [ %tmp.0.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ %tmp.033.i.i.i, %if.end.for.body.i.i.i_crit_edge ]
  %cap_extended.i.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 0, i32 1, i32 1
  %3 = ptrtoint ptr %cap_extended.i.i.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %cap_extended.i.i.i, align 2, !range !732
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %4)
  %cmp.i.i.i = icmp eq i8 %4, 1
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %cap4.i.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %cap4.i.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %cap4.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 24, i16 %6)
  %cmp12.i.i.i = icmp eq i16 %6, 24
  br i1 %cmp12.i.i.i, label %land.lhs.true.i.i.i.pci_find_saved_ext_cap.exit.i_crit_edge, label %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge

land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i

land.lhs.true.i.i.i.pci_find_saved_ext_cap.exit.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_saved_ext_cap.exit.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %7 = ptrtoint ptr %tmp.035.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %tmp.0.i.i.i = load ptr, ptr %tmp.035.i.i.i, align 4
  %tobool3.not.i.i.i = icmp eq ptr %tmp.0.i.i.i, null
  br i1 %tobool3.not.i.i.i, label %for.inc.i.i.i.pci_find_saved_ext_cap.exit.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i.i.i

for.inc.i.i.i.pci_find_saved_ext_cap.exit.i_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_saved_ext_cap.exit.i

pci_find_saved_ext_cap.exit.i:                    ; preds = %for.inc.i.i.i.pci_find_saved_ext_cap.exit.i_crit_edge, %land.lhs.true.i.i.i.pci_find_saved_ext_cap.exit.i_crit_edge, %if.end.pci_find_saved_ext_cap.exit.i_crit_edge
  %tmp.0.lcssa.i.i.i = phi ptr [ null, %if.end.pci_find_saved_ext_cap.exit.i_crit_edge ], [ %tmp.035.i.i.i, %land.lhs.true.i.i.i.pci_find_saved_ext_cap.exit.i_crit_edge ], [ null, %for.inc.i.i.i.pci_find_saved_ext_cap.exit.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i.i) #24
  %8 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %header.i.i.i, align 4, !annotation !731
  %cfg_size.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %9 = ptrtoint ptr %cfg_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cfg_size.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %10)
  %cmp.i.i11.i = icmp slt i32 %10, 257
  br i1 %cmp.i.i11.i, label %pci_find_saved_ext_cap.exit.i.pci_find_ext_capability.exit.thread.i_crit_edge, label %if.end.i.i.i

pci_find_saved_ext_cap.exit.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %pci_find_saved_ext_cap.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

if.end.i.i.i:                                     ; preds = %pci_find_saved_ext_cap.exit.i
  %call.i.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp3.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp3.not.i.i.i, label %if.end6.i.i.i, label %if.end.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge

if.end.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

if.end6.i.i.i:                                    ; preds = %if.end.i.i.i
  %11 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %header.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp7.i.i.i = icmp eq i32 %12, 0
  br i1 %cmp7.i.i.i, label %if.end6.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, label %while.body.i.i.preheader.i

if.end6.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

while.body.i.i.preheader.i:                       ; preds = %if.end6.i.i.i
  %and.i.i18.i = and i32 %12, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and.i.i18.i)
  %cmp13.i.not.i19.i = icmp eq i32 %and.i.i18.i, 24
  br i1 %cmp13.i.not.i19.i, label %while.body.i.i.preheader.i.pci_find_ext_capability.exit.i_crit_edge, label %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge

while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge: ; preds = %while.body.i.i.preheader.i
  br label %if.end20.i.i.i

while.body.i.i.preheader.i.pci_find_ext_capability.exit.i_crit_edge: ; preds = %while.body.i.i.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.i

while.body.i.i.i:                                 ; preds = %if.end27.i.i.i
  %dec.i.i.i = add nsw i32 %dec.i2.i20.i, -1
  %13 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %header.i.i.i, align 4
  %and.i.i.i = and i32 %14, 65535
  %cmp13.i.not.i.i = icmp eq i32 %and.i.i.i, 24
  br i1 %cmp13.i.not.i.i, label %pci_find_ext_capability.exit.loopexit.i, label %while.body.i.i.i.if.end20.i.i.i_crit_edge

while.body.i.i.i.if.end20.i.i.i_crit_edge:        ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i.i.i

if.end20.i.i.i:                                   ; preds = %while.body.i.i.i.if.end20.i.i.i_crit_edge, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge
  %15 = phi i32 [ %14, %while.body.i.i.i.if.end20.i.i.i_crit_edge ], [ %12, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge ]
  %dec.i2.i20.i = phi i32 [ %dec.i.i.i, %while.body.i.i.i.if.end20.i.i.i_crit_edge ], [ 479, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge ]
  %shr.i.i.i = lshr i32 %15, 20
  %16 = trunc i32 %shr.i.i.i to i16
  %conv22.i.i.i = and i16 %16, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i.i)
  %cmp24.i.i.i = icmp ult i16 %conv22.i.i.i, 256
  br i1 %cmp24.i.i.i, label %if.end20.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, label %if.end27.i.i.i

if.end20.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end20.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

if.end27.i.i.i:                                   ; preds = %if.end20.i.i.i
  %conv23.i.i.i = zext i16 %conv22.i.i.i to i32
  %call29.i.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i.i.i, ptr noundef nonnull %header.i.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i.i)
  %cmp30.not.i.i.i = icmp ne i32 %call29.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i20.i)
  %cmp11.not.i.i.i = icmp eq i32 %dec.i2.i20.i, 0
  %or.cond.i.i = select i1 %cmp30.not.i.i.i, i1 true, i1 %cmp11.not.i.i.i
  br i1 %or.cond.i.i, label %if.end27.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, label %while.body.i.i.i

if.end27.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge: ; preds = %if.end27.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i

pci_find_ext_capability.exit.thread.i:            ; preds = %if.end27.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, %if.end20.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, %if.end6.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, %if.end.i.i.i.pci_find_ext_capability.exit.thread.i_crit_edge, %pci_find_saved_ext_cap.exit.i.pci_find_ext_capability.exit.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i) #24
  br label %pci_restore_ltr_state.exit

pci_find_ext_capability.exit.loopexit.i:          ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %phi.bo.i = add nuw nsw i16 %conv22.i.i.i, 4
  %phi.cast.i = zext i16 %phi.bo.i to i32
  br label %pci_find_ext_capability.exit.i

pci_find_ext_capability.exit.i:                   ; preds = %pci_find_ext_capability.exit.loopexit.i, %while.body.i.i.preheader.i.pci_find_ext_capability.exit.i_crit_edge
  %pos.1.i1.i.lcssa.i = phi i32 [ 260, %while.body.i.i.preheader.i.pci_find_ext_capability.exit.i_crit_edge ], [ %phi.cast.i, %pci_find_ext_capability.exit.loopexit.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i) #24
  %tobool.not.i = icmp eq ptr %tmp.0.lcssa.i.i.i, null
  br i1 %tobool.not.i, label %pci_find_ext_capability.exit.i.pci_restore_ltr_state.exit_crit_edge, label %if.end.i

pci_find_ext_capability.exit.i.pci_restore_ltr_state.exit_crit_edge: ; preds = %pci_find_ext_capability.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_restore_ltr_state.exit

if.end.i:                                         ; preds = %pci_find_ext_capability.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  %data.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.0.lcssa.i.i.i, i32 1
  %17 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %data.i, align 4
  %call4.i = call i32 @pci_write_config_dword(ptr noundef %dev, i32 noundef %pos.1.i1.i.lcssa.i, i32 noundef %18) #24
  br label %pci_restore_ltr_state.exit

pci_restore_ltr_state.exit:                       ; preds = %if.end.i, %pci_find_ext_capability.exit.i.pci_restore_ltr_state.exit_crit_edge, %pci_find_ext_capability.exit.thread.i
  %19 = ptrtoint ptr %saved_cap_space.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %tmp.033.i.i.i22 = load ptr, ptr %saved_cap_space.i.i.i, align 4
  %tobool3.not34.i.i.i23 = icmp eq ptr %tmp.033.i.i.i22, null
  br i1 %tobool3.not34.i.i.i23, label %pci_restore_ltr_state.exit.pci_restore_pcie_state.exit_crit_edge, label %pci_restore_ltr_state.exit.for.body.i.i.i27_crit_edge

pci_restore_ltr_state.exit.for.body.i.i.i27_crit_edge: ; preds = %pci_restore_ltr_state.exit
  br label %for.body.i.i.i27

pci_restore_ltr_state.exit.pci_restore_pcie_state.exit_crit_edge: ; preds = %pci_restore_ltr_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_restore_pcie_state.exit

for.body.i.i.i27:                                 ; preds = %for.inc.i.i.i33.for.body.i.i.i27_crit_edge, %pci_restore_ltr_state.exit.for.body.i.i.i27_crit_edge
  %tmp.035.i.i.i24 = phi ptr [ %tmp.0.i.i.i31, %for.inc.i.i.i33.for.body.i.i.i27_crit_edge ], [ %tmp.033.i.i.i22, %pci_restore_ltr_state.exit.for.body.i.i.i27_crit_edge ]
  %cap_extended.i.i.i25 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i24, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %cap_extended.i.i.i25 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %cap_extended.i.i.i25, align 2, !range !732
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %cmp.i.i.i26 = icmp eq i8 %21, 0
  br i1 %cmp.i.i.i26, label %land.lhs.true.i.i.i30, label %for.body.i.i.i27.for.inc.i.i.i33_crit_edge

for.body.i.i.i27.for.inc.i.i.i33_crit_edge:       ; preds = %for.body.i.i.i27
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i33

land.lhs.true.i.i.i30:                            ; preds = %for.body.i.i.i27
  %cap4.i.i.i28 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i24, i32 0, i32 1
  %22 = ptrtoint ptr %cap4.i.i.i28 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %cap4.i.i.i28, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %23)
  %cmp12.i.i.i29 = icmp eq i16 %23, 16
  br i1 %cmp12.i.i.i29, label %if.end.i35, label %land.lhs.true.i.i.i30.for.inc.i.i.i33_crit_edge

land.lhs.true.i.i.i30.for.inc.i.i.i33_crit_edge:  ; preds = %land.lhs.true.i.i.i30
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i33

for.inc.i.i.i33:                                  ; preds = %land.lhs.true.i.i.i30.for.inc.i.i.i33_crit_edge, %for.body.i.i.i27.for.inc.i.i.i33_crit_edge
  %24 = ptrtoint ptr %tmp.035.i.i.i24 to i32
  call void @__asan_load4_noabort(i32 %24)
  %tmp.0.i.i.i31 = load ptr, ptr %tmp.035.i.i.i24, align 4
  %tobool3.not.i.i.i32 = icmp eq ptr %tmp.0.i.i.i31, null
  br i1 %tobool3.not.i.i.i32, label %for.inc.i.i.i33.pci_restore_pcie_state.exit_crit_edge, label %for.inc.i.i.i33.for.body.i.i.i27_crit_edge

for.inc.i.i.i33.for.body.i.i.i27_crit_edge:       ; preds = %for.inc.i.i.i33
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i.i.i27

for.inc.i.i.i33.pci_restore_pcie_state.exit_crit_edge: ; preds = %for.inc.i.i.i33
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_restore_pcie_state.exit

if.end.i35:                                       ; preds = %land.lhs.true.i.i.i30
  call void @__sanitizer_cov_trace_pc() #26
  call void @pci_bridge_reconfigure_ltr(ptr noundef %dev) #24
  %data.i34 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i24, i32 1
  %25 = ptrtoint ptr %data.i34 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %data.i34, align 2
  %call3.i = call i32 @pcie_capability_write_word(ptr noundef %dev, i32 noundef 8, i16 noundef zeroext %26) #24
  %arrayidx5.i = getelementptr i16, ptr %data.i34, i32 1
  %27 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %arrayidx5.i, align 2
  %call6.i = call i32 @pcie_capability_write_word(ptr noundef %dev, i32 noundef 16, i16 noundef zeroext %28) #24
  %arrayidx8.i = getelementptr %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i24, i32 1, i32 0, i32 1
  %29 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %arrayidx8.i, align 2
  %call9.i = call i32 @pcie_capability_write_word(ptr noundef %dev, i32 noundef 24, i16 noundef zeroext %30) #24
  %arrayidx11.i = getelementptr i16, ptr %data.i34, i32 3
  %31 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %arrayidx11.i, align 2
  %call12.i = call i32 @pcie_capability_write_word(ptr noundef %dev, i32 noundef 28, i16 noundef zeroext %32) #24
  %arrayidx14.i = getelementptr %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i24, i32 1, i32 1
  %33 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %arrayidx14.i, align 2
  %call15.i = call i32 @pcie_capability_write_word(ptr noundef %dev, i32 noundef 40, i16 noundef zeroext %34) #24
  %arrayidx17.i = getelementptr %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i24, i32 1, i32 1, i32 1
  %35 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %arrayidx17.i, align 2
  %call18.i = call i32 @pcie_capability_write_word(ptr noundef %dev, i32 noundef 48, i16 noundef zeroext %36) #24
  %arrayidx20.i = getelementptr %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i24, i32 1, i32 1, i32 2
  %37 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %arrayidx20.i, align 2
  %call21.i = call i32 @pcie_capability_write_word(ptr noundef %dev, i32 noundef 56, i16 noundef zeroext %38) #24
  br label %pci_restore_pcie_state.exit

pci_restore_pcie_state.exit:                      ; preds = %if.end.i35, %for.inc.i.i.i33.pci_restore_pcie_state.exit_crit_edge, %pci_restore_ltr_state.exit.pci_restore_pcie_state.exit_crit_edge
  call void @pci_restore_pasid_state(ptr noundef %dev) #24
  call void @pci_restore_pri_state(ptr noundef %dev) #24
  call void @pci_restore_ats_state(ptr noundef %dev) #24
  call void @pci_restore_vc_state(ptr noundef %dev) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctrl.i) #24
  %39 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 -1, ptr %ctrl.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i.i36) #24
  %40 = ptrtoint ptr %header.i.i.i36 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 -1, ptr %header.i.i.i36, align 4, !annotation !731
  %41 = ptrtoint ptr %cfg_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cfg_size.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %42)
  %cmp.i.i.i38 = icmp slt i32 %42, 257
  br i1 %cmp.i.i.i38, label %pci_restore_pcie_state.exit.pci_find_ext_capability.exit.thread.i59_crit_edge, label %if.end.i.i.i41

pci_restore_pcie_state.exit.pci_find_ext_capability.exit.thread.i59_crit_edge: ; preds = %pci_restore_pcie_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i59

if.end.i.i.i41:                                   ; preds = %pci_restore_pcie_state.exit
  %call.i.i.i39 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i.i.i36) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i39)
  %cmp3.not.i.i.i40 = icmp eq i32 %call.i.i.i39, 0
  br i1 %cmp3.not.i.i.i40, label %if.end6.i.i.i43, label %if.end.i.i.i41.pci_find_ext_capability.exit.thread.i59_crit_edge

if.end.i.i.i41.pci_find_ext_capability.exit.thread.i59_crit_edge: ; preds = %if.end.i.i.i41
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i59

if.end6.i.i.i43:                                  ; preds = %if.end.i.i.i41
  %43 = ptrtoint ptr %header.i.i.i36 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %header.i.i.i36, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %cmp7.i.i.i42 = icmp eq i32 %44, 0
  br i1 %cmp7.i.i.i42, label %if.end6.i.i.i43.pci_find_ext_capability.exit.thread.i59_crit_edge, label %while.body.i.i.preheader.i44

if.end6.i.i.i43.pci_find_ext_capability.exit.thread.i59_crit_edge: ; preds = %if.end6.i.i.i43
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i59

while.body.i.i.preheader.i44:                     ; preds = %if.end6.i.i.i43
  %and.i.i30.i = and i32 %44, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %and.i.i30.i)
  %cmp13.i.not.i31.i = icmp eq i32 %and.i.i30.i, 21
  br i1 %cmp13.i.not.i31.i, label %while.body.i.i.preheader.i44.if.end.i62_crit_edge, label %while.body.i.i.preheader.i44.if.end20.i.i.i52_crit_edge

while.body.i.i.preheader.i44.if.end20.i.i.i52_crit_edge: ; preds = %while.body.i.i.preheader.i44
  br label %if.end20.i.i.i52

while.body.i.i.preheader.i44.if.end.i62_crit_edge: ; preds = %while.body.i.i.preheader.i44
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i62

while.body.i.i.i48:                               ; preds = %if.end27.i.i.i58
  %dec.i.i.i45 = add nsw i32 %dec.i2.i32.i, -1
  %45 = ptrtoint ptr %header.i.i.i36 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %header.i.i.i36, align 4
  %and.i.i.i46 = and i32 %46, 65535
  %cmp13.i.not.i.i47 = icmp eq i32 %and.i.i.i46, 21
  br i1 %cmp13.i.not.i.i47, label %while.body.i.i.i48.if.end.i62_crit_edge, label %while.body.i.i.i48.if.end20.i.i.i52_crit_edge

while.body.i.i.i48.if.end20.i.i.i52_crit_edge:    ; preds = %while.body.i.i.i48
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i.i.i52

while.body.i.i.i48.if.end.i62_crit_edge:          ; preds = %while.body.i.i.i48
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i62

if.end20.i.i.i52:                                 ; preds = %while.body.i.i.i48.if.end20.i.i.i52_crit_edge, %while.body.i.i.preheader.i44.if.end20.i.i.i52_crit_edge
  %47 = phi i32 [ %46, %while.body.i.i.i48.if.end20.i.i.i52_crit_edge ], [ %44, %while.body.i.i.preheader.i44.if.end20.i.i.i52_crit_edge ]
  %dec.i2.i32.i = phi i32 [ %dec.i.i.i45, %while.body.i.i.i48.if.end20.i.i.i52_crit_edge ], [ 479, %while.body.i.i.preheader.i44.if.end20.i.i.i52_crit_edge ]
  %shr.i.i.i49 = lshr i32 %47, 20
  %48 = trunc i32 %shr.i.i.i49 to i16
  %conv22.i.i.i50 = and i16 %48, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i.i50)
  %cmp24.i.i.i51 = icmp ult i16 %conv22.i.i.i50, 256
  br i1 %cmp24.i.i.i51, label %if.end20.i.i.i52.pci_find_ext_capability.exit.thread.i59_crit_edge, label %if.end27.i.i.i58

if.end20.i.i.i52.pci_find_ext_capability.exit.thread.i59_crit_edge: ; preds = %if.end20.i.i.i52
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i59

if.end27.i.i.i58:                                 ; preds = %if.end20.i.i.i52
  %conv23.i.i.i53 = zext i16 %conv22.i.i.i50 to i32
  %call29.i.i.i54 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i.i.i53, ptr noundef nonnull %header.i.i.i36) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i.i54)
  %cmp30.not.i.i.i55 = icmp ne i32 %call29.i.i.i54, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i32.i)
  %cmp11.not.i.i.i56 = icmp eq i32 %dec.i2.i32.i, 0
  %or.cond.i.i57 = select i1 %cmp30.not.i.i.i55, i1 true, i1 %cmp11.not.i.i.i56
  br i1 %or.cond.i.i57, label %if.end27.i.i.i58.pci_find_ext_capability.exit.thread.i59_crit_edge, label %while.body.i.i.i48

if.end27.i.i.i58.pci_find_ext_capability.exit.thread.i59_crit_edge: ; preds = %if.end27.i.i.i58
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread.i59

pci_find_ext_capability.exit.thread.i59:          ; preds = %if.end27.i.i.i58.pci_find_ext_capability.exit.thread.i59_crit_edge, %if.end20.i.i.i52.pci_find_ext_capability.exit.thread.i59_crit_edge, %if.end6.i.i.i43.pci_find_ext_capability.exit.thread.i59_crit_edge, %if.end.i.i.i41.pci_find_ext_capability.exit.thread.i59_crit_edge, %pci_restore_pcie_state.exit.pci_find_ext_capability.exit.thread.i59_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i36) #24
  br label %pci_restore_rebar_state.exit

if.end.i62:                                       ; preds = %while.body.i.i.i48.if.end.i62_crit_edge, %while.body.i.i.preheader.i44.if.end.i62_crit_edge
  %pos.1.i1.i.lcssa.i61 = phi i32 [ 256, %while.body.i.i.preheader.i44.if.end.i62_crit_edge ], [ %conv23.i.i.i53, %while.body.i.i.i48.if.end.i62_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i36) #24
  %add.i = add nuw nsw i32 %pos.1.i1.i.lcssa.i61, 8
  %call1.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %ctrl.i) #24
  %49 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %ctrl.i, align 4
  %and.i = lshr i32 %50, 5
  %shr.i = and i32 %and.i, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr.i)
  %cmp33.not.i = icmp eq i32 %shr.i, 0
  br i1 %cmp33.not.i, label %if.end.i62.pci_restore_rebar_state.exit_crit_edge, label %for.body.lr.ph.i

if.end.i62.pci_restore_rebar_state.exit_crit_edge: ; preds = %if.end.i62
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_restore_rebar_state.exit

for.body.lr.ph.i:                                 ; preds = %if.end.i62
  %resource.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %pos.035.i = phi i32 [ %pos.1.i1.i.lcssa.i61, %for.body.lr.ph.i ], [ %add3.i, %for.body.i.for.body.i_crit_edge ]
  %i.034.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %add3.i = add nuw nsw i32 %pos.035.i, 8
  %call4.i63 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add3.i, ptr noundef nonnull %ctrl.i) #24
  %51 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %ctrl.i, align 4
  %and5.i = and i32 %52, 7
  %end.i.i = getelementptr %struct.resource, ptr %resource.i, i32 %and5.i, i32 1
  %53 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %end.i.i, align 4
  %add.ptr.i = getelementptr %struct.resource, ptr %resource.i, i32 %and5.i
  %55 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %add.ptr.i, align 4
  %sub.i52.i.i = sub i32 %54, %56
  call void @__sanitizer_cov_trace_cmp4(i32 %54, i32 %56)
  %tobool.not.i.i.i.i.i = icmp eq i32 %54, %56
  %57 = call i32 @llvm.ctlz.i32(i32 %sub.i52.i.i, i1 true) #24, !range !734
  %sub.i.i.i.i.i = sub nuw nsw i32 32, %57
  %sub.i.i.op.i.i.i = shl nuw i32 1, %sub.i.i.i.i.i
  %58 = call i32 @llvm.ctlz.i32(i32 %sub.i.i.op.i.i.i, i1 true), !range !734
  %.op = xor i32 %58, 31
  %59 = call i32 @llvm.umax.i32(i32 %.op, i32 20)
  %and9.i = and i32 %52, -7937
  %.op92 = shl nuw nsw i32 %59, 8
  %.op92.op = add nsw i32 %.op92, -5120
  %shl.i = select i1 %tobool.not.i.i.i.i.i, i32 0, i32 %.op92.op
  %or.i = or i32 %shl.i, %and9.i
  %60 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %or.i, ptr %ctrl.i, align 4
  %call11.i = call i32 @pci_write_config_dword(ptr noundef %dev, i32 noundef %add3.i, i32 noundef %or.i) #24
  %inc.i = add nuw nsw i32 %i.034.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %shr.i
  br i1 %exitcond.not.i, label %for.body.i.pci_restore_rebar_state.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i

for.body.i.pci_restore_rebar_state.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_restore_rebar_state.exit

pci_restore_rebar_state.exit:                     ; preds = %for.body.i.pci_restore_rebar_state.exit_crit_edge, %if.end.i62.pci_restore_rebar_state.exit_crit_edge, %pci_find_ext_capability.exit.thread.i59
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctrl.i) #24
  call void @pci_restore_dpc_state(ptr noundef %dev) #24
  call void @pci_restore_ptm_state(ptr noundef %dev) #24
  %call = call i32 @pci_aer_clear_status(ptr noundef %dev) #24
  call void @pci_restore_aer_state(ptr noundef %dev) #24
  call fastcc void @pci_restore_config_space(ptr noundef %dev)
  %61 = ptrtoint ptr %saved_cap_space.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %tmp.033.i.i.i65 = load ptr, ptr %saved_cap_space.i.i.i, align 4
  %tobool3.not34.i.i.i66 = icmp eq ptr %tmp.033.i.i.i65, null
  br i1 %tobool3.not34.i.i.i66, label %pci_restore_rebar_state.exit.pci_find_saved_cap.exit.i_crit_edge, label %pci_restore_rebar_state.exit.for.body.i.i.i70_crit_edge

pci_restore_rebar_state.exit.for.body.i.i.i70_crit_edge: ; preds = %pci_restore_rebar_state.exit
  br label %for.body.i.i.i70

pci_restore_rebar_state.exit.pci_find_saved_cap.exit.i_crit_edge: ; preds = %pci_restore_rebar_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_saved_cap.exit.i

for.body.i.i.i70:                                 ; preds = %for.inc.i.i.i76.for.body.i.i.i70_crit_edge, %pci_restore_rebar_state.exit.for.body.i.i.i70_crit_edge
  %tmp.035.i.i.i67 = phi ptr [ %tmp.0.i.i.i74, %for.inc.i.i.i76.for.body.i.i.i70_crit_edge ], [ %tmp.033.i.i.i65, %pci_restore_rebar_state.exit.for.body.i.i.i70_crit_edge ]
  %cap_extended.i.i.i68 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i67, i32 0, i32 1, i32 1
  %62 = ptrtoint ptr %cap_extended.i.i.i68 to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %cap_extended.i.i.i68, align 2, !range !732
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %cmp.i.i.i69 = icmp eq i8 %63, 0
  br i1 %cmp.i.i.i69, label %land.lhs.true.i.i.i73, label %for.body.i.i.i70.for.inc.i.i.i76_crit_edge

for.body.i.i.i70.for.inc.i.i.i76_crit_edge:       ; preds = %for.body.i.i.i70
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i76

land.lhs.true.i.i.i73:                            ; preds = %for.body.i.i.i70
  %cap4.i.i.i71 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i.i67, i32 0, i32 1
  %64 = ptrtoint ptr %cap4.i.i.i71 to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %cap4.i.i.i71, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %65)
  %cmp12.i.i.i72 = icmp eq i16 %65, 7
  br i1 %cmp12.i.i.i72, label %land.lhs.true.i.i.i73.pci_find_saved_cap.exit.i_crit_edge, label %land.lhs.true.i.i.i73.for.inc.i.i.i76_crit_edge

land.lhs.true.i.i.i73.for.inc.i.i.i76_crit_edge:  ; preds = %land.lhs.true.i.i.i73
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i.i76

land.lhs.true.i.i.i73.pci_find_saved_cap.exit.i_crit_edge: ; preds = %land.lhs.true.i.i.i73
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_saved_cap.exit.i

for.inc.i.i.i76:                                  ; preds = %land.lhs.true.i.i.i73.for.inc.i.i.i76_crit_edge, %for.body.i.i.i70.for.inc.i.i.i76_crit_edge
  %66 = ptrtoint ptr %tmp.035.i.i.i67 to i32
  call void @__asan_load4_noabort(i32 %66)
  %tmp.0.i.i.i74 = load ptr, ptr %tmp.035.i.i.i67, align 4
  %tobool3.not.i.i.i75 = icmp eq ptr %tmp.0.i.i.i74, null
  br i1 %tobool3.not.i.i.i75, label %for.inc.i.i.i76.pci_find_saved_cap.exit.i_crit_edge, label %for.inc.i.i.i76.for.body.i.i.i70_crit_edge

for.inc.i.i.i76.for.body.i.i.i70_crit_edge:       ; preds = %for.inc.i.i.i76
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i.i.i70

for.inc.i.i.i76.pci_find_saved_cap.exit.i_crit_edge: ; preds = %for.inc.i.i.i76
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_saved_cap.exit.i

pci_find_saved_cap.exit.i:                        ; preds = %for.inc.i.i.i76.pci_find_saved_cap.exit.i_crit_edge, %land.lhs.true.i.i.i73.pci_find_saved_cap.exit.i_crit_edge, %pci_restore_rebar_state.exit.pci_find_saved_cap.exit.i_crit_edge
  %tmp.0.lcssa.i.i.i77 = phi ptr [ null, %pci_restore_rebar_state.exit.pci_find_saved_cap.exit.i_crit_edge ], [ %tmp.035.i.i.i67, %land.lhs.true.i.i.i73.pci_find_saved_cap.exit.i_crit_edge ], [ null, %for.inc.i.i.i76.pci_find_saved_cap.exit.i_crit_edge ]
  %call1.i78 = call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 7) #24
  %tobool.not.i79 = icmp eq ptr %tmp.0.lcssa.i.i.i77, null
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call1.i78)
  %tobool2.not.i = icmp eq i8 %call1.i78, 0
  %or.cond.i80 = select i1 %tobool.not.i79, i1 true, i1 %tobool2.not.i
  br i1 %or.cond.i80, label %pci_find_saved_cap.exit.i.pci_restore_pcix_state.exit_crit_edge, label %if.end.i83

pci_find_saved_cap.exit.i.pci_restore_pcix_state.exit_crit_edge: ; preds = %pci_find_saved_cap.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_restore_pcix_state.exit

if.end.i83:                                       ; preds = %pci_find_saved_cap.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  %conv.i = zext i8 %call1.i78 to i32
  %data.i81 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.0.lcssa.i.i.i77, i32 1
  %add.i82 = add nuw nsw i32 %conv.i, 2
  %67 = ptrtoint ptr %data.i81 to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %data.i81, align 2
  %call5.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add.i82, i16 noundef zeroext %68) #24
  br label %pci_restore_pcix_state.exit

pci_restore_pcix_state.exit:                      ; preds = %if.end.i83, %pci_find_saved_cap.exit.i.pci_restore_pcix_state.exit_crit_edge
  call void @pci_restore_msi_state(ptr noundef %dev) #24
  call fastcc void @pci_enable_acs(ptr noundef %dev)
  call void @pci_restore_iov_state(ptr noundef %dev) #24
  %69 = ptrtoint ptr %state_saved to i32
  call void @__asan_loadN_noabort(i32 %69, i32 5)
  %bf.load2 = load i40, ptr %state_saved, align 1
  %bf.clear3 = and i40 %bf.load2, -262145
  store i40 %bf.clear3, ptr %state_saved, align 1
  br label %return

return:                                           ; preds = %pci_restore_pcix_state.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_pasid_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_pri_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_ats_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_vc_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_dpc_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_ptm_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_aer_clear_status(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_aer_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_restore_config_space(ptr noundef %pdev) unnamed_addr #5 align 64 {
entry:
  %val.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %hdr_type = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 13
  %0 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %hdr_type, align 1
  %2 = zext i8 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.249)
  switch i8 %1, label %entry.for.body.i57_crit_edge [
    i8 0, label %for.body.i.preheader
    i8 1, label %for.body.i36.preheader
  ]

entry.for.body.i57_crit_edge:                     ; preds = %entry
  br label %for.body.i57

for.body.i36.preheader:                           ; preds = %entry
  %arrayidx.i33 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 15
  %3 = ptrtoint ptr %arrayidx.i33 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx.i33, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 60, i32 noundef %4, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i33.1 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 14
  %5 = ptrtoint ptr %arrayidx.i33.1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.i33.1, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 56, i32 noundef %6, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i33.2 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 13
  %7 = ptrtoint ptr %arrayidx.i33.2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i33.2, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 52, i32 noundef %8, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i33.3 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 12
  %9 = ptrtoint ptr %arrayidx.i33.3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i33.3, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 48, i32 noundef %10, i32 noundef 0, i1 noundef zeroext false) #24
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  br label %for.body.i43

for.body.i.preheader:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %arrayidx.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 15
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 60, i32 noundef %12, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i.1 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 14
  %13 = ptrtoint ptr %arrayidx.i.1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.1, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 56, i32 noundef %14, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i.2 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 13
  %15 = ptrtoint ptr %arrayidx.i.2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i.2, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 52, i32 noundef %16, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i.3 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 12
  %17 = ptrtoint ptr %arrayidx.i.3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i.3, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 48, i32 noundef %18, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i.4 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 11
  %19 = ptrtoint ptr %arrayidx.i.4 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx.i.4, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 44, i32 noundef %20, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i.5 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 10
  %21 = ptrtoint ptr %arrayidx.i.5 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx.i.5, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 40, i32 noundef %22, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i19 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 9
  %23 = ptrtoint ptr %arrayidx.i19 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx.i19, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 36, i32 noundef %24, i32 noundef 10, i1 noundef zeroext false) #24
  %arrayidx.i19.1 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 8
  %25 = ptrtoint ptr %arrayidx.i19.1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx.i19.1, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 32, i32 noundef %26, i32 noundef 10, i1 noundef zeroext false) #24
  %arrayidx.i19.2 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 7
  %27 = ptrtoint ptr %arrayidx.i19.2 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i19.2, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 28, i32 noundef %28, i32 noundef 10, i1 noundef zeroext false) #24
  %arrayidx.i19.3 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 6
  %29 = ptrtoint ptr %arrayidx.i19.3 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx.i19.3, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 24, i32 noundef %30, i32 noundef 10, i1 noundef zeroext false) #24
  %arrayidx.i19.4 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 5
  %31 = ptrtoint ptr %arrayidx.i19.4 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.i19.4, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 20, i32 noundef %32, i32 noundef 10, i1 noundef zeroext false) #24
  %arrayidx.i19.5 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 4
  %33 = ptrtoint ptr %arrayidx.i19.5 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.i19.5, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 16, i32 noundef %34, i32 noundef 10, i1 noundef zeroext false) #24
  %arrayidx.i26 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 3
  %35 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.i26, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 12, i32 noundef %36, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i26.1 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 2
  %37 = ptrtoint ptr %arrayidx.i26.1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx.i26.1, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 8, i32 noundef %38, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i26.2 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 1
  %39 = ptrtoint ptr %arrayidx.i26.2 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i26.2, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 4, i32 noundef %40, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i26.3 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 0
  %41 = ptrtoint ptr %arrayidx.i26.3 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx.i26.3, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 0, i32 noundef %42, i32 noundef 0, i1 noundef zeroext false) #24
  br label %if.end8

for.body.i43:                                     ; preds = %pci_restore_config_dword.exit.for.body.i43_crit_edge, %for.body.i36.preheader
  %index.06.i38 = phi i32 [ %dec.i41, %pci_restore_config_dword.exit.for.body.i43_crit_edge ], [ 11, %for.body.i36.preheader ]
  %mul.i39 = shl i32 %index.06.i38, 2
  %arrayidx.i40 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 %index.06.i38
  %43 = ptrtoint ptr %arrayidx.i40 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx.i40, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #24
  %45 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 -1, ptr %val.i, align 4, !annotation !731
  %call.i = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %mul.i39, ptr noundef nonnull %val.i) #24
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_restore_config_dword.__UNIQUE_ID_ddebug239, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_restore_config_space, %pci_restore_config_dword.exit)) #24
          to label %if.then7.i [label %pci_restore_config_dword.exit], !srcloc !733

if.then7.i:                                       ; preds = %for.body.i43
  call void @__sanitizer_cov_trace_pc() #26
  %46 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %val.i, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_restore_config_dword.__UNIQUE_ID_ddebug239, ptr noundef %dev.i, ptr noundef nonnull @.str.107, i32 noundef %mul.i39, i32 noundef %47, i32 noundef %44) #24
  br label %pci_restore_config_dword.exit

pci_restore_config_dword.exit:                    ; preds = %if.then7.i, %for.body.i43
  %call9.i = call i32 @pci_write_config_dword(ptr noundef %pdev, i32 noundef %mul.i39, i32 noundef %44) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #24
  %dec.i41 = add nsw i32 %index.06.i38, -1
  %cmp.not.i42 = icmp ult i32 %dec.i41, 9
  br i1 %cmp.not.i42, label %for.body.i50.preheader, label %pci_restore_config_dword.exit.for.body.i43_crit_edge

pci_restore_config_dword.exit.for.body.i43_crit_edge: ; preds = %pci_restore_config_dword.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i43

for.body.i50.preheader:                           ; preds = %pci_restore_config_dword.exit
  call void @__sanitizer_cov_trace_pc() #26
  %arrayidx.i47 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 8
  %48 = ptrtoint ptr %arrayidx.i47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx.i47, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 32, i32 noundef %49, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i47.1 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 7
  %50 = ptrtoint ptr %arrayidx.i47.1 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx.i47.1, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 28, i32 noundef %51, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i47.2 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 6
  %52 = ptrtoint ptr %arrayidx.i47.2 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx.i47.2, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 24, i32 noundef %53, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i47.3 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 5
  %54 = ptrtoint ptr %arrayidx.i47.3 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.i47.3, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 20, i32 noundef %55, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i47.4 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 4
  %56 = ptrtoint ptr %arrayidx.i47.4 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx.i47.4, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 16, i32 noundef %57, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i47.5 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 3
  %58 = ptrtoint ptr %arrayidx.i47.5 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %arrayidx.i47.5, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 12, i32 noundef %59, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i47.6 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 2
  %60 = ptrtoint ptr %arrayidx.i47.6 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx.i47.6, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 8, i32 noundef %61, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i47.7 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 1
  %62 = ptrtoint ptr %arrayidx.i47.7 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %arrayidx.i47.7, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 4, i32 noundef %63, i32 noundef 0, i1 noundef zeroext false) #24
  %arrayidx.i47.8 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 0
  %64 = ptrtoint ptr %arrayidx.i47.8 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx.i47.8, align 4
  call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef 0, i32 noundef %65, i32 noundef 0, i1 noundef zeroext false) #24
  br label %if.end8

for.body.i57:                                     ; preds = %for.body.i57.for.body.i57_crit_edge, %entry.for.body.i57_crit_edge
  %index.06.i52 = phi i32 [ %dec.i55, %for.body.i57.for.body.i57_crit_edge ], [ 15, %entry.for.body.i57_crit_edge ]
  %mul.i53 = shl i32 %index.06.i52, 2
  %arrayidx.i54 = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 52, i32 %index.06.i52
  %66 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx.i54, align 4
  tail call fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef %mul.i53, i32 noundef %67, i32 noundef 0, i1 noundef zeroext false) #24
  %dec.i55 = add nsw i32 %index.06.i52, -1
  %cmp.not.i56 = icmp eq i32 %index.06.i52, 0
  br i1 %cmp.not.i56, label %for.body.i57.if.end8_crit_edge, label %for.body.i57.for.body.i57_crit_edge

for.body.i57.for.body.i57_crit_edge:              ; preds = %for.body.i57
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i57

for.body.i57.if.end8_crit_edge:                   ; preds = %for.body.i57
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8

if.end8:                                          ; preds = %for.body.i57.if.end8_crit_edge, %for.body.i50.preheader, %for.body.i.preheader
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_msi_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_enable_acs(ptr noundef %dev) unnamed_addr #5 align 64 {
entry:
  %p.i = alloca ptr, align 4
  %ctrl.i6 = alloca i16, align 2
  %cap.i = alloca i16, align 2
  %ctrl.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %.b = load i1, ptr @pci_acs_enable, align 4
  br i1 %.b, label %if.end, label %entry.disable_acs_redir_crit_edge

entry.disable_acs_redir_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %disable_acs_redir

if.end:                                           ; preds = %entry
  %call = tail call i32 @pci_dev_specific_enable_acs(ptr noundef %dev) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end.disable_acs_redir_crit_edge, label %if.end3

if.end.disable_acs_redir_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %disable_acs_redir

if.end3:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cap.i) #24
  %0 = ptrtoint ptr %cap.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cap.i, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl.i) #24
  %1 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %ctrl.i, align 2, !annotation !731
  %acs_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 77
  %2 = ptrtoint ptr %acs_cap.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %acs_cap.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not.i = icmp eq i16 %3, 0
  br i1 %tobool.not.i, label %if.end3.pci_std_enable_acs.exit_crit_edge, label %if.end.i

if.end3.pci_std_enable_acs.exit_crit_edge:        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_std_enable_acs.exit

if.end.i:                                         ; preds = %if.end3
  %conv.i = zext i16 %3 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %cap.i) #24
  %add1.i = add nuw nsw i32 %conv.i, 6
  %call2.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add1.i, ptr noundef nonnull %ctrl.i) #24
  %4 = ptrtoint ptr %cap.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %cap.i, align 2
  %6 = and i16 %5, 1
  %7 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %ctrl.i, align 2
  %or49.i = or i16 %8, %6
  %9 = and i16 %5, 4
  %or950.i = or i16 %or49.i, %9
  %10 = and i16 %5, 8
  %or1451.i = or i16 %or950.i, %10
  %11 = and i16 %5, 16
  %or1952.i = or i16 %or1451.i, %11
  store i16 %or1952.i, ptr %ctrl.i, align 2
  %.b1.i.i = load i1, ptr @pcie_ats_disabled, align 1
  br i1 %.b1.i.i, label %if.end.i.if.then30.i_crit_edge, label %lor.lhs.false.i

if.end.i.if.then30.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then30.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  %external_facing.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %12 = ptrtoint ptr %external_facing.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 5)
  %bf.load.i = load i40, ptr %external_facing.i, align 1
  %13 = and i40 %bf.load.i, 6144
  %14 = icmp eq i40 %13, 0
  br i1 %14, label %lor.lhs.false.i.if.end36.i_crit_edge, label %lor.lhs.false.i.if.then30.i_crit_edge

lor.lhs.false.i.if.then30.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then30.i

lor.lhs.false.i.if.end36.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end36.i

if.then30.i:                                      ; preds = %lor.lhs.false.i.if.then30.i_crit_edge, %if.end.i.if.then30.i_crit_edge
  %15 = and i16 %5, 2
  %or3453.i = or i16 %or1952.i, %15
  %16 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %or3453.i, ptr %ctrl.i, align 2
  br label %if.end36.i

if.end36.i:                                       ; preds = %if.then30.i, %lor.lhs.false.i.if.end36.i_crit_edge
  %17 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %ctrl.i, align 2
  %call38.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add1.i, i16 noundef zeroext %18) #24
  br label %pci_std_enable_acs.exit

pci_std_enable_acs.exit:                          ; preds = %if.end36.i, %if.end3.pci_std_enable_acs.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl.i) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cap.i) #24
  br label %disable_acs_redir

disable_acs_redir:                                ; preds = %pci_std_enable_acs.exit, %if.end.disable_acs_redir_crit_edge, %entry.disable_acs_redir_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %p.i) #24
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl.i6) #24
  %19 = ptrtoint ptr %ctrl.i6 to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 -1, ptr %ctrl.i6, align 2, !annotation !731
  %20 = load ptr, ptr @disable_acs_redir_param, align 4
  %tobool.not.i7 = icmp eq ptr %20, null
  br i1 %tobool.not.i7, label %disable_acs_redir.pci_disable_acs_redir.exit_crit_edge, label %while.cond.preheader.i

disable_acs_redir.pci_disable_acs_redir.exit_crit_edge: ; preds = %disable_acs_redir
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_disable_acs_redir.exit

while.cond.preheader.i:                           ; preds = %disable_acs_redir
  %21 = ptrtoint ptr %p.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %p.i, align 4
  %22 = ptrtoint ptr %20 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %20, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool1.not74.i = icmp eq i8 %23, 0
  br i1 %tobool1.not74.i, label %while.cond.preheader.i.pci_disable_acs_redir.exit_crit_edge, label %while.cond.preheader.i.while.body.i_crit_edge

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

while.cond.preheader.i.pci_disable_acs_redir.exit_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_disable_acs_redir.exit

while.body.i:                                     ; preds = %if.end28.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  %storemerge75.i = phi ptr [ %incdec.ptr.i, %if.end28.i.while.body.i_crit_edge ], [ %20, %while.cond.preheader.i.while.body.i_crit_edge ]
  %call.i8 = call fastcc i32 @pci_dev_str_match(ptr noundef %dev, ptr noundef %storemerge75.i, ptr noundef nonnull %p.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i8)
  %cmp.i = icmp slt i32 %call.i8, 0
  br i1 %cmp.i, label %land.end.i, label %if.else.i

land.end.i:                                       ; preds = %while.body.i
  %.b68.i = load i1, ptr @pci_disable_acs_redir.__already_done, align 1
  br i1 %.b68.i, label %land.end.i.pci_disable_acs_redir.exit_crit_edge, label %if.then8.i, !prof !735

land.end.i.pci_disable_acs_redir.exit_crit_edge:  ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_disable_acs_redir.exit

if.then8.i:                                       ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #26
  store i1 true, ptr @pci_disable_acs_redir.__already_done, align 1
  %24 = load ptr, ptr @disable_acs_redir_param, align 4
  %call9.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %24) #28
  br label %pci_disable_acs_redir.exit

if.else.i:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i8)
  %cmp18.i = icmp eq i32 %call.i8, 1
  br i1 %cmp18.i, label %if.end32.i, label %if.end21.i

if.end21.i:                                       ; preds = %if.else.i
  %25 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %p.i, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %26, align 1
  %29 = zext i8 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.250)
  switch i8 %28, label %if.end21.i.pci_disable_acs_redir.exit_crit_edge [
    i8 59, label %if.end21.i.if.end28.i_crit_edge
    i8 44, label %if.end21.i.if.end28.i_crit_edge12
  ]

if.end21.i.if.end28.i_crit_edge12:                ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end28.i

if.end21.i.if.end28.i_crit_edge:                  ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end28.i

if.end21.i.pci_disable_acs_redir.exit_crit_edge:  ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_disable_acs_redir.exit

if.end28.i:                                       ; preds = %if.end21.i.if.end28.i_crit_edge, %if.end21.i.if.end28.i_crit_edge12
  %incdec.ptr.i = getelementptr i8, ptr %26, i32 1
  %30 = ptrtoint ptr %p.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %incdec.ptr.i, ptr %p.i, align 4
  %31 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %incdec.ptr.i, align 1
  %tobool1.not.i = icmp eq i8 %32, 0
  br i1 %tobool1.not.i, label %if.end28.i.pci_disable_acs_redir.exit_crit_edge, label %if.end28.i.while.body.i_crit_edge

if.end28.i.while.body.i_crit_edge:                ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i

if.end28.i.pci_disable_acs_redir.exit_crit_edge:  ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_disable_acs_redir.exit

if.end32.i:                                       ; preds = %if.else.i
  %call33.i = call i32 @pci_dev_specific_disable_acs_redir(ptr noundef %dev) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i)
  %tobool34.not.i = icmp eq i32 %call33.i, 0
  br i1 %tobool34.not.i, label %if.end32.i.pci_disable_acs_redir.exit_crit_edge, label %if.end36.i10

if.end32.i.pci_disable_acs_redir.exit_crit_edge:  ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_disable_acs_redir.exit

if.end36.i10:                                     ; preds = %if.end32.i
  %acs_cap.i9 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 77
  %33 = ptrtoint ptr %acs_cap.i9 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %acs_cap.i9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %34)
  %tobool38.not.i = icmp eq i16 %34, 0
  br i1 %tobool38.not.i, label %do.end42.i, label %if.end44.i

do.end42.i:                                       ; preds = %if.end36.i10
  call void @__sanitizer_cov_trace_pc() #26
  %dev43.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev43.i, ptr noundef nonnull @.str.111) #28
  br label %pci_disable_acs_redir.exit

if.end44.i:                                       ; preds = %if.end36.i10
  call void @__sanitizer_cov_trace_pc() #26
  %conv37.i = zext i16 %34 to i32
  %add.i11 = add nuw nsw i32 %conv37.i, 6
  %call45.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add.i11, ptr noundef nonnull %ctrl.i6) #24
  %35 = ptrtoint ptr %ctrl.i6 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %ctrl.i6, align 2
  %37 = and i16 %36, -45
  store i16 %37, ptr %ctrl.i6, align 2
  %call49.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add.i11, i16 noundef zeroext %37) #24
  %dev53.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev53.i, ptr noundef nonnull @.str.114) #28
  br label %pci_disable_acs_redir.exit

pci_disable_acs_redir.exit:                       ; preds = %if.end44.i, %do.end42.i, %if.end32.i.pci_disable_acs_redir.exit_crit_edge, %if.end28.i.pci_disable_acs_redir.exit_crit_edge, %if.end21.i.pci_disable_acs_redir.exit_crit_edge, %if.then8.i, %land.end.i.pci_disable_acs_redir.exit_crit_edge, %while.cond.preheader.i.pci_disable_acs_redir.exit_crit_edge, %disable_acs_redir.pci_disable_acs_redir.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl.i6) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %p.i) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_iov_state(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pci_store_saved_state(ptr nocapture noundef readonly %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %state_saved = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %state_saved to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %state_saved, align 1
  %1 = and i40 %bf.load, 262144
  %tobool.not = icmp eq i40 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %saved_cap_space = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %2 = ptrtoint ptr %saved_cap_space to i32
  call void @__asan_load4_noabort(i32 %2)
  %tmp.090 = load ptr, ptr %saved_cap_space, align 4
  %tobool4.not91 = icmp eq ptr %tmp.090, null
  br i1 %tobool4.not91, label %if.end.if.end8.i.i_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.if.end8.i.i_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8.i.i

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %tmp.093 = phi ptr [ %tmp.0, %for.body.for.body_crit_edge ], [ %tmp.090, %if.end.for.body_crit_edge ]
  %size.092 = phi i32 [ %add7, %for.body.for.body_crit_edge ], [ 72, %if.end.for.body_crit_edge ]
  %size6 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.093, i32 0, i32 1, i32 2
  %3 = ptrtoint ptr %size6 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %size6, align 4
  %add = add i32 %size.092, 8
  %add7 = add i32 %add, %4
  %5 = ptrtoint ptr %tmp.093 to i32
  call void @__asan_load4_noabort(i32 %5)
  %tmp.0 = load ptr, ptr %tmp.093, align 4
  %tobool4.not = icmp eq ptr %tmp.0, null
  br i1 %tobool4.not, label %for.body.if.end8.i.i_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.body.if.end8.i.i_crit_edge:                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.body.if.end8.i.i_crit_edge, %if.end.if.end8.i.i_crit_edge
  %size.0.lcssa = phi i32 [ 72, %if.end.if.end8.i.i_crit_edge ], [ %add7, %for.body.if.end8.i.i_crit_edge ]
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %size.0.lcssa, i32 noundef 3520) #29
  %tobool19.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool19.not, label %if.end8.i.i.cleanup_crit_edge, label %if.end21

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end21:                                         ; preds = %if.end8.i.i
  %saved_config_space = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 52
  %6 = call ptr @memcpy(ptr %call9.i.i, ptr %saved_config_space, i32 64)
  %7 = ptrtoint ptr %saved_cap_space to i32
  call void @__asan_load4_noabort(i32 %7)
  %tmp.194 = load ptr, ptr %saved_cap_space, align 4
  %tobool38.not95 = icmp eq ptr %tmp.194, null
  br i1 %tobool38.not95, label %if.end21.cleanup_crit_edge, label %for.body39.preheader

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.body39.preheader:                             ; preds = %if.end21
  %cap23 = getelementptr inbounds %struct.pci_saved_state, ptr %call9.i.i, i32 0, i32 1
  br label %for.body39

for.body39:                                       ; preds = %for.body39.for.body39_crit_edge, %for.body39.preheader
  %tmp.197 = phi ptr [ %tmp.1, %for.body39.for.body39_crit_edge ], [ %tmp.194, %for.body39.preheader ]
  %cap.096 = phi ptr [ %add.ptr44, %for.body39.for.body39_crit_edge ], [ %cap23, %for.body39.preheader ]
  %cap40 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.197, i32 0, i32 1
  %size41 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.197, i32 0, i32 1, i32 2
  %8 = ptrtoint ptr %size41 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %size41, align 4
  %add42 = add i32 %9, 8
  %10 = call ptr @memcpy(ptr %cap.096, ptr %cap40, i32 %add42)
  %add.ptr44 = getelementptr i8, ptr %cap.096, i32 %add42
  %11 = ptrtoint ptr %tmp.197 to i32
  call void @__asan_load4_noabort(i32 %11)
  %tmp.1 = load ptr, ptr %tmp.197, align 4
  %tobool38.not = icmp eq ptr %tmp.1, null
  br i1 %tobool38.not, label %for.body39.cleanup_crit_edge, label %for.body39.for.body39_crit_edge

for.body39.for.body39_crit_edge:                  ; preds = %for.body39
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body39

for.body39.cleanup_crit_edge:                     ; preds = %for.body39
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cleanup:                                          ; preds = %for.body39.cleanup_crit_edge, %if.end21.cleanup_crit_edge, %if.end8.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %if.end8.i.i.cleanup_crit_edge ], [ %call9.i.i, %if.end21.cleanup_crit_edge ], [ %call9.i.i, %for.body39.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_load_saved_state(ptr nocapture noundef %dev, ptr noundef readonly %state) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %state_saved = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %state_saved to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %state_saved, align 1
  %bf.clear = and i40 %bf.load, -262145
  store i40 %bf.clear, ptr %state_saved, align 1
  %tobool.not = icmp eq ptr %state, null
  br i1 %tobool.not, label %entry.cleanup24_crit_edge, label %if.end

entry.cleanup24_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup24

if.end:                                           ; preds = %entry
  %saved_config_space = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 52
  %1 = call ptr @memcpy(ptr %saved_config_space, ptr %state, i32 64)
  %size45 = getelementptr inbounds %struct.pci_saved_state, ptr %state, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %size45 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %size45, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool4.not46 = icmp eq i32 %3, 0
  br i1 %tobool4.not46, label %if.end.while.end_crit_edge, label %while.body.lr.ph

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end
  %cap2 = getelementptr inbounds %struct.pci_saved_state, ptr %state, i32 0, i32 1
  %saved_cap_space.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %4 = phi i32 [ %3, %while.body.lr.ph ], [ %21, %cleanup.while.body_crit_edge ]
  %size48 = phi ptr [ %size45, %while.body.lr.ph ], [ %size, %cleanup.while.body_crit_edge ]
  %cap.047 = phi ptr [ %cap2, %while.body.lr.ph ], [ %add.ptr19, %cleanup.while.body_crit_edge ]
  %5 = ptrtoint ptr %cap.047 to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %cap.047, align 4
  %7 = ptrtoint ptr %saved_cap_space.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %tmp.033.i = load ptr, ptr %saved_cap_space.i, align 4
  %tobool3.not34.i = icmp eq ptr %tmp.033.i, null
  br i1 %tobool3.not34.i, label %while.body.cleanup24_crit_edge, label %for.body.lr.ph.i

while.body.cleanup24_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup24

for.body.lr.ph.i:                                 ; preds = %while.body
  %cap_extended = getelementptr inbounds %struct.pci_cap_saved_data, ptr %cap.047, i32 0, i32 1
  %8 = ptrtoint ptr %cap_extended to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %cap_extended, align 2, !range !732
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %tmp.035.i = phi ptr [ %tmp.033.i, %for.body.lr.ph.i ], [ %tmp.0.i, %for.inc.i.for.body.i_crit_edge ]
  %cap_extended.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %cap_extended.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %cap_extended.i, align 2, !range !732
  call void @__sanitizer_cov_trace_cmp1(i8 %11, i8 %9)
  %cmp.i = icmp eq i8 %11, %9
  br i1 %cmp.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %cap4.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i, i32 0, i32 1
  %12 = ptrtoint ptr %cap4.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %cap4.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %6)
  %cmp12.i = icmp eq i16 %13, %6
  br i1 %cmp12.i, label %lor.lhs.false, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %14 = ptrtoint ptr %tmp.035.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %tmp.0.i = load ptr, ptr %tmp.035.i, align 4
  %tobool3.not.i = icmp eq ptr %tmp.0.i, null
  br i1 %tobool3.not.i, label %for.inc.i.cleanup24_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i

for.inc.i.cleanup24_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup24

lor.lhs.false:                                    ; preds = %land.lhs.true.i
  %size8 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i, i32 0, i32 1, i32 2
  %15 = ptrtoint ptr %size8 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %size8, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %4)
  %cmp.not = icmp eq i32 %16, %4
  br i1 %cmp.not, label %cleanup, label %lor.lhs.false.cleanup24_crit_edge

lor.lhs.false.cleanup24_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup24

cleanup:                                          ; preds = %lor.lhs.false
  %data = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i, i32 1
  %data14 = getelementptr %struct.pci_cap_saved_data, ptr %cap.047, i32 0, i32 3
  %17 = call ptr @memcpy(ptr %data, ptr %data14, i32 %4)
  %18 = ptrtoint ptr %size48 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %size48, align 4
  %add.ptr19 = getelementptr i8, ptr %data14, i32 %19
  %size = getelementptr inbounds %struct.pci_cap_saved_data, ptr %add.ptr19, i32 0, i32 2
  %20 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %size, align 4
  %tobool4.not = icmp eq i32 %21, 0
  br i1 %tobool4.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %if.end.while.end_crit_edge
  %22 = ptrtoint ptr %state_saved to i32
  call void @__asan_loadN_noabort(i32 %22, i32 5)
  %bf.load21 = load i40, ptr %state_saved, align 1
  %bf.set23 = or i40 %bf.load21, 262144
  store i40 %bf.set23, ptr %state_saved, align 1
  br label %cleanup24

cleanup24:                                        ; preds = %while.end, %lor.lhs.false.cleanup24_crit_edge, %for.inc.i.cleanup24_crit_edge, %while.body.cleanup24_crit_edge, %entry.cleanup24_crit_edge
  %retval.2 = phi i32 [ 0, %while.end ], [ 0, %entry.cleanup24_crit_edge ], [ -22, %for.inc.i.cleanup24_crit_edge ], [ -22, %lor.lhs.false.cleanup24_crit_edge ], [ -22, %while.body.cleanup24_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_load_and_free_saved_state(ptr nocapture noundef %dev, ptr nocapture noundef %state) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %state, align 4
  %state_saved.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %2 = ptrtoint ptr %state_saved.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 5)
  %bf.load.i = load i40, ptr %state_saved.i, align 1
  %bf.clear.i = and i40 %bf.load.i, -262145
  store i40 %bf.clear.i, ptr %state_saved.i, align 1
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.pci_load_saved_state.exit_crit_edge, label %if.end.i

entry.pci_load_saved_state.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_load_saved_state.exit

if.end.i:                                         ; preds = %entry
  %saved_config_space.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 52
  %3 = call ptr @memcpy(ptr %saved_config_space.i, ptr %1, i32 64)
  %size45.i = getelementptr inbounds %struct.pci_saved_state, ptr %1, i32 1, i32 0, i32 1
  %4 = ptrtoint ptr %size45.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %size45.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool4.not46.i = icmp eq i32 %5, 0
  br i1 %tobool4.not46.i, label %if.end.i.while.end.i_crit_edge, label %while.body.lr.ph.i

if.end.i.while.end.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end.i

while.body.lr.ph.i:                               ; preds = %if.end.i
  %cap2.i = getelementptr inbounds %struct.pci_saved_state, ptr %1, i32 0, i32 1
  %saved_cap_space.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  br label %while.body.i

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %6 = phi i32 [ %5, %while.body.lr.ph.i ], [ %23, %cleanup.i.while.body.i_crit_edge ]
  %size48.i = phi ptr [ %size45.i, %while.body.lr.ph.i ], [ %size.i, %cleanup.i.while.body.i_crit_edge ]
  %cap.047.i = phi ptr [ %cap2.i, %while.body.lr.ph.i ], [ %add.ptr19.i, %cleanup.i.while.body.i_crit_edge ]
  %7 = ptrtoint ptr %cap.047.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %cap.047.i, align 4
  %9 = ptrtoint ptr %saved_cap_space.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %tmp.033.i.i = load ptr, ptr %saved_cap_space.i.i, align 4
  %tobool3.not34.i.i = icmp eq ptr %tmp.033.i.i, null
  br i1 %tobool3.not34.i.i, label %while.body.i.pci_load_saved_state.exit_crit_edge, label %for.body.lr.ph.i.i

while.body.i.pci_load_saved_state.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_load_saved_state.exit

for.body.lr.ph.i.i:                               ; preds = %while.body.i
  %cap_extended.i = getelementptr inbounds %struct.pci_cap_saved_data, ptr %cap.047.i, i32 0, i32 1
  %10 = ptrtoint ptr %cap_extended.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %cap_extended.i, align 2, !range !732
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %tmp.035.i.i = phi ptr [ %tmp.033.i.i, %for.body.lr.ph.i.i ], [ %tmp.0.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %cap_extended.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %cap_extended.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %cap_extended.i.i, align 2, !range !732
  call void @__sanitizer_cov_trace_cmp1(i8 %13, i8 %11)
  %cmp.i.i = icmp eq i8 %13, %11
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %cap4.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %cap4.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %cap4.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %8)
  %cmp12.i.i = icmp eq i16 %15, %8
  br i1 %cmp12.i.i, label %lor.lhs.false.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %16 = ptrtoint ptr %tmp.035.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %tmp.0.i.i = load ptr, ptr %tmp.035.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %tmp.0.i.i, null
  br i1 %tobool3.not.i.i, label %for.inc.i.i.pci_load_saved_state.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i.i

for.inc.i.i.pci_load_saved_state.exit_crit_edge:  ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_load_saved_state.exit

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i.i
  %size8.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i, i32 0, i32 1, i32 2
  %17 = ptrtoint ptr %size8.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %size8.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %6)
  %cmp.not.i = icmp eq i32 %18, %6
  br i1 %cmp.not.i, label %cleanup.i, label %lor.lhs.false.i.pci_load_saved_state.exit_crit_edge

lor.lhs.false.i.pci_load_saved_state.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_load_saved_state.exit

cleanup.i:                                        ; preds = %lor.lhs.false.i
  %data.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %tmp.035.i.i, i32 1
  %data14.i = getelementptr %struct.pci_cap_saved_data, ptr %cap.047.i, i32 0, i32 3
  %19 = call ptr @memcpy(ptr %data.i, ptr %data14.i, i32 %6)
  %20 = ptrtoint ptr %size48.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %size48.i, align 4
  %add.ptr19.i = getelementptr i8, ptr %data14.i, i32 %21
  %size.i = getelementptr inbounds %struct.pci_cap_saved_data, ptr %add.ptr19.i, i32 0, i32 2
  %22 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %size.i, align 4
  %tobool4.not.i = icmp eq i32 %23, 0
  br i1 %tobool4.not.i, label %cleanup.i.while.end.i_crit_edge, label %cleanup.i.while.body.i_crit_edge

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i

cleanup.i.while.end.i_crit_edge:                  ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end.i

while.end.i:                                      ; preds = %cleanup.i.while.end.i_crit_edge, %if.end.i.while.end.i_crit_edge
  %24 = ptrtoint ptr %state_saved.i to i32
  call void @__asan_loadN_noabort(i32 %24, i32 5)
  %bf.load21.i = load i40, ptr %state_saved.i, align 1
  %bf.set23.i = or i40 %bf.load21.i, 262144
  store i40 %bf.set23.i, ptr %state_saved.i, align 1
  br label %pci_load_saved_state.exit

pci_load_saved_state.exit:                        ; preds = %while.end.i, %lor.lhs.false.i.pci_load_saved_state.exit_crit_edge, %for.inc.i.i.pci_load_saved_state.exit_crit_edge, %while.body.i.pci_load_saved_state.exit_crit_edge, %entry.pci_load_saved_state.exit_crit_edge
  %retval.2.i = phi i32 [ 0, %while.end.i ], [ 0, %entry.pci_load_saved_state.exit_crit_edge ], [ -22, %for.inc.i.i.pci_load_saved_state.exit_crit_edge ], [ -22, %lor.lhs.false.i.pci_load_saved_state.exit_crit_edge ], [ -22, %while.body.i.pci_load_saved_state.exit_crit_edge ]
  %25 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %state, align 4
  tail call void @kfree(ptr noundef %26) #24
  %27 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %state, align 4
  ret i32 %retval.2.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @pcibios_enable_device(ptr noundef %dev, i32 noundef %bars) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pci_enable_resources(ptr noundef %dev, i32 noundef %bars) #24
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_resources(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_reenable_device(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %enable_cnt.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 51
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %enable_cnt.i, i32 noundef 4) #24
  %0 = ptrtoint ptr %enable_cnt.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %enable_cnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %entry.return_crit_edge, label %if.then

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %call1 = tail call fastcc i32 @do_pci_enable_device(ptr noundef %dev, i32 noundef 131071)
  br label %return

return:                                           ; preds = %if.then, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call1, %if.then ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_pci_enable_device(ptr noundef %dev, i32 noundef %bars) unnamed_addr #5 align 64 {
entry:
  %cmd = alloca i16, align 2
  %pin = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd) #24
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cmd, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %pin) #24
  %1 = ptrtoint ptr %pin to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 -1, ptr %pin, align 1, !annotation !731
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %2 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp9.i = icmp eq i32 %3, 0
  br i1 %cmp9.i, label %entry.if.end_crit_edge, label %if.end11.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end11.i:                                       ; preds = %entry
  %pm_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %4 = ptrtoint ptr %pm_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %pm_cap.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not.i.i.i = icmp eq i8 %5, 0
  br i1 %tobool1.not.i.i.i, label %if.then2.i.i.i, label %if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge

if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge: ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_platform_power_transition.exit.i.i

if.then2.i.i.i:                                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  %6 = ptrtoint ptr %current_state.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %current_state.i, align 4
  br label %pci_platform_power_transition.exit.i.i

pci_platform_power_transition.exit.i.i:           ; preds = %if.then2.i.i.i, %if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge
  %runtime_d3cold.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %7 = ptrtoint ptr %runtime_d3cold.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 4)
  %bf.load.i48.i = load i32, ptr %runtime_d3cold.i.i, align 2
  %8 = and i32 %bf.load.i48.i, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i49.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i49.i, label %pci_platform_power_transition.exit.i.i.pci_set_power_state.exit_crit_edge, label %if.then.i50.i

pci_platform_power_transition.exit.i.i.pci_set_power_state.exit_crit_edge: ; preds = %pci_platform_power_transition.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_power_state.exit

if.then.i50.i:                                    ; preds = %pci_platform_power_transition.exit.i.i
  %subordinate.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %9 = ptrtoint ptr %subordinate.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %subordinate.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i.i, label %if.then.i50.i.pci_set_power_state.exit_crit_edge, label %if.then.i.i.i

if.then.i50.i.pci_set_power_state.exit_crit_edge: ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_power_state.exit

if.then.i.i.i:                                    ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_walk_bus(ptr noundef nonnull %10, ptr noundef nonnull @pci_resume_one, ptr noundef null) #24
  br label %pci_set_power_state.exit

pci_set_power_state.exit:                         ; preds = %if.then.i.i.i, %if.then.i50.i.pci_set_power_state.exit_crit_edge, %pci_platform_power_transition.exit.i.i.pci_set_power_state.exit_crit_edge
  %call1.i.i = tail call fastcc i32 @pci_raw_set_power_state(ptr noundef %dev, i32 noundef 0) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call1.i.i)
  %cmp = icmp sgt i32 %call1.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -5, i32 %call1.i.i)
  %cmp1.not = icmp eq i32 %call1.i.i, -5
  %or.cond = or i1 %cmp, %cmp1.not
  br i1 %or.cond, label %pci_set_power_state.exit.if.end_crit_edge, label %pci_set_power_state.exit.cleanup_crit_edge

pci_set_power_state.exit.cleanup_crit_edge:       ; preds = %pci_set_power_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_set_power_state.exit.if.end_crit_edge:        ; preds = %pci_set_power_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end:                                           ; preds = %pci_set_power_state.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %is_virtfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %11 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 5)
  %bf.load.i.i = load i40, ptr %is_virtfn.i.i, align 1
  %12 = and i40 %bf.load.i.i, 65536
  %tobool.not.i.i = icmp eq i40 %12, 0
  br i1 %tobool.not.i.i, label %if.end.pci_physfn.exit.i_crit_edge, label %if.then.i.i

if.end.pci_physfn.exit.i_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_physfn.exit.i

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %13 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 66
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  br label %pci_physfn.exit.i

pci_physfn.exit.i:                                ; preds = %if.then.i.i, %if.end.pci_physfn.exit.i_crit_edge
  %dev.addr.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %dev, %if.end.pci_physfn.exit.i_crit_edge ]
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i5.i = icmp eq ptr %19, null
  br i1 %tobool.not.i5.i, label %pci_physfn.exit.i.if.end4_crit_edge, label %pci_upstream_bridge.exit

pci_physfn.exit.i.if.end4_crit_edge:              ; preds = %pci_physfn.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4

pci_upstream_bridge.exit:                         ; preds = %pci_physfn.exit.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %17, i32 0, i32 4
  %20 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %self.i, align 4
  %tobool.not = icmp eq ptr %21, null
  br i1 %tobool.not, label %pci_upstream_bridge.exit.if.end4_crit_edge, label %if.then3

pci_upstream_bridge.exit.if.end4_crit_edge:       ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4

if.then3:                                         ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pcie_aspm_powersave_config_link(ptr noundef nonnull %21) #24
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %pci_upstream_bridge.exit.if.end4_crit_edge, %pci_physfn.exit.i.if.end4_crit_edge
  %call5 = tail call i32 @pcibios_enable_device(ptr noundef %dev, i32 noundef %bars)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %if.end4.cleanup_crit_edge, label %if.end8

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  tail call void @pci_fixup_device(i32 noundef 3, ptr noundef %dev) #24
  %22 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 5)
  %bf.load = load i40, ptr %is_virtfn.i.i, align 1
  %23 = and i40 %bf.load, 201326592
  %24 = icmp eq i40 %23, 0
  br i1 %24, label %if.end16, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end16:                                         ; preds = %if.end8
  %call17 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 61, ptr noundef nonnull %pin) #24
  %25 = ptrtoint ptr %pin to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %pin, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool18.not = icmp eq i8 %26, 0
  br i1 %tobool18.not, label %if.end16.cleanup_crit_edge, label %if.then19

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then19:                                        ; preds = %if.end16
  %call20 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %cmd) #24
  %27 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %cmd, align 2
  %29 = and i16 %28, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool21.not = icmp eq i16 %29, 0
  br i1 %tobool21.not, label %if.then19.cleanup_crit_edge, label %if.then22

if.then19.cleanup_crit_edge:                      ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then22:                                        ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #26
  %and24 = and i16 %28, -1025
  %call26 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %and24) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then22, %if.then19.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %pci_set_power_state.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1.i.i, %pci_set_power_state.exit.cleanup_crit_edge ], [ %call5, %if.end4.cleanup_crit_edge ], [ 0, %if.end8.cleanup_crit_edge ], [ 0, %if.then19.cleanup_crit_edge ], [ 0, %if.then22 ], [ 0, %if.end16.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %pin) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_enable_device_io(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @pci_enable_device_flags(ptr noundef %dev, i32 noundef 256)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_enable_device_flags(ptr noundef %dev, i32 noundef %flags) unnamed_addr #5 align 64 {
entry:
  %v.i.i = alloca i32, align 4
  %pmcsr.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %0 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %current_state, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %v.i.i) #24
  %2 = ptrtoint ptr %v.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %v.i.i, align 4, !annotation !731
  %error_state.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 43
  %3 = ptrtoint ptr %error_state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %error_state.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %4)
  %cmp.i.i.i = icmp eq i32 %4, 3
  br i1 %cmp.i.i.i, label %pci_device_is_present.exit.thread.i, label %pci_device_is_present.exit.i

pci_device_is_present.exit.thread.i:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v.i.i) #24
  br label %if.then.i

pci_device_is_present.exit.i:                     ; preds = %entry
  %bus.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %5 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bus.i.i, align 8
  %devfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %7 = ptrtoint ptr %devfn.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %devfn.i.i, align 4
  %call1.i.i = call zeroext i1 @pci_bus_read_dev_vendor_id(ptr noundef %6, i32 noundef %8, ptr noundef nonnull %v.i.i, i32 noundef 0) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v.i.i) #24
  br i1 %call1.i.i, label %if.else.i, label %pci_device_is_present.exit.i.if.then.i_crit_edge

pci_device_is_present.exit.i.if.then.i_crit_edge: ; preds = %pci_device_is_present.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then.i

if.then.i:                                        ; preds = %pci_device_is_present.exit.i.if.then.i_crit_edge, %pci_device_is_present.exit.thread.i
  %9 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 4, ptr %current_state, align 4
  br label %pci_update_current_state.exit

if.else.i:                                        ; preds = %pci_device_is_present.exit.i
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %10 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %if.else7.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr.i) #24
  %12 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 -1, ptr %pmcsr.i, align 2, !annotation !731
  %conv.i = zext i8 %11 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call4.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %pmcsr.i) #24
  %13 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %pmcsr.i, align 2
  %15 = and i16 %14, 3
  %and.i = zext i16 %15 to i32
  %16 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %and.i, ptr %current_state, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i) #24
  br label %pci_update_current_state.exit

if.else7.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  %17 = ptrtoint ptr %current_state to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %1, ptr %current_state, align 4
  br label %pci_update_current_state.exit

pci_update_current_state.exit:                    ; preds = %if.else7.i, %if.then2.i, %if.then.i
  %enable_cnt = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 51
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %enable_cnt, i32 noundef 4) #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !736
  call void @llvm.prefetch.p0(ptr %enable_cnt, i32 1, i32 3, i32 1) #24
  %18 = call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %enable_cnt, ptr %enable_cnt, i32 1, ptr elementtype(i32) %enable_cnt) #24, !srcloc !737
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %18, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !738
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i)
  %cmp = icmp sgt i32 %asmresult.i.i.i.i, 1
  br i1 %cmp, label %pci_update_current_state.exit.cleanup_crit_edge, label %if.end

pci_update_current_state.exit.cleanup_crit_edge:  ; preds = %pci_update_current_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %pci_update_current_state.exit
  %is_virtfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %19 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %19, i32 5)
  %bf.load.i.i = load i40, ptr %is_virtfn.i.i, align 1
  %20 = and i40 %bf.load.i.i, 65536
  %tobool.not.i.i = icmp eq i40 %20, 0
  br i1 %tobool.not.i.i, label %if.end.pci_physfn.exit.i_crit_edge, label %if.then.i.i

if.end.pci_physfn.exit.i_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_physfn.exit.i

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %21 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 66
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 8
  br label %pci_physfn.exit.i

pci_physfn.exit.i:                                ; preds = %if.then.i.i, %if.end.pci_physfn.exit.i_crit_edge
  %dev.addr.0.i.i = phi ptr [ %23, %if.then.i.i ], [ %dev, %if.end.pci_physfn.exit.i_crit_edge ]
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i, i32 0, i32 1
  %24 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i5.i = icmp eq ptr %27, null
  br i1 %tobool.not.i5.i, label %pci_physfn.exit.i.if.end3_crit_edge, label %pci_upstream_bridge.exit

pci_physfn.exit.i.if.end3_crit_edge:              ; preds = %pci_physfn.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end3

pci_upstream_bridge.exit:                         ; preds = %pci_physfn.exit.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %25, i32 0, i32 4
  %28 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %self.i, align 4
  %tobool.not = icmp eq ptr %29, null
  br i1 %tobool.not, label %pci_upstream_bridge.exit.if.end3_crit_edge, label %if.then2

pci_upstream_bridge.exit.if.end3_crit_edge:       ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end3

if.then2:                                         ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  call fastcc void @pci_enable_bridge(ptr noundef nonnull %29)
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %pci_upstream_bridge.exit.if.end3_crit_edge, %pci_physfn.exit.i.if.end3_crit_edge
  %flags5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 3
  %30 = ptrtoint ptr %flags5 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags5, align 4
  %and = and i32 %31, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp ne i32 %and, 0
  %or = zext i1 %tobool6.not to i32
  %flags5.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 3
  %32 = ptrtoint ptr %flags5.1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags5.1, align 4
  %and.1 = and i32 %33, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool6.not.1 = icmp eq i32 %and.1, 0
  %or.1 = select i1 %tobool6.not.1, i32 0, i32 2
  %bars.1.1 = or i32 %or.1, %or
  %flags5.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 3
  %34 = ptrtoint ptr %flags5.2 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags5.2, align 4
  %and.2 = and i32 %35, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool6.not.2 = icmp eq i32 %and.2, 0
  %or.2 = select i1 %tobool6.not.2, i32 0, i32 4
  %bars.1.2 = or i32 %bars.1.1, %or.2
  %flags5.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 3, i32 3
  %36 = ptrtoint ptr %flags5.3 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags5.3, align 4
  %and.3 = and i32 %37, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool6.not.3 = icmp eq i32 %and.3, 0
  %or.3 = select i1 %tobool6.not.3, i32 0, i32 8
  %bars.1.3 = or i32 %bars.1.2, %or.3
  %flags5.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4, i32 3
  %38 = ptrtoint ptr %flags5.4 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flags5.4, align 4
  %and.4 = and i32 %39, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool6.not.4 = icmp eq i32 %and.4, 0
  %or.4 = select i1 %tobool6.not.4, i32 0, i32 16
  %bars.1.4 = or i32 %bars.1.3, %or.4
  %flags5.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 5, i32 3
  %40 = ptrtoint ptr %flags5.5 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flags5.5, align 4
  %and.5 = and i32 %41, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5)
  %tobool6.not.5 = icmp eq i32 %and.5, 0
  %or.5 = select i1 %tobool6.not.5, i32 0, i32 32
  %bars.1.5 = or i32 %bars.1.4, %or.5
  %flags5.6 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 6, i32 3
  %42 = ptrtoint ptr %flags5.6 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags5.6, align 4
  %and.6 = and i32 %43, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6)
  %tobool6.not.6 = icmp eq i32 %and.6, 0
  %or.6 = select i1 %tobool6.not.6, i32 0, i32 64
  %bars.1.6 = or i32 %bars.1.5, %or.6
  %flags14 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 13, i32 3
  %44 = ptrtoint ptr %flags14 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %flags14, align 4
  %and15 = and i32 %45, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  %or19 = select i1 %tobool16.not, i32 0, i32 8192
  %bars.3 = or i32 %bars.1.6, %or19
  %flags14.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 14, i32 3
  %46 = ptrtoint ptr %flags14.1 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %flags14.1, align 4
  %and15.1 = and i32 %47, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.1)
  %tobool16.not.1 = icmp eq i32 %and15.1, 0
  %or19.1 = select i1 %tobool16.not.1, i32 0, i32 16384
  %bars.3.1 = or i32 %bars.3, %or19.1
  %flags14.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 15, i32 3
  %48 = ptrtoint ptr %flags14.2 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %flags14.2, align 4
  %and15.2 = and i32 %49, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.2)
  %tobool16.not.2 = icmp eq i32 %and15.2, 0
  %or19.2 = select i1 %tobool16.not.2, i32 0, i32 32768
  %bars.3.2 = or i32 %bars.3.1, %or19.2
  %flags14.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 16, i32 3
  %50 = ptrtoint ptr %flags14.3 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %flags14.3, align 4
  %and15.3 = and i32 %51, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.3)
  %tobool16.not.3 = icmp eq i32 %and15.3, 0
  %or19.3 = select i1 %tobool16.not.3, i32 0, i32 65536
  %bars.3.3 = or i32 %bars.3.2, %or19.3
  %call24 = call fastcc i32 @do_pci_enable_device(ptr noundef %dev, i32 noundef %bars.3.3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %cmp25 = icmp slt i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then26:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  %call.i.i51 = call zeroext i1 @__kasan_check_write(ptr noundef %enable_cnt, i32 noundef 4) #24
  call void @llvm.prefetch.p0(ptr %enable_cnt, i32 1, i32 3, i32 1) #24
  %52 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %enable_cnt, ptr %enable_cnt, i32 1, ptr elementtype(i32) %enable_cnt) #24, !srcloc !739
  br label %cleanup

cleanup:                                          ; preds = %if.then26, %if.end3.cleanup_crit_edge, %pci_update_current_state.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %pci_update_current_state.exit.cleanup_crit_edge ], [ %call24, %if.then26 ], [ %call24, %if.end3.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_enable_device_mem(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @pci_enable_device_flags(ptr noundef %dev, i32 noundef 512)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_enable_device(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @pci_enable_device_flags(ptr noundef %dev, i32 noundef 768)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcim_enable_device(ptr noundef %pdev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %call.i = tail call ptr @devres_find(ptr noundef %dev.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end.i:                                         ; preds = %entry
  %call1.i = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @pcim_release, i32 noundef 8, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.124) #24
  %tobool2.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool2.not.i, label %if.end.i.cleanup_crit_edge, label %get_pci_dr.exit

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

get_pci_dr.exit:                                  ; preds = %if.end.i
  %call6.i = tail call ptr @devres_get(ptr noundef %dev.i, ptr noundef nonnull %call1.i, ptr noundef null, ptr noundef null) #24
  %tobool.not = icmp eq ptr %call6.i, null
  br i1 %tobool.not, label %get_pci_dr.exit.cleanup_crit_edge, label %get_pci_dr.exit.if.end_crit_edge, !prof !740

get_pci_dr.exit.if.end_crit_edge:                 ; preds = %get_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

get_pci_dr.exit.cleanup_crit_edge:                ; preds = %get_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %get_pci_dr.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %retval.0.i27 = phi ptr [ %call6.i, %get_pci_dr.exit.if.end_crit_edge ], [ %call.i, %entry.if.end_crit_edge ]
  %0 = ptrtoint ptr %retval.0.i27 to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %retval.0.i27, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool4.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool4.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call.i21 = tail call fastcc i32 @pci_enable_device_flags(ptr noundef %pdev, i32 noundef 768) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i21)
  %tobool8.not = icmp eq i32 %call.i21, 0
  br i1 %tobool8.not, label %if.then9, label %if.end6.cleanup_crit_edge

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #26
  %is_managed = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %1 = ptrtoint ptr %is_managed to i32
  call void @__asan_loadN_noabort(i32 %1, i32 5)
  %bf.load10 = load i40, ptr %is_managed, align 1
  %bf.set = or i40 %bf.load10, 2097152
  store i40 %bf.set, ptr %is_managed, align 1
  %2 = ptrtoint ptr %retval.0.i27 to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load11 = load i8, ptr %retval.0.i27, align 4
  %bf.set13 = or i8 %bf.load11, -128
  store i8 %bf.set13, ptr %retval.0.i27, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then9, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %get_pci_dr.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %get_pci_dr.exit.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.then9 ], [ %call.i21, %if.end6.cleanup_crit_edge ], [ -12, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pcim_pin_device(ptr noundef %pdev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %is_managed.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %0 = ptrtoint ptr %is_managed.i.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load.i.i = load i40, ptr %is_managed.i.i, align 1
  %1 = and i40 %bf.load.i.i, 2097152
  %tobool.not.i = icmp eq i40 %1, 0
  br i1 %tobool.not.i, label %entry.if.end25.critedge_crit_edge, label %find_pci_dr.exit

entry.if.end25.critedge_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25.critedge

find_pci_dr.exit:                                 ; preds = %entry
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %call1.i = tail call ptr @devres_find(ptr noundef %dev.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool.not = icmp eq ptr %call1.i, null
  br i1 %tobool.not, label %find_pci_dr.exit.if.end25.critedge_crit_edge, label %lor.rhs

find_pci_dr.exit.if.end25.critedge_crit_edge:     ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25.critedge

lor.rhs:                                          ; preds = %find_pci_dr.exit
  %2 = ptrtoint ptr %call1.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %call1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool1.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool1.not, label %if.then23.critedge30, label %lor.rhs.if.then23_crit_edge, !prof !740

lor.rhs.if.then23_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then23

if.then23.critedge30:                             ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #26
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.11, i32 noundef 2101, i32 noundef 9, ptr noundef null) #24
  br label %if.then23

if.then23:                                        ; preds = %if.then23.critedge30, %lor.rhs.if.then23_crit_edge
  %3 = ptrtoint ptr %call1.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load24 = load i8, ptr %call1.i, align 4
  %bf.set = or i8 %bf.load24, 64
  store i8 %bf.set, ptr %call1.i, align 4
  br label %if.end25

if.end25.critedge:                                ; preds = %find_pci_dr.exit.if.end25.critedge_crit_edge, %entry.if.end25.critedge_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.11, i32 noundef 2101, i32 noundef 9, ptr noundef null) #24
  br label %if.end25

if.end25:                                         ; preds = %if.end25.critedge, %if.then23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @pcibios_device_add(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @pcibios_release_device(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @pcibios_disable_device(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @pcibios_penalize_isa_irq(i32 noundef %irq, i32 noundef %active) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_disable_enabled_device(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %pci_command.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %enable_cnt.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 51
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %enable_cnt.i, i32 noundef 4) #24
  %0 = ptrtoint ptr %enable_cnt.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %enable_cnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pci_command.i) #24
  %2 = ptrtoint ptr %pci_command.i to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %pci_command.i, align 2, !annotation !731
  %call.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %pci_command.i) #24
  %3 = ptrtoint ptr %pci_command.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %pci_command.i, align 2
  %5 = and i16 %4, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not.i = icmp eq i16 %5, 0
  br i1 %tobool.not.i, label %if.then.do_pci_disable_device.exit_crit_edge, label %if.then.i

if.then.do_pci_disable_device.exit_crit_edge:     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %do_pci_disable_device.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  %and2.i = and i16 %4, -5
  %6 = ptrtoint ptr %pci_command.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %and2.i, ptr %pci_command.i, align 2
  %call4.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %and2.i) #24
  br label %do_pci_disable_device.exit

do_pci_disable_device.exit:                       ; preds = %if.then.i, %if.then.do_pci_disable_device.exit_crit_edge
  call void @pcibios_disable_device(ptr noundef %dev) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pci_command.i) #24
  br label %if.end

if.end:                                           ; preds = %do_pci_disable_device.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_disable_device(ptr noundef %dev) #5 align 64 {
entry:
  %pci_command.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %is_managed.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %is_managed.i.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load.i.i = load i40, ptr %is_managed.i.i, align 1
  %1 = and i40 %bf.load.i.i, 2097152
  %tobool.not.i = icmp eq i40 %1, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %find_pci_dr.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

find_pci_dr.exit:                                 ; preds = %entry
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %call1.i = tail call ptr @devres_find(ptr noundef %dev.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool.not = icmp eq ptr %call1.i, null
  br i1 %tobool.not, label %find_pci_dr.exit.if.end_crit_edge, label %if.then

find_pci_dr.exit.if.end_crit_edge:                ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  %2 = ptrtoint ptr %call1.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %call1.i, align 4
  %bf.clear = and i8 %bf.load, 127
  store i8 %bf.clear, ptr %call1.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %find_pci_dr.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %enable_cnt = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 51
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %enable_cnt, i32 noundef 4) #24
  %3 = ptrtoint ptr %enable_cnt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %enable_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp = icmp slt i32 %4, 1
  br i1 %cmp, label %land.rhs, label %if.end.if.end35_crit_edge

if.end.if.end35_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end35

land.rhs:                                         ; preds = %if.end
  %.b60 = load i1, ptr @pci_disable_device.__already_done, align 1
  br i1 %.b60, label %land.rhs.if.end35_crit_edge, label %if.then9, !prof !735

land.rhs.if.end35_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end35

if.then9:                                         ; preds = %land.rhs
  store i1 true, ptr @pci_disable_device.__already_done, align 1
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %call20 = tail call ptr @dev_driver_string(ptr noundef %dev19) #24
  %init_name.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 3
  %5 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i62 = icmp eq ptr %6, null
  br i1 %tobool.not.i62, label %if.end.i, label %if.then9.dev_name.exit_crit_edge

if.then9.dev_name.exit_crit_edge:                 ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #26
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #26
  %7 = ptrtoint ptr %dev19 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev19, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then9.dev_name.exit_crit_edge
  %retval.0.i63 = phi ptr [ %8, %if.end.i ], [ %6, %if.then9.dev_name.exit_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.11, i32 noundef 2197, i32 noundef 9, ptr noundef nonnull @.str.15, ptr noundef %call20, ptr noundef %retval.0.i63) #24
  br label %if.end35

if.end35:                                         ; preds = %dev_name.exit, %land.rhs.if.end35_crit_edge, %if.end.if.end35_crit_edge
  %call.i.i61 = tail call zeroext i1 @__kasan_check_write(ptr noundef %enable_cnt, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !741
  tail call void @llvm.prefetch.p0(ptr %enable_cnt, i32 1, i32 3, i32 1) #24
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %enable_cnt, ptr %enable_cnt, i32 1, ptr elementtype(i32) %enable_cnt) #24, !srcloc !742
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !743
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp45.not = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp45.not, label %if.end47, label %if.end35.cleanup_crit_edge

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end47:                                         ; preds = %if.end35
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pci_command.i) #24
  %10 = ptrtoint ptr %pci_command.i to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 -1, ptr %pci_command.i, align 2, !annotation !731
  %call.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %pci_command.i) #24
  %11 = ptrtoint ptr %pci_command.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %pci_command.i, align 2
  %13 = and i16 %12, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %tobool.not.i64 = icmp eq i16 %13, 0
  br i1 %tobool.not.i64, label %if.end47.do_pci_disable_device.exit_crit_edge, label %if.then.i65

if.end47.do_pci_disable_device.exit_crit_edge:    ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #26
  br label %do_pci_disable_device.exit

if.then.i65:                                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #26
  %and2.i = and i16 %12, -5
  %14 = ptrtoint ptr %pci_command.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %and2.i, ptr %pci_command.i, align 2
  %call4.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %and2.i) #24
  br label %do_pci_disable_device.exit

do_pci_disable_device.exit:                       ; preds = %if.then.i65, %if.end47.do_pci_disable_device.exit_crit_edge
  call void @pcibios_disable_device(ptr noundef %dev) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pci_command.i) #24
  %15 = ptrtoint ptr %is_managed.i.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 5)
  %bf.load48 = load i40, ptr %is_managed.i.i, align 1
  %bf.clear49 = and i40 %bf.load48, -17179869185
  store i40 %bf.clear49, ptr %is_managed.i.i, align 1
  br label %cleanup

cleanup:                                          ; preds = %do_pci_disable_device.exit, %if.end35.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @pcibios_set_pcie_reset_state(ptr noundef %dev, i32 noundef %state) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -22
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_set_pcie_reset_state(ptr noundef %dev, i32 noundef %state) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pcibios_set_pcie_reset_state(ptr noundef %dev, i32 noundef %state)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pcie_clear_device_status(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %sta = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %sta) #24
  %0 = ptrtoint ptr %sta to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %sta, align 2, !annotation !731
  %call = call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 10, ptr noundef nonnull %sta) #24
  %1 = ptrtoint ptr %sta to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %sta, align 2
  %call1 = call i32 @pcie_capability_write_word(ptr noundef %dev, i32 noundef 10, i16 noundef zeroext %2) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %sta) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_read_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_write_word(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pcie_clear_root_pme_status(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @pcie_capability_clear_and_set_dword(ptr noundef %dev, i32 noundef 32, i32 noundef 0, i32 noundef 65536) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pci_check_pme_status(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %pmcsr = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr) #24
  %0 = ptrtoint ptr %pmcsr to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %pmcsr, align 2, !annotation !731
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %1 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %pm_cap, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = zext i8 %2 to i32
  %add = add nuw nsw i32 %conv, 4
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %pmcsr) #24
  %3 = ptrtoint ptr %pmcsr to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %pmcsr, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %4)
  %tobool3.not = icmp sgt i16 %4, -1
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %or = or i16 %4, -32768
  %5 = and i16 %4, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool10.not = icmp eq i16 %5, 0
  %and13 = and i16 %or, -257
  %spec.select = select i1 %tobool10.not, i16 %or, i16 %and13
  %6 = xor i1 %tobool10.not, true
  %7 = ptrtoint ptr %pmcsr to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %spec.select, ptr %pmcsr, align 2
  %call16 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add, i16 noundef zeroext %spec.select) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %6, %if.end5 ], [ false, %entry.cleanup_crit_edge ], [ false, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr) #24
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_pme_wakeup_bus(ptr noundef %bus) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %bus, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_walk_bus(ptr noundef nonnull %bus, ptr noundef nonnull @pci_pme_wakeup, ptr noundef nonnull inttoptr (i32 1 to ptr)) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_pme_wakeup(ptr noundef %dev, ptr noundef readnone %pme_poll_reset) #5 align 64 {
entry:
  %pmcsr.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %pme_poll_reset, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %pme_poll = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %pme_poll to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %pme_poll, align 2
  %1 = and i32 %bf.load, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  %bf.clear4 = and i32 %bf.load, -67108865
  %2 = ptrtoint ptr %pme_poll to i32
  call void @__asan_storeN_noabort(i32 %2, i32 4)
  store i32 %bf.clear4, ptr %pme_poll, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr.i) #24
  %3 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %pmcsr.i, align 2, !annotation !731
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %4 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.end.pci_check_pme_status.exit.thread_crit_edge, label %if.end.i

if.end.pci_check_pme_status.exit.thread_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_check_pme_status.exit.thread

if.end.i:                                         ; preds = %if.end
  %conv.i = zext i8 %5 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %pmcsr.i) #24
  %6 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %pmcsr.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %7)
  %tobool3.not.i = icmp sgt i16 %7, -1
  br i1 %tobool3.not.i, label %if.end.i.pci_check_pme_status.exit.thread_crit_edge, label %pci_check_pme_status.exit

if.end.i.pci_check_pme_status.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_check_pme_status.exit.thread

pci_check_pme_status.exit.thread:                 ; preds = %if.end.i.pci_check_pme_status.exit.thread_crit_edge, %if.end.pci_check_pme_status.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i) #24
  br label %if.end8

pci_check_pme_status.exit:                        ; preds = %if.end.i
  %or.i = or i16 %7, -32768
  %8 = and i16 %7, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool10.not.i = icmp eq i16 %8, 0
  %and13.i = and i16 %or.i, -257
  %spec.select.i = select i1 %tobool10.not.i, i16 %or.i, i16 %and13.i
  %9 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %spec.select.i, ptr %pmcsr.i, align 2
  %call16.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add.i, i16 noundef zeroext %spec.select.i) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i) #24
  br i1 %tobool10.not.i, label %pci_check_pme_status.exit.if.end8_crit_edge, label %if.then5

pci_check_pme_status.exit.if.end8_crit_edge:      ; preds = %pci_check_pme_status.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8

if.then5:                                         ; preds = %pci_check_pme_status.exit
  call void @__sanitizer_cov_trace_pc() #26
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void @pm_wakeup_dev_event(ptr noundef %dev1.i, i32 noundef 100, i1 noundef zeroext false) #24
  %call.i13 = call i32 @__pm_runtime_resume(ptr noundef %dev1.i, i32 noundef 1) #24
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %pci_check_pme_status.exit.if.end8_crit_edge, %pci_check_pme_status.exit.thread
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @pci_pme_capable(ptr nocapture noundef readonly %dev, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %0 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pm_cap, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %pme_support = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %2 = ptrtoint ptr %pme_support to i32
  call void @__asan_loadN_noabort(i32 %2, i32 4)
  %bf.load = load i32, ptr %pme_support, align 2
  %bf.lshr = lshr i32 %bf.load, 27
  %shl = shl nuw i32 1, %state
  %and = and i32 %bf.lshr, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1 = icmp ne i32 %and, 0
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i1 [ %tobool1, %if.end ], [ false, %entry.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_pme_restore(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %pmcsr = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr) #24
  %0 = ptrtoint ptr %pmcsr to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %pmcsr, align 2, !annotation !731
  %pme_support = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %1 = ptrtoint ptr %pme_support to i32
  call void @__asan_loadN_noabort(i32 %1, i32 4)
  %bf.load = load i32, ptr %pme_support, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load)
  %tobool.not = icmp ult i32 %bf.load, 134217728
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %2 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %pm_cap, align 1
  %conv = zext i8 %3 to i32
  %add = add nuw nsw i32 %conv, 4
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %pmcsr) #24
  %4 = ptrtoint ptr %pme_support to i32
  call void @__asan_loadN_noabort(i32 %4, i32 4)
  %bf.load1 = load i32, ptr %pme_support, align 2
  %5 = and i32 %bf.load1, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not = icmp eq i32 %5, 0
  %6 = ptrtoint ptr %pmcsr to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %pmcsr, align 2
  %8 = and i16 %7, 32511
  %. = select i1 %tobool3.not, i16 -32768, i16 256
  %9 = or i16 %8, %.
  store i16 %9, ptr %pmcsr, align 2
  %10 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %pm_cap, align 1
  %conv17 = zext i8 %11 to i32
  %add18 = add nuw nsw i32 %conv17, 4
  %call19 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add18, i16 noundef zeroext %9) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext %enable) #5 align 64 {
entry:
  %pmcsr.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr.i) #24
  %0 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %pmcsr.i, align 2, !annotation !731
  %pme_support.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %1 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %1, i32 4)
  %bf.load.i = load i32, ptr %pme_support.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load.i)
  %tobool.not.i = icmp ult i32 %bf.load.i, 134217728
  br i1 %tobool.not.i, label %entry.__pci_pme_active.exit_crit_edge, label %if.end.i

entry.__pci_pme_active.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_pme_active.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %2 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %pm_cap.i, align 1
  %conv.i = zext i8 %3 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %pmcsr.i) #24
  %4 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %pmcsr.i, align 2
  %6 = or i16 %5, -32512
  %7 = and i16 %6, -257
  %spec.select.i = select i1 %enable, i16 %6, i16 %7
  store i16 %spec.select.i, ptr %pmcsr.i, align 2
  %8 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %pm_cap.i, align 1
  %conv9.i = zext i8 %9 to i32
  %add10.i = add nuw nsw i32 %conv9.i, 4
  %call11.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add10.i, i16 noundef zeroext %spec.select.i) #24
  br label %__pci_pme_active.exit

__pci_pme_active.exit:                            ; preds = %if.end.i, %entry.__pci_pme_active.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i) #24
  %10 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %10, i32 4)
  %bf.load = load i32, ptr %pme_support.i, align 2
  %11 = and i32 %bf.load, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool1.not = icmp eq i32 %11, 0
  br i1 %tobool1.not, label %__pci_pme_active.exit.do.body26_crit_edge, label %if.then

__pci_pme_active.exit.do.body26_crit_edge:        ; preds = %__pci_pme_active.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.body26

if.then:                                          ; preds = %__pci_pme_active.exit
  br i1 %enable, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %12 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %12, i32 noundef 3264, i32 noundef 12) #30
  %tobool4.not = icmp eq ptr %call7.i, null
  br i1 %tobool4.not, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then3
  %dev7 = getelementptr inbounds %struct.pci_pme_device, ptr %call7.i, i32 0, i32 1
  %13 = ptrtoint ptr %dev7 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %dev, ptr %dev7, align 8
  call void @mutex_lock_nested(ptr noundef nonnull @pci_pme_list_mutex, i32 noundef 0) #24
  %14 = load ptr, ptr @pci_pme_list, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i, ptr noundef nonnull @pci_pme_list, ptr noundef %14) #24
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_add.exit_crit_edge

if.end.list_add.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call7.i, ptr %prev1.i.i, align 4
  %16 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %14, ptr %call7.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i, i32 0, i32 1
  %17 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @pci_pme_list, ptr %prev3.i.i, align 4
  store volatile ptr %call7.i, ptr @pci_pme_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end.list_add.exit_crit_edge
  %18 = load volatile ptr, ptr @pci_pme_list, align 4
  %cmp.i.not.i = icmp eq ptr %18, @pci_pme_list
  br i1 %cmp.i.not.i, label %list_add.exit.do.body26.sink.split_crit_edge, label %list_is_singular.exit

list_add.exit.do.body26.sink.split_crit_edge:     ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.body26.sink.split

list_is_singular.exit:                            ; preds = %list_add.exit
  %19 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @pci_pme_list, i32 0, i32 1), align 4
  %cmp.i.not = icmp eq ptr %18, %19
  br i1 %cmp.i.not, label %if.then10, label %list_is_singular.exit.do.body26.sink.split_crit_edge

list_is_singular.exit.do.body26.sink.split_crit_edge: ; preds = %list_is_singular.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.body26.sink.split

if.then10:                                        ; preds = %list_is_singular.exit
  call void @__sanitizer_cov_trace_pc() #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezable_wq to i32))
  %20 = load ptr, ptr @system_freezable_wq, align 4
  %call.i55 = call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %20, ptr noundef nonnull @pci_pme_work, i32 noundef 100) #24
  br label %do.body26.sink.split

if.else:                                          ; preds = %if.then
  call void @mutex_lock_nested(ptr noundef nonnull @pci_pme_list_mutex, i32 noundef 0) #24
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.else
  %pme_dev.0.in = phi ptr [ @pci_pme_list, %if.else ], [ %pme_dev.0, %for.body.for.cond_crit_edge ]
  %21 = ptrtoint ptr %pme_dev.0.in to i32
  call void @__asan_load4_noabort(i32 %21)
  %pme_dev.0 = load ptr, ptr %pme_dev.0.in, align 4
  %cmp.not = icmp eq ptr %pme_dev.0, @pci_pme_list
  br i1 %cmp.not, label %for.cond.do.body26.sink.split_crit_edge, label %for.body

for.cond.do.body26.sink.split_crit_edge:          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.body26.sink.split

for.body:                                         ; preds = %for.cond
  %dev15 = getelementptr inbounds %struct.pci_pme_device, ptr %pme_dev.0, i32 0, i32 1
  %22 = ptrtoint ptr %dev15 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev15, align 4
  %cmp16 = icmp eq ptr %23, %dev
  br i1 %cmp16, label %if.then17, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.cond

if.then17:                                        ; preds = %for.body
  %call.i.i56 = call zeroext i1 @__list_del_entry_valid(ptr noundef %pme_dev.0) #24
  br i1 %call.i.i56, label %if.end.i.i57, label %if.then17.list_del.exit_crit_edge

if.then17.list_del.exit_crit_edge:                ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #26
  br label %list_del.exit

if.end.i.i57:                                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #26
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %pme_dev.0, i32 0, i32 1
  %24 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i.i, align 4
  %26 = ptrtoint ptr %pme_dev.0 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pme_dev.0, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev1.i.i.i, align 4
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %27, ptr %25, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i57, %if.then17.list_del.exit_crit_edge
  %30 = ptrtoint ptr %pme_dev.0 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 256 to ptr), ptr %pme_dev.0, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %pme_dev.0, i32 0, i32 1
  %31 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  call void @kfree(ptr noundef %pme_dev.0) #24
  br label %do.body26.sink.split

cleanup:                                          ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #26
  %dev6 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev6, ptr noundef nonnull @.str.16) #28
  br label %do.end40

do.body26.sink.split:                             ; preds = %list_del.exit, %for.cond.do.body26.sink.split_crit_edge, %if.then10, %list_is_singular.exit.do.body26.sink.split_crit_edge, %list_add.exit.do.body26.sink.split_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @pci_pme_list_mutex) #24
  br label %do.body26

do.body26:                                        ; preds = %do.body26.sink.split, %__pci_pme_active.exit.do.body26_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_pme_active.__UNIQUE_ID_ddebug240, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_pme_active, %do.end40)) #24
          to label %if.then35 [label %do.end40], !srcloc !733

if.then35:                                        ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #26
  %dev36 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %cond = select i1 %enable, ptr @.str.21, ptr @.str.22
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_pme_active.__UNIQUE_ID_ddebug240, ptr noundef %dev36, ptr noundef nonnull @.str.20, ptr noundef nonnull %cond) #24
  br label %do.end40

do.end40:                                         ; preds = %if.then35, %do.body26, %cleanup
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_enable_wake(ptr noundef %pci_dev, i32 noundef %state, i1 noundef zeroext %enable) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %enable, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %can_wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 1
  %0 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %land.lhs.true.return_crit_edge, label %device_may_wakeup.exit

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

device_may_wakeup.exit:                           ; preds = %land.lhs.true
  %wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 6
  %1 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %2, null
  br i1 %tobool2.i.not, label %device_may_wakeup.exit.return_crit_edge, label %device_may_wakeup.exit.if.end_crit_edge

device_may_wakeup.exit.if.end_crit_edge:          ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

device_may_wakeup.exit.return_crit_edge:          ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %device_may_wakeup.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %subordinate.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 2
  %3 = ptrtoint ptr %subordinate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %subordinate.i.i.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %4, null
  br i1 %tobool.i.not.i.i, label %if.end.if.end.i_crit_edge, label %pci_power_manageable.exit.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

pci_power_manageable.exit.i:                      ; preds = %if.end
  %bridge_d3.i.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 33
  %5 = ptrtoint ptr %bridge_d3.i.i to i32
  call void @__asan_loadN_noabort(i32 %5, i32 4)
  %bf.load.i.i = load i32, ptr %bridge_d3.i.i, align 2
  %6 = and i32 %bf.load.i.i, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not.i = icmp eq i32 %6, 0
  br i1 %tobool.i.not.i, label %pci_power_manageable.exit.i.return_crit_edge, label %pci_power_manageable.exit.i.if.end.i_crit_edge

pci_power_manageable.exit.i.if.end.i_crit_edge:   ; preds = %pci_power_manageable.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

pci_power_manageable.exit.i.return_crit_edge:     ; preds = %pci_power_manageable.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end.i:                                         ; preds = %pci_power_manageable.exit.i.if.end.i_crit_edge, %if.end.if.end.i_crit_edge
  %wakeup_prepared.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 33
  %7 = ptrtoint ptr %wakeup_prepared.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 4)
  %bf.load.i5 = load i32, ptr %wakeup_prepared.i, align 2
  %8 = and i32 %bf.load.i5, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %9 = icmp eq i32 %8, 0
  %cmp.i = xor i1 %9, %enable
  br i1 %cmp.i, label %if.end.i.return_crit_edge, label %if.end8.i

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end8.i:                                        ; preds = %if.end.i
  br i1 %enable, label %if.then10.i, label %if.else25.i

if.then10.i:                                      ; preds = %if.end8.i
  %pm_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 32
  %10 = ptrtoint ptr %pm_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %pm_cap.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.i.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i.i, label %if.then10.i.return_crit_edge, label %pci_pme_capable.exit.i

if.then10.i.return_crit_edge:                     ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

pci_pme_capable.exit.i:                           ; preds = %if.then10.i
  %bf.lshr.i.i = lshr i32 %bf.load.i5, 27
  %shl.i.i = shl nuw i32 1, %state
  %and.i.i = and i32 %bf.lshr.i.i, %shl.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool1.i.i = icmp ne i32 %and.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bf.load.i5)
  %tobool1.i51.i = icmp slt i32 %bf.load.i5, 0
  %or.cond.i = select i1 %tobool1.i.i, i1 true, i1 %tobool1.i51.i
  br i1 %or.cond.i, label %if.then20.i, label %pci_pme_capable.exit.i.return_crit_edge

pci_pme_capable.exit.i.return_crit_edge:          ; preds = %pci_pme_capable.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.then20.i:                                      ; preds = %pci_pme_capable.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %pci_dev, i1 noundef zeroext true) #24
  %12 = ptrtoint ptr %wakeup_prepared.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 4)
  %bf.load22.i = load i32, ptr %wakeup_prepared.i, align 2
  %bf.set.i = or i32 %bf.load22.i, 262144
  br label %cleanup.sink.split.i

if.else25.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %pci_dev, i1 noundef zeroext false) #24
  %13 = ptrtoint ptr %wakeup_prepared.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %bf.load28.i = load i32, ptr %wakeup_prepared.i, align 2
  %bf.clear29.i = and i32 %bf.load28.i, -262145
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.else25.i, %if.then20.i
  %bf.clear29.sink.i = phi i32 [ %bf.clear29.i, %if.else25.i ], [ %bf.set.i, %if.then20.i ]
  %14 = ptrtoint ptr %wakeup_prepared.i to i32
  call void @__asan_storeN_noabort(i32 %14, i32 4)
  store i32 %bf.clear29.sink.i, ptr %wakeup_prepared.i, align 2
  br label %return

return:                                           ; preds = %cleanup.sink.split.i, %pci_pme_capable.exit.i.return_crit_edge, %if.then10.i.return_crit_edge, %if.end.i.return_crit_edge, %pci_power_manageable.exit.i.return_crit_edge, %device_may_wakeup.exit.return_crit_edge, %land.lhs.true.return_crit_edge
  %retval.0 = phi i32 [ -22, %device_may_wakeup.exit.return_crit_edge ], [ 0, %pci_power_manageable.exit.i.return_crit_edge ], [ 0, %if.end.i.return_crit_edge ], [ -19, %if.then10.i.return_crit_edge ], [ -19, %pci_pme_capable.exit.i.return_crit_edge ], [ 0, %cleanup.sink.split.i ], [ -22, %land.lhs.true.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_wake_from_d3(ptr noundef %dev, i1 noundef zeroext %enable) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %0 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %entry.cond.false_crit_edge, label %pci_pme_capable.exit

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.false

pci_pme_capable.exit:                             ; preds = %entry
  %pme_support.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %2 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 4)
  %bf.load.i = load i32, ptr %pme_support.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load.i)
  %tobool1.i.not = icmp sgt i32 %bf.load.i, -1
  br i1 %tobool1.i.not, label %pci_pme_capable.exit.cond.false_crit_edge, label %cond.true

pci_pme_capable.exit.cond.false_crit_edge:        ; preds = %pci_pme_capable.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.false

cond.true:                                        ; preds = %pci_pme_capable.exit
  br i1 %enable, label %land.lhs.true.i, label %cond.true.if.end.i7_crit_edge

cond.true.if.end.i7_crit_edge:                    ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i7

land.lhs.true.i:                                  ; preds = %cond.true
  %can_wakeup.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %3 = ptrtoint ptr %can_wakeup.i.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load.i.i = load i16, ptr %can_wakeup.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i16 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %land.lhs.true.i.cond.end_crit_edge, label %device_may_wakeup.exit.i

land.lhs.true.i.cond.end_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

device_may_wakeup.exit.i:                         ; preds = %land.lhs.true.i
  %wakeup.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 6
  %4 = ptrtoint ptr %wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wakeup.i.i, align 8
  %tobool2.i.not.i = icmp eq ptr %5, null
  br i1 %tobool2.i.not.i, label %device_may_wakeup.exit.i.cond.end_crit_edge, label %device_may_wakeup.exit.i.if.end.i7_crit_edge

device_may_wakeup.exit.i.if.end.i7_crit_edge:     ; preds = %device_may_wakeup.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i7

device_may_wakeup.exit.i.cond.end_crit_edge:      ; preds = %device_may_wakeup.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end.i7:                                        ; preds = %device_may_wakeup.exit.i.if.end.i7_crit_edge, %cond.true.if.end.i7_crit_edge
  %subordinate.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %6 = ptrtoint ptr %subordinate.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %subordinate.i.i.i.i, align 4
  %tobool.i.not.i.i.i = icmp ne ptr %7, null
  %8 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 4)
  %bf.load.i5.i.pr = load i32, ptr %pme_support.i, align 2
  %9 = and i32 %bf.load.i5.i.pr, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.not.i.i = icmp eq i32 %9, 0
  %or.cond48 = select i1 %tobool.i.not.i.i.i, i1 %tobool.i.not.i.i, i1 false
  br i1 %or.cond48, label %if.end.i7.cond.end_crit_edge, label %if.end.i.i

if.end.i7.cond.end_crit_edge:                     ; preds = %if.end.i7
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end.i.i:                                       ; preds = %if.end.i7
  %10 = and i32 %bf.load.i5.i.pr, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %11 = icmp eq i32 %10, 0
  %cmp.i.i = xor i1 %11, %enable
  br i1 %cmp.i.i, label %if.end.i.i.cond.end_crit_edge, label %if.end8.i.i

if.end.i.i.cond.end_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end8.i.i:                                      ; preds = %if.end.i.i
  br i1 %enable, label %pci_pme_capable.exit.i.i, label %if.else25.i.i

pci_pme_capable.exit.i.i:                         ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bf.load.i5.i.pr)
  %tobool1.i51.i.i = icmp slt i32 %bf.load.i5.i.pr, 0
  br i1 %tobool1.i51.i.i, label %if.then20.i.i, label %pci_pme_capable.exit.i.i.cond.end_crit_edge

pci_pme_capable.exit.i.i.cond.end_crit_edge:      ; preds = %pci_pme_capable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.then20.i.i:                                    ; preds = %pci_pme_capable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext true) #24
  %12 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 4)
  %bf.load22.i.i = load i32, ptr %pme_support.i, align 2
  %bf.set.i.i = or i32 %bf.load22.i.i, 262144
  br label %cleanup.sink.split.i.i

if.else25.i.i:                                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext false) #24
  %13 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %bf.load28.i.i = load i32, ptr %pme_support.i, align 2
  %bf.clear29.i.i = and i32 %bf.load28.i.i, -262145
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %if.else25.i.i, %if.then20.i.i
  %bf.clear29.sink.i.i = phi i32 [ %bf.clear29.i.i, %if.else25.i.i ], [ %bf.set.i.i, %if.then20.i.i ]
  %14 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_storeN_noabort(i32 %14, i32 4)
  store i32 %bf.clear29.sink.i.i, ptr %pme_support.i, align 2
  br label %cond.end

cond.false:                                       ; preds = %pci_pme_capable.exit.cond.false_crit_edge, %entry.cond.false_crit_edge
  br i1 %enable, label %land.lhs.true.i12, label %cond.false.if.end.i18_crit_edge

cond.false.if.end.i18_crit_edge:                  ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i18

land.lhs.true.i12:                                ; preds = %cond.false
  %can_wakeup.i.i9 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %15 = ptrtoint ptr %can_wakeup.i.i9 to i32
  call void @__asan_load2_noabort(i32 %15)
  %bf.load.i.i10 = load i16, ptr %can_wakeup.i.i9, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i.i10)
  %tobool.not.i.i11 = icmp sgt i16 %bf.load.i.i10, -1
  br i1 %tobool.not.i.i11, label %land.lhs.true.i12.cond.end_crit_edge, label %device_may_wakeup.exit.i15

land.lhs.true.i12.cond.end_crit_edge:             ; preds = %land.lhs.true.i12
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

device_may_wakeup.exit.i15:                       ; preds = %land.lhs.true.i12
  %wakeup.i.i13 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 6
  %16 = ptrtoint ptr %wakeup.i.i13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %wakeup.i.i13, align 8
  %tobool2.i.not.i14 = icmp eq ptr %17, null
  br i1 %tobool2.i.not.i14, label %device_may_wakeup.exit.i15.cond.end_crit_edge, label %device_may_wakeup.exit.i15.if.end.i18_crit_edge

device_may_wakeup.exit.i15.if.end.i18_crit_edge:  ; preds = %device_may_wakeup.exit.i15
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i18

device_may_wakeup.exit.i15.cond.end_crit_edge:    ; preds = %device_may_wakeup.exit.i15
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end.i18:                                       ; preds = %device_may_wakeup.exit.i15.if.end.i18_crit_edge, %cond.false.if.end.i18_crit_edge
  %subordinate.i.i.i.i16 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %18 = ptrtoint ptr %subordinate.i.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %subordinate.i.i.i.i16, align 4
  %tobool.i.not.i.i.i17 = icmp eq ptr %19, null
  br i1 %tobool.i.not.i.i.i17, label %if.end.i18.if.end.i.i26_crit_edge, label %pci_power_manageable.exit.i.i22

if.end.i18.if.end.i.i26_crit_edge:                ; preds = %if.end.i18
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i26

pci_power_manageable.exit.i.i22:                  ; preds = %if.end.i18
  %bridge_d3.i.i.i19 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %20 = ptrtoint ptr %bridge_d3.i.i.i19 to i32
  call void @__asan_loadN_noabort(i32 %20, i32 4)
  %bf.load.i.i.i20 = load i32, ptr %bridge_d3.i.i.i19, align 2
  %21 = and i32 %bf.load.i.i.i20, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.i.not.i.i21 = icmp eq i32 %21, 0
  br i1 %tobool.i.not.i.i21, label %pci_power_manageable.exit.i.i22.cond.end_crit_edge, label %pci_power_manageable.exit.i.i22.if.end.i.i26_crit_edge

pci_power_manageable.exit.i.i22.if.end.i.i26_crit_edge: ; preds = %pci_power_manageable.exit.i.i22
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i26

pci_power_manageable.exit.i.i22.cond.end_crit_edge: ; preds = %pci_power_manageable.exit.i.i22
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end.i.i26:                                     ; preds = %pci_power_manageable.exit.i.i22.if.end.i.i26_crit_edge, %if.end.i18.if.end.i.i26_crit_edge
  %wakeup_prepared.i.i23 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %22 = ptrtoint ptr %wakeup_prepared.i.i23 to i32
  call void @__asan_loadN_noabort(i32 %22, i32 4)
  %bf.load.i5.i24 = load i32, ptr %wakeup_prepared.i.i23, align 2
  %23 = and i32 %bf.load.i5.i24, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %24 = icmp eq i32 %23, 0
  %cmp.i.i25 = xor i1 %24, %enable
  br i1 %cmp.i.i25, label %if.end.i.i26.cond.end_crit_edge, label %if.end8.i.i27

if.end.i.i26.cond.end_crit_edge:                  ; preds = %if.end.i.i26
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end8.i.i27:                                    ; preds = %if.end.i.i26
  br i1 %enable, label %if.then10.i.i30, label %if.else25.i.i42

if.then10.i.i30:                                  ; preds = %if.end8.i.i27
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %bf.load.i5.i24)
  %.not = icmp ult i32 %bf.load.i5.i24, 1073741824
  %or.cond = select i1 %tobool.not.i, i1 true, i1 %.not
  br i1 %or.cond, label %if.then10.i.i30.cond.end_crit_edge, label %if.then20.i.i39

if.then10.i.i30.cond.end_crit_edge:               ; preds = %if.then10.i.i30
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.then20.i.i39:                                  ; preds = %if.then10.i.i30
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext true) #24
  %25 = ptrtoint ptr %wakeup_prepared.i.i23 to i32
  call void @__asan_loadN_noabort(i32 %25, i32 4)
  %bf.load22.i.i37 = load i32, ptr %wakeup_prepared.i.i23, align 2
  %bf.set.i.i38 = or i32 %bf.load22.i.i37, 262144
  br label %cleanup.sink.split.i.i44

if.else25.i.i42:                                  ; preds = %if.end8.i.i27
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext false) #24
  %26 = ptrtoint ptr %wakeup_prepared.i.i23 to i32
  call void @__asan_loadN_noabort(i32 %26, i32 4)
  %bf.load28.i.i40 = load i32, ptr %wakeup_prepared.i.i23, align 2
  %bf.clear29.i.i41 = and i32 %bf.load28.i.i40, -262145
  br label %cleanup.sink.split.i.i44

cleanup.sink.split.i.i44:                         ; preds = %if.else25.i.i42, %if.then20.i.i39
  %bf.clear29.sink.i.i43 = phi i32 [ %bf.clear29.i.i41, %if.else25.i.i42 ], [ %bf.set.i.i38, %if.then20.i.i39 ]
  %27 = ptrtoint ptr %wakeup_prepared.i.i23 to i32
  call void @__asan_storeN_noabort(i32 %27, i32 4)
  store i32 %bf.clear29.sink.i.i43, ptr %wakeup_prepared.i.i23, align 2
  br label %cond.end

cond.end:                                         ; preds = %cleanup.sink.split.i.i44, %if.then10.i.i30.cond.end_crit_edge, %if.end.i.i26.cond.end_crit_edge, %pci_power_manageable.exit.i.i22.cond.end_crit_edge, %device_may_wakeup.exit.i15.cond.end_crit_edge, %land.lhs.true.i12.cond.end_crit_edge, %cleanup.sink.split.i.i, %pci_pme_capable.exit.i.i.cond.end_crit_edge, %if.end.i.i.cond.end_crit_edge, %if.end.i7.cond.end_crit_edge, %device_may_wakeup.exit.i.cond.end_crit_edge, %land.lhs.true.i.cond.end_crit_edge
  %cond = phi i32 [ -22, %device_may_wakeup.exit.i.cond.end_crit_edge ], [ 0, %if.end.i.i.cond.end_crit_edge ], [ -19, %pci_pme_capable.exit.i.i.cond.end_crit_edge ], [ 0, %cleanup.sink.split.i.i ], [ -22, %land.lhs.true.i.cond.end_crit_edge ], [ -22, %device_may_wakeup.exit.i15.cond.end_crit_edge ], [ 0, %pci_power_manageable.exit.i.i22.cond.end_crit_edge ], [ 0, %if.end.i.i26.cond.end_crit_edge ], [ -19, %if.then10.i.i30.cond.end_crit_edge ], [ 0, %cleanup.sink.split.i.i44 ], [ -22, %land.lhs.true.i12.cond.end_crit_edge ], [ 0, %if.end.i7.cond.end_crit_edge ]
  ret i32 %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_prepare_to_sleep(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %can_wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %0 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.device_may_wakeup.exit_crit_edge, label %land.rhs.i

entry.device_may_wakeup.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %device_may_wakeup.exit

land.rhs.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 6
  %1 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i = icmp ne ptr %2, null
  br label %device_may_wakeup.exit

device_may_wakeup.exit:                           ; preds = %land.rhs.i, %entry.device_may_wakeup.exit_crit_edge
  %3 = phi i1 [ false, %entry.device_may_wakeup.exit_crit_edge ], [ %tobool2.i, %land.rhs.i ]
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %4 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %5)
  %cmp.i = icmp eq i32 %5, 4
  br i1 %cmp.i, label %device_may_wakeup.exit.if.end_crit_edge, label %if.else.i

device_may_wakeup.exit.if.end_crit_edge:          ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.else.i:                                        ; preds = %device_may_wakeup.exit
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %6 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool7.not.i = icmp eq i8 %7, 0
  %wakeup.not.i = xor i1 %3, true
  %brmerge.i = or i1 %tobool7.not.i, %wakeup.not.i
  %.mux.i = select i1 %tobool7.not.i, i32 0, i32 3
  br i1 %brmerge.i, label %if.else.i.if.end_crit_edge, label %land.lhs.true.i

if.else.i.if.end_crit_edge:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true.i:                                  ; preds = %if.else.i
  %pme_support.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %8 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 4)
  %bf.load.i28 = load i32, ptr %pme_support.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load.i28)
  %tobool12.not.i = icmp ult i32 %bf.load.i28, 134217728
  br i1 %tobool12.not.i, label %land.lhs.true.i.if.end_crit_edge, label %while.cond.preheader.i

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

while.cond.preheader.i:                           ; preds = %land.lhs.true.i
  %9 = and i32 %bf.load.i28, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool19.not.i = icmp eq i32 %9, 0
  br i1 %tobool19.not.i, label %while.body.i, label %while.cond.preheader.i.cleanup31.thread.i_crit_edge

while.cond.preheader.i.cleanup31.thread.i_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.i:                                     ; preds = %while.cond.preheader.i
  %10 = and i32 %bf.load.i28, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool19.not.1.i = icmp eq i32 %10, 0
  br i1 %tobool19.not.1.i, label %while.body.1.i, label %while.body.i.cleanup31.thread.i_crit_edge

while.body.i.cleanup31.thread.i_crit_edge:        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.1.i:                                   ; preds = %while.body.i
  %11 = and i32 %bf.load.i28, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool19.not.2.i = icmp eq i32 %11, 0
  br i1 %tobool19.not.2.i, label %while.body.2.i, label %while.body.1.i.cleanup31.thread.i_crit_edge

while.body.1.i.cleanup31.thread.i_crit_edge:      ; preds = %while.body.1.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.2.i:                                   ; preds = %while.body.1.i
  %12 = and i32 %bf.load.i28, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool27.not.i = icmp eq i32 %12, 0
  br i1 %tobool27.not.i, label %while.body.2.i.if.end_crit_edge, label %while.body.2.i.cleanup31.thread.i_crit_edge

while.body.2.i.cleanup31.thread.i_crit_edge:      ; preds = %while.body.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.2.i.if.end_crit_edge:                  ; preds = %while.body.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

cleanup31.thread.i:                               ; preds = %while.body.2.i.cleanup31.thread.i_crit_edge, %while.body.1.i.cleanup31.thread.i_crit_edge, %while.body.i.cleanup31.thread.i_crit_edge, %while.cond.preheader.i.cleanup31.thread.i_crit_edge
  %state14.050.i = phi i32 [ 0, %while.body.2.i.cleanup31.thread.i_crit_edge ], [ 3, %while.cond.preheader.i.cleanup31.thread.i_crit_edge ], [ 2, %while.body.i.cleanup31.thread.i_crit_edge ], [ 1, %while.body.1.i.cleanup31.thread.i_crit_edge ]
  br label %if.end

if.end:                                           ; preds = %cleanup31.thread.i, %while.body.2.i.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge, %if.else.i.if.end_crit_edge, %device_may_wakeup.exit.if.end_crit_edge
  %retval.2.i = phi i32 [ 4, %device_may_wakeup.exit.if.end_crit_edge ], [ %.mux.i, %if.else.i.if.end_crit_edge ], [ %state14.050.i, %cleanup31.thread.i ], [ 3, %while.body.2.i.if.end_crit_edge ], [ 3, %land.lhs.true.i.if.end_crit_edge ]
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %13 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %15 = and i16 %14, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %15)
  %cmp4 = icmp eq i16 %15, 64
  br i1 %cmp4, label %if.then5, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_disable_ptm(ptr noundef %dev) #24
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  br i1 %3, label %land.lhs.true.i29, label %if.end6.if.end.i_crit_edge

if.end6.if.end.i_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

land.lhs.true.i29:                                ; preds = %if.end6
  %16 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %bf.load.i.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i16 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %land.lhs.true.i29.pci_enable_wake.exit_crit_edge, label %device_may_wakeup.exit.i

land.lhs.true.i29.pci_enable_wake.exit_crit_edge: ; preds = %land.lhs.true.i29
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit

device_may_wakeup.exit.i:                         ; preds = %land.lhs.true.i29
  %wakeup.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 6
  %17 = ptrtoint ptr %wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %wakeup.i.i, align 8
  %tobool2.i.not.i = icmp eq ptr %18, null
  br i1 %tobool2.i.not.i, label %device_may_wakeup.exit.i.pci_enable_wake.exit_crit_edge, label %device_may_wakeup.exit.i.if.end.i_crit_edge

device_may_wakeup.exit.i.if.end.i_crit_edge:      ; preds = %device_may_wakeup.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

device_may_wakeup.exit.i.pci_enable_wake.exit_crit_edge: ; preds = %device_may_wakeup.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit

if.end.i:                                         ; preds = %device_may_wakeup.exit.i.if.end.i_crit_edge, %if.end6.if.end.i_crit_edge
  %subordinate.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %19 = ptrtoint ptr %subordinate.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %subordinate.i.i.i.i, align 4
  %tobool.i.not.i.i.i = icmp eq ptr %20, null
  br i1 %tobool.i.not.i.i.i, label %if.end.i.if.end.i.i_crit_edge, label %pci_power_manageable.exit.i.i

if.end.i.if.end.i.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i

pci_power_manageable.exit.i.i:                    ; preds = %if.end.i
  %bridge_d3.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %21 = ptrtoint ptr %bridge_d3.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %21, i32 4)
  %bf.load.i.i.i = load i32, ptr %bridge_d3.i.i.i, align 2
  %22 = and i32 %bf.load.i.i.i, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.i.not.i.i = icmp eq i32 %22, 0
  br i1 %tobool.i.not.i.i, label %pci_power_manageable.exit.i.i.pci_enable_wake.exit_crit_edge, label %pci_power_manageable.exit.i.i.if.end.i.i_crit_edge

pci_power_manageable.exit.i.i.if.end.i.i_crit_edge: ; preds = %pci_power_manageable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i

pci_power_manageable.exit.i.i.pci_enable_wake.exit_crit_edge: ; preds = %pci_power_manageable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit

if.end.i.i:                                       ; preds = %pci_power_manageable.exit.i.i.if.end.i.i_crit_edge, %if.end.i.if.end.i.i_crit_edge
  %wakeup_prepared.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %23 = ptrtoint ptr %wakeup_prepared.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %bf.load.i5.i = load i32, ptr %wakeup_prepared.i.i, align 2
  %24 = and i32 %bf.load.i5.i, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %25 = icmp eq i32 %24, 0
  %cmp.i.i = xor i1 %3, %25
  br i1 %cmp.i.i, label %if.end.i.i.pci_enable_wake.exit_crit_edge, label %if.end8.i.i

if.end.i.i.pci_enable_wake.exit_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit

if.end8.i.i:                                      ; preds = %if.end.i.i
  br i1 %3, label %if.then10.i.i, label %if.else25.i.i

if.then10.i.i:                                    ; preds = %if.end8.i.i
  %pm_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %26 = ptrtoint ptr %pm_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %pm_cap.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool.not.i.i.i = icmp eq i8 %27, 0
  br i1 %tobool.not.i.i.i, label %if.then10.i.i.pci_enable_wake.exit_crit_edge, label %pci_pme_capable.exit.i.i

if.then10.i.i.pci_enable_wake.exit_crit_edge:     ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit

pci_pme_capable.exit.i.i:                         ; preds = %if.then10.i.i
  %bf.lshr.i.i.i = lshr i32 %bf.load.i5.i, 27
  %shl.i.i.i = shl nuw nsw i32 1, %retval.2.i
  %and.i.i.i = and i32 %bf.lshr.i.i.i, %shl.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool1.i.i.i = icmp ne i32 %and.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bf.load.i5.i)
  %tobool1.i51.i.i = icmp slt i32 %bf.load.i5.i, 0
  %or.cond.i.i = select i1 %tobool1.i.i.i, i1 true, i1 %tobool1.i51.i.i
  br i1 %or.cond.i.i, label %if.then20.i.i, label %pci_pme_capable.exit.i.i.pci_enable_wake.exit_crit_edge

pci_pme_capable.exit.i.i.pci_enable_wake.exit_crit_edge: ; preds = %pci_pme_capable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit

if.then20.i.i:                                    ; preds = %pci_pme_capable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext true) #24
  %28 = ptrtoint ptr %wakeup_prepared.i.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 4)
  %bf.load22.i.i = load i32, ptr %wakeup_prepared.i.i, align 2
  %bf.set.i.i = or i32 %bf.load22.i.i, 262144
  br label %cleanup.sink.split.i.i

if.else25.i.i:                                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext false) #24
  %29 = ptrtoint ptr %wakeup_prepared.i.i to i32
  call void @__asan_loadN_noabort(i32 %29, i32 4)
  %bf.load28.i.i = load i32, ptr %wakeup_prepared.i.i, align 2
  %bf.clear29.i.i = and i32 %bf.load28.i.i, -262145
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %if.else25.i.i, %if.then20.i.i
  %bf.clear29.sink.i.i = phi i32 [ %bf.clear29.i.i, %if.else25.i.i ], [ %bf.set.i.i, %if.then20.i.i ]
  %30 = ptrtoint ptr %wakeup_prepared.i.i to i32
  call void @__asan_storeN_noabort(i32 %30, i32 4)
  store i32 %bf.clear29.sink.i.i, ptr %wakeup_prepared.i.i, align 2
  br label %pci_enable_wake.exit

pci_enable_wake.exit:                             ; preds = %cleanup.sink.split.i.i, %pci_pme_capable.exit.i.i.pci_enable_wake.exit_crit_edge, %if.then10.i.i.pci_enable_wake.exit_crit_edge, %if.end.i.i.pci_enable_wake.exit_crit_edge, %pci_power_manageable.exit.i.i.pci_enable_wake.exit_crit_edge, %device_may_wakeup.exit.i.pci_enable_wake.exit_crit_edge, %land.lhs.true.i29.pci_enable_wake.exit_crit_edge
  %call9 = tail call i32 @pci_set_power_state(ptr noundef %dev, i32 noundef %retval.2.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %pci_enable_wake.exit.cleanup_crit_edge, label %if.then11

pci_enable_wake.exit.cleanup_crit_edge:           ; preds = %pci_enable_wake.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then11:                                        ; preds = %pci_enable_wake.exit
  %subordinate.i.i.i.i30 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %31 = ptrtoint ptr %subordinate.i.i.i.i30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %subordinate.i.i.i.i30, align 4
  %tobool.i.not.i.i.i31 = icmp eq ptr %32, null
  br i1 %tobool.i.not.i.i.i31, label %if.then11.if.end.i.i39_crit_edge, label %pci_power_manageable.exit.i.i36

if.then11.if.end.i.i39_crit_edge:                 ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i39

pci_power_manageable.exit.i.i36:                  ; preds = %if.then11
  %bridge_d3.i.i.i33 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %33 = ptrtoint ptr %bridge_d3.i.i.i33 to i32
  call void @__asan_loadN_noabort(i32 %33, i32 4)
  %bf.load.i.i.i34 = load i32, ptr %bridge_d3.i.i.i33, align 2
  %34 = and i32 %bf.load.i.i.i34, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.i.not.i.i35 = icmp eq i32 %34, 0
  br i1 %tobool.i.not.i.i35, label %pci_power_manageable.exit.i.i36.pci_enable_wake.exit47_crit_edge, label %pci_power_manageable.exit.i.i36.if.end.i.i39_crit_edge

pci_power_manageable.exit.i.i36.if.end.i.i39_crit_edge: ; preds = %pci_power_manageable.exit.i.i36
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i39

pci_power_manageable.exit.i.i36.pci_enable_wake.exit47_crit_edge: ; preds = %pci_power_manageable.exit.i.i36
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit47

if.end.i.i39:                                     ; preds = %pci_power_manageable.exit.i.i36.if.end.i.i39_crit_edge, %if.then11.if.end.i.i39_crit_edge
  %wakeup_prepared.i.i37 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %35 = ptrtoint ptr %wakeup_prepared.i.i37 to i32
  call void @__asan_loadN_noabort(i32 %35, i32 4)
  %bf.load.i5.i38 = load i32, ptr %wakeup_prepared.i.i37, align 2
  %36 = and i32 %bf.load.i5.i38, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %if.end.i.i39.pci_enable_wake.exit47_crit_edge, label %if.end8.i.i40

if.end.i.i39.pci_enable_wake.exit47_crit_edge:    ; preds = %if.end.i.i39
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit47

if.end8.i.i40:                                    ; preds = %if.end.i.i39
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext false) #24
  %38 = ptrtoint ptr %wakeup_prepared.i.i37 to i32
  call void @__asan_loadN_noabort(i32 %38, i32 4)
  %bf.load28.i.i41 = load i32, ptr %wakeup_prepared.i.i37, align 2
  %bf.clear29.i.i42 = and i32 %bf.load28.i.i41, -262145
  store i32 %bf.clear29.i.i42, ptr %wakeup_prepared.i.i37, align 2
  br label %pci_enable_wake.exit47

pci_enable_wake.exit47:                           ; preds = %if.end8.i.i40, %if.end.i.i39.pci_enable_wake.exit47_crit_edge, %pci_power_manageable.exit.i.i36.pci_enable_wake.exit47_crit_edge
  tail call void @pci_restore_ptm_state(ptr noundef %dev) #24
  br label %cleanup

cleanup:                                          ; preds = %pci_enable_wake.exit47, %pci_enable_wake.exit.cleanup_crit_edge
  ret i32 %call9
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_ptm(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_back_from_sleep(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %0 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp9.i = icmp eq i32 %1, 0
  br i1 %cmp9.i, label %entry.if.end_crit_edge, label %if.end11.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end11.i:                                       ; preds = %entry
  %pm_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %2 = ptrtoint ptr %pm_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %pm_cap.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not.i.i.i = icmp eq i8 %3, 0
  br i1 %tobool1.not.i.i.i, label %if.then2.i.i.i, label %if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge

if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge: ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_platform_power_transition.exit.i.i

if.then2.i.i.i:                                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  %4 = ptrtoint ptr %current_state.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %current_state.i, align 4
  br label %pci_platform_power_transition.exit.i.i

pci_platform_power_transition.exit.i.i:           ; preds = %if.then2.i.i.i, %if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge
  %runtime_d3cold.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %5 = ptrtoint ptr %runtime_d3cold.i.i to i32
  call void @__asan_loadN_noabort(i32 %5, i32 4)
  %bf.load.i48.i = load i32, ptr %runtime_d3cold.i.i, align 2
  %6 = and i32 %bf.load.i48.i, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i49.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i49.i, label %pci_platform_power_transition.exit.i.i.pci_set_power_state.exit_crit_edge, label %if.then.i50.i

pci_platform_power_transition.exit.i.i.pci_set_power_state.exit_crit_edge: ; preds = %pci_platform_power_transition.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_power_state.exit

if.then.i50.i:                                    ; preds = %pci_platform_power_transition.exit.i.i
  %subordinate.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %7 = ptrtoint ptr %subordinate.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %subordinate.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i.i, label %if.then.i50.i.pci_set_power_state.exit_crit_edge, label %if.then.i.i.i

if.then.i50.i.pci_set_power_state.exit_crit_edge: ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_power_state.exit

if.then.i.i.i:                                    ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_walk_bus(ptr noundef nonnull %8, ptr noundef nonnull @pci_resume_one, ptr noundef null) #24
  br label %pci_set_power_state.exit

pci_set_power_state.exit:                         ; preds = %if.then.i.i.i, %if.then.i50.i.pci_set_power_state.exit_crit_edge, %pci_platform_power_transition.exit.i.i.pci_set_power_state.exit_crit_edge
  %call1.i.i = tail call fastcc i32 @pci_raw_set_power_state(ptr noundef %dev, i32 noundef 0) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not, label %pci_set_power_state.exit.if.end_crit_edge, label %pci_set_power_state.exit.cleanup_crit_edge

pci_set_power_state.exit.cleanup_crit_edge:       ; preds = %pci_set_power_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_set_power_state.exit.if.end_crit_edge:        ; preds = %pci_set_power_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end:                                           ; preds = %pci_set_power_state.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %subordinate.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %9 = ptrtoint ptr %subordinate.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %subordinate.i.i.i.i, align 4
  %tobool.i.not.i.i.i = icmp eq ptr %10, null
  br i1 %tobool.i.not.i.i.i, label %if.end.if.end.i.i_crit_edge, label %pci_power_manageable.exit.i.i

if.end.if.end.i.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i

pci_power_manageable.exit.i.i:                    ; preds = %if.end
  %bridge_d3.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %11 = ptrtoint ptr %bridge_d3.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 4)
  %bf.load.i.i.i = load i32, ptr %bridge_d3.i.i.i, align 2
  %12 = and i32 %bf.load.i.i.i, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i.not.i.i = icmp eq i32 %12, 0
  br i1 %tobool.i.not.i.i, label %pci_power_manageable.exit.i.i.cleanup_crit_edge, label %pci_power_manageable.exit.i.i.if.end.i.i_crit_edge

pci_power_manageable.exit.i.i.if.end.i.i_crit_edge: ; preds = %pci_power_manageable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i

pci_power_manageable.exit.i.i.cleanup_crit_edge:  ; preds = %pci_power_manageable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.i.i:                                       ; preds = %pci_power_manageable.exit.i.i.if.end.i.i_crit_edge, %if.end.if.end.i.i_crit_edge
  %wakeup_prepared.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %13 = ptrtoint ptr %wakeup_prepared.i.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %bf.load.i5.i = load i32, ptr %wakeup_prepared.i.i, align 2
  %14 = and i32 %bf.load.i5.i, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %if.end.i.i.cleanup_crit_edge, label %if.end8.i.i

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end8.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext false) #24
  %16 = ptrtoint ptr %wakeup_prepared.i.i to i32
  call void @__asan_loadN_noabort(i32 %16, i32 4)
  %bf.load28.i.i = load i32, ptr %wakeup_prepared.i.i, align 2
  %bf.clear29.i.i = and i32 %bf.load28.i.i, -262145
  store i32 %bf.clear29.i.i, ptr %wakeup_prepared.i.i, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end8.i.i, %if.end.i.i.cleanup_crit_edge, %pci_power_manageable.exit.i.i.cleanup_crit_edge, %pci_set_power_state.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1.i.i, %pci_set_power_state.exit.cleanup_crit_edge ], [ 0, %pci_power_manageable.exit.i.i.cleanup_crit_edge ], [ 0, %if.end.i.i.cleanup_crit_edge ], [ 0, %if.end8.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_finish_runtime_suspend(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %0 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %1)
  %cmp.i = icmp eq i32 %1, 4
  br i1 %cmp.i, label %entry.if.end.thread_crit_edge, label %if.else.i

entry.if.end.thread_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.thread

if.else.i:                                        ; preds = %entry
  %can_wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %2 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.i = icmp sgt i16 %bf.load.i, -1
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %3 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool7.not.i = icmp eq i8 %4, 0
  %brmerge.i = or i1 %tobool.i, %tobool7.not.i
  %.mux.i = select i1 %tobool7.not.i, i32 0, i32 3
  br i1 %brmerge.i, label %if.else.i.if.end.thread_crit_edge, label %land.lhs.true.i

if.else.i.if.end.thread_crit_edge:                ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.thread

land.lhs.true.i:                                  ; preds = %if.else.i
  %pme_support.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %5 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %5, i32 4)
  %bf.load.i35 = load i32, ptr %pme_support.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load.i35)
  %tobool12.not.i = icmp ult i32 %bf.load.i35, 134217728
  br i1 %tobool12.not.i, label %land.lhs.true.i.if.end.thread_crit_edge, label %while.cond.preheader.i

land.lhs.true.i.if.end.thread_crit_edge:          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.thread

while.cond.preheader.i:                           ; preds = %land.lhs.true.i
  %6 = and i32 %bf.load.i35, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool19.not.i = icmp eq i32 %6, 0
  br i1 %tobool19.not.i, label %while.body.i, label %while.cond.preheader.i.cleanup31.thread.i_crit_edge

while.cond.preheader.i.cleanup31.thread.i_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.i:                                     ; preds = %while.cond.preheader.i
  %7 = and i32 %bf.load.i35, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool19.not.1.i = icmp eq i32 %7, 0
  br i1 %tobool19.not.1.i, label %while.body.1.i, label %while.body.i.cleanup31.thread.i_crit_edge

while.body.i.cleanup31.thread.i_crit_edge:        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.1.i:                                   ; preds = %while.body.i
  %8 = and i32 %bf.load.i35, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool19.not.2.i = icmp eq i32 %8, 0
  br i1 %tobool19.not.2.i, label %while.body.2.i, label %while.body.1.i.cleanup31.thread.i_crit_edge

while.body.1.i.cleanup31.thread.i_crit_edge:      ; preds = %while.body.1.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.2.i:                                   ; preds = %while.body.1.i
  %9 = and i32 %bf.load.i35, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool27.not.i = icmp eq i32 %9, 0
  br i1 %tobool27.not.i, label %while.body.2.i.if.end.thread_crit_edge, label %while.body.2.i.cleanup31.thread.i_crit_edge

while.body.2.i.cleanup31.thread.i_crit_edge:      ; preds = %while.body.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.2.i.if.end.thread_crit_edge:           ; preds = %while.body.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.thread

cleanup31.thread.i:                               ; preds = %while.body.2.i.cleanup31.thread.i_crit_edge, %while.body.1.i.cleanup31.thread.i_crit_edge, %while.body.i.cleanup31.thread.i_crit_edge, %while.cond.preheader.i.cleanup31.thread.i_crit_edge
  %state14.050.i = phi i32 [ 0, %while.body.2.i.cleanup31.thread.i_crit_edge ], [ 3, %while.cond.preheader.i.cleanup31.thread.i_crit_edge ], [ 2, %while.body.i.cleanup31.thread.i_crit_edge ], [ 1, %while.body.1.i.cleanup31.thread.i_crit_edge ]
  br label %if.end.thread

if.end.thread:                                    ; preds = %cleanup31.thread.i, %while.body.2.i.if.end.thread_crit_edge, %land.lhs.true.i.if.end.thread_crit_edge, %if.else.i.if.end.thread_crit_edge, %entry.if.end.thread_crit_edge
  %retval.2.i56 = phi i32 [ 3, %land.lhs.true.i.if.end.thread_crit_edge ], [ 3, %while.body.2.i.if.end.thread_crit_edge ], [ %state14.050.i, %cleanup31.thread.i ], [ %.mux.i, %if.else.i.if.end.thread_crit_edge ], [ 4, %entry.if.end.thread_crit_edge ]
  %10 = phi i32 [ 0, %land.lhs.true.i.if.end.thread_crit_edge ], [ 0, %while.body.2.i.if.end.thread_crit_edge ], [ 0, %cleanup31.thread.i ], [ 0, %if.else.i.if.end.thread_crit_edge ], [ 131072, %entry.if.end.thread_crit_edge ]
  %runtime_d3cold57 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %11 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_loadN_noabort(i32 %11, i32 4)
  %bf.load58 = load i32, ptr %runtime_d3cold57, align 2
  %bf.clear = and i32 %bf.load58, -131073
  %bf.set = or i32 %bf.clear, %10
  store i32 %bf.set, ptr %runtime_d3cold57, align 2
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %12 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %14 = and i16 %13, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %14)
  %cmp5 = icmp eq i16 %14, 64
  br i1 %cmp5, label %if.then7, label %if.end.thread.if.end8_crit_edge

if.end.thread.if.end8_crit_edge:                  ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8

if.then7:                                         ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_disable_ptm(ptr noundef %dev) #24
  %15 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_loadN_noabort(i32 %15, i32 4)
  %bf.load.i37.pr = load i32, ptr %runtime_d3cold57, align 2
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end.thread.if.end8_crit_edge
  %bf.load.i37 = phi i32 [ %bf.load.i37.pr, %if.then7 ], [ %bf.set, %if.end.thread.if.end8_crit_edge ]
  %bus1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %16 = ptrtoint ptr %bus1.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bus1.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load.i37)
  %tobool.not.i = icmp ult i32 %bf.load.i37, 134217728
  br i1 %tobool.not.i, label %if.end8.pci_dev_run_wake.exit_crit_edge, label %if.end.i

if.end8.pci_dev_run_wake.exit_crit_edge:          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_run_wake.exit

if.end.i:                                         ; preds = %if.end8
  %18 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %19)
  %cmp.i.i = icmp eq i32 %19, 4
  br i1 %cmp.i.i, label %if.end.i.pci_target_state.exit.i_crit_edge, label %if.else.i.i

if.end.i.pci_target_state.exit.i_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit.i

if.else.i.i:                                      ; preds = %if.end.i
  %pm_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %20 = ptrtoint ptr %pm_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %pm_cap.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool7.not.i.i = icmp eq i8 %21, 0
  br i1 %tobool7.not.i.i, label %if.else.i.i.pci_target_state.exit.i_crit_edge, label %while.cond.preheader.i.i

if.else.i.i.pci_target_state.exit.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit.i

while.cond.preheader.i.i:                         ; preds = %if.else.i.i
  %22 = and i32 %bf.load.i37, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool19.not.i.i = icmp eq i32 %22, 0
  br i1 %tobool19.not.i.i, label %while.body.i.i, label %while.cond.preheader.i.i.cleanup31.thread.i.i_crit_edge

while.cond.preheader.i.i.cleanup31.thread.i.i_crit_edge: ; preds = %while.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i.i

while.body.i.i:                                   ; preds = %while.cond.preheader.i.i
  %23 = and i32 %bf.load.i37, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool19.not.1.i.i = icmp eq i32 %23, 0
  br i1 %tobool19.not.1.i.i, label %while.body.1.i.i, label %while.body.i.i.cleanup31.thread.i.i_crit_edge

while.body.i.i.cleanup31.thread.i.i_crit_edge:    ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i.i

while.body.1.i.i:                                 ; preds = %while.body.i.i
  %24 = and i32 %bf.load.i37, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool19.not.2.i.i = icmp eq i32 %24, 0
  br i1 %tobool19.not.2.i.i, label %while.body.2.i.i, label %while.body.1.i.i.cleanup31.thread.i.i_crit_edge

while.body.1.i.i.cleanup31.thread.i.i_crit_edge:  ; preds = %while.body.1.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i.i

while.body.2.i.i:                                 ; preds = %while.body.1.i.i
  %25 = and i32 %bf.load.i37, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool27.not.i.i = icmp eq i32 %25, 0
  br i1 %tobool27.not.i.i, label %while.body.2.i.i.pci_target_state.exit.i_crit_edge, label %while.body.2.i.i.cleanup31.thread.i.i_crit_edge

while.body.2.i.i.cleanup31.thread.i.i_crit_edge:  ; preds = %while.body.2.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i.i

while.body.2.i.i.pci_target_state.exit.i_crit_edge: ; preds = %while.body.2.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit.i

cleanup31.thread.i.i:                             ; preds = %while.body.2.i.i.cleanup31.thread.i.i_crit_edge, %while.body.1.i.i.cleanup31.thread.i.i_crit_edge, %while.body.i.i.cleanup31.thread.i.i_crit_edge, %while.cond.preheader.i.i.cleanup31.thread.i.i_crit_edge
  %state14.050.i.i = phi i32 [ 0, %while.body.2.i.i.cleanup31.thread.i.i_crit_edge ], [ 3, %while.cond.preheader.i.i.cleanup31.thread.i.i_crit_edge ], [ 2, %while.body.i.i.cleanup31.thread.i.i_crit_edge ], [ 1, %while.body.1.i.i.cleanup31.thread.i.i_crit_edge ]
  br label %pci_target_state.exit.i

pci_target_state.exit.i:                          ; preds = %cleanup31.thread.i.i, %while.body.2.i.i.pci_target_state.exit.i_crit_edge, %if.else.i.i.pci_target_state.exit.i_crit_edge, %if.end.i.pci_target_state.exit.i_crit_edge
  %retval.2.i.i = phi i32 [ 4, %if.end.i.pci_target_state.exit.i_crit_edge ], [ 0, %if.else.i.i.pci_target_state.exit.i_crit_edge ], [ %state14.050.i.i, %cleanup31.thread.i.i ], [ 3, %while.body.2.i.i.pci_target_state.exit.i_crit_edge ]
  %pm_cap.i30.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %26 = ptrtoint ptr %pm_cap.i30.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %pm_cap.i30.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool.not.i.i = icmp eq i8 %27, 0
  br i1 %tobool.not.i.i, label %pci_target_state.exit.i.pci_dev_run_wake.exit_crit_edge, label %pci_pme_capable.exit.i

pci_target_state.exit.i.pci_dev_run_wake.exit_crit_edge: ; preds = %pci_target_state.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_run_wake.exit

pci_pme_capable.exit.i:                           ; preds = %pci_target_state.exit.i
  %bf.lshr.i.i = lshr i32 %bf.load.i37, 27
  %shl.i.i = shl nuw nsw i32 1, %retval.2.i.i
  %and.i.i = and i32 %shl.i.i, %bf.lshr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool1.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool1.i.not.i, label %pci_pme_capable.exit.i.pci_dev_run_wake.exit_crit_edge, label %if.end4.i

pci_pme_capable.exit.i.pci_dev_run_wake.exit_crit_edge: ; preds = %pci_pme_capable.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_run_wake.exit

if.end4.i:                                        ; preds = %pci_pme_capable.exit.i
  %can_wakeup.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %28 = ptrtoint ptr %can_wakeup.i.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %bf.load.i33.i = load i16, ptr %can_wakeup.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load.i33.i)
  %tobool.i.i = icmp slt i16 %bf.load.i33.i, 0
  br i1 %tobool.i.i, label %if.end4.i.pci_dev_run_wake.exit_crit_edge, label %if.end4.i.while.cond.i_crit_edge

if.end4.i.while.cond.i_crit_edge:                 ; preds = %if.end4.i
  br label %while.cond.i

if.end4.i.pci_dev_run_wake.exit_crit_edge:        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_run_wake.exit

while.cond.i:                                     ; preds = %while.body.i38.while.cond.i_crit_edge, %if.end4.i.while.cond.i_crit_edge
  %bus.0.i = phi ptr [ %30, %while.body.i38.while.cond.i_crit_edge ], [ %17, %if.end4.i.while.cond.i_crit_edge ]
  %parent.i = getelementptr inbounds %struct.pci_bus, ptr %bus.0.i, i32 0, i32 1
  %29 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %parent.i, align 8
  %tobool9.not.i = icmp eq ptr %30, null
  br i1 %tobool9.not.i, label %while.end.i, label %while.body.i38

while.body.i38:                                   ; preds = %while.cond.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %bus.0.i, i32 0, i32 4
  %31 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %self.i, align 4
  %can_wakeup.i34.i = getelementptr inbounds %struct.pci_dev, ptr %32, i32 0, i32 44, i32 12, i32 1
  %33 = ptrtoint ptr %can_wakeup.i34.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %bf.load.i35.i = load i16, ptr %can_wakeup.i34.i, align 4
  %tobool.i36.i = icmp slt i16 %bf.load.i35.i, 0
  br i1 %tobool.i36.i, label %while.body.i38.pci_dev_run_wake.exit_crit_edge, label %while.body.i38.while.cond.i_crit_edge

while.body.i38.while.cond.i_crit_edge:            ; preds = %while.body.i38
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.cond.i

while.body.i38.pci_dev_run_wake.exit_crit_edge:   ; preds = %while.body.i38
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_run_wake.exit

while.end.i:                                      ; preds = %while.cond.i
  %bridge15.i = getelementptr inbounds %struct.pci_bus, ptr %bus.0.i, i32 0, i32 20
  %34 = ptrtoint ptr %bridge15.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %bridge15.i, align 8
  %tobool16.not.i = icmp eq ptr %35, null
  br i1 %tobool16.not.i, label %while.end.i.pci_dev_run_wake.exit_crit_edge, label %if.then17.i

while.end.i.pci_dev_run_wake.exit_crit_edge:      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_run_wake.exit

if.then17.i:                                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #26
  %can_wakeup.i37.i = getelementptr inbounds %struct.device, ptr %35, i32 0, i32 12, i32 1
  %36 = ptrtoint ptr %can_wakeup.i37.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %bf.load.i38.i = load i16, ptr %can_wakeup.i37.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load.i38.i)
  %tobool.i39.i = icmp slt i16 %bf.load.i38.i, 0
  br label %pci_dev_run_wake.exit

pci_dev_run_wake.exit:                            ; preds = %if.then17.i, %while.end.i.pci_dev_run_wake.exit_crit_edge, %while.body.i38.pci_dev_run_wake.exit_crit_edge, %if.end4.i.pci_dev_run_wake.exit_crit_edge, %pci_pme_capable.exit.i.pci_dev_run_wake.exit_crit_edge, %pci_target_state.exit.i.pci_dev_run_wake.exit_crit_edge, %if.end8.pci_dev_run_wake.exit_crit_edge
  %retval.2.i39 = phi i1 [ %tobool.i39.i, %if.then17.i ], [ false, %if.end8.pci_dev_run_wake.exit_crit_edge ], [ false, %pci_pme_capable.exit.i.pci_dev_run_wake.exit_crit_edge ], [ true, %if.end4.i.pci_dev_run_wake.exit_crit_edge ], [ false, %while.end.i.pci_dev_run_wake.exit_crit_edge ], [ false, %pci_target_state.exit.i.pci_dev_run_wake.exit_crit_edge ], [ true, %while.body.i38.pci_dev_run_wake.exit_crit_edge ]
  %subordinate.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %37 = ptrtoint ptr %subordinate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %subordinate.i.i.i, align 4
  %tobool.i.not.i.i = icmp ne ptr %38, null
  %39 = and i32 %bf.load.i37, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.i.not.i = icmp eq i32 %39, 0
  %or.cond = select i1 %tobool.i.not.i.i, i1 %tobool.i.not.i, i1 false
  br i1 %or.cond, label %pci_dev_run_wake.exit.__pci_enable_wake.exit_crit_edge, label %if.end.i42

pci_dev_run_wake.exit.__pci_enable_wake.exit_crit_edge: ; preds = %pci_dev_run_wake.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_enable_wake.exit

if.end.i42:                                       ; preds = %pci_dev_run_wake.exit
  %40 = and i32 %bf.load.i37, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %41 = icmp eq i32 %40, 0
  %cmp.i41 = xor i1 %41, %retval.2.i39
  br i1 %cmp.i41, label %if.end.i42.__pci_enable_wake.exit_crit_edge, label %if.end8.i

if.end.i42.__pci_enable_wake.exit_crit_edge:      ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_enable_wake.exit

if.end8.i:                                        ; preds = %if.end.i42
  br i1 %retval.2.i39, label %if.then10.i, label %if.else25.i

if.then10.i:                                      ; preds = %if.end8.i
  %pm_cap.i.i43 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %42 = ptrtoint ptr %pm_cap.i.i43 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %pm_cap.i.i43, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool.not.i.i44 = icmp eq i8 %43, 0
  br i1 %tobool.not.i.i44, label %if.then10.i.__pci_enable_wake.exit_crit_edge, label %pci_pme_capable.exit.i48

if.then10.i.__pci_enable_wake.exit_crit_edge:     ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_enable_wake.exit

pci_pme_capable.exit.i48:                         ; preds = %if.then10.i
  %bf.lshr.i.i45 = lshr i32 %bf.load.i37, 27
  %shl.i.i46 = shl nuw i32 1, %retval.2.i56
  %and.i.i47 = and i32 %bf.lshr.i.i45, %shl.i.i46
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i47)
  %tobool1.i.i = icmp ne i32 %and.i.i47, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bf.load.i37)
  %tobool1.i51.i = icmp slt i32 %bf.load.i37, 0
  %or.cond.i = select i1 %tobool1.i.i, i1 true, i1 %tobool1.i51.i
  br i1 %or.cond.i, label %if.then20.i, label %pci_pme_capable.exit.i48.__pci_enable_wake.exit_crit_edge

pci_pme_capable.exit.i48.__pci_enable_wake.exit_crit_edge: ; preds = %pci_pme_capable.exit.i48
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_enable_wake.exit

if.then20.i:                                      ; preds = %pci_pme_capable.exit.i48
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext true) #24
  %44 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_loadN_noabort(i32 %44, i32 4)
  %bf.load22.i = load i32, ptr %runtime_d3cold57, align 2
  %bf.set.i = or i32 %bf.load22.i, 262144
  br label %cleanup.sink.split.i

if.else25.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext false) #24
  %45 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_loadN_noabort(i32 %45, i32 4)
  %bf.load28.i = load i32, ptr %runtime_d3cold57, align 2
  %bf.clear29.i = and i32 %bf.load28.i, -262145
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.else25.i, %if.then20.i
  %bf.clear29.sink.i = phi i32 [ %bf.clear29.i, %if.else25.i ], [ %bf.set.i, %if.then20.i ]
  %46 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_storeN_noabort(i32 %46, i32 4)
  store i32 %bf.clear29.sink.i, ptr %runtime_d3cold57, align 2
  br label %__pci_enable_wake.exit

__pci_enable_wake.exit:                           ; preds = %cleanup.sink.split.i, %pci_pme_capable.exit.i48.__pci_enable_wake.exit_crit_edge, %if.then10.i.__pci_enable_wake.exit_crit_edge, %if.end.i42.__pci_enable_wake.exit_crit_edge, %pci_dev_run_wake.exit.__pci_enable_wake.exit_crit_edge
  %call11 = tail call i32 @pci_set_power_state(ptr noundef %dev, i32 noundef %retval.2.i56)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool.not = icmp eq i32 %call11, 0
  br i1 %tobool.not, label %__pci_enable_wake.exit.cleanup_crit_edge, label %if.then12

__pci_enable_wake.exit.cleanup_crit_edge:         ; preds = %__pci_enable_wake.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then12:                                        ; preds = %__pci_enable_wake.exit
  %47 = ptrtoint ptr %subordinate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %subordinate.i.i.i, align 4
  %tobool.i.not.i.i.i = icmp eq ptr %48, null
  br i1 %tobool.i.not.i.i.i, label %if.then12.if.end.i.i_crit_edge, label %pci_power_manageable.exit.i.i

if.then12.if.end.i.i_crit_edge:                   ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i

pci_power_manageable.exit.i.i:                    ; preds = %if.then12
  %49 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_loadN_noabort(i32 %49, i32 4)
  %bf.load.i.i.i = load i32, ptr %runtime_d3cold57, align 2
  %50 = and i32 %bf.load.i.i.i, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.i.not.i.i50 = icmp eq i32 %50, 0
  br i1 %tobool.i.not.i.i50, label %pci_power_manageable.exit.i.i.pci_enable_wake.exit_crit_edge, label %pci_power_manageable.exit.i.i.if.end.i.i_crit_edge

pci_power_manageable.exit.i.i.if.end.i.i_crit_edge: ; preds = %pci_power_manageable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i.i

pci_power_manageable.exit.i.i.pci_enable_wake.exit_crit_edge: ; preds = %pci_power_manageable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit

if.end.i.i:                                       ; preds = %pci_power_manageable.exit.i.i.if.end.i.i_crit_edge, %if.then12.if.end.i.i_crit_edge
  %51 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_loadN_noabort(i32 %51, i32 4)
  %bf.load.i5.i = load i32, ptr %runtime_d3cold57, align 2
  %52 = and i32 %bf.load.i5.i, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %if.end.i.i.pci_enable_wake.exit_crit_edge, label %if.end8.i.i

if.end.i.i.pci_enable_wake.exit_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_enable_wake.exit

if.end8.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext false) #24
  %54 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_loadN_noabort(i32 %54, i32 4)
  %bf.load28.i.i = load i32, ptr %runtime_d3cold57, align 2
  %bf.clear29.i.i = and i32 %bf.load28.i.i, -262145
  store i32 %bf.clear29.i.i, ptr %runtime_d3cold57, align 2
  br label %pci_enable_wake.exit

pci_enable_wake.exit:                             ; preds = %if.end8.i.i, %if.end.i.i.pci_enable_wake.exit_crit_edge, %pci_power_manageable.exit.i.i.pci_enable_wake.exit_crit_edge
  tail call void @pci_restore_ptm_state(ptr noundef %dev) #24
  %55 = ptrtoint ptr %runtime_d3cold57 to i32
  call void @__asan_loadN_noabort(i32 %55, i32 4)
  %bf.load15 = load i32, ptr %runtime_d3cold57, align 2
  %bf.clear16 = and i32 %bf.load15, -131073
  store i32 %bf.clear16, ptr %runtime_d3cold57, align 2
  br label %cleanup

cleanup:                                          ; preds = %pci_enable_wake.exit, %__pci_enable_wake.exit.cleanup_crit_edge
  ret i32 %call11
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pci_dev_run_wake(ptr nocapture noundef readonly %dev) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1, align 8
  %pme_support = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %2 = ptrtoint ptr %pme_support to i32
  call void @__asan_loadN_noabort(i32 %2, i32 4)
  %bf.load = load i32, ptr %pme_support, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load)
  %tobool.not = icmp ult i32 %bf.load, 134217728
  br i1 %tobool.not, label %entry.cleanup21_crit_edge, label %if.end

entry.cleanup21_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup21

if.end:                                           ; preds = %entry
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %3 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %4)
  %cmp.i = icmp eq i32 %4, 4
  br i1 %cmp.i, label %if.end.pci_target_state.exit_crit_edge, label %if.else.i

if.end.pci_target_state.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit

if.else.i:                                        ; preds = %if.end
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %5 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool7.not.i = icmp eq i8 %6, 0
  br i1 %tobool7.not.i, label %if.else.i.pci_target_state.exit_crit_edge, label %while.cond.preheader.i

if.else.i.pci_target_state.exit_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit

while.cond.preheader.i:                           ; preds = %if.else.i
  %7 = and i32 %bf.load, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool19.not.i = icmp eq i32 %7, 0
  br i1 %tobool19.not.i, label %while.body.i, label %while.cond.preheader.i.cleanup31.thread.i_crit_edge

while.cond.preheader.i.cleanup31.thread.i_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.i:                                     ; preds = %while.cond.preheader.i
  %8 = and i32 %bf.load, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool19.not.1.i = icmp eq i32 %8, 0
  br i1 %tobool19.not.1.i, label %while.body.1.i, label %while.body.i.cleanup31.thread.i_crit_edge

while.body.i.cleanup31.thread.i_crit_edge:        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.1.i:                                   ; preds = %while.body.i
  %9 = and i32 %bf.load, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool19.not.2.i = icmp eq i32 %9, 0
  br i1 %tobool19.not.2.i, label %while.body.2.i, label %while.body.1.i.cleanup31.thread.i_crit_edge

while.body.1.i.cleanup31.thread.i_crit_edge:      ; preds = %while.body.1.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.2.i:                                   ; preds = %while.body.1.i
  %10 = and i32 %bf.load, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool27.not.i = icmp eq i32 %10, 0
  br i1 %tobool27.not.i, label %while.body.2.i.pci_target_state.exit_crit_edge, label %while.body.2.i.cleanup31.thread.i_crit_edge

while.body.2.i.cleanup31.thread.i_crit_edge:      ; preds = %while.body.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.2.i.pci_target_state.exit_crit_edge:   ; preds = %while.body.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit

cleanup31.thread.i:                               ; preds = %while.body.2.i.cleanup31.thread.i_crit_edge, %while.body.1.i.cleanup31.thread.i_crit_edge, %while.body.i.cleanup31.thread.i_crit_edge, %while.cond.preheader.i.cleanup31.thread.i_crit_edge
  %state14.050.i = phi i32 [ 0, %while.body.2.i.cleanup31.thread.i_crit_edge ], [ 3, %while.cond.preheader.i.cleanup31.thread.i_crit_edge ], [ 2, %while.body.i.cleanup31.thread.i_crit_edge ], [ 1, %while.body.1.i.cleanup31.thread.i_crit_edge ]
  br label %pci_target_state.exit

pci_target_state.exit:                            ; preds = %cleanup31.thread.i, %while.body.2.i.pci_target_state.exit_crit_edge, %if.else.i.pci_target_state.exit_crit_edge, %if.end.pci_target_state.exit_crit_edge
  %retval.2.i = phi i32 [ 4, %if.end.pci_target_state.exit_crit_edge ], [ 0, %if.else.i.pci_target_state.exit_crit_edge ], [ %state14.050.i, %cleanup31.thread.i ], [ 3, %while.body.2.i.pci_target_state.exit_crit_edge ]
  %pm_cap.i30 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %11 = ptrtoint ptr %pm_cap.i30 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %pm_cap.i30, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.not.i = icmp eq i8 %12, 0
  br i1 %tobool.not.i, label %pci_target_state.exit.cleanup21_crit_edge, label %pci_pme_capable.exit

pci_target_state.exit.cleanup21_crit_edge:        ; preds = %pci_target_state.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup21

pci_pme_capable.exit:                             ; preds = %pci_target_state.exit
  %bf.lshr.i = lshr i32 %bf.load, 27
  %shl.i = shl nuw nsw i32 1, %retval.2.i
  %and.i = and i32 %shl.i, %bf.lshr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool1.i.not, label %pci_pme_capable.exit.cleanup21_crit_edge, label %if.end4

pci_pme_capable.exit.cleanup21_crit_edge:         ; preds = %pci_pme_capable.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup21

if.end4:                                          ; preds = %pci_pme_capable.exit
  %can_wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %13 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %bf.load.i33 = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load.i33)
  %tobool.i = icmp slt i16 %bf.load.i33, 0
  br i1 %tobool.i, label %if.end4.cleanup21_crit_edge, label %if.end4.while.cond_crit_edge

if.end4.while.cond_crit_edge:                     ; preds = %if.end4
  br label %while.cond

if.end4.cleanup21_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup21

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %if.end4.while.cond_crit_edge
  %bus.0 = phi ptr [ %15, %while.body.while.cond_crit_edge ], [ %1, %if.end4.while.cond_crit_edge ]
  %parent = getelementptr inbounds %struct.pci_bus, ptr %bus.0, i32 0, i32 1
  %14 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %parent, align 8
  %tobool9.not = icmp eq ptr %15, null
  br i1 %tobool9.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %self = getelementptr inbounds %struct.pci_bus, ptr %bus.0, i32 0, i32 4
  %16 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %self, align 4
  %can_wakeup.i34 = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44, i32 12, i32 1
  %18 = ptrtoint ptr %can_wakeup.i34 to i32
  call void @__asan_load2_noabort(i32 %18)
  %bf.load.i35 = load i16, ptr %can_wakeup.i34, align 4
  %tobool.i36 = icmp slt i16 %bf.load.i35, 0
  br i1 %tobool.i36, label %while.body.cleanup21_crit_edge, label %while.body.while.cond_crit_edge

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.cond

while.body.cleanup21_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup21

while.end:                                        ; preds = %while.cond
  %bridge15 = getelementptr inbounds %struct.pci_bus, ptr %bus.0, i32 0, i32 20
  %19 = ptrtoint ptr %bridge15 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %bridge15, align 8
  %tobool16.not = icmp eq ptr %20, null
  br i1 %tobool16.not, label %while.end.cleanup21_crit_edge, label %if.then17

while.end.cleanup21_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup21

if.then17:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #26
  %can_wakeup.i37 = getelementptr inbounds %struct.device, ptr %20, i32 0, i32 12, i32 1
  %21 = ptrtoint ptr %can_wakeup.i37 to i32
  call void @__asan_load2_noabort(i32 %21)
  %bf.load.i38 = load i16, ptr %can_wakeup.i37, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load.i38)
  %tobool.i39 = icmp slt i16 %bf.load.i38, 0
  br label %cleanup21

cleanup21:                                        ; preds = %if.then17, %while.end.cleanup21_crit_edge, %while.body.cleanup21_crit_edge, %if.end4.cleanup21_crit_edge, %pci_pme_capable.exit.cleanup21_crit_edge, %pci_target_state.exit.cleanup21_crit_edge, %entry.cleanup21_crit_edge
  %retval.2 = phi i1 [ %tobool.i39, %if.then17 ], [ false, %entry.cleanup21_crit_edge ], [ false, %pci_pme_capable.exit.cleanup21_crit_edge ], [ true, %if.end4.cleanup21_crit_edge ], [ false, %while.end.cleanup21_crit_edge ], [ false, %pci_target_state.exit.cleanup21_crit_edge ], [ true, %while.body.cleanup21_crit_edge ]
  ret i1 %retval.2
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @pci_dev_need_resume(ptr nocapture noundef readonly %pci_dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %runtime_status.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 18
  %0 = ptrtoint ptr %runtime_status.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %runtime_status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp.i = icmp eq i32 %1, 2
  br i1 %cmp.i, label %pm_runtime_suspended.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pm_runtime_suspended.exit:                        ; preds = %entry
  %disable_depth.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 15
  %2 = ptrtoint ptr %disable_depth.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %disable_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %bf.load.i)
  %tobool.not.i = icmp ult i16 %bf.load.i, 8192
  br i1 %tobool.not.i, label %lor.lhs.false, label %pm_runtime_suspended.exit.cleanup_crit_edge

pm_runtime_suspended.exit.cleanup_crit_edge:      ; preds = %pm_runtime_suspended.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false:                                    ; preds = %pm_runtime_suspended.exit
  %can_wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 1
  %3 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load.i15 = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i15)
  %tobool.not.i16 = icmp sgt i16 %bf.load.i15, -1
  br i1 %tobool.not.i16, label %lor.lhs.false.device_may_wakeup.exit_crit_edge, label %land.rhs.i17

lor.lhs.false.device_may_wakeup.exit_crit_edge:   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %device_may_wakeup.exit

land.rhs.i17:                                     ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  %wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 6
  %4 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i = icmp eq ptr %5, null
  br label %device_may_wakeup.exit

device_may_wakeup.exit:                           ; preds = %land.rhs.i17, %lor.lhs.false.device_may_wakeup.exit_crit_edge
  %6 = phi i1 [ true, %lor.lhs.false.device_may_wakeup.exit_crit_edge ], [ %tobool2.i, %land.rhs.i17 ]
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 30
  %7 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %8)
  %cmp.i18 = icmp eq i32 %8, 4
  br i1 %cmp.i18, label %device_may_wakeup.exit.pci_target_state.exit_crit_edge, label %if.else.i

device_may_wakeup.exit.pci_target_state.exit_crit_edge: ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit

if.else.i:                                        ; preds = %device_may_wakeup.exit
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 32
  %9 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool7.not.i = icmp eq i8 %10, 0
  %brmerge.i = or i1 %6, %tobool7.not.i
  %.mux.i = select i1 %tobool7.not.i, i32 0, i32 3
  br i1 %brmerge.i, label %if.else.i.pci_target_state.exit_crit_edge, label %land.lhs.true.i

if.else.i.pci_target_state.exit_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit

land.lhs.true.i:                                  ; preds = %if.else.i
  %pme_support.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 33
  %11 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 4)
  %bf.load.i19 = load i32, ptr %pme_support.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load.i19)
  %tobool12.not.i = icmp ult i32 %bf.load.i19, 134217728
  br i1 %tobool12.not.i, label %land.lhs.true.i.pci_target_state.exit_crit_edge, label %while.cond.preheader.i

land.lhs.true.i.pci_target_state.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit

while.cond.preheader.i:                           ; preds = %land.lhs.true.i
  %12 = and i32 %bf.load.i19, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool19.not.i = icmp eq i32 %12, 0
  br i1 %tobool19.not.i, label %while.body.i, label %while.cond.preheader.i.cleanup31.thread.i_crit_edge

while.cond.preheader.i.cleanup31.thread.i_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.i:                                     ; preds = %while.cond.preheader.i
  %13 = and i32 %bf.load.i19, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool19.not.1.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.1.i, label %while.body.1.i, label %while.body.i.cleanup31.thread.i_crit_edge

while.body.i.cleanup31.thread.i_crit_edge:        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.1.i:                                   ; preds = %while.body.i
  %14 = and i32 %bf.load.i19, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool19.not.2.i = icmp eq i32 %14, 0
  br i1 %tobool19.not.2.i, label %while.body.2.i, label %while.body.1.i.cleanup31.thread.i_crit_edge

while.body.1.i.cleanup31.thread.i_crit_edge:      ; preds = %while.body.1.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.2.i:                                   ; preds = %while.body.1.i
  %15 = and i32 %bf.load.i19, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool27.not.i = icmp eq i32 %15, 0
  br i1 %tobool27.not.i, label %while.body.2.i.pci_target_state.exit_crit_edge, label %while.body.2.i.cleanup31.thread.i_crit_edge

while.body.2.i.cleanup31.thread.i_crit_edge:      ; preds = %while.body.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i

while.body.2.i.pci_target_state.exit_crit_edge:   ; preds = %while.body.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit

cleanup31.thread.i:                               ; preds = %while.body.2.i.cleanup31.thread.i_crit_edge, %while.body.1.i.cleanup31.thread.i_crit_edge, %while.body.i.cleanup31.thread.i_crit_edge, %while.cond.preheader.i.cleanup31.thread.i_crit_edge
  %state14.050.i = phi i32 [ 0, %while.body.2.i.cleanup31.thread.i_crit_edge ], [ 3, %while.cond.preheader.i.cleanup31.thread.i_crit_edge ], [ 2, %while.body.i.cleanup31.thread.i_crit_edge ], [ 1, %while.body.1.i.cleanup31.thread.i_crit_edge ]
  br label %pci_target_state.exit

pci_target_state.exit:                            ; preds = %cleanup31.thread.i, %while.body.2.i.pci_target_state.exit_crit_edge, %land.lhs.true.i.pci_target_state.exit_crit_edge, %if.else.i.pci_target_state.exit_crit_edge, %device_may_wakeup.exit.pci_target_state.exit_crit_edge
  %retval.2.i = phi i32 [ 4, %device_may_wakeup.exit.pci_target_state.exit_crit_edge ], [ %.mux.i, %if.else.i.pci_target_state.exit_crit_edge ], [ %state14.050.i, %cleanup31.thread.i ], [ 3, %while.body.2.i.pci_target_state.exit_crit_edge ], [ 3, %land.lhs.true.i.pci_target_state.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.2.i, i32 %8)
  %cmp.not = icmp ne i32 %retval.2.i, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %retval.2.i)
  %cmp5.not = icmp ne i32 %retval.2.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %8)
  %cmp7 = icmp ne i32 %8, 3
  %not.or.cond = and i1 %cmp.not, %cmp5.not
  %spec.select = and i1 %cmp7, %not.or.cond
  br label %cleanup

cleanup:                                          ; preds = %pci_target_state.exit, %pm_runtime_suspended.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %pm_runtime_suspended.exit.cleanup_crit_edge ], [ %spec.select, %pci_target_state.exit ], [ true, %entry.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_dev_adjust_pme(ptr noundef %pci_dev) local_unnamed_addr #5 align 64 {
entry:
  %pmcsr.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 3
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #24
  %runtime_status.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 18
  %0 = ptrtoint ptr %runtime_status.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %runtime_status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp.i = icmp eq i32 %1, 2
  br i1 %cmp.i, label %pm_runtime_suspended.exit, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

pm_runtime_suspended.exit:                        ; preds = %entry
  %disable_depth.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 15
  %2 = ptrtoint ptr %disable_depth.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %disable_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %bf.load.i)
  %tobool.not.i = icmp ult i16 %bf.load.i, 8192
  br i1 %tobool.not.i, label %land.lhs.true, label %pm_runtime_suspended.exit.if.end_crit_edge

pm_runtime_suspended.exit.if.end_crit_edge:       ; preds = %pm_runtime_suspended.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true:                                    ; preds = %pm_runtime_suspended.exit
  %can_wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 1
  %3 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load.i11 = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i11)
  %tobool.not.i12 = icmp sgt i16 %bf.load.i11, -1
  br i1 %tobool.not.i12, label %land.lhs.true.land.lhs.true3_crit_edge, label %device_may_wakeup.exit

land.lhs.true.land.lhs.true3_crit_edge:           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true3

device_may_wakeup.exit:                           ; preds = %land.lhs.true
  %wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 6
  %4 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %5, null
  br i1 %tobool2.i.not, label %device_may_wakeup.exit.land.lhs.true3_crit_edge, label %device_may_wakeup.exit.if.end_crit_edge

device_may_wakeup.exit.if.end_crit_edge:          ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

device_may_wakeup.exit.land.lhs.true3_crit_edge:  ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true3

land.lhs.true3:                                   ; preds = %device_may_wakeup.exit.land.lhs.true3_crit_edge, %land.lhs.true.land.lhs.true3_crit_edge
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 30
  %6 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %current_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %7)
  %cmp = icmp slt i32 %7, 4
  br i1 %cmp, label %if.then, label %land.lhs.true3.if.end_crit_edge

land.lhs.true3.if.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %land.lhs.true3
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr.i) #24
  %8 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %pmcsr.i, align 2, !annotation !731
  %pme_support.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 33
  %9 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 4)
  %bf.load.i14 = load i32, ptr %pme_support.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load.i14)
  %tobool.not.i15 = icmp ult i32 %bf.load.i14, 134217728
  br i1 %tobool.not.i15, label %if.then.__pci_pme_active.exit_crit_edge, label %if.end.i

if.then.__pci_pme_active.exit_crit_edge:          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_pme_active.exit

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 32
  %10 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %pm_cap.i, align 1
  %conv.i = zext i8 %11 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call.i = call i32 @pci_read_config_word(ptr noundef %pci_dev, i32 noundef %add.i, ptr noundef nonnull %pmcsr.i) #24
  %12 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %pmcsr.i, align 2
  %14 = and i16 %13, 32511
  %15 = or i16 %14, -32768
  store i16 %15, ptr %pmcsr.i, align 2
  %16 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %pm_cap.i, align 1
  %conv9.i = zext i8 %17 to i32
  %add10.i = add nuw nsw i32 %conv9.i, 4
  %call11.i = call i32 @pci_write_config_word(ptr noundef %pci_dev, i32 noundef %add10.i, i16 noundef zeroext %15) #24
  br label %__pci_pme_active.exit

__pci_pme_active.exit:                            ; preds = %if.end.i, %if.then.__pci_pme_active.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i) #24
  br label %if.end

if.end:                                           ; preds = %__pci_pme_active.exit, %land.lhs.true3.if.end_crit_edge, %device_may_wakeup.exit.if.end_crit_edge, %pm_runtime_suspended.exit.if.end_crit_edge, %entry.if.end_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_dev_complete_resume(ptr noundef %pci_dev) local_unnamed_addr #5 align 64 {
entry:
  %pmcsr.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1.i, align 8
  %pme_support.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 33
  %2 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 4)
  %bf.load.i = load i32, ptr %pme_support.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load.i)
  %tobool.not.i = icmp ult i32 %bf.load.i, 134217728
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %current_state.i.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 30
  %3 = ptrtoint ptr %current_state.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %current_state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %4)
  %cmp.i.i = icmp eq i32 %4, 4
  br i1 %cmp.i.i, label %if.end.i.pci_target_state.exit.i_crit_edge, label %if.else.i.i

if.end.i.pci_target_state.exit.i_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit.i

if.else.i.i:                                      ; preds = %if.end.i
  %pm_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 32
  %5 = ptrtoint ptr %pm_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %pm_cap.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool7.not.i.i = icmp eq i8 %6, 0
  br i1 %tobool7.not.i.i, label %if.else.i.i.pci_target_state.exit.i_crit_edge, label %while.cond.preheader.i.i

if.else.i.i.pci_target_state.exit.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit.i

while.cond.preheader.i.i:                         ; preds = %if.else.i.i
  %7 = and i32 %bf.load.i, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool19.not.i.i = icmp eq i32 %7, 0
  br i1 %tobool19.not.i.i, label %while.body.i.i, label %while.cond.preheader.i.i.cleanup31.thread.i.i_crit_edge

while.cond.preheader.i.i.cleanup31.thread.i.i_crit_edge: ; preds = %while.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i.i

while.body.i.i:                                   ; preds = %while.cond.preheader.i.i
  %8 = and i32 %bf.load.i, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool19.not.1.i.i = icmp eq i32 %8, 0
  br i1 %tobool19.not.1.i.i, label %while.body.1.i.i, label %while.body.i.i.cleanup31.thread.i.i_crit_edge

while.body.i.i.cleanup31.thread.i.i_crit_edge:    ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i.i

while.body.1.i.i:                                 ; preds = %while.body.i.i
  %9 = and i32 %bf.load.i, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool19.not.2.i.i = icmp eq i32 %9, 0
  br i1 %tobool19.not.2.i.i, label %while.body.2.i.i, label %while.body.1.i.i.cleanup31.thread.i.i_crit_edge

while.body.1.i.i.cleanup31.thread.i.i_crit_edge:  ; preds = %while.body.1.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i.i

while.body.2.i.i:                                 ; preds = %while.body.1.i.i
  %10 = and i32 %bf.load.i, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool27.not.i.i = icmp eq i32 %10, 0
  br i1 %tobool27.not.i.i, label %while.body.2.i.i.pci_target_state.exit.i_crit_edge, label %while.body.2.i.i.cleanup31.thread.i.i_crit_edge

while.body.2.i.i.cleanup31.thread.i.i_crit_edge:  ; preds = %while.body.2.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup31.thread.i.i

while.body.2.i.i.pci_target_state.exit.i_crit_edge: ; preds = %while.body.2.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_target_state.exit.i

cleanup31.thread.i.i:                             ; preds = %while.body.2.i.i.cleanup31.thread.i.i_crit_edge, %while.body.1.i.i.cleanup31.thread.i.i_crit_edge, %while.body.i.i.cleanup31.thread.i.i_crit_edge, %while.cond.preheader.i.i.cleanup31.thread.i.i_crit_edge
  %state14.050.i.i = phi i32 [ 0, %while.body.2.i.i.cleanup31.thread.i.i_crit_edge ], [ 3, %while.cond.preheader.i.i.cleanup31.thread.i.i_crit_edge ], [ 2, %while.body.i.i.cleanup31.thread.i.i_crit_edge ], [ 1, %while.body.1.i.i.cleanup31.thread.i.i_crit_edge ]
  br label %pci_target_state.exit.i

pci_target_state.exit.i:                          ; preds = %cleanup31.thread.i.i, %while.body.2.i.i.pci_target_state.exit.i_crit_edge, %if.else.i.i.pci_target_state.exit.i_crit_edge, %if.end.i.pci_target_state.exit.i_crit_edge
  %retval.2.i.i = phi i32 [ 4, %if.end.i.pci_target_state.exit.i_crit_edge ], [ 0, %if.else.i.i.pci_target_state.exit.i_crit_edge ], [ %state14.050.i.i, %cleanup31.thread.i.i ], [ 3, %while.body.2.i.i.pci_target_state.exit.i_crit_edge ]
  %pm_cap.i30.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 32
  %11 = ptrtoint ptr %pm_cap.i30.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %pm_cap.i30.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.not.i.i = icmp eq i8 %12, 0
  br i1 %tobool.not.i.i, label %pci_target_state.exit.i.cleanup_crit_edge, label %pci_pme_capable.exit.i

pci_target_state.exit.i.cleanup_crit_edge:        ; preds = %pci_target_state.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_pme_capable.exit.i:                           ; preds = %pci_target_state.exit.i
  %bf.lshr.i.i = lshr i32 %bf.load.i, 27
  %shl.i.i = shl nuw nsw i32 1, %retval.2.i.i
  %and.i.i = and i32 %shl.i.i, %bf.lshr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool1.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool1.i.not.i, label %pci_pme_capable.exit.i.cleanup_crit_edge, label %if.end4.i

pci_pme_capable.exit.i.cleanup_crit_edge:         ; preds = %pci_pme_capable.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end4.i:                                        ; preds = %pci_pme_capable.exit.i
  %can_wakeup.i.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 1
  %13 = ptrtoint ptr %can_wakeup.i.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %bf.load.i33.i = load i16, ptr %can_wakeup.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load.i33.i)
  %tobool.i.i = icmp slt i16 %bf.load.i33.i, 0
  br i1 %tobool.i.i, label %if.end4.i.if.end_crit_edge, label %if.end4.i.while.cond.i_crit_edge

if.end4.i.while.cond.i_crit_edge:                 ; preds = %if.end4.i
  br label %while.cond.i

if.end4.i.if.end_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

while.cond.i:                                     ; preds = %while.body.i.while.cond.i_crit_edge, %if.end4.i.while.cond.i_crit_edge
  %bus.0.i = phi ptr [ %15, %while.body.i.while.cond.i_crit_edge ], [ %1, %if.end4.i.while.cond.i_crit_edge ]
  %parent.i = getelementptr inbounds %struct.pci_bus, ptr %bus.0.i, i32 0, i32 1
  %14 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %parent.i, align 8
  %tobool9.not.i = icmp eq ptr %15, null
  br i1 %tobool9.not.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %bus.0.i, i32 0, i32 4
  %16 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %self.i, align 4
  %can_wakeup.i34.i = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44, i32 12, i32 1
  %18 = ptrtoint ptr %can_wakeup.i34.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %bf.load.i35.i = load i16, ptr %can_wakeup.i34.i, align 4
  %tobool.i36.i = icmp slt i16 %bf.load.i35.i, 0
  br i1 %tobool.i36.i, label %while.body.i.if.end_crit_edge, label %while.body.i.while.cond.i_crit_edge

while.body.i.while.cond.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.cond.i

while.body.i.if.end_crit_edge:                    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

while.end.i:                                      ; preds = %while.cond.i
  %bridge15.i = getelementptr inbounds %struct.pci_bus, ptr %bus.0.i, i32 0, i32 20
  %19 = ptrtoint ptr %bridge15.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %bridge15.i, align 8
  %tobool16.not.i = icmp eq ptr %20, null
  br i1 %tobool16.not.i, label %while.end.i.cleanup_crit_edge, label %pci_dev_run_wake.exit

while.end.i.cleanup_crit_edge:                    ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_dev_run_wake.exit:                            ; preds = %while.end.i
  %can_wakeup.i37.i = getelementptr inbounds %struct.device, ptr %20, i32 0, i32 12, i32 1
  %21 = ptrtoint ptr %can_wakeup.i37.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %bf.load.i38.i = load i16, ptr %can_wakeup.i37.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load.i38.i)
  %tobool.i39.i = icmp slt i16 %bf.load.i38.i, 0
  br i1 %tobool.i39.i, label %pci_dev_run_wake.exit.if.end_crit_edge, label %pci_dev_run_wake.exit.cleanup_crit_edge

pci_dev_run_wake.exit.cleanup_crit_edge:          ; preds = %pci_dev_run_wake.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_dev_run_wake.exit.if.end_crit_edge:           ; preds = %pci_dev_run_wake.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end:                                           ; preds = %pci_dev_run_wake.exit.if.end_crit_edge, %while.body.i.if.end_crit_edge, %if.end4.i.if.end_crit_edge
  %lock = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 3
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #24
  %runtime_status.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 18
  %22 = ptrtoint ptr %runtime_status.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %runtime_status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %23)
  %cmp.i = icmp eq i32 %23, 2
  br i1 %cmp.i, label %pm_runtime_suspended.exit, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4

pm_runtime_suspended.exit:                        ; preds = %if.end
  %disable_depth.i = getelementptr inbounds %struct.pci_dev, ptr %pci_dev, i32 0, i32 44, i32 12, i32 15
  %24 = ptrtoint ptr %disable_depth.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %bf.load.i12 = load i16, ptr %disable_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %bf.load.i12)
  %tobool.not.i13 = icmp ult i16 %bf.load.i12, 8192
  br i1 %tobool.not.i13, label %land.lhs.true, label %pm_runtime_suspended.exit.if.end4_crit_edge

pm_runtime_suspended.exit.if.end4_crit_edge:      ; preds = %pm_runtime_suspended.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4

land.lhs.true:                                    ; preds = %pm_runtime_suspended.exit
  %25 = ptrtoint ptr %current_state.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %current_state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %26)
  %cmp = icmp slt i32 %26, 4
  br i1 %cmp, label %if.then3, label %land.lhs.true.if.end4_crit_edge

land.lhs.true.if.end4_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end4

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr.i) #24
  %27 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 -1, ptr %pmcsr.i, align 2, !annotation !731
  %28 = ptrtoint ptr %pme_support.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 4)
  %bf.load.i15 = load i32, ptr %pme_support.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 134217728, i32 %bf.load.i15)
  %tobool.not.i16 = icmp ult i32 %bf.load.i15, 134217728
  br i1 %tobool.not.i16, label %if.then3.__pci_pme_active.exit_crit_edge, label %if.end.i17

if.then3.__pci_pme_active.exit_crit_edge:         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_pme_active.exit

if.end.i17:                                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #26
  %29 = ptrtoint ptr %pm_cap.i30.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %pm_cap.i30.i, align 1
  %conv.i = zext i8 %30 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call.i = call i32 @pci_read_config_word(ptr noundef %pci_dev, i32 noundef %add.i, ptr noundef nonnull %pmcsr.i) #24
  %31 = ptrtoint ptr %pmcsr.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %pmcsr.i, align 2
  %33 = or i16 %32, -32512
  store i16 %33, ptr %pmcsr.i, align 2
  %34 = ptrtoint ptr %pm_cap.i30.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %pm_cap.i30.i, align 1
  %conv9.i = zext i8 %35 to i32
  %add10.i = add nuw nsw i32 %conv9.i, 4
  %call11.i = call i32 @pci_write_config_word(ptr noundef %pci_dev, i32 noundef %add10.i, i16 noundef zeroext %33) #24
  br label %__pci_pme_active.exit

__pci_pme_active.exit:                            ; preds = %if.end.i17, %if.then3.__pci_pme_active.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i) #24
  br label %if.end4

if.end4:                                          ; preds = %__pci_pme_active.exit, %land.lhs.true.if.end4_crit_edge, %pm_runtime_suspended.exit.if.end4_crit_edge, %if.end.if.end4_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %pci_dev_run_wake.exit.cleanup_crit_edge, %while.end.i.cleanup_crit_edge, %pci_pme_capable.exit.i.cleanup_crit_edge, %pci_target_state.exit.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @pci_choose_state(ptr nocapture noundef readonly %dev, [1 x i32] %state.coerce) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %state.coerce.fca.0.extract = extractvalue [1 x i32] %state.coerce, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state.coerce.fca.0.extract)
  %cmp = icmp eq i32 %state.coerce.fca.0.extract, 0
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %entry
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %0 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %1)
  %cmp.i = icmp eq i32 %1, 4
  br i1 %cmp.i, label %if.end.return_crit_edge, label %if.else.i

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.else.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %2 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool7.not.i = icmp eq i8 %3, 0
  %.mux.i = select i1 %tobool7.not.i, i32 0, i32 3
  br label %return

return:                                           ; preds = %if.else.i, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %entry.return_crit_edge ], [ 4, %if.end.return_crit_edge ], [ %.mux.i, %if.else.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_config_pm_runtime_get(ptr noundef %pdev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %parent2 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 1
  %0 = ptrtoint ptr %parent2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent2, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef nonnull %1, i32 noundef 4) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %usage_count.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 12, i32 13
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i, i32 noundef 4) #24
  tail call void @llvm.prefetch.p0(ptr %usage_count.i, i32 1, i32 3, i32 1) #24
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i, ptr %usage_count.i, i32 1, ptr elementtype(i32) %usage_count.i) #24, !srcloc !744
  %call3 = tail call i32 @pm_runtime_barrier(ptr noundef %dev1) #24
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 30
  %3 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %current_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %4)
  %cmp = icmp eq i32 %4, 4
  br i1 %cmp, label %if.then4, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %call.i12 = tail call i32 @__pm_runtime_resume(ptr noundef %dev1, i32 noundef 0) #24
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end.if.end6_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pm_runtime_barrier(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_config_pm_runtime_put(ptr noundef %pdev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %parent2 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 1
  %0 = ptrtoint ptr %parent2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent2, align 8
  %call.i = tail call i32 @__pm_runtime_idle(ptr noundef %dev1, i32 noundef 5) #24
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %call.i6 = tail call i32 @__pm_runtime_idle(ptr noundef nonnull %1, i32 noundef 4) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @pci_bridge_d3_possible(ptr nocapture noundef readonly %bridge) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %bridge, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not = icmp eq i8 %1, 0
  br i1 %tobool.i.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %entry
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %bridge, i32 0, i32 25
  %2 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %4 = lshr i16 %3, 4
  %5 = and i16 %4, 15
  %6 = zext i16 %5 to i32
  %call1.off = add nsw i32 %6, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call1.off)
  %switch = icmp ult i32 %call1.off, 3
  br i1 %switch, label %sw.bb, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

sw.bb:                                            ; preds = %if.end
  %.b43 = load i1, ptr @pci_bridge_d3_disable, align 1
  br i1 %.b43, label %sw.bb.return_crit_edge, label %if.end3

sw.bb.return_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end3:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #26
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, ptr %bridge, i32 0, i32 49
  %7 = ptrtoint ptr %is_hotplug_bridge to i32
  call void @__asan_loadN_noabort(i32 %7, i32 5)
  %bf.load = load i40, ptr %is_hotplug_bridge, align 1
  %.b4244 = load i1, ptr @pci_bridge_d3_force, align 1
  %8 = and i40 %bf.load, 8192
  %tobool15.not = icmp ne i40 %8, 0
  %not.or.cond = select i1 %.b4244, i1 true, i1 %tobool15.not
  br label %return

return:                                           ; preds = %if.end3, %sw.bb.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %entry.return_crit_edge ], [ false, %sw.bb.return_crit_edge ], [ false, %if.end.return_crit_edge ], [ %not.or.cond, %if.end3 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_bridge_d3_update(ptr nocapture noundef readonly %dev) local_unnamed_addr #5 align 64 {
entry:
  %d3cold_ok = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %state_in_sysfs.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 0, i32 8
  %0 = ptrtoint ptr %state_in_sysfs.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i = load i8, ptr %state_in_sysfs.i, align 4
  %1 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %d3cold_ok) #24
  %2 = ptrtoint ptr %d3cold_ok to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %d3cold_ok, align 1
  %is_virtfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %3 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %3, i32 5)
  %bf.load.i.i = load i40, ptr %is_virtfn.i.i, align 1
  %4 = and i40 %bf.load.i.i, 65536
  %tobool.not.i.i = icmp eq i40 %4, 0
  br i1 %tobool.not.i.i, label %entry.pci_physfn.exit.i_crit_edge, label %if.then.i.i

entry.pci_physfn.exit.i_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_physfn.exit.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %5 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 66
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  br label %pci_physfn.exit.i

pci_physfn.exit.i:                                ; preds = %if.then.i.i, %entry.pci_physfn.exit.i_crit_edge
  %dev.addr.0.i.i = phi ptr [ %7, %if.then.i.i ], [ %dev, %entry.pci_physfn.exit.i_crit_edge ]
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i5.i = icmp eq ptr %11, null
  br i1 %tobool.not.i5.i, label %pci_physfn.exit.i.cleanup_crit_edge, label %pci_upstream_bridge.exit

pci_physfn.exit.i.cleanup_crit_edge:              ; preds = %pci_physfn.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_upstream_bridge.exit:                         ; preds = %pci_physfn.exit.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %9, i32 0, i32 4
  %12 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %self.i, align 4
  %tobool3.not = icmp eq ptr %13, null
  br i1 %tobool3.not, label %pci_upstream_bridge.exit.cleanup_crit_edge, label %lor.lhs.false

pci_upstream_bridge.exit.cleanup_crit_edge:       ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false:                                    ; preds = %pci_upstream_bridge.exit
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 19
  %14 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.i.not.i = icmp eq i8 %15, 0
  br i1 %tobool.i.not.i, label %lor.lhs.false.cleanup_crit_edge, label %if.end.i47

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.i47:                                       ; preds = %lor.lhs.false
  %pcie_flags_reg.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 25
  %16 = ptrtoint ptr %pcie_flags_reg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %pcie_flags_reg.i.i.i, align 2
  %18 = lshr i16 %17, 4
  %19 = and i16 %18, 15
  %20 = zext i16 %19 to i32
  %call1.off.i = add nsw i32 %20, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call1.off.i)
  %switch.i = icmp ult i32 %call1.off.i, 3
  br i1 %switch.i, label %sw.bb.i, label %if.end.i47.cleanup_crit_edge

if.end.i47.cleanup_crit_edge:                     ; preds = %if.end.i47
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end.i47
  %.b43.i = load i1, ptr @pci_bridge_d3_disable, align 1
  br i1 %.b43.i, label %sw.bb.i.cleanup_crit_edge, label %pci_bridge_d3_possible.exit

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_bridge_d3_possible.exit:                      ; preds = %sw.bb.i
  %is_hotplug_bridge.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 49
  %21 = ptrtoint ptr %is_hotplug_bridge.i to i32
  call void @__asan_loadN_noabort(i32 %21, i32 5)
  %bf.load.i48 = load i40, ptr %is_hotplug_bridge.i, align 1
  %.b4244.i = load i1, ptr @pci_bridge_d3_force, align 1
  %22 = and i40 %bf.load.i48, 8192
  %tobool15.not.i = icmp ne i40 %22, 0
  %not.or.cond.i = select i1 %.b4244.i, i1 true, i1 %tobool15.not.i
  br i1 %not.or.cond.i, label %if.end, label %pci_bridge_d3_possible.exit.cleanup_crit_edge

pci_bridge_d3_possible.exit.cleanup_crit_edge:    ; preds = %pci_bridge_d3_possible.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %pci_bridge_d3_possible.exit
  br i1 %tobool.not, label %land.lhs.true, label %if.then10.critedge

land.lhs.true:                                    ; preds = %if.end
  %bridge_d3 = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 33
  %23 = ptrtoint ptr %bridge_d3 to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %bf.load = load i32, ptr %bridge_d3, align 2
  %24 = and i32 %bf.load, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool6.not = icmp eq i32 %24, 0
  br i1 %tobool6.not, label %land.lhs.true.if.end12_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end12

if.then10.critedge:                               ; preds = %if.end
  %no_d3cold.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %25 = ptrtoint ptr %no_d3cold.i to i32
  call void @__asan_loadN_noabort(i32 %25, i32 4)
  %bf.load.i50 = load i32, ptr %no_d3cold.i, align 2
  %26 = and i32 %bf.load.i50, 5242880
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %26)
  %.not.i = icmp eq i32 %26, 1048576
  br i1 %.not.i, label %lor.lhs.false5.i, label %if.then10.critedge.if.end12.thread_crit_edge

if.then10.critedge.if.end12.thread_crit_edge:     ; preds = %if.then10.critedge
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end12.thread

lor.lhs.false5.i:                                 ; preds = %if.then10.critedge
  %can_wakeup.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %27 = ptrtoint ptr %can_wakeup.i.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %bf.load.i.i51 = load i16, ptr %can_wakeup.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i.i51)
  %tobool.not.i.i52 = icmp sgt i16 %bf.load.i.i51, -1
  br i1 %tobool.not.i.i52, label %lor.lhs.false5.i.lor.lhs.false8.i_crit_edge, label %device_may_wakeup.exit.i

lor.lhs.false5.i.lor.lhs.false8.i_crit_edge:      ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false8.i

device_may_wakeup.exit.i:                         ; preds = %lor.lhs.false5.i
  %wakeup.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 6
  %28 = ptrtoint ptr %wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %wakeup.i.i, align 8
  %tobool2.i.not.i = icmp eq ptr %29, null
  br i1 %tobool2.i.not.i, label %device_may_wakeup.exit.i.lor.lhs.false8.i_crit_edge, label %land.lhs.true.i

device_may_wakeup.exit.i.lor.lhs.false8.i_crit_edge: ; preds = %device_may_wakeup.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false8.i

land.lhs.true.i:                                  ; preds = %device_may_wakeup.exit.i
  %pm_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %30 = ptrtoint ptr %pm_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %pm_cap.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool.not.i16.i = icmp ne i8 %31, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bf.load.i50)
  %tobool1.i.i = icmp slt i32 %bf.load.i50, 0
  %or.cond20.i = select i1 %tobool.not.i16.i, i1 %tobool1.i.i, i1 false
  br i1 %or.cond20.i, label %land.lhs.true.i.lor.lhs.false8.i_crit_edge, label %land.lhs.true.i.if.end12.thread_crit_edge

land.lhs.true.i.if.end12.thread_crit_edge:        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end12.thread

land.lhs.true.i.lor.lhs.false8.i_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false8.i

lor.lhs.false8.i:                                 ; preds = %land.lhs.true.i.lor.lhs.false8.i_crit_edge, %device_may_wakeup.exit.i.lor.lhs.false8.i_crit_edge, %lor.lhs.false5.i.lor.lhs.false8.i_crit_edge
  %subordinate.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %32 = ptrtoint ptr %subordinate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %subordinate.i.i.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %33, null
  %34 = and i32 %bf.load.i50, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.i.i = icmp ne i32 %34, 0
  %or.cond21.i = select i1 %tobool.i.not.i.i, i1 true, i1 %tobool.i.i
  br i1 %or.cond21.i, label %lor.lhs.false8.i.if.end12_crit_edge, label %lor.lhs.false8.i.if.end12.thread_crit_edge

lor.lhs.false8.i.if.end12.thread_crit_edge:       ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end12.thread

lor.lhs.false8.i.if.end12_crit_edge:              ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end12

if.end12.thread:                                  ; preds = %lor.lhs.false8.i.if.end12.thread_crit_edge, %land.lhs.true.i.if.end12.thread_crit_edge, %if.then10.critedge.if.end12.thread_crit_edge
  %35 = ptrtoint ptr %d3cold_ok to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 0, ptr %d3cold_ok, align 1
  br label %if.end21

if.end12:                                         ; preds = %lor.lhs.false8.i.if.end12_crit_edge, %land.lhs.true.if.end12_crit_edge
  %36 = ptrtoint ptr %d3cold_ok to i32
  call void @__asan_load1_noabort(i32 %36)
  %.pr = load i8, ptr %d3cold_ok, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool13.not = icmp eq i8 %.pr, 0
  br i1 %tobool13.not, label %if.end12.if.end21_crit_edge, label %land.lhs.true14

if.end12.if.end21_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end21

land.lhs.true14:                                  ; preds = %if.end12
  %bridge_d315 = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 33
  %37 = ptrtoint ptr %bridge_d315 to i32
  call void @__asan_loadN_noabort(i32 %37, i32 4)
  %bf.load16 = load i32, ptr %bridge_d315, align 2
  %38 = and i32 %bf.load16, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool19.not = icmp eq i32 %38, 0
  br i1 %tobool19.not, label %if.then20, label %land.lhs.true14.if.end21_crit_edge

land.lhs.true14.if.end21_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end21

if.then20:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #26
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 2
  %39 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %subordinate, align 4
  call void @pci_walk_bus(ptr noundef %40, ptr noundef nonnull @pci_dev_check_d3cold, ptr noundef nonnull %d3cold_ok) #24
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %land.lhs.true14.if.end21_crit_edge, %if.end12.if.end21_crit_edge, %if.end12.thread
  %bridge_d322 = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 33
  %41 = ptrtoint ptr %bridge_d322 to i32
  call void @__asan_loadN_noabort(i32 %41, i32 4)
  %bf.load23 = load i32, ptr %bridge_d322, align 2
  %bf.lshr24 = lshr i32 %bf.load23, 21
  %bf.clear25 = and i32 %bf.lshr24, 1
  %42 = ptrtoint ptr %d3cold_ok to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %d3cold_ok, align 1, !range !732
  %44 = zext i8 %43 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %bf.clear25, i32 %44)
  %cmp.not = icmp eq i32 %bf.clear25, %44
  br i1 %cmp.not, label %if.end21.cleanup_crit_edge, label %if.then28

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then28:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #26
  %bf.shl = shl nuw nsw i32 %44, 21
  %bf.clear33 = and i32 %bf.load23, -2097153
  %bf.set = or i32 %bf.shl, %bf.clear33
  %45 = ptrtoint ptr %bridge_d322 to i32
  call void @__asan_storeN_noabort(i32 %45, i32 4)
  store i32 %bf.set, ptr %bridge_d322, align 2
  call void @pci_bridge_d3_update(ptr noundef nonnull %13)
  br label %cleanup

cleanup:                                          ; preds = %if.then28, %if.end21.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %pci_bridge_d3_possible.exit.cleanup_crit_edge, %sw.bb.i.cleanup_crit_edge, %if.end.i47.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %pci_upstream_bridge.exit.cleanup_crit_edge, %pci_physfn.exit.i.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %d3cold_ok) #24
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_dev_check_d3cold(ptr nocapture noundef readonly %dev, ptr nocapture noundef %data) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %no_d3cold = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %no_d3cold to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %no_d3cold, align 2
  %1 = and i32 %bf.load, 5242880
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %1)
  %.not = icmp eq i32 %1, 1048576
  br i1 %.not, label %lor.lhs.false5, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then

lor.lhs.false5:                                   ; preds = %entry
  %can_wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %2 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %lor.lhs.false5.lor.lhs.false8_crit_edge, label %device_may_wakeup.exit

lor.lhs.false5.lor.lhs.false8_crit_edge:          ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false8

device_may_wakeup.exit:                           ; preds = %lor.lhs.false5
  %wakeup.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 6
  %3 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %4, null
  br i1 %tobool2.i.not, label %device_may_wakeup.exit.lor.lhs.false8_crit_edge, label %land.lhs.true

device_may_wakeup.exit.lor.lhs.false8_crit_edge:  ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false8

land.lhs.true:                                    ; preds = %device_may_wakeup.exit
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %5 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i16 = icmp ne i8 %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bf.load)
  %tobool1.i = icmp slt i32 %bf.load, 0
  %or.cond20 = select i1 %tobool.not.i16, i1 %tobool1.i, i1 false
  br i1 %or.cond20, label %land.lhs.true.lor.lhs.false8_crit_edge, label %land.lhs.true.if.then_crit_edge

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then

land.lhs.true.lor.lhs.false8_crit_edge:           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %land.lhs.true.lor.lhs.false8_crit_edge, %device_may_wakeup.exit.lor.lhs.false8_crit_edge, %lor.lhs.false5.lor.lhs.false8_crit_edge
  %subordinate.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %7 = ptrtoint ptr %subordinate.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %subordinate.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %8, null
  %9 = and i32 %bf.load, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i = icmp ne i32 %9, 0
  %or.cond21 = select i1 %tobool.i.not.i, i1 true, i1 %tobool.i
  br i1 %or.cond21, label %lor.lhs.false8.if.end_crit_edge, label %lor.lhs.false8.if.then_crit_edge

lor.lhs.false8.if.then_crit_edge:                 ; preds = %lor.lhs.false8
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then

lor.lhs.false8.if.end_crit_edge:                  ; preds = %lor.lhs.false8
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false8.if.then_crit_edge, %land.lhs.true.if.then_crit_edge, %entry.if.then_crit_edge
  %10 = ptrtoint ptr %data to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 0, ptr %data, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false8.if.end_crit_edge
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %data, align 1, !range !732
  %13 = xor i8 %12, 1
  %14 = zext i8 %13 to i32
  ret i32 %14
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_d3cold_enable(ptr nocapture noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %no_d3cold = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %no_d3cold to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %no_d3cold, align 2
  %1 = and i32 %bf.load, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %bf.clear3 = and i32 %bf.load, -4194305
  %2 = ptrtoint ptr %no_d3cold to i32
  call void @__asan_storeN_noabort(i32 %2, i32 4)
  store i32 %bf.clear3, ptr %no_d3cold, align 2
  tail call void @pci_bridge_d3_update(ptr noundef %dev)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_d3cold_disable(ptr nocapture noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %no_d3cold = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %no_d3cold to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %no_d3cold, align 2
  %1 = and i32 %bf.load, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %bf.set = or i32 %bf.load, 4194304
  %2 = ptrtoint ptr %no_d3cold to i32
  call void @__asan_storeN_noabort(i32 %2, i32 4)
  store i32 %bf.set, ptr %no_d3cold, align 2
  tail call void @pci_bridge_d3_update(ptr noundef %dev)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_pm_init(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %status = alloca i16, align 2
  %pmc = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %status) #24
  %0 = ptrtoint ptr %status to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %status, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmc) #24
  %1 = ptrtoint ptr %pmc to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %pmc, align 2, !annotation !731
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void @pm_runtime_forbid(ptr noundef %dev1) #24
  %call.i = tail call i32 @__pm_runtime_set_status(ptr noundef %dev1, i32 noundef 0) #24
  tail call void @pm_runtime_enable(ptr noundef %dev1) #24
  %is_prepared.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %2 = ptrtoint ptr %is_prepared.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %is_prepared.i, align 4
  %3 = and i16 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %bf.cast.not.i = icmp eq i16 %3, 0
  br i1 %bf.cast.not.i, label %if.then.i, label %entry.device_enable_async_suspend.exit_crit_edge

entry.device_enable_async_suspend.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %device_enable_async_suspend.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %bf.set.i = or i16 %bf.load.i, 16384
  %4 = ptrtoint ptr %is_prepared.i to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %bf.set.i, ptr %is_prepared.i, align 4
  br label %device_enable_async_suspend.exit

device_enable_async_suspend.exit:                 ; preds = %if.then.i, %entry.device_enable_async_suspend.exit_crit_edge
  %wakeup_prepared = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %5 = ptrtoint ptr %wakeup_prepared to i32
  call void @__asan_loadN_noabort(i32 %5, i32 4)
  %bf.load = load i32, ptr %wakeup_prepared, align 2
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %6 = ptrtoint ptr %pm_cap to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %pm_cap, align 1
  %bf.clear6 = and i32 %bf.load, 133955583
  store i32 %bf.clear6, ptr %wakeup_prepared, align 2
  %call8 = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call8)
  %tobool.not = icmp eq i8 %call8, 0
  br i1 %tobool.not, label %device_enable_async_suspend.exit.cleanup_crit_edge, label %if.end

device_enable_async_suspend.exit.cleanup_crit_edge: ; preds = %device_enable_async_suspend.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %device_enable_async_suspend.exit
  %conv = zext i8 %call8 to i32
  %add = add nuw nsw i32 %conv, 2
  %call9 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %pmc) #24
  %7 = ptrtoint ptr %pmc to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %pmc, align 2
  %9 = and i16 %8, 7
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %9)
  %cmp = icmp ugt i16 %9, 3
  br i1 %cmp, label %do.end, label %if.end16

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %and = zext i16 %9 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev1, ptr noundef nonnull @.str.23, i32 noundef %and) #28
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %10 = ptrtoint ptr %pm_cap to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %call8, ptr %pm_cap, align 1
  %d3hot_delay = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 35
  %11 = ptrtoint ptr %d3hot_delay to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 10, ptr %d3hot_delay, align 8
  %d3cold_delay = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 36
  %12 = ptrtoint ptr %d3cold_delay to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 100, ptr %d3cold_delay, align 4
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %13 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.i.not.i = icmp eq i8 %14, 0
  br i1 %tobool.i.not.i, label %if.end16.pci_bridge_d3_possible.exit.thread_crit_edge, label %if.end.i

if.end16.pci_bridge_d3_possible.exit.thread_crit_edge: ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_bridge_d3_possible.exit.thread

if.end.i:                                         ; preds = %if.end16
  %pcie_flags_reg.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %15 = ptrtoint ptr %pcie_flags_reg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %pcie_flags_reg.i.i.i, align 2
  %17 = lshr i16 %16, 4
  %18 = and i16 %17, 15
  %19 = zext i16 %18 to i32
  %call1.off.i = add nsw i32 %19, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call1.off.i)
  %switch.i = icmp ult i32 %call1.off.i, 3
  br i1 %switch.i, label %sw.bb.i, label %if.end.i.pci_bridge_d3_possible.exit.thread_crit_edge

if.end.i.pci_bridge_d3_possible.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_bridge_d3_possible.exit.thread

sw.bb.i:                                          ; preds = %if.end.i
  %.b43.i = load i1, ptr @pci_bridge_d3_disable, align 1
  br i1 %.b43.i, label %sw.bb.i.pci_bridge_d3_possible.exit.thread_crit_edge, label %pci_bridge_d3_possible.exit

sw.bb.i.pci_bridge_d3_possible.exit.thread_crit_edge: ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_bridge_d3_possible.exit.thread

pci_bridge_d3_possible.exit:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #26
  %is_hotplug_bridge.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %20 = ptrtoint ptr %is_hotplug_bridge.i to i32
  call void @__asan_loadN_noabort(i32 %20, i32 5)
  %bf.load.i167 = load i40, ptr %is_hotplug_bridge.i, align 1
  %.b4244.i = load i1, ptr @pci_bridge_d3_force, align 1
  %21 = and i40 %bf.load.i167, 8192
  %tobool15.not.i = icmp ne i40 %21, 0
  %not.or.cond.i = select i1 %.b4244.i, i1 true, i1 %tobool15.not.i
  %spec.select = select i1 %not.or.cond.i, i32 2097152, i32 0
  br label %pci_bridge_d3_possible.exit.thread

pci_bridge_d3_possible.exit.thread:               ; preds = %pci_bridge_d3_possible.exit, %sw.bb.i.pci_bridge_d3_possible.exit.thread_crit_edge, %if.end.i.pci_bridge_d3_possible.exit.thread_crit_edge, %if.end16.pci_bridge_d3_possible.exit.thread_crit_edge
  %22 = phi i32 [ %spec.select, %pci_bridge_d3_possible.exit ], [ 0, %if.end16.pci_bridge_d3_possible.exit.thread_crit_edge ], [ 0, %sw.bb.i.pci_bridge_d3_possible.exit.thread_crit_edge ], [ 0, %if.end.i.pci_bridge_d3_possible.exit.thread_crit_edge ]
  %23 = ptrtoint ptr %wakeup_prepared to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %bf.load21173 = load i32, ptr %wakeup_prepared, align 2
  %bf.clear22 = and i32 %bf.load21173, -53477377
  %bf.set23 = or i32 %bf.clear22, %22
  %bf.set26 = or i32 %bf.set23, 1048576
  store i32 %bf.set26, ptr %wakeup_prepared, align 2
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %24 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %bus.i, align 8
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %25, i32 0, i32 4
  %26 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %self.i, align 4
  %tobool.not.i = icmp eq ptr %27, null
  br i1 %tobool.not.i, label %pci_bridge_d3_possible.exit.thread.pci_no_d1d2.exit_crit_edge, label %if.then.i169

pci_bridge_d3_possible.exit.thread.pci_no_d1d2.exit_crit_edge: ; preds = %pci_bridge_d3_possible.exit.thread
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_no_d1d2.exit

if.then.i169:                                     ; preds = %pci_bridge_d3_possible.exit.thread
  call void @__sanitizer_cov_trace_pc() #26
  %no_d1d2.i = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 33
  %28 = ptrtoint ptr %no_d1d2.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 4)
  %bf.load.i168 = load i32, ptr %no_d1d2.i, align 2
  %29 = and i32 %bf.load.i168, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %phi.cmp = icmp eq i32 %29, 0
  br label %pci_no_d1d2.exit

pci_no_d1d2.exit:                                 ; preds = %if.then.i169, %pci_bridge_d3_possible.exit.thread.pci_no_d1d2.exit_crit_edge
  %parent_dstates.0.i = phi i1 [ %phi.cmp, %if.then.i169 ], [ true, %pci_bridge_d3_possible.exit.thread.pci_no_d1d2.exit_crit_edge ]
  %30 = and i32 %bf.load21173, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool7.not.i = icmp eq i32 %30, 0
  %tobool34.not = select i1 %tobool7.not.i, i1 %parent_dstates.0.i, i1 false
  br i1 %tobool34.not, label %if.then35, label %pci_no_d1d2.exit.if.end80_crit_edge

pci_no_d1d2.exit.if.end80_crit_edge:              ; preds = %pci_no_d1d2.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end80

if.then35:                                        ; preds = %pci_no_d1d2.exit
  %31 = and i16 %8, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %31)
  %tobool38.not = icmp eq i16 %31, 0
  br i1 %tobool38.not, label %if.then35.if.end44_crit_edge, label %if.then39

if.then35.if.end44_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end44

if.then39:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #26
  %bf.set43 = or i32 %bf.set23, 34603008
  %32 = ptrtoint ptr %wakeup_prepared to i32
  call void @__asan_storeN_noabort(i32 %32, i32 4)
  store i32 %bf.set43, ptr %wakeup_prepared, align 2
  br label %if.end44

if.end44:                                         ; preds = %if.then39, %if.then35.if.end44_crit_edge
  %33 = and i16 %8, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %33)
  %tobool47.not = icmp eq i16 %33, 0
  br i1 %tobool47.not, label %if.end44.if.end53_crit_edge, label %if.then48

if.end44.if.end53_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end53

if.then48:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #26
  %34 = ptrtoint ptr %wakeup_prepared to i32
  call void @__asan_loadN_noabort(i32 %34, i32 4)
  %bf.load50 = load i32, ptr %wakeup_prepared, align 2
  %bf.set52 = or i32 %bf.load50, 16777216
  store i32 %bf.set52, ptr %wakeup_prepared, align 2
  br label %if.end53

if.end53:                                         ; preds = %if.then48, %if.end44.if.end53_crit_edge
  %35 = ptrtoint ptr %wakeup_prepared to i32
  call void @__asan_loadN_noabort(i32 %35, i32 4)
  %bf.load55 = load i32, ptr %wakeup_prepared, align 2
  %36 = and i32 %bf.load55, 50331648
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %if.end53.if.end80_crit_edge, label %do.end66

if.end53.if.end80_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end80

do.end66:                                         ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #26
  %38 = and i32 %bf.load55, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool62.not = icmp eq i32 %38, 0
  %39 = and i32 %bf.load55, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool57.not = icmp eq i32 %39, 0
  %cond = select i1 %tobool57.not, ptr @.str.31, ptr @.str.30
  %cond78 = select i1 %tobool62.not, ptr @.str.31, ptr @.str.32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.27, ptr noundef nonnull %cond, ptr noundef nonnull %cond78) #28
  br label %if.end80

if.end80:                                         ; preds = %do.end66, %if.end53.if.end80_crit_edge, %pci_no_d1d2.exit.if.end80_crit_edge
  %40 = ptrtoint ptr %pmc to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %pmc, align 2
  %42 = and i16 %41, -2048
  store i16 %42, ptr %pmc, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %42)
  %tobool84.not = icmp eq i16 %42, 0
  br i1 %tobool84.not, label %if.end80.if.end121_crit_edge, label %do.end88

if.end80.if.end121_crit_edge:                     ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end121

do.end88:                                         ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #26
  %conv90 = zext i16 %42 to i32
  %and91 = and i32 %conv90, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and91)
  %tobool92.not = icmp eq i32 %and91, 0
  %cond93 = select i1 %tobool92.not, ptr @.str.31, ptr @.str.36
  %and95 = and i32 %conv90, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and95)
  %tobool96.not = icmp eq i32 %and95, 0
  %cond97 = select i1 %tobool96.not, ptr @.str.31, ptr @.str.30
  %and99 = and i32 %conv90, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and99)
  %tobool100.not = icmp eq i32 %and99, 0
  %cond101 = select i1 %tobool100.not, ptr @.str.31, ptr @.str.32
  %and103 = and i32 %conv90, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and103)
  %tobool104.not = icmp eq i32 %and103, 0
  %cond105 = select i1 %tobool104.not, ptr @.str.31, ptr @.str.37
  %and107 = and i32 %conv90, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and107)
  %tobool108.not = icmp eq i32 %and107, 0
  %cond109 = select i1 %tobool108.not, ptr @.str.31, ptr @.str.38
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.34, ptr noundef nonnull %cond93, ptr noundef nonnull %cond97, ptr noundef nonnull %cond101, ptr noundef nonnull %cond105, ptr noundef nonnull %cond109) #28
  %43 = ptrtoint ptr %pmc to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %pmc, align 2
  %45 = lshr i16 %44, 11
  %46 = zext i16 %45 to i32
  %47 = ptrtoint ptr %wakeup_prepared to i32
  call void @__asan_loadN_noabort(i32 %47, i32 4)
  %bf.load112 = load i32, ptr %wakeup_prepared, align 2
  %bf.shl114 = shl nuw i32 %46, 27
  %bf.clear115 = and i32 %bf.load112, 67108863
  %bf.set116 = or i32 %bf.shl114, %bf.clear115
  %bf.set119 = or i32 %bf.set116, 67108864
  store i32 %bf.set119, ptr %wakeup_prepared, align 2
  call void @device_set_wakeup_capable(ptr noundef %dev1, i1 noundef zeroext true) #24
  call void @pci_pme_active(ptr noundef %dev, i1 noundef zeroext false)
  br label %if.end121

if.end121:                                        ; preds = %do.end88, %if.end80.if.end121_crit_edge
  %call122 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 6, ptr noundef nonnull %status) #24
  %48 = ptrtoint ptr %status to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %status, align 2
  %50 = and i16 %49, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %50)
  %tobool125.not = icmp eq i16 %50, 0
  br i1 %tobool125.not, label %if.end121.cleanup_crit_edge, label %if.then126

if.end121.cleanup_crit_edge:                      ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then126:                                       ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #26
  %imm_ready = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 31
  %51 = ptrtoint ptr %imm_ready to i32
  call void @__asan_load1_noabort(i32 %51)
  %bf.load127 = load i8, ptr %imm_ready, align 8
  %bf.set129 = or i8 %bf.load127, -128
  store i8 %bf.set129, ptr %imm_ready, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then126, %if.end121.cleanup_crit_edge, %do.end, %device_enable_async_suspend.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmc) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %status) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_forbid(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_enable(ptr noundef) local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #12

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_set_wakeup_capable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_ea_init(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %dw0.i = alloca i32, align 4
  %base.i = alloca i32, align 4
  %max_offset.i = alloca i32, align 4
  %base_upper.i = alloca i32, align 4
  %max_offset_upper.i = alloca i32, align 4
  %num_ent = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %num_ent) #24
  %0 = ptrtoint ptr %num_ent to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %num_ent, align 1, !annotation !731
  %call = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 20)
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call)
  %tobool.not = icmp eq i8 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = zext i8 %call to i32
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %1 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %bus, align 8
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %3 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %devfn, align 4
  %add = add nuw nsw i32 %conv, 2
  %call1 = call i32 @pci_bus_read_config_byte(ptr noundef %2, i32 noundef %4, i32 noundef %add, ptr noundef nonnull %num_ent) #24
  %5 = ptrtoint ptr %num_ent to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %num_ent, align 1
  %7 = and i8 %6, 63
  store i8 %7, ptr %num_ent, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp1126.not = icmp eq i8 %7, 0
  br i1 %cmp1126.not, label %if.end.cleanup_crit_edge, label %for.body.lr.ph

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %hdr_type = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 13
  %8 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %hdr_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %9)
  %cmp = icmp eq i8 %9, 1
  %spec.select.v = select i1 %cmp, i32 8, i32 4
  %spec.select = add nuw nsw i32 %spec.select.v, %conv
  %arrayidx29.i.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 6
  %dev99.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %init_name.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 3
  br label %for.body

for.body:                                         ; preds = %pci_ea_read.exit.for.body_crit_edge, %for.body.lr.ph
  %i.030 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %pci_ea_read.exit.for.body_crit_edge ]
  %offset.127 = phi i32 [ %spec.select, %for.body.lr.ph ], [ %add144.i, %pci_ea_read.exit.for.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dw0.i) #24
  %10 = ptrtoint ptr %dw0.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %dw0.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base.i) #24
  %11 = ptrtoint ptr %base.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 -1, ptr %base.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %max_offset.i) #24
  %12 = ptrtoint ptr %max_offset.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %max_offset.i, align 4, !annotation !731
  %call.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %offset.127, ptr noundef nonnull %dw0.i) #24
  %add.i = add i32 %offset.127, 4
  %13 = ptrtoint ptr %dw0.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %dw0.i, align 4
  %and.i = shl i32 %14, 2
  %add1.i = and i32 %and.i, 28
  %shl.i = add nuw nsw i32 %add1.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %14)
  %tobool.not.i = icmp sgt i32 %14, -1
  br i1 %tobool.not.i, label %for.body.pci_ea_read.exit_crit_edge, label %if.end.i

for.body.pci_ea_read.exit_crit_edge:              ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_ea_read.exit

if.end.i:                                         ; preds = %for.body
  %and3.i = lshr i32 %14, 4
  %shr.i = and i32 %and3.i, 15
  %and4.i = lshr i32 %14, 8
  %conv6.i = and i32 %and4.i, 255
  %15 = add nsw i32 %conv6.i, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 245, i32 %15)
  %16 = icmp ult i32 %15, 245
  %and12.i = lshr i32 %14, 16
  %shr13.i = and i32 %and12.i, 255
  %prop.0.in.i = select i1 %16, i32 %shr13.i, i32 %and4.i
  %prop.0.i = trunc i32 %prop.0.in.i to i8
  %conv16.i = and i32 %prop.0.in.i, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %conv16.i)
  %cmp17.i = icmp ugt i32 %conv16.i, 7
  br i1 %cmp17.i, label %if.end.i.pci_ea_read.exit_crit_edge, label %if.end20.i

if.end.i.pci_ea_read.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_ea_read.exit

if.end20.i:                                       ; preds = %if.end.i
  %conv21.i = trunc i32 %shr.i to i8
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %conv21.i)
  %cmp.i.i = icmp ult i8 %conv21.i, 6
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %prop.0.i)
  %cmp3.i.i = icmp ult i8 %prop.0.i, 3
  %or.cond.i.i = and i1 %cmp.i.i, %cmp3.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #26
  %arrayidx.i.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 %shr.i
  br label %pci_ea_get_resource.exit.i

if.else.i.i:                                      ; preds = %if.end20.i
  %17 = add nsw i8 %conv21.i, -9
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %17)
  %18 = icmp ult i8 %17, 6
  %prop.off.i.i = add i8 %prop.0.i, -3
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %prop.off.i.i)
  %switch.i.i = icmp ult i8 %prop.off.i.i, 2
  %or.cond41.i.i = and i1 %18, %switch.i.i
  br i1 %or.cond41.i.i, label %if.then19.i.i, label %if.else23.i.i

if.then19.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %sub.i.i = add nsw i32 %shr.i, -2
  %arrayidx22.i.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 %sub.i.i
  br label %pci_ea_get_resource.exit.i

if.else23.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %conv21.i)
  %cmp25.i.i = icmp eq i8 %conv21.i, 8
  br i1 %cmp25.i.i, label %if.else23.i.i.pci_ea_get_resource.exit.i_crit_edge, label %if.else23.i.i.do.end.i_crit_edge

if.else23.i.i.do.end.i_crit_edge:                 ; preds = %if.else23.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end.i

if.else23.i.i.pci_ea_get_resource.exit.i_crit_edge: ; preds = %if.else23.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_ea_get_resource.exit.i

pci_ea_get_resource.exit.i:                       ; preds = %if.else23.i.i.pci_ea_get_resource.exit.i_crit_edge, %if.then19.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %arrayidx.i.i, %if.then.i.i ], [ %arrayidx22.i.i, %if.then19.i.i ], [ %arrayidx29.i.i, %if.else23.i.i.pci_ea_get_resource.exit.i_crit_edge ]
  %tobool23.not.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool23.not.i, label %pci_ea_get_resource.exit.i.do.end.i_crit_edge, label %if.end26.i

pci_ea_get_resource.exit.i.do.end.i_crit_edge:    ; preds = %pci_ea_get_resource.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end.i

do.end.i:                                         ; preds = %pci_ea_get_resource.exit.i.do.end.i_crit_edge, %if.else23.i.i.do.end.i_crit_edge
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev99.i, ptr noundef nonnull @.str.129, i32 noundef %shr.i) #28
  br label %pci_ea_read.exit

if.end26.i:                                       ; preds = %pci_ea_get_resource.exit.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %prop.0.i)
  %19 = icmp ult i8 %prop.0.i, 5
  br i1 %19, label %switch.lookup, label %do.end32.i

do.end32.i:                                       ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev99.i, ptr noundef nonnull @.str.132, i32 noundef %conv16.i) #28
  br label %pci_ea_read.exit

switch.lookup:                                    ; preds = %if.end26.i
  %sext = shl i32 %prop.0.in.i, 24
  %20 = ashr exact i32 %sext, 24
  %switch.gep = getelementptr inbounds [5 x i32], ptr @switch.table.pci_ea_init, i32 0, i32 %20
  %21 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %21)
  %switch.load = load i32, ptr %switch.gep, align 4
  %call36.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %base.i) #24
  %22 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %base.i, align 4
  %and37.i = and i32 %23, -4
  %add38.i = add i32 %offset.127, 8
  %call39.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add38.i, ptr noundef nonnull %max_offset.i) #24
  %add40.i = add i32 %offset.127, 12
  %24 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %base.i, align 4
  %and41.i = and i32 %25, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41.i)
  %tobool42.not.i = icmp eq i32 %and41.i, 0
  br i1 %tobool42.not.i, label %switch.lookup.if.end59.i_crit_edge, label %if.then43.i

switch.lookup.if.end59.i_crit_edge:               ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end59.i

if.then43.i:                                      ; preds = %switch.lookup
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base_upper.i) #24
  %26 = ptrtoint ptr %base_upper.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 -1, ptr %base_upper.i, align 4, !annotation !731
  %call44.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add40.i, ptr noundef nonnull %base_upper.i) #24
  %add45.i = add i32 %offset.127, 16
  %or.i = or i32 %switch.load, 1048576
  %27 = ptrtoint ptr %base_upper.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %base_upper.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool48.not.i = icmp eq i32 %28, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base_upper.i) #24
  br i1 %tobool48.not.i, label %if.then43.i.if.end59.i_crit_edge, label %if.then43.i.pci_ea_read.exit_crit_edge

if.then43.i.pci_ea_read.exit_crit_edge:           ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_ea_read.exit

if.then43.i.if.end59.i_crit_edge:                 ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end59.i

if.end59.i:                                       ; preds = %if.then43.i.if.end59.i_crit_edge, %switch.lookup.if.end59.i_crit_edge
  %ent_offset.0.i = phi i32 [ %add45.i, %if.then43.i.if.end59.i_crit_edge ], [ %add40.i, %switch.lookup.if.end59.i_crit_edge ]
  %flags.0.i = phi i32 [ %or.i, %if.then43.i.if.end59.i_crit_edge ], [ %switch.load, %switch.lookup.if.end59.i_crit_edge ]
  %29 = ptrtoint ptr %max_offset.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %max_offset.i, align 4
  %or60.i = or i32 %30, 3
  %add61.i = add i32 %or60.i, %and37.i
  %and62.i = and i32 %30, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and62.i)
  %tobool63.not.i = icmp eq i32 %and62.i, 0
  br i1 %tobool63.not.i, label %if.end59.i.if.end84.i_crit_edge, label %if.then64.i

if.end59.i.if.end84.i_crit_edge:                  ; preds = %if.end59.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end84.i

if.then64.i:                                      ; preds = %if.end59.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %max_offset_upper.i) #24
  %31 = ptrtoint ptr %max_offset_upper.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 -1, ptr %max_offset_upper.i, align 4, !annotation !731
  %call65.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %ent_offset.0.i, ptr noundef nonnull %max_offset_upper.i) #24
  %add66.i = add i32 %ent_offset.0.i, 4
  %or67.i = or i32 %flags.0.i, 1048576
  %32 = ptrtoint ptr %max_offset_upper.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %max_offset_upper.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool70.not.i = icmp eq i32 %33, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %max_offset_upper.i) #24
  br i1 %tobool70.not.i, label %if.then64.i.if.end84.i_crit_edge, label %if.then64.i.pci_ea_read.exit_crit_edge

if.then64.i.pci_ea_read.exit_crit_edge:           ; preds = %if.then64.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_ea_read.exit

if.then64.i.if.end84.i_crit_edge:                 ; preds = %if.then64.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end84.i

if.end84.i:                                       ; preds = %if.then64.i.if.end84.i_crit_edge, %if.end59.i.if.end84.i_crit_edge
  %ent_offset.1.i = phi i32 [ %add66.i, %if.then64.i.if.end84.i_crit_edge ], [ %ent_offset.0.i, %if.end59.i.if.end84.i_crit_edge ]
  %flags.1.i = phi i32 [ %or67.i, %if.then64.i.if.end84.i_crit_edge ], [ %flags.0.i, %if.end59.i.if.end84.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %add61.i, i32 %and37.i)
  %cmp85.i = icmp ult i32 %add61.i, %and37.i
  br i1 %cmp85.i, label %do.end90.i, label %if.end92.i

do.end90.i:                                       ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev99.i, ptr noundef nonnull @.str.135) #28
  br label %pci_ea_read.exit

if.end92.i:                                       ; preds = %if.end84.i
  %sub.i = sub i32 %ent_offset.1.i, %offset.127
  call void @__sanitizer_cov_trace_cmp4(i32 %shl.i, i32 %sub.i)
  %cmp93.not.i = icmp eq i32 %shl.i, %sub.i
  br i1 %cmp93.not.i, label %if.end101.i, label %do.end98.i

do.end98.i:                                       ; preds = %if.end92.i
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev99.i, ptr noundef nonnull @.str.138, i32 noundef %shl.i, i32 noundef %sub.i) #28
  br label %pci_ea_read.exit

if.end101.i:                                      ; preds = %if.end92.i
  %34 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %35, null
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.end101.i.pci_name.exit.i_crit_edge

if.end101.i.pci_name.exit.i_crit_edge:            ; preds = %if.end101.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_name.exit.i

if.end.i.i.i:                                     ; preds = %if.end101.i
  call void @__sanitizer_cov_trace_pc() #26
  %36 = ptrtoint ptr %dev99.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev99.i, align 4
  br label %pci_name.exit.i

pci_name.exit.i:                                  ; preds = %if.end.i.i.i, %if.end101.i.pci_name.exit.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %37, %if.end.i.i.i ], [ %35, %if.end101.i.pci_name.exit.i_crit_edge ]
  %name.i = getelementptr inbounds %struct.resource, ptr %retval.0.i.i, i32 0, i32 2
  %38 = ptrtoint ptr %name.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %retval.0.i.i.i, ptr %name.i, align 4
  %39 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %and37.i, ptr %retval.0.i.i, align 4
  %end104.i = getelementptr inbounds %struct.resource, ptr %retval.0.i.i, i32 0, i32 1
  %40 = ptrtoint ptr %end104.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %add61.i, ptr %end104.i, align 4
  %flags105.i = getelementptr inbounds %struct.resource, ptr %retval.0.i.i, i32 0, i32 3
  %41 = ptrtoint ptr %flags105.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %flags.1.i, ptr %flags105.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %shr.i)
  %cmp106.i = icmp ult i32 %shr.i, 6
  br i1 %cmp106.i, label %do.end111.i, label %if.else.i

do.end111.i:                                      ; preds = %pci_name.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev99.i, ptr noundef nonnull @.str.141, i32 noundef %shr.i, ptr noundef nonnull %retval.0.i.i, i32 noundef %conv16.i) #28
  br label %pci_ea_read.exit

if.else.i:                                        ; preds = %pci_name.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %shr.i)
  %cmp114.i = icmp eq i32 %shr.i, 8
  br i1 %cmp114.i, label %do.end119.i, label %if.else122.i

do.end119.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev99.i, ptr noundef nonnull @.str.144, ptr noundef nonnull %retval.0.i.i, i32 noundef %conv16.i) #28
  br label %pci_ea_read.exit

if.else122.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %shr.i)
  %cmp123.i = icmp ult i32 %shr.i, 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %shr.i)
  %cmp126.not.i = icmp eq i32 %shr.i, 15
  %or.cond225.i = or i1 %cmp123.i, %cmp126.not.i
  br i1 %or.cond225.i, label %do.end138.i, label %do.end131.i

do.end131.i:                                      ; preds = %if.else122.i
  call void @__sanitizer_cov_trace_pc() #26
  %sub133.i = add nsw i32 %shr.i, -9
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev99.i, ptr noundef nonnull @.str.147, i32 noundef %sub133.i, ptr noundef nonnull %retval.0.i.i, i32 noundef %conv16.i) #28
  br label %pci_ea_read.exit

do.end138.i:                                      ; preds = %if.else122.i
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev99.i, ptr noundef nonnull @.str.150, i32 noundef %shr.i, ptr noundef nonnull %retval.0.i.i, i32 noundef %conv16.i) #28
  br label %pci_ea_read.exit

pci_ea_read.exit:                                 ; preds = %do.end138.i, %do.end131.i, %do.end119.i, %do.end111.i, %do.end98.i, %do.end90.i, %if.then64.i.pci_ea_read.exit_crit_edge, %if.then43.i.pci_ea_read.exit_crit_edge, %do.end32.i, %do.end.i, %if.end.i.pci_ea_read.exit_crit_edge, %for.body.pci_ea_read.exit_crit_edge
  %add144.i = add i32 %shl.i, %offset.127
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %max_offset.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dw0.i) #24
  %inc = add nuw nsw i32 %i.030, 1
  %42 = ptrtoint ptr %num_ent to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %num_ent, align 1
  %conv10 = zext i8 %43 to i32
  %cmp11 = icmp ult i32 %inc, %conv10
  br i1 %cmp11, label %pci_ea_read.exit.for.body_crit_edge, label %pci_ea_read.exit.cleanup_crit_edge

pci_ea_read.exit.cleanup_crit_edge:               ; preds = %pci_ea_read.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_ea_read.exit.for.body_crit_edge:              ; preds = %pci_ea_read.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

cleanup:                                          ; preds = %pci_ea_read.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %num_ent) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_add_cap_save_buffer(ptr noundef %dev, i8 noundef zeroext %cap, i32 noundef %size) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i8 %cap to i16
  %conv2.i = zext i8 %cap to i32
  %call3.i = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef %conv2.i) #24
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call3.i)
  %tobool5.not.i = icmp eq i8 %call3.i, 0
  br i1 %tobool5.not.i, label %entry._pci_add_cap_save_buffer.exit_crit_edge, label %if.end8.i.i.i

entry._pci_add_cap_save_buffer.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_add_cap_save_buffer.exit

if.end8.i.i.i:                                    ; preds = %entry
  %add.i = add i32 %size, 16
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3520) #29
  %tobool9.not.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool9.not.i, label %if.end8.i.i.i._pci_add_cap_save_buffer.exit_crit_edge, label %if.end11.i

if.end8.i.i.i._pci_add_cap_save_buffer.exit_crit_edge: ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_add_cap_save_buffer.exit

if.end11.i:                                       ; preds = %if.end8.i.i.i
  %cap12.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call9.i.i.i, i32 0, i32 1
  %0 = ptrtoint ptr %cap12.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 %conv, ptr %cap12.i, align 8
  %cap_extended.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call9.i.i.i, i32 0, i32 1, i32 1
  %1 = ptrtoint ptr %cap_extended.i to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %cap_extended.i, align 2
  %size17.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call9.i.i.i, i32 0, i32 1, i32 2
  %2 = ptrtoint ptr %size17.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %size, ptr %size17.i, align 4
  %saved_cap_space.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %3 = ptrtoint ptr %saved_cap_space.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %saved_cap_space.i.i, align 4
  %5 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %4, ptr %call9.i.i.i, align 128
  %tobool.not.i.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i.i, label %if.end11.i.pci_add_saved_cap.exit.i_crit_edge, label %do.body12.i.i.i

if.end11.i.pci_add_saved_cap.exit.i_crit_edge:    ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_add_saved_cap.exit.i

do.body12.i.i.i:                                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  %pprev.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %4, i32 0, i32 1
  %6 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %call9.i.i.i, ptr %pprev.i.i.i, align 4
  br label %pci_add_saved_cap.exit.i

pci_add_saved_cap.exit.i:                         ; preds = %do.body12.i.i.i, %if.end11.i.pci_add_saved_cap.exit.i_crit_edge
  %7 = ptrtoint ptr %saved_cap_space.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %call9.i.i.i, ptr %saved_cap_space.i.i, align 4
  %pprev34.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %call9.i.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %pprev34.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %saved_cap_space.i.i, ptr %pprev34.i.i.i, align 4
  br label %_pci_add_cap_save_buffer.exit

_pci_add_cap_save_buffer.exit:                    ; preds = %pci_add_saved_cap.exit.i, %if.end8.i.i.i._pci_add_cap_save_buffer.exit_crit_edge, %entry._pci_add_cap_save_buffer.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %pci_add_saved_cap.exit.i ], [ 0, %entry._pci_add_cap_save_buffer.exit_crit_edge ], [ -12, %if.end8.i.i.i._pci_add_cap_save_buffer.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_add_ext_cap_save_buffer(ptr noundef %dev, i16 noundef zeroext %cap, i32 noundef %size) local_unnamed_addr #5 align 64 {
entry:
  %header.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i.i) #24
  %0 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %header.i.i.i, align 4, !annotation !731
  %cfg_size.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %1 = ptrtoint ptr %cfg_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cfg_size.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %2)
  %cmp.i.i.i = icmp slt i32 %2, 257
  br i1 %cmp.i.i.i, label %entry.pci_find_ext_capability.exit.i.thread_crit_edge, label %if.end.i.i.i

entry.pci_find_ext_capability.exit.i.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.i.thread

if.end.i.i.i:                                     ; preds = %entry
  %call.i.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp3.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp3.not.i.i.i, label %if.end6.i.i.i, label %if.end.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge

if.end.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.i.thread

if.end6.i.i.i:                                    ; preds = %if.end.i.i.i
  %3 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %header.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp7.i.i.i = icmp eq i32 %4, 0
  br i1 %cmp7.i.i.i, label %if.end6.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge, label %while.body.i.i.preheader.i

if.end6.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge: ; preds = %if.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.i.thread

while.body.i.i.preheader.i:                       ; preds = %if.end6.i.i.i
  %5 = trunc i32 %4 to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %cap)
  %cmp13.i.not.i35.i = icmp eq i16 %5, %cap
  br i1 %cmp13.i.not.i35.i, label %pci_find_ext_capability.exit.i.thread4, label %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge

while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge: ; preds = %while.body.i.i.preheader.i
  br label %if.end20.i.i.i

pci_find_ext_capability.exit.i.thread4:           ; preds = %while.body.i.i.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i) #24
  br label %if.end8.i.i.i

while.body.i.i.i:                                 ; preds = %if.end27.i.i.i
  %dec.i.i.i = add nsw i32 %dec.i2.i36.i, -1
  %6 = ptrtoint ptr %header.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %header.i.i.i, align 4
  %8 = trunc i32 %7 to i16
  %cmp13.i.not.i.i = icmp eq i16 %8, %cap
  br i1 %cmp13.i.not.i.i, label %pci_find_ext_capability.exit.i, label %while.body.i.i.i.if.end20.i.i.i_crit_edge

while.body.i.i.i.if.end20.i.i.i_crit_edge:        ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i.i.i

if.end20.i.i.i:                                   ; preds = %while.body.i.i.i.if.end20.i.i.i_crit_edge, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge
  %9 = phi i32 [ %7, %while.body.i.i.i.if.end20.i.i.i_crit_edge ], [ %4, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge ]
  %dec.i2.i36.i = phi i32 [ %dec.i.i.i, %while.body.i.i.i.if.end20.i.i.i_crit_edge ], [ 479, %while.body.i.i.preheader.i.if.end20.i.i.i_crit_edge ]
  %shr.i.i.i = lshr i32 %9, 20
  %10 = trunc i32 %shr.i.i.i to i16
  %conv22.i.i.i = and i16 %10, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i.i)
  %cmp24.i.i.i = icmp ult i16 %conv22.i.i.i, 256
  br i1 %cmp24.i.i.i, label %if.end20.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge, label %if.end27.i.i.i

if.end20.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge: ; preds = %if.end20.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.i.thread

if.end27.i.i.i:                                   ; preds = %if.end20.i.i.i
  %conv23.i.i.i = zext i16 %conv22.i.i.i to i32
  %call29.i.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i.i.i, ptr noundef nonnull %header.i.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i.i)
  %cmp30.not.i.i.i = icmp ne i32 %call29.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i36.i)
  %cmp11.not.i.i.i = icmp eq i32 %dec.i2.i36.i, 0
  %or.cond.i.i = select i1 %cmp30.not.i.i.i, i1 true, i1 %cmp11.not.i.i.i
  br i1 %or.cond.i.i, label %if.end27.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge, label %while.body.i.i.i

if.end27.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge: ; preds = %if.end27.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.i.thread

pci_find_ext_capability.exit.i.thread:            ; preds = %if.end27.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge, %if.end20.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge, %if.end6.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge, %if.end.i.i.i.pci_find_ext_capability.exit.i.thread_crit_edge, %entry.pci_find_ext_capability.exit.i.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i) #24
  br label %_pci_add_cap_save_buffer.exit

pci_find_ext_capability.exit.i:                   ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i.i) #24
  br label %if.end8.i.i.i

if.end8.i.i.i:                                    ; preds = %pci_find_ext_capability.exit.i, %pci_find_ext_capability.exit.i.thread4
  %add.i = add i32 %size, 16
  %call9.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3520) #29
  %tobool9.not.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool9.not.i, label %if.end8.i.i.i._pci_add_cap_save_buffer.exit_crit_edge, label %if.end11.i

if.end8.i.i.i._pci_add_cap_save_buffer.exit_crit_edge: ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %_pci_add_cap_save_buffer.exit

if.end11.i:                                       ; preds = %if.end8.i.i.i
  %cap12.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call9.i.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %cap12.i to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %cap, ptr %cap12.i, align 8
  %cap_extended.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call9.i.i.i, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %cap_extended.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %cap_extended.i, align 2
  %size17.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call9.i.i.i, i32 0, i32 1, i32 2
  %13 = ptrtoint ptr %size17.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %size, ptr %size17.i, align 4
  %saved_cap_space.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %14 = ptrtoint ptr %saved_cap_space.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %saved_cap_space.i.i, align 4
  %16 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %15, ptr %call9.i.i.i, align 128
  %tobool.not.i.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i.i, label %if.end11.i.pci_add_saved_cap.exit.i_crit_edge, label %do.body12.i.i.i

if.end11.i.pci_add_saved_cap.exit.i_crit_edge:    ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_add_saved_cap.exit.i

do.body12.i.i.i:                                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  %pprev.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %17 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %call9.i.i.i, ptr %pprev.i.i.i, align 4
  br label %pci_add_saved_cap.exit.i

pci_add_saved_cap.exit.i:                         ; preds = %do.body12.i.i.i, %if.end11.i.pci_add_saved_cap.exit.i_crit_edge
  %18 = ptrtoint ptr %saved_cap_space.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %call9.i.i.i, ptr %saved_cap_space.i.i, align 4
  %pprev34.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %call9.i.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %pprev34.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %saved_cap_space.i.i, ptr %pprev34.i.i.i, align 4
  br label %_pci_add_cap_save_buffer.exit

_pci_add_cap_save_buffer.exit:                    ; preds = %pci_add_saved_cap.exit.i, %if.end8.i.i.i._pci_add_cap_save_buffer.exit_crit_edge, %pci_find_ext_capability.exit.i.thread
  %retval.0.i = phi i32 [ 0, %pci_add_saved_cap.exit.i ], [ -12, %if.end8.i.i.i._pci_add_cap_save_buffer.exit_crit_edge ], [ 0, %pci_find_ext_capability.exit.i.thread ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_allocate_cap_save_buffers(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call3.i.i = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 16) #24
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call3.i.i)
  %tobool5.not.i.i = icmp eq i8 %call3.i.i, 0
  br i1 %tobool5.not.i.i, label %entry.if.end_crit_edge, label %if.end7.i.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end7.i.i:                                      ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 30) #30
  %tobool9.not.i.i = icmp eq ptr %call7.i.i.i.i, null
  br i1 %tobool9.not.i.i, label %do.end, label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.end7.i.i
  %cap12.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %cap12.i.i to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 16, ptr %cap12.i.i, align 8
  %cap_extended.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i.i.i, i32 0, i32 1, i32 1
  %2 = ptrtoint ptr %cap_extended.i.i to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %cap_extended.i.i, align 2
  %size17.i.i = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i.i.i, i32 0, i32 1, i32 2
  %3 = ptrtoint ptr %size17.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 14, ptr %size17.i.i, align 4
  %saved_cap_space.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %4 = ptrtoint ptr %saved_cap_space.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %saved_cap_space.i.i.i, align 4
  %6 = ptrtoint ptr %call7.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %5, ptr %call7.i.i.i.i, align 8
  %tobool.not.i.i.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i.i.i, label %if.end11.i.i.pci_add_saved_cap.exit.i.i_crit_edge, label %do.body12.i.i.i.i

if.end11.i.i.pci_add_saved_cap.exit.i.i_crit_edge: ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_add_saved_cap.exit.i.i

do.body12.i.i.i.i:                                ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %pprev.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %5, i32 0, i32 1
  %7 = ptrtoint ptr %pprev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %call7.i.i.i.i, ptr %pprev.i.i.i.i, align 4
  br label %pci_add_saved_cap.exit.i.i

pci_add_saved_cap.exit.i.i:                       ; preds = %do.body12.i.i.i.i, %if.end11.i.i.pci_add_saved_cap.exit.i.i_crit_edge
  %8 = ptrtoint ptr %saved_cap_space.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %call7.i.i.i.i, ptr %saved_cap_space.i.i.i, align 4
  %pprev34.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %call7.i.i.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %pprev34.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %saved_cap_space.i.i.i, ptr %pprev34.i.i.i.i, align 4
  br label %if.end

do.end:                                           ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev1, ptr noundef nonnull @.str.39) #28
  br label %if.end

if.end:                                           ; preds = %do.end, %pci_add_saved_cap.exit.i.i, %entry.if.end_crit_edge
  %call3.i.i26 = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 7) #24
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call3.i.i26)
  %tobool5.not.i.i27 = icmp eq i8 %call3.i.i26, 0
  br i1 %tobool5.not.i.i27, label %if.end.if.end9_crit_edge, label %if.end7.i.i28

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

if.end7.i.i28:                                    ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %10 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i.i29 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 3520, i32 noundef 18) #30
  %tobool9.not.i.i30 = icmp eq ptr %call7.i.i.i.i29, null
  br i1 %tobool9.not.i.i30, label %do.end7, label %if.end11.i.i36

if.end11.i.i36:                                   ; preds = %if.end7.i.i28
  %cap12.i.i31 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i.i.i29, i32 0, i32 1
  %11 = ptrtoint ptr %cap12.i.i31 to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 7, ptr %cap12.i.i31, align 8
  %cap_extended.i.i32 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i.i.i29, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %cap_extended.i.i32 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %cap_extended.i.i32, align 2
  %size17.i.i33 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i.i.i29, i32 0, i32 1, i32 2
  %13 = ptrtoint ptr %size17.i.i33 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 2, ptr %size17.i.i33, align 4
  %saved_cap_space.i.i.i34 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %14 = ptrtoint ptr %saved_cap_space.i.i.i34 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %saved_cap_space.i.i.i34, align 4
  %16 = ptrtoint ptr %call7.i.i.i.i29 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %15, ptr %call7.i.i.i.i29, align 8
  %tobool.not.i.i.i.i35 = icmp eq ptr %15, null
  br i1 %tobool.not.i.i.i.i35, label %if.end11.i.i36.pci_add_saved_cap.exit.i.i40_crit_edge, label %do.body12.i.i.i.i38

if.end11.i.i36.pci_add_saved_cap.exit.i.i40_crit_edge: ; preds = %if.end11.i.i36
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_add_saved_cap.exit.i.i40

do.body12.i.i.i.i38:                              ; preds = %if.end11.i.i36
  call void @__sanitizer_cov_trace_pc() #26
  %pprev.i.i.i.i37 = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %17 = ptrtoint ptr %pprev.i.i.i.i37 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %call7.i.i.i.i29, ptr %pprev.i.i.i.i37, align 4
  br label %pci_add_saved_cap.exit.i.i40

pci_add_saved_cap.exit.i.i40:                     ; preds = %do.body12.i.i.i.i38, %if.end11.i.i36.pci_add_saved_cap.exit.i.i40_crit_edge
  %18 = ptrtoint ptr %saved_cap_space.i.i.i34 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %call7.i.i.i.i29, ptr %saved_cap_space.i.i.i34, align 4
  %pprev34.i.i.i.i39 = getelementptr inbounds %struct.hlist_node, ptr %call7.i.i.i.i29, i32 0, i32 1
  %19 = ptrtoint ptr %pprev34.i.i.i.i39 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %saved_cap_space.i.i.i34, ptr %pprev34.i.i.i.i39, align 4
  br label %if.end9

do.end7:                                          ; preds = %if.end7.i.i28
  call void @__sanitizer_cov_trace_pc() #26
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev8, ptr noundef nonnull @.str.42) #28
  br label %if.end9

if.end9:                                          ; preds = %do.end7, %pci_add_saved_cap.exit.i.i40, %if.end.if.end9_crit_edge
  %call10 = tail call i32 @pci_add_ext_cap_save_buffer(ptr noundef %dev, i16 noundef zeroext 24, i32 noundef 4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end9.if.end17_crit_edge, label %do.end15

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end17

do.end15:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #26
  %dev16 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev16, ptr noundef nonnull @.str.45) #28
  br label %if.end17

if.end17:                                         ; preds = %do.end15, %if.end9.if.end17_crit_edge
  tail call void @pci_allocate_vc_save_buffers(ptr noundef %dev) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_allocate_vc_save_buffers(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_free_cap_save_buffers(ptr nocapture noundef readonly %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %saved_cap_space = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 53
  %0 = ptrtoint ptr %saved_cap_space to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %saved_cap_space, align 4
  %tobool3.not22 = icmp eq ptr %1, null
  br i1 %tobool3.not22, label %entry.for.end_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

land.rhs:                                         ; preds = %land.rhs.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %tmp.023 = phi ptr [ %3, %land.rhs.land.rhs_crit_edge ], [ %1, %entry.land.rhs_crit_edge ]
  %2 = ptrtoint ptr %tmp.023 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tmp.023, align 4
  tail call void @kfree(ptr noundef nonnull %tmp.023) #24
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %land.rhs.for.end_crit_edge, label %land.rhs.land.rhs_crit_edge

land.rhs.land.rhs_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.rhs

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.end:                                          ; preds = %land.rhs.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_configure_ari(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %header.i.i = alloca i32, align 4
  %cap = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cap) #24
  %0 = ptrtoint ptr %cap to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cap, align 4, !annotation !731
  %.b29 = load i1, ptr @pcie_ari_disabled, align 1
  br i1 %.b29, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %1 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.i.not = icmp eq i8 %2, 0
  br i1 %tobool.i.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false1

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %3 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %devfn, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not = icmp eq i32 %4, 0
  br i1 %tobool2.not, label %if.end, label %lor.lhs.false1.cleanup_crit_edge

lor.lhs.false1.cleanup_crit_edge:                 ; preds = %lor.lhs.false1
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false1
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %5 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bus, align 8
  %self = getelementptr inbounds %struct.pci_bus, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %self, align 4
  %tobool3.not = icmp eq ptr %8, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = call i32 @pcie_capability_read_dword(ptr noundef nonnull %8, i32 noundef 36, ptr noundef nonnull %cap) #24
  %9 = ptrtoint ptr %cap to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cap, align 4
  %and = and i32 %10, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i) #24
  %11 = ptrtoint ptr %header.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 -1, ptr %header.i.i, align 4, !annotation !731
  %cfg_size.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %12 = ptrtoint ptr %cfg_size.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cfg_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %13)
  %cmp.i.i = icmp slt i32 %13, 257
  br i1 %cmp.i.i, label %if.end9.if.else_crit_edge, label %if.end.i.i

if.end9.if.else_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else

if.end.i.i:                                       ; preds = %if.end9
  %call.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp3.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp3.not.i.i, label %if.end6.i.i, label %if.end.i.i.if.else_crit_edge

if.end.i.i.if.else_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else

if.end6.i.i:                                      ; preds = %if.end.i.i
  %14 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %header.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp7.i.i = icmp eq i32 %15, 0
  br i1 %cmp7.i.i, label %if.end6.i.i.if.else_crit_edge, label %if.end6.i.i.while.body.i.i_crit_edge

if.end6.i.i.while.body.i.i_crit_edge:             ; preds = %if.end6.i.i
  br label %while.body.i.i

if.end6.i.i.if.else_crit_edge:                    ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else

while.body.i.i:                                   ; preds = %if.end27.i.i.while.body.i.i_crit_edge, %if.end6.i.i.while.body.i.i_crit_edge
  %dec.i2.i = phi i32 [ %dec.i.i, %if.end27.i.i.while.body.i.i_crit_edge ], [ 479, %if.end6.i.i.while.body.i.i_crit_edge ]
  %16 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %header.i.i, align 4
  %and.i.i = and i32 %17, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %and.i.i)
  %cmp13.i.not.i = icmp eq i32 %and.i.i, 14
  br i1 %cmp13.i.not.i, label %if.then12, label %if.end20.i.i

if.end20.i.i:                                     ; preds = %while.body.i.i
  %shr.i.i = lshr i32 %17, 20
  %18 = trunc i32 %shr.i.i to i16
  %conv22.i.i = and i16 %18, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i)
  %cmp24.i.i = icmp ult i16 %conv22.i.i, 256
  br i1 %cmp24.i.i, label %if.end20.i.i.if.else_crit_edge, label %if.end27.i.i

if.end20.i.i.if.else_crit_edge:                   ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else

if.end27.i.i:                                     ; preds = %if.end20.i.i
  %conv23.i.i = zext i16 %conv22.i.i to i32
  %call29.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i.i, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i)
  %cmp30.not.i.i = icmp ne i32 %call29.i.i, 0
  %dec.i.i = add nsw i32 %dec.i2.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i)
  %cmp11.not.i.i = icmp eq i32 %dec.i2.i, 0
  %or.cond.i = select i1 %cmp30.not.i.i, i1 true, i1 %cmp11.not.i.i
  br i1 %or.cond.i, label %if.end27.i.i.if.else_crit_edge, label %if.end27.i.i.while.body.i.i_crit_edge

if.end27.i.i.while.body.i.i_crit_edge:            ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i.i

if.end27.i.i.if.else_crit_edge:                   ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else

if.then12:                                        ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  %call.i = call i32 @pcie_capability_clear_and_set_word(ptr noundef nonnull %8, i32 noundef 40, i16 noundef zeroext 0, i16 noundef zeroext 32) #24
  %ari_enabled = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 49
  %19 = ptrtoint ptr %ari_enabled to i32
  call void @__asan_loadN_noabort(i32 %19, i32 5)
  %bf.load = load i40, ptr %ari_enabled, align 1
  %bf.set = or i40 %bf.load, 33554432
  store i40 %bf.set, ptr %ari_enabled, align 1
  br label %cleanup

if.else:                                          ; preds = %if.end27.i.i.if.else_crit_edge, %if.end20.i.i.if.else_crit_edge, %if.end6.i.i.if.else_crit_edge, %if.end.i.i.if.else_crit_edge, %if.end9.if.else_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  %call.i30 = call i32 @pcie_capability_clear_and_set_word(ptr noundef nonnull %8, i32 noundef 40, i16 noundef zeroext 32, i16 noundef zeroext 0) #24
  %ari_enabled15 = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 49
  %20 = ptrtoint ptr %ari_enabled15 to i32
  call void @__asan_loadN_noabort(i32 %20, i32 5)
  %bf.load16 = load i40, ptr %ari_enabled15, align 1
  %bf.clear17 = and i40 %bf.load16, -33554433
  store i40 %bf.clear17, ptr %ari_enabled15, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then12, %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false1.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cap) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pci_acs_enabled(ptr noundef %pdev, i16 noundef zeroext %acs_flags) local_unnamed_addr #5 align 64 {
entry:
  %cap.i21 = alloca i16, align 2
  %ctrl.i22 = alloca i16, align 2
  %cap.i = alloca i16, align 2
  %ctrl.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pci_dev_specific_acs_enabled(ptr noundef %pdev, i16 noundef zeroext %acs_flags) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)
  %cmp = icmp sgt i32 %call, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp1 = icmp ne i32 %call, 0
  br label %cleanup

if.end:                                           ; preds = %entry
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not = icmp eq i8 %1, 0
  br i1 %tobool.i.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 25
  %2 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %4 = lshr i16 %3, 4
  %5 = and i16 %4, 15
  %6 = zext i16 %5 to i32
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.251)
  switch i32 %6, label %if.end4.sw.epilog_crit_edge [
    i32 8, label %if.end4.cleanup_crit_edge
    i32 7, label %if.end4.cleanup_crit_edge36
    i32 10, label %if.end4.cleanup_crit_edge37
    i32 6, label %if.end4.sw.bb6_crit_edge
    i32 4, label %if.end4.sw.bb6_crit_edge38
    i32 0, label %if.end4.sw.bb8_crit_edge
    i32 5, label %if.end4.sw.bb8_crit_edge39
    i32 1, label %if.end4.sw.bb8_crit_edge40
    i32 9, label %if.end4.sw.bb8_crit_edge41
  ]

if.end4.sw.bb8_crit_edge41:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb8

if.end4.sw.bb8_crit_edge40:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb8

if.end4.sw.bb8_crit_edge39:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb8

if.end4.sw.bb8_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb8

if.end4.sw.bb6_crit_edge38:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb6

if.end4.sw.bb6_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb6

if.end4.cleanup_crit_edge37:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end4.cleanup_crit_edge36:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end4.sw.epilog_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.epilog

sw.bb6:                                           ; preds = %if.end4.sw.bb6_crit_edge, %if.end4.sw.bb6_crit_edge38
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cap.i) #24
  %8 = ptrtoint ptr %cap.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %cap.i, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl.i) #24
  %9 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 -1, ptr %ctrl.i, align 2, !annotation !731
  %acs_cap.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 77
  %10 = ptrtoint ptr %acs_cap.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %acs_cap.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not.i = icmp eq i16 %11, 0
  br i1 %tobool.not.i, label %sw.bb6.pci_acs_flags_enabled.exit_crit_edge, label %if.end.i

sw.bb6.pci_acs_flags_enabled.exit_crit_edge:      ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_acs_flags_enabled.exit

if.end.i:                                         ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #26
  %conv.i = zext i16 %11 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call.i = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef %add.i, ptr noundef nonnull %cap.i) #24
  %12 = ptrtoint ptr %cap.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %cap.i, align 2
  %14 = or i16 %13, 32
  %and19.i = and i16 %14, %acs_flags
  %add4.i = add nuw nsw i32 %conv.i, 6
  %call5.i = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef %add4.i, ptr noundef nonnull %ctrl.i) #24
  %15 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %ctrl.i, align 2
  %and820.i = and i16 %16, %and19.i
  call void @__sanitizer_cov_trace_cmp2(i16 %and820.i, i16 %and19.i)
  %cmp.i = icmp eq i16 %and820.i, %and19.i
  br label %pci_acs_flags_enabled.exit

pci_acs_flags_enabled.exit:                       ; preds = %if.end.i, %sw.bb6.pci_acs_flags_enabled.exit_crit_edge
  %retval.0.i = phi i1 [ %cmp.i, %if.end.i ], [ false, %sw.bb6.pci_acs_flags_enabled.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl.i) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cap.i) #24
  br label %cleanup

sw.bb8:                                           ; preds = %if.end4.sw.bb8_crit_edge, %if.end4.sw.bb8_crit_edge39, %if.end4.sw.bb8_crit_edge40, %if.end4.sw.bb8_crit_edge41
  %multifunction = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %17 = ptrtoint ptr %multifunction to i32
  call void @__asan_loadN_noabort(i32 %17, i32 5)
  %bf.load = load i40, ptr %multifunction, align 1
  %18 = and i40 %bf.load, 34359738368
  %tobool.not = icmp eq i40 %18, 0
  br i1 %tobool.not, label %sw.bb8.sw.epilog_crit_edge, label %if.end10

sw.bb8.sw.epilog_crit_edge:                       ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.epilog

if.end10:                                         ; preds = %sw.bb8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cap.i21) #24
  %19 = ptrtoint ptr %cap.i21 to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 -1, ptr %cap.i21, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl.i22) #24
  %20 = ptrtoint ptr %ctrl.i22 to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 -1, ptr %ctrl.i22, align 2, !annotation !731
  %acs_cap.i23 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 77
  %21 = ptrtoint ptr %acs_cap.i23 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %acs_cap.i23, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool.not.i24 = icmp eq i16 %22, 0
  br i1 %tobool.not.i24, label %if.end10.pci_acs_flags_enabled.exit35_crit_edge, label %if.end.i33

if.end10.pci_acs_flags_enabled.exit35_crit_edge:  ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_acs_flags_enabled.exit35

if.end.i33:                                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #26
  %conv.i25 = zext i16 %22 to i32
  %add.i26 = add nuw nsw i32 %conv.i25, 4
  %call.i27 = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef %add.i26, ptr noundef nonnull %cap.i21) #24
  %23 = ptrtoint ptr %cap.i21 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %cap.i21, align 2
  %25 = or i16 %24, 32
  %and19.i28 = and i16 %25, %acs_flags
  %add4.i29 = add nuw nsw i32 %conv.i25, 6
  %call5.i30 = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef %add4.i29, ptr noundef nonnull %ctrl.i22) #24
  %26 = ptrtoint ptr %ctrl.i22 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %ctrl.i22, align 2
  %and820.i31 = and i16 %27, %and19.i28
  call void @__sanitizer_cov_trace_cmp2(i16 %and820.i31, i16 %and19.i28)
  %cmp.i32 = icmp eq i16 %and820.i31, %and19.i28
  br label %pci_acs_flags_enabled.exit35

pci_acs_flags_enabled.exit35:                     ; preds = %if.end.i33, %if.end10.pci_acs_flags_enabled.exit35_crit_edge
  %retval.0.i34 = phi i1 [ %cmp.i32, %if.end.i33 ], [ false, %if.end10.pci_acs_flags_enabled.exit35_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl.i22) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cap.i21) #24
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb8.sw.epilog_crit_edge, %if.end4.sw.epilog_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %pci_acs_flags_enabled.exit35, %pci_acs_flags_enabled.exit, %if.end4.cleanup_crit_edge, %if.end4.cleanup_crit_edge36, %if.end4.cleanup_crit_edge37, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i1 [ %cmp1, %if.then ], [ true, %sw.epilog ], [ %retval.0.i34, %pci_acs_flags_enabled.exit35 ], [ %retval.0.i, %pci_acs_flags_enabled.exit ], [ false, %if.end.cleanup_crit_edge ], [ false, %if.end4.cleanup_crit_edge ], [ false, %if.end4.cleanup_crit_edge36 ], [ false, %if.end4.cleanup_crit_edge37 ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_dev_specific_acs_enabled(ptr noundef, i16 noundef zeroext) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pci_acs_path_enabled(ptr noundef %start, ptr noundef readnone %end, i16 noundef zeroext %acs_flags) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  br label %do.body

do.body:                                          ; preds = %if.end3.do.body_crit_edge, %entry
  %parent.0 = phi ptr [ %start, %entry ], [ %5, %if.end3.do.body_crit_edge ]
  %call = tail call zeroext i1 @pci_acs_enabled(ptr noundef %parent.0, i16 noundef zeroext %acs_flags)
  br i1 %call, label %if.end, label %do.body.cleanup_crit_edge

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %do.body
  %bus = getelementptr inbounds %struct.pci_dev, ptr %parent.0, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %parent.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %cmp = icmp eq ptr %end, null
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %self = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %self, align 4
  %cmp5.not = icmp eq ptr %parent.0, %end
  br i1 %cmp5.not, label %if.end3.cleanup_crit_edge, label %if.end3.do.body_crit_edge

if.end3.do.body_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.body

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cleanup:                                          ; preds = %if.end3.cleanup_crit_edge, %if.then2, %do.body.cleanup_crit_edge
  %retval.0 = phi i1 [ %cmp, %if.then2 ], [ %call, %do.body.cleanup_crit_edge ], [ %call, %if.end3.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_acs_init(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %header.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i) #24
  %0 = ptrtoint ptr %header.i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %header.i.i, align 4, !annotation !731
  %cfg_size.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %1 = ptrtoint ptr %cfg_size.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cfg_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %2)
  %cmp.i.i = icmp slt i32 %2, 257
  br i1 %cmp.i.i, label %entry.pci_find_ext_capability.exit_crit_edge, label %if.end.i.i

entry.pci_find_ext_capability.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

if.end.i.i:                                       ; preds = %entry
  %call.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 256, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp3.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp3.not.i.i, label %if.end6.i.i, label %if.end.i.i.pci_find_ext_capability.exit_crit_edge

if.end.i.i.pci_find_ext_capability.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

if.end6.i.i:                                      ; preds = %if.end.i.i
  %3 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %header.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp7.i.i = icmp eq i32 %4, 0
  br i1 %cmp7.i.i, label %if.end6.i.i.pci_find_ext_capability.exit_crit_edge, label %while.body.i.i.preheader

if.end6.i.i.pci_find_ext_capability.exit_crit_edge: ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

while.body.i.i.preheader:                         ; preds = %if.end6.i.i
  %5 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %header.i.i, align 4
  %and.i.i3 = and i32 %6, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %and.i.i3)
  %cmp13.i.not.i4 = icmp eq i32 %and.i.i3, 13
  br i1 %cmp13.i.not.i4, label %while.body.i.i.preheader.pci_find_ext_capability.exit_crit_edge, label %while.body.i.i.preheader.if.end20.i.i_crit_edge

while.body.i.i.preheader.if.end20.i.i_crit_edge:  ; preds = %while.body.i.i.preheader
  br label %if.end20.i.i

while.body.i.i.preheader.pci_find_ext_capability.exit_crit_edge: ; preds = %while.body.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

while.body.i.i:                                   ; preds = %if.end27.i.i
  %dec.i.i = add nsw i32 %dec.i2.i5, -1
  %7 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %header.i.i, align 4
  %and.i.i = and i32 %8, 65535
  %cmp13.i.not.i = icmp eq i32 %and.i.i, 13
  br i1 %cmp13.i.not.i, label %while.body.i.i.pci_find_ext_capability.exit_crit_edge, label %while.body.i.i.if.end20.i.i_crit_edge

while.body.i.i.if.end20.i.i_crit_edge:            ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i.i

while.body.i.i.pci_find_ext_capability.exit_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

if.end20.i.i:                                     ; preds = %while.body.i.i.if.end20.i.i_crit_edge, %while.body.i.i.preheader.if.end20.i.i_crit_edge
  %9 = phi i32 [ %8, %while.body.i.i.if.end20.i.i_crit_edge ], [ %6, %while.body.i.i.preheader.if.end20.i.i_crit_edge ]
  %dec.i2.i5 = phi i32 [ %dec.i.i, %while.body.i.i.if.end20.i.i_crit_edge ], [ 479, %while.body.i.i.preheader.if.end20.i.i_crit_edge ]
  %shr.i.i = lshr i32 %9, 20
  %10 = trunc i32 %shr.i.i to i16
  %conv22.i.i = and i16 %10, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i)
  %cmp24.i.i = icmp ult i16 %conv22.i.i, 256
  br i1 %cmp24.i.i, label %if.end20.i.i.pci_find_ext_capability.exit_crit_edge, label %if.end27.i.i

if.end20.i.i.pci_find_ext_capability.exit_crit_edge: ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

if.end27.i.i:                                     ; preds = %if.end20.i.i
  %conv23.i.i = zext i16 %conv22.i.i to i32
  %call29.i.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %conv23.i.i, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i)
  %cmp30.not.i.i = icmp ne i32 %call29.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i5)
  %cmp11.not.i.i = icmp eq i32 %dec.i2.i5, 0
  %or.cond.i = select i1 %cmp30.not.i.i, i1 true, i1 %cmp11.not.i.i
  br i1 %or.cond.i, label %if.end27.i.i.pci_find_ext_capability.exit_crit_edge, label %while.body.i.i

if.end27.i.i.pci_find_ext_capability.exit_crit_edge: ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit

pci_find_ext_capability.exit:                     ; preds = %if.end27.i.i.pci_find_ext_capability.exit_crit_edge, %if.end20.i.i.pci_find_ext_capability.exit_crit_edge, %while.body.i.i.pci_find_ext_capability.exit_crit_edge, %while.body.i.i.preheader.pci_find_ext_capability.exit_crit_edge, %if.end6.i.i.pci_find_ext_capability.exit_crit_edge, %if.end.i.i.pci_find_ext_capability.exit_crit_edge, %entry.pci_find_ext_capability.exit_crit_edge
  %retval.0.i.i = phi i16 [ 0, %entry.pci_find_ext_capability.exit_crit_edge ], [ 0, %if.end.i.i.pci_find_ext_capability.exit_crit_edge ], [ 0, %if.end6.i.i.pci_find_ext_capability.exit_crit_edge ], [ 256, %while.body.i.i.preheader.pci_find_ext_capability.exit_crit_edge ], [ 0, %if.end27.i.i.pci_find_ext_capability.exit_crit_edge ], [ 0, %if.end20.i.i.pci_find_ext_capability.exit_crit_edge ], [ %conv22.i.i, %while.body.i.i.pci_find_ext_capability.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  %acs_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 77
  %11 = ptrtoint ptr %acs_cap to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %retval.0.i.i, ptr %acs_cap, align 2
  call fastcc void @pci_enable_acs(ptr noundef %dev)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_rebar_get_possible_sizes(ptr noundef %pdev, i32 noundef %bar) #5 align 64 {
entry:
  %cap = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cap) #24
  %0 = ptrtoint ptr %cap to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cap, align 4, !annotation !731
  %call = tail call fastcc i32 @pci_rebar_find_pos(ptr noundef %pdev, i32 noundef %bar)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add nuw i32 %call, 4
  %call1 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add, ptr noundef nonnull %cap) #24
  %1 = ptrtoint ptr %cap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cap, align 4
  %and = and i32 %2, 16777200
  store i32 %and, ptr %cap, align 4
  %vendor = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 7
  %3 = ptrtoint ptr %vendor to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %vendor, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 4098, i16 %4)
  %cmp2 = icmp eq i16 %4, 4098
  br i1 %cmp2, label %land.lhs.true, label %if.end.if.end14_crit_edge

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

land.lhs.true:                                    ; preds = %if.end
  %device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 8
  %5 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 29471, i16 %6)
  %cmp5 = icmp eq i16 %6, 29471
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bar)
  %cmp8 = icmp eq i32 %bar, 0
  %or.cond = and i1 %cmp8, %cmp5
  call void @__sanitizer_cov_trace_const_cmp4(i32 28672, i32 %and)
  %cmp11 = icmp eq i32 %and, 28672
  %or.cond21 = select i1 %or.cond, i1 %cmp11, i1 false
  br i1 %or.cond21, label %if.then13, label %land.lhs.true.if.end14_crit_edge

land.lhs.true.if.end14_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

if.then13:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  %7 = ptrtoint ptr %cap to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 258048, ptr %cap, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %land.lhs.true.if.end14_crit_edge, %if.end.if.end14_crit_edge
  %8 = ptrtoint ptr %cap to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cap, align 4
  %shr = lshr i32 %9, 4
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %shr, %if.end14 ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cap) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_rebar_find_pos(ptr noundef %pdev, i32 noundef %bar) unnamed_addr #5 align 64 {
entry:
  %header.i.i = alloca i32, align 4
  %ctrl = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctrl) #24
  %0 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ctrl, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %header.i.i) #24
  %1 = ptrtoint ptr %header.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %header.i.i, align 4, !annotation !731
  %cfg_size.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 45
  %2 = ptrtoint ptr %cfg_size.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cfg_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 257, i32 %3)
  %cmp.i.i = icmp slt i32 %3, 257
  br i1 %cmp.i.i, label %entry.pci_find_ext_capability.exit.thread_crit_edge, label %if.end.i.i

entry.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end.i.i:                                       ; preds = %entry
  %call.i.i = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef 256, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp3.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp3.not.i.i, label %if.end6.i.i, label %if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge

if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end6.i.i:                                      ; preds = %if.end.i.i
  %4 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %header.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp7.i.i = icmp eq i32 %5, 0
  br i1 %cmp7.i.i, label %if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %while.body.i.i.preheader

if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

while.body.i.i.preheader:                         ; preds = %if.end6.i.i
  %6 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %header.i.i, align 4
  %and.i.i25 = and i32 %7, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %and.i.i25)
  %cmp13.i.not.i26 = icmp eq i32 %and.i.i25, 21
  br i1 %cmp13.i.not.i26, label %while.body.i.i.preheader.if.end_crit_edge, label %while.body.i.i.preheader.if.end20.i.i_crit_edge

while.body.i.i.preheader.if.end20.i.i_crit_edge:  ; preds = %while.body.i.i.preheader
  br label %if.end20.i.i

while.body.i.i.preheader.if.end_crit_edge:        ; preds = %while.body.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

while.body.i.i:                                   ; preds = %if.end27.i.i
  %dec.i.i = add nsw i32 %dec.i2.i27, -1
  %8 = ptrtoint ptr %header.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %header.i.i, align 4
  %and.i.i = and i32 %9, 65535
  %cmp13.i.not.i = icmp eq i32 %and.i.i, 21
  br i1 %cmp13.i.not.i, label %if.end.loopexit, label %while.body.i.i.if.end20.i.i_crit_edge

while.body.i.i.if.end20.i.i_crit_edge:            ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20.i.i

if.end20.i.i:                                     ; preds = %while.body.i.i.if.end20.i.i_crit_edge, %while.body.i.i.preheader.if.end20.i.i_crit_edge
  %10 = phi i32 [ %9, %while.body.i.i.if.end20.i.i_crit_edge ], [ %7, %while.body.i.i.preheader.if.end20.i.i_crit_edge ]
  %dec.i2.i27 = phi i32 [ %dec.i.i, %while.body.i.i.if.end20.i.i_crit_edge ], [ 479, %while.body.i.i.preheader.if.end20.i.i_crit_edge ]
  %shr.i.i = lshr i32 %10, 20
  %11 = trunc i32 %shr.i.i to i16
  %conv22.i.i = and i16 %11, 4092
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %conv22.i.i)
  %cmp24.i.i = icmp ult i16 %conv22.i.i, 256
  br i1 %cmp24.i.i, label %if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %if.end27.i.i

if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

if.end27.i.i:                                     ; preds = %if.end20.i.i
  %conv23.i.i = zext i16 %conv22.i.i to i32
  %call29.i.i = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %conv23.i.i, ptr noundef nonnull %header.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i.i)
  %cmp30.not.i.i = icmp ne i32 %call29.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i2.i27)
  %cmp11.not.i.i = icmp eq i32 %dec.i2.i27, 0
  %or.cond.i = select i1 %cmp30.not.i.i, i1 true, i1 %cmp11.not.i.i
  br i1 %or.cond.i, label %if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge, label %while.body.i.i

if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge: ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_find_ext_capability.exit.thread

pci_find_ext_capability.exit.thread:              ; preds = %if.end27.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end20.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end6.i.i.pci_find_ext_capability.exit.thread_crit_edge, %if.end.i.i.pci_find_ext_capability.exit.thread_crit_edge, %entry.pci_find_ext_capability.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  br label %cleanup11

if.end.loopexit:                                  ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %phi.cast = zext i16 %conv22.i.i to i32
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %while.body.i.i.preheader.if.end_crit_edge
  %pos.1.i1.i.lcssa = phi i32 [ %phi.cast, %if.end.loopexit ], [ 256, %while.body.i.i.preheader.if.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %header.i.i) #24
  %add = add nuw nsw i32 %pos.1.i1.i.lcssa, 8
  %call1 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add, ptr noundef nonnull %ctrl) #24
  %12 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ctrl, align 4
  %and = lshr i32 %13, 5
  %shr = and i32 %and, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr)
  %cmp28.not = icmp eq i32 %shr, 0
  br i1 %cmp28.not, label %if.end.cleanup11_crit_edge, label %for.body

if.end.cleanup11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.cond:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %shr)
  %exitcond.not = icmp eq i32 %shr, 1
  br i1 %exitcond.not, label %for.cond.cleanup11_crit_edge, label %for.body.1

for.cond.cleanup11_crit_edge:                     ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.body.1:                                       ; preds = %for.cond
  %add3.1 = add nuw nsw i32 %pos.1.i1.i.lcssa, 16
  %call4.1 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add3.1, ptr noundef nonnull %ctrl) #24
  %14 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ctrl, align 4
  %and5.1 = and i32 %15, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %and5.1, i32 %bar)
  %cmp6.1 = icmp eq i32 %and5.1, %bar
  br i1 %cmp6.1, label %for.body.1.cleanup11_crit_edge, label %for.cond.1

for.body.1.cleanup11_crit_edge:                   ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.cond.1:                                       ; preds = %for.body.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %shr)
  %exitcond.not.1 = icmp eq i32 %shr, 2
  br i1 %exitcond.not.1, label %for.cond.1.cleanup11_crit_edge, label %for.body.2

for.cond.1.cleanup11_crit_edge:                   ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.body.2:                                       ; preds = %for.cond.1
  %add3.2 = add nuw nsw i32 %pos.1.i1.i.lcssa, 24
  %call4.2 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add3.2, ptr noundef nonnull %ctrl) #24
  %16 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ctrl, align 4
  %and5.2 = and i32 %17, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %and5.2, i32 %bar)
  %cmp6.2 = icmp eq i32 %and5.2, %bar
  br i1 %cmp6.2, label %for.body.2.cleanup11_crit_edge, label %for.cond.2

for.body.2.cleanup11_crit_edge:                   ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.cond.2:                                       ; preds = %for.body.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %shr)
  %exitcond.not.2 = icmp eq i32 %shr, 3
  br i1 %exitcond.not.2, label %for.cond.2.cleanup11_crit_edge, label %for.body.3

for.cond.2.cleanup11_crit_edge:                   ; preds = %for.cond.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.body.3:                                       ; preds = %for.cond.2
  %add3.3 = add nuw nsw i32 %pos.1.i1.i.lcssa, 32
  %call4.3 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add3.3, ptr noundef nonnull %ctrl) #24
  %18 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ctrl, align 4
  %and5.3 = and i32 %19, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %and5.3, i32 %bar)
  %cmp6.3 = icmp eq i32 %and5.3, %bar
  br i1 %cmp6.3, label %for.body.3.cleanup11_crit_edge, label %for.cond.3

for.body.3.cleanup11_crit_edge:                   ; preds = %for.body.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.cond.3:                                       ; preds = %for.body.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %shr)
  %exitcond.not.3 = icmp eq i32 %shr, 4
  br i1 %exitcond.not.3, label %for.cond.3.cleanup11_crit_edge, label %for.body.4

for.cond.3.cleanup11_crit_edge:                   ; preds = %for.cond.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.body.4:                                       ; preds = %for.cond.3
  %add3.4 = add nuw nsw i32 %pos.1.i1.i.lcssa, 40
  %call4.4 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add3.4, ptr noundef nonnull %ctrl) #24
  %20 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ctrl, align 4
  %and5.4 = and i32 %21, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %and5.4, i32 %bar)
  %cmp6.4 = icmp eq i32 %and5.4, %bar
  br i1 %cmp6.4, label %for.body.4.cleanup11_crit_edge, label %for.cond.4

for.body.4.cleanup11_crit_edge:                   ; preds = %for.body.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.cond.4:                                       ; preds = %for.body.4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %shr)
  %exitcond.not.4 = icmp eq i32 %shr, 5
  br i1 %exitcond.not.4, label %for.cond.4.cleanup11_crit_edge, label %for.body.5

for.cond.4.cleanup11_crit_edge:                   ; preds = %for.cond.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.body.5:                                       ; preds = %for.cond.4
  %add3.5 = add nuw nsw i32 %pos.1.i1.i.lcssa, 48
  %call4.5 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add3.5, ptr noundef nonnull %ctrl) #24
  %22 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ctrl, align 4
  %and5.5 = and i32 %23, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %and5.5, i32 %bar)
  %cmp6.5 = icmp eq i32 %and5.5, %bar
  br i1 %cmp6.5, label %for.body.5.cleanup11_crit_edge, label %for.cond.5

for.body.5.cleanup11_crit_edge:                   ; preds = %for.body.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.cond.5:                                       ; preds = %for.body.5
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %shr)
  %exitcond.not.5 = icmp eq i32 %shr, 6
  br i1 %exitcond.not.5, label %for.cond.5.cleanup11_crit_edge, label %for.body.6

for.cond.5.cleanup11_crit_edge:                   ; preds = %for.cond.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

for.body.6:                                       ; preds = %for.cond.5
  call void @__sanitizer_cov_trace_pc() #26
  %add3.6 = add nuw nsw i32 %pos.1.i1.i.lcssa, 56
  %call4.6 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add3.6, ptr noundef nonnull %ctrl) #24
  %24 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %ctrl, align 4
  %and5.6 = and i32 %25, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %and5.6, i32 %bar)
  %cmp6.6 = icmp eq i32 %and5.6, %bar
  %spec.select = select i1 %cmp6.6, i32 %add3.5, i32 -2
  br label %cleanup11

for.body:                                         ; preds = %if.end
  %add3 = add nuw nsw i32 %pos.1.i1.i.lcssa, 8
  %call4 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add3, ptr noundef nonnull %ctrl) #24
  %26 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %ctrl, align 4
  %and5 = and i32 %27, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %and5, i32 %bar)
  %cmp6 = icmp eq i32 %and5, %bar
  br i1 %cmp6, label %for.body.cleanup11_crit_edge, label %for.cond

for.body.cleanup11_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup11

cleanup11:                                        ; preds = %for.body.cleanup11_crit_edge, %for.body.6, %for.cond.5.cleanup11_crit_edge, %for.body.5.cleanup11_crit_edge, %for.cond.4.cleanup11_crit_edge, %for.body.4.cleanup11_crit_edge, %for.cond.3.cleanup11_crit_edge, %for.body.3.cleanup11_crit_edge, %for.cond.2.cleanup11_crit_edge, %for.body.2.cleanup11_crit_edge, %for.cond.1.cleanup11_crit_edge, %for.body.1.cleanup11_crit_edge, %for.cond.cleanup11_crit_edge, %if.end.cleanup11_crit_edge, %pci_find_ext_capability.exit.thread
  %retval.2 = phi i32 [ -524, %pci_find_ext_capability.exit.thread ], [ -2, %if.end.cleanup11_crit_edge ], [ %pos.1.i1.i.lcssa, %for.body.cleanup11_crit_edge ], [ -2, %for.cond.cleanup11_crit_edge ], [ %add3, %for.body.1.cleanup11_crit_edge ], [ -2, %for.cond.1.cleanup11_crit_edge ], [ %add3.1, %for.body.2.cleanup11_crit_edge ], [ -2, %for.cond.2.cleanup11_crit_edge ], [ %add3.2, %for.body.3.cleanup11_crit_edge ], [ -2, %for.cond.3.cleanup11_crit_edge ], [ %add3.3, %for.body.4.cleanup11_crit_edge ], [ -2, %for.cond.4.cleanup11_crit_edge ], [ %add3.4, %for.body.5.cleanup11_crit_edge ], [ -2, %for.cond.5.cleanup11_crit_edge ], [ %spec.select, %for.body.6 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctrl) #24
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_rebar_get_current_size(ptr noundef %pdev, i32 noundef %bar) local_unnamed_addr #5 align 64 {
entry:
  %ctrl = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctrl) #24
  %0 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ctrl, align 4, !annotation !731
  %call = tail call fastcc i32 @pci_rebar_find_pos(ptr noundef %pdev, i32 noundef %bar)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %add = add nuw i32 %call, 8
  %call1 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add, ptr noundef nonnull %ctrl) #24
  %1 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %ctrl, align 4
  %and = lshr i32 %2, 8
  %shr = and i32 %and, 31
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %shr, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctrl) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_rebar_set_size(ptr noundef %pdev, i32 noundef %bar, i32 noundef %size) local_unnamed_addr #5 align 64 {
entry:
  %ctrl = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctrl) #24
  %0 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ctrl, align 4, !annotation !731
  %call = tail call fastcc i32 @pci_rebar_find_pos(ptr noundef %pdev, i32 noundef %bar)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %add = add nuw i32 %call, 8
  %call1 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %add, ptr noundef nonnull %ctrl) #24
  %1 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %ctrl, align 4
  %and = and i32 %2, -7937
  %shl = shl i32 %size, 8
  %or = or i32 %and, %shl
  store i32 %or, ptr %ctrl, align 4
  %call3 = call i32 @pci_write_config_dword(ptr noundef %pdev, i32 noundef %add, i32 noundef %or) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctrl) #24
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_config_dword(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_enable_atomic_ops_to_root(ptr noundef %dev, i32 noundef %cap_mask) #5 align 64 {
entry:
  %cap = alloca i32, align 4
  %ctl2 = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cap) #24
  %2 = ptrtoint ptr %cap to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %cap, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctl2) #24
  %3 = ptrtoint ptr %ctl2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %ctl2, align 4, !annotation !731
  %is_virtfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %4 = ptrtoint ptr %is_virtfn to i32
  call void @__asan_loadN_noabort(i32 %4, i32 5)
  %bf.load = load i40, ptr %is_virtfn, align 1
  %5 = and i40 %bf.load, 65536
  %tobool.not = icmp eq i40 %5, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %6 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.i.not = icmp eq i8 %7, 0
  br i1 %tobool.i.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %8 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %10 = lshr i16 %9, 4
  %11 = and i16 %10, 15
  %12 = zext i16 %11 to i32
  %13 = zext i32 %12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.252)
  switch i32 %12, label %if.end3.cleanup_crit_edge [
    i32 0, label %if.end3.sw.epilog_crit_edge
    i32 1, label %if.end3.sw.epilog_crit_edge48
    i32 9, label %if.end3.sw.epilog_crit_edge49
  ]

if.end3.sw.epilog_crit_edge49:                    ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.epilog

if.end3.sw.epilog_crit_edge48:                    ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.epilog

if.end3.sw.epilog_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.epilog

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

sw.epilog:                                        ; preds = %if.end3.sw.epilog_crit_edge, %if.end3.sw.epilog_crit_edge48, %if.end3.sw.epilog_crit_edge49
  %parent44 = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 1
  %14 = ptrtoint ptr %parent44 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %parent44, align 8
  %tobool5.not45 = icmp eq ptr %15, null
  br i1 %tobool5.not45, label %sw.epilog.while.end_crit_edge, label %sw.epilog.while.body_crit_edge

sw.epilog.while.body_crit_edge:                   ; preds = %sw.epilog
  br label %while.body

sw.epilog.while.end_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.body:                                       ; preds = %if.end25.while.body_crit_edge, %sw.epilog.while.body_crit_edge
  %parent47 = phi ptr [ %parent, %if.end25.while.body_crit_edge ], [ %parent44, %sw.epilog.while.body_crit_edge ]
  %bus.046 = phi ptr [ %31, %if.end25.while.body_crit_edge ], [ %1, %sw.epilog.while.body_crit_edge ]
  %self = getelementptr inbounds %struct.pci_bus, ptr %bus.046, i32 0, i32 4
  %16 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %self, align 4
  %call6 = call i32 @pcie_capability_read_dword(ptr noundef %17, i32 noundef 36, ptr noundef nonnull %cap) #24
  %pcie_flags_reg.i.i41 = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 25
  %18 = ptrtoint ptr %pcie_flags_reg.i.i41 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %pcie_flags_reg.i.i41, align 2
  %20 = lshr i16 %19, 4
  %21 = and i16 %20, 15
  %22 = zext i16 %21 to i32
  %23 = zext i32 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.253)
  switch i32 %22, label %while.body.if.end25_crit_edge [
    i32 5, label %while.body.sw.bb8_crit_edge
    i32 6, label %while.body.sw.bb8_crit_edge50
    i32 4, label %sw.bb12
  ]

while.body.sw.bb8_crit_edge50:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb8

while.body.sw.bb8_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %sw.bb8

while.body.if.end25_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25

sw.bb8:                                           ; preds = %while.body.sw.bb8_crit_edge, %while.body.sw.bb8_crit_edge50
  %24 = ptrtoint ptr %cap to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cap, align 4
  %and = and i32 %25, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool9.not = icmp eq i32 %and, 0
  br i1 %tobool9.not, label %sw.bb8.cleanup_crit_edge, label %sw.epilog16

sw.bb8.cleanup_crit_edge:                         ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

sw.bb12:                                          ; preds = %while.body
  %26 = ptrtoint ptr %cap to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cap, align 4
  %and13 = and i32 %27, %cap_mask
  call void @__sanitizer_cov_trace_cmp4(i32 %and13, i32 %cap_mask)
  %cmp.not = icmp eq i32 %and13, %cap_mask
  br i1 %cmp.not, label %sw.bb12.if.end25_crit_edge, label %sw.bb12.cleanup_crit_edge

sw.bb12.cleanup_crit_edge:                        ; preds = %sw.bb12
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

sw.bb12.if.end25_crit_edge:                       ; preds = %sw.bb12
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25

sw.epilog16:                                      ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %21)
  %cmp18 = icmp eq i16 %21, 5
  br i1 %cmp18, label %if.then19, label %sw.epilog16.if.end25_crit_edge

sw.epilog16.if.end25_crit_edge:                   ; preds = %sw.epilog16
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25

if.then19:                                        ; preds = %sw.epilog16
  %call20 = call i32 @pcie_capability_read_dword(ptr noundef %17, i32 noundef 40, ptr noundef nonnull %ctl2) #24
  %28 = ptrtoint ptr %ctl2 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %ctl2, align 4
  %and21 = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %if.then19.if.end25_crit_edge, label %if.then19.cleanup_crit_edge

if.then19.cleanup_crit_edge:                      ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then19.if.end25_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25

if.end25:                                         ; preds = %if.then19.if.end25_crit_edge, %sw.epilog16.if.end25_crit_edge, %sw.bb12.if.end25_crit_edge, %while.body.if.end25_crit_edge
  %30 = ptrtoint ptr %parent47 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %parent47, align 8
  %parent = getelementptr inbounds %struct.pci_bus, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %parent, align 8
  %tobool5.not = icmp eq ptr %33, null
  br i1 %tobool5.not, label %if.end25.while.end_crit_edge, label %if.end25.while.body_crit_edge

if.end25.while.body_crit_edge:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

if.end25.while.end_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.end:                                        ; preds = %if.end25.while.end_crit_edge, %sw.epilog.while.end_crit_edge
  %call.i = call i32 @pcie_capability_clear_and_set_word(ptr noundef %dev, i32 noundef 40, i16 noundef zeroext 0, i16 noundef zeroext 64) #24
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.then19.cleanup_crit_edge, %sw.bb12.cleanup_crit_edge, %sw.bb8.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %while.end ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end3.cleanup_crit_edge ], [ -22, %sw.bb8.cleanup_crit_edge ], [ -22, %sw.bb12.cleanup_crit_edge ], [ -22, %if.then19.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctl2) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cap) #24
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i8 @pci_swizzle_interrupt_pin(ptr nocapture noundef readonly %dev, i8 noundef zeroext %pin) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %self.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.if.else_crit_edge, label %pci_ari_enabled.exit

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else

pci_ari_enabled.exit:                             ; preds = %entry
  %ari_enabled.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 49
  %4 = ptrtoint ptr %ari_enabled.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 5)
  %bf.load.i = load i40, ptr %ari_enabled.i, align 1
  %5 = and i40 %bf.load.i, 33554432
  %tobool2.i.not = icmp eq i40 %5, 0
  br i1 %tobool2.i.not, label %pci_ari_enabled.exit.if.else_crit_edge, label %pci_ari_enabled.exit.if.end_crit_edge

pci_ari_enabled.exit.if.end_crit_edge:            ; preds = %pci_ari_enabled.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

pci_ari_enabled.exit.if.else_crit_edge:           ; preds = %pci_ari_enabled.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else

if.else:                                          ; preds = %pci_ari_enabled.exit.if.else_crit_edge, %entry.if.else_crit_edge
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %6 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %devfn, align 4
  %shr = lshr i32 %7, 3
  %and = and i32 %shr, 31
  br label %if.end

if.end:                                           ; preds = %if.else, %pci_ari_enabled.exit.if.end_crit_edge
  %slot.0 = phi i32 [ %and, %if.else ], [ 0, %pci_ari_enabled.exit.if.end_crit_edge ]
  %conv = zext i8 %pin to i32
  %sub = add nuw nsw i32 %conv, 65535
  %add = add nuw nsw i32 %sub, %slot.0
  %rem.lhs.trunc = trunc i32 %add to i16
  %rem4 = srem i16 %rem.lhs.trunc, 4
  %8 = trunc i16 %rem4 to i8
  %conv2 = add nsw i8 %8, 1
  ret i8 %conv2
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_get_interrupt_pin(ptr noundef %dev, ptr nocapture noundef writeonly %bridge) local_unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %pin1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 24
  %0 = ptrtoint ptr %pin1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pin1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %while.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.cond.preheader:                             ; preds = %entry
  %bus10 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %bus10 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus10, align 8
  %parent.i11 = getelementptr inbounds %struct.pci_bus, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %parent.i11 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i11, align 8
  %tobool.not.i12 = icmp eq ptr %5, null
  br i1 %tobool.not.i12, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.body:                                       ; preds = %pci_swizzle_interrupt_pin.exit.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %6 = phi ptr [ %15, %pci_swizzle_interrupt_pin.exit.while.body_crit_edge ], [ %3, %while.cond.preheader.while.body_crit_edge ]
  %pin.014 = phi i8 [ %conv2.i, %pci_swizzle_interrupt_pin.exit.while.body_crit_edge ], [ %1, %while.cond.preheader.while.body_crit_edge ]
  %dev.addr.013 = phi ptr [ %8, %pci_swizzle_interrupt_pin.exit.while.body_crit_edge ], [ %dev, %while.cond.preheader.while.body_crit_edge ]
  %self.i.i = getelementptr inbounds %struct.pci_bus, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %self.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %self.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i, label %while.body.if.else.i_crit_edge, label %pci_ari_enabled.exit.i

while.body.if.else.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else.i

pci_ari_enabled.exit.i:                           ; preds = %while.body
  %ari_enabled.i.i = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 49
  %9 = ptrtoint ptr %ari_enabled.i.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 5)
  %bf.load.i.i = load i40, ptr %ari_enabled.i.i, align 1
  %10 = and i40 %bf.load.i.i, 33554432
  %tobool2.i.not.i = icmp eq i40 %10, 0
  br i1 %tobool2.i.not.i, label %pci_ari_enabled.exit.i.if.else.i_crit_edge, label %pci_ari_enabled.exit.i.pci_swizzle_interrupt_pin.exit_crit_edge

pci_ari_enabled.exit.i.pci_swizzle_interrupt_pin.exit_crit_edge: ; preds = %pci_ari_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_swizzle_interrupt_pin.exit

pci_ari_enabled.exit.i.if.else.i_crit_edge:       ; preds = %pci_ari_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else.i

if.else.i:                                        ; preds = %pci_ari_enabled.exit.i.if.else.i_crit_edge, %while.body.if.else.i_crit_edge
  %devfn.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.013, i32 0, i32 6
  %11 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %devfn.i, align 4
  %shr.i = lshr i32 %12, 3
  %and.i = and i32 %shr.i, 31
  br label %pci_swizzle_interrupt_pin.exit

pci_swizzle_interrupt_pin.exit:                   ; preds = %if.else.i, %pci_ari_enabled.exit.i.pci_swizzle_interrupt_pin.exit_crit_edge
  %slot.0.i = phi i32 [ %and.i, %if.else.i ], [ 0, %pci_ari_enabled.exit.i.pci_swizzle_interrupt_pin.exit_crit_edge ]
  %conv.i = zext i8 %pin.014 to i32
  %sub.i = add nuw nsw i32 %conv.i, 65535
  %add.i = add nuw nsw i32 %sub.i, %slot.0.i
  %rem.lhs.trunc.i = trunc i32 %add.i to i16
  %rem4.i = srem i16 %rem.lhs.trunc.i, 4
  %13 = trunc i16 %rem4.i to i8
  %conv2.i = add nsw i8 %13, 1
  %bus = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 1
  %14 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bus, align 8
  %parent.i = getelementptr inbounds %struct.pci_bus, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %parent.i, align 8
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %pci_swizzle_interrupt_pin.exit.while.end_crit_edge, label %pci_swizzle_interrupt_pin.exit.while.body_crit_edge

pci_swizzle_interrupt_pin.exit.while.body_crit_edge: ; preds = %pci_swizzle_interrupt_pin.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

pci_swizzle_interrupt_pin.exit.while.end_crit_edge: ; preds = %pci_swizzle_interrupt_pin.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.end:                                        ; preds = %pci_swizzle_interrupt_pin.exit.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %dev.addr.0.lcssa = phi ptr [ %dev, %while.cond.preheader.while.end_crit_edge ], [ %8, %pci_swizzle_interrupt_pin.exit.while.end_crit_edge ]
  %pin.0.lcssa = phi i8 [ %1, %while.cond.preheader.while.end_crit_edge ], [ %conv2.i, %pci_swizzle_interrupt_pin.exit.while.end_crit_edge ]
  %18 = ptrtoint ptr %bridge to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %dev.addr.0.lcssa, ptr %bridge, align 4
  %conv = zext i8 %pin.0.lcssa to i32
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %conv, %while.end ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @pci_common_swizzle(ptr nocapture noundef readonly %dev, ptr nocapture noundef %pinp) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pinp to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pinp, align 1
  %bus8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %bus8 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus8, align 8
  %parent.i9 = getelementptr inbounds %struct.pci_bus, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %parent.i9 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i9, align 8
  %tobool.not.i10 = icmp eq ptr %5, null
  br i1 %tobool.not.i10, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.body:                                       ; preds = %pci_swizzle_interrupt_pin.exit.while.body_crit_edge, %entry.while.body_crit_edge
  %6 = phi ptr [ %15, %pci_swizzle_interrupt_pin.exit.while.body_crit_edge ], [ %3, %entry.while.body_crit_edge ]
  %pin.012 = phi i8 [ %conv2.i, %pci_swizzle_interrupt_pin.exit.while.body_crit_edge ], [ %1, %entry.while.body_crit_edge ]
  %dev.addr.011 = phi ptr [ %8, %pci_swizzle_interrupt_pin.exit.while.body_crit_edge ], [ %dev, %entry.while.body_crit_edge ]
  %self.i.i = getelementptr inbounds %struct.pci_bus, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %self.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %self.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i, label %while.body.if.else.i_crit_edge, label %pci_ari_enabled.exit.i

while.body.if.else.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else.i

pci_ari_enabled.exit.i:                           ; preds = %while.body
  %ari_enabled.i.i = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 49
  %9 = ptrtoint ptr %ari_enabled.i.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 5)
  %bf.load.i.i = load i40, ptr %ari_enabled.i.i, align 1
  %10 = and i40 %bf.load.i.i, 33554432
  %tobool2.i.not.i = icmp eq i40 %10, 0
  br i1 %tobool2.i.not.i, label %pci_ari_enabled.exit.i.if.else.i_crit_edge, label %pci_ari_enabled.exit.i.pci_swizzle_interrupt_pin.exit_crit_edge

pci_ari_enabled.exit.i.pci_swizzle_interrupt_pin.exit_crit_edge: ; preds = %pci_ari_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_swizzle_interrupt_pin.exit

pci_ari_enabled.exit.i.if.else.i_crit_edge:       ; preds = %pci_ari_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else.i

if.else.i:                                        ; preds = %pci_ari_enabled.exit.i.if.else.i_crit_edge, %while.body.if.else.i_crit_edge
  %devfn.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.011, i32 0, i32 6
  %11 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %devfn.i, align 4
  %shr.i = lshr i32 %12, 3
  %and.i = and i32 %shr.i, 31
  br label %pci_swizzle_interrupt_pin.exit

pci_swizzle_interrupt_pin.exit:                   ; preds = %if.else.i, %pci_ari_enabled.exit.i.pci_swizzle_interrupt_pin.exit_crit_edge
  %slot.0.i = phi i32 [ %and.i, %if.else.i ], [ 0, %pci_ari_enabled.exit.i.pci_swizzle_interrupt_pin.exit_crit_edge ]
  %conv.i = zext i8 %pin.012 to i32
  %sub.i = add nuw nsw i32 %conv.i, 65535
  %add.i = add nuw nsw i32 %sub.i, %slot.0.i
  %rem.lhs.trunc.i = trunc i32 %add.i to i16
  %rem4.i = srem i16 %rem.lhs.trunc.i, 4
  %13 = trunc i16 %rem4.i to i8
  %conv2.i = add nsw i8 %13, 1
  %bus = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 1
  %14 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bus, align 8
  %parent.i = getelementptr inbounds %struct.pci_bus, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %parent.i, align 8
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %pci_swizzle_interrupt_pin.exit.while.end_crit_edge, label %pci_swizzle_interrupt_pin.exit.while.body_crit_edge

pci_swizzle_interrupt_pin.exit.while.body_crit_edge: ; preds = %pci_swizzle_interrupt_pin.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

pci_swizzle_interrupt_pin.exit.while.end_crit_edge: ; preds = %pci_swizzle_interrupt_pin.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.end:                                        ; preds = %pci_swizzle_interrupt_pin.exit.while.end_crit_edge, %entry.while.end_crit_edge
  %dev.addr.0.lcssa = phi ptr [ %dev, %entry.while.end_crit_edge ], [ %8, %pci_swizzle_interrupt_pin.exit.while.end_crit_edge ]
  %pin.0.lcssa = phi i8 [ %1, %entry.while.end_crit_edge ], [ %conv2.i, %pci_swizzle_interrupt_pin.exit.while.end_crit_edge ]
  %18 = ptrtoint ptr %pinp to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %pin.0.lcssa, ptr %pinp, align 1
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.lcssa, i32 0, i32 6
  %19 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %devfn, align 4
  %21 = trunc i32 %20 to i8
  %22 = lshr i8 %21, 3
  ret i8 %22
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_release_region(ptr noundef %pdev, i32 noundef %bar) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %end = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar, i32 1
  %0 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %cond.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cond.false:                                       ; preds = %entry
  %arrayidx = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 8
  %sub = sub i32 %1, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub)
  %phi.cmp = icmp eq i32 %sub, -1
  br i1 %phi.cmp, label %cond.false.cleanup_crit_edge, label %if.end

cond.false.cleanup_crit_edge:                     ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %cond.false
  %flags = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %and = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.end.if.end55.sink.split_crit_edge

if.end.if.end55.sink.split_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.sink.split

if.else:                                          ; preds = %if.end
  %and32 = and i32 %5, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.else.if.end55_crit_edge, label %if.else.if.end55.sink.split_crit_edge

if.else.if.end55.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.sink.split

if.else.if.end55_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55

if.end55.sink.split:                              ; preds = %if.else.if.end55.sink.split_crit_edge, %if.end.if.end55.sink.split_crit_edge
  %iomem_resource.sink = phi ptr [ @ioport_resource, %if.end.if.end55.sink.split_crit_edge ], [ @iomem_resource, %if.else.if.end55.sink.split_crit_edge ]
  %add51 = add nuw i32 %sub, 1
  tail call void @__release_region(ptr noundef nonnull %iomem_resource.sink, i32 noundef %3, i32 noundef %add51) #24
  br label %if.end55

if.end55:                                         ; preds = %if.end55.sink.split, %if.else.if.end55_crit_edge
  %is_managed.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %6 = ptrtoint ptr %is_managed.i.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 5)
  %bf.load.i.i = load i40, ptr %is_managed.i.i, align 1
  %7 = and i40 %bf.load.i.i, 2097152
  %tobool.not.i = icmp eq i40 %7, 0
  br i1 %tobool.not.i, label %if.end55.cleanup_crit_edge, label %find_pci_dr.exit

if.end55.cleanup_crit_edge:                       ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

find_pci_dr.exit:                                 ; preds = %if.end55
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %call1.i = tail call ptr @devres_find(ptr noundef %dev.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool56.not = icmp eq ptr %call1.i, null
  br i1 %tobool56.not, label %find_pci_dr.exit.cleanup_crit_edge, label %if.then57

find_pci_dr.exit.cleanup_crit_edge:               ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then57:                                        ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  %shl = shl nuw i32 1, %bar
  %neg = xor i32 %shl, -1
  %region_mask = getelementptr inbounds %struct.pci_devres, ptr %call1.i, i32 0, i32 1
  %8 = ptrtoint ptr %region_mask to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %region_mask, align 4
  %and58 = and i32 %9, %neg
  store i32 %and58, ptr %region_mask, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then57, %find_pci_dr.exit.cleanup_crit_edge, %if.end55.cleanup_crit_edge, %cond.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__release_region(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_request_region(ptr noundef %pdev, i32 noundef %bar, ptr noundef %res_name) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__pci_request_region(ptr noundef %pdev, i32 noundef %bar, ptr noundef %res_name, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__pci_request_region(ptr noundef %pdev, i32 noundef %bar, ptr noundef %res_name, i32 noundef %exclusive) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar
  %end = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar, i32 1
  %0 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %cond.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cond.false:                                       ; preds = %entry
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 8
  %sub = sub i32 %1, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub)
  %phi.cmp = icmp eq i32 %sub, -1
  br i1 %phi.cmp, label %cond.false.cleanup_crit_edge, label %if.end

cond.false.cleanup_crit_edge:                     ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %cond.false
  %flags = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %bar, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %and = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end
  %add26 = add nuw i32 %sub, 1
  %call = tail call ptr @__request_region(ptr noundef nonnull @ioport_resource, i32 noundef %3, i32 noundef %add26, ptr noundef %res_name, i32 noundef 0) #24
  %tobool29.not = icmp eq ptr %call, null
  br i1 %tobool29.not, label %if.then9.do.end_crit_edge, label %if.then9.if.end62_crit_edge

if.then9.if.end62_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end62

if.then9.do.end_crit_edge:                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end

if.else:                                          ; preds = %if.end
  %and35 = and i32 %5, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and35)
  %tobool36.not = icmp eq i32 %and35, 0
  br i1 %tobool36.not, label %if.else.if.end62_crit_edge, label %if.then37

if.else.if.end62_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end62

if.then37:                                        ; preds = %if.else
  %add54 = add nuw i32 %sub, 1
  %call57 = tail call ptr @__request_region(ptr noundef nonnull @iomem_resource, i32 noundef %3, i32 noundef %add54, ptr noundef %res_name, i32 noundef %exclusive) #24
  %tobool58.not = icmp eq ptr %call57, null
  br i1 %tobool58.not, label %if.then37.do.end_crit_edge, label %if.then37.if.end62_crit_edge

if.then37.if.end62_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end62

if.then37.do.end_crit_edge:                       ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end

if.end62:                                         ; preds = %if.then37.if.end62_crit_edge, %if.else.if.end62_crit_edge, %if.then9.if.end62_crit_edge
  %is_managed.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %6 = ptrtoint ptr %is_managed.i.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 5)
  %bf.load.i.i = load i40, ptr %is_managed.i.i, align 1
  %7 = and i40 %bf.load.i.i, 2097152
  %tobool.not.i = icmp eq i40 %7, 0
  br i1 %tobool.not.i, label %if.end62.cleanup_crit_edge, label %find_pci_dr.exit

if.end62.cleanup_crit_edge:                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

find_pci_dr.exit:                                 ; preds = %if.end62
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %call1.i = tail call ptr @devres_find(ptr noundef %dev.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool64.not = icmp eq ptr %call1.i, null
  br i1 %tobool64.not, label %find_pci_dr.exit.cleanup_crit_edge, label %if.then65

find_pci_dr.exit.cleanup_crit_edge:               ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then65:                                        ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  %shl = shl nuw i32 1, %bar
  %region_mask = getelementptr inbounds %struct.pci_devres, ptr %call1.i, i32 0, i32 1
  %8 = ptrtoint ptr %region_mask to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %region_mask, align 4
  %or = or i32 %9, %shl
  store i32 %or, ptr %region_mask, align 4
  br label %cleanup

do.end:                                           ; preds = %if.then37.do.end_crit_edge, %if.then9.do.end_crit_edge
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.152, i32 noundef %bar, ptr noundef %arrayidx) #28
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then65, %find_pci_dr.exit.cleanup_crit_edge, %if.end62.cleanup_crit_edge, %cond.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -16, %do.end ], [ 0, %cond.false.cleanup_crit_edge ], [ 0, %if.then65 ], [ 0, %find_pci_dr.exit.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end62.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_release_selected_regions(ptr noundef %pdev, i32 noundef %bars) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %is_managed.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.04 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %shl = shl nuw nsw i32 1, %i.04
  %and = and i32 %shl, %bars
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then:                                          ; preds = %for.body
  %end.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %i.04, i32 1
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %end.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i = icmp eq i32 %1, 0
  br i1 %cmp.i, label %if.then.for.inc_crit_edge, label %cond.false.i

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

cond.false.i:                                     ; preds = %if.then
  %arrayidx.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %i.04
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx.i, align 8
  %sub.i = sub i32 %1, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i)
  %phi.cmp.i = icmp eq i32 %sub.i, -1
  br i1 %phi.cmp.i, label %cond.false.i.for.inc_crit_edge, label %if.end.i

cond.false.i.for.inc_crit_edge:                   ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.end.i:                                         ; preds = %cond.false.i
  %flags.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %i.04, i32 3
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.end.i.if.end55.sink.split.i_crit_edge

if.end.i.if.end55.sink.split.i_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.sink.split.i

if.else.i:                                        ; preds = %if.end.i
  %and32.i = and i32 %5, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i)
  %tobool33.not.i = icmp eq i32 %and32.i, 0
  br i1 %tobool33.not.i, label %if.else.i.if.end55.i_crit_edge, label %if.else.i.if.end55.sink.split.i_crit_edge

if.else.i.if.end55.sink.split.i_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.sink.split.i

if.else.i.if.end55.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.i

if.end55.sink.split.i:                            ; preds = %if.else.i.if.end55.sink.split.i_crit_edge, %if.end.i.if.end55.sink.split.i_crit_edge
  %iomem_resource.sink.i = phi ptr [ @ioport_resource, %if.end.i.if.end55.sink.split.i_crit_edge ], [ @iomem_resource, %if.else.i.if.end55.sink.split.i_crit_edge ]
  %add51.i = add nuw i32 %sub.i, 1
  tail call void @__release_region(ptr noundef nonnull %iomem_resource.sink.i, i32 noundef %3, i32 noundef %add51.i) #24
  br label %if.end55.i

if.end55.i:                                       ; preds = %if.end55.sink.split.i, %if.else.i.if.end55.i_crit_edge
  %6 = ptrtoint ptr %is_managed.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 5)
  %bf.load.i.i.i = load i40, ptr %is_managed.i.i.i, align 1
  %7 = and i40 %bf.load.i.i.i, 2097152
  %tobool.not.i.i = icmp eq i40 %7, 0
  br i1 %tobool.not.i.i, label %if.end55.i.for.inc_crit_edge, label %find_pci_dr.exit.i

if.end55.i.for.inc_crit_edge:                     ; preds = %if.end55.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

find_pci_dr.exit.i:                               ; preds = %if.end55.i
  %call1.i.i = tail call ptr @devres_find(ptr noundef %dev.i.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool56.not.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool56.not.i, label %find_pci_dr.exit.i.for.inc_crit_edge, label %if.then57.i

find_pci_dr.exit.i.for.inc_crit_edge:             ; preds = %find_pci_dr.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then57.i:                                      ; preds = %find_pci_dr.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  %neg.i = xor i32 %shl, -1
  %region_mask.i = getelementptr inbounds %struct.pci_devres, ptr %call1.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %region_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %region_mask.i, align 4
  %and58.i = and i32 %9, %neg.i
  store i32 %and58.i, ptr %region_mask.i, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then57.i, %find_pci_dr.exit.i.for.inc_crit_edge, %if.end55.i.for.inc_crit_edge, %cond.false.i.for.inc_crit_edge, %if.then.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.04, 1
  %exitcond.not = icmp eq i32 %inc, 6
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_request_selected_regions(ptr noundef %pdev, i32 noundef %bars, ptr noundef %res_name) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__pci_request_selected_regions(ptr noundef %pdev, i32 noundef %bars, ptr noundef %res_name, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__pci_request_selected_regions(ptr noundef %pdev, i32 noundef %bars, ptr noundef %res_name, i32 noundef %excl) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %bars, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.for.inc_crit_edge, label %if.then

entry.for.inc_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @__pci_request_region(ptr noundef %pdev, i32 noundef 0, ptr noundef %res_name, i32 noundef %excl)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.then.for.inc_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

while.body.lr.ph:                                 ; preds = %if.then.5.while.body.lr.ph_crit_edge, %if.then.4.while.body.lr.ph_crit_edge, %if.then.3.while.body.lr.ph_crit_edge, %if.then.2.while.body.lr.ph_crit_edge, %if.then.1.while.body.lr.ph_crit_edge
  %i.020.lcssa.ph = phi i32 [ 0, %if.then.1.while.body.lr.ph_crit_edge ], [ 1, %if.then.2.while.body.lr.ph_crit_edge ], [ 2, %if.then.3.while.body.lr.ph_crit_edge ], [ 3, %if.then.4.while.body.lr.ph_crit_edge ], [ 4, %if.then.5.while.body.lr.ph_crit_edge ]
  %is_managed.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  br label %while.body

for.inc:                                          ; preds = %if.then.for.inc_crit_edge, %entry.for.inc_crit_edge
  %and.1 = and i32 %bars, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.1

if.then.1:                                        ; preds = %for.inc
  %call.1 = tail call fastcc i32 @__pci_request_region(ptr noundef %pdev, i32 noundef 1, ptr noundef %res_name, i32 noundef %excl)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1)
  %tobool1.not.1 = icmp eq i32 %call.1, 0
  br i1 %tobool1.not.1, label %if.then.1.for.inc.1_crit_edge, label %if.then.1.while.body.lr.ph_crit_edge

if.then.1.while.body.lr.ph_crit_edge:             ; preds = %if.then.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.lr.ph

if.then.1.for.inc.1_crit_edge:                    ; preds = %if.then.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge
  %and.2 = and i32 %bars, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool.not.2 = icmp eq i32 %and.2, 0
  br i1 %tobool.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.2

if.then.2:                                        ; preds = %for.inc.1
  %call.2 = tail call fastcc i32 @__pci_request_region(ptr noundef %pdev, i32 noundef 2, ptr noundef %res_name, i32 noundef %excl)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.2)
  %tobool1.not.2 = icmp eq i32 %call.2, 0
  br i1 %tobool1.not.2, label %if.then.2.for.inc.2_crit_edge, label %if.then.2.while.body.lr.ph_crit_edge

if.then.2.while.body.lr.ph_crit_edge:             ; preds = %if.then.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.lr.ph

if.then.2.for.inc.2_crit_edge:                    ; preds = %if.then.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2.for.inc.2_crit_edge, %for.inc.1.for.inc.2_crit_edge
  %and.3 = and i32 %bars, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool.not.3 = icmp eq i32 %and.3, 0
  br i1 %tobool.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.3

if.then.3:                                        ; preds = %for.inc.2
  %call.3 = tail call fastcc i32 @__pci_request_region(ptr noundef %pdev, i32 noundef 3, ptr noundef %res_name, i32 noundef %excl)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.3)
  %tobool1.not.3 = icmp eq i32 %call.3, 0
  br i1 %tobool1.not.3, label %if.then.3.for.inc.3_crit_edge, label %if.then.3.while.body.lr.ph_crit_edge

if.then.3.while.body.lr.ph_crit_edge:             ; preds = %if.then.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.lr.ph

if.then.3.for.inc.3_crit_edge:                    ; preds = %if.then.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3.for.inc.3_crit_edge, %for.inc.2.for.inc.3_crit_edge
  %and.4 = and i32 %bars, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool.not.4 = icmp eq i32 %and.4, 0
  br i1 %tobool.not.4, label %for.inc.3.for.inc.4_crit_edge, label %if.then.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.4

if.then.4:                                        ; preds = %for.inc.3
  %call.4 = tail call fastcc i32 @__pci_request_region(ptr noundef %pdev, i32 noundef 4, ptr noundef %res_name, i32 noundef %excl)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.4)
  %tobool1.not.4 = icmp eq i32 %call.4, 0
  br i1 %tobool1.not.4, label %if.then.4.for.inc.4_crit_edge, label %if.then.4.while.body.lr.ph_crit_edge

if.then.4.while.body.lr.ph_crit_edge:             ; preds = %if.then.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.lr.ph

if.then.4.for.inc.4_crit_edge:                    ; preds = %if.then.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then.4.for.inc.4_crit_edge, %for.inc.3.for.inc.4_crit_edge
  %and.5 = and i32 %bars, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5)
  %tobool.not.5 = icmp eq i32 %and.5, 0
  br i1 %tobool.not.5, label %for.inc.4.cleanup_crit_edge, label %if.then.5

for.inc.4.cleanup_crit_edge:                      ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then.5:                                        ; preds = %for.inc.4
  %call.5 = tail call fastcc i32 @__pci_request_region(ptr noundef %pdev, i32 noundef 5, ptr noundef %res_name, i32 noundef %excl)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.5)
  %tobool1.not.5 = icmp eq i32 %call.5, 0
  br i1 %tobool1.not.5, label %if.then.5.cleanup_crit_edge, label %if.then.5.while.body.lr.ph_crit_edge

if.then.5.while.body.lr.ph_crit_edge:             ; preds = %if.then.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.lr.ph

if.then.5.cleanup_crit_edge:                      ; preds = %if.then.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.body:                                       ; preds = %if.end9.while.body_crit_edge, %while.body.lr.ph
  %dec24 = phi i32 [ %i.020.lcssa.ph, %while.body.lr.ph ], [ %dec, %if.end9.while.body_crit_edge ]
  %shl5 = shl nuw i32 1, %dec24
  %and6 = and i32 %shl5, %bars
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %while.body.if.end9_crit_edge, label %if.then8

while.body.if.end9_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

if.then8:                                         ; preds = %while.body
  %end.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %dec24, i32 1
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %end.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i = icmp eq i32 %1, 0
  br i1 %cmp.i, label %if.then8.if.end9_crit_edge, label %cond.false.i

if.then8.if.end9_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

cond.false.i:                                     ; preds = %if.then8
  %arrayidx.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %dec24
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx.i, align 8
  %sub.i = sub i32 %1, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i)
  %phi.cmp.i = icmp eq i32 %sub.i, -1
  br i1 %phi.cmp.i, label %cond.false.i.if.end9_crit_edge, label %if.end.i

cond.false.i.if.end9_crit_edge:                   ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

if.end.i:                                         ; preds = %cond.false.i
  %flags.i = getelementptr %struct.pci_dev, ptr %pdev, i32 0, i32 47, i32 %dec24, i32 3
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.end.i.if.end55.sink.split.i_crit_edge

if.end.i.if.end55.sink.split.i_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.sink.split.i

if.else.i:                                        ; preds = %if.end.i
  %and32.i = and i32 %5, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i)
  %tobool33.not.i = icmp eq i32 %and32.i, 0
  br i1 %tobool33.not.i, label %if.else.i.if.end55.i_crit_edge, label %if.else.i.if.end55.sink.split.i_crit_edge

if.else.i.if.end55.sink.split.i_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.sink.split.i

if.else.i.if.end55.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.i

if.end55.sink.split.i:                            ; preds = %if.else.i.if.end55.sink.split.i_crit_edge, %if.end.i.if.end55.sink.split.i_crit_edge
  %iomem_resource.sink.i = phi ptr [ @ioport_resource, %if.end.i.if.end55.sink.split.i_crit_edge ], [ @iomem_resource, %if.else.i.if.end55.sink.split.i_crit_edge ]
  %add51.i = add nuw i32 %sub.i, 1
  tail call void @__release_region(ptr noundef nonnull %iomem_resource.sink.i, i32 noundef %3, i32 noundef %add51.i) #24
  br label %if.end55.i

if.end55.i:                                       ; preds = %if.end55.sink.split.i, %if.else.i.if.end55.i_crit_edge
  %6 = ptrtoint ptr %is_managed.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 5)
  %bf.load.i.i.i = load i40, ptr %is_managed.i.i.i, align 1
  %7 = and i40 %bf.load.i.i.i, 2097152
  %tobool.not.i.i = icmp eq i40 %7, 0
  br i1 %tobool.not.i.i, label %if.end55.i.if.end9_crit_edge, label %find_pci_dr.exit.i

if.end55.i.if.end9_crit_edge:                     ; preds = %if.end55.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

find_pci_dr.exit.i:                               ; preds = %if.end55.i
  %call1.i.i = tail call ptr @devres_find(ptr noundef %dev.i.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool56.not.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool56.not.i, label %find_pci_dr.exit.i.if.end9_crit_edge, label %if.then57.i

find_pci_dr.exit.i.if.end9_crit_edge:             ; preds = %find_pci_dr.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

if.then57.i:                                      ; preds = %find_pci_dr.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  %neg.i = xor i32 %shl5, -1
  %region_mask.i = getelementptr inbounds %struct.pci_devres, ptr %call1.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %region_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %region_mask.i, align 4
  %and58.i = and i32 %9, %neg.i
  store i32 %and58.i, ptr %region_mask.i, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then57.i, %find_pci_dr.exit.i.if.end9_crit_edge, %if.end55.i.if.end9_crit_edge, %cond.false.i.if.end9_crit_edge, %if.then8.if.end9_crit_edge, %while.body.if.end9_crit_edge
  %dec = add nsw i32 %dec24, -1
  %cmp4 = icmp sgt i32 %dec24, 0
  br i1 %cmp4, label %if.end9.while.body_crit_edge, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end9.while.body_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

cleanup:                                          ; preds = %if.end9.cleanup_crit_edge, %if.then.5.cleanup_crit_edge, %for.inc.4.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -16, %if.then.cleanup_crit_edge ], [ 0, %if.then.5.cleanup_crit_edge ], [ 0, %for.inc.4.cleanup_crit_edge ], [ -16, %if.end9.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_request_selected_regions_exclusive(ptr noundef %pdev, i32 noundef %bars, ptr noundef %res_name) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__pci_request_selected_regions(ptr noundef %pdev, i32 noundef %bars, ptr noundef %res_name, i32 noundef 134217728)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_release_regions(ptr noundef %pdev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @pci_release_selected_regions(ptr noundef %pdev, i32 noundef 63)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_request_regions(ptr noundef %pdev, ptr noundef %res_name) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc i32 @__pci_request_selected_regions(ptr noundef %pdev, i32 noundef 63, ptr noundef %res_name, i32 noundef 0) #24
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_request_regions_exclusive(ptr noundef %pdev, ptr noundef %res_name) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc i32 @__pci_request_selected_regions(ptr noundef %pdev, i32 noundef 63, ptr noundef %res_name, i32 noundef 134217728) #24
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_register_io_range(ptr noundef %fwnode, i32 noundef %addr, i32 noundef %size) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = xor i32 %addr, -1
  %1 = add i32 %size, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %0)
  %.not = icmp ult i32 %1, %0
  br i1 %.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 2848, i32 noundef 36) #30
  %tobool1.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %fwnode4 = getelementptr inbounds %struct.logic_pio_hwaddr, ptr %call7.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %fwnode4 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %fwnode, ptr %fwnode4, align 8
  %size5 = getelementptr inbounds %struct.logic_pio_hwaddr, ptr %call7.i.i, i32 0, i32 4
  %4 = ptrtoint ptr %size5 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %size, ptr %size5, align 4
  %hw_start = getelementptr inbounds %struct.logic_pio_hwaddr, ptr %call7.i.i, i32 0, i32 2
  %5 = ptrtoint ptr %hw_start to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %addr, ptr %hw_start, align 4
  %flags = getelementptr inbounds %struct.logic_pio_hwaddr, ptr %call7.i.i, i32 0, i32 5
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1, ptr %flags, align 8
  %call6 = tail call i32 @logic_pio_register_range(ptr noundef nonnull %call7.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end3.if.end9_crit_edge, label %if.then8

if.end3.if.end9_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

if.then8:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #24
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end3.if.end9_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call6)
  %cmp10 = icmp eq i32 %call6, -17
  %spec.store.select = select i1 %cmp10, i32 0, i32 %call6
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %spec.store.select, %if.end9 ], [ -22, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @logic_pio_register_range(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_pio_to_address(i32 noundef %pio) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048574, i32 %pio)
  %cmp = icmp ugt i32 %pio, 1048574
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %call = tail call i32 @logic_pio_to_hwaddr(i32 noundef %pio) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @logic_pio_to_hwaddr(i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @pci_address_to_pio(i32 noundef %address) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @logic_pio_trans_cpuaddr(i32 noundef %address) #24
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @logic_pio_trans_cpuaddr(i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_unmap_iospace(ptr nocapture noundef readonly %res) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %res, align 4
  %add = add i32 %1, -18874368
  %end.i = getelementptr inbounds %struct.resource, ptr %res, i32 0, i32 1
  %2 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %end.i, align 4
  %add1 = add i32 %3, -18874367
  tail call void @vunmap_range(i32 noundef %add, i32 noundef %add1) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vunmap_range(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @devm_pci_remap_iospace(ptr noundef %dev, ptr noundef %res, i32 noundef %phys_addr) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_pci_unmap_iospace, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.47) #24
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @pci_remap_iospace(ptr noundef %res, i32 noundef %phys_addr) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @devres_free(ptr noundef nonnull %call) #24
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %0 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %res, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #24
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ 0, %if.else ], [ %call1, %if.then3 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @__devres_alloc_node(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_pci_unmap_iospace(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %ptr) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ptr, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  %add.i = add i32 %3, -18874368
  %end.i.i = getelementptr inbounds %struct.resource, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %end.i.i, align 4
  %add1.i = add i32 %5, -18874367
  tail call void @vunmap_range(i32 noundef %add.i, i32 noundef %add1.i) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_remap_iospace(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @devres_free(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @devres_add(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @devm_pci_remap_cfgspace(ptr noundef %dev, i32 noundef %offset, i32 noundef %size) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_ioremap_release, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.48) #24
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @pci_remap_cfgspace(i32 noundef %offset, i32 noundef %size) #24
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %0 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call1, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #24
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @devres_free(ptr noundef nonnull %call) #24
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %if.else ], [ %call1, %if.then3 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @devm_ioremap_release(ptr noundef, ptr noundef) #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_remap_cfgspace(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @devm_pci_remap_cfg_resource(ptr noundef %dev, ptr noundef %res) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %do.body4, label %do.end9, !prof !740

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/pci/pci.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4304, 0\0A.popsection", ""() #24, !srcloc !745
  unreachable

do.end9:                                          ; preds = %entry
  %tobool10.not = icmp eq ptr %res, null
  br i1 %tobool10.not, label %do.end9.do.end14_crit_edge, label %lor.lhs.false

do.end9.do.end14_crit_edge:                       ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end14

lor.lhs.false:                                    ; preds = %do.end9
  %flags.i = getelementptr inbounds %struct.resource, ptr %res, i32 0, i32 3
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 7936
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %and.i)
  %cmp.not = icmp eq i32 %and.i, 512
  br i1 %cmp.not, label %if.end16, label %lor.lhs.false.do.end14_crit_edge

lor.lhs.false.do.end14_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end14

do.end14:                                         ; preds = %lor.lhs.false.do.end14_crit_edge, %do.end9.do.end14_crit_edge
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef nonnull %dev, ptr noundef nonnull @.str.49) #28
  br label %cleanup

if.end16:                                         ; preds = %lor.lhs.false
  %end.i = getelementptr inbounds %struct.resource, ptr %res, i32 0, i32 1
  %2 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %end.i, align 4
  %4 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %res, align 4
  %sub.i = add i32 %3, 1
  %add.i = sub i32 %sub.i, %5
  %name18 = getelementptr inbounds %struct.resource, ptr %res, i32 0, i32 2
  %6 = ptrtoint ptr %name18 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %name18, align 4
  %tobool19.not = icmp eq ptr %7, null
  %init_name.i74 = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %8 = ptrtoint ptr %init_name.i74 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %init_name.i74, align 8
  %tobool.not.i75 = icmp eq ptr %9, null
  br i1 %tobool19.not, label %if.else, label %if.then20

if.then20:                                        ; preds = %if.end16
  br i1 %tobool.not.i75, label %if.end.i, label %if.then20.dev_name.exit_crit_edge

if.then20.dev_name.exit_crit_edge:                ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #26
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #26
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then20.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %11, %if.end.i ], [ %9, %if.then20.dev_name.exit_crit_edge ]
  %call23 = tail call noalias ptr (ptr, i32, ptr, ...) @devm_kasprintf(ptr noundef nonnull %dev, i32 noundef 3264, ptr noundef nonnull @.str.51, ptr noundef %retval.0.i, ptr noundef nonnull %7) #24
  br label %if.end26

if.else:                                          ; preds = %if.end16
  br i1 %tobool.not.i75, label %if.end.i76, label %if.else.dev_name.exit78_crit_edge

if.else.dev_name.exit78_crit_edge:                ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %dev_name.exit78

if.end.i76:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  %12 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev, align 4
  br label %dev_name.exit78

dev_name.exit78:                                  ; preds = %if.end.i76, %if.else.dev_name.exit78_crit_edge
  %retval.0.i77 = phi ptr [ %13, %if.end.i76 ], [ %9, %if.else.dev_name.exit78_crit_edge ]
  %call25 = tail call noalias ptr @devm_kstrdup(ptr noundef nonnull %dev, ptr noundef %retval.0.i77, i32 noundef 3264) #24
  br label %if.end26

if.end26:                                         ; preds = %dev_name.exit78, %dev_name.exit
  %name.0 = phi ptr [ %call23, %dev_name.exit ], [ %call25, %dev_name.exit78 ]
  %tobool27.not = icmp eq ptr %name.0, null
  br i1 %tobool27.not, label %if.end26.cleanup_crit_edge, label %if.end30

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end30:                                         ; preds = %if.end26
  %14 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %res, align 4
  %call31 = tail call ptr @__devm_request_region(ptr noundef nonnull %dev, ptr noundef nonnull @iomem_resource, i32 noundef %15, i32 noundef %add.i, ptr noundef nonnull %name.0) #24
  %tobool32.not = icmp eq ptr %call31, null
  br i1 %tobool32.not, label %do.end36, label %if.end38

do.end36:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #26
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef nonnull %dev, ptr noundef nonnull @.str.53, ptr noundef nonnull %res) #28
  br label %cleanup

if.end38:                                         ; preds = %if.end30
  %16 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %res, align 4
  %call.i = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_ioremap_release, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.48) #24
  %tobool.not.i79 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i79, label %if.end38.do.end45_crit_edge, label %if.end.i80

if.end38.do.end45_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end45

if.end.i80:                                       ; preds = %if.end38
  %call1.i = tail call ptr @pci_remap_cfgspace(i32 noundef %17, i32 noundef %add.i) #24
  %tobool2.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool2.not.i, label %if.else.i, label %devm_pci_remap_cfgspace.exit

if.else.i:                                        ; preds = %if.end.i80
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @devres_free(ptr noundef nonnull %call.i) #24
  br label %do.end45

devm_pci_remap_cfgspace.exit:                     ; preds = %if.end.i80
  call void @__sanitizer_cov_trace_pc() #26
  %18 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call1.i, ptr %call.i, align 4
  tail call void @devres_add(ptr noundef nonnull %dev, ptr noundef nonnull %call.i) #24
  br label %cleanup

do.end45:                                         ; preds = %if.else.i, %if.end38.do.end45_crit_edge
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef nonnull %dev, ptr noundef nonnull @.str.56, ptr noundef nonnull %res) #28
  %19 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %res, align 4
  tail call void @__devm_release_region(ptr noundef nonnull %dev, ptr noundef nonnull @iomem_resource, i32 noundef %20, i32 noundef %add.i) #24
  br label %cleanup

cleanup:                                          ; preds = %do.end45, %devm_pci_remap_cfgspace.exit, %do.end36, %if.end26.cleanup_crit_edge, %do.end14
  %retval.0 = phi ptr [ inttoptr (i32 -22 to ptr), %do.end14 ], [ inttoptr (i32 -16 to ptr), %do.end36 ], [ %call1.i, %devm_pci_remap_cfgspace.exit ], [ inttoptr (i32 -12 to ptr), %do.end45 ], [ inttoptr (i32 -12 to ptr), %if.end26.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kasprintf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kstrdup(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__devm_request_region(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @__devm_release_region(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define weak dso_local ptr @pcibios_setup(ptr noundef %str) local_unnamed_addr #14 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret ptr %str
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @pcibios_set_master(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %lat = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %lat) #24
  %0 = ptrtoint ptr %lat to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %lat, align 1, !annotation !731
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %1 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.i.not = icmp eq i8 %2, 0
  br i1 %tobool.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 13, ptr noundef nonnull %lat) #24
  %3 = ptrtoint ptr %lat to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %lat, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %4)
  %cmp = icmp ult i8 %4, 16
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %5 = load i32, ptr @pcibios_max_latency, align 4
  %6 = call i32 @llvm.umin.i32(i32 %5, i32 64)
  br label %if.end14

if.else:                                          ; preds = %if.end
  %conv = zext i8 %4 to i32
  %7 = load i32, ptr @pcibios_max_latency, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %conv)
  %cmp8 = icmp ult i32 %7, %conv
  br i1 %cmp8, label %if.else.if.end14_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.else.if.end14_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

if.end14:                                         ; preds = %if.else.if.end14_crit_edge, %if.then3
  %storemerge.in = phi i32 [ %6, %if.then3 ], [ %7, %if.else.if.end14_crit_edge ]
  %storemerge = trunc i32 %storemerge.in to i8
  %8 = ptrtoint ptr %lat to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %storemerge, ptr %lat, align 1
  %call15 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 13, i8 noundef zeroext %storemerge) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.else.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %lat) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_byte(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_config_byte(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_set_master(ptr noundef %dev) #5 align 64 {
entry:
  %old_cmd.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %old_cmd.i) #24
  %0 = ptrtoint ptr %old_cmd.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %old_cmd.i, align 2, !annotation !731
  %call.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %old_cmd.i) #24
  %1 = ptrtoint ptr %old_cmd.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %old_cmd.i, align 2
  %cmd.0.i = or i16 %2, 4
  call void @__sanitizer_cov_trace_cmp2(i16 %cmd.0.i, i16 %2)
  %cmp.not.i = icmp eq i16 %cmd.0.i, %2
  br i1 %cmp.not.i, label %entry.__pci_set_master.exit_crit_edge, label %do.body.i

entry.__pci_set_master.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_set_master.exit

do.body.i:                                        ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__pci_set_master.__UNIQUE_ID_ddebug241, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_set_master, %do.end.i)) #24
          to label %if.then14.i [label %do.end.i], !srcloc !733

if.then14.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev15.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__pci_set_master.__UNIQUE_ID_ddebug241, ptr noundef %dev15.i, ptr noundef nonnull @.str.155, ptr noundef nonnull @.str.156) #24
  br label %do.end.i

do.end.i:                                         ; preds = %if.then14.i, %do.body.i
  %call19.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %cmd.0.i) #24
  br label %__pci_set_master.exit

__pci_set_master.exit:                            ; preds = %do.end.i, %entry.__pci_set_master.exit_crit_edge
  %is_busmaster.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %3 = ptrtoint ptr %is_busmaster.i to i32
  call void @__asan_loadN_noabort(i32 %3, i32 5)
  %bf.load.i = load i40, ptr %is_busmaster.i, align 1
  %bf.set.i = or i40 %bf.load.i, 17179869184
  store i40 %bf.set.i, ptr %is_busmaster.i, align 1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %old_cmd.i) #24
  call void @pcibios_set_master(ptr noundef %dev)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_clear_master(ptr noundef %dev) #5 align 64 {
entry:
  %old_cmd.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %old_cmd.i) #24
  %0 = ptrtoint ptr %old_cmd.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %old_cmd.i, align 2, !annotation !731
  %call.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %old_cmd.i) #24
  %1 = ptrtoint ptr %old_cmd.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %old_cmd.i, align 2
  %3 = and i16 %2, -5
  call void @__sanitizer_cov_trace_cmp2(i16 %3, i16 %2)
  %cmp.not.i = icmp eq i16 %3, %2
  br i1 %cmp.not.i, label %entry.__pci_set_master.exit_crit_edge, label %do.body.i

entry.__pci_set_master.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %__pci_set_master.exit

do.body.i:                                        ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__pci_set_master.__UNIQUE_ID_ddebug241, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_clear_master, %do.end.i)) #24
          to label %if.then14.i [label %do.end.i], !srcloc !733

if.then14.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev15.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__pci_set_master.__UNIQUE_ID_ddebug241, ptr noundef %dev15.i, ptr noundef nonnull @.str.155, ptr noundef nonnull @.str.157) #24
  br label %do.end.i

do.end.i:                                         ; preds = %if.then14.i, %do.body.i
  %call19.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %3) #24
  br label %__pci_set_master.exit

__pci_set_master.exit:                            ; preds = %do.end.i, %entry.__pci_set_master.exit_crit_edge
  %is_busmaster.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %4 = ptrtoint ptr %is_busmaster.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 5)
  %bf.load.i = load i40, ptr %is_busmaster.i, align 1
  %bf.clear.i = and i40 %bf.load.i, -17179869185
  store i40 %bf.clear.i, ptr %is_busmaster.i, align 1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %old_cmd.i) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_set_cacheline_size(ptr noundef %dev) #5 align 64 {
entry:
  %cacheline_size = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %cacheline_size) #24
  %0 = ptrtoint ptr %cacheline_size to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %cacheline_size, align 1, !annotation !731
  %1 = load i8, ptr @pci_cache_line_size, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 12, ptr noundef nonnull %cacheline_size) #24
  %2 = ptrtoint ptr %cacheline_size to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %cacheline_size, align 1
  %4 = load i8, ptr @pci_cache_line_size, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %3, i8 %4)
  %cmp.not = icmp ult i8 %3, %4
  br i1 %cmp.not, label %if.end.if.end8_crit_edge, label %land.lhs.true

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %5 = urem i8 %3, %4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp5 = icmp eq i8 %5, 0
  br i1 %cmp5, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end8_crit_edge

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end8

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end8:                                          ; preds = %land.lhs.true.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %call9 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 12, i8 noundef zeroext %4) #24
  %call10 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 12, ptr noundef nonnull %cacheline_size) #24
  %6 = ptrtoint ptr %cacheline_size to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %cacheline_size, align 1
  %8 = load i8, ptr @pci_cache_line_size, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %7, i8 %8)
  %cmp13 = icmp eq i8 %7, %8
  br i1 %cmp13, label %if.end8.cleanup_crit_edge, label %do.body

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

do.body:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #26
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_set_cacheline_size.__UNIQUE_ID_ddebug242, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_set_cacheline_size, %cleanup)) #24
          to label %if.then22 [label %cleanup], !srcloc !733

if.then22:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #26
  %dev23 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %9 = load i8, ptr @pci_cache_line_size, align 1
  %conv24 = zext i8 %9 to i32
  %shl = shl nuw nsw i32 %conv24, 2
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_set_cacheline_size.__UNIQUE_ID_ddebug242, ptr noundef %dev23, ptr noundef nonnull @.str.59, i32 noundef %shl) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then22, %do.body, %if.end8.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.end8.cleanup_crit_edge ], [ -22, %if.then22 ], [ -22, %do.body ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %cacheline_size) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_set_mwi(ptr noundef %dev) #5 align 64 {
entry:
  %cmd = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd) #24
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cmd, align 2, !annotation !731
  %call = tail call i32 @pci_set_cacheline_size(ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %cmd) #24
  %1 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %cmd, align 2
  %3 = and i16 %2, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool2.not = icmp eq i16 %3, 0
  br i1 %tobool2.not, label %do.body, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

do.body:                                          ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_set_mwi.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_set_mwi, %do.end)) #24
          to label %if.then9 [label %do.end], !srcloc !733

if.then9:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #26
  %dev10 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_set_mwi.__UNIQUE_ID_ddebug243, ptr noundef %dev10, ptr noundef nonnull @.str.61) #24
  br label %do.end

do.end:                                           ; preds = %if.then9, %do.body
  %4 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %cmd, align 2
  %6 = or i16 %5, 16
  store i16 %6, ptr %cmd, align 2
  %call14 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %6) #24
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd) #24
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcim_set_mwi(ptr noundef %dev) #5 align 64 {
entry:
  %cmd.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %is_managed.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %is_managed.i.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load.i.i = load i40, ptr %is_managed.i.i, align 1
  %1 = and i40 %bf.load.i.i, 2097152
  %tobool.not.i = icmp eq i40 %1, 0
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %find_pci_dr.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

find_pci_dr.exit:                                 ; preds = %entry
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %call1.i = tail call ptr @devres_find(ptr noundef %dev.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool.not = icmp eq ptr %call1.i, null
  br i1 %tobool.not, label %find_pci_dr.exit.cleanup_crit_edge, label %if.end

find_pci_dr.exit.cleanup_crit_edge:               ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %find_pci_dr.exit
  %2 = ptrtoint ptr %call1.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %call1.i, align 4
  %bf.set = or i8 %bf.load, 8
  store i8 %bf.set, ptr %call1.i, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd.i) #24
  %3 = ptrtoint ptr %cmd.i to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %cmd.i, align 2, !annotation !731
  %call.i = tail call i32 @pci_set_cacheline_size(ptr noundef %dev) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i4 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i4, label %if.end.i, label %if.end.pci_set_mwi.exit_crit_edge

if.end.pci_set_mwi.exit_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_mwi.exit

if.end.i:                                         ; preds = %if.end
  %call1.i5 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %cmd.i) #24
  %4 = ptrtoint ptr %cmd.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %cmd.i, align 2
  %6 = and i16 %5, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %tobool2.not.i = icmp eq i16 %6, 0
  br i1 %tobool2.not.i, label %do.body.i, label %if.end.i.pci_set_mwi.exit_crit_edge

if.end.i.pci_set_mwi.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_mwi.exit

do.body.i:                                        ; preds = %if.end.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_set_mwi.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pcim_set_mwi, %do.end.i)) #24
          to label %if.then9.i [label %do.end.i], !srcloc !733

if.then9.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_set_mwi.__UNIQUE_ID_ddebug243, ptr noundef %dev.i, ptr noundef nonnull @.str.61) #24
  br label %do.end.i

do.end.i:                                         ; preds = %if.then9.i, %do.body.i
  %7 = ptrtoint ptr %cmd.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %cmd.i, align 2
  %9 = or i16 %8, 16
  store i16 %9, ptr %cmd.i, align 2
  %call14.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %9) #24
  br label %pci_set_mwi.exit

pci_set_mwi.exit:                                 ; preds = %do.end.i, %if.end.i.pci_set_mwi.exit_crit_edge, %if.end.pci_set_mwi.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd.i) #24
  br label %cleanup

cleanup:                                          ; preds = %pci_set_mwi.exit, %find_pci_dr.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %pci_set_mwi.exit ], [ -12, %find_pci_dr.exit.cleanup_crit_edge ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_try_set_mwi(ptr noundef %dev) #5 align 64 {
entry:
  %cmd.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd.i) #24
  %0 = ptrtoint ptr %cmd.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cmd.i, align 2, !annotation !731
  %call.i = tail call i32 @pci_set_cacheline_size(ptr noundef %dev) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.pci_set_mwi.exit_crit_edge

entry.pci_set_mwi.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_mwi.exit

if.end.i:                                         ; preds = %entry
  %call1.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %cmd.i) #24
  %1 = ptrtoint ptr %cmd.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %cmd.i, align 2
  %3 = and i16 %2, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool2.not.i = icmp eq i16 %3, 0
  br i1 %tobool2.not.i, label %do.body.i, label %if.end.i.pci_set_mwi.exit_crit_edge

if.end.i.pci_set_mwi.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_mwi.exit

do.body.i:                                        ; preds = %if.end.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_set_mwi.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_try_set_mwi, %do.end.i)) #24
          to label %if.then9.i [label %do.end.i], !srcloc !733

if.then9.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev10.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_set_mwi.__UNIQUE_ID_ddebug243, ptr noundef %dev10.i, ptr noundef nonnull @.str.61) #24
  br label %do.end.i

do.end.i:                                         ; preds = %if.then9.i, %do.body.i
  %4 = ptrtoint ptr %cmd.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %cmd.i, align 2
  %6 = or i16 %5, 16
  store i16 %6, ptr %cmd.i, align 2
  %call14.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %6) #24
  br label %pci_set_mwi.exit

pci_set_mwi.exit:                                 ; preds = %do.end.i, %if.end.i.pci_set_mwi.exit_crit_edge, %entry.pci_set_mwi.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd.i) #24
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_clear_mwi(ptr noundef %dev) #5 align 64 {
entry:
  %cmd = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd) #24
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cmd, align 2, !annotation !731
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %cmd) #24
  %1 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %cmd, align 2
  %3 = and i16 %2, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %and2 = and i16 %2, -17
  %4 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %and2, ptr %cmd, align 2
  %call4 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %and2) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_disable_parity(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %cmd = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd) #24
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cmd, align 2, !annotation !731
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %cmd) #24
  %1 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %cmd, align 2
  %3 = and i16 %2, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %and2 = and i16 %2, -65
  %4 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %and2, ptr %cmd, align 2
  %call4 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %and2) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_intx(ptr noundef %pdev, i32 noundef %enable) #5 align 64 {
entry:
  %pci_command = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pci_command) #24
  %0 = ptrtoint ptr %pci_command to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %pci_command, align 2, !annotation !731
  %call = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef 4, ptr noundef nonnull %pci_command) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %enable)
  %tobool.not = icmp eq i32 %enable, 0
  %1 = ptrtoint ptr %pci_command to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %pci_command, align 2
  %3 = and i16 %2, -1025
  %masksel = select i1 %tobool.not, i16 1024, i16 0
  %new.0 = or i16 %3, %masksel
  call void @__sanitizer_cov_trace_cmp2(i16 %new.0, i16 %2)
  %cmp.not = icmp eq i16 %new.0, %2
  br i1 %cmp.not, label %entry.if.end20_crit_edge, label %if.then7

entry.if.end20_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20

if.then7:                                         ; preds = %entry
  %call8 = call i32 @pci_write_config_word(ptr noundef %pdev, i32 noundef 4, i16 noundef zeroext %new.0) #24
  %is_managed.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %4 = ptrtoint ptr %is_managed.i.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 5)
  %bf.load.i.i = load i40, ptr %is_managed.i.i, align 1
  %5 = and i40 %bf.load.i.i, 2097152
  %tobool.not.i = icmp eq i40 %5, 0
  br i1 %tobool.not.i, label %if.then7.if.end20_crit_edge, label %find_pci_dr.exit

if.then7.if.end20_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20

find_pci_dr.exit:                                 ; preds = %if.then7
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %call1.i = call ptr @devres_find(ptr noundef %dev.i, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool10.not = icmp eq ptr %call1.i, null
  br i1 %tobool10.not, label %find_pci_dr.exit.if.end20_crit_edge, label %land.lhs.true

find_pci_dr.exit.if.end20_crit_edge:              ; preds = %find_pci_dr.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20

land.lhs.true:                                    ; preds = %find_pci_dr.exit
  %6 = ptrtoint ptr %call1.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load = load i8, ptr %call1.i, align 4
  %7 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool11.not = icmp eq i8 %7, 0
  br i1 %tobool11.not, label %if.then12, label %land.lhs.true.if.end20_crit_edge

land.lhs.true.if.end20_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end20

if.then12:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  %bf.set = and i8 %bf.load, -49
  %bf.clear17 = select i1 %tobool.not, i8 48, i8 16
  %bf.set18 = or i8 %bf.set, %bf.clear17
  %8 = ptrtoint ptr %call1.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %bf.set18, ptr %call1.i, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then12, %land.lhs.true.if.end20_crit_edge, %find_pci_dr.exit.if.end20_crit_edge, %if.then7.if.end20_crit_edge, %entry.if.end20_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pci_command) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pci_check_and_mask_intx(ptr nocapture noundef readonly %dev) #5 align 64 {
entry:
  %cmd_status_dword.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cmd_status_dword.i) #24
  %2 = ptrtoint ptr %cmd_status_dword.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %cmd_status_dword.i, align 4, !annotation !731
  %call.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @pci_lock) #24
  %ops.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 9
  %3 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops.i, align 8
  %read.i = getelementptr inbounds %struct.pci_ops, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %read.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %read.i, align 4
  %devfn.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %7 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %devfn.i, align 4
  %call8.i = call i32 %6(ptr noundef %1, i32 noundef %8, i32 noundef 4, i32 noundef 4, ptr noundef nonnull %cmd_status_dword.i) #24
  %9 = ptrtoint ptr %cmd_status_dword.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cmd_status_dword.i, align 4
  %11 = and i32 %10, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %if.end.i, label %entry.pci_check_and_set_intx_mask.exit_crit_edge

entry.pci_check_and_set_intx_mask.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_check_and_set_intx_mask.exit

if.end.i:                                         ; preds = %entry
  %conv17.i = and i32 %10, 65535
  %conv23.i = and i32 %10, 64511
  %conv25.i = or i32 %conv23.i, 1024
  call void @__sanitizer_cov_trace_cmp4(i32 %conv17.i, i32 %conv25.i)
  %cmp27.not.i = icmp eq i32 %conv17.i, %conv25.i
  br i1 %cmp27.not.i, label %if.end.i.pci_check_and_set_intx_mask.exit_crit_edge, label %if.then29.i

if.end.i.pci_check_and_set_intx_mask.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_check_and_set_intx_mask.exit

if.then29.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  %13 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops.i, align 8
  %write.i = getelementptr inbounds %struct.pci_ops, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %write.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %write.i, align 4
  %17 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %devfn.i, align 4
  %call33.i = call i32 %16(ptr noundef %1, i32 noundef %18, i32 noundef 4, i32 noundef 2, i32 noundef %conv25.i) #24
  br label %pci_check_and_set_intx_mask.exit

pci_check_and_set_intx_mask.exit:                 ; preds = %if.then29.i, %if.end.i.pci_check_and_set_intx_mask.exit_crit_edge, %entry.pci_check_and_set_intx_mask.exit_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @pci_lock, i32 noundef %call.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cmd_status_dword.i) #24
  ret i1 %12
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pci_check_and_unmask_intx(ptr nocapture noundef readonly %dev) #5 align 64 {
entry:
  %cmd_status_dword.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus1.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cmd_status_dword.i) #24
  %2 = ptrtoint ptr %cmd_status_dword.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %cmd_status_dword.i, align 4, !annotation !731
  %call.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @pci_lock) #24
  %ops.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 9
  %3 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops.i, align 8
  %read.i = getelementptr inbounds %struct.pci_ops, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %read.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %read.i, align 4
  %devfn.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %7 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %devfn.i, align 4
  %call8.i = call i32 %6(ptr noundef %1, i32 noundef %8, i32 noundef 4, i32 noundef 4, ptr noundef nonnull %cmd_status_dword.i) #24
  %9 = ptrtoint ptr %cmd_status_dword.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cmd_status_dword.i, align 4
  %11 = and i32 %10, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %if.end.i, label %entry.pci_check_and_set_intx_mask.exit_crit_edge

entry.pci_check_and_set_intx_mask.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_check_and_set_intx_mask.exit

if.end.i:                                         ; preds = %entry
  %conv17.i = and i32 %10, 65535
  %conv19.i = and i32 %10, 64511
  call void @__sanitizer_cov_trace_cmp4(i32 %conv17.i, i32 %conv19.i)
  %cmp27.not.i = icmp eq i32 %conv17.i, %conv19.i
  br i1 %cmp27.not.i, label %if.end.i.pci_check_and_set_intx_mask.exit_crit_edge, label %if.then29.i

if.end.i.pci_check_and_set_intx_mask.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_check_and_set_intx_mask.exit

if.then29.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  %13 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops.i, align 8
  %write.i = getelementptr inbounds %struct.pci_ops, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %write.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %write.i, align 4
  %17 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %devfn.i, align 4
  %call33.i = call i32 %16(ptr noundef %1, i32 noundef %18, i32 noundef 4, i32 noundef 2, i32 noundef %conv19.i) #24
  br label %pci_check_and_set_intx_mask.exit

pci_check_and_set_intx_mask.exit:                 ; preds = %if.then29.i, %if.end.i.pci_check_and_set_intx_mask.exit_crit_edge, %entry.pci_check_and_set_intx_mask.exit_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @pci_lock, i32 noundef %call.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cmd_status_dword.i) #24
  ret i1 %12
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_wait_for_pending_transaction(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not = icmp eq i8 %1, 0
  br i1 %tobool.i.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %conv.i = zext i8 %1 to i32
  %add = add nuw nsw i32 %conv.i, 10
  %call2 = tail call i32 @pci_wait_for_pending(ptr noundef %dev, i32 noundef %add, i16 noundef zeroext 32)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ 1, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_flr(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not.i = icmp eq i8 %1, 0
  br i1 %tobool.i.not.i, label %entry.if.end_crit_edge, label %pci_wait_for_pending_transaction.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

pci_wait_for_pending_transaction.exit:            ; preds = %entry
  %conv.i.i = zext i8 %1 to i32
  %add.i = add nuw nsw i32 %conv.i.i, 10
  %call2.i = tail call i32 @pci_wait_for_pending(ptr noundef %dev, i32 noundef %add.i, i16 noundef zeroext 32) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not = icmp eq i32 %call2.i, 0
  br i1 %tobool.not, label %do.end, label %pci_wait_for_pending_transaction.exit.if.end_crit_edge

pci_wait_for_pending_transaction.exit.if.end_crit_edge: ; preds = %pci_wait_for_pending_transaction.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

do.end:                                           ; preds = %pci_wait_for_pending_transaction.exit
  call void @__sanitizer_cov_trace_pc() #26
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev1, ptr noundef nonnull @.str.62) #28
  br label %if.end

if.end:                                           ; preds = %do.end, %pci_wait_for_pending_transaction.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %call.i = tail call i32 @pcie_capability_clear_and_set_word(ptr noundef %dev, i32 noundef 8, i16 noundef zeroext 0, i16 noundef zeroext -32768) #24
  %imm_ready = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 31
  %2 = ptrtoint ptr %imm_ready to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %imm_ready, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool3.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool3.not, label %if.end5, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @msleep(i32 noundef 100) #24
  %call6 = tail call fastcc i32 @pci_dev_wait(ptr noundef %dev, ptr noundef nonnull @.str.64)
  br label %return

return:                                           ; preds = %if.end5, %if.end.return_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end5 ], [ 0, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_dev_wait(ptr noundef %dev, ptr noundef %reset_type) unnamed_addr #5 align 64 {
entry:
  %id = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %id) #24
  %0 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %id, align 4, !annotation !731
  %call = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %id) #24
  %1 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %2)
  %cmp2 = icmp eq i32 %2, -1
  br i1 %cmp2, label %while.body.lr.ph, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.body.lr.ph:                                 ; preds = %entry
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  br label %while.body

while.body:                                       ; preds = %if.end10.while.body_crit_edge, %while.body.lr.ph
  %delay.03 = phi i32 [ 1, %while.body.lr.ph ], [ %mul, %if.end10.while.body_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 60000, i32 %delay.03)
  %cmp1 = icmp sgt i32 %delay.03, 60000
  br i1 %cmp1, label %do.end, label %if.end

do.end:                                           ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  %sub = add nsw i32 %delay.03, -1
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev8, ptr noundef nonnull @.str.158, i32 noundef %sub, ptr noundef %reset_type) #28
  br label %cleanup

if.end:                                           ; preds = %while.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %delay.03)
  %cmp3 = icmp sgt i32 %delay.03, 1000
  br i1 %cmp3, label %do.end7, label %if.end.if.end10_crit_edge

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end10

do.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %sub9 = add nsw i32 %delay.03, -1
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev8, ptr noundef nonnull @.str.161, i32 noundef %sub9, ptr noundef %reset_type) #28
  br label %if.end10

if.end10:                                         ; preds = %do.end7, %if.end.if.end10_crit_edge
  call void @msleep(i32 noundef %delay.03) #24
  %mul = shl i32 %delay.03, 1
  %call11 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %id) #24
  %3 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %id, align 4
  %cmp = icmp eq i32 %4, -1
  br i1 %cmp, label %if.end10.while.body_crit_edge, label %while.end

if.end10.while.body_crit_edge:                    ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

while.end:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %mul)
  %cmp12 = icmp sgt i32 %mul, 1000
  br i1 %cmp12, label %do.end16, label %while.end.cleanup_crit_edge

while.end.cleanup_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

do.end16:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #26
  %dev17 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %sub18 = add nsw i32 %mul, -1
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev17, ptr noundef nonnull @.str.164, i32 noundef %sub18, ptr noundef %reset_type) #28
  br label %cleanup

cleanup:                                          ; preds = %do.end16, %while.end.cleanup_crit_edge, %do.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -25, %do.end ], [ 0, %do.end16 ], [ 0, %while.end.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %id) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_reset_flr(ptr noundef %dev, i1 noundef zeroext %probe) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dev_flags, align 2
  %2 = and i16 %1, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool.not = icmp eq i16 %2, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %entry
  %devcap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 18
  %3 = ptrtoint ptr %devcap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %devcap, align 4
  %and1 = and i32 %4, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  %brmerge = or i1 %tobool2.not, %probe
  %.mux = select i1 %tobool2.not, i32 -25, i32 0
  br i1 %brmerge, label %if.end.return_crit_edge, label %if.end7

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end7:                                          ; preds = %if.end
  %pcie_cap.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %5 = ptrtoint ptr %pcie_cap.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %pcie_cap.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.i.not.i.i = icmp eq i8 %6, 0
  br i1 %tobool.i.not.i.i, label %if.end7.if.end.i_crit_edge, label %pci_wait_for_pending_transaction.exit.i

if.end7.if.end.i_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

pci_wait_for_pending_transaction.exit.i:          ; preds = %if.end7
  %conv.i.i.i = zext i8 %6 to i32
  %add.i.i = add nuw nsw i32 %conv.i.i.i, 10
  %call2.i.i = tail call i32 @pci_wait_for_pending(ptr noundef %dev, i32 noundef %add.i.i, i16 noundef zeroext 32) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool.not.i, label %do.end.i, label %pci_wait_for_pending_transaction.exit.i.if.end.i_crit_edge

pci_wait_for_pending_transaction.exit.i.if.end.i_crit_edge: ; preds = %pci_wait_for_pending_transaction.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

do.end.i:                                         ; preds = %pci_wait_for_pending_transaction.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev1.i, ptr noundef nonnull @.str.62) #28
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %pci_wait_for_pending_transaction.exit.i.if.end.i_crit_edge, %if.end7.if.end.i_crit_edge
  %call.i.i = tail call i32 @pcie_capability_clear_and_set_word(ptr noundef %dev, i32 noundef 8, i16 noundef zeroext 0, i16 noundef zeroext -32768) #24
  %imm_ready.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 31
  %7 = ptrtoint ptr %imm_ready.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load.i = load i8, ptr %imm_ready.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool3.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool3.not.i, label %if.end5.i, label %if.end.i.return_crit_edge

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end5.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @msleep(i32 noundef 100) #24
  %call6.i = tail call fastcc i32 @pci_dev_wait(ptr noundef %dev, ptr noundef nonnull @.str.64) #24
  br label %return

return:                                           ; preds = %if.end5.i, %if.end.i.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -25, %entry.return_crit_edge ], [ %.mux, %if.end.return_crit_edge ], [ %call6.i, %if.end5.i ], [ 0, %if.end.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pcie_wait_for_link(ptr noundef %pdev, i1 noundef zeroext %active) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @pcie_wait_for_link_delay(ptr noundef %pdev, i1 noundef zeroext %active, i32 noundef 100)
  ret i1 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @pcie_wait_for_link_delay(ptr noundef %pdev, i1 noundef zeroext %active, i32 noundef %delay) unnamed_addr #5 align 64 {
entry:
  %lnk_status = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %lnk_status) #24
  %0 = ptrtoint ptr %lnk_status to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %lnk_status, align 2, !annotation !731
  %link_active_reporting = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %1 = ptrtoint ptr %link_active_reporting to i32
  call void @__asan_loadN_noabort(i32 %1, i32 5)
  %bf.load = load i40, ptr %link_active_reporting, align 1
  %2 = and i40 %bf.load, 32
  %tobool.not = icmp eq i40 %2, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %add = add i32 %delay, 1000
  tail call void @msleep(i32 noundef %add) #24
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %active, label %if.then2, label %if.end.if.end3_crit_edge

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @msleep(i32 noundef 20) #24
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end.if.end3_crit_edge
  %call41 = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 18, ptr noundef nonnull %lnk_status) #24
  %3 = ptrtoint ptr %lnk_status to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %lnk_status, align 2
  %5 = and i16 %4, 8192
  %.lobit42 = lshr exact i16 %5, 13
  %6 = zext i1 %active to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %.lobit42, i16 %6)
  %cmp43 = icmp eq i16 %.lobit42, %6
  br i1 %cmp43, label %if.end3.for.end_crit_edge, label %if.end3.if.end17_crit_edge

if.end3.if.end17_crit_edge:                       ; preds = %if.end3
  br label %if.end17

if.end3.for.end_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.end17:                                         ; preds = %if.end17.if.end17_crit_edge, %if.end3.if.end17_crit_edge
  %timeout.044 = phi i32 [ %sub, %if.end17.if.end17_crit_edge ], [ 1000, %if.end3.if.end17_crit_edge ]
  call void @msleep(i32 noundef 10) #24
  %sub = add nsw i32 %timeout.044, -10
  %call = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 18, ptr noundef nonnull %lnk_status) #24
  %7 = ptrtoint ptr %lnk_status to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %lnk_status, align 2
  %9 = and i16 %8, 8192
  %.lobit = lshr exact i16 %9, 13
  call void @__sanitizer_cov_trace_cmp2(i16 %.lobit, i16 %6)
  %cmp = icmp eq i16 %.lobit, %6
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %timeout.044)
  %cmp14 = icmp ult i32 %timeout.044, 11
  %or.cond = select i1 %cmp, i1 true, i1 %cmp14
  br i1 %or.cond, label %if.end17.for.end_crit_edge, label %if.end17.if.end17_crit_edge

if.end17.if.end17_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end17

if.end17.for.end_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.end:                                          ; preds = %if.end17.for.end_crit_edge, %if.end3.for.end_crit_edge
  %.lcssa = phi i16 [ %5, %if.end3.for.end_crit_edge ], [ %9, %if.end17.for.end_crit_edge ]
  %cmp.lcssa = phi i1 [ true, %if.end3.for.end_crit_edge ], [ %cmp, %if.end17.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %.lcssa)
  %tobool4.not = icmp eq i16 %.lcssa, 0
  %active.not = xor i1 %active, true
  %brmerge = select i1 %active.not, i1 true, i1 %tobool4.not
  br i1 %brmerge, label %for.end.cleanup_crit_edge, label %if.then22

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then22:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  call void @msleep(i32 noundef %delay) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then22, %for.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i1 [ true, %if.then ], [ %cmp.lcssa, %for.end.cleanup_crit_edge ], [ %cmp.lcssa, %if.then22 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %lnk_status) #24
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_bridge_wait_for_secondary_bus(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %error_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 43
  %0 = ptrtoint ptr %error_state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %error_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp.i = icmp eq i32 %1, 3
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %hdr_type.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 13
  %2 = ptrtoint ptr %hdr_type.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %hdr_type.i, align 1
  %4 = add i8 %3, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %4)
  %5 = icmp ult i8 %4, 2
  br i1 %5, label %lor.lhs.false, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %bridge_d3 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %6 = ptrtoint ptr %bridge_d3 to i32
  call void @__asan_loadN_noabort(i32 %6, i32 4)
  %bf.load = load i32, ptr %bridge_d3, align 2
  %7 = and i32 %bf.load, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end3

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end3:                                          ; preds = %lor.lhs.false
  tail call void @down_read(ptr noundef nonnull @pci_bus_sem) #24
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %8 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %subordinate, align 4
  %tobool4.not = icmp eq ptr %9, null
  br i1 %tobool4.not, label %if.end3.if.then9_crit_edge, label %lor.lhs.false5

if.end3.if.then9_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then9

lor.lhs.false5:                                   ; preds = %if.end3
  %devices = getelementptr inbounds %struct.pci_bus, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %devices, align 4
  %cmp.i137 = icmp eq ptr %11, %devices
  br i1 %cmp.i137, label %lor.lhs.false5.if.then9_crit_edge, label %lor.lhs.false5.for.body.i_crit_edge

lor.lhs.false5.for.body.i_crit_edge:              ; preds = %lor.lhs.false5
  br label %for.body.i

lor.lhs.false5.if.then9_crit_edge:                ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then9

if.then9:                                         ; preds = %lor.lhs.false5.if.then9_crit_edge, %if.end3.if.then9_crit_edge
  tail call void @up_read(ptr noundef nonnull @pci_bus_sem) #24
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %lor.lhs.false5.for.body.i_crit_edge
  %pdev.031.i = phi ptr [ %pdev.0.i, %for.body.i.for.body.i_crit_edge ], [ %11, %lor.lhs.false5.for.body.i_crit_edge ]
  %min_delay.030.i = phi i32 [ %14, %for.body.i.for.body.i_crit_edge ], [ 100, %lor.lhs.false5.for.body.i_crit_edge ]
  %max_delay.029.i = phi i32 [ %15, %for.body.i.for.body.i_crit_edge ], [ 0, %lor.lhs.false5.for.body.i_crit_edge ]
  %d3cold_delay.i = getelementptr inbounds %struct.pci_dev, ptr %pdev.031.i, i32 0, i32 36
  %12 = ptrtoint ptr %d3cold_delay.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %d3cold_delay.i, align 4
  %14 = tail call i32 @llvm.umin.i32(i32 %13, i32 %min_delay.030.i) #24
  %15 = tail call i32 @llvm.umax.i32(i32 %13, i32 %max_delay.029.i) #24
  %16 = ptrtoint ptr %pdev.031.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %pdev.0.i = load ptr, ptr %pdev.031.i, align 4
  %cmp.not.i = icmp eq ptr %pdev.0.i, %devices
  br i1 %cmp.not.i, label %pci_bus_max_d3cold_delay.exit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i

pci_bus_max_d3cold_delay.exit:                    ; preds = %for.body.i
  %17 = tail call i32 @llvm.smax.i32(i32 %14, i32 %15) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool13.not = icmp eq i32 %17, 0
  tail call void @up_read(ptr noundef nonnull @pci_bus_sem) #24
  br i1 %tobool13.not, label %pci_bus_max_d3cold_delay.exit.cleanup_crit_edge, label %if.end15

pci_bus_max_d3cold_delay.exit.cleanup_crit_edge:  ; preds = %pci_bus_max_d3cold_delay.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end15:                                         ; preds = %pci_bus_max_d3cold_delay.exit
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %18 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool.i.not = icmp eq i8 %19, 0
  br i1 %tobool.i.not, label %do.body, label %if.end30

do.body:                                          ; preds = %if.end15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug248, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_bridge_wait_for_secondary_bus, %do.end)) #24
          to label %if.then26 [label %do.end], !srcloc !733

if.then26:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #26
  %dev27 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add = add i32 %17, 1000
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug248, ptr noundef %dev27, ptr noundef nonnull @.str.66, i32 noundef %add) #24
  br label %do.end

do.end:                                           ; preds = %if.then26, %do.body
  %add29 = add i32 %17, 1000
  tail call void @msleep(i32 noundef %add29) #24
  br label %cleanup

if.end30:                                         ; preds = %if.end15
  %pcie_flags_reg.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %20 = ptrtoint ptr %pcie_flags_reg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %pcie_flags_reg.i.i.i, align 2
  %22 = lshr i16 %21, 4
  %23 = and i16 %22, 15
  %24 = zext i16 %23 to i32
  %25 = zext i32 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.254)
  switch i32 %24, label %if.end30.cleanup_crit_edge [
    i32 4, label %if.end30.if.end33_crit_edge
    i32 6, label %if.end30.if.end33_crit_edge148
    i32 8, label %if.end30.if.end33_crit_edge149
  ]

if.end30.if.end33_crit_edge149:                   ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end33

if.end30.if.end33_crit_edge148:                   ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end33

if.end30.if.end33_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end33

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end33:                                         ; preds = %if.end30.if.end33_crit_edge, %if.end30.if.end33_crit_edge148, %if.end30.if.end33_crit_edge149
  %call34 = tail call i32 @pcie_get_speed_cap(ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 22, i32 %call34)
  %cmp = icmp ult i32 %call34, 22
  br i1 %cmp, label %do.body36, label %do.body55

do.body36:                                        ; preds = %if.end33
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug249, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_bridge_wait_for_secondary_bus, %do.end54)) #24
          to label %if.then50 [label %do.end54], !srcloc !733

if.then50:                                        ; preds = %do.body36
  call void @__sanitizer_cov_trace_pc() #26
  %dev51 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug249, ptr noundef %dev51, ptr noundef nonnull @.str.67, i32 noundef %17) #24
  br label %do.end54

do.end54:                                         ; preds = %if.then50, %do.body36
  tail call void @msleep(i32 noundef %17) #24
  br label %if.end81

do.body55:                                        ; preds = %if.end33
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug250, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_bridge_wait_for_secondary_bus, %do.end73)) #24
          to label %if.then69 [label %do.end73], !srcloc !733

if.then69:                                        ; preds = %do.body55
  call void @__sanitizer_cov_trace_pc() #26
  %dev70 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug250, ptr noundef %dev70, ptr noundef nonnull @.str.68, i32 noundef %17) #24
  br label %do.end73

do.end73:                                         ; preds = %if.then69, %do.body55
  %call74 = tail call fastcc zeroext i1 @pcie_wait_for_link_delay(ptr noundef %dev, i1 noundef zeroext true, i32 noundef %17)
  br i1 %call74, label %do.end73.if.end81_crit_edge, label %do.end78

do.end73.if.end81_crit_edge:                      ; preds = %do.end73
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end81

do.end78:                                         ; preds = %do.end73
  call void @__sanitizer_cov_trace_pc() #26
  %dev79 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev79, ptr noundef nonnull @.str.69) #28
  br label %cleanup

if.end81:                                         ; preds = %do.end73.if.end81_crit_edge, %do.end54
  %call82 = tail call zeroext i1 @pci_device_is_present(ptr noundef %11)
  br i1 %call82, label %if.end81.cleanup_crit_edge, label %do.body84

if.end81.cleanup_crit_edge:                       ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

do.body84:                                        ; preds = %if.end81
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug251, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_bridge_wait_for_secondary_bus, %do.end102)) #24
          to label %if.then98 [label %do.end102], !srcloc !733

if.then98:                                        ; preds = %do.body84
  call void @__sanitizer_cov_trace_pc() #26
  %dev99 = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug251, ptr noundef %dev99, ptr noundef nonnull @.str.70, i32 noundef %17) #24
  br label %do.end102

do.end102:                                        ; preds = %if.then98, %do.body84
  tail call void @msleep(i32 noundef %17) #24
  br label %cleanup

cleanup:                                          ; preds = %do.end102, %if.end81.cleanup_crit_edge, %do.end78, %if.end30.cleanup_crit_edge, %do.end, %pci_bus_max_d3cold_delay.exit.cleanup_crit_edge, %if.then9, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_get_speed_cap(ptr noundef %dev) #5 align 64 {
entry:
  %lnkcap2 = alloca i32, align 4
  %lnkcap = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lnkcap2) #24
  %0 = ptrtoint ptr %lnkcap2 to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %lnkcap2, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lnkcap) #24
  %1 = ptrtoint ptr %lnkcap to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %lnkcap, align 4, !annotation !731
  %call = call i32 @pcie_capability_read_dword(ptr noundef %dev, i32 noundef 44, ptr noundef nonnull %lnkcap2) #24
  %2 = ptrtoint ptr %lnkcap2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %lnkcap2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %and = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %cond.false, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cond.false:                                       ; preds = %if.then
  %and2 = and i32 %3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %cond.false5, label %cond.false.cleanup_crit_edge

cond.false.cleanup_crit_edge:                     ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cond.false5:                                      ; preds = %cond.false
  %and6 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %cond.false9, label %cond.false5.cleanup_crit_edge

cond.false5.cleanup_crit_edge:                    ; preds = %cond.false5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cond.false9:                                      ; preds = %cond.false5
  %and10 = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %cond.false13, label %cond.false9.cleanup_crit_edge

cond.false9.cleanup_crit_edge:                    ; preds = %cond.false9
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cond.false13:                                     ; preds = %cond.false9
  %and14 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %cond.false17, label %cond.false13.cleanup_crit_edge

cond.false13.cleanup_crit_edge:                   ; preds = %cond.false13
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cond.false17:                                     ; preds = %cond.false13
  call void @__sanitizer_cov_trace_pc() #26
  %and18 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  %cond = select i1 %tobool19.not, i32 255, i32 20
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %call29 = call i32 @pcie_capability_read_dword(ptr noundef %dev, i32 noundef 12, ptr noundef nonnull %lnkcap) #24
  %4 = ptrtoint ptr %lnkcap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lnkcap, align 4
  %and30 = and i32 %5, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and30)
  %switch.selectcmp = icmp eq i32 %and30, 1
  %switch.select = select i1 %switch.selectcmp, i32 20, i32 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and30)
  %switch.selectcmp39 = icmp eq i32 %and30, 2
  %switch.select40 = select i1 %switch.selectcmp39, i32 21, i32 %switch.select
  br label %cleanup

cleanup:                                          ; preds = %if.end, %cond.false17, %cond.false13.cleanup_crit_edge, %cond.false9.cleanup_crit_edge, %cond.false5.cleanup_crit_edge, %cond.false.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 25, %if.then.cleanup_crit_edge ], [ 24, %cond.false.cleanup_crit_edge ], [ 23, %cond.false5.cleanup_crit_edge ], [ 22, %cond.false9.cleanup_crit_edge ], [ %cond, %cond.false17 ], [ 21, %cond.false13.cleanup_crit_edge ], [ %switch.select40, %if.end ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lnkcap) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lnkcap2) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_reset_secondary_bus(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %ctrl = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl) #24
  %0 = ptrtoint ptr %ctrl to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %ctrl, align 2, !annotation !731
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 62, ptr noundef nonnull %ctrl) #24
  %1 = ptrtoint ptr %ctrl to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %ctrl, align 2
  %3 = or i16 %2, 64
  store i16 %3, ptr %ctrl, align 2
  %call2 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 62, i16 noundef zeroext %3) #24
  call void @msleep(i32 noundef 2) #24
  %4 = ptrtoint ptr %ctrl to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %ctrl, align 2
  %6 = and i16 %5, -65
  store i16 %6, ptr %ctrl, align 2
  %call5 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 62, i16 noundef zeroext %6) #24
  call void @msleep(i32 noundef 1000) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @pcibios_reset_secondary_bus(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %ctrl.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl.i) #24
  %0 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %ctrl.i, align 2, !annotation !731
  %call.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 62, ptr noundef nonnull %ctrl.i) #24
  %1 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %ctrl.i, align 2
  %3 = or i16 %2, 64
  store i16 %3, ptr %ctrl.i, align 2
  %call2.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 62, i16 noundef zeroext %3) #24
  call void @msleep(i32 noundef 2) #24
  %4 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %ctrl.i, align 2
  %6 = and i16 %5, -65
  store i16 %6, ptr %ctrl.i, align 2
  %call5.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 62, i16 noundef zeroext %6) #24
  call void @msleep(i32 noundef 1000) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl.i) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_bridge_secondary_bus_reset(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @pcibios_reset_secondary_bus(ptr noundef %dev)
  %call = tail call fastcc i32 @pci_dev_wait(ptr noundef %dev, ptr noundef nonnull @.str.71)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_dev_lock(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @pci_cfg_access_lock(ptr noundef %dev) #24
  %mutex.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_cfg_access_lock(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_dev_trylock(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @pci_cfg_access_trylock(ptr noundef %dev) #24
  br i1 %call, label %if.then, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.then:                                          ; preds = %entry
  %mutex.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 10
  %call.i = tail call i32 @mutex_trylock(ptr noundef %mutex.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %if.then.return_crit_edge

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_cfg_access_unlock(ptr noundef %dev) #24
  br label %return

return:                                           ; preds = %if.end, %if.then.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 1, %if.then.return_crit_edge ], [ 0, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @pci_cfg_access_trylock(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_cfg_access_unlock(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_dev_unlock(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %mutex.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 10
  tail call void @mutex_unlock(ptr noundef %mutex.i) #24
  tail call void @pci_cfg_access_unlock(ptr noundef %dev) #24
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i16 @pci_dev_reset_method_attr_is_visible(ptr nocapture noundef readonly %kobj, ptr nocapture noundef readonly %a, i32 noundef %n) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %reset_methods.i = getelementptr i8, ptr %kobj, i32 1896
  %0 = ptrtoint ptr %reset_methods.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %reset_methods.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.i.not = icmp eq i8 %1, 0
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %mode = getelementptr inbounds %struct.attribute, ptr %a, i32 0, i32 1
  %2 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %mode, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i16 [ %3, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__pci_reset_function_locked(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str.11, i32 noundef 5336) #24
  %arrayidx = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 0
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = zext i8 %1 to i32
  %arrayidx4 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv
  %2 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx4, align 4
  %call = tail call i32 %3(ptr noundef %dev, i1 noundef zeroext false) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -25, i32 %call)
  %cond = icmp eq i32 %call, -25
  br i1 %cond, label %for.inc, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.inc:                                          ; preds = %if.end
  %arrayidx.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 1
  %4 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx.1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.1 = icmp eq i8 %5, 0
  br i1 %tobool.not.1, label %for.inc.cleanup_crit_edge, label %if.end.1

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.1:                                         ; preds = %for.inc
  %conv.1 = zext i8 %5 to i32
  %arrayidx4.1 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.1
  %6 = ptrtoint ptr %arrayidx4.1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx4.1, align 4
  %call.1 = tail call i32 %7(ptr noundef %dev, i1 noundef zeroext false) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -25, i32 %call.1)
  %cond22 = icmp eq i32 %call.1, -25
  br i1 %cond22, label %for.inc.1, label %if.end.1.cleanup_crit_edge

if.end.1.cleanup_crit_edge:                       ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.inc.1:                                        ; preds = %if.end.1
  %arrayidx.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 2
  %8 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx.2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.2 = icmp eq i8 %9, 0
  br i1 %tobool.not.2, label %for.inc.1.cleanup_crit_edge, label %if.end.2

for.inc.1.cleanup_crit_edge:                      ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.2:                                         ; preds = %for.inc.1
  %conv.2 = zext i8 %9 to i32
  %arrayidx4.2 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.2
  %10 = ptrtoint ptr %arrayidx4.2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx4.2, align 4
  %call.2 = tail call i32 %11(ptr noundef %dev, i1 noundef zeroext false) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -25, i32 %call.2)
  %cond23 = icmp eq i32 %call.2, -25
  br i1 %cond23, label %for.inc.2, label %if.end.2.cleanup_crit_edge

if.end.2.cleanup_crit_edge:                       ; preds = %if.end.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.inc.2:                                        ; preds = %if.end.2
  %arrayidx.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 3
  %12 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.3 = icmp eq i8 %13, 0
  br i1 %tobool.not.3, label %for.inc.2.cleanup_crit_edge, label %if.end.3

for.inc.2.cleanup_crit_edge:                      ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.3:                                         ; preds = %for.inc.2
  %conv.3 = zext i8 %13 to i32
  %arrayidx4.3 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.3
  %14 = ptrtoint ptr %arrayidx4.3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx4.3, align 4
  %call.3 = tail call i32 %15(ptr noundef %dev, i1 noundef zeroext false) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -25, i32 %call.3)
  %cond24 = icmp eq i32 %call.3, -25
  br i1 %cond24, label %for.inc.3, label %if.end.3.cleanup_crit_edge

if.end.3.cleanup_crit_edge:                       ; preds = %if.end.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.inc.3:                                        ; preds = %if.end.3
  %arrayidx.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 4
  %16 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx.4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.4 = icmp eq i8 %17, 0
  br i1 %tobool.not.4, label %for.inc.3.cleanup_crit_edge, label %if.end.4

for.inc.3.cleanup_crit_edge:                      ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.4:                                         ; preds = %for.inc.3
  %conv.4 = zext i8 %17 to i32
  %arrayidx4.4 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.4
  %18 = ptrtoint ptr %arrayidx4.4 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx4.4, align 4
  %call.4 = tail call i32 %19(ptr noundef %dev, i1 noundef zeroext false) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -25, i32 %call.4)
  %cond25 = icmp eq i32 %call.4, -25
  br i1 %cond25, label %for.inc.4, label %if.end.4.cleanup_crit_edge

if.end.4.cleanup_crit_edge:                       ; preds = %if.end.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.inc.4:                                        ; preds = %if.end.4
  %arrayidx.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 5
  %20 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx.5, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not.5 = icmp eq i8 %21, 0
  br i1 %tobool.not.5, label %for.inc.4.cleanup_crit_edge, label %if.end.5

for.inc.4.cleanup_crit_edge:                      ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.5:                                         ; preds = %for.inc.4
  %conv.5 = zext i8 %21 to i32
  %arrayidx4.5 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.5
  %22 = ptrtoint ptr %arrayidx4.5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx4.5, align 4
  %call.5 = tail call i32 %23(ptr noundef %dev, i1 noundef zeroext false) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -25, i32 %call.5)
  %cond26 = icmp eq i32 %call.5, -25
  br i1 %cond26, label %for.inc.5, label %if.end.5.cleanup_crit_edge

if.end.5.cleanup_crit_edge:                       ; preds = %if.end.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.inc.5:                                        ; preds = %if.end.5
  %arrayidx.6 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 6
  %24 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx.6, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.6 = icmp eq i8 %25, 0
  br i1 %tobool.not.6, label %for.inc.5.cleanup_crit_edge, label %if.end.6

for.inc.5.cleanup_crit_edge:                      ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.6:                                         ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #26
  %conv.6 = zext i8 %25 to i32
  %arrayidx4.6 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.6
  %26 = ptrtoint ptr %arrayidx4.6 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx4.6, align 4
  %call.6 = tail call i32 %27(ptr noundef %dev, i1 noundef zeroext false) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end.6, %for.inc.5.cleanup_crit_edge, %if.end.5.cleanup_crit_edge, %for.inc.4.cleanup_crit_edge, %if.end.4.cleanup_crit_edge, %for.inc.3.cleanup_crit_edge, %if.end.3.cleanup_crit_edge, %for.inc.2.cleanup_crit_edge, %if.end.2.cleanup_crit_edge, %for.inc.1.cleanup_crit_edge, %if.end.1.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -25, %entry.cleanup_crit_edge ], [ -25, %for.inc.cleanup_crit_edge ], [ -25, %for.inc.1.cleanup_crit_edge ], [ -25, %for.inc.2.cleanup_crit_edge ], [ -25, %for.inc.3.cleanup_crit_edge ], [ -25, %for.inc.4.cleanup_crit_edge ], [ -25, %for.inc.5.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ %call.1, %if.end.1.cleanup_crit_edge ], [ %call.2, %if.end.2.cleanup_crit_edge ], [ %call.3, %if.end.3.cleanup_crit_edge ], [ %call.4, %if.end.4.cleanup_crit_edge ], [ %call.5, %if.end.5.cleanup_crit_edge ], [ %call.6, %if.end.6 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_init_reset_methods(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %csr.i = alloca i16, align 2
  %cap.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str.11, i32 noundef 5380) #24
  %call = tail call i32 @pci_dev_specific_reset(ptr noundef %dev, i1 noundef zeroext true) #24
  %0 = zext i32 %call to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.255)
  switch i32 %call, label %entry.for.end_crit_edge [
    i32 0, label %if.then
    i32 -25, label %entry.for.inc.1_crit_edge
  ]

entry.for.inc.1_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.1

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %arrayidx7 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 0
  %1 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 1, ptr %arrayidx7, align 1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then, %entry.for.inc.1_crit_edge
  %i.1 = phi i32 [ 1, %if.then ], [ 0, %entry.for.inc.1_crit_edge ]
  %dev_flags.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %2 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %dev_flags.i, align 2
  %4 = and i16 %3, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool.not.i = icmp eq i16 %4, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.inc.1.for.inc.2_crit_edge

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.2

if.end.i:                                         ; preds = %for.inc.1
  %devcap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 18
  %5 = ptrtoint ptr %devcap.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %devcap.i, align 4
  %and1.i = and i32 %6, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not.i, label %if.end.i.for.inc.2_crit_edge, label %if.then.2

if.end.i.for.inc.2_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.2

if.then.2:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  %inc.2 = add nuw nsw i32 %i.1, 1
  %arrayidx7.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 %i.1
  %7 = ptrtoint ptr %arrayidx7.2 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 3, ptr %arrayidx7.2, align 1
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %if.end.i.for.inc.2_crit_edge, %for.inc.1.for.inc.2_crit_edge
  %i.1.2 = phi i32 [ %inc.2, %if.then.2 ], [ %i.1, %for.inc.1.for.inc.2_crit_edge ], [ %i.1, %if.end.i.for.inc.2_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %cap.i) #24
  %8 = ptrtoint ptr %cap.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 -1, ptr %cap.i, align 1, !annotation !731
  %call.i = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 19) #24
  %conv.i = zext i8 %call.i to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call.i)
  %tobool.not.i24 = icmp eq i8 %call.i, 0
  br i1 %tobool.not.i24, label %for.inc.2.pci_af_flr.exit.thread_crit_edge, label %if.end.i27

for.inc.2.pci_af_flr.exit.thread_crit_edge:       ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_af_flr.exit.thread

if.end.i27:                                       ; preds = %for.inc.2
  %9 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %dev_flags.i, align 2
  %11 = and i16 %10, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool2.not.i26 = icmp eq i16 %11, 0
  br i1 %tobool2.not.i26, label %if.end4.i, label %if.end.i27.pci_af_flr.exit.thread_crit_edge

if.end.i27.pci_af_flr.exit.thread_crit_edge:      ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_af_flr.exit.thread

if.end4.i:                                        ; preds = %if.end.i27
  %add.i = add nuw nsw i32 %conv.i, 3
  %call5.i = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %cap.i) #24
  %12 = ptrtoint ptr %cap.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %cap.i, align 1
  %14 = and i8 %13, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %14)
  %.not = icmp eq i8 %14, 3
  br i1 %.not, label %if.then.3, label %if.end4.i.pci_af_flr.exit.thread_crit_edge

if.end4.i.pci_af_flr.exit.thread_crit_edge:       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_af_flr.exit.thread

pci_af_flr.exit.thread:                           ; preds = %if.end4.i.pci_af_flr.exit.thread_crit_edge, %if.end.i27.pci_af_flr.exit.thread_crit_edge, %for.inc.2.pci_af_flr.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %cap.i) #24
  br label %for.inc.3

if.then.3:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %cap.i) #24
  %inc.3 = add nuw nsw i32 %i.1.2, 1
  %arrayidx7.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 %i.1.2
  %15 = ptrtoint ptr %arrayidx7.3 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 4, ptr %arrayidx7.3, align 1
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3, %pci_af_flr.exit.thread
  %i.1.3 = phi i32 [ %inc.3, %if.then.3 ], [ %i.1.2, %pci_af_flr.exit.thread ]
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %csr.i) #24
  %16 = ptrtoint ptr %csr.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 -1, ptr %csr.i, align 2, !annotation !731
  %pm_cap.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %17 = ptrtoint ptr %pm_cap.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %pm_cap.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i30 = icmp eq i8 %18, 0
  br i1 %tobool.not.i30, label %for.inc.3.pci_pm_reset.exit.thread_crit_edge, label %lor.lhs.false.i

for.inc.3.pci_pm_reset.exit.thread_crit_edge:     ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_pm_reset.exit.thread

lor.lhs.false.i:                                  ; preds = %for.inc.3
  %19 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %dev_flags.i, align 2
  %21 = and i16 %20, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool1.not.i = icmp eq i16 %21, 0
  br i1 %tobool1.not.i, label %if.end.i35, label %lor.lhs.false.i.pci_pm_reset.exit.thread_crit_edge

lor.lhs.false.i.pci_pm_reset.exit.thread_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_pm_reset.exit.thread

if.end.i35:                                       ; preds = %lor.lhs.false.i
  %conv3.i = zext i8 %18 to i32
  %add.i32 = add nuw nsw i32 %conv3.i, 4
  %call.i33 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add.i32, ptr noundef nonnull %csr.i) #24
  %22 = ptrtoint ptr %csr.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %csr.i, align 2
  %24 = and i16 %23, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %tobool6.not.i.not = icmp eq i16 %24, 0
  br i1 %tobool6.not.i.not, label %if.then.4, label %if.end.i35.pci_pm_reset.exit.thread_crit_edge

if.end.i35.pci_pm_reset.exit.thread_crit_edge:    ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_pm_reset.exit.thread

pci_pm_reset.exit.thread:                         ; preds = %if.end.i35.pci_pm_reset.exit.thread_crit_edge, %lor.lhs.false.i.pci_pm_reset.exit.thread_crit_edge, %for.inc.3.pci_pm_reset.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %csr.i) #24
  br label %for.inc.4

if.then.4:                                        ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %csr.i) #24
  %inc.4 = add nuw nsw i32 %i.1.3, 1
  %arrayidx7.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 %i.1.3
  %25 = ptrtoint ptr %arrayidx7.4 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 5, ptr %arrayidx7.4, align 1
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then.4, %pci_pm_reset.exit.thread
  %i.1.4 = phi i32 [ %inc.4, %if.then.4 ], [ %i.1.3, %pci_pm_reset.exit.thread ]
  %call.5 = tail call i32 @pci_reset_bus_function(ptr noundef %dev, i1 noundef zeroext true) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.5)
  %cond = icmp eq i32 %call.5, 0
  br i1 %cond, label %if.then.5, label %for.inc.4.for.end_crit_edge

for.inc.4.for.end_crit_edge:                      ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.then.5:                                        ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #26
  %inc.5 = add nuw nsw i32 %i.1.4, 1
  %arrayidx7.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 %i.1.4
  %26 = ptrtoint ptr %arrayidx7.5 to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 6, ptr %arrayidx7.5, align 1
  br label %for.end

for.end:                                          ; preds = %if.then.5, %for.inc.4.for.end_crit_edge, %entry.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %inc.5, %if.then.5 ], [ %i.1.4, %for.inc.4.for.end_crit_edge ]
  %arrayidx14 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 82, i32 %i.0.lcssa
  %27 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %arrayidx14, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_reset_function(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %reset_methods.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 82
  %0 = ptrtoint ptr %reset_methods.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %reset_methods.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.i.not = icmp eq i8 %1, 0
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @pci_cfg_access_lock(ptr noundef %dev) #24
  %mutex.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #24
  tail call fastcc void @pci_dev_save_and_disable(ptr noundef %dev)
  %call1 = tail call i32 @__pci_reset_function_locked(ptr noundef %dev)
  %driver.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 27
  %2 = ptrtoint ptr %driver.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %cond.end.thread.i, label %cond.end.i

cond.end.thread.i:                                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_restore_state(ptr noundef %dev) #24
  br label %pci_dev_restore.exit

cond.end.i:                                       ; preds = %if.end
  %err_handler2.i = getelementptr inbounds %struct.pci_driver, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %err_handler2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %err_handler2.i, align 4
  tail call void @pci_restore_state(ptr noundef %dev) #24
  %tobool3.not.i = icmp eq ptr %5, null
  br i1 %tobool3.not.i, label %cond.end.i.pci_dev_restore.exit_crit_edge, label %land.lhs.true.i

cond.end.i.pci_dev_restore.exit_crit_edge:        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_restore.exit

land.lhs.true.i:                                  ; preds = %cond.end.i
  %reset_done.i = getelementptr inbounds %struct.pci_error_handlers, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %reset_done.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %reset_done.i, align 4
  %tobool4.not.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i, label %land.lhs.true.i.pci_dev_restore.exit_crit_edge, label %if.then.i

land.lhs.true.i.pci_dev_restore.exit_crit_edge:   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_restore.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void %7(ptr noundef %dev) #24
  br label %pci_dev_restore.exit

pci_dev_restore.exit:                             ; preds = %if.then.i, %land.lhs.true.i.pci_dev_restore.exit_crit_edge, %cond.end.i.pci_dev_restore.exit_crit_edge, %cond.end.thread.i
  tail call void @mutex_unlock(ptr noundef %mutex.i.i) #24
  tail call void @pci_cfg_access_unlock(ptr noundef %dev) #24
  br label %cleanup

cleanup:                                          ; preds = %pci_dev_restore.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %pci_dev_restore.exit ], [ -25, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_dev_save_and_disable(ptr noundef %dev) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %driver = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %cond.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

cond.end:                                         ; preds = %entry
  %err_handler2 = getelementptr inbounds %struct.pci_driver, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %err_handler2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %err_handler2, align 4
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %cond.end.if.end_crit_edge, label %land.lhs.true

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true:                                    ; preds = %cond.end
  %reset_prepare = getelementptr inbounds %struct.pci_error_handlers, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %reset_prepare to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %reset_prepare, align 4
  %tobool4.not = icmp eq ptr %5, null
  br i1 %tobool4.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  tail call void %5(ptr noundef %dev) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %cond.end.if.end_crit_edge, %entry.if.end_crit_edge
  %current_state.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %6 = ptrtoint ptr %current_state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %current_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp9.i = icmp eq i32 %7, 0
  br i1 %cmp9.i, label %if.end.pci_set_power_state.exit_crit_edge, label %if.end11.i

if.end.pci_set_power_state.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_power_state.exit

if.end11.i:                                       ; preds = %if.end
  %pm_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %8 = ptrtoint ptr %pm_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %pm_cap.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool1.not.i.i.i = icmp eq i8 %9, 0
  br i1 %tobool1.not.i.i.i, label %if.then2.i.i.i, label %if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge

if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge: ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_platform_power_transition.exit.i.i

if.then2.i.i.i:                                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #26
  %10 = ptrtoint ptr %current_state.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %current_state.i, align 4
  br label %pci_platform_power_transition.exit.i.i

pci_platform_power_transition.exit.i.i:           ; preds = %if.then2.i.i.i, %if.end11.i.pci_platform_power_transition.exit.i.i_crit_edge
  %runtime_d3cold.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %11 = ptrtoint ptr %runtime_d3cold.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 4)
  %bf.load.i48.i = load i32, ptr %runtime_d3cold.i.i, align 2
  %12 = and i32 %bf.load.i48.i, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i49.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i49.i, label %pci_platform_power_transition.exit.i.i.pci_power_up.exit.i_crit_edge, label %if.then.i50.i

pci_platform_power_transition.exit.i.i.pci_power_up.exit.i_crit_edge: ; preds = %pci_platform_power_transition.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_power_up.exit.i

if.then.i50.i:                                    ; preds = %pci_platform_power_transition.exit.i.i
  %subordinate.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %13 = ptrtoint ptr %subordinate.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %subordinate.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i.i, label %if.then.i50.i.pci_power_up.exit.i_crit_edge, label %if.then.i.i.i

if.then.i50.i.pci_power_up.exit.i_crit_edge:      ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_power_up.exit.i

if.then.i.i.i:                                    ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_walk_bus(ptr noundef nonnull %14, ptr noundef nonnull @pci_resume_one, ptr noundef null) #24
  br label %pci_power_up.exit.i

pci_power_up.exit.i:                              ; preds = %if.then.i.i.i, %if.then.i50.i.pci_power_up.exit.i_crit_edge, %pci_platform_power_transition.exit.i.i.pci_power_up.exit.i_crit_edge
  %call1.i.i = tail call fastcc i32 @pci_raw_set_power_state(ptr noundef %dev, i32 noundef 0) #24
  br label %pci_set_power_state.exit

pci_set_power_state.exit:                         ; preds = %pci_power_up.exit.i, %if.end.pci_set_power_state.exit_crit_edge
  %call6 = tail call i32 @pci_save_state(ptr noundef %dev)
  %call7 = tail call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext 1024) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_reset_function_locked(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %reset_methods.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 82
  %0 = ptrtoint ptr %reset_methods.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %reset_methods.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.i.not = icmp eq i8 %1, 0
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @pci_dev_save_and_disable(ptr noundef %dev)
  %call1 = tail call i32 @__pci_reset_function_locked(ptr noundef %dev)
  %driver.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 27
  %2 = ptrtoint ptr %driver.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %cond.end.thread.i, label %cond.end.i

cond.end.thread.i:                                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_restore_state(ptr noundef %dev) #24
  br label %cleanup

cond.end.i:                                       ; preds = %if.end
  %err_handler2.i = getelementptr inbounds %struct.pci_driver, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %err_handler2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %err_handler2.i, align 4
  tail call void @pci_restore_state(ptr noundef %dev) #24
  %tobool3.not.i = icmp eq ptr %5, null
  br i1 %tobool3.not.i, label %cond.end.i.cleanup_crit_edge, label %land.lhs.true.i

cond.end.i.cleanup_crit_edge:                     ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true.i:                                  ; preds = %cond.end.i
  %reset_done.i = getelementptr inbounds %struct.pci_error_handlers, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %reset_done.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %reset_done.i, align 4
  %tobool4.not.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %if.then.i

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void %7(ptr noundef %dev) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %land.lhs.true.i.cleanup_crit_edge, %cond.end.i.cleanup_crit_edge, %cond.end.thread.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -25, %entry.cleanup_crit_edge ], [ %call1, %cond.end.thread.i ], [ %call1, %cond.end.i.cleanup_crit_edge ], [ %call1, %land.lhs.true.i.cleanup_crit_edge ], [ %call1, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_try_reset_function(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %reset_methods.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 82
  %0 = ptrtoint ptr %reset_methods.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %reset_methods.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.i.not = icmp eq i8 %1, 0
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call zeroext i1 @pci_cfg_access_trylock(ptr noundef %dev) #24
  br i1 %call.i, label %if.then.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then.i:                                        ; preds = %if.end
  %mutex.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 10
  %call.i.i = tail call i32 @mutex_trylock(ptr noundef %mutex.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.then.i.cleanup.sink.split_crit_edge, label %if.end3

if.then.i.cleanup.sink.split_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup.sink.split

if.end3:                                          ; preds = %if.then.i
  tail call fastcc void @pci_dev_save_and_disable(ptr noundef %dev)
  %call4 = tail call i32 @__pci_reset_function_locked(ptr noundef %dev)
  %driver.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 27
  %2 = ptrtoint ptr %driver.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver.i, align 4
  %tobool.not.i10 = icmp eq ptr %3, null
  br i1 %tobool.not.i10, label %cond.end.thread.i, label %cond.end.i

cond.end.thread.i:                                ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_restore_state(ptr noundef %dev) #24
  br label %pci_dev_restore.exit

cond.end.i:                                       ; preds = %if.end3
  %err_handler2.i = getelementptr inbounds %struct.pci_driver, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %err_handler2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %err_handler2.i, align 4
  tail call void @pci_restore_state(ptr noundef %dev) #24
  %tobool3.not.i = icmp eq ptr %5, null
  br i1 %tobool3.not.i, label %cond.end.i.pci_dev_restore.exit_crit_edge, label %land.lhs.true.i

cond.end.i.pci_dev_restore.exit_crit_edge:        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_restore.exit

land.lhs.true.i:                                  ; preds = %cond.end.i
  %reset_done.i = getelementptr inbounds %struct.pci_error_handlers, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %reset_done.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %reset_done.i, align 4
  %tobool4.not.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i, label %land.lhs.true.i.pci_dev_restore.exit_crit_edge, label %if.then.i11

land.lhs.true.i.pci_dev_restore.exit_crit_edge:   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_restore.exit

if.then.i11:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void %7(ptr noundef %dev) #24
  br label %pci_dev_restore.exit

pci_dev_restore.exit:                             ; preds = %if.then.i11, %land.lhs.true.i.pci_dev_restore.exit_crit_edge, %cond.end.i.pci_dev_restore.exit_crit_edge, %cond.end.thread.i
  tail call void @mutex_unlock(ptr noundef %mutex.i.i) #24
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %pci_dev_restore.exit, %if.then.i.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ %call4, %pci_dev_restore.exit ], [ -11, %if.then.i.cleanup.sink.split_crit_edge ]
  tail call void @pci_cfg_access_unlock(ptr noundef %dev) #24
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -25, %entry.cleanup_crit_edge ], [ -11, %if.end.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_probe_reset_slot(ptr noundef %slot) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @pci_slot_reset(ptr noundef %slot, i1 noundef zeroext true)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_slot_reset(ptr noundef readonly %slot, i1 noundef zeroext %probe) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %slot, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %0 = ptrtoint ptr %slot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %slot, align 4
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %self.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %lor.lhs.false.if.end.i_crit_edge, label %land.lhs.true.i

lor.lhs.false.if.end.i_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false
  %dev_flags.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 50
  %4 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %dev_flags.i, align 2
  %6 = and i16 %5, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %tobool3.not.i = icmp eq i16 %6, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %land.lhs.true.i.cleanup_crit_edge

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %lor.lhs.false.if.end.i_crit_edge
  %devices.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 3
  %7 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %dev.042.i = load ptr, ptr %devices.i, align 4
  %cmp.not43.i = icmp eq ptr %dev.042.i, %devices.i
  br i1 %cmp.not43.i, label %if.end.i.if.end_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %dev.044.i = phi ptr [ %dev.0.i, %for.inc.i.for.body.i_crit_edge ], [ %dev.042.i, %if.end.i.for.body.i_crit_edge ]
  %slot8.i = getelementptr inbounds %struct.pci_dev, ptr %dev.044.i, i32 0, i32 5
  %8 = ptrtoint ptr %slot8.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %slot8.i, align 8
  %tobool9.not.i = icmp ne ptr %9, null
  %cmp11.not.i = icmp eq ptr %9, %slot
  %or.cond.i = and i1 %tobool9.not.i, %cmp11.not.i
  br i1 %or.cond.i, label %if.end14.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

if.end14.i:                                       ; preds = %for.body.i
  %dev_flags15.i = getelementptr inbounds %struct.pci_dev, ptr %dev.044.i, i32 0, i32 50
  %10 = ptrtoint ptr %dev_flags15.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %dev_flags15.i, align 2
  %12 = and i16 %11, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool18.not.i = icmp eq i16 %12, 0
  br i1 %tobool18.not.i, label %lor.lhs.false19.i, label %if.end14.i.cleanup_crit_edge

if.end14.i.cleanup_crit_edge:                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false19.i:                                ; preds = %if.end14.i
  %subordinate.i = getelementptr inbounds %struct.pci_dev, ptr %dev.044.i, i32 0, i32 2
  %13 = ptrtoint ptr %subordinate.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %subordinate.i, align 4
  %tobool20.not.i = icmp eq ptr %14, null
  br i1 %tobool20.not.i, label %lor.lhs.false19.i.for.inc.i_crit_edge, label %land.lhs.true21.i

lor.lhs.false19.i.for.inc.i_crit_edge:            ; preds = %lor.lhs.false19.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

land.lhs.true21.i:                                ; preds = %lor.lhs.false19.i
  %call.i = tail call fastcc zeroext i1 @pci_bus_resetable(ptr noundef nonnull %14) #24
  br i1 %call.i, label %land.lhs.true21.i.for.inc.i_crit_edge, label %land.lhs.true21.i.cleanup_crit_edge

land.lhs.true21.i.cleanup_crit_edge:              ; preds = %land.lhs.true21.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true21.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true21.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true21.i.for.inc.i_crit_edge, %lor.lhs.false19.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %15 = ptrtoint ptr %dev.044.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %dev.0.i = load ptr, ptr %dev.044.i, align 4
  %cmp.not.i = icmp eq ptr %dev.0.i, %devices.i
  br i1 %cmp.not.i, label %for.inc.i.if.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i

for.inc.i.if.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end:                                           ; preds = %for.inc.i.if.end_crit_edge, %if.end.i.if.end_crit_edge
  br i1 %probe, label %if.end.do.body_crit_edge, label %if.then2

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.body

if.then2:                                         ; preds = %if.end
  %16 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %dev.024.i = load ptr, ptr %devices.i, align 4
  %cmp.not26.i = icmp eq ptr %dev.024.i, %devices.i
  br i1 %cmp.not26.i, label %if.then2.do.body_crit_edge, label %if.then2.for.body.i21_crit_edge

if.then2.for.body.i21_crit_edge:                  ; preds = %if.then2
  br label %for.body.i21

if.then2.do.body_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.body

for.body.i21:                                     ; preds = %for.inc.i26.for.body.i21_crit_edge, %if.then2.for.body.i21_crit_edge
  %dev.027.i = phi ptr [ %dev.0.i24, %for.inc.i26.for.body.i21_crit_edge ], [ %dev.024.i, %if.then2.for.body.i21_crit_edge ]
  %slot3.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i, i32 0, i32 5
  %17 = ptrtoint ptr %slot3.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %slot3.i, align 8
  %tobool.not.i19 = icmp ne ptr %18, null
  %cmp5.not.i = icmp eq ptr %18, %slot
  %or.cond.i20 = and i1 %tobool.not.i19, %cmp5.not.i
  br i1 %or.cond.i20, label %if.end.i23, label %for.body.i21.for.inc.i26_crit_edge

for.body.i21.for.inc.i26_crit_edge:               ; preds = %for.body.i21
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i26

if.end.i23:                                       ; preds = %for.body.i21
  tail call void @pci_cfg_access_lock(ptr noundef %dev.027.i) #24
  %mutex.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i, i32 0, i32 44, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i.i, i32 noundef 0) #24
  %subordinate.i22 = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i, i32 0, i32 2
  %19 = ptrtoint ptr %subordinate.i22 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %subordinate.i22, align 4
  %tobool6.not.i = icmp eq ptr %20, null
  br i1 %tobool6.not.i, label %if.end.i23.for.inc.i26_crit_edge, label %if.then7.i

if.end.i23.for.inc.i26_crit_edge:                 ; preds = %if.end.i23
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i26

if.then7.i:                                       ; preds = %if.end.i23
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_lock(ptr noundef nonnull %20) #24
  br label %for.inc.i26

for.inc.i26:                                      ; preds = %if.then7.i, %if.end.i23.for.inc.i26_crit_edge, %for.body.i21.for.inc.i26_crit_edge
  %21 = ptrtoint ptr %dev.027.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %dev.0.i24 = load ptr, ptr %dev.027.i, align 4
  %22 = ptrtoint ptr %slot to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %slot, align 4
  %devices2.i = getelementptr inbounds %struct.pci_bus, ptr %23, i32 0, i32 3
  %cmp.not.i25 = icmp eq ptr %dev.0.i24, %devices2.i
  br i1 %cmp.not.i25, label %for.inc.i26.do.body_crit_edge, label %for.inc.i26.for.body.i21_crit_edge

for.inc.i26.for.body.i21_crit_edge:               ; preds = %for.inc.i26
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i21

for.inc.i26.do.body_crit_edge:                    ; preds = %for.inc.i26
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.body

do.body:                                          ; preds = %for.inc.i26.do.body_crit_edge, %if.then2.do.body_crit_edge, %if.end.do.body_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.11, i32 noundef 5711) #24
  %hotplug = getelementptr inbounds %struct.pci_slot, ptr %slot, i32 0, i32 2
  %24 = ptrtoint ptr %hotplug to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %hotplug, align 4
  %tobool.not.i27 = icmp eq ptr %25, null
  br i1 %tobool.not.i27, label %do.body.pci_reset_hotplug_slot.exit_crit_edge, label %lor.lhs.false.i

do.body.pci_reset_hotplug_slot.exit_crit_edge:    ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_reset_hotplug_slot.exit

lor.lhs.false.i:                                  ; preds = %do.body
  %owner.i = getelementptr inbounds %struct.hotplug_slot, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %owner.i, align 4
  %call.i28 = tail call zeroext i1 @try_module_get(ptr noundef %27) #24
  br i1 %call.i28, label %if.end.i29, label %lor.lhs.false.i.pci_reset_hotplug_slot.exit_crit_edge

lor.lhs.false.i.pci_reset_hotplug_slot.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_reset_hotplug_slot.exit

if.end.i29:                                       ; preds = %lor.lhs.false.i
  %28 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %25, align 4
  %reset_slot.i = getelementptr inbounds %struct.hotplug_slot_ops, ptr %29, i32 0, i32 8
  %30 = ptrtoint ptr %reset_slot.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %reset_slot.i, align 4
  %tobool1.not.i = icmp eq ptr %31, null
  br i1 %tobool1.not.i, label %if.end.i29.if.end7.i_crit_edge, label %if.then2.i

if.end.i29.if.end7.i_crit_edge:                   ; preds = %if.end.i29
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end7.i

if.then2.i:                                       ; preds = %if.end.i29
  call void @__sanitizer_cov_trace_pc() #26
  %call6.i = tail call i32 %31(ptr noundef nonnull %25, i1 noundef zeroext %probe) #24
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then2.i, %if.end.i29.if.end7.i_crit_edge
  %rc.0.i = phi i32 [ %call6.i, %if.then2.i ], [ -25, %if.end.i29.if.end7.i_crit_edge ]
  %32 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %owner.i, align 4
  tail call void @module_put(ptr noundef %33) #24
  br label %pci_reset_hotplug_slot.exit

pci_reset_hotplug_slot.exit:                      ; preds = %if.end7.i, %lor.lhs.false.i.pci_reset_hotplug_slot.exit_crit_edge, %do.body.pci_reset_hotplug_slot.exit_crit_edge
  %retval.0.i30 = phi i32 [ %rc.0.i, %if.end7.i ], [ -25, %lor.lhs.false.i.pci_reset_hotplug_slot.exit_crit_edge ], [ -25, %do.body.pci_reset_hotplug_slot.exit_crit_edge ]
  br i1 %probe, label %pci_reset_hotplug_slot.exit.cleanup_crit_edge, label %if.then10

pci_reset_hotplug_slot.exit.cleanup_crit_edge:    ; preds = %pci_reset_hotplug_slot.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then10:                                        ; preds = %pci_reset_hotplug_slot.exit
  %34 = ptrtoint ptr %slot to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %slot, align 4
  %devices.i31 = getelementptr inbounds %struct.pci_bus, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %devices.i31 to i32
  call void @__asan_load4_noabort(i32 %36)
  %dev.024.i32 = load ptr, ptr %devices.i31, align 4
  %cmp.not26.i33 = icmp eq ptr %dev.024.i32, %devices.i31
  br i1 %cmp.not26.i33, label %if.then10.cleanup_crit_edge, label %if.then10.for.body.i39_crit_edge

if.then10.for.body.i39_crit_edge:                 ; preds = %if.then10
  br label %for.body.i39

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.body.i39:                                     ; preds = %for.inc.i48.for.body.i39_crit_edge, %if.then10.for.body.i39_crit_edge
  %dev.027.i34 = phi ptr [ %dev.0.i45, %for.inc.i48.for.body.i39_crit_edge ], [ %dev.024.i32, %if.then10.for.body.i39_crit_edge ]
  %slot3.i35 = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i34, i32 0, i32 5
  %37 = ptrtoint ptr %slot3.i35 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %slot3.i35, align 8
  %tobool.not.i36 = icmp ne ptr %38, null
  %cmp5.not.i37 = icmp eq ptr %38, %slot
  %or.cond.i38 = and i1 %tobool.not.i36, %cmp5.not.i37
  br i1 %or.cond.i38, label %if.end.i42, label %for.body.i39.for.inc.i48_crit_edge

for.body.i39.for.inc.i48_crit_edge:               ; preds = %for.body.i39
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i48

if.end.i42:                                       ; preds = %for.body.i39
  %subordinate.i40 = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i34, i32 0, i32 2
  %39 = ptrtoint ptr %subordinate.i40 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %subordinate.i40, align 4
  %tobool6.not.i41 = icmp eq ptr %40, null
  br i1 %tobool6.not.i41, label %if.end.i42.if.end9.i_crit_edge, label %if.then7.i43

if.end.i42.if.end9.i_crit_edge:                   ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9.i

if.then7.i43:                                     ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_unlock(ptr noundef nonnull %40) #24
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then7.i43, %if.end.i42.if.end9.i_crit_edge
  %mutex.i.i.i44 = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i34, i32 0, i32 44, i32 10
  tail call void @mutex_unlock(ptr noundef %mutex.i.i.i44) #24
  tail call void @pci_cfg_access_unlock(ptr noundef %dev.027.i34) #24
  br label %for.inc.i48

for.inc.i48:                                      ; preds = %if.end9.i, %for.body.i39.for.inc.i48_crit_edge
  %41 = ptrtoint ptr %dev.027.i34 to i32
  call void @__asan_load4_noabort(i32 %41)
  %dev.0.i45 = load ptr, ptr %dev.027.i34, align 4
  %42 = ptrtoint ptr %slot to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %slot, align 4
  %devices2.i46 = getelementptr inbounds %struct.pci_bus, ptr %43, i32 0, i32 3
  %cmp.not.i47 = icmp eq ptr %dev.0.i45, %devices2.i46
  br i1 %cmp.not.i47, label %for.inc.i48.cleanup_crit_edge, label %for.inc.i48.for.body.i39_crit_edge

for.inc.i48.for.body.i39_crit_edge:               ; preds = %for.inc.i48
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i39

for.inc.i48.cleanup_crit_edge:                    ; preds = %for.inc.i48
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cleanup:                                          ; preds = %for.inc.i48.cleanup_crit_edge, %if.then10.cleanup_crit_edge, %pci_reset_hotplug_slot.exit.cleanup_crit_edge, %land.lhs.true21.i.cleanup_crit_edge, %if.end14.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -25, %entry.cleanup_crit_edge ], [ %retval.0.i30, %pci_reset_hotplug_slot.exit.cleanup_crit_edge ], [ %retval.0.i30, %if.then10.cleanup_crit_edge ], [ -25, %land.lhs.true.i.cleanup_crit_edge ], [ %retval.0.i30, %for.inc.i48.cleanup_crit_edge ], [ -25, %land.lhs.true21.i.cleanup_crit_edge ], [ -25, %if.end14.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_bus_error_reset(ptr nocapture noundef readonly %bridge) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %bridge, i32 0, i32 2
  %0 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %subordinate, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @pci_slot_mutex, i32 noundef 0) #24
  %slots = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %slots, align 4
  %cmp.i.not = icmp eq ptr %3, %slots
  br i1 %cmp.i.not, label %if.end.bus_reset_crit_edge, label %if.end.for.cond_crit_edge

if.end.for.cond_crit_edge:                        ; preds = %if.end
  br label %for.cond

if.end.bus_reset_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %bus_reset

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end.for.cond_crit_edge
  %.pn.in = phi ptr [ %.pn, %for.body.for.cond_crit_edge ], [ %slots, %if.end.for.cond_crit_edge ]
  %4 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %slots
  br i1 %cmp.not, label %for.cond.for.cond20_crit_edge, label %for.body

for.cond.for.cond20_crit_edge:                    ; preds = %for.cond
  br label %for.cond20

for.body:                                         ; preds = %for.cond
  %slot.0 = getelementptr i8, ptr %.pn, i32 -4
  %call.i = tail call fastcc i32 @pci_slot_reset(ptr noundef %slot.0, i1 noundef zeroext true) #24
  %tobool7.not = icmp eq i32 %call.i, 0
  br i1 %tobool7.not, label %for.body.for.cond_crit_edge, label %for.body.bus_reset_crit_edge

for.body.bus_reset_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %bus_reset

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.cond

for.cond20:                                       ; preds = %for.body25.for.cond20_crit_edge, %for.cond.for.cond20_crit_edge
  %.pn51.in = phi ptr [ %.pn51, %for.body25.for.cond20_crit_edge ], [ %slots, %for.cond.for.cond20_crit_edge ]
  %5 = ptrtoint ptr %.pn51.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn51 = load ptr, ptr %.pn51.in, align 4
  %cmp23.not = icmp eq ptr %.pn51, %slots
  br i1 %cmp23.not, label %for.end36, label %for.body25

for.body25:                                       ; preds = %for.cond20
  %slot.1 = getelementptr i8, ptr %.pn51, i32 -4
  %call26 = tail call fastcc i32 @pci_slot_reset(ptr noundef %slot.1, i1 noundef zeroext false)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %for.body25.for.cond20_crit_edge, label %for.body25.bus_reset_crit_edge

for.body25.bus_reset_crit_edge:                   ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #26
  br label %bus_reset

for.body25.for.cond20_crit_edge:                  ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.cond20

for.end36:                                        ; preds = %for.cond20
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @mutex_unlock(ptr noundef nonnull @pci_slot_mutex) #24
  br label %cleanup

bus_reset:                                        ; preds = %for.body25.bus_reset_crit_edge, %for.body.bus_reset_crit_edge, %if.end.bus_reset_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @pci_slot_mutex) #24
  %6 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %subordinate, align 4
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %self.i, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %bus_reset.cleanup_crit_edge, label %lor.lhs.false.i

bus_reset.cleanup_crit_edge:                      ; preds = %bus_reset
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %bus_reset
  %call.i52 = tail call fastcc zeroext i1 @pci_bus_resetable(ptr noundef %7) #24
  br i1 %call.i52, label %if.end3.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end3.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_lock(ptr noundef %7) #24
  tail call void @__might_sleep(ptr noundef nonnull @.str.11, i32 noundef 5780) #24
  %10 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %self.i, align 4
  tail call void @pcibios_reset_secondary_bus(ptr noundef %11) #24
  %call.i.i = tail call fastcc i32 @pci_dev_wait(ptr noundef %11, ptr noundef nonnull @.str.71) #24
  tail call fastcc void @pci_bus_unlock(ptr noundef %7) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end3.i, %lor.lhs.false.i.cleanup_crit_edge, %bus_reset.cleanup_crit_edge, %for.end36, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.end36 ], [ -25, %entry.cleanup_crit_edge ], [ %call.i.i, %if.end3.i ], [ -25, %lor.lhs.false.i.cleanup_crit_edge ], [ -25, %bus_reset.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_probe_reset_bus(ptr noundef %bus) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 4
  %0 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %self.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.pci_bus_reset.exit_crit_edge, label %lor.lhs.false.i

entry.pci_bus_reset.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_bus_reset.exit

lor.lhs.false.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %call.i = tail call fastcc zeroext i1 @pci_bus_resetable(ptr noundef %bus) #24
  %.mux.i = select i1 %call.i, i32 0, i32 -25
  br label %pci_bus_reset.exit

pci_bus_reset.exit:                               ; preds = %lor.lhs.false.i, %entry.pci_bus_reset.exit_crit_edge
  %retval.0.i = phi i32 [ %.mux.i, %lor.lhs.false.i ], [ -25, %entry.pci_bus_reset.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_reset_bus(ptr nocapture noundef readonly %pdev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %slot = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 5
  %0 = ptrtoint ptr %slot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %slot, align 8
  %call.i = tail call fastcc i32 @pci_slot_reset(ptr noundef %1, i1 noundef zeroext true) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = ptrtoint ptr %slot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %slot, align 8
  %call.i6 = tail call fastcc i32 @pci_slot_reset(ptr noundef %3, i1 noundef zeroext true) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6)
  %tobool.not.i = icmp eq i32 %call.i6, 0
  br i1 %tobool.not.i, label %if.end.i, label %cond.true.cond.end_crit_edge

cond.true.cond.end_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end.i:                                         ; preds = %cond.true
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %devices.i.i = getelementptr inbounds %struct.pci_bus, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %devices.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %dev.084.i.i = load ptr, ptr %devices.i.i, align 4
  %cmp.not86.i.i = icmp eq ptr %dev.084.i.i, %devices.i.i
  br i1 %cmp.not86.i.i, label %if.end.i.if.then3.i_crit_edge, label %if.end.i.for.body.i.i_crit_edge

if.end.i.for.body.i.i_crit_edge:                  ; preds = %if.end.i
  br label %for.body.i.i

if.end.i.if.then3.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then3.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.end.i.for.body.i.i_crit_edge
  %dev.087.i.i = phi ptr [ %dev.0.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %dev.084.i.i, %if.end.i.for.body.i.i_crit_edge ]
  %slot3.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.087.i.i, i32 0, i32 5
  %7 = ptrtoint ptr %slot3.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %slot3.i.i, align 8
  %tobool.not.i.i = icmp ne ptr %8, null
  %cmp5.not.i.i = icmp eq ptr %8, %3
  %or.cond.i.i = and i1 %tobool.not.i.i, %cmp5.not.i.i
  br i1 %or.cond.i.i, label %if.end.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  %call.i.i.i = tail call zeroext i1 @pci_cfg_access_trylock(ptr noundef %dev.087.i.i) #24
  br i1 %call.i.i.i, label %if.then.i.i.i, label %if.end.i.i.unlock.i.i_crit_edge

if.end.i.i.unlock.i.i_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %unlock.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %mutex.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.087.i.i, i32 0, i32 44, i32 10
  %call.i.i.i.i = tail call i32 @mutex_trylock(ptr noundef %mutex.i.i.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i.unlock.sink.split.i.i_crit_edge, label %if.end8.i.i

if.then.i.i.i.unlock.sink.split.i.i_crit_edge:    ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %unlock.sink.split.i.i

if.end8.i.i:                                      ; preds = %if.then.i.i.i
  %subordinate.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.087.i.i, i32 0, i32 2
  %9 = ptrtoint ptr %subordinate.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %subordinate.i.i, align 4
  %tobool9.not.i.i = icmp eq ptr %10, null
  br i1 %tobool9.not.i.i, label %if.end8.i.i.for.inc.i.i_crit_edge, label %if.then10.i.i

if.end8.i.i.for.inc.i.i_crit_edge:                ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i

if.then10.i.i:                                    ; preds = %if.end8.i.i
  %call12.i.i = tail call fastcc i32 @pci_bus_trylock(ptr noundef nonnull %10) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i.i)
  %tobool13.not.i.i = icmp eq i32 %call12.i.i, 0
  br i1 %tobool13.not.i.i, label %if.then14.i.i, label %if.then10.i.i.for.inc.i.i_crit_edge

if.then10.i.i.for.inc.i.i_crit_edge:              ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i.i

if.then14.i.i:                                    ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @mutex_unlock(ptr noundef %mutex.i.i.i.i) #24
  br label %unlock.sink.split.i.i

for.inc.i.i:                                      ; preds = %if.then10.i.i.for.inc.i.i_crit_edge, %if.end8.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %11 = ptrtoint ptr %dev.087.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %dev.0.i.i = load ptr, ptr %dev.087.i.i, align 4
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %3, align 4
  %devices2.i.i = getelementptr inbounds %struct.pci_bus, ptr %13, i32 0, i32 3
  %cmp.not.i.i = icmp eq ptr %dev.0.i.i, %devices2.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.if.then3.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i.i

for.inc.i.i.if.then3.i_crit_edge:                 ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then3.i

unlock.sink.split.i.i:                            ; preds = %if.then14.i.i, %if.then.i.i.i.unlock.sink.split.i.i_crit_edge
  tail call void @pci_cfg_access_unlock(ptr noundef %dev.087.i.i) #24
  br label %unlock.i.i

unlock.i.i:                                       ; preds = %unlock.sink.split.i.i, %if.end.i.i.unlock.i.i_crit_edge
  %dev.1.in88.i.i = getelementptr inbounds %struct.list_head, ptr %dev.087.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %dev.1.in88.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %dev.189.i.i = load ptr, ptr %dev.1.in88.i.i, align 4
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %3, align 4
  %devices2990.i.i = getelementptr inbounds %struct.pci_bus, ptr %16, i32 0, i32 3
  %cmp30.not91.i.i = icmp eq ptr %dev.189.i.i, %devices2990.i.i
  br i1 %cmp30.not91.i.i, label %unlock.i.i.cond.end_crit_edge, label %unlock.i.i.for.body32.i.i_crit_edge

unlock.i.i.for.body32.i.i_crit_edge:              ; preds = %unlock.i.i
  br label %for.body32.i.i

unlock.i.i.cond.end_crit_edge:                    ; preds = %unlock.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

for.body32.i.i:                                   ; preds = %for.inc45.i.i.for.body32.i.i_crit_edge, %unlock.i.i.for.body32.i.i_crit_edge
  %dev.192.i.i = phi ptr [ %dev.1.i.i, %for.inc45.i.i.for.body32.i.i_crit_edge ], [ %dev.189.i.i, %unlock.i.i.for.body32.i.i_crit_edge ]
  %slot33.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.192.i.i, i32 0, i32 5
  %17 = ptrtoint ptr %slot33.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %slot33.i.i, align 8
  %tobool34.not.i.i = icmp ne ptr %18, null
  %cmp37.not.i.i = icmp eq ptr %18, %3
  %or.cond74.i.i = and i1 %tobool34.not.i.i, %cmp37.not.i.i
  br i1 %or.cond74.i.i, label %if.end39.i.i, label %for.body32.i.i.for.inc45.i.i_crit_edge

for.body32.i.i.for.inc45.i.i_crit_edge:           ; preds = %for.body32.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc45.i.i

if.end39.i.i:                                     ; preds = %for.body32.i.i
  %subordinate40.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.192.i.i, i32 0, i32 2
  %19 = ptrtoint ptr %subordinate40.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %subordinate40.i.i, align 4
  %tobool41.not.i.i = icmp eq ptr %20, null
  br i1 %tobool41.not.i.i, label %if.end39.i.i.if.end44.i.i_crit_edge, label %if.then42.i.i

if.end39.i.i.if.end44.i.i_crit_edge:              ; preds = %if.end39.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end44.i.i

if.then42.i.i:                                    ; preds = %if.end39.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_unlock(ptr noundef nonnull %20) #24
  br label %if.end44.i.i

if.end44.i.i:                                     ; preds = %if.then42.i.i, %if.end39.i.i.if.end44.i.i_crit_edge
  %mutex.i.i76.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.192.i.i, i32 0, i32 44, i32 10
  tail call void @mutex_unlock(ptr noundef %mutex.i.i76.i.i) #24
  tail call void @pci_cfg_access_unlock(ptr noundef %dev.192.i.i) #24
  br label %for.inc45.i.i

for.inc45.i.i:                                    ; preds = %if.end44.i.i, %for.body32.i.i.for.inc45.i.i_crit_edge
  %dev.1.in.i.i = getelementptr inbounds %struct.list_head, ptr %dev.192.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %dev.1.in.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %dev.1.i.i = load ptr, ptr %dev.1.in.i.i, align 4
  %22 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %3, align 4
  %devices29.i.i = getelementptr inbounds %struct.pci_bus, ptr %23, i32 0, i32 3
  %cmp30.not.i.i = icmp eq ptr %dev.1.i.i, %devices29.i.i
  br i1 %cmp30.not.i.i, label %for.inc45.i.i.cond.end_crit_edge, label %for.inc45.i.i.for.body32.i.i_crit_edge

for.inc45.i.i.for.body32.i.i_crit_edge:           ; preds = %for.inc45.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body32.i.i

for.inc45.i.i.cond.end_crit_edge:                 ; preds = %for.inc45.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.then3.i:                                       ; preds = %for.inc.i.i.if.then3.i_crit_edge, %if.end.i.if.then3.i_crit_edge
  %24 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %3, align 4
  %devices.i16.i = getelementptr inbounds %struct.pci_bus, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %devices.i16.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %dev.024.i.i = load ptr, ptr %devices.i16.i, align 4
  %cmp.not26.i.i = icmp eq ptr %dev.024.i.i, %devices.i16.i
  br i1 %cmp.not26.i.i, label %if.then3.i.pci_slot_save_and_disable_locked.exit.i_crit_edge, label %if.then3.i.for.body.i21.i_crit_edge

if.then3.i.for.body.i21.i_crit_edge:              ; preds = %if.then3.i
  br label %for.body.i21.i

if.then3.i.pci_slot_save_and_disable_locked.exit.i_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_slot_save_and_disable_locked.exit.i

for.body.i21.i:                                   ; preds = %for.inc.i27.i.for.body.i21.i_crit_edge, %if.then3.i.for.body.i21.i_crit_edge
  %dev.027.i.i = phi ptr [ %dev.0.i24.i, %for.inc.i27.i.for.body.i21.i_crit_edge ], [ %dev.024.i.i, %if.then3.i.for.body.i21.i_crit_edge ]
  %slot3.i17.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i.i, i32 0, i32 5
  %27 = ptrtoint ptr %slot3.i17.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %slot3.i17.i, align 8
  %tobool.not.i18.i = icmp ne ptr %28, null
  %cmp5.not.i19.i = icmp eq ptr %28, %3
  %or.cond.i20.i = and i1 %tobool.not.i18.i, %cmp5.not.i19.i
  br i1 %or.cond.i20.i, label %if.end.i23.i, label %for.body.i21.i.for.inc.i27.i_crit_edge

for.body.i21.i.for.inc.i27.i_crit_edge:           ; preds = %for.body.i21.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i27.i

if.end.i23.i:                                     ; preds = %for.body.i21.i
  tail call fastcc void @pci_dev_save_and_disable(ptr noundef %dev.027.i.i) #24
  %subordinate.i22.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i.i, i32 0, i32 2
  %29 = ptrtoint ptr %subordinate.i22.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %subordinate.i22.i, align 4
  %tobool6.not.i.i = icmp eq ptr %30, null
  br i1 %tobool6.not.i.i, label %if.end.i23.i.for.inc.i27.i_crit_edge, label %if.then7.i.i

if.end.i23.i.for.inc.i27.i_crit_edge:             ; preds = %if.end.i23.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i27.i

if.then7.i.i:                                     ; preds = %if.end.i23.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_save_and_disable_locked(ptr noundef nonnull %30) #24
  br label %for.inc.i27.i

for.inc.i27.i:                                    ; preds = %if.then7.i.i, %if.end.i23.i.for.inc.i27.i_crit_edge, %for.body.i21.i.for.inc.i27.i_crit_edge
  %31 = ptrtoint ptr %dev.027.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %dev.0.i24.i = load ptr, ptr %dev.027.i.i, align 4
  %32 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %3, align 4
  %devices2.i25.i = getelementptr inbounds %struct.pci_bus, ptr %33, i32 0, i32 3
  %cmp.not.i26.i = icmp eq ptr %dev.0.i24.i, %devices2.i25.i
  br i1 %cmp.not.i26.i, label %for.inc.i27.i.pci_slot_save_and_disable_locked.exit.i_crit_edge, label %for.inc.i27.i.for.body.i21.i_crit_edge

for.inc.i27.i.for.body.i21.i_crit_edge:           ; preds = %for.inc.i27.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i21.i

for.inc.i27.i.pci_slot_save_and_disable_locked.exit.i_crit_edge: ; preds = %for.inc.i27.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_slot_save_and_disable_locked.exit.i

pci_slot_save_and_disable_locked.exit.i:          ; preds = %for.inc.i27.i.pci_slot_save_and_disable_locked.exit.i_crit_edge, %if.then3.i.pci_slot_save_and_disable_locked.exit.i_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.11, i32 noundef 5758) #24
  %hotplug.i = getelementptr inbounds %struct.pci_slot, ptr %3, i32 0, i32 2
  %34 = ptrtoint ptr %hotplug.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %hotplug.i, align 4
  %tobool.not.i28.i = icmp eq ptr %35, null
  br i1 %tobool.not.i28.i, label %pci_slot_save_and_disable_locked.exit.i.pci_reset_hotplug_slot.exit.i_crit_edge, label %lor.lhs.false.i.i

pci_slot_save_and_disable_locked.exit.i.pci_reset_hotplug_slot.exit.i_crit_edge: ; preds = %pci_slot_save_and_disable_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_reset_hotplug_slot.exit.i

lor.lhs.false.i.i:                                ; preds = %pci_slot_save_and_disable_locked.exit.i
  %owner.i.i = getelementptr inbounds %struct.hotplug_slot, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %owner.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %owner.i.i, align 4
  %call.i.i = tail call zeroext i1 @try_module_get(ptr noundef %37) #24
  br i1 %call.i.i, label %if.end.i29.i, label %lor.lhs.false.i.i.pci_reset_hotplug_slot.exit.i_crit_edge

lor.lhs.false.i.i.pci_reset_hotplug_slot.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_reset_hotplug_slot.exit.i

if.end.i29.i:                                     ; preds = %lor.lhs.false.i.i
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %35, align 4
  %reset_slot.i.i = getelementptr inbounds %struct.hotplug_slot_ops, ptr %39, i32 0, i32 8
  %40 = ptrtoint ptr %reset_slot.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %reset_slot.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %41, null
  br i1 %tobool1.not.i.i, label %if.end.i29.i.if.end7.i.i_crit_edge, label %if.then2.i.i

if.end.i29.i.if.end7.i.i_crit_edge:               ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end7.i.i

if.then2.i.i:                                     ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #26
  %call6.i.i = tail call i32 %41(ptr noundef nonnull %35, i1 noundef zeroext false) #24
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.then2.i.i, %if.end.i29.i.if.end7.i.i_crit_edge
  %rc.0.i.i = phi i32 [ %call6.i.i, %if.then2.i.i ], [ -25, %if.end.i29.i.if.end7.i.i_crit_edge ]
  %42 = ptrtoint ptr %owner.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %owner.i.i, align 4
  tail call void @module_put(ptr noundef %43) #24
  br label %pci_reset_hotplug_slot.exit.i

pci_reset_hotplug_slot.exit.i:                    ; preds = %if.end7.i.i, %lor.lhs.false.i.i.pci_reset_hotplug_slot.exit.i_crit_edge, %pci_slot_save_and_disable_locked.exit.i.pci_reset_hotplug_slot.exit.i_crit_edge
  %retval.0.i30.i = phi i32 [ %rc.0.i.i, %if.end7.i.i ], [ -25, %lor.lhs.false.i.i.pci_reset_hotplug_slot.exit.i_crit_edge ], [ -25, %pci_slot_save_and_disable_locked.exit.i.pci_reset_hotplug_slot.exit.i_crit_edge ]
  %44 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %3, align 4
  %devices.i31.i = getelementptr inbounds %struct.pci_bus, ptr %45, i32 0, i32 3
  %46 = ptrtoint ptr %devices.i31.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %dev.024.i32.i = load ptr, ptr %devices.i31.i, align 4
  %cmp.not26.i33.i = icmp eq ptr %dev.024.i32.i, %devices.i31.i
  br i1 %cmp.not26.i33.i, label %pci_reset_hotplug_slot.exit.i.pci_slot_restore_locked.exit.i_crit_edge, label %pci_reset_hotplug_slot.exit.i.for.body.i39.i_crit_edge

pci_reset_hotplug_slot.exit.i.for.body.i39.i_crit_edge: ; preds = %pci_reset_hotplug_slot.exit.i
  br label %for.body.i39.i

pci_reset_hotplug_slot.exit.i.pci_slot_restore_locked.exit.i_crit_edge: ; preds = %pci_reset_hotplug_slot.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_slot_restore_locked.exit.i

for.body.i39.i:                                   ; preds = %for.inc.i49.i.for.body.i39.i_crit_edge, %pci_reset_hotplug_slot.exit.i.for.body.i39.i_crit_edge
  %dev.027.i34.i = phi ptr [ %dev.0.i46.i, %for.inc.i49.i.for.body.i39.i_crit_edge ], [ %dev.024.i32.i, %pci_reset_hotplug_slot.exit.i.for.body.i39.i_crit_edge ]
  %slot3.i35.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i34.i, i32 0, i32 5
  %47 = ptrtoint ptr %slot3.i35.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %slot3.i35.i, align 8
  %tobool.not.i36.i = icmp ne ptr %48, null
  %cmp5.not.i37.i = icmp eq ptr %48, %3
  %or.cond.i38.i = and i1 %tobool.not.i36.i, %cmp5.not.i37.i
  br i1 %or.cond.i38.i, label %if.end.i41.i, label %for.body.i39.i.for.inc.i49.i_crit_edge

for.body.i39.i.for.inc.i49.i_crit_edge:           ; preds = %for.body.i39.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i49.i

if.end.i41.i:                                     ; preds = %for.body.i39.i
  %driver.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i34.i, i32 0, i32 27
  %49 = ptrtoint ptr %driver.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %driver.i.i.i, align 4
  %tobool.not.i.i40.i = icmp eq ptr %50, null
  br i1 %tobool.not.i.i40.i, label %cond.end.thread.i.i.i, label %cond.end.i.i.i

cond.end.thread.i.i.i:                            ; preds = %if.end.i41.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_restore_state(ptr noundef %dev.027.i34.i) #24
  br label %pci_dev_restore.exit.i.i

cond.end.i.i.i:                                   ; preds = %if.end.i41.i
  %err_handler2.i.i.i = getelementptr inbounds %struct.pci_driver, ptr %50, i32 0, i32 11
  %51 = ptrtoint ptr %err_handler2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %err_handler2.i.i.i, align 4
  tail call void @pci_restore_state(ptr noundef %dev.027.i34.i) #24
  %tobool3.not.i.i.i = icmp eq ptr %52, null
  br i1 %tobool3.not.i.i.i, label %cond.end.i.i.i.pci_dev_restore.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

cond.end.i.i.i.pci_dev_restore.exit.i.i_crit_edge: ; preds = %cond.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_restore.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %cond.end.i.i.i
  %reset_done.i.i.i = getelementptr inbounds %struct.pci_error_handlers, ptr %52, i32 0, i32 4
  %53 = ptrtoint ptr %reset_done.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %reset_done.i.i.i, align 4
  %tobool4.not.i.i.i = icmp eq ptr %54, null
  br i1 %tobool4.not.i.i.i, label %land.lhs.true.i.i.i.pci_dev_restore.exit.i.i_crit_edge, label %if.then.i.i42.i

land.lhs.true.i.i.i.pci_dev_restore.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_restore.exit.i.i

if.then.i.i42.i:                                  ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void %54(ptr noundef %dev.027.i34.i) #24
  br label %pci_dev_restore.exit.i.i

pci_dev_restore.exit.i.i:                         ; preds = %if.then.i.i42.i, %land.lhs.true.i.i.i.pci_dev_restore.exit.i.i_crit_edge, %cond.end.i.i.i.pci_dev_restore.exit.i.i_crit_edge, %cond.end.thread.i.i.i
  %subordinate.i43.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i34.i, i32 0, i32 2
  %55 = ptrtoint ptr %subordinate.i43.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %subordinate.i43.i, align 4
  %tobool6.not.i44.i = icmp eq ptr %56, null
  br i1 %tobool6.not.i44.i, label %pci_dev_restore.exit.i.i.for.inc.i49.i_crit_edge, label %if.then7.i45.i

pci_dev_restore.exit.i.i.for.inc.i49.i_crit_edge: ; preds = %pci_dev_restore.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i49.i

if.then7.i45.i:                                   ; preds = %pci_dev_restore.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_restore_locked(ptr noundef nonnull %56) #24
  br label %for.inc.i49.i

for.inc.i49.i:                                    ; preds = %if.then7.i45.i, %pci_dev_restore.exit.i.i.for.inc.i49.i_crit_edge, %for.body.i39.i.for.inc.i49.i_crit_edge
  %57 = ptrtoint ptr %dev.027.i34.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %dev.0.i46.i = load ptr, ptr %dev.027.i34.i, align 4
  %58 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %3, align 4
  %devices2.i47.i = getelementptr inbounds %struct.pci_bus, ptr %59, i32 0, i32 3
  %cmp.not.i48.i = icmp eq ptr %dev.0.i46.i, %devices2.i47.i
  br i1 %cmp.not.i48.i, label %for.inc.i49.i.pci_slot_restore_locked.exit.i_crit_edge, label %for.inc.i49.i.for.body.i39.i_crit_edge

for.inc.i49.i.for.body.i39.i_crit_edge:           ; preds = %for.inc.i49.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i39.i

for.inc.i49.i.pci_slot_restore_locked.exit.i_crit_edge: ; preds = %for.inc.i49.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_slot_restore_locked.exit.i

pci_slot_restore_locked.exit.i:                   ; preds = %for.inc.i49.i.pci_slot_restore_locked.exit.i_crit_edge, %pci_reset_hotplug_slot.exit.i.pci_slot_restore_locked.exit.i_crit_edge
  %60 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %3, align 4
  %devices.i50.i = getelementptr inbounds %struct.pci_bus, ptr %61, i32 0, i32 3
  %62 = ptrtoint ptr %devices.i50.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %dev.024.i51.i = load ptr, ptr %devices.i50.i, align 4
  %cmp.not26.i52.i = icmp eq ptr %dev.024.i51.i, %devices.i50.i
  br i1 %cmp.not26.i52.i, label %pci_slot_restore_locked.exit.i.cond.end_crit_edge, label %pci_slot_restore_locked.exit.i.for.body.i58.i_crit_edge

pci_slot_restore_locked.exit.i.for.body.i58.i_crit_edge: ; preds = %pci_slot_restore_locked.exit.i
  br label %for.body.i58.i

pci_slot_restore_locked.exit.i.cond.end_crit_edge: ; preds = %pci_slot_restore_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

for.body.i58.i:                                   ; preds = %for.inc.i67.i.for.body.i58.i_crit_edge, %pci_slot_restore_locked.exit.i.for.body.i58.i_crit_edge
  %dev.027.i53.i = phi ptr [ %dev.0.i64.i, %for.inc.i67.i.for.body.i58.i_crit_edge ], [ %dev.024.i51.i, %pci_slot_restore_locked.exit.i.for.body.i58.i_crit_edge ]
  %slot3.i54.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i53.i, i32 0, i32 5
  %63 = ptrtoint ptr %slot3.i54.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %slot3.i54.i, align 8
  %tobool.not.i55.i = icmp ne ptr %64, null
  %cmp5.not.i56.i = icmp eq ptr %64, %3
  %or.cond.i57.i = and i1 %tobool.not.i55.i, %cmp5.not.i56.i
  br i1 %or.cond.i57.i, label %if.end.i61.i, label %for.body.i58.i.for.inc.i67.i_crit_edge

for.body.i58.i.for.inc.i67.i_crit_edge:           ; preds = %for.body.i58.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc.i67.i

if.end.i61.i:                                     ; preds = %for.body.i58.i
  %subordinate.i59.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i53.i, i32 0, i32 2
  %65 = ptrtoint ptr %subordinate.i59.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %subordinate.i59.i, align 4
  %tobool6.not.i60.i = icmp eq ptr %66, null
  br i1 %tobool6.not.i60.i, label %if.end.i61.i.if.end9.i.i_crit_edge, label %if.then7.i62.i

if.end.i61.i.if.end9.i.i_crit_edge:               ; preds = %if.end.i61.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9.i.i

if.then7.i62.i:                                   ; preds = %if.end.i61.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_unlock(ptr noundef nonnull %66) #24
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.then7.i62.i, %if.end.i61.i.if.end9.i.i_crit_edge
  %mutex.i.i.i63.i = getelementptr inbounds %struct.pci_dev, ptr %dev.027.i53.i, i32 0, i32 44, i32 10
  tail call void @mutex_unlock(ptr noundef %mutex.i.i.i63.i) #24
  tail call void @pci_cfg_access_unlock(ptr noundef %dev.027.i53.i) #24
  br label %for.inc.i67.i

for.inc.i67.i:                                    ; preds = %if.end9.i.i, %for.body.i58.i.for.inc.i67.i_crit_edge
  %67 = ptrtoint ptr %dev.027.i53.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %dev.0.i64.i = load ptr, ptr %dev.027.i53.i, align 4
  %68 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %3, align 4
  %devices2.i65.i = getelementptr inbounds %struct.pci_bus, ptr %69, i32 0, i32 3
  %cmp.not.i66.i = icmp eq ptr %dev.0.i64.i, %devices2.i65.i
  br i1 %cmp.not.i66.i, label %for.inc.i67.i.cond.end_crit_edge, label %for.inc.i67.i.for.body.i58.i_crit_edge

for.inc.i67.i.for.body.i58.i_crit_edge:           ; preds = %for.inc.i67.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body.i58.i

for.inc.i67.i.cond.end_crit_edge:                 ; preds = %for.inc.i67.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

cond.false:                                       ; preds = %entry
  %bus = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 1
  %70 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %bus, align 8
  %self.i.i = getelementptr inbounds %struct.pci_bus, ptr %71, i32 0, i32 4
  %72 = ptrtoint ptr %self.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %self.i.i, align 4
  %tobool.not.i.i7 = icmp eq ptr %73, null
  br i1 %tobool.not.i.i7, label %cond.false.cond.end_crit_edge, label %lor.lhs.false.i.i9

cond.false.cond.end_crit_edge:                    ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

lor.lhs.false.i.i9:                               ; preds = %cond.false
  %call.i.i8 = tail call fastcc zeroext i1 @pci_bus_resetable(ptr noundef %71) #24
  br i1 %call.i.i8, label %if.end.i10, label %lor.lhs.false.i.i9.cond.end_crit_edge

lor.lhs.false.i.i9.cond.end_crit_edge:            ; preds = %lor.lhs.false.i.i9
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end.i10:                                       ; preds = %lor.lhs.false.i.i9
  %call1.i = tail call fastcc i32 @pci_bus_trylock(ptr noundef %71) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end.i10.cond.end_crit_edge, label %if.then3.i11

if.end.i10.cond.end_crit_edge:                    ; preds = %if.end.i10
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.then3.i11:                                     ; preds = %if.end.i10
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_save_and_disable_locked(ptr noundef %71) #24
  tail call void @__might_sleep(ptr noundef nonnull @.str.11, i32 noundef 5852) #24
  %74 = ptrtoint ptr %self.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %self.i.i, align 4
  tail call void @pcibios_reset_secondary_bus(ptr noundef %75) #24
  %call.i16.i = tail call fastcc i32 @pci_dev_wait(ptr noundef %75, ptr noundef nonnull @.str.71) #24
  tail call fastcc void @pci_bus_restore_locked(ptr noundef %71) #24
  tail call fastcc void @pci_bus_unlock(ptr noundef %71) #24
  br label %cond.end

cond.end:                                         ; preds = %if.then3.i11, %if.end.i10.cond.end_crit_edge, %lor.lhs.false.i.i9.cond.end_crit_edge, %cond.false.cond.end_crit_edge, %for.inc.i67.i.cond.end_crit_edge, %pci_slot_restore_locked.exit.i.cond.end_crit_edge, %for.inc45.i.i.cond.end_crit_edge, %unlock.i.i.cond.end_crit_edge, %cond.true.cond.end_crit_edge
  %cond = phi i32 [ %call.i6, %cond.true.cond.end_crit_edge ], [ %retval.0.i30.i, %pci_slot_restore_locked.exit.i.cond.end_crit_edge ], [ -11, %unlock.i.i.cond.end_crit_edge ], [ %call.i16.i, %if.then3.i11 ], [ -11, %if.end.i10.cond.end_crit_edge ], [ -25, %lor.lhs.false.i.i9.cond.end_crit_edge ], [ -25, %cond.false.cond.end_crit_edge ], [ %retval.0.i30.i, %for.inc.i67.i.cond.end_crit_edge ], [ -11, %for.inc45.i.i.cond.end_crit_edge ]
  ret i32 %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcix_get_max_mmrbc(ptr noundef %dev) #5 align 64 {
entry:
  %stat = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %stat) #24
  %0 = ptrtoint ptr %stat to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %stat, align 4, !annotation !731
  %call = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 7)
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call)
  %tobool.not = icmp eq i8 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = zext i8 %call to i32
  %add = add nuw nsw i32 %conv, 4
  %call1 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %stat) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %1 = ptrtoint ptr %stat to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %stat, align 4
  %and = lshr i32 %2, 21
  %shr = and i32 %and, 3
  %shl = shl nuw nsw i32 512, %shr
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %shl, %if.end4 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %stat) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcix_get_mmrbc(ptr noundef %dev) #5 align 64 {
entry:
  %cmd = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd) #24
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cmd, align 2, !annotation !731
  %call = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 7)
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call)
  %tobool.not = icmp eq i8 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = zext i8 %call to i32
  %add = add nuw nsw i32 %conv, 2
  %call1 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %cmd) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %1 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %cmd, align 2
  %3 = lshr i16 %2, 2
  %4 = and i16 %3, 3
  %5 = zext i16 %4 to i32
  %shl = shl nuw nsw i32 512, %5
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %shl, %if.end4 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcix_set_mmrbc(ptr noundef %dev, i32 noundef %mmrbc) #5 align 64 {
entry:
  %stat = alloca i32, align 4
  %cmd = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %stat) #24
  %0 = ptrtoint ptr %stat to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %stat, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd) #24
  %1 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %cmd, align 2, !annotation !731
  %2 = add i32 %mmrbc, -512
  call void @__sanitizer_cov_trace_const_cmp4(i32 3585, i32 %2)
  %3 = icmp ult i32 %2, 3585
  %4 = tail call i32 @llvm.ctpop.i32(i32 %mmrbc) #24, !range !734
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %cmp1.i = icmp ult i32 %4, 2
  %or.cond61 = and i1 %3, %cmp1.i
  br i1 %or.cond61, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = tail call i32 @llvm.cttz.i32(i32 %mmrbc, i1 true), !range !734
  %sub = add nsw i32 %5, -9
  %call3 = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 7)
  %conv = zext i8 %call3 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call3)
  %tobool.not = icmp eq i8 %call3, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add = add nuw nsw i32 %conv, 4
  %call6 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %stat) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end9, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %6 = ptrtoint ptr %stat to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %stat, align 4
  %and = lshr i32 %7, 21
  %shr = and i32 %and, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %shr)
  %cmp10 = icmp ugt i32 %sub, %shr
  br i1 %cmp10, label %if.end9.cleanup_crit_edge, label %if.end13

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end13:                                         ; preds = %if.end9
  %add14 = add nuw nsw i32 %conv, 2
  %call15 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add14, ptr noundef nonnull %cmd) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end18:                                         ; preds = %if.end13
  %8 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %cmd, align 2
  %10 = lshr i16 %9, 2
  %11 = and i16 %10, 3
  %12 = zext i16 %11 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %12)
  %cmp22.not = icmp eq i32 %sub, %12
  br i1 %cmp22.not, label %if.end18.if.end42_crit_edge, label %if.then24

if.end18.if.end42_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end42

if.then24:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %12)
  %cmp25 = icmp ugt i32 %sub, %12
  br i1 %cmp25, label %land.lhs.true, label %if.then24.if.end31_crit_edge

if.then24.if.end31_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end31

land.lhs.true:                                    ; preds = %if.then24
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %13 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %bus, align 8
  %bus_flags = getelementptr inbounds %struct.pci_bus, ptr %14, i32 0, i32 19
  %15 = ptrtoint ptr %bus_flags to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %bus_flags, align 2
  %17 = and i16 %16, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool29.not = icmp eq i16 %17, 0
  br i1 %tobool29.not, label %land.lhs.true.if.end31_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true.if.end31_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end31

if.end31:                                         ; preds = %land.lhs.true.if.end31_crit_edge, %if.then24.if.end31_crit_edge
  %18 = and i16 %9, -13
  %sub.tr = trunc i32 %sub to i16
  %19 = shl nsw i16 %sub.tr, 2
  %conv36 = or i16 %18, %19
  %20 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %conv36, ptr %cmd, align 2
  %call38 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add14, i16 noundef zeroext %conv36) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %if.end31.if.end42_crit_edge, label %if.end31.cleanup_crit_edge

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end31.if.end42_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end42

if.end42:                                         ; preds = %if.end31.if.end42_crit_edge, %if.end18.if.end42_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end42, %if.end31.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end13.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end42 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end5.cleanup_crit_edge ], [ -7, %if.end9.cleanup_crit_edge ], [ -22, %if.end13.cleanup_crit_edge ], [ -5, %land.lhs.true.cleanup_crit_edge ], [ -5, %if.end31.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %stat) #24
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #15

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_get_readrq(ptr noundef %dev) #5 align 64 {
entry:
  %ctl = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctl) #24
  %0 = ptrtoint ptr %ctl to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %ctl, align 2, !annotation !731
  %call = call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 8, ptr noundef nonnull %ctl) #24
  %1 = ptrtoint ptr %ctl to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %ctl, align 2
  %3 = lshr i16 %2, 12
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  %shl = shl nuw nsw i32 128, %5
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctl) #24
  ret i32 %shl
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_set_readrq(ptr noundef %dev, i32 noundef %rq) #5 align 64 {
entry:
  %ctl.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = add i32 %rq, -128
  call void @__sanitizer_cov_trace_const_cmp4(i32 3969, i32 %0)
  %1 = icmp ult i32 %0, 3969
  %2 = tail call i32 @llvm.ctpop.i32(i32 %rq) #24, !range !734
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %cmp1.i = icmp ult i32 %2, 2
  %or.cond19 = and i1 %1, %cmp1.i
  br i1 %or.cond19, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load i32, ptr @pcie_bus_config, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp3 = icmp eq i32 %3, 3
  br i1 %cmp3, label %if.then4, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctl.i) #24
  %4 = ptrtoint ptr %ctl.i to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %ctl.i, align 2, !annotation !731
  %call.i = call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 8, ptr noundef nonnull %ctl.i) #24
  %5 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %ctl.i, align 2
  %7 = lshr i16 %6, 5
  %8 = and i16 %7, 7
  %9 = zext i16 %8 to i32
  %shl.i = shl nuw nsw i32 128, %9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctl.i) #24
  %10 = call i32 @llvm.umin.i32(i32 %shl.i, i32 %rq)
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %if.end.if.end9_crit_edge
  %rq.addr.1 = phi i32 [ %10, %if.then4 ], [ %rq, %if.end.if.end9_crit_edge ]
  %11 = call i32 @llvm.cttz.i32(i32 %rq.addr.1, i1 true), !range !734
  %.tr = trunc i32 %11 to i16
  %12 = shl i16 %.tr, 12
  %13 = add i16 %12, -28672
  %call10 = call i32 @pcie_capability_clear_and_set_word(ptr noundef %dev, i32 noundef 8, i16 noundef zeroext 28672, i16 noundef zeroext %13) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call10)
  %cmp.i = icmp slt i32 %call10, 1
  br i1 %cmp.i, label %if.end9.cleanup_crit_edge, label %if.end.i

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.i:                                         ; preds = %if.end9
  %switch.tableidx = add i32 %call10, -129
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %switch.tableidx)
  %14 = icmp ult i32 %switch.tableidx, 9
  br i1 %14, label %switch.lookup, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

switch.lookup:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  %switch.gep = getelementptr inbounds [9 x i32], ptr @switch.table.pcie_set_readrq, i32 0, i32 %switch.tableidx
  %15 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %15)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %if.end.i.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ %call10, %if.end9.cleanup_crit_edge ], [ %switch.load, %switch.lookup ], [ -34, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_get_mps(ptr noundef %dev) #5 align 64 {
entry:
  %ctl = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctl) #24
  %0 = ptrtoint ptr %ctl to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %ctl, align 2, !annotation !731
  %call = call i32 @pcie_capability_read_word(ptr noundef %dev, i32 noundef 8, ptr noundef nonnull %ctl) #24
  %1 = ptrtoint ptr %ctl to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %ctl, align 2
  %3 = lshr i16 %2, 5
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  %shl = shl nuw nsw i32 128, %5
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctl) #24
  ret i32 %shl
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_clear_and_set_word(ptr noundef, i32 noundef, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_set_mps(ptr noundef %dev, i32 noundef %mps) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = add i32 %mps, -128
  call void @__sanitizer_cov_trace_const_cmp4(i32 3969, i32 %0)
  %1 = icmp ult i32 %0, 3969
  %2 = tail call i32 @llvm.ctpop.i32(i32 %mps) #24, !range !734
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %cmp1.i = icmp ult i32 %2, 2
  %or.cond20 = and i1 %1, %cmp1.i
  br i1 %or.cond20, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = tail call i32 @llvm.cttz.i32(i32 %mps, i1 true), !range !734
  %conv = add nuw nsw i32 %3, 65529
  %conv3 = and i32 %conv, 65535
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 22
  %4 = ptrtoint ptr %pcie_mpss to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %pcie_mpss, align 1
  %bf.lshr = lshr i8 %bf.load, 5
  %conv4 = zext i8 %bf.lshr to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv3, i32 %conv4)
  %cmp5 = icmp ugt i32 %conv3, %conv4
  br i1 %cmp5, label %if.end.cleanup_crit_edge, label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %conv.tr = trunc i32 %conv to i16
  %conv10 = shl nsw i16 %conv.tr, 5
  %call11 = tail call i32 @pcie_capability_clear_and_set_word(ptr noundef %dev, i32 noundef 8, i16 noundef zeroext 224, i16 noundef zeroext %conv10) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call11)
  %cmp.i = icmp slt i32 %call11, 1
  br i1 %cmp.i, label %if.end8.cleanup_crit_edge, label %if.end.i

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.i:                                         ; preds = %if.end8
  %switch.tableidx = add i32 %call11, -129
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %switch.tableidx)
  %5 = icmp ult i32 %switch.tableidx, 9
  br i1 %5, label %switch.lookup, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

switch.lookup:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  %switch.gep = getelementptr inbounds [9 x i32], ptr @switch.table.pcie_set_mps, i32 0, i32 %switch.tableidx
  %6 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %6)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %if.end.i.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %call11, %if.end8.cleanup_crit_edge ], [ %switch.load, %switch.lookup ], [ -34, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_bandwidth_available(ptr noundef %dev, ptr noundef writeonly %limiting_dev, ptr noundef writeonly %speed, ptr noundef writeonly %width) #5 align 64 {
entry:
  %lnksta = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %lnksta) #24
  %0 = ptrtoint ptr %lnksta to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %lnksta, align 2, !annotation !731
  %tobool.not = icmp eq ptr %speed, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %1 = ptrtoint ptr %speed to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 255, ptr %speed, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %tobool1.not = icmp eq ptr %width, null
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %if.then2

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %2 = ptrtoint ptr %width to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 255, ptr %width, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end.if.end3_crit_edge
  %tobool4.not74 = icmp eq ptr %dev, null
  br i1 %tobool4.not74, label %if.end3.while.end_crit_edge, label %while.body.lr.ph

if.end3.while.end_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end3
  %tobool40.not = icmp eq ptr %limiting_dev, null
  br label %while.body

while.body:                                       ; preds = %pci_upstream_bridge.exit.while.body_crit_edge, %while.body.lr.ph
  %bw.076 = phi i32 [ 0, %while.body.lr.ph ], [ %bw.1, %pci_upstream_bridge.exit.while.body_crit_edge ]
  %dev.addr.075 = phi ptr [ %dev, %while.body.lr.ph ], [ %24, %pci_upstream_bridge.exit.while.body_crit_edge ]
  %call = call i32 @pcie_capability_read_word(ptr noundef nonnull %dev.addr.075, i32 noundef 18, ptr noundef nonnull %lnksta) #24
  %3 = ptrtoint ptr %lnksta to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %lnksta, align 2
  %conv = zext i16 %4 to i32
  %and = and i32 %conv, 15
  %arrayidx = getelementptr [0 x i8], ptr @pcie_link_speed, i32 0, i32 %and
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  %conv5 = zext i8 %6 to i32
  %and7 = lshr i32 %conv, 4
  %7 = and i32 %and7, 63
  %switch.tableidx = add i8 %6, -21
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %switch.tableidx)
  %8 = icmp ult i8 %switch.tableidx, 5
  br i1 %8, label %switch.lookup, label %cond.false24

cond.false24:                                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  call void @__sanitizer_cov_trace_const_cmp1(i8 20, i8 %6)
  %cmp25 = icmp eq i8 %6, 20
  %cond = select i1 %cmp25, i32 2000, i32 0
  br label %cond.end34

switch.lookup:                                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  %9 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [5 x i32], ptr @switch.table.pcie_bandwidth_available, i32 0, i32 %9
  %10 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %10)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %cond.end34

cond.end34:                                       ; preds = %switch.lookup, %cond.false24
  %cond35 = phi i32 [ %cond, %cond.false24 ], [ %switch.load, %switch.lookup ]
  %mul = mul nuw nsw i32 %cond35, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bw.076)
  %tobool36.not = icmp ne i32 %bw.076, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %mul, i32 %bw.076)
  %cmp37.not = icmp ugt i32 %mul, %bw.076
  %or.cond = select i1 %tobool36.not, i1 %cmp37.not, i1 false
  br i1 %or.cond, label %cond.end34.if.end49_crit_edge, label %if.then39

cond.end34.if.end49_crit_edge:                    ; preds = %cond.end34
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end49

if.then39:                                        ; preds = %cond.end34
  br i1 %tobool40.not, label %if.then39.if.end42_crit_edge, label %if.then41

if.then39.if.end42_crit_edge:                     ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end42

if.then41:                                        ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #26
  %11 = ptrtoint ptr %limiting_dev to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %dev.addr.075, ptr %limiting_dev, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %if.then39.if.end42_crit_edge
  br i1 %tobool.not, label %if.end42.if.end45_crit_edge, label %if.then44

if.end42.if.end45_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end45

if.then44:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #26
  %12 = ptrtoint ptr %speed to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %conv5, ptr %speed, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %if.end42.if.end45_crit_edge
  br i1 %tobool1.not, label %if.end45.if.end49_crit_edge, label %if.then47

if.end45.if.end49_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end49

if.then47:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #26
  %13 = ptrtoint ptr %width to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %7, ptr %width, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end45.if.end49_crit_edge, %cond.end34.if.end49_crit_edge
  %bw.1 = phi i32 [ %mul, %if.then47 ], [ %mul, %if.end45.if.end49_crit_edge ], [ %bw.076, %cond.end34.if.end49_crit_edge ]
  %is_virtfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.075, i32 0, i32 49
  %14 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 5)
  %bf.load.i.i = load i40, ptr %is_virtfn.i.i, align 1
  %15 = and i40 %bf.load.i.i, 65536
  %tobool.not.i.i = icmp eq i40 %15, 0
  br i1 %tobool.not.i.i, label %if.end49.pci_physfn.exit.i_crit_edge, label %if.then.i.i

if.end49.pci_physfn.exit.i_crit_edge:             ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_physfn.exit.i

if.then.i.i:                                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #26
  %16 = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.075, i32 0, i32 66
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 8
  br label %pci_physfn.exit.i

pci_physfn.exit.i:                                ; preds = %if.then.i.i, %if.end49.pci_physfn.exit.i_crit_edge
  %dev.addr.0.i.i = phi ptr [ %18, %if.then.i.i ], [ %dev.addr.075, %if.end49.pci_physfn.exit.i_crit_edge ]
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i5.i = icmp eq ptr %22, null
  br i1 %tobool.not.i5.i, label %pci_physfn.exit.i.while.end_crit_edge, label %pci_upstream_bridge.exit

pci_physfn.exit.i.while.end_crit_edge:            ; preds = %pci_physfn.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

pci_upstream_bridge.exit:                         ; preds = %pci_physfn.exit.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %20, i32 0, i32 4
  %23 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %self.i, align 4
  %tobool4.not = icmp eq ptr %24, null
  br i1 %tobool4.not, label %pci_upstream_bridge.exit.while.end_crit_edge, label %pci_upstream_bridge.exit.while.body_crit_edge

pci_upstream_bridge.exit.while.body_crit_edge:    ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

pci_upstream_bridge.exit.while.end_crit_edge:     ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.end:                                        ; preds = %pci_upstream_bridge.exit.while.end_crit_edge, %pci_physfn.exit.i.while.end_crit_edge, %if.end3.while.end_crit_edge
  %bw.0.lcssa = phi i32 [ 0, %if.end3.while.end_crit_edge ], [ %bw.1, %pci_upstream_bridge.exit.while.end_crit_edge ], [ %bw.1, %pci_physfn.exit.i.while.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %lnksta) #24
  ret i32 %bw.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_get_width_cap(ptr noundef %dev) #5 align 64 {
entry:
  %lnkcap = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lnkcap) #24
  %0 = ptrtoint ptr %lnkcap to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %lnkcap, align 4, !annotation !731
  %call = call i32 @pcie_capability_read_dword(ptr noundef %dev, i32 noundef 12, ptr noundef nonnull %lnkcap) #24
  %1 = ptrtoint ptr %lnkcap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %lnkcap, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  %and = lshr i32 %2, 4
  %shr = and i32 %and, 63
  %retval.0 = select i1 %tobool.not, i32 255, i32 %shr
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lnkcap) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pcie_bandwidth_capable(ptr noundef %dev, ptr nocapture noundef %speed, ptr nocapture noundef writeonly %width) local_unnamed_addr #5 align 64 {
entry:
  %lnkcap.i39 = alloca i32, align 4
  %lnkcap2.i = alloca i32, align 4
  %lnkcap.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lnkcap2.i) #24
  %0 = ptrtoint ptr %lnkcap2.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %lnkcap2.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lnkcap.i) #24
  %1 = ptrtoint ptr %lnkcap.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %lnkcap.i, align 4, !annotation !731
  %call.i = call i32 @pcie_capability_read_dword(ptr noundef %dev, i32 noundef 44, ptr noundef nonnull %lnkcap2.i) #24
  %2 = ptrtoint ptr %lnkcap2.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %lnkcap2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %and.i = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %cond.false.i, label %if.then.i.pcie_get_speed_cap.exit_crit_edge

if.then.i.pcie_get_speed_cap.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pcie_get_speed_cap.exit

cond.false.i:                                     ; preds = %if.then.i
  %and2.i = and i32 %3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %cond.false5.i, label %cond.false.i.pcie_get_speed_cap.exit_crit_edge

cond.false.i.pcie_get_speed_cap.exit_crit_edge:   ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pcie_get_speed_cap.exit

cond.false5.i:                                    ; preds = %cond.false.i
  %and6.i = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %tobool7.not.i = icmp eq i32 %and6.i, 0
  br i1 %tobool7.not.i, label %cond.false9.i, label %cond.false5.i.pcie_get_speed_cap.exit_crit_edge

cond.false5.i.pcie_get_speed_cap.exit_crit_edge:  ; preds = %cond.false5.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pcie_get_speed_cap.exit

cond.false9.i:                                    ; preds = %cond.false5.i
  %and10.i = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i)
  %tobool11.not.i = icmp eq i32 %and10.i, 0
  br i1 %tobool11.not.i, label %cond.false13.i, label %cond.false9.i.pcie_get_speed_cap.exit_crit_edge

cond.false9.i.pcie_get_speed_cap.exit_crit_edge:  ; preds = %cond.false9.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pcie_get_speed_cap.exit

cond.false13.i:                                   ; preds = %cond.false9.i
  %and14.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i)
  %tobool15.not.i = icmp eq i32 %and14.i, 0
  br i1 %tobool15.not.i, label %cond.false17.i, label %cond.false13.i.pcie_get_speed_cap.exit_crit_edge

cond.false13.i.pcie_get_speed_cap.exit_crit_edge: ; preds = %cond.false13.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pcie_get_speed_cap.exit

cond.false17.i:                                   ; preds = %cond.false13.i
  call void @__sanitizer_cov_trace_pc() #26
  %and18.i = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %tobool19.not.i = icmp eq i32 %and18.i, 0
  %cond.i = select i1 %tobool19.not.i, i32 255, i32 20
  br label %pcie_get_speed_cap.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %call29.i = call i32 @pcie_capability_read_dword(ptr noundef %dev, i32 noundef 12, ptr noundef nonnull %lnkcap.i) #24
  %4 = ptrtoint ptr %lnkcap.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lnkcap.i, align 4
  %and30.i = and i32 %5, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and30.i)
  %switch.selectcmp.i = icmp eq i32 %and30.i, 1
  %switch.select.i = select i1 %switch.selectcmp.i, i32 20, i32 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and30.i)
  %switch.selectcmp39.i = icmp eq i32 %and30.i, 2
  %switch.select40.i = select i1 %switch.selectcmp39.i, i32 21, i32 %switch.select.i
  br label %pcie_get_speed_cap.exit

pcie_get_speed_cap.exit:                          ; preds = %if.end.i, %cond.false17.i, %cond.false13.i.pcie_get_speed_cap.exit_crit_edge, %cond.false9.i.pcie_get_speed_cap.exit_crit_edge, %cond.false5.i.pcie_get_speed_cap.exit_crit_edge, %cond.false.i.pcie_get_speed_cap.exit_crit_edge, %if.then.i.pcie_get_speed_cap.exit_crit_edge
  %retval.0.i = phi i32 [ 25, %if.then.i.pcie_get_speed_cap.exit_crit_edge ], [ 24, %cond.false.i.pcie_get_speed_cap.exit_crit_edge ], [ 23, %cond.false5.i.pcie_get_speed_cap.exit_crit_edge ], [ 22, %cond.false9.i.pcie_get_speed_cap.exit_crit_edge ], [ %cond.i, %cond.false17.i ], [ 21, %cond.false13.i.pcie_get_speed_cap.exit_crit_edge ], [ %switch.select40.i, %if.end.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lnkcap.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lnkcap2.i) #24
  %6 = ptrtoint ptr %speed to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %retval.0.i, ptr %speed, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lnkcap.i39) #24
  %7 = ptrtoint ptr %lnkcap.i39 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %lnkcap.i39, align 4, !annotation !731
  %call.i40 = call i32 @pcie_capability_read_dword(ptr noundef %dev, i32 noundef 12, ptr noundef nonnull %lnkcap.i39) #24
  %8 = ptrtoint ptr %lnkcap.i39 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %lnkcap.i39, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i41 = icmp eq i32 %9, 0
  %and.i42 = lshr i32 %9, 4
  %shr.i = and i32 %and.i42, 63
  %retval.0.i43 = select i1 %tobool.not.i41, i32 255, i32 %shr.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lnkcap.i39) #24
  %10 = ptrtoint ptr %width to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %retval.0.i43, ptr %width, align 4
  %11 = ptrtoint ptr %speed to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %speed, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %12)
  %cmp = icmp eq i32 %12, 255
  %or.cond = select i1 %cmp, i1 true, i1 %tobool.not.i41
  br i1 %or.cond, label %pcie_get_speed_cap.exit.return_crit_edge, label %if.end

pcie_get_speed_cap.exit.return_crit_edge:         ; preds = %pcie_get_speed_cap.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %return

if.end:                                           ; preds = %pcie_get_speed_cap.exit
  %switch.tableidx = add i32 %12, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %switch.tableidx)
  %13 = icmp ult i32 %switch.tableidx, 5
  br i1 %13, label %switch.lookup, label %cond.false15

cond.false15:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %12)
  %cmp16 = icmp eq i32 %12, 20
  %cond = select i1 %cmp16, i32 2000, i32 0
  br label %cond.end24

switch.lookup:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %switch.gep = getelementptr inbounds [5 x i32], ptr @switch.table.pcie_bandwidth_capable, i32 0, i32 %switch.tableidx
  %14 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %14)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %cond.end24

cond.end24:                                       ; preds = %switch.lookup, %cond.false15
  %cond25 = phi i32 [ %cond, %cond.false15 ], [ %switch.load, %switch.lookup ]
  %mul = mul nuw nsw i32 %cond25, %retval.0.i43
  br label %return

return:                                           ; preds = %cond.end24, %pcie_get_speed_cap.exit.return_crit_edge
  %retval.0 = phi i32 [ %mul, %cond.end24 ], [ 0, %pcie_get_speed_cap.exit.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__pcie_print_link_status(ptr noundef %dev, i1 noundef zeroext %verbose) local_unnamed_addr #5 align 64 {
entry:
  %lnksta.i = alloca i16, align 2
  %width_cap = alloca i32, align 4
  %speed_cap = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %width_cap) #24
  %0 = ptrtoint ptr %width_cap to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %width_cap, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %speed_cap) #24
  %1 = ptrtoint ptr %speed_cap to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %speed_cap, align 4, !annotation !731
  %call = call i32 @pcie_bandwidth_capable(ptr noundef %dev, ptr noundef nonnull %speed_cap, ptr noundef nonnull %width_cap)
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %lnksta.i) #24
  %2 = ptrtoint ptr %lnksta.i to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %lnksta.i, align 2, !annotation !731
  %tobool4.not74.i = icmp eq ptr %dev, null
  br i1 %tobool4.not74.i, label %entry.pcie_bandwidth_available.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.pcie_bandwidth_available.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pcie_bandwidth_available.exit

while.body.i:                                     ; preds = %pci_upstream_bridge.exit.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %width.0 = phi i32 [ %width.1, %pci_upstream_bridge.exit.i.while.body.i_crit_edge ], [ 255, %entry.while.body.i_crit_edge ]
  %speed.0 = phi i32 [ %speed.1, %pci_upstream_bridge.exit.i.while.body.i_crit_edge ], [ 255, %entry.while.body.i_crit_edge ]
  %limiting_dev.0 = phi ptr [ %limiting_dev.1, %pci_upstream_bridge.exit.i.while.body.i_crit_edge ], [ null, %entry.while.body.i_crit_edge ]
  %bw.076.i = phi i32 [ %bw.1.i, %pci_upstream_bridge.exit.i.while.body.i_crit_edge ], [ 0, %entry.while.body.i_crit_edge ]
  %dev.addr.075.i = phi ptr [ %21, %pci_upstream_bridge.exit.i.while.body.i_crit_edge ], [ %dev, %entry.while.body.i_crit_edge ]
  %call.i = call i32 @pcie_capability_read_word(ptr noundef nonnull %dev.addr.075.i, i32 noundef 18, ptr noundef nonnull %lnksta.i) #24
  %3 = ptrtoint ptr %lnksta.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %lnksta.i, align 2
  %conv.i = zext i16 %4 to i32
  %and.i = and i32 %conv.i, 15
  %arrayidx.i = getelementptr [0 x i8], ptr @pcie_link_speed, i32 0, i32 %and.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx.i, align 1
  %conv5.i = zext i8 %6 to i32
  %and7.i = lshr i32 %conv.i, 4
  %7 = and i32 %and7.i, 63
  %switch.tableidx = add i8 %6, -21
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %switch.tableidx)
  %8 = icmp ult i8 %switch.tableidx, 5
  br i1 %8, label %switch.lookup, label %cond.false24.i

cond.false24.i:                                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  call void @__sanitizer_cov_trace_const_cmp1(i8 20, i8 %6)
  %cmp25.i = icmp eq i8 %6, 20
  %cond.i = select i1 %cmp25.i, i32 2000, i32 0
  br label %cond.end34.i

switch.lookup:                                    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  %9 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [5 x i32], ptr @switch.table.__pcie_print_link_status, i32 0, i32 %9
  %10 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %10)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %cond.end34.i

cond.end34.i:                                     ; preds = %switch.lookup, %cond.false24.i
  %cond35.i = phi i32 [ %cond.i, %cond.false24.i ], [ %switch.load, %switch.lookup ]
  %mul.i = mul nuw nsw i32 %cond35.i, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bw.076.i)
  %tobool36.not.i = icmp ne i32 %bw.076.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i, i32 %bw.076.i)
  %cmp37.not.i = icmp ugt i32 %mul.i, %bw.076.i
  %or.cond.i = select i1 %tobool36.not.i, i1 %cmp37.not.i, i1 false
  br i1 %or.cond.i, label %cond.end34.i.if.end49.i_crit_edge, label %if.then39.i

cond.end34.i.if.end49.i_crit_edge:                ; preds = %cond.end34.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end49.i

if.then39.i:                                      ; preds = %cond.end34.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end49.i

if.end49.i:                                       ; preds = %if.then39.i, %cond.end34.i.if.end49.i_crit_edge
  %width.1 = phi i32 [ %width.0, %cond.end34.i.if.end49.i_crit_edge ], [ %7, %if.then39.i ]
  %speed.1 = phi i32 [ %speed.0, %cond.end34.i.if.end49.i_crit_edge ], [ %conv5.i, %if.then39.i ]
  %limiting_dev.1 = phi ptr [ %limiting_dev.0, %cond.end34.i.if.end49.i_crit_edge ], [ %dev.addr.075.i, %if.then39.i ]
  %bw.1.i = phi i32 [ %bw.076.i, %cond.end34.i.if.end49.i_crit_edge ], [ %mul.i, %if.then39.i ]
  %is_virtfn.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.075.i, i32 0, i32 49
  %11 = ptrtoint ptr %is_virtfn.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 5)
  %bf.load.i.i.i = load i40, ptr %is_virtfn.i.i.i, align 1
  %12 = and i40 %bf.load.i.i.i, 65536
  %tobool.not.i.i.i = icmp eq i40 %12, 0
  br i1 %tobool.not.i.i.i, label %if.end49.i.pci_physfn.exit.i.i_crit_edge, label %if.then.i.i.i

if.end49.i.pci_physfn.exit.i.i_crit_edge:         ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_physfn.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #26
  %13 = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.075.i, i32 0, i32 66
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  br label %pci_physfn.exit.i.i

pci_physfn.exit.i.i:                              ; preds = %if.then.i.i.i, %if.end49.i.pci_physfn.exit.i.i_crit_edge
  %dev.addr.0.i.i.i = phi ptr [ %15, %if.then.i.i.i ], [ %dev.addr.075.i, %if.end49.i.pci_physfn.exit.i.i_crit_edge ]
  %bus.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bus.i.i, align 8
  %parent.i.i.i = getelementptr inbounds %struct.pci_bus, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i5.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i5.i.i, label %pci_physfn.exit.i.i.pcie_bandwidth_available.exit_crit_edge, label %pci_upstream_bridge.exit.i

pci_physfn.exit.i.i.pcie_bandwidth_available.exit_crit_edge: ; preds = %pci_physfn.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pcie_bandwidth_available.exit

pci_upstream_bridge.exit.i:                       ; preds = %pci_physfn.exit.i.i
  %self.i.i = getelementptr inbounds %struct.pci_bus, ptr %17, i32 0, i32 4
  %20 = ptrtoint ptr %self.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %self.i.i, align 4
  %tobool4.not.i = icmp eq ptr %21, null
  br i1 %tobool4.not.i, label %pci_upstream_bridge.exit.i.pcie_bandwidth_available.exit_crit_edge, label %pci_upstream_bridge.exit.i.while.body.i_crit_edge

pci_upstream_bridge.exit.i.while.body.i_crit_edge: ; preds = %pci_upstream_bridge.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i

pci_upstream_bridge.exit.i.pcie_bandwidth_available.exit_crit_edge: ; preds = %pci_upstream_bridge.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pcie_bandwidth_available.exit

pcie_bandwidth_available.exit:                    ; preds = %pci_upstream_bridge.exit.i.pcie_bandwidth_available.exit_crit_edge, %pci_physfn.exit.i.i.pcie_bandwidth_available.exit_crit_edge, %entry.pcie_bandwidth_available.exit_crit_edge
  %width.2 = phi i32 [ 255, %entry.pcie_bandwidth_available.exit_crit_edge ], [ %width.1, %pci_upstream_bridge.exit.i.pcie_bandwidth_available.exit_crit_edge ], [ %width.1, %pci_physfn.exit.i.i.pcie_bandwidth_available.exit_crit_edge ]
  %speed.2 = phi i32 [ 255, %entry.pcie_bandwidth_available.exit_crit_edge ], [ %speed.1, %pci_upstream_bridge.exit.i.pcie_bandwidth_available.exit_crit_edge ], [ %speed.1, %pci_physfn.exit.i.i.pcie_bandwidth_available.exit_crit_edge ]
  %limiting_dev.2 = phi ptr [ null, %entry.pcie_bandwidth_available.exit_crit_edge ], [ %limiting_dev.1, %pci_upstream_bridge.exit.i.pcie_bandwidth_available.exit_crit_edge ], [ %limiting_dev.1, %pci_physfn.exit.i.i.pcie_bandwidth_available.exit_crit_edge ]
  %bw.0.lcssa.i = phi i32 [ 0, %entry.pcie_bandwidth_available.exit_crit_edge ], [ %bw.1.i, %pci_upstream_bridge.exit.i.pcie_bandwidth_available.exit_crit_edge ], [ %bw.1.i, %pci_physfn.exit.i.i.pcie_bandwidth_available.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %lnksta.i) #24
  call void @__sanitizer_cov_trace_cmp4(i32 %bw.0.lcssa.i, i32 %call)
  %cmp.not = icmp ult i32 %bw.0.lcssa.i, %call
  %verbose.not = xor i1 %verbose, true
  %brmerge = or i1 %cmp.not, %verbose.not
  br i1 %brmerge, label %if.else, label %do.end

do.end:                                           ; preds = %pcie_bandwidth_available.exit
  call void @__sanitizer_cov_trace_pc() #26
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %div = udiv i32 %call, 1000
  %rem = urem i32 %call, 1000
  %22 = ptrtoint ptr %speed_cap to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %speed_cap, align 4
  %call3 = call ptr @pci_speed_string(i32 noundef %23) #24
  %24 = ptrtoint ptr %width_cap to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %width_cap, align 4
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev2, ptr noundef nonnull @.str.72, i32 noundef %div, i32 noundef %rem, ptr noundef %call3, i32 noundef %25) #28
  br label %if.end18

if.else:                                          ; preds = %pcie_bandwidth_available.exit
  br i1 %cmp.not, label %do.end8, label %if.else.if.end18_crit_edge

if.else.if.end18_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end18

do.end8:                                          ; preds = %if.else
  %dev9 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %bw.0.lcssa.i.frozen = freeze i32 %bw.0.lcssa.i
  %div10 = udiv i32 %bw.0.lcssa.i.frozen, 1000
  %26 = mul i32 %div10, 1000
  %rem11.decomposed = sub i32 %bw.0.lcssa.i.frozen, %26
  %call12 = call ptr @pci_speed_string(i32 noundef %speed.2) #24
  %tobool13.not = icmp eq ptr %limiting_dev.2, null
  br i1 %tobool13.not, label %do.end8.cond.end_crit_edge, label %cond.true

do.end8.cond.end_crit_edge:                       ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

cond.true:                                        ; preds = %do.end8
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %limiting_dev.2, i32 0, i32 44, i32 3
  %27 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %28, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %cond.true.cond.end_crit_edge

cond.true.cond.end_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %cond.end

if.end.i.i:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #26
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %limiting_dev.2, i32 0, i32 44
  %29 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %dev.i, align 4
  br label %cond.end

cond.end:                                         ; preds = %if.end.i.i, %cond.true.cond.end_crit_edge, %do.end8.cond.end_crit_edge
  %cond = phi ptr [ @.str.77, %do.end8.cond.end_crit_edge ], [ %30, %if.end.i.i ], [ %28, %cond.true.cond.end_crit_edge ]
  %call.frozen = freeze i32 %call
  %div15 = udiv i32 %call.frozen, 1000
  %31 = mul i32 %div15, 1000
  %rem16.decomposed = sub i32 %call.frozen, %31
  %32 = ptrtoint ptr %speed_cap to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %speed_cap, align 4
  %call17 = call ptr @pci_speed_string(i32 noundef %33) #24
  %34 = ptrtoint ptr %width_cap to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %width_cap, align 4
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev9, ptr noundef nonnull @.str.75, i32 noundef %div10, i32 noundef %rem11.decomposed, ptr noundef %call12, i32 noundef %width.2, ptr noundef %cond, i32 noundef %div15, i32 noundef %rem16.decomposed, ptr noundef %call17, i32 noundef %35) #28
  br label %if.end18

if.end18:                                         ; preds = %cond.end, %if.else.if.end18_crit_edge, %do.end
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %speed_cap) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %width_cap) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_speed_string(i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pcie_print_link_status(ptr noundef %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__pcie_print_link_status(ptr noundef %dev, i1 noundef zeroext true)
  ret void
}

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_select_bars(ptr nocapture noundef readonly %dev, i32 noundef %flags) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %flags1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 3
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags1, align 4
  %and = and i32 %1, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp ne i32 %and, 0
  %or = zext i1 %tobool.not to i32
  %flags1.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 3
  %2 = ptrtoint ptr %flags1.1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags1.1, align 4
  %and.1 = and i32 %3, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool.not.1 = icmp eq i32 %and.1, 0
  %or.1 = select i1 %tobool.not.1, i32 0, i32 2
  %bars.1.1 = or i32 %or.1, %or
  %flags1.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 3
  %4 = ptrtoint ptr %flags1.2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags1.2, align 4
  %and.2 = and i32 %5, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool.not.2 = icmp eq i32 %and.2, 0
  %or.2 = select i1 %tobool.not.2, i32 0, i32 4
  %bars.1.2 = or i32 %or.2, %bars.1.1
  %flags1.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 3, i32 3
  %6 = ptrtoint ptr %flags1.3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags1.3, align 4
  %and.3 = and i32 %7, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool.not.3 = icmp eq i32 %and.3, 0
  %or.3 = select i1 %tobool.not.3, i32 0, i32 8
  %bars.1.3 = or i32 %or.3, %bars.1.2
  %flags1.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4, i32 3
  %8 = ptrtoint ptr %flags1.4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags1.4, align 4
  %and.4 = and i32 %9, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool.not.4 = icmp eq i32 %and.4, 0
  %or.4 = select i1 %tobool.not.4, i32 0, i32 16
  %bars.1.4 = or i32 %or.4, %bars.1.3
  %flags1.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 5, i32 3
  %10 = ptrtoint ptr %flags1.5 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags1.5, align 4
  %and.5 = and i32 %11, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5)
  %tobool.not.5 = icmp eq i32 %and.5, 0
  %or.5 = select i1 %tobool.not.5, i32 0, i32 32
  %bars.1.5 = or i32 %or.5, %bars.1.4
  %flags1.6 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 6, i32 3
  %12 = ptrtoint ptr %flags1.6 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags1.6, align 4
  %and.6 = and i32 %13, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6)
  %tobool.not.6 = icmp eq i32 %and.6, 0
  %or.6 = select i1 %tobool.not.6, i32 0, i32 64
  %bars.1.6 = or i32 %or.6, %bars.1.5
  %flags1.7 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 7, i32 3
  %14 = ptrtoint ptr %flags1.7 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags1.7, align 4
  %and.7 = and i32 %15, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.7)
  %tobool.not.7 = icmp eq i32 %and.7, 0
  %or.7 = select i1 %tobool.not.7, i32 0, i32 128
  %bars.1.7 = or i32 %or.7, %bars.1.6
  %flags1.8 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 8, i32 3
  %16 = ptrtoint ptr %flags1.8 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags1.8, align 4
  %and.8 = and i32 %17, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.8)
  %tobool.not.8 = icmp eq i32 %and.8, 0
  %or.8 = select i1 %tobool.not.8, i32 0, i32 256
  %bars.1.8 = or i32 %or.8, %bars.1.7
  %flags1.9 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 9, i32 3
  %18 = ptrtoint ptr %flags1.9 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags1.9, align 4
  %and.9 = and i32 %19, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.9)
  %tobool.not.9 = icmp eq i32 %and.9, 0
  %or.9 = select i1 %tobool.not.9, i32 0, i32 512
  %bars.1.9 = or i32 %or.9, %bars.1.8
  %flags1.10 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 10, i32 3
  %20 = ptrtoint ptr %flags1.10 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags1.10, align 4
  %and.10 = and i32 %21, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.10)
  %tobool.not.10 = icmp eq i32 %and.10, 0
  %or.10 = select i1 %tobool.not.10, i32 0, i32 1024
  %bars.1.10 = or i32 %or.10, %bars.1.9
  %flags1.11 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 11, i32 3
  %22 = ptrtoint ptr %flags1.11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags1.11, align 4
  %and.11 = and i32 %23, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.11)
  %tobool.not.11 = icmp eq i32 %and.11, 0
  %or.11 = select i1 %tobool.not.11, i32 0, i32 2048
  %bars.1.11 = or i32 %or.11, %bars.1.10
  %flags1.12 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 12, i32 3
  %24 = ptrtoint ptr %flags1.12 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags1.12, align 4
  %and.12 = and i32 %25, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.12)
  %tobool.not.12 = icmp eq i32 %and.12, 0
  %or.12 = select i1 %tobool.not.12, i32 0, i32 4096
  %bars.1.12 = or i32 %or.12, %bars.1.11
  %flags1.13 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 13, i32 3
  %26 = ptrtoint ptr %flags1.13 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags1.13, align 4
  %and.13 = and i32 %27, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.13)
  %tobool.not.13 = icmp eq i32 %and.13, 0
  %or.13 = select i1 %tobool.not.13, i32 0, i32 8192
  %bars.1.13 = or i32 %or.13, %bars.1.12
  %flags1.14 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 14, i32 3
  %28 = ptrtoint ptr %flags1.14 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags1.14, align 4
  %and.14 = and i32 %29, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.14)
  %tobool.not.14 = icmp eq i32 %and.14, 0
  %or.14 = select i1 %tobool.not.14, i32 0, i32 16384
  %bars.1.14 = or i32 %or.14, %bars.1.13
  %flags1.15 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 15, i32 3
  %30 = ptrtoint ptr %flags1.15 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags1.15, align 4
  %and.15 = and i32 %31, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.15)
  %tobool.not.15 = icmp eq i32 %and.15, 0
  %or.15 = select i1 %tobool.not.15, i32 0, i32 32768
  %bars.1.15 = or i32 %or.15, %bars.1.14
  %flags1.16 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 16, i32 3
  %32 = ptrtoint ptr %flags1.16 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags1.16, align 4
  %and.16 = and i32 %33, %flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.16)
  %tobool.not.16 = icmp eq i32 %and.16, 0
  %or.16 = select i1 %tobool.not.16, i32 0, i32 65536
  %bars.1.16 = or i32 %or.16, %bars.1.15
  ret i32 %bars.1.16
}

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @pci_register_set_vga_state(ptr noundef %func) local_unnamed_addr #16 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  store ptr %func, ptr @arch_set_vga_state, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_set_vga_state(ptr noundef %dev, i1 noundef zeroext %decode, i32 noundef %command_bits, i32 noundef %flags) local_unnamed_addr #5 align 64 {
entry:
  %cmd = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd) #24
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cmd, align 2, !annotation !731
  %and = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %command_bits)
  %tobool2 = icmp ult i32 %command_bits, 4
  %1 = or i1 %tobool2, %tobool.not
  br i1 %1, label %entry.if.end_crit_edge, label %do.end, !prof !735

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.11, i32 noundef 6295, i32 noundef 9, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %2 = load ptr, ptr @arch_set_vga_state, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %if.end.if.end25_crit_edge, label %pci_set_vga_state_arch.exit

if.end.if.end25_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25

pci_set_vga_state_arch.exit:                      ; preds = %if.end
  %call.i = tail call i32 %2(ptr noundef %dev, i1 noundef zeroext %decode, i32 noundef %command_bits, i32 noundef %flags) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool23.not = icmp eq i32 %call.i, 0
  br i1 %tobool23.not, label %pci_set_vga_state_arch.exit.if.end25_crit_edge, label %pci_set_vga_state_arch.exit.cleanup_crit_edge

pci_set_vga_state_arch.exit.cleanup_crit_edge:    ; preds = %pci_set_vga_state_arch.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_set_vga_state_arch.exit.if.end25_crit_edge:   ; preds = %pci_set_vga_state_arch.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25

if.end25:                                         ; preds = %pci_set_vga_state_arch.exit.if.end25_crit_edge, %if.end.if.end25_crit_edge
  br i1 %tobool.not, label %if.end25.if.end38_crit_edge, label %if.then28

if.end25.if.end38_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end38

if.then28:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #26
  %call29 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %cmd) #24
  %3 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %cmd, align 2
  %5 = trunc i32 %command_bits to i16
  %6 = xor i16 %5, -1
  %conv35 = and i16 %4, %6
  %conv32 = or i16 %4, %5
  %storemerge80 = select i1 %decode, i16 %conv32, i16 %conv35
  store i16 %storemerge80, ptr %cmd, align 2
  %call37 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %storemerge80) #24
  br label %if.end38

if.end38:                                         ; preds = %if.then28, %if.end25.if.end38_crit_edge
  %and39 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39)
  %tobool40.not = icmp eq i32 %and39, 0
  br i1 %tobool40.not, label %if.end38.cleanup_crit_edge, label %if.end42

if.end38.cleanup_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end42:                                         ; preds = %if.end38
  %bus43 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %7 = ptrtoint ptr %bus43 to i32
  call void @__asan_load4_noabort(i32 %7)
  %bus.083 = load ptr, ptr %bus43, align 8
  %tobool44.not84 = icmp eq ptr %bus.083, null
  br i1 %tobool44.not84, label %if.end42.cleanup_crit_edge, label %while.body.preheader

if.end42.cleanup_crit_edge:                       ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.body.preheader:                             ; preds = %if.end42
  %masksel = select i1 %decode, i16 8, i16 0
  br label %while.body

while.body:                                       ; preds = %if.end59.while.body_crit_edge, %while.body.preheader
  %bus.085 = phi ptr [ %bus.0, %if.end59.while.body_crit_edge ], [ %bus.083, %while.body.preheader ]
  %self = getelementptr inbounds %struct.pci_bus, ptr %bus.085, i32 0, i32 4
  %8 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %self, align 4
  %tobool45.not = icmp eq ptr %9, null
  br i1 %tobool45.not, label %while.body.if.end59_crit_edge, label %if.then46

while.body.if.end59_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end59

if.then46:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  %call47 = call i32 @pci_read_config_word(ptr noundef nonnull %9, i32 noundef 62, ptr noundef nonnull %cmd) #24
  %10 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %cmd, align 2
  %12 = and i16 %11, -9
  %storemerge = or i16 %12, %masksel
  store i16 %storemerge, ptr %cmd, align 2
  %call58 = call i32 @pci_write_config_word(ptr noundef nonnull %9, i32 noundef 62, i16 noundef zeroext %storemerge) #24
  br label %if.end59

if.end59:                                         ; preds = %if.then46, %while.body.if.end59_crit_edge
  %parent = getelementptr inbounds %struct.pci_bus, ptr %bus.085, i32 0, i32 1
  %13 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %13)
  %bus.0 = load ptr, ptr %parent, align 8
  %tobool44.not = icmp eq ptr %bus.0, null
  br i1 %tobool44.not, label %if.end59.cleanup_crit_edge, label %if.end59.while.body_crit_edge

if.end59.while.body_crit_edge:                    ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

if.end59.cleanup_crit_edge:                       ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cleanup:                                          ; preds = %if.end59.cleanup_crit_edge, %if.end42.cleanup_crit_edge, %if.end38.cleanup_crit_edge, %pci_set_vga_state_arch.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %pci_set_vga_state_arch.exit.cleanup_crit_edge ], [ 0, %if.end38.cleanup_crit_edge ], [ 0, %if.end42.cleanup_crit_edge ], [ 0, %if.end59.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_add_dma_alias(ptr noundef %dev, i8 noundef zeroext %devfn_from, i32 noundef %nr_devfns) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i8 %devfn_from to i32
  %sub = sub nuw nsw i32 256, %conv
  %0 = tail call i32 @llvm.umin.i32(i32 %sub, i32 %nr_devfns)
  %add = add nsw i32 %conv, -1
  %sub3 = add nsw i32 %add, %0
  %dma_alias_mask = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 26
  %1 = ptrtoint ptr %dma_alias_mask to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dma_alias_mask, align 8
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.end, label %entry.if.else11.i_crit_edge

entry.if.else11.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else11.i

if.end:                                           ; preds = %entry
  %call = tail call ptr @bitmap_zalloc(i32 noundef 256, i32 noundef 3264) #24
  %3 = ptrtoint ptr %dma_alias_mask to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call, ptr %dma_alias_mask, align 8
  %tobool6.not = icmp eq ptr %call, null
  br i1 %tobool6.not, label %do.end, label %if.end.if.else11.i_crit_edge

if.end.if.else11.i_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else11.i

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev8, ptr noundef nonnull @.str.78) #28
  br label %cleanup

if.else11.i:                                      ; preds = %if.end.if.else11.i_crit_edge, %entry.if.else11.i_crit_edge
  %4 = phi ptr [ %call, %if.end.if.else11.i_crit_edge ], [ %2, %entry.if.else11.i_crit_edge ]
  tail call void @__bitmap_set(ptr noundef nonnull %4, i32 noundef %conv, i32 noundef %0) #24
  %5 = zext i32 %0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.256)
  switch i32 %0, label %do.end27 [
    i32 1, label %do.end17
    i32 0, label %if.else11.i.cleanup_crit_edge
  ]

if.else11.i.cleanup_crit_edge:                    ; preds = %if.else11.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

do.end17:                                         ; preds = %if.else11.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev18 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %6 = lshr i32 %conv, 3
  %and21 = and i32 %conv, 7
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev18, ptr noundef nonnull @.str.81, i32 noundef %6, i32 noundef %and21) #28
  br label %cleanup

do.end27:                                         ; preds = %if.else11.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev28 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %7 = lshr i32 %conv, 3
  %and33 = and i32 %conv, 7
  %8 = lshr i32 %sub3, 3
  %and35 = and i32 %8, 31
  %and36 = and i32 %sub3, 7
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev28, ptr noundef nonnull @.str.84, i32 noundef %7, i32 noundef %and33, i32 noundef %and35, i32 noundef %and36) #28
  br label %cleanup

cleanup:                                          ; preds = %do.end27, %do.end17, %if.else11.i.cleanup_crit_edge, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bitmap_zalloc(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pci_devs_are_dma_aliases(ptr noundef %dev1, ptr noundef %dev2) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %dma_alias_mask = getelementptr inbounds %struct.pci_dev, ptr %dev1, i32 0, i32 26
  %0 = ptrtoint ptr %dma_alias_mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dma_alias_mask, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.lor.lhs.false_crit_edge, label %land.lhs.true

entry.lor.lhs.false_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev2, i32 0, i32 6
  %2 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %devfn, align 4
  %div3.i = lshr i32 %3, 5
  %arrayidx.i = getelementptr i32, ptr %1, i32 %div3.i
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %3, 31
  %6 = shl nuw i32 1, %and.i
  %7 = and i32 %6, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool2.not = icmp eq i32 %7, 0
  br i1 %tobool2.not, label %land.lhs.true.lor.lhs.false_crit_edge, label %land.lhs.true.lor.end_crit_edge

land.lhs.true.lor.end_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.end

land.lhs.true.lor.lhs.false_crit_edge:            ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.lor.lhs.false_crit_edge, %entry.lor.lhs.false_crit_edge
  %dma_alias_mask3 = getelementptr inbounds %struct.pci_dev, ptr %dev2, i32 0, i32 26
  %8 = ptrtoint ptr %dma_alias_mask3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dma_alias_mask3, align 8
  %tobool4.not = icmp eq ptr %9, null
  br i1 %tobool4.not, label %lor.lhs.false.lor.lhs.false10_crit_edge, label %land.lhs.true5

lor.lhs.false.lor.lhs.false10_crit_edge:          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false10

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %devfn6 = getelementptr inbounds %struct.pci_dev, ptr %dev1, i32 0, i32 6
  %10 = ptrtoint ptr %devfn6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %devfn6, align 4
  %div3.i23 = lshr i32 %11, 5
  %arrayidx.i24 = getelementptr i32, ptr %9, i32 %div3.i23
  %12 = ptrtoint ptr %arrayidx.i24 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %arrayidx.i24, align 4
  %and.i25 = and i32 %11, 31
  %14 = shl nuw i32 1, %and.i25
  %15 = and i32 %14, %13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool9.not = icmp eq i32 %15, 0
  br i1 %tobool9.not, label %land.lhs.true5.lor.lhs.false10_crit_edge, label %land.lhs.true5.lor.end_crit_edge

land.lhs.true5.lor.end_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.end

land.lhs.true5.lor.lhs.false10_crit_edge:         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %land.lhs.true5.lor.lhs.false10_crit_edge, %lor.lhs.false.lor.lhs.false10_crit_edge
  %call11 = tail call ptr @pci_real_dma_dev(ptr noundef %dev1)
  %cmp = icmp eq ptr %call11, %dev2
  br i1 %cmp, label %lor.lhs.false10.lor.end_crit_edge, label %lor.rhs

lor.lhs.false10.lor.end_crit_edge:                ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #26
  br label %lor.end

lor.rhs:                                          ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #26
  %call12 = tail call ptr @pci_real_dma_dev(ptr noundef %dev2)
  %cmp13 = icmp eq ptr %call12, %dev1
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false10.lor.end_crit_edge, %land.lhs.true5.lor.end_crit_edge, %land.lhs.true.lor.end_crit_edge
  %16 = phi i1 [ true, %lor.lhs.false10.lor.end_crit_edge ], [ true, %land.lhs.true5.lor.end_crit_edge ], [ true, %land.lhs.true.lor.end_crit_edge ], [ %cmp13, %lor.rhs ]
  ret i1 %16
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local ptr @pci_real_dma_dev(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret ptr %dev
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @pci_bus_read_dev_vendor_id(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @pci_ignore_hotplug(ptr nocapture noundef %dev) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %self = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %self, align 4
  %ignore_hotplug = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %4 = ptrtoint ptr %ignore_hotplug to i32
  call void @__asan_loadN_noabort(i32 %4, i32 4)
  %bf.load = load i32, ptr %ignore_hotplug, align 2
  %bf.set = or i32 %bf.load, 32768
  store i32 %bf.set, ptr %ignore_hotplug, align 2
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %ignore_hotplug1 = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 33
  %5 = ptrtoint ptr %ignore_hotplug1 to i32
  call void @__asan_loadN_noabort(i32 %5, i32 4)
  %bf.load2 = load i32, ptr %ignore_hotplug1, align 2
  %bf.set4 = or i32 %bf.load2, 32768
  store i32 %bf.set4, ptr %ignore_hotplug1, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @pcibios_default_alignment() local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @pci_resource_to_user(ptr noundef %dev, i32 noundef %bar, ptr noundef %rsrc, ptr noundef %start, ptr noundef %end) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rsrc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rsrc, align 4
  %2 = ptrtoint ptr %start to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %start, align 4
  %end2 = getelementptr inbounds %struct.resource, ptr %rsrc, i32 0, i32 1
  %3 = ptrtoint ptr %end2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %end2, align 4
  %5 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %end, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_reassigndev_resource_alignment(ptr noundef %dev) local_unnamed_addr #5 align 64 {
entry:
  %align_order.i = alloca i32, align 4
  %count.i = alloca i32, align 4
  %p.i = alloca ptr, align 4
  %command = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %command) #24
  %0 = ptrtoint ptr %command to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %command, align 2, !annotation !731
  %is_virtfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %1 = ptrtoint ptr %is_virtfn to i32
  call void @__asan_loadN_noabort(i32 %1, i32 5)
  %bf.load = load i40, ptr %is_virtfn, align 1
  %2 = and i40 %bf.load, 65536
  %tobool.not = icmp eq i40 %2, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %align_order.i) #24
  %3 = ptrtoint ptr %align_order.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %align_order.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %count.i) #24
  %4 = ptrtoint ptr %count.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %count.i, align 4, !annotation !731
  %call.i = tail call i32 @pcibios_default_alignment() #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %p.i) #24
  tail call void @_raw_spin_lock(ptr noundef nonnull @resource_alignment_lock) #24
  %5 = load ptr, ptr @resource_alignment_param, align 4
  %6 = ptrtoint ptr %p.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %p.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end.pci_specified_resource_alignment.exit_crit_edge, label %lor.lhs.false.i

if.end.pci_specified_resource_alignment.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_specified_resource_alignment.exit

lor.lhs.false.i:                                  ; preds = %if.end
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %5, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool1.not.i = icmp eq i8 %8, 0
  br i1 %tobool1.not.i, label %lor.lhs.false.i.pci_specified_resource_alignment.exit_crit_edge, label %if.end.i

lor.lhs.false.i.pci_specified_resource_alignment.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_specified_resource_alignment.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_flags to i32))
  %9 = load i32, ptr @pci_flags, align 4
  %and.i.i = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool3.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool3.not.i, label %if.end.i.while.body.i_crit_edge, label %land.end.i

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  br label %while.body.i

land.end.i:                                       ; preds = %if.end.i
  %.b64.i = load i1, ptr @pci_specified_resource_alignment.__already_done, align 1
  br i1 %.b64.i, label %land.end.i.pci_specified_resource_alignment.exit.thread_crit_edge, label %if.then10.i, !prof !735

land.end.i.pci_specified_resource_alignment.exit.thread_crit_edge: ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_specified_resource_alignment.exit.thread

if.then10.i:                                      ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #26
  store i1 true, ptr @pci_specified_resource_alignment.__already_done, align 1
  %call11.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195) #28
  br label %pci_specified_resource_alignment.exit.thread

while.body.i:                                     ; preds = %if.end60.i.while.body.i_crit_edge, %if.end.i.while.body.i_crit_edge
  %10 = phi ptr [ %incdec.ptr.i, %if.end60.i.while.body.i_crit_edge ], [ %5, %if.end.i.while.body.i_crit_edge ]
  %11 = ptrtoint ptr %count.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %count.i, align 4
  %call22.i = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %10, ptr noundef nonnull @.str.197, ptr noundef nonnull %align_order.i, ptr noundef nonnull %count.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call22.i)
  %cmp.i = icmp eq i32 %call22.i, 1
  br i1 %cmp.i, label %land.lhs.true.i, label %while.body.i.if.else.i_crit_edge

while.body.i.if.else.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %while.body.i
  %12 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %count.i, align 4
  %arrayidx.i = getelementptr i8, ptr %10, i32 %13
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %15)
  %cmp23.i = icmp eq i8 %15, 64
  br i1 %cmp23.i, label %if.then25.i, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else.i

if.then25.i:                                      ; preds = %land.lhs.true.i
  %add.i = add i32 %13, 1
  %add.ptr.i = getelementptr i8, ptr %10, i32 %add.i
  %16 = ptrtoint ptr %p.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %add.ptr.i, ptr %p.i, align 4
  %17 = ptrtoint ptr %align_order.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %align_order.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %18)
  %cmp26.i = icmp sgt i32 %18, 63
  br i1 %cmp26.i, label %do.end31.i, label %if.then25.i.if.end35.i_crit_edge

if.then25.i.if.end35.i_crit_edge:                 ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end35.i

do.end31.i:                                       ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #26
  %call33.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.199, i32 noundef %18) #28
  %19 = ptrtoint ptr %align_order.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 12, ptr %align_order.i, align 4
  br label %if.end35.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %while.body.i.if.else.i_crit_edge
  %20 = ptrtoint ptr %align_order.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 12, ptr %align_order.i, align 4
  br label %if.end35.i

if.end35.i:                                       ; preds = %if.else.i, %do.end31.i, %if.then25.i.if.end35.i_crit_edge
  %21 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %p.i, align 4
  %call36.i = call fastcc i32 @pci_dev_str_match(ptr noundef %dev, ptr noundef %22, ptr noundef nonnull %p.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call36.i)
  %cmp37.i = icmp eq i32 %call36.i, 1
  br i1 %cmp37.i, label %if.then39.i, label %if.else41.i

if.then39.i:                                      ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #26
  %23 = ptrtoint ptr %align_order.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %align_order.i, align 4
  %sh_prom.i = zext i32 %24 to i64
  %shl.i = shl nuw i64 1, %sh_prom.i
  %conv40.i = trunc i64 %shl.i to i32
  br label %pci_specified_resource_alignment.exit

if.else41.i:                                      ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36.i)
  %cmp42.i = icmp slt i32 %call36.i, 0
  %25 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %p.i, align 4
  br i1 %cmp42.i, label %do.end47.i, label %if.end51.i

do.end47.i:                                       ; preds = %if.else41.i
  call void @__sanitizer_cov_trace_pc() #26
  %call49.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.202, ptr noundef %26) #28
  br label %pci_specified_resource_alignment.exit

if.end51.i:                                       ; preds = %if.else41.i
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %26, align 1
  %29 = zext i8 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.257)
  switch i8 %28, label %if.end51.i.pci_specified_resource_alignment.exit_crit_edge [
    i8 59, label %if.end51.i.if.end60.i_crit_edge
    i8 44, label %if.end51.i.if.end60.i_crit_edge82
  ]

if.end51.i.if.end60.i_crit_edge82:                ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end60.i

if.end51.i.if.end60.i_crit_edge:                  ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end60.i

if.end51.i.pci_specified_resource_alignment.exit_crit_edge: ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_specified_resource_alignment.exit

if.end60.i:                                       ; preds = %if.end51.i.if.end60.i_crit_edge, %if.end51.i.if.end60.i_crit_edge82
  %incdec.ptr.i = getelementptr i8, ptr %26, i32 1
  %30 = ptrtoint ptr %p.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %incdec.ptr.i, ptr %p.i, align 4
  %31 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %incdec.ptr.i, align 1
  %tobool21.not.i = icmp eq i8 %32, 0
  br i1 %tobool21.not.i, label %if.end60.i.pci_specified_resource_alignment.exit_crit_edge, label %if.end60.i.while.body.i_crit_edge

if.end60.i.while.body.i_crit_edge:                ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body.i

if.end60.i.pci_specified_resource_alignment.exit_crit_edge: ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_specified_resource_alignment.exit

pci_specified_resource_alignment.exit.thread:     ; preds = %if.then10.i, %land.end.i.pci_specified_resource_alignment.exit.thread_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @resource_alignment_lock) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %p.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %count.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %align_order.i) #24
  br label %cleanup

pci_specified_resource_alignment.exit:            ; preds = %if.end60.i.pci_specified_resource_alignment.exit_crit_edge, %if.end51.i.pci_specified_resource_alignment.exit_crit_edge, %do.end47.i, %if.then39.i, %lor.lhs.false.i.pci_specified_resource_alignment.exit_crit_edge, %if.end.pci_specified_resource_alignment.exit_crit_edge
  %tobool16.not = phi i1 [ true, %if.end.pci_specified_resource_alignment.exit_crit_edge ], [ true, %lor.lhs.false.i.pci_specified_resource_alignment.exit_crit_edge ], [ false, %if.then39.i ], [ true, %do.end47.i ], [ true, %if.end60.i.pci_specified_resource_alignment.exit_crit_edge ], [ true, %if.end51.i.pci_specified_resource_alignment.exit_crit_edge ]
  %align.0.i = phi i32 [ %call.i, %if.end.pci_specified_resource_alignment.exit_crit_edge ], [ %call.i, %lor.lhs.false.i.pci_specified_resource_alignment.exit_crit_edge ], [ %conv40.i, %if.then39.i ], [ %call.i, %do.end47.i ], [ %call.i, %if.end60.i.pci_specified_resource_alignment.exit_crit_edge ], [ %call.i, %if.end51.i.pci_specified_resource_alignment.exit_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef nonnull @resource_alignment_lock) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %p.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %count.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %align_order.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %align.0.i)
  %tobool1.not = icmp eq i32 %align.0.i, 0
  br i1 %tobool1.not, label %pci_specified_resource_alignment.exit.cleanup_crit_edge, label %if.end3

pci_specified_resource_alignment.exit.cleanup_crit_edge: ; preds = %pci_specified_resource_alignment.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end3:                                          ; preds = %pci_specified_resource_alignment.exit
  %hdr_type = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 13
  %33 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %hdr_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %cmp = icmp eq i8 %34, 0
  br i1 %cmp, label %land.lhs.true, label %if.end3.if.end9_crit_edge

if.end3.if.end9_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

land.lhs.true:                                    ; preds = %if.end3
  %class = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 11
  %35 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %class, align 8
  %shr.mask = and i32 %36, -256
  call void @__sanitizer_cov_trace_const_cmp4(i32 393216, i32 %shr.mask)
  %cmp5 = icmp eq i32 %shr.mask, 393216
  br i1 %cmp5, label %do.end, label %land.lhs.true.if.end9_crit_edge

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end9

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev8, ptr noundef nonnull @.str.86) #28
  br label %cleanup

if.end9:                                          ; preds = %land.lhs.true.if.end9_crit_edge, %if.end3.if.end9_crit_edge
  %call10 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %command) #24
  %37 = ptrtoint ptr %command to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %command, align 2
  %39 = and i16 %38, -3
  store i16 %39, ptr %command, align 2
  %call13 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %39) #24
  %dev5.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %conv.i = zext i32 %align.0.i to i64
  %sub.i = add i32 %align.0.i, -1
  br label %for.body

for.body:                                         ; preds = %pci_request_resource_alignment.exit.for.body_crit_edge, %if.end9
  %i.072 = phi i32 [ 0, %if.end9 ], [ %inc, %pci_request_resource_alignment.exit.for.body_crit_edge ]
  %arrayidx.i60 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 %i.072
  %flags.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 %i.072, i32 3
  %40 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %41, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i61 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i61, label %for.body.pci_request_resource_alignment.exit_crit_edge, label %if.end.i63

for.body.pci_request_resource_alignment.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_request_resource_alignment.exit

if.end.i63:                                       ; preds = %for.body
  %and2.i = and i32 %41, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i62 = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i62, label %if.end6.i, label %do.end.i

do.end.i:                                         ; preds = %if.end.i63
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev5.i, ptr noundef nonnull @.str.205, i32 noundef %i.072, ptr noundef %arrayidx.i60, i64 noundef %conv.i) #28
  br label %pci_request_resource_alignment.exit

if.end6.i:                                        ; preds = %if.end.i63
  %end.i.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 %i.072, i32 1
  %42 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %end.i.i, align 4
  %44 = ptrtoint ptr %arrayidx.i60 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx.i60, align 4
  %sub.i.i = add i32 %43, 1
  %add.i.i = sub i32 %sub.i.i, %45
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %align.0.i)
  %cmp.not.i = icmp ult i32 %add.i.i, %align.0.i
  br i1 %cmp.not.i, label %do.end12.i, label %if.end6.i.pci_request_resource_alignment.exit_crit_edge

if.end6.i.pci_request_resource_alignment.exit_crit_edge: ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_request_resource_alignment.exit

do.end12.i:                                       ; preds = %if.end6.i
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev5.i, ptr noundef nonnull @.str.208, i32 noundef %i.072, ptr noundef %arrayidx.i60, i64 noundef %conv.i) #28
  br i1 %tobool16.not, label %if.else.i65, label %if.then16.i

if.then16.i:                                      ; preds = %do.end12.i
  call void @__sanitizer_cov_trace_pc() #26
  %46 = ptrtoint ptr %arrayidx.i60 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %arrayidx.i60, align 4
  br label %if.end24.i

if.else.i65:                                      ; preds = %do.end12.i
  call void @__sanitizer_cov_trace_pc() #26
  %47 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %flags.i, align 4
  %and18.i = and i32 %48, -786433
  %or.i = or i32 %and18.i, 524288
  store i32 %or.i, ptr %flags.i, align 4
  %49 = ptrtoint ptr %arrayidx.i60 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %align.0.i, ptr %arrayidx.i60, align 4
  %sub22.i = add i32 %sub.i, %add.i.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.else.i65, %if.then16.i
  %sub22.sink.i = phi i32 [ %sub.i, %if.then16.i ], [ %sub22.i, %if.else.i65 ]
  %50 = ptrtoint ptr %end.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %sub22.sink.i, ptr %end.i.i, align 4
  %51 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %flags.i, align 4
  %or26.i = or i32 %52, 536870912
  store i32 %or26.i, ptr %flags.i, align 4
  br label %pci_request_resource_alignment.exit

pci_request_resource_alignment.exit:              ; preds = %if.end24.i, %if.end6.i.pci_request_resource_alignment.exit_crit_edge, %do.end.i, %for.body.pci_request_resource_alignment.exit_crit_edge
  %inc = add nuw nsw i32 %i.072, 1
  %exitcond.not = icmp eq i32 %inc, 7
  br i1 %exitcond.not, label %for.end, label %pci_request_resource_alignment.exit.for.body_crit_edge

pci_request_resource_alignment.exit.for.body_crit_edge: ; preds = %pci_request_resource_alignment.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.end:                                          ; preds = %pci_request_resource_alignment.exit
  %53 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %hdr_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %54)
  %cmp19 = icmp eq i8 %54, 1
  br i1 %cmp19, label %for.body25.preheader, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.body25.preheader:                             ; preds = %for.end
  %flags = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 13, i32 3
  %55 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %flags, align 4
  %and26 = and i32 %56, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %for.body25.preheader.for.inc32_crit_edge, label %if.end29

for.body25.preheader.for.inc32_crit_edge:         ; preds = %for.body25.preheader
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc32

if.end29:                                         ; preds = %for.body25.preheader
  call void @__sanitizer_cov_trace_pc() #26
  %arrayidx = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 13
  %or = or i32 %56, 536870912
  %57 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %or, ptr %flags, align 4
  %end.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 13, i32 1
  %58 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %end.i, align 4
  %60 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx, align 4
  %sub = sub i32 %59, %61
  store i32 %sub, ptr %end.i, align 4
  store i32 0, ptr %arrayidx, align 4
  br label %for.inc32

for.inc32:                                        ; preds = %if.end29, %for.body25.preheader.for.inc32_crit_edge
  %flags.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 14, i32 3
  %62 = ptrtoint ptr %flags.1 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %flags.1, align 4
  %and26.1 = and i32 %63, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.1)
  %tobool27.not.1 = icmp eq i32 %and26.1, 0
  br i1 %tobool27.not.1, label %for.inc32.for.inc32.1_crit_edge, label %if.end29.1

for.inc32.for.inc32.1_crit_edge:                  ; preds = %for.inc32
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc32.1

if.end29.1:                                       ; preds = %for.inc32
  call void @__sanitizer_cov_trace_pc() #26
  %arrayidx.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 14
  %or.1 = or i32 %63, 536870912
  %64 = ptrtoint ptr %flags.1 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %or.1, ptr %flags.1, align 4
  %end.i.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 14, i32 1
  %65 = ptrtoint ptr %end.i.1 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %end.i.1, align 4
  %67 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx.1, align 4
  %sub.1 = sub i32 %66, %68
  store i32 %sub.1, ptr %end.i.1, align 4
  store i32 0, ptr %arrayidx.1, align 4
  br label %for.inc32.1

for.inc32.1:                                      ; preds = %if.end29.1, %for.inc32.for.inc32.1_crit_edge
  %flags.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 15, i32 3
  %69 = ptrtoint ptr %flags.2 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %flags.2, align 4
  %and26.2 = and i32 %70, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.2)
  %tobool27.not.2 = icmp eq i32 %and26.2, 0
  br i1 %tobool27.not.2, label %for.inc32.1.for.inc32.2_crit_edge, label %if.end29.2

for.inc32.1.for.inc32.2_crit_edge:                ; preds = %for.inc32.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc32.2

if.end29.2:                                       ; preds = %for.inc32.1
  call void @__sanitizer_cov_trace_pc() #26
  %arrayidx.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 15
  %or.2 = or i32 %70, 536870912
  %71 = ptrtoint ptr %flags.2 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %or.2, ptr %flags.2, align 4
  %end.i.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 15, i32 1
  %72 = ptrtoint ptr %end.i.2 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %end.i.2, align 4
  %74 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %arrayidx.2, align 4
  %sub.2 = sub i32 %73, %75
  store i32 %sub.2, ptr %end.i.2, align 4
  store i32 0, ptr %arrayidx.2, align 4
  br label %for.inc32.2

for.inc32.2:                                      ; preds = %if.end29.2, %for.inc32.1.for.inc32.2_crit_edge
  %flags.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 16, i32 3
  %76 = ptrtoint ptr %flags.3 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %flags.3, align 4
  %and26.3 = and i32 %77, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.3)
  %tobool27.not.3 = icmp eq i32 %and26.3, 0
  br i1 %tobool27.not.3, label %for.inc32.2.for.inc32.3_crit_edge, label %if.end29.3

for.inc32.2.for.inc32.3_crit_edge:                ; preds = %for.inc32.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc32.3

if.end29.3:                                       ; preds = %for.inc32.2
  call void @__sanitizer_cov_trace_pc() #26
  %arrayidx.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 16
  %or.3 = or i32 %77, 536870912
  %78 = ptrtoint ptr %flags.3 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %or.3, ptr %flags.3, align 4
  %end.i.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 16, i32 1
  %79 = ptrtoint ptr %end.i.3 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %end.i.3, align 4
  %81 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx.3, align 4
  %sub.3 = sub i32 %80, %82
  store i32 %sub.3, ptr %end.i.3, align 4
  store i32 0, ptr %arrayidx.3, align 4
  br label %for.inc32.3

for.inc32.3:                                      ; preds = %if.end29.3, %for.inc32.2.for.inc32.3_crit_edge
  call void @pci_disable_bridge_window(ptr noundef %dev) #24
  br label %cleanup

cleanup:                                          ; preds = %for.inc32.3, %for.end.cleanup_crit_edge, %do.end, %pci_specified_resource_alignment.exit.cleanup_crit_edge, %pci_specified_resource_alignment.exit.thread, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %command) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_bridge_window(ptr noundef) local_unnamed_addr #6

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_resource_alignment_sysfs_init() #14 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @bus_create_file(ptr noundef nonnull @pci_bus_type, ptr noundef nonnull @bus_attr_resource_alignment) #24
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_bus_find_domain_nr(ptr nocapture noundef readnone %bus, ptr noundef readonly %parent) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %parent, null
  br i1 %tobool.not.i, label %land.lhs.true4.i, label %if.end.i

if.end.i:                                         ; preds = %entry
  %of_node.i = getelementptr inbounds %struct.device, ptr %parent, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i, align 8
  %call.i = tail call i32 @of_get_pci_domain_nr(ptr noundef %1) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i)
  %cmp.i = icmp sgt i32 %call.i, -1
  %2 = load i32, ptr @of_pci_bus_find_domain_nr.use_dt_domains, align 4
  br i1 %cmp.i, label %land.lhs.true.i, label %land.lhs.true4.thread.i

land.lhs.true.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not.i = icmp eq i32 %2, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.do.end.i_crit_edge, label %if.then2.i

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end.i

if.then2.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  store i32 1, ptr @of_pci_bus_find_domain_nr.use_dt_domains, align 4
  br label %of_pci_bus_find_domain_nr.exit

land.lhs.true4.i:                                 ; preds = %entry
  %3 = load i32, ptr @of_pci_bus_find_domain_nr.use_dt_domains, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp5.not.i = icmp eq i32 %3, 1
  br i1 %cmp5.not.i, label %land.lhs.true4.i.do.end16.i_crit_edge, label %land.lhs.true4.i.if.then6.i_crit_edge

land.lhs.true4.i.if.then6.i_crit_edge:            ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then6.i

land.lhs.true4.i.do.end16.i_crit_edge:            ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end16.i

land.lhs.true4.thread.i:                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %cmp5.not31.i = icmp eq i32 %2, 1
  br i1 %cmp5.not31.i, label %land.lhs.true4.thread.i.do.end.i_crit_edge, label %land.lhs.true4.thread.i.if.then6.i_crit_edge

land.lhs.true4.thread.i.if.then6.i_crit_edge:     ; preds = %land.lhs.true4.thread.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.then6.i

land.lhs.true4.thread.i.do.end.i_crit_edge:       ; preds = %land.lhs.true4.thread.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %do.end.i

if.then6.i:                                       ; preds = %land.lhs.true4.thread.i.if.then6.i_crit_edge, %land.lhs.true4.i.if.then6.i_crit_edge
  store i32 0, ptr @of_pci_bus_find_domain_nr.use_dt_domains, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @__domain_nr, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !736
  tail call void @llvm.prefetch.p0(ptr nonnull @__domain_nr, i32 1, i32 3, i32 1) #24
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @__domain_nr, ptr nonnull @__domain_nr, i32 1, ptr nonnull elementtype(i32) @__domain_nr) #24, !srcloc !737
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %4, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !738
  br label %of_pci_bus_find_domain_nr.exit

do.end.i:                                         ; preds = %land.lhs.true4.thread.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge
  %5 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %of_node.i, align 8
  %call12.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.212, ptr noundef %6) #28
  br label %do.end16.i

do.end16.i:                                       ; preds = %do.end.i, %land.lhs.true4.i.do.end16.i_crit_edge
  %call18.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.215) #28
  br label %of_pci_bus_find_domain_nr.exit

of_pci_bus_find_domain_nr.exit:                   ; preds = %do.end16.i, %if.then6.i, %if.then2.i
  %domain.1.i = phi i32 [ %call.i, %if.then2.i ], [ %asmresult.i.i.i.i.i.i, %if.then6.i ], [ -1, %do.end16.i ]
  ret i32 %domain.1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @pci_ext_cfg_avail() local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @pci_fixup_cardbus(ptr noundef %bus) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_setup(ptr noundef %str) #14 section ".init.text" align 64 {
entry:
  %str.addr = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %str.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %str, ptr %str.addr, align 4
  %tobool.not158 = icmp eq ptr %str, null
  br i1 %tobool.not158, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.body:                                       ; preds = %if.end155.while.body_crit_edge, %entry.while.body_crit_edge
  %storemerge159 = phi ptr [ %k.0, %if.end155.while.body_crit_edge ], [ %str, %entry.while.body_crit_edge ]
  %call = call ptr @strchr(ptr noundef nonnull %storemerge159, i32 noundef 44)
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %while.body.if.end_crit_edge, label %if.then

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  %incdec.ptr = getelementptr i8, ptr %call, i32 1
  %1 = ptrtoint ptr %call to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %call, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body.if.end_crit_edge
  %k.0 = phi ptr [ %incdec.ptr, %if.then ], [ null, %while.body.if.end_crit_edge ]
  %2 = ptrtoint ptr %str.addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %str.addr, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool2.not = icmp eq i8 %5, 0
  br i1 %tobool2.not, label %if.end.if.end155_crit_edge, label %land.lhs.true

if.end.if.end155_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end155

land.lhs.true:                                    ; preds = %if.end
  %call3 = call ptr @pcibios_setup(ptr noundef %3) #31
  %6 = ptrtoint ptr %str.addr to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call3, ptr %str.addr, align 4
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %land.lhs.true.if.end155_crit_edge, label %land.lhs.true5

land.lhs.true.if.end155_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end155

land.lhs.true5:                                   ; preds = %land.lhs.true
  %7 = ptrtoint ptr %call3 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %call3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool7.not = icmp eq i8 %8, 0
  br i1 %tobool7.not, label %land.lhs.true5.if.end155_crit_edge, label %if.then8

land.lhs.true5.if.end155_crit_edge:               ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end155

if.then8:                                         ; preds = %land.lhs.true5
  %call9 = call i32 @strcmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(6) @.str.217) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #26
  call void @pci_no_msi() #24
  br label %if.end155

if.else:                                          ; preds = %if.then8
  %call12 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(6) @.str.218, i32 noundef 5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %do.end, label %if.else16

do.end:                                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  %call15 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.219) #28
  store i1 true, ptr @pcie_ats_disabled, align 1
  br label %if.end155

if.else16:                                        ; preds = %if.else
  %call17 = call i32 @strcmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(6) @.str.221) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.then19, label %if.else20

if.then19:                                        ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #26
  call void @pci_no_aer() #24
  br label %if.end155

if.else20:                                        ; preds = %if.else16
  %call21 = call i32 @strcmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(10) @.str.222) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #26
  store i8 1, ptr @pci_early_dump, align 1
  br label %if.end155

if.else24:                                        ; preds = %if.else20
  %call25 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(9) @.str.223, i32 noundef 8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.then27, label %if.else28

if.then27:                                        ; preds = %if.else24
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr = getelementptr i8, ptr %call3, i32 8
  call void @pci_realloc_get_opt(ptr noundef %add.ptr) #24
  br label %if.end155

if.else28:                                        ; preds = %if.else24
  %call29 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(8) @.str.224, i32 noundef 7)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.then31, label %if.else32

if.then31:                                        ; preds = %if.else28
  call void @__sanitizer_cov_trace_pc() #26
  call void @pci_realloc_get_opt(ptr noundef nonnull @.str.225) #24
  br label %if.end155

if.else32:                                        ; preds = %if.else28
  %call33 = call i32 @strcmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(10) @.str.226) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.then35, label %if.else36

if.then35:                                        ; preds = %if.else32
  call void @__sanitizer_cov_trace_pc() #26
  store i32 0, ptr @pci_domains_supported, align 4
  br label %if.end155

if.else36:                                        ; preds = %if.else32
  %call37 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(6) @.str.227, i32 noundef 5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.then39, label %if.else40

if.then39:                                        ; preds = %if.else36
  call void @__sanitizer_cov_trace_pc() #26
  store i1 true, ptr @pcie_ari_disabled, align 1
  br label %if.end155

if.else40:                                        ; preds = %if.else36
  %call41 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(10) @.str.228, i32 noundef 9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.then43, label %if.else47

if.then43:                                        ; preds = %if.else40
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr44 = getelementptr i8, ptr %call3, i32 9
  %call45 = call i64 @memparse(ptr noundef %add.ptr44, ptr noundef nonnull %str.addr) #24
  %conv46 = trunc i64 %call45 to i32
  store i32 %conv46, ptr @pci_cardbus_io_size, align 4
  br label %if.end155

if.else47:                                        ; preds = %if.else40
  %call48 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(11) @.str.229, i32 noundef 10)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.then50, label %if.else54

if.then50:                                        ; preds = %if.else47
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr51 = getelementptr i8, ptr %call3, i32 10
  %call52 = call i64 @memparse(ptr noundef %add.ptr51, ptr noundef nonnull %str.addr) #24
  %conv53 = trunc i64 %call52 to i32
  store i32 %conv53, ptr @pci_cardbus_mem_size, align 4
  br label %if.end155

if.else54:                                        ; preds = %if.else47
  %call55 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(20) @.str.230, i32 noundef 19)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.then57, label %if.else59

if.then57:                                        ; preds = %if.else54
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr58 = getelementptr i8, ptr %call3, i32 19
  store ptr %add.ptr58, ptr @resource_alignment_param, align 4
  br label %if.end155

if.else59:                                        ; preds = %if.else54
  %call60 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(6) @.str.231, i32 noundef 5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %if.then62, label %if.else64

if.then62:                                        ; preds = %if.else59
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr63 = getelementptr i8, ptr %call3, i32 5
  call void @pcie_ecrc_get_policy(ptr noundef %add.ptr63) #24
  br label %if.end155

if.else64:                                        ; preds = %if.else59
  %call65 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(10) @.str.232, i32 noundef 9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %if.then67, label %if.else71

if.then67:                                        ; preds = %if.else64
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr68 = getelementptr i8, ptr %call3, i32 9
  %call69 = call i64 @memparse(ptr noundef %add.ptr68, ptr noundef nonnull %str.addr) #24
  %conv70 = trunc i64 %call69 to i32
  store i32 %conv70, ptr @pci_hotplug_io_size, align 4
  br label %if.end155

if.else71:                                        ; preds = %if.else64
  %call72 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(12) @.str.233, i32 noundef 11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %if.then74, label %if.else78

if.then74:                                        ; preds = %if.else71
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr75 = getelementptr i8, ptr %call3, i32 11
  %call76 = call i64 @memparse(ptr noundef %add.ptr75, ptr noundef nonnull %str.addr) #24
  %conv77 = trunc i64 %call76 to i32
  store i32 %conv77, ptr @pci_hotplug_mmio_size, align 4
  br label %if.end155

if.else78:                                        ; preds = %if.else71
  %call79 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(16) @.str.234, i32 noundef 15)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.then81, label %if.else85

if.then81:                                        ; preds = %if.else78
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr82 = getelementptr i8, ptr %call3, i32 15
  %call83 = call i64 @memparse(ptr noundef %add.ptr82, ptr noundef nonnull %str.addr) #24
  %conv84 = trunc i64 %call83 to i32
  store i32 %conv84, ptr @pci_hotplug_mmio_pref_size, align 4
  br label %if.end155

if.else85:                                        ; preds = %if.else78
  %call86 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(11) @.str.235, i32 noundef 10)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86)
  %tobool87.not = icmp eq i32 %call86, 0
  br i1 %tobool87.not, label %if.then88, label %if.else92

if.then88:                                        ; preds = %if.else85
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr89 = getelementptr i8, ptr %call3, i32 10
  %call90 = call i64 @memparse(ptr noundef %add.ptr89, ptr noundef nonnull %str.addr) #24
  %conv91 = trunc i64 %call90 to i32
  store i32 %conv91, ptr @pci_hotplug_mmio_size, align 4
  store i32 %conv91, ptr @pci_hotplug_mmio_pref_size, align 4
  br label %if.end155

if.else92:                                        ; preds = %if.else85
  %call93 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(11) @.str.236, i32 noundef 10)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call93)
  %tobool94.not = icmp eq i32 %call93, 0
  br i1 %tobool94.not, label %if.then95, label %if.else101

if.then95:                                        ; preds = %if.else92
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr96 = getelementptr i8, ptr %call3, i32 10
  %call97 = call i32 @simple_strtoul(ptr noundef %add.ptr96, ptr noundef nonnull %str.addr, i32 noundef 0) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %call97)
  %cmp = icmp ugt i32 %call97, 255
  %spec.store.select = select i1 %cmp, i32 1, i32 %call97
  store i32 %spec.store.select, ptr @pci_hotplug_bus_size, align 4
  br label %if.end155

if.else101:                                       ; preds = %if.else92
  %call102 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(18) @.str.237, i32 noundef 17)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call102)
  %tobool103.not = icmp eq i32 %call102, 0
  br i1 %tobool103.not, label %if.then104, label %if.else105

if.then104:                                       ; preds = %if.else101
  call void @__sanitizer_cov_trace_pc() #26
  store i32 0, ptr @pcie_bus_config, align 4
  br label %if.end155

if.else105:                                       ; preds = %if.else101
  %call106 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(14) @.str.238, i32 noundef 13)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %if.then108, label %if.else109

if.then108:                                       ; preds = %if.else105
  call void @__sanitizer_cov_trace_pc() #26
  store i32 2, ptr @pcie_bus_config, align 4
  br label %if.end155

if.else109:                                       ; preds = %if.else105
  %call110 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(14) @.str.239, i32 noundef 13)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call110)
  %tobool111.not = icmp eq i32 %call110, 0
  br i1 %tobool111.not, label %if.then112, label %if.else113

if.then112:                                       ; preds = %if.else109
  call void @__sanitizer_cov_trace_pc() #26
  store i32 3, ptr @pcie_bus_config, align 4
  br label %if.end155

if.else113:                                       ; preds = %if.else109
  %call114 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(19) @.str.240, i32 noundef 18)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114)
  %tobool115.not = icmp eq i32 %call114, 0
  br i1 %tobool115.not, label %if.then116, label %if.else117

if.then116:                                       ; preds = %if.else113
  call void @__sanitizer_cov_trace_pc() #26
  store i32 4, ptr @pcie_bus_config, align 4
  br label %if.end155

if.else117:                                       ; preds = %if.else113
  %call118 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(14) @.str.241, i32 noundef 13)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call118)
  %tobool119.not = icmp eq i32 %call118, 0
  br i1 %tobool119.not, label %if.then120, label %if.else121

if.then120:                                       ; preds = %if.else117
  call void @__sanitizer_cov_trace_pc() #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_flags to i32))
  %9 = load i32, ptr @pci_flags, align 4
  %or.i = or i32 %9, 64
  store i32 %or.i, ptr @pci_flags, align 4
  br label %if.end155

if.else121:                                       ; preds = %if.else117
  %call122 = call i32 @strncmp(ptr noundef nonnull %call3, ptr noundef nonnull dereferenceable(19) @.str.242, i32 noundef 18)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call122)
  %tobool123.not = icmp eq i32 %call122, 0
  br i1 %tobool123.not, label %if.then124, label %do.end129

if.then124:                                       ; preds = %if.else121
  call void @__sanitizer_cov_trace_pc() #26
  %add.ptr125 = getelementptr i8, ptr %call3, i32 18
  store ptr %add.ptr125, ptr @disable_acs_redir_param, align 4
  br label %if.end155

do.end129:                                        ; preds = %if.else121
  call void @__sanitizer_cov_trace_pc() #26
  %call131 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.244, ptr noundef nonnull %call3) #28
  br label %if.end155

if.end155:                                        ; preds = %do.end129, %if.then124, %if.then120, %if.then116, %if.then112, %if.then108, %if.then104, %if.then95, %if.then88, %if.then81, %if.then74, %if.then67, %if.then62, %if.then57, %if.then50, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %do.end, %if.then11, %land.lhs.true5.if.end155_crit_edge, %land.lhs.true.if.end155_crit_edge, %if.end.if.end155_crit_edge
  %10 = ptrtoint ptr %str.addr to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %k.0, ptr %str.addr, align 4
  %tobool.not = icmp eq ptr %k.0, null
  br i1 %tobool.not, label %if.end155.while.end_crit_edge, label %if.end155.while.body_crit_edge

if.end155.while.body_crit_edge:                   ; preds = %if.end155
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.body

if.end155.while.end_crit_edge:                    ; preds = %if.end155
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end

while.end:                                        ; preds = %if.end155.while.end_crit_edge, %entry.while.end_crit_edge
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_realloc_setup_params() #14 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @resource_alignment_param, align 4
  %call = tail call noalias ptr @kstrdup(ptr noundef %0, i32 noundef 3264) #24
  store ptr %call, ptr @resource_alignment_param, align 4
  %1 = load ptr, ptr @disable_acs_redir_param, align 4
  %call1 = tail call noalias ptr @kstrdup(ptr noundef %1, i32 noundef 3264) #24
  store ptr %call1, ptr @disable_acs_redir_param, align 4
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap_wc(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_bus_read_config_word(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pcie_aspm_pm_state_change(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_update_resource(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #15

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_restore_config_dword(ptr noundef %pdev, i32 noundef %offset, i32 noundef %saved_val, i32 noundef %retry, i1 noundef zeroext %force) unnamed_addr #5 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #24
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val, align 4, !annotation !731
  %call = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %offset, ptr noundef nonnull %val) #24
  br i1 %force, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %saved_val)
  %cmp = icmp eq i32 %2, %saved_val
  br i1 %cmp, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  br label %for.cond

for.cond:                                         ; preds = %if.end16, %if.end
  %retry.addr.0 = phi i32 [ %retry, %if.end ], [ %dec, %if.end16 ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @pci_restore_config_dword.__UNIQUE_ID_ddebug239, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_restore_config_dword, %do.end)) #24
          to label %if.then7 [label %do.end], !srcloc !733

if.then7:                                         ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #26
  %3 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %val, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @pci_restore_config_dword.__UNIQUE_ID_ddebug239, ptr noundef %dev, ptr noundef nonnull @.str.107, i32 noundef %offset, i32 noundef %4, i32 noundef %saved_val) #24
  br label %do.end

do.end:                                           ; preds = %if.then7, %for.cond
  %call9 = call i32 @pci_write_config_dword(ptr noundef %pdev, i32 noundef %offset, i32 noundef %saved_val) #24
  %dec = add i32 %retry.addr.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retry.addr.0)
  %cmp10 = icmp slt i32 %retry.addr.0, 1
  br i1 %cmp10, label %do.end.cleanup_crit_edge, label %if.end12

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end12:                                         ; preds = %do.end
  %call13 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef %offset, ptr noundef nonnull %val) #24
  %5 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %val, align 4
  %cmp14 = icmp eq i32 %6, %saved_val
  br i1 %cmp14, label %if.end12.cleanup_crit_edge, label %if.end16

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end16:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %7 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %7(i32 noundef 214748000) #24
  br label %for.cond

cleanup:                                          ; preds = %if.end12.cleanup_crit_edge, %do.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_dev_specific_enable_acs(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_dev_str_match(ptr nocapture noundef readonly %dev, ptr noundef %p, ptr nocapture noundef writeonly %endptr) unnamed_addr #5 align 64 {
entry:
  %seg.i = alloca i32, align 4
  %bus.i = alloca i32, align 4
  %slot.i = alloca i32, align 4
  %func.i = alloca i32, align 4
  %end.i = alloca i8, align 1
  %count = alloca i32, align 4
  %vendor = alloca i16, align 2
  %device = alloca i16, align 2
  %subsystem_vendor = alloca i16, align 2
  %subsystem_device = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %count) #24
  %0 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %count, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %vendor) #24
  %1 = ptrtoint ptr %vendor to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %vendor, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %device) #24
  %2 = ptrtoint ptr %device to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %device, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %subsystem_vendor) #24
  %3 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %subsystem_vendor, align 2, !annotation !731
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %subsystem_device) #24
  %4 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %subsystem_device, align 2, !annotation !731
  %call = tail call i32 @strncmp(ptr noundef %p, ptr noundef nonnull dereferenceable(5) @.str.116, i32 noundef 4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %add.ptr = getelementptr i8, ptr %p, i32 4
  %call1 = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %add.ptr, ptr noundef nonnull @.str.117, ptr noundef nonnull %vendor, ptr noundef nonnull %device, ptr noundef nonnull %subsystem_vendor, ptr noundef nonnull %subsystem_device, ptr noundef nonnull %count)
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %call1)
  %cmp2.not = icmp eq i32 %call1, 4
  br i1 %cmp2.not, label %if.then.if.end7_crit_edge, label %if.then3

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end7

if.then3:                                         ; preds = %if.then
  %call4 = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %add.ptr, ptr noundef nonnull @.str.118, ptr noundef nonnull %vendor, ptr noundef nonnull %device, ptr noundef nonnull %count)
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call4)
  %cmp5.not = icmp eq i32 %call4, 2
  br i1 %cmp5.not, label %if.end, label %if.then3.cleanup_crit_edge

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #26
  %5 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 0, ptr %subsystem_vendor, align 2
  %6 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 0, ptr %subsystem_device, align 2
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then.if.end7_crit_edge
  %7 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %count, align 4
  %add.ptr8 = getelementptr i8, ptr %add.ptr, i32 %8
  %9 = ptrtoint ptr %vendor to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vendor, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not = icmp eq i16 %10, 0
  br i1 %tobool.not, label %if.end7.land.lhs.true_crit_edge, label %lor.lhs.false

if.end7.land.lhs.true_crit_edge:                  ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.end7
  %vendor9 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 7
  %11 = ptrtoint ptr %vendor9 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %vendor9, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %10, i16 %12)
  %cmp11 = icmp eq i16 %10, %12
  br i1 %cmp11, label %lor.lhs.false.land.lhs.true_crit_edge, label %lor.lhs.false.if.end47_crit_edge

lor.lhs.false.if.end47_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end47

lor.lhs.false.land.lhs.true_crit_edge:            ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false.land.lhs.true_crit_edge, %if.end7.land.lhs.true_crit_edge
  %13 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool13.not = icmp eq i16 %14, 0
  br i1 %tobool13.not, label %land.lhs.true.land.lhs.true20_crit_edge, label %lor.lhs.false14

land.lhs.true.land.lhs.true20_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true20

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %device16 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %15 = ptrtoint ptr %device16 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %device16, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %14, i16 %16)
  %cmp18 = icmp eq i16 %14, %16
  br i1 %cmp18, label %lor.lhs.false14.land.lhs.true20_crit_edge, label %lor.lhs.false14.if.end47_crit_edge

lor.lhs.false14.if.end47_crit_edge:               ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end47

lor.lhs.false14.land.lhs.true20_crit_edge:        ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true20

land.lhs.true20:                                  ; preds = %lor.lhs.false14.land.lhs.true20_crit_edge, %land.lhs.true.land.lhs.true20_crit_edge
  %17 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %subsystem_vendor, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %tobool21.not = icmp eq i16 %18, 0
  br i1 %tobool21.not, label %land.lhs.true20.land.lhs.true28_crit_edge, label %lor.lhs.false22

land.lhs.true20.land.lhs.true28_crit_edge:        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true28

lor.lhs.false22:                                  ; preds = %land.lhs.true20
  %subsystem_vendor24 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 9
  %19 = ptrtoint ptr %subsystem_vendor24 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %subsystem_vendor24, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %18, i16 %20)
  %cmp26 = icmp eq i16 %18, %20
  br i1 %cmp26, label %lor.lhs.false22.land.lhs.true28_crit_edge, label %lor.lhs.false22.if.end47_crit_edge

lor.lhs.false22.if.end47_crit_edge:               ; preds = %lor.lhs.false22
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end47

lor.lhs.false22.land.lhs.true28_crit_edge:        ; preds = %lor.lhs.false22
  call void @__sanitizer_cov_trace_pc() #26
  br label %land.lhs.true28

land.lhs.true28:                                  ; preds = %lor.lhs.false22.land.lhs.true28_crit_edge, %land.lhs.true20.land.lhs.true28_crit_edge
  %21 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %subsystem_device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool29.not = icmp eq i16 %22, 0
  br i1 %tobool29.not, label %land.lhs.true28.found_crit_edge, label %lor.lhs.false30

land.lhs.true28.found_crit_edge:                  ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #26
  br label %found

lor.lhs.false30:                                  ; preds = %land.lhs.true28
  %subsystem_device32 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %23 = ptrtoint ptr %subsystem_device32 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %subsystem_device32, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %22, i16 %24)
  %cmp34 = icmp eq i16 %22, %24
  br i1 %cmp34, label %lor.lhs.false30.found_crit_edge, label %lor.lhs.false30.if.end47_crit_edge

lor.lhs.false30.if.end47_crit_edge:               ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end47

lor.lhs.false30.found_crit_edge:                  ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #26
  br label %found

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %seg.i) #24
  %25 = ptrtoint ptr %seg.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 -1, ptr %seg.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bus.i) #24
  %26 = ptrtoint ptr %bus.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 -1, ptr %bus.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %slot.i) #24
  %27 = ptrtoint ptr %slot.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 -1, ptr %slot.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %func.i) #24
  %28 = ptrtoint ptr %func.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %func.i, align 4, !annotation !731
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %end.i) #24
  %29 = ptrtoint ptr %end.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 -1, ptr %end.i, align 1, !annotation !731
  %call.i = tail call ptr @strchrnul(ptr noundef %p, i32 noundef 59) #24
  %sub.ptr.lhs.cast.i = ptrtoint ptr %call.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %p to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %call1.i = tail call ptr @kmemdup_nul(ptr noundef %p, i32 noundef %sub.ptr.sub.i, i32 noundef 2592) #24
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %pci_dev_str_match_path.exit.thread, label %while.cond.preheader.i

pci_dev_str_match_path.exit.thread:               ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %end.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %func.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %slot.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bus.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seg.i) #24
  br label %cleanup

while.cond.preheader.i:                           ; preds = %if.else
  %call265.i = tail call ptr @strrchr(ptr noundef nonnull %call1.i, i32 noundef 47) #24
  %tobool3.not66.i = icmp eq ptr %call265.i, null
  br i1 %tobool3.not66.i, label %while.cond.preheader.i.while.end.i_crit_edge, label %while.cond.preheader.i.if.end5.i_crit_edge

while.cond.preheader.i.if.end5.i_crit_edge:       ; preds = %while.cond.preheader.i
  br label %if.end5.i

while.cond.preheader.i.while.end.i_crit_edge:     ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end.i

if.end5.i:                                        ; preds = %if.end16.i.if.end5.i_crit_edge, %while.cond.preheader.i.if.end5.i_crit_edge
  %call268.i = phi ptr [ %call2.i, %if.end16.i.if.end5.i_crit_edge ], [ %call265.i, %while.cond.preheader.i.if.end5.i_crit_edge ]
  %dev.addr.067.i = phi ptr [ %46, %if.end16.i.if.end5.i_crit_edge ], [ %dev, %while.cond.preheader.i.if.end5.i_crit_edge ]
  %call6.i = call i32 (ptr, ptr, ...) @sscanf(ptr noundef nonnull %call268.i, ptr noundef nonnull @.str.119, ptr noundef nonnull %slot.i, ptr noundef nonnull %func.i, ptr noundef nonnull %end.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call6.i)
  %cmp.not.i = icmp eq i32 %call6.i, 2
  br i1 %cmp.not.i, label %if.end8.i, label %if.end5.i.pci_dev_str_match_path.exit_crit_edge

if.end5.i.pci_dev_str_match_path.exit_crit_edge:  ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_str_match_path.exit

if.end8.i:                                        ; preds = %if.end5.i
  %devfn.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.067.i, i32 0, i32 6
  %30 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %devfn.i, align 4
  %32 = ptrtoint ptr %slot.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %slot.i, align 4
  %and.i = shl i32 %33, 3
  %shl.i = and i32 %and.i, 248
  %34 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %func.i, align 4
  %and9.i = and i32 %35, 7
  %or.i = or i32 %shl.i, %and9.i
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %or.i)
  %cmp10.not.i = icmp eq i32 %31, %or.i
  br i1 %cmp10.not.i, label %if.end12.i, label %if.end8.i.if.else42.thread_crit_edge

if.end8.i.if.else42.thread_crit_edge:             ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else42.thread

if.end12.i:                                       ; preds = %if.end8.i
  %is_virtfn.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.067.i, i32 0, i32 49
  %36 = ptrtoint ptr %is_virtfn.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %36, i32 5)
  %bf.load.i.i.i = load i40, ptr %is_virtfn.i.i.i, align 1
  %37 = and i40 %bf.load.i.i.i, 65536
  %tobool.not.i.i.i = icmp eq i40 %37, 0
  br i1 %tobool.not.i.i.i, label %if.end12.i.pci_physfn.exit.i.i_crit_edge, label %if.then.i.i.i

if.end12.i.pci_physfn.exit.i.i_crit_edge:         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_physfn.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #26
  %38 = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.067.i, i32 0, i32 66
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %38, align 8
  br label %pci_physfn.exit.i.i

pci_physfn.exit.i.i:                              ; preds = %if.then.i.i.i, %if.end12.i.pci_physfn.exit.i.i_crit_edge
  %dev.addr.0.i.i.i = phi ptr [ %40, %if.then.i.i.i ], [ %dev.addr.067.i, %if.end12.i.pci_physfn.exit.i.i_crit_edge ]
  %bus.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i.i, i32 0, i32 1
  %41 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bus.i.i, align 8
  %parent.i.i.i = getelementptr inbounds %struct.pci_bus, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i5.i.i = icmp eq ptr %44, null
  br i1 %tobool.not.i5.i.i, label %pci_physfn.exit.i.i.if.else42.thread_crit_edge, label %pci_upstream_bridge.exit.i

pci_physfn.exit.i.i.if.else42.thread_crit_edge:   ; preds = %pci_physfn.exit.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else42.thread

pci_upstream_bridge.exit.i:                       ; preds = %pci_physfn.exit.i.i
  %self.i.i = getelementptr inbounds %struct.pci_bus, ptr %42, i32 0, i32 4
  %45 = ptrtoint ptr %self.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %self.i.i, align 4
  %tobool14.not.i = icmp eq ptr %46, null
  br i1 %tobool14.not.i, label %pci_upstream_bridge.exit.i.if.else42.thread_crit_edge, label %if.end16.i

pci_upstream_bridge.exit.i.if.else42.thread_crit_edge: ; preds = %pci_upstream_bridge.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else42.thread

if.end16.i:                                       ; preds = %pci_upstream_bridge.exit.i
  %47 = ptrtoint ptr %call268.i to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 0, ptr %call268.i, align 1
  %call2.i = call ptr @strrchr(ptr noundef nonnull %call1.i, i32 noundef 47) #24
  %tobool3.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool3.not.i, label %if.end16.i.while.end.i_crit_edge, label %if.end16.i.if.end5.i_crit_edge

if.end16.i.if.end5.i_crit_edge:                   ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end5.i

if.end16.i.while.end.i_crit_edge:                 ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.end.i

while.end.i:                                      ; preds = %if.end16.i.while.end.i_crit_edge, %while.cond.preheader.i.while.end.i_crit_edge
  %dev.addr.0.lcssa.i = phi ptr [ %dev, %while.cond.preheader.i.while.end.i_crit_edge ], [ %46, %if.end16.i.while.end.i_crit_edge ]
  %call17.i = call i32 (ptr, ptr, ...) @sscanf(ptr noundef nonnull %call1.i, ptr noundef nonnull @.str.120, ptr noundef nonnull %seg.i, ptr noundef nonnull %bus.i, ptr noundef nonnull %slot.i, ptr noundef nonnull %func.i, ptr noundef nonnull %end.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %call17.i)
  %cmp18.not.i = icmp eq i32 %call17.i, 4
  br i1 %cmp18.not.i, label %while.end.i.if.end24.i_crit_edge, label %if.then19.i

while.end.i.if.end24.i_crit_edge:                 ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end24.i

if.then19.i:                                      ; preds = %while.end.i
  %48 = ptrtoint ptr %seg.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %seg.i, align 4
  %call20.i = call i32 (ptr, ptr, ...) @sscanf(ptr noundef nonnull %call1.i, ptr noundef nonnull @.str.121, ptr noundef nonnull %bus.i, ptr noundef nonnull %slot.i, ptr noundef nonnull %func.i, ptr noundef nonnull %end.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call20.i)
  %cmp21.not.i = icmp eq i32 %call20.i, 3
  br i1 %cmp21.not.i, label %if.then19.i.if.end24.i_crit_edge, label %if.then19.i.pci_dev_str_match_path.exit_crit_edge

if.then19.i.pci_dev_str_match_path.exit_crit_edge: ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_str_match_path.exit

if.then19.i.if.end24.i_crit_edge:                 ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then19.i.if.end24.i_crit_edge, %while.end.i.if.end24.i_crit_edge
  %49 = ptrtoint ptr %seg.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %seg.i, align 4
  %bus25.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.lcssa.i, i32 0, i32 1
  %51 = ptrtoint ptr %bus25.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %bus25.i, align 8
  %domain_nr.i.i = getelementptr inbounds %struct.pci_bus, ptr %52, i32 0, i32 16
  %53 = ptrtoint ptr %domain_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %domain_nr.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %54)
  %cmp27.i = icmp eq i32 %50, %54
  br i1 %cmp27.i, label %land.lhs.true.i, label %if.end24.i.if.else42.thread_crit_edge

if.end24.i.if.else42.thread_crit_edge:            ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else42.thread

land.lhs.true.i:                                  ; preds = %if.end24.i
  %55 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %bus.i, align 4
  %number.i = getelementptr inbounds %struct.pci_bus, ptr %52, i32 0, i32 12
  %57 = ptrtoint ptr %number.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %number.i, align 4
  %conv.i = zext i8 %58 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %conv.i)
  %cmp29.i = icmp eq i32 %56, %conv.i
  br i1 %cmp29.i, label %if.else42, label %land.lhs.true.i.if.else42.thread_crit_edge

land.lhs.true.i.if.else42.thread_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.else42.thread

pci_dev_str_match_path.exit:                      ; preds = %if.then19.i.pci_dev_str_match_path.exit_crit_edge, %if.end5.i.pci_dev_str_match_path.exit_crit_edge
  call void @kfree(ptr noundef nonnull %call1.i) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %end.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %func.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %slot.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bus.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seg.i) #24
  br label %cleanup

if.else42.thread:                                 ; preds = %land.lhs.true.i.if.else42.thread_crit_edge, %if.end24.i.if.else42.thread_crit_edge, %pci_upstream_bridge.exit.i.if.else42.thread_crit_edge, %pci_physfn.exit.i.i.if.else42.thread_crit_edge, %if.end8.i.if.else42.thread_crit_edge
  call void @kfree(ptr noundef nonnull %call1.i) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %end.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %func.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %slot.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bus.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seg.i) #24
  br label %if.end47

if.else42:                                        ; preds = %land.lhs.true.i
  %devfn31.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.lcssa.i, i32 0, i32 6
  %59 = ptrtoint ptr %devfn31.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %devfn31.i, align 4
  %61 = ptrtoint ptr %slot.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %slot.i, align 4
  %and32.i = shl i32 %62, 3
  %shl33.i = and i32 %and32.i, 248
  %63 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %func.i, align 4
  %and34.i = and i32 %64, 7
  %or35.i = or i32 %shl33.i, %and34.i
  call void @__sanitizer_cov_trace_cmp4(i32 %60, i32 %or35.i)
  %cmp36.i.not = icmp eq i32 %60, %or35.i
  call void @kfree(ptr noundef nonnull %call1.i) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %end.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %func.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %slot.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bus.i) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seg.i) #24
  br i1 %cmp36.i.not, label %if.else42.found_crit_edge, label %if.else42.if.end47_crit_edge

if.else42.if.end47_crit_edge:                     ; preds = %if.else42
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end47

if.else42.found_crit_edge:                        ; preds = %if.else42
  call void @__sanitizer_cov_trace_pc() #26
  br label %found

if.end47:                                         ; preds = %if.else42.if.end47_crit_edge, %if.else42.thread, %lor.lhs.false30.if.end47_crit_edge, %lor.lhs.false22.if.end47_crit_edge, %lor.lhs.false14.if.end47_crit_edge, %lor.lhs.false.if.end47_crit_edge
  %p.addr.0 = phi ptr [ %add.ptr8, %lor.lhs.false30.if.end47_crit_edge ], [ %add.ptr8, %lor.lhs.false22.if.end47_crit_edge ], [ %add.ptr8, %lor.lhs.false14.if.end47_crit_edge ], [ %add.ptr8, %lor.lhs.false.if.end47_crit_edge ], [ %call.i, %if.else42.if.end47_crit_edge ], [ %call.i, %if.else42.thread ]
  %65 = ptrtoint ptr %endptr to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %p.addr.0, ptr %endptr, align 4
  br label %cleanup

found:                                            ; preds = %if.else42.found_crit_edge, %lor.lhs.false30.found_crit_edge, %land.lhs.true28.found_crit_edge
  %p.addr.1 = phi ptr [ %add.ptr8, %land.lhs.true28.found_crit_edge ], [ %add.ptr8, %lor.lhs.false30.found_crit_edge ], [ %call.i, %if.else42.found_crit_edge ]
  %66 = ptrtoint ptr %endptr to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %p.addr.1, ptr %endptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %found, %if.end47, %pci_dev_str_match_path.exit, %pci_dev_str_match_path.exit.thread, %if.then3.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %found ], [ 0, %if.end47 ], [ -22, %if.then3.cleanup_crit_edge ], [ -22, %pci_dev_str_match_path.exit ], [ -12, %pci_dev_str_match_path.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %subsystem_device) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %subsystem_vendor) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %device) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %vendor) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %count) #24
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_dev_specific_disable_acs_redir(ptr noundef) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strchrnul(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup_nul(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid
declare dso_local void @pcie_aspm_powersave_config_link(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_fixup_device(i32 noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_enable_bridge(ptr noundef %dev) unnamed_addr #5 align 64 {
entry:
  %old_cmd.i.i24 = alloca i16, align 2
  %old_cmd.i.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %is_virtfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load.i.i = load i40, ptr %is_virtfn.i.i, align 1
  %1 = and i40 %bf.load.i.i, 65536
  %tobool.not.i.i = icmp eq i40 %1, 0
  br i1 %tobool.not.i.i, label %entry.pci_physfn.exit.i_crit_edge, label %if.then.i.i

entry.pci_physfn.exit.i_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_physfn.exit.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %2 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 66
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  br label %pci_physfn.exit.i

pci_physfn.exit.i:                                ; preds = %if.then.i.i, %entry.pci_physfn.exit.i_crit_edge
  %dev.addr.0.i.i = phi ptr [ %4, %if.then.i.i ], [ %dev, %entry.pci_physfn.exit.i_crit_edge ]
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i5.i = icmp eq ptr %8, null
  br i1 %tobool.not.i5.i, label %pci_physfn.exit.i.if.end_crit_edge, label %pci_upstream_bridge.exit

pci_physfn.exit.i.if.end_crit_edge:               ; preds = %pci_physfn.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

pci_upstream_bridge.exit:                         ; preds = %pci_physfn.exit.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %6, i32 0, i32 4
  %9 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %self.i, align 4
  %tobool.not = icmp eq ptr %10, null
  br i1 %tobool.not, label %pci_upstream_bridge.exit.if.end_crit_edge, label %if.then

pci_upstream_bridge.exit.if.end_crit_edge:        ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_enable_bridge(ptr noundef nonnull %10)
  br label %if.end

if.end:                                           ; preds = %if.then, %pci_upstream_bridge.exit.if.end_crit_edge, %pci_physfn.exit.i.if.end_crit_edge
  %enable_cnt.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 51
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %enable_cnt.i, i32 noundef 4) #24
  %11 = ptrtoint ptr %enable_cnt.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %enable_cnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp.i = icmp slt i32 %12, 1
  br i1 %cmp.i, label %if.end7, label %if.then3

if.then3:                                         ; preds = %if.end
  %13 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 5)
  %bf.load = load i40, ptr %is_virtfn.i.i, align 1
  %14 = and i40 %bf.load, 17179869184
  %tobool4.not = icmp eq i40 %14, 0
  br i1 %tobool4.not, label %if.then5, label %if.then3.cleanup_crit_edge

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.then5:                                         ; preds = %if.then3
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %old_cmd.i.i) #24
  %15 = ptrtoint ptr %old_cmd.i.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 -1, ptr %old_cmd.i.i, align 2, !annotation !731
  %call.i.i = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %old_cmd.i.i) #24
  %16 = ptrtoint ptr %old_cmd.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %old_cmd.i.i, align 2
  %cmd.0.i.i = or i16 %17, 4
  call void @__sanitizer_cov_trace_cmp2(i16 %cmd.0.i.i, i16 %17)
  %cmp.not.i.i = icmp eq i16 %cmd.0.i.i, %17
  br i1 %cmp.not.i.i, label %if.then5.pci_set_master.exit_crit_edge, label %do.body.i.i

if.then5.pci_set_master.exit_crit_edge:           ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_master.exit

do.body.i.i:                                      ; preds = %if.then5
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__pci_set_master.__UNIQUE_ID_ddebug241, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_enable_bridge, %do.end.i.i)) #24
          to label %if.then14.i.i [label %do.end.i.i], !srcloc !733

if.then14.i.i:                                    ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev15.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__pci_set_master.__UNIQUE_ID_ddebug241, ptr noundef %dev15.i.i, ptr noundef nonnull @.str.155, ptr noundef nonnull @.str.156) #24
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %if.then14.i.i, %do.body.i.i
  %call19.i.i = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %cmd.0.i.i) #24
  br label %pci_set_master.exit

pci_set_master.exit:                              ; preds = %do.end.i.i, %if.then5.pci_set_master.exit_crit_edge
  %18 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 5)
  %bf.load.i.i23 = load i40, ptr %is_virtfn.i.i, align 1
  %bf.set.i.i = or i40 %bf.load.i.i23, 17179869184
  store i40 %bf.set.i.i, ptr %is_virtfn.i.i, align 1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %old_cmd.i.i) #24
  br label %cleanup.sink.split

if.end7:                                          ; preds = %if.end
  %call.i = tail call fastcc i32 @pci_enable_device_flags(ptr noundef %dev, i32 noundef 768) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool9.not = icmp eq i32 %call.i, 0
  br i1 %tobool9.not, label %if.end7.if.end12_crit_edge, label %do.end

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end12

do.end:                                           ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #26
  %dev11 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev11, ptr noundef nonnull @.str.122, i32 noundef %call.i) #28
  br label %if.end12

if.end12:                                         ; preds = %do.end, %if.end7.if.end12_crit_edge
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %old_cmd.i.i24) #24
  %19 = ptrtoint ptr %old_cmd.i.i24 to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 -1, ptr %old_cmd.i.i24, align 2, !annotation !731
  %call.i.i25 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %old_cmd.i.i24) #24
  %20 = ptrtoint ptr %old_cmd.i.i24 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %old_cmd.i.i24, align 2
  %cmd.0.i.i26 = or i16 %21, 4
  call void @__sanitizer_cov_trace_cmp2(i16 %cmd.0.i.i26, i16 %21)
  %cmp.not.i.i27 = icmp eq i16 %cmd.0.i.i26, %21
  br i1 %cmp.not.i.i27, label %if.end12.pci_set_master.exit36_crit_edge, label %do.body.i.i28

if.end12.pci_set_master.exit36_crit_edge:         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_set_master.exit36

do.body.i.i28:                                    ; preds = %if.end12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__pci_set_master.__UNIQUE_ID_ddebug241, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@pci_enable_bridge, %do.end.i.i32)) #24
          to label %if.then14.i.i30 [label %do.end.i.i32], !srcloc !733

if.then14.i.i30:                                  ; preds = %do.body.i.i28
  call void @__sanitizer_cov_trace_pc() #26
  %dev15.i.i29 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__pci_set_master.__UNIQUE_ID_ddebug241, ptr noundef %dev15.i.i29, ptr noundef nonnull @.str.155, ptr noundef nonnull @.str.156) #24
  br label %do.end.i.i32

do.end.i.i32:                                     ; preds = %if.then14.i.i30, %do.body.i.i28
  %call19.i.i31 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %cmd.0.i.i26) #24
  br label %pci_set_master.exit36

pci_set_master.exit36:                            ; preds = %do.end.i.i32, %if.end12.pci_set_master.exit36_crit_edge
  %22 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 5)
  %bf.load.i.i34 = load i40, ptr %is_virtfn.i.i, align 1
  %bf.set.i.i35 = or i40 %bf.load.i.i34, 17179869184
  store i40 %bf.set.i.i35, ptr %is_virtfn.i.i, align 1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %old_cmd.i.i24) #24
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %pci_set_master.exit36, %pci_set_master.exit
  call void @pcibios_set_master(ptr noundef %dev) #24
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.then3.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #20

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devres_find(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pcim_release(ptr noundef %gendev, ptr nocapture noundef readonly %res) #5 align 64 {
entry:
  %pci_command.i = alloca i16, align 2
  %cmd.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %gendev, i32 -136
  %region_mask = getelementptr inbounds %struct.pci_devres, ptr %res, i32 0, i32 1
  %is_managed.i.i.i = getelementptr i8, ptr %gendev, i32 1481
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.047 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %0 = ptrtoint ptr %region_mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %region_mask, align 4
  %shl = shl nuw nsw i32 1, %i.047
  %and = and i32 %1, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then:                                          ; preds = %for.body
  %end.i = getelementptr %struct.pci_dev, ptr %add.ptr, i32 0, i32 47, i32 %i.047, i32 1
  %2 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %end.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.i = icmp eq i32 %3, 0
  br i1 %cmp.i, label %if.then.for.inc_crit_edge, label %cond.false.i

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

cond.false.i:                                     ; preds = %if.then
  %arrayidx.i = getelementptr %struct.pci_dev, ptr %add.ptr, i32 0, i32 47, i32 %i.047
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 8
  %sub.i = sub i32 %3, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i)
  %phi.cmp.i = icmp eq i32 %sub.i, -1
  br i1 %phi.cmp.i, label %cond.false.i.for.inc_crit_edge, label %if.end.i

cond.false.i.for.inc_crit_edge:                   ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.end.i:                                         ; preds = %cond.false.i
  %flags.i = getelementptr %struct.pci_dev, ptr %add.ptr, i32 0, i32 47, i32 %i.047, i32 3
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.end.i.if.end55.sink.split.i_crit_edge

if.end.i.if.end55.sink.split.i_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.sink.split.i

if.else.i:                                        ; preds = %if.end.i
  %and32.i = and i32 %7, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i)
  %tobool33.not.i = icmp eq i32 %and32.i, 0
  br i1 %tobool33.not.i, label %if.else.i.if.end55.i_crit_edge, label %if.else.i.if.end55.sink.split.i_crit_edge

if.else.i.if.end55.sink.split.i_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.sink.split.i

if.else.i.if.end55.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end55.i

if.end55.sink.split.i:                            ; preds = %if.else.i.if.end55.sink.split.i_crit_edge, %if.end.i.if.end55.sink.split.i_crit_edge
  %iomem_resource.sink.i = phi ptr [ @ioport_resource, %if.end.i.if.end55.sink.split.i_crit_edge ], [ @iomem_resource, %if.else.i.if.end55.sink.split.i_crit_edge ]
  %add51.i = add nuw i32 %sub.i, 1
  tail call void @__release_region(ptr noundef nonnull %iomem_resource.sink.i, i32 noundef %5, i32 noundef %add51.i) #24
  br label %if.end55.i

if.end55.i:                                       ; preds = %if.end55.sink.split.i, %if.else.i.if.end55.i_crit_edge
  %8 = ptrtoint ptr %is_managed.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 5)
  %bf.load.i.i.i = load i40, ptr %is_managed.i.i.i, align 1
  %9 = and i40 %bf.load.i.i.i, 2097152
  %tobool.not.i.i = icmp eq i40 %9, 0
  br i1 %tobool.not.i.i, label %if.end55.i.for.inc_crit_edge, label %find_pci_dr.exit.i

if.end55.i.for.inc_crit_edge:                     ; preds = %if.end55.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

find_pci_dr.exit.i:                               ; preds = %if.end55.i
  %call1.i.i = tail call ptr @devres_find(ptr noundef %gendev, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool56.not.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool56.not.i, label %find_pci_dr.exit.i.for.inc_crit_edge, label %if.then57.i

find_pci_dr.exit.i.for.inc_crit_edge:             ; preds = %find_pci_dr.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then57.i:                                      ; preds = %find_pci_dr.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  %neg.i = xor i32 %shl, -1
  %region_mask.i = getelementptr inbounds %struct.pci_devres, ptr %call1.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %region_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %region_mask.i, align 4
  %and58.i = and i32 %11, %neg.i
  store i32 %and58.i, ptr %region_mask.i, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then57.i, %find_pci_dr.exit.i.for.inc_crit_edge, %if.end55.i.for.inc_crit_edge, %cond.false.i.for.inc_crit_edge, %if.then.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.047, 1
  %exitcond.not = icmp eq i32 %inc, 17
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.end:                                          ; preds = %for.inc
  %12 = ptrtoint ptr %res to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load = load i8, ptr %res, align 4
  %13 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool1.not = icmp eq i8 %13, 0
  br i1 %tobool1.not, label %for.end.if.end3_crit_edge, label %if.then2

for.end.if.end3_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end3

if.then2:                                         ; preds = %for.end
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd.i) #24
  %14 = ptrtoint ptr %cmd.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 -1, ptr %cmd.i, align 2, !annotation !731
  %call.i = call i32 @pci_read_config_word(ptr noundef %add.ptr, i32 noundef 4, ptr noundef nonnull %cmd.i) #24
  %15 = ptrtoint ptr %cmd.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %cmd.i, align 2
  %17 = and i16 %16, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool.not.i37 = icmp eq i16 %17, 0
  br i1 %tobool.not.i37, label %if.then2.pci_clear_mwi.exit_crit_edge, label %if.then.i

if.then2.pci_clear_mwi.exit_crit_edge:            ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_clear_mwi.exit

if.then.i:                                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #26
  %and2.i = and i16 %16, -17
  %18 = ptrtoint ptr %cmd.i to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %and2.i, ptr %cmd.i, align 2
  %call4.i = call i32 @pci_write_config_word(ptr noundef %add.ptr, i32 noundef 4, i16 noundef zeroext %and2.i) #24
  br label %pci_clear_mwi.exit

pci_clear_mwi.exit:                               ; preds = %if.then.i, %if.then2.pci_clear_mwi.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd.i) #24
  br label %if.end3

if.end3:                                          ; preds = %pci_clear_mwi.exit, %for.end.if.end3_crit_edge
  %19 = ptrtoint ptr %res to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load4 = load i8, ptr %res, align 4
  %20 = and i8 %bf.load4, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool8.not = icmp eq i8 %20, 0
  br i1 %tobool8.not, label %if.end3.if.end14_crit_edge, label %if.then9

if.end3.if.end14_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end14

if.then9:                                         ; preds = %if.end3
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pci_command.i) #24
  %21 = ptrtoint ptr %pci_command.i to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 -1, ptr %pci_command.i, align 2, !annotation !731
  %call.i39 = call i32 @pci_read_config_word(ptr noundef %add.ptr, i32 noundef 4, ptr noundef nonnull %pci_command.i) #24
  %22 = and i8 %bf.load4, 32
  %23 = ptrtoint ptr %pci_command.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %pci_command.i, align 2
  %25 = and i16 %24, -1025
  %26 = zext i8 %22 to i16
  %27 = shl nuw nsw i16 %26, 5
  %28 = or i16 %25, %27
  %new.0.i = xor i16 %28, 1024
  call void @__sanitizer_cov_trace_cmp2(i16 %new.0.i, i16 %24)
  %cmp.not.i = icmp eq i16 %new.0.i, %24
  br i1 %cmp.not.i, label %if.then9.pci_intx.exit_crit_edge, label %if.then7.i

if.then9.pci_intx.exit_crit_edge:                 ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_intx.exit

if.then7.i:                                       ; preds = %if.then9
  %call8.i = call i32 @pci_write_config_word(ptr noundef %add.ptr, i32 noundef 4, i16 noundef zeroext %new.0.i) #24
  %29 = ptrtoint ptr %is_managed.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %29, i32 5)
  %bf.load.i.i.i42 = load i40, ptr %is_managed.i.i.i, align 1
  %30 = and i40 %bf.load.i.i.i42, 2097152
  %tobool.not.i.i43 = icmp eq i40 %30, 0
  br i1 %tobool.not.i.i43, label %if.then7.i.pci_intx.exit_crit_edge, label %find_pci_dr.exit.i46

if.then7.i.pci_intx.exit_crit_edge:               ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_intx.exit

find_pci_dr.exit.i46:                             ; preds = %if.then7.i
  %call1.i.i45 = call ptr @devres_find(ptr noundef %gendev, ptr noundef nonnull @pcim_release, ptr noundef null, ptr noundef null) #24
  %tobool10.not.i = icmp eq ptr %call1.i.i45, null
  br i1 %tobool10.not.i, label %find_pci_dr.exit.i46.pci_intx.exit_crit_edge, label %land.lhs.true.i

find_pci_dr.exit.i46.pci_intx.exit_crit_edge:     ; preds = %find_pci_dr.exit.i46
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_intx.exit

land.lhs.true.i:                                  ; preds = %find_pci_dr.exit.i46
  %31 = ptrtoint ptr %call1.i.i45 to i32
  call void @__asan_load1_noabort(i32 %31)
  %bf.load.i = load i8, ptr %call1.i.i45, align 4
  %32 = and i8 %bf.load.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool11.not.i = icmp eq i8 %32, 0
  br i1 %tobool11.not.i, label %if.then12.i, label %land.lhs.true.i.pci_intx.exit_crit_edge

land.lhs.true.i.pci_intx.exit_crit_edge:          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_intx.exit

if.then12.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  %bf.set.i = and i8 %bf.load.i, -49
  %33 = or i8 %bf.set.i, %22
  %bf.set18.i = xor i8 %33, 48
  %34 = ptrtoint ptr %call1.i.i45 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %bf.set18.i, ptr %call1.i.i45, align 4
  br label %pci_intx.exit

pci_intx.exit:                                    ; preds = %if.then12.i, %land.lhs.true.i.pci_intx.exit_crit_edge, %find_pci_dr.exit.i46.pci_intx.exit_crit_edge, %if.then7.i.pci_intx.exit_crit_edge, %if.then9.pci_intx.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pci_command.i) #24
  br label %if.end14

if.end14:                                         ; preds = %pci_intx.exit, %if.end3.if.end14_crit_edge
  %35 = ptrtoint ptr %res to i32
  call void @__asan_load1_noabort(i32 %35)
  %bf.load15 = load i8, ptr %res, align 4
  %36 = and i8 %bf.load15, -64
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %36)
  %37 = icmp eq i8 %36, -128
  br i1 %37, label %if.then24, label %if.end14.if.end25_crit_edge

if.end14.if.end25_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end25

if.then24:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #26
  call void @pci_disable_device(ptr noundef %add.ptr)
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end14.if.end25_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devres_get(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_clear_and_set_dword(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_wakeup_dev_event(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #21

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #22

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pci_pme_list_scan(ptr nocapture noundef readnone %work) #5 align 64 {
entry:
  %pmcsr.i.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @pci_pme_list_mutex, i32 noundef 0) #24
  %0 = load ptr, ptr @pci_pme_list, align 4
  %cmp.not40 = icmp eq ptr %0, @pci_pme_list
  br i1 %cmp.not40, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %pme_dev.041 = phi ptr [ %n.043, %for.inc.for.body_crit_edge ], [ %0, %entry.for.body_crit_edge ]
  %1 = ptrtoint ptr %pme_dev.041 to i32
  call void @__asan_load4_noabort(i32 %1)
  %n.043 = load ptr, ptr %pme_dev.041, align 4
  %dev = getelementptr inbounds %struct.pci_pme_device, ptr %pme_dev.041, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  %pme_poll = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %pme_poll to i32
  call void @__asan_loadN_noabort(i32 %4, i32 4)
  %bf.load = load i32, ptr %pme_poll, align 2
  %5 = and i32 %bf.load, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %bus = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bus, align 8
  %self = getelementptr inbounds %struct.pci_bus, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %self, align 4
  %tobool6.not = icmp eq ptr %9, null
  br i1 %tobool6.not, label %if.then.if.end_crit_edge, label %land.lhs.true

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true:                                    ; preds = %if.then
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 30
  %10 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %current_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp7.not = icmp eq i32 %11, 0
  br i1 %cmp7.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %if.then.if.end_crit_edge
  %current_state10 = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 30
  %12 = ptrtoint ptr %current_state10 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %current_state10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %13)
  %cmp11 = icmp eq i32 %13, 4
  br i1 %cmp11, label %if.end.for.inc_crit_edge, label %if.end13

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.end13:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr.i.i) #24
  %14 = ptrtoint ptr %pmcsr.i.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 -1, ptr %pmcsr.i.i, align 2, !annotation !731
  %pm_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 32
  %15 = ptrtoint ptr %pm_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %pm_cap.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i.i = icmp eq i8 %16, 0
  br i1 %tobool.not.i.i, label %if.end13.pci_check_pme_status.exit.thread.i_crit_edge, label %if.end.i.i

if.end13.pci_check_pme_status.exit.thread.i_crit_edge: ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_check_pme_status.exit.thread.i

if.end.i.i:                                       ; preds = %if.end13
  %conv.i.i = zext i8 %16 to i32
  %add.i.i = add nuw nsw i32 %conv.i.i, 4
  %call.i.i = call i32 @pci_read_config_word(ptr noundef %3, i32 noundef %add.i.i, ptr noundef nonnull %pmcsr.i.i) #24
  %17 = ptrtoint ptr %pmcsr.i.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %pmcsr.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %18)
  %tobool3.not.i.i = icmp sgt i16 %18, -1
  br i1 %tobool3.not.i.i, label %if.end.i.i.pci_check_pme_status.exit.thread.i_crit_edge, label %pci_check_pme_status.exit.i

if.end.i.i.pci_check_pme_status.exit.thread.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_check_pme_status.exit.thread.i

pci_check_pme_status.exit.thread.i:               ; preds = %if.end.i.i.pci_check_pme_status.exit.thread.i_crit_edge, %if.end13.pci_check_pme_status.exit.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i.i) #24
  br label %for.inc

pci_check_pme_status.exit.i:                      ; preds = %if.end.i.i
  %or.i.i = or i16 %18, -32768
  %19 = and i16 %18, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool10.not.i.i = icmp eq i16 %19, 0
  %and13.i.i = and i16 %or.i.i, -257
  %spec.select.i.i = select i1 %tobool10.not.i.i, i16 %or.i.i, i16 %and13.i.i
  %20 = ptrtoint ptr %pmcsr.i.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %spec.select.i.i, ptr %pmcsr.i.i, align 2
  %call16.i.i = call i32 @pci_write_config_word(ptr noundef %3, i32 noundef %add.i.i, i16 noundef zeroext %spec.select.i.i) #24
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr.i.i) #24
  br i1 %tobool10.not.i.i, label %pci_check_pme_status.exit.i.for.inc_crit_edge, label %if.then5.i

pci_check_pme_status.exit.i.for.inc_crit_edge:    ; preds = %pci_check_pme_status.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then5.i:                                       ; preds = %pci_check_pme_status.exit.i
  call void @__sanitizer_cov_trace_pc() #26
  %dev1.i.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  call void @pm_wakeup_dev_event(ptr noundef %dev1.i.i, i32 noundef 100, i1 noundef zeroext false) #24
  %call.i13.i = call i32 @__pm_runtime_resume(ptr noundef %dev1.i.i, i32 noundef 1) #24
  br label %for.inc

if.else:                                          ; preds = %for.body
  %call.i.i37 = call zeroext i1 @__list_del_entry_valid(ptr noundef %pme_dev.041) #24
  br i1 %call.i.i37, label %if.end.i.i38, label %if.else.list_del.exit_crit_edge

if.else.list_del.exit_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  br label %list_del.exit

if.end.i.i38:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #26
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %pme_dev.041, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i.i, align 4
  %23 = ptrtoint ptr %pme_dev.041 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pme_dev.041, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %24, ptr %22, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i38, %if.else.list_del.exit_crit_edge
  %27 = ptrtoint ptr %pme_dev.041 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 256 to ptr), ptr %pme_dev.041, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %pme_dev.041, i32 0, i32 1
  %28 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  call void @kfree(ptr noundef %pme_dev.041) #24
  br label %for.inc

for.inc:                                          ; preds = %list_del.exit, %if.then5.i, %pci_check_pme_status.exit.i.for.inc_crit_edge, %pci_check_pme_status.exit.thread.i, %if.end.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge
  %cmp.not = icmp eq ptr %n.043, @pci_pme_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %29 = load volatile ptr, ptr @pci_pme_list, align 4
  %cmp.i.not = icmp eq ptr %29, @pci_pme_list
  br i1 %cmp.i.not, label %for.end.if.end27_crit_edge, label %if.then24

for.end.if.end27_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end27

if.then24:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezable_wq to i32))
  %30 = load ptr, ptr @system_freezable_wq, align 4
  %call.i = call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %30, ptr noundef nonnull @pci_pme_work, i32 noundef 100) #24
  br label %if.end27

if.end27:                                         ; preds = %if.then24, %for.end.if.end27_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @pci_pme_list_mutex) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #6

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #6 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #6 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_idle(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_set_status(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__request_region(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #6 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #6 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @reset_method_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %reset_methods = getelementptr i8, ptr %dev, i32 1896
  %0 = ptrtoint ptr %reset_methods to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %reset_methods, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.end

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end7

if.end:                                           ; preds = %entry
  %conv = zext i8 %1 to i32
  %name = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv, i32 1
  %2 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %name, align 4
  %call = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef 0, ptr noundef nonnull @.str.167, ptr noundef nonnull @.str.31, ptr noundef %3) #24
  %arrayidx.1 = getelementptr i8, ptr %dev, i32 1897
  %4 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx.1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.1 = icmp eq i8 %5, 0
  br i1 %tobool.not.1, label %if.end.for.end_crit_edge, label %if.end.1

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.end.1:                                         ; preds = %if.end
  %conv.1 = zext i8 %5 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not.1 = icmp eq i32 %call, 0
  %cond.1 = select i1 %tobool1.not.1, ptr @.str.31, ptr @.str.168
  %name.1 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.1, i32 1
  %6 = ptrtoint ptr %name.1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %name.1, align 4
  %call.1 = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef %call, ptr noundef nonnull @.str.167, ptr noundef nonnull %cond.1, ptr noundef %7) #24
  %add.1 = add i32 %call.1, %call
  %arrayidx.2 = getelementptr i8, ptr %dev, i32 1898
  %8 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx.2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.2 = icmp eq i8 %9, 0
  br i1 %tobool.not.2, label %if.end.1.for.end_crit_edge, label %if.end.2

if.end.1.for.end_crit_edge:                       ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.end.2:                                         ; preds = %if.end.1
  %conv.2 = zext i8 %9 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.1)
  %tobool1.not.2 = icmp eq i32 %add.1, 0
  %cond.2 = select i1 %tobool1.not.2, ptr @.str.31, ptr @.str.168
  %name.2 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.2, i32 1
  %10 = ptrtoint ptr %name.2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %name.2, align 4
  %call.2 = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef %add.1, ptr noundef nonnull @.str.167, ptr noundef nonnull %cond.2, ptr noundef %11) #24
  %add.2 = add i32 %call.2, %add.1
  %arrayidx.3 = getelementptr i8, ptr %dev, i32 1899
  %12 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.3 = icmp eq i8 %13, 0
  br i1 %tobool.not.3, label %if.end.2.for.end_crit_edge, label %if.end.3

if.end.2.for.end_crit_edge:                       ; preds = %if.end.2
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.end.3:                                         ; preds = %if.end.2
  %conv.3 = zext i8 %13 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.2)
  %tobool1.not.3 = icmp eq i32 %add.2, 0
  %cond.3 = select i1 %tobool1.not.3, ptr @.str.31, ptr @.str.168
  %name.3 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.3, i32 1
  %14 = ptrtoint ptr %name.3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %name.3, align 4
  %call.3 = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef %add.2, ptr noundef nonnull @.str.167, ptr noundef nonnull %cond.3, ptr noundef %15) #24
  %add.3 = add i32 %call.3, %add.2
  %arrayidx.4 = getelementptr i8, ptr %dev, i32 1900
  %16 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx.4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.4 = icmp eq i8 %17, 0
  br i1 %tobool.not.4, label %if.end.3.for.end_crit_edge, label %if.end.4

if.end.3.for.end_crit_edge:                       ; preds = %if.end.3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.end.4:                                         ; preds = %if.end.3
  %conv.4 = zext i8 %17 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.3)
  %tobool1.not.4 = icmp eq i32 %add.3, 0
  %cond.4 = select i1 %tobool1.not.4, ptr @.str.31, ptr @.str.168
  %name.4 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.4, i32 1
  %18 = ptrtoint ptr %name.4 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %name.4, align 4
  %call.4 = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef %add.3, ptr noundef nonnull @.str.167, ptr noundef nonnull %cond.4, ptr noundef %19) #24
  %add.4 = add i32 %call.4, %add.3
  %arrayidx.5 = getelementptr i8, ptr %dev, i32 1901
  %20 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx.5, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not.5 = icmp eq i8 %21, 0
  br i1 %tobool.not.5, label %if.end.4.for.end_crit_edge, label %if.end.5

if.end.4.for.end_crit_edge:                       ; preds = %if.end.4
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.end.5:                                         ; preds = %if.end.4
  %conv.5 = zext i8 %21 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.4)
  %tobool1.not.5 = icmp eq i32 %add.4, 0
  %cond.5 = select i1 %tobool1.not.5, ptr @.str.31, ptr @.str.168
  %name.5 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.5, i32 1
  %22 = ptrtoint ptr %name.5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %name.5, align 4
  %call.5 = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef %add.4, ptr noundef nonnull @.str.167, ptr noundef nonnull %cond.5, ptr noundef %23) #24
  %add.5 = add i32 %call.5, %add.4
  %arrayidx.6 = getelementptr i8, ptr %dev, i32 1902
  %24 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx.6, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.6 = icmp eq i8 %25, 0
  br i1 %tobool.not.6, label %if.end.5.for.end_crit_edge, label %if.end.6

if.end.5.for.end_crit_edge:                       ; preds = %if.end.5
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

if.end.6:                                         ; preds = %if.end.5
  call void @__sanitizer_cov_trace_pc() #26
  %conv.6 = zext i8 %25 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.5)
  %tobool1.not.6 = icmp eq i32 %add.5, 0
  %cond.6 = select i1 %tobool1.not.6, ptr @.str.31, ptr @.str.168
  %name.6 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %conv.6, i32 1
  %26 = ptrtoint ptr %name.6 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %name.6, align 4
  %call.6 = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef %add.5, ptr noundef nonnull @.str.167, ptr noundef nonnull %cond.6, ptr noundef %27) #24
  %add.6 = add i32 %call.6, %add.5
  br label %for.end

for.end:                                          ; preds = %if.end.6, %if.end.5.for.end_crit_edge, %if.end.4.for.end_crit_edge, %if.end.3.for.end_crit_edge, %if.end.2.for.end_crit_edge, %if.end.1.for.end_crit_edge, %if.end.for.end_crit_edge
  %len.0.lcssa = phi i32 [ %call, %if.end.for.end_crit_edge ], [ %add.1, %if.end.1.for.end_crit_edge ], [ %add.2, %if.end.2.for.end_crit_edge ], [ %add.3, %if.end.3.for.end_crit_edge ], [ %add.4, %if.end.4.for.end_crit_edge ], [ %add.5, %if.end.5.for.end_crit_edge ], [ %add.6, %if.end.6 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.0.lcssa)
  %tobool3.not = icmp eq i32 %len.0.lcssa, 0
  br i1 %tobool3.not, label %for.end.if.end7_crit_edge, label %if.then4

for.end.if.end7_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end7

if.then4:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #26
  %call5 = tail call i32 (ptr, i32, ptr, ...) @sysfs_emit_at(ptr noundef %buf, i32 noundef %len.0.lcssa, ptr noundef nonnull @.str.169) #24
  %add6 = add i32 %call5, %len.0.lcssa
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %for.end.if.end7_crit_edge, %entry.if.end7_crit_edge
  %len.1 = phi i32 [ %add6, %if.then4 ], [ 0, %for.end.if.end7_crit_edge ], [ 0, %entry.if.end7_crit_edge ]
  ret i32 %len.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @reset_method_store(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #5 align 64 {
entry:
  %options = alloca ptr, align 4
  %reset_methods = alloca [7 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -136
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %options) #24
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %reset_methods) #24
  %0 = call ptr @memset(ptr %reset_methods, i32 0, i32 7)
  %call = tail call zeroext i1 @sysfs_streq(ptr noundef %buf, ptr noundef nonnull @.str.31) #24
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %reset_methods1 = getelementptr i8, ptr %dev, i32 1896
  %1 = ptrtoint ptr %reset_methods1 to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %reset_methods1, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.170) #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call zeroext i1 @sysfs_streq(ptr noundef %buf, ptr noundef nonnull @.str.172) #24
  br i1 %call3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_init_reset_methods(ptr noundef %add.ptr)
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = tail call ptr @kstrndup(ptr noundef %buf, i32 noundef %count, i32 noundef 3264) #24
  %2 = ptrtoint ptr %options to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call6, ptr %options, align 4
  %tobool.not = icmp eq ptr %call6, null
  br i1 %tobool.not, label %if.end5.cleanup_crit_edge, label %if.end5.while.cond.outer_crit_edge

if.end5.while.cond.outer_crit_edge:               ; preds = %if.end5
  br label %while.cond.outer

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

while.cond.outer:                                 ; preds = %if.end37, %if.end5.while.cond.outer_crit_edge
  %n.0.ph = phi i32 [ %inc, %if.end37 ], [ 0, %if.end5.while.cond.outer_crit_edge ]
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %while.cond.outer
  %call9 = call ptr @strsep(ptr noundef nonnull %options, ptr noundef nonnull @.str.168) #24
  %cmp.not = icmp eq ptr %call9, null
  br i1 %cmp.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %call10 = call zeroext i1 @sysfs_streq(ptr noundef nonnull %call9, ptr noundef nonnull @.str.31) #24
  br i1 %call10, label %while.body.while.cond_crit_edge, label %if.end12

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %while.cond

if.end12:                                         ; preds = %while.body
  %call13 = call ptr @strim(ptr noundef nonnull %call9) #24
  %call.i = call zeroext i1 @sysfs_streq(ptr noundef %call13, ptr noundef nonnull @.str.185) #24
  br i1 %call.i, label %if.end12.if.end21_crit_edge, label %for.inc.i

if.end12.if.end21_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end21

for.inc.i:                                        ; preds = %if.end12
  %call.1.i = call zeroext i1 @sysfs_streq(ptr noundef %call13, ptr noundef nonnull @.str.186) #24
  br i1 %call.1.i, label %for.inc.i.if.end21_crit_edge, label %for.inc.1.i

for.inc.i.if.end21_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end21

for.inc.1.i:                                      ; preds = %for.inc.i
  %call.2.i = call zeroext i1 @sysfs_streq(ptr noundef %call13, ptr noundef nonnull @.str.187) #24
  br i1 %call.2.i, label %for.inc.1.i.if.end21_crit_edge, label %for.inc.2.i

for.inc.1.i.if.end21_crit_edge:                   ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end21

for.inc.2.i:                                      ; preds = %for.inc.1.i
  %call.3.i = call zeroext i1 @sysfs_streq(ptr noundef %call13, ptr noundef nonnull @.str.188) #24
  br i1 %call.3.i, label %for.inc.2.i.if.end21_crit_edge, label %for.inc.3.i

for.inc.2.i.if.end21_crit_edge:                   ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end21

for.inc.3.i:                                      ; preds = %for.inc.2.i
  %call.4.i = call zeroext i1 @sysfs_streq(ptr noundef %call13, ptr noundef nonnull @.str.189) #24
  br i1 %call.4.i, label %for.inc.3.i.if.end21_crit_edge, label %for.inc.4.i

for.inc.3.i.if.end21_crit_edge:                   ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end21

for.inc.4.i:                                      ; preds = %for.inc.3.i
  %call.5.i = call zeroext i1 @sysfs_streq(ptr noundef %call13, ptr noundef nonnull @.str.190) #24
  br i1 %call.5.i, label %for.inc.4.i.if.end21_crit_edge, label %do.end19

for.inc.4.i.if.end21_crit_edge:                   ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end21

do.end19:                                         ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.174, ptr noundef %call13) #28
  br label %error

if.end21:                                         ; preds = %for.inc.4.i.if.end21_crit_edge, %for.inc.3.i.if.end21_crit_edge, %for.inc.2.i.if.end21_crit_edge, %for.inc.1.i.if.end21_crit_edge, %for.inc.i.if.end21_crit_edge, %if.end12.if.end21_crit_edge
  %retval.0.i.ph = phi i32 [ 5, %for.inc.3.i.if.end21_crit_edge ], [ 4, %for.inc.2.i.if.end21_crit_edge ], [ 3, %for.inc.1.i.if.end21_crit_edge ], [ 2, %for.inc.i.if.end21_crit_edge ], [ 1, %if.end12.if.end21_crit_edge ], [ 6, %for.inc.4.i.if.end21_crit_edge ]
  %arrayidx22 = getelementptr [7 x %struct.pci_reset_fn_method], ptr @pci_reset_fn_methods, i32 0, i32 %retval.0.i.ph
  %3 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx22, align 4
  %call23 = call i32 %4(ptr noundef %add.ptr, i1 noundef zeroext true) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end30, label %do.end28

do.end28:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.177, ptr noundef %call13) #28
  br label %error

if.end30:                                         ; preds = %if.end21
  %cmp31 = icmp eq i32 %n.0.ph, 6
  br i1 %cmp31, label %do.end35, label %if.end37

do.end35:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.180) #28
  br label %error

if.end37:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #26
  %conv = trunc i32 %retval.0.i.ph to i8
  %inc = add nuw nsw i32 %n.0.ph, 1
  %arrayidx38 = getelementptr [7 x i8], ptr %reset_methods, i32 0, i32 %n.0.ph
  %5 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %conv, ptr %arrayidx38, align 1
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %arrayidx39 = getelementptr [7 x i8], ptr %reset_methods, i32 0, i32 %n.0.ph
  %6 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %arrayidx39, align 1
  %call40 = call i32 @pci_dev_specific_reset(ptr noundef %add.ptr, i1 noundef zeroext true) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %cmp41 = icmp eq i32 %call40, 0
  br i1 %cmp41, label %land.lhs.true, label %while.end.if.end52_crit_edge

while.end.if.end52_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end52

land.lhs.true:                                    ; preds = %while.end
  %7 = ptrtoint ptr %reset_methods to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %reset_methods, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %8)
  %cmp45.not = icmp eq i8 %8, 1
  br i1 %cmp45.not, label %land.lhs.true.if.end52_crit_edge, label %do.end50

land.lhs.true.if.end52_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end52

do.end50:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.183) #28
  br label %if.end52

if.end52:                                         ; preds = %do.end50, %land.lhs.true.if.end52_crit_edge, %while.end.if.end52_crit_edge
  %reset_methods53 = getelementptr i8, ptr %dev, i32 1896
  %9 = call ptr @memcpy(ptr %reset_methods53, ptr %reset_methods, i32 7)
  %10 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %options, align 4
  call void @kfree(ptr noundef %11) #24
  br label %cleanup

error:                                            ; preds = %do.end35, %do.end28, %do.end19
  %12 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %options, align 4
  call void @kfree(ptr noundef %13) #24
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end52, %if.end5.cleanup_crit_edge, %if.then4, %if.then
  %retval.0 = phi i32 [ %count, %if.then ], [ %count, %if.then4 ], [ -22, %error ], [ %count, %if.end52 ], [ -12, %if.end5.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %reset_methods) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %options) #24
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_emit_at(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sysfs_streq(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kstrndup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strsep(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strim(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_dev_specific_reset(ptr noundef, i1 noundef zeroext) #6

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_dev_acpi_reset(ptr nocapture noundef readnone %dev, i1 noundef zeroext %probe) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  ret i32 -25
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_af_flr(ptr noundef %dev, i1 noundef zeroext %probe) #5 align 64 {
entry:
  %cap = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %cap) #24
  %0 = ptrtoint ptr %cap to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %cap, align 1, !annotation !731
  %call = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 19)
  %conv = zext i8 %call to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call)
  %tobool.not = icmp eq i8 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %1 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %dev_flags, align 2
  %3 = and i16 %2, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool2.not = icmp eq i16 %3, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %add = add nuw nsw i32 %conv, 3
  %call5 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %cap) #24
  %4 = ptrtoint ptr %cap to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %cap, align 1
  %6 = and i8 %5, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %6)
  %7 = icmp ne i8 %6, 3
  %brmerge = or i1 %7, %probe
  %.mux = select i1 %7, i32 -25, i32 0
  br i1 %brmerge, label %if.end4.cleanup_crit_edge, label %if.end16

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end16:                                         ; preds = %if.end4
  %add17 = add nuw nsw i32 %conv, 4
  %call18 = call i32 @pci_wait_for_pending(ptr noundef %dev, i32 noundef %add17, i16 noundef zeroext 256)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %do.end, label %if.end16.if.end22_crit_edge

if.end16.if.end22_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end22

do.end:                                           ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #26
  %dev21 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev21, ptr noundef nonnull @.str.191) #28
  br label %if.end22

if.end22:                                         ; preds = %do.end, %if.end16.if.end22_crit_edge
  %call24 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef %add17, i8 noundef zeroext 1) #24
  %imm_ready = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 31
  %8 = ptrtoint ptr %imm_ready to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load = load i8, ptr %imm_ready, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool25.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool25.not, label %if.end27, label %if.end22.cleanup_crit_edge

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end27:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #26
  call void @msleep(i32 noundef 100) #24
  %call28 = call fastcc i32 @pci_dev_wait(ptr noundef %dev, ptr noundef nonnull @.str.193)
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.end22.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call28, %if.end27 ], [ -25, %entry.cleanup_crit_edge ], [ -25, %if.end.cleanup_crit_edge ], [ %.mux, %if.end4.cleanup_crit_edge ], [ 0, %if.end22.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %cap) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_pm_reset(ptr noundef %dev, i1 noundef zeroext %probe) #5 align 64 {
entry:
  %csr = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %csr) #24
  %0 = ptrtoint ptr %csr to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %csr, align 2, !annotation !731
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %1 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %pm_cap, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %3 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %dev_flags, align 2
  %5 = and i16 %4, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool1.not = icmp eq i16 %5, 0
  br i1 %tobool1.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %conv3 = zext i8 %2 to i32
  %add = add nuw nsw i32 %conv3, 4
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %csr) #24
  %6 = ptrtoint ptr %csr to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %csr, align 2
  %8 = and i16 %7, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool6.not = icmp ne i16 %8, 0
  %brmerge = or i1 %tobool6.not, %probe
  %.mux = select i1 %tobool6.not, i32 -25, i32 0
  br i1 %brmerge, label %if.end.cleanup_crit_edge, label %if.end11

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end11:                                         ; preds = %if.end
  %current_state = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 30
  %9 = ptrtoint ptr %current_state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %current_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.not = icmp eq i32 %10, 0
  br i1 %cmp.not, label %if.end14, label %if.end11.cleanup_crit_edge

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end14:                                         ; preds = %if.end11
  %11 = or i16 %7, 3
  %12 = ptrtoint ptr %csr to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %11, ptr %csr, align 2
  %13 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %pm_cap, align 1
  %conv21 = zext i8 %14 to i32
  %add22 = add nuw nsw i32 %conv21, 4
  %call23 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add22, i16 noundef zeroext %11) #24
  %d3hot_delay.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 35
  %15 = ptrtoint ptr %d3hot_delay.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %d3hot_delay.i, align 8
  %17 = load i32, ptr @pci_pm_d3hot_delay, align 4
  %18 = call i32 @llvm.umax.i32(i32 %16, i32 %17) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i, label %if.end14.pci_dev_d3_sleep.exit_crit_edge, label %if.then1.i

if.end14.pci_dev_d3_sleep.exit_crit_edge:         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_d3_sleep.exit

if.then1.i:                                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #26
  call void @msleep(i32 noundef %18) #24
  br label %pci_dev_d3_sleep.exit

pci_dev_d3_sleep.exit:                            ; preds = %if.then1.i, %if.end14.pci_dev_d3_sleep.exit_crit_edge
  %19 = ptrtoint ptr %csr to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %csr, align 2
  %21 = and i16 %20, -4
  store i16 %21, ptr %csr, align 2
  %22 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %pm_cap, align 1
  %conv31 = zext i8 %23 to i32
  %add32 = add nuw nsw i32 %conv31, 4
  %call33 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add32, i16 noundef zeroext %21) #24
  %24 = ptrtoint ptr %d3hot_delay.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %d3hot_delay.i, align 8
  %26 = load i32, ptr @pci_pm_d3hot_delay, align 4
  %27 = call i32 @llvm.umax.i32(i32 %25, i32 %26) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i47 = icmp eq i32 %27, 0
  br i1 %tobool.not.i47, label %pci_dev_d3_sleep.exit.pci_dev_d3_sleep.exit49_crit_edge, label %if.then1.i48

pci_dev_d3_sleep.exit.pci_dev_d3_sleep.exit49_crit_edge: ; preds = %pci_dev_d3_sleep.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_d3_sleep.exit49

if.then1.i48:                                     ; preds = %pci_dev_d3_sleep.exit
  call void @__sanitizer_cov_trace_pc() #26
  call void @msleep(i32 noundef %27) #24
  br label %pci_dev_d3_sleep.exit49

pci_dev_d3_sleep.exit49:                          ; preds = %if.then1.i48, %pci_dev_d3_sleep.exit.pci_dev_d3_sleep.exit49_crit_edge
  %call34 = call fastcc i32 @pci_dev_wait(ptr noundef %dev, ptr noundef nonnull @.str.194)
  br label %cleanup

cleanup:                                          ; preds = %pci_dev_d3_sleep.exit49, %if.end11.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call34, %pci_dev_d3_sleep.exit49 ], [ -25, %lor.lhs.false.cleanup_crit_edge ], [ -25, %entry.cleanup_crit_edge ], [ %.mux, %if.end.cleanup_crit_edge ], [ -22, %if.end11.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %csr) #24
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_reset_bus_function(ptr noundef readonly %dev, i1 noundef zeroext %probe) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %multifunction.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %multifunction.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load.i = load i40, ptr %multifunction.i, align 1
  %1 = and i40 %bf.load.i, 34359738368
  %tobool.not.i = icmp eq i40 %1, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

lor.lhs.false.i:                                  ; preds = %entry
  %subordinate.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %2 = ptrtoint ptr %subordinate.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %subordinate.i, align 4
  %tobool1.not.i = icmp eq ptr %3, null
  br i1 %tobool1.not.i, label %lor.lhs.false2.i, label %lor.lhs.false.i.if.end_crit_edge

lor.lhs.false.i.if.end_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i
  %slot.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 5
  %4 = ptrtoint ptr %slot.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %slot.i, align 8
  %tobool3.not.i = icmp eq ptr %5, null
  br i1 %tobool3.not.i, label %lor.lhs.false2.i.if.end_crit_edge, label %lor.lhs.false4.i

lor.lhs.false2.i.if.end_crit_edge:                ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false2.i
  %dev_flags.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %6 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %dev_flags.i, align 2
  %8 = and i16 %7, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool5.not.i = icmp eq i16 %8, 0
  br i1 %tobool5.not.i, label %if.end.i, label %lor.lhs.false4.i.if.end_crit_edge

lor.lhs.false4.i.if.end_crit_edge:                ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end.i:                                         ; preds = %lor.lhs.false4.i
  %hotplug.i = getelementptr inbounds %struct.pci_slot, ptr %5, i32 0, i32 2
  %9 = ptrtoint ptr %hotplug.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hotplug.i, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %if.end.i.if.end_crit_edge, label %lor.lhs.false.i.i

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

lor.lhs.false.i.i:                                ; preds = %if.end.i
  %owner.i.i = getelementptr inbounds %struct.hotplug_slot, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %owner.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %owner.i.i, align 4
  %call.i.i = tail call zeroext i1 @try_module_get(ptr noundef %12) #24
  br i1 %call.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.if.end_crit_edge

lor.lhs.false.i.i.if.end_crit_edge:               ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %13 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %10, align 4
  %reset_slot.i.i = getelementptr inbounds %struct.hotplug_slot_ops, ptr %14, i32 0, i32 8
  %15 = ptrtoint ptr %reset_slot.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %reset_slot.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %16, null
  br i1 %tobool1.not.i.i, label %pci_dev_reset_slot_function.exit.thread19, label %pci_dev_reset_slot_function.exit

pci_dev_reset_slot_function.exit.thread19:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #26
  %17 = ptrtoint ptr %owner.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %owner.i.i, align 4
  tail call void @module_put(ptr noundef %18) #24
  br label %if.end

pci_dev_reset_slot_function.exit:                 ; preds = %if.end.i.i
  %call6.i.i = tail call i32 %16(ptr noundef nonnull %10, i1 noundef zeroext %probe) #24
  %19 = ptrtoint ptr %owner.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %owner.i.i, align 4
  tail call void @module_put(ptr noundef %20) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -25, i32 %call6.i.i)
  %cmp.not = icmp eq i32 %call6.i.i, -25
  br i1 %cmp.not, label %pci_dev_reset_slot_function.exit.if.end_crit_edge, label %pci_dev_reset_slot_function.exit.cleanup_crit_edge

pci_dev_reset_slot_function.exit.cleanup_crit_edge: ; preds = %pci_dev_reset_slot_function.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

pci_dev_reset_slot_function.exit.if.end_crit_edge: ; preds = %pci_dev_reset_slot_function.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end:                                           ; preds = %pci_dev_reset_slot_function.exit.if.end_crit_edge, %pci_dev_reset_slot_function.exit.thread19, %lor.lhs.false.i.i.if.end_crit_edge, %if.end.i.if.end_crit_edge, %lor.lhs.false4.i.if.end_crit_edge, %lor.lhs.false2.i.if.end_crit_edge, %lor.lhs.false.i.if.end_crit_edge, %entry.if.end_crit_edge
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %21 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i.i6 = icmp eq ptr %24, null
  br i1 %tobool.not.i.i6, label %if.end.cleanup_crit_edge, label %lor.lhs.false.i9

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false.i9:                                 ; preds = %if.end
  %subordinate.i7 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %25 = ptrtoint ptr %subordinate.i7 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %subordinate.i7, align 4
  %tobool.not.i8 = icmp eq ptr %26, null
  br i1 %tobool.not.i8, label %lor.lhs.false1.i, label %lor.lhs.false.i9.cleanup_crit_edge

lor.lhs.false.i9.cleanup_crit_edge:               ; preds = %lor.lhs.false.i9
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i9
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %22, i32 0, i32 4
  %27 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %self.i, align 4
  %tobool3.not.i10 = icmp eq ptr %28, null
  br i1 %tobool3.not.i10, label %lor.lhs.false1.i.cleanup_crit_edge, label %lor.lhs.false4.i13

lor.lhs.false1.i.cleanup_crit_edge:               ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false4.i13:                               ; preds = %lor.lhs.false1.i
  %dev_flags.i11 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %29 = ptrtoint ptr %dev_flags.i11 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %dev_flags.i11, align 2
  %31 = and i16 %30, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %31)
  %tobool5.not.i12 = icmp eq i16 %31, 0
  br i1 %tobool5.not.i12, label %if.end.i14, label %lor.lhs.false4.i13.cleanup_crit_edge

lor.lhs.false4.i13.cleanup_crit_edge:             ; preds = %lor.lhs.false4.i13
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end.i14:                                       ; preds = %lor.lhs.false4.i13
  %devices.i = getelementptr inbounds %struct.pci_bus, ptr %22, i32 0, i32 3
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end.i14
  %pdev.0.in.i = phi ptr [ %devices.i, %if.end.i14 ], [ %dev, %for.body.i.for.cond.i_crit_edge ]
  %32 = ptrtoint ptr %pdev.0.in.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %pdev.0.i = load ptr, ptr %pdev.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %pdev.0.i, %devices.i
  br i1 %cmp.not.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %cmp10.not.i = icmp eq ptr %pdev.0.i, %dev
  br i1 %cmp10.not.i, label %for.body.i.for.cond.i_crit_edge, label %for.body.i.cleanup_crit_edge

for.body.i.cleanup_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i
  br i1 %probe, label %for.end.i.cleanup_crit_edge, label %if.end21.i

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end21.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pcibios_reset_secondary_bus(ptr noundef nonnull %28) #24
  %call.i.i15 = tail call fastcc i32 @pci_dev_wait(ptr noundef nonnull %28, ptr noundef nonnull @.str.71) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end21.i, %for.end.i.cleanup_crit_edge, %for.body.i.cleanup_crit_edge, %lor.lhs.false4.i13.cleanup_crit_edge, %lor.lhs.false1.i.cleanup_crit_edge, %lor.lhs.false.i9.cleanup_crit_edge, %if.end.cleanup_crit_edge, %pci_dev_reset_slot_function.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6.i.i, %pci_dev_reset_slot_function.exit.cleanup_crit_edge ], [ %call.i.i15, %if.end21.i ], [ -25, %lor.lhs.false4.i13.cleanup_crit_edge ], [ -25, %lor.lhs.false1.i.cleanup_crit_edge ], [ -25, %lor.lhs.false.i9.cleanup_crit_edge ], [ -25, %if.end.cleanup_crit_edge ], [ 0, %for.end.i.cleanup_crit_edge ], [ -25, %for.body.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @pci_bus_resetable(ptr noundef readonly %bus) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %self = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 4
  %0 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %self, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 50
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %dev_flags, align 2
  %4 = and i16 %3, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool2.not = icmp eq i16 %4, 0
  br i1 %tobool2.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %devices = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 3
  %5 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %dev.027 = load ptr, ptr %devices, align 4
  %cmp.not28 = icmp eq ptr %dev.027, %devices
  br i1 %cmp.not28, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %dev.029 = phi ptr [ %dev.0, %for.inc.for.body_crit_edge ], [ %dev.027, %if.end.for.body_crit_edge ]
  %dev_flags5 = getelementptr inbounds %struct.pci_dev, ptr %dev.029, i32 0, i32 50
  %6 = ptrtoint ptr %dev_flags5 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %dev_flags5, align 2
  %8 = and i16 %7, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool8.not = icmp eq i16 %8, 0
  br i1 %tobool8.not, label %lor.lhs.false, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

lor.lhs.false:                                    ; preds = %for.body
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev.029, i32 0, i32 2
  %9 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %subordinate, align 4
  %tobool9.not = icmp eq ptr %10, null
  br i1 %tobool9.not, label %lor.lhs.false.for.inc_crit_edge, label %land.lhs.true10

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %call = tail call fastcc zeroext i1 @pci_bus_resetable(ptr noundef nonnull %10)
  br i1 %call, label %land.lhs.true10.for.inc_crit_edge, label %land.lhs.true10.cleanup_crit_edge

land.lhs.true10.cleanup_crit_edge:                ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

land.lhs.true10.for.inc_crit_edge:                ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true10.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge
  %11 = ptrtoint ptr %dev.029 to i32
  call void @__asan_load4_noabort(i32 %11)
  %dev.0 = load ptr, ptr %dev.029, align 4
  %cmp.not = icmp eq ptr %dev.0, %devices
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %land.lhs.true10.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %land.lhs.true.cleanup_crit_edge ], [ true, %if.end.cleanup_crit_edge ], [ false, %land.lhs.true10.cleanup_crit_edge ], [ false, %for.body.cleanup_crit_edge ], [ true, %for.inc.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_bus_lock(ptr noundef readonly %bus) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %devices = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %0)
  %dev.013 = load ptr, ptr %devices, align 4
  %cmp.not14 = icmp eq ptr %dev.013, %devices
  br i1 %cmp.not14, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %dev.015 = phi ptr [ %dev.0, %for.inc.for.body_crit_edge ], [ %dev.013, %entry.for.body_crit_edge ]
  tail call void @pci_cfg_access_lock(ptr noundef %dev.015) #24
  %mutex.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.015, i32 0, i32 44, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i.i, i32 noundef 0) #24
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev.015, i32 0, i32 2
  %1 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %subordinate, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_lock(ptr noundef nonnull %2)
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %3 = ptrtoint ptr %dev.015 to i32
  call void @__asan_load4_noabort(i32 %3)
  %dev.0 = load ptr, ptr %dev.015, align 4
  %cmp.not = icmp eq ptr %dev.0, %devices
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_bus_unlock(ptr noundef readonly %bus) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %devices = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %0)
  %dev.013 = load ptr, ptr %devices, align 4
  %cmp.not14 = icmp eq ptr %dev.013, %devices
  br i1 %cmp.not14, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.body:                                         ; preds = %if.end.for.body_crit_edge, %entry.for.body_crit_edge
  %dev.015 = phi ptr [ %dev.0, %if.end.for.body_crit_edge ], [ %dev.013, %entry.for.body_crit_edge ]
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev.015, i32 0, i32 2
  %1 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %subordinate, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %for.body.if.end_crit_edge, label %if.then

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_unlock(ptr noundef nonnull %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.if.end_crit_edge
  %mutex.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.015, i32 0, i32 44, i32 10
  tail call void @mutex_unlock(ptr noundef %mutex.i.i) #24
  tail call void @pci_cfg_access_unlock(ptr noundef %dev.015) #24
  %3 = ptrtoint ptr %dev.015 to i32
  call void @__asan_load4_noabort(i32 %3)
  %dev.0 = load ptr, ptr %dev.015, align 4
  %cmp.not = icmp eq ptr %dev.0, %devices
  br i1 %cmp.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.end:                                          ; preds = %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_bus_trylock(ptr noundef readonly %bus) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %devices = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %0)
  %dev.060 = load ptr, ptr %devices, align 4
  %cmp.not61 = icmp eq ptr %dev.060, %devices
  br i1 %cmp.not61, label %entry.cleanup_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %dev.062 = phi ptr [ %dev.0, %for.inc.for.body_crit_edge ], [ %dev.060, %entry.for.body_crit_edge ]
  %call.i = tail call zeroext i1 @pci_cfg_access_trylock(ptr noundef %dev.062) #24
  br i1 %call.i, label %if.then.i, label %for.body.unlock_crit_edge

for.body.unlock_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %unlock

if.then.i:                                        ; preds = %for.body
  %mutex.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.062, i32 0, i32 44, i32 10
  %call.i.i = tail call i32 @mutex_trylock(ptr noundef %mutex.i.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.then.i.unlock.sink.split_crit_edge, label %if.end

if.then.i.unlock.sink.split_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %unlock.sink.split

if.end:                                           ; preds = %if.then.i
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev.062, i32 0, i32 2
  %1 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %subordinate, align 4
  %tobool2.not = icmp eq ptr %2, null
  br i1 %tobool2.not, label %if.end.for.inc_crit_edge, label %if.then3

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then3:                                         ; preds = %if.end
  %call5 = tail call fastcc i32 @pci_bus_trylock(ptr noundef nonnull %2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.then7, label %if.then3.for.inc_crit_edge

if.then3.for.inc_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then7:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @mutex_unlock(ptr noundef %mutex.i.i) #24
  br label %unlock.sink.split

for.inc:                                          ; preds = %if.then3.for.inc_crit_edge, %if.end.for.inc_crit_edge
  %3 = ptrtoint ptr %dev.062 to i32
  call void @__asan_load4_noabort(i32 %3)
  %dev.0 = load ptr, ptr %dev.062, align 4
  %cmp.not = icmp eq ptr %dev.0, %devices
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

unlock.sink.split:                                ; preds = %if.then7, %if.then.i.unlock.sink.split_crit_edge
  tail call void @pci_cfg_access_unlock(ptr noundef %dev.062) #24
  br label %unlock

unlock:                                           ; preds = %unlock.sink.split, %for.body.unlock_crit_edge
  %dev.1.in63 = getelementptr inbounds %struct.list_head, ptr %dev.062, i32 0, i32 1
  %4 = ptrtoint ptr %dev.1.in63 to i32
  call void @__asan_load4_noabort(i32 %4)
  %dev.164 = load ptr, ptr %dev.1.in63, align 4
  %cmp22.not65 = icmp eq ptr %dev.164, %devices
  br i1 %cmp22.not65, label %unlock.cleanup_crit_edge, label %unlock.for.body24_crit_edge

unlock.for.body24_crit_edge:                      ; preds = %unlock
  br label %for.body24

unlock.cleanup_crit_edge:                         ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

for.body24:                                       ; preds = %if.end29.for.body24_crit_edge, %unlock.for.body24_crit_edge
  %dev.166 = phi ptr [ %dev.1, %if.end29.for.body24_crit_edge ], [ %dev.164, %unlock.for.body24_crit_edge ]
  %subordinate25 = getelementptr inbounds %struct.pci_dev, ptr %dev.166, i32 0, i32 2
  %5 = ptrtoint ptr %subordinate25 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %subordinate25, align 4
  %tobool26.not = icmp eq ptr %6, null
  br i1 %tobool26.not, label %for.body24.if.end29_crit_edge, label %if.then27

for.body24.if.end29_crit_edge:                    ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end29

if.then27:                                        ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_unlock(ptr noundef nonnull %6)
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %for.body24.if.end29_crit_edge
  %mutex.i.i52 = getelementptr inbounds %struct.pci_dev, ptr %dev.166, i32 0, i32 44, i32 10
  tail call void @mutex_unlock(ptr noundef %mutex.i.i52) #24
  tail call void @pci_cfg_access_unlock(ptr noundef %dev.166) #24
  %dev.1.in = getelementptr inbounds %struct.list_head, ptr %dev.166, i32 0, i32 1
  %7 = ptrtoint ptr %dev.1.in to i32
  call void @__asan_load4_noabort(i32 %7)
  %dev.1 = load ptr, ptr %dev.1.in, align 4
  %cmp22.not = icmp eq ptr %dev.1, %devices
  br i1 %cmp22.not, label %if.end29.cleanup_crit_edge, label %if.end29.for.body24_crit_edge

if.end29.for.body24_crit_edge:                    ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body24

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

cleanup:                                          ; preds = %if.end29.cleanup_crit_edge, %unlock.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %unlock.cleanup_crit_edge ], [ 1, %entry.cleanup_crit_edge ], [ 0, %if.end29.cleanup_crit_edge ], [ 1, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_bus_save_and_disable_locked(ptr noundef readonly %bus) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %devices = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %0)
  %dev.013 = load ptr, ptr %devices, align 4
  %cmp.not14 = icmp eq ptr %dev.013, %devices
  br i1 %cmp.not14, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %dev.015 = phi ptr [ %dev.0, %for.inc.for.body_crit_edge ], [ %dev.013, %entry.for.body_crit_edge ]
  tail call fastcc void @pci_dev_save_and_disable(ptr noundef %dev.015)
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev.015, i32 0, i32 2
  %1 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %subordinate, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_save_and_disable_locked(ptr noundef nonnull %2)
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %3 = ptrtoint ptr %dev.015 to i32
  call void @__asan_load4_noabort(i32 %3)
  %dev.0 = load ptr, ptr %dev.015, align 4
  %cmp.not = icmp eq ptr %dev.0, %devices
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_bus_restore_locked(ptr noundef readonly %bus) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  %devices = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %0)
  %dev.013 = load ptr, ptr %devices, align 4
  %cmp.not14 = icmp eq ptr %dev.013, %devices
  br i1 %cmp.not14, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %dev.015 = phi ptr [ %dev.0, %for.inc.for.body_crit_edge ], [ %dev.013, %entry.for.body_crit_edge ]
  %driver.i = getelementptr inbounds %struct.pci_dev, ptr %dev.015, i32 0, i32 27
  %1 = ptrtoint ptr %driver.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %driver.i, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %cond.end.thread.i, label %cond.end.i

cond.end.thread.i:                                ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @pci_restore_state(ptr noundef %dev.015) #24
  br label %pci_dev_restore.exit

cond.end.i:                                       ; preds = %for.body
  %err_handler2.i = getelementptr inbounds %struct.pci_driver, ptr %2, i32 0, i32 11
  %3 = ptrtoint ptr %err_handler2.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %err_handler2.i, align 4
  tail call void @pci_restore_state(ptr noundef %dev.015) #24
  %tobool3.not.i = icmp eq ptr %4, null
  br i1 %tobool3.not.i, label %cond.end.i.pci_dev_restore.exit_crit_edge, label %land.lhs.true.i

cond.end.i.pci_dev_restore.exit_crit_edge:        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_restore.exit

land.lhs.true.i:                                  ; preds = %cond.end.i
  %reset_done.i = getelementptr inbounds %struct.pci_error_handlers, ptr %4, i32 0, i32 4
  %5 = ptrtoint ptr %reset_done.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %reset_done.i, align 4
  %tobool4.not.i = icmp eq ptr %6, null
  br i1 %tobool4.not.i, label %land.lhs.true.i.pci_dev_restore.exit_crit_edge, label %if.then.i

land.lhs.true.i.pci_dev_restore.exit_crit_edge:   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  br label %pci_dev_restore.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #26
  tail call void %6(ptr noundef %dev.015) #24
  br label %pci_dev_restore.exit

pci_dev_restore.exit:                             ; preds = %if.then.i, %land.lhs.true.i.pci_dev_restore.exit_crit_edge, %cond.end.i.pci_dev_restore.exit_crit_edge, %cond.end.thread.i
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev.015, i32 0, i32 2
  %7 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %subordinate, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %pci_dev_restore.exit.for.inc_crit_edge, label %if.then

pci_dev_restore.exit.for.inc_crit_edge:           ; preds = %pci_dev_restore.exit
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.inc

if.then:                                          ; preds = %pci_dev_restore.exit
  call void @__sanitizer_cov_trace_pc() #26
  tail call fastcc void @pci_bus_restore_locked(ptr noundef nonnull %8)
  br label %for.inc

for.inc:                                          ; preds = %if.then, %pci_dev_restore.exit.for.inc_crit_edge
  %9 = ptrtoint ptr %dev.015 to i32
  call void @__asan_load4_noabort(i32 %9)
  %dev.0 = load ptr, ptr %dev.015, align 4
  %cmp.not = icmp eq ptr %dev.0, %devices
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #26
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__bitmap_set(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #6 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #6 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bus_create_file(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @resource_alignment_show(ptr nocapture noundef readnone %bus, ptr noundef %buf) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef nonnull @resource_alignment_lock) #24
  %0 = load ptr, ptr @resource_alignment_param, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  %call = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.211, ptr noundef nonnull %0) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %count.0 = phi i32 [ %call, %if.then ], [ 0, %entry.if.end_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef nonnull @resource_alignment_lock) #24
  ret i32 %count.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @resource_alignment_store(ptr nocapture noundef readnone %bus, ptr noundef %buf, i32 noundef %count) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #26
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 4094, i32 %count)
  %cmp = icmp ugt i32 %count, 4094
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @kstrndup(ptr noundef %buf, i32 noundef %count, i32 noundef 3264) #24
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #26
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %call3 = tail call ptr @strchr(ptr noundef nonnull %call, i32 noundef 10)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end2.if.end6_crit_edge, label %if.then5

if.end2.if.end6_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end6

if.then5:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #26
  %0 = ptrtoint ptr %call3 to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %call3, align 1
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end2.if.end6_crit_edge
  tail call void @_raw_spin_lock(ptr noundef nonnull @resource_alignment_lock) #24
  %1 = load ptr, ptr @resource_alignment_param, align 4
  %2 = ptrtoint ptr %call to i32
  call void @__asan_load1_noabort(i32 %2)
  %char0 = load i8, ptr %call, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %char0)
  %tobool8.not = icmp eq i8 %char0, 0
  br i1 %tobool8.not, label %if.else, label %if.end6.if.end10_crit_edge

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #26
  br label %if.end10

if.else:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #26
  tail call void @kfree(ptr noundef nonnull %call) #24
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.end6.if.end10_crit_edge
  %storemerge = phi ptr [ null, %if.else ], [ %call, %if.end6.if.end10_crit_edge ]
  store ptr %storemerge, ptr @resource_alignment_param, align 4
  tail call void @_raw_spin_unlock(ptr noundef nonnull @resource_alignment_lock) #24
  tail call void @kfree(ptr noundef %1) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %count, %if.end10 ], [ -22, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_emit(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_get_pci_domain_nr(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_no_msi() local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_no_aer() local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_realloc_get_opt(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @memparse(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @pcie_ecrc_get_policy(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_strtoul(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umax.i8(i8, i8) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #15

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #24

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #25 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 278)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #25 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 278)
  ret void
}

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { cold mustprogress nofree nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #5 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #21 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #24 = { nounwind }
attributes #25 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #26 = { nomerge }
attributes #27 = { nobuiltin }
attributes #28 = { cold nounwind }
attributes #29 = { nounwind allocsize(0) }
attributes #30 = { nounwind allocsize(2) }
attributes #31 = { cold }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !89, !90, !91, !92, !94, !95, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !121, !123, !125, !127, !129, !130, !131, !132, !133, !134, !136, !137, !138, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !160, !161, !162, !163, !165, !166, !167, !168, !169, !170, !171, !173, !174, !175, !176, !177, !178, !180, !181, !182, !183, !185, !186, !187, !189, !190, !191, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !228, !229, !230, !232, !234, !235, !236, !238, !239, !240, !242, !244, !246, !248, !249, !250, !252, !254, !255, !256, !258, !260, !262, !264, !266, !268, !270, !272, !274, !275, !276, !277, !279, !281, !283, !285, !286, !287, !289, !290, !292, !293, !295, !296, !297, !299, !300, !302, !304, !306, !308, !310, !312, !314, !316, !318, !320, !322, !324, !326, !328, !330, !332, !334, !336, !338, !340, !342, !344, !346, !348, !349, !350, !351, !353, !354, !355, !356, !358, !360, !362, !363, !364, !365, !367, !368, !369, !371, !372, !373, !375, !377, !379, !380, !381, !382, !384, !386, !388, !390, !392, !394, !396, !398, !400, !402, !404, !406, !408, !410, !412, !413, !415, !417, !419, !420, !421, !422, !424, !425, !426, !427, !429, !430, !431, !433, !434, !435, !436, !437, !439, !440, !441, !442, !444, !445, !446, !448, !449, !450, !451, !453, !454, !455, !457, !458, !459, !460, !461, !463, !464, !465, !467, !468, !469, !471, !473, !475, !477, !479, !481, !483, !485, !486, !487, !488, !490, !492, !493, !494, !496, !498, !499, !500, !502, !504, !505, !506, !507, !509, !510, !511, !513, !514, !515, !517, !518, !519, !521, !522, !523, !525, !526, !527, !529, !530, !531, !533, !534, !535, !537, !538, !539, !540, !542, !543, !544, !545, !546, !548, !549, !550, !551, !553, !554, !555, !557, !558, !559, !561, !563, !564, !566, !568, !570, !572, !573, !574, !575, !577, !579, !580, !581, !583, !584, !585, !587, !588, !589, !591, !592, !593, !595, !597, !599, !601, !603, !605, !607, !609, !610, !611, !612, !614, !616, !618, !619, !620, !621, !622, !624, !626, !627, !628, !630, !631, !632, !634, !635, !637, !639, !640, !641, !642, !644, !645, !646, !648, !649, !651, !653, !655, !656, !657, !658, !660, !661, !662, !664, !665, !667, !669, !671, !672, !673, !674, !676, !678, !680, !682, !684, !686, !688, !690, !692, !694, !696, !698, !700, !702, !704, !706, !708, !710, !712, !714, !716, !718, !720, !721}
!llvm.module.flags = !{!722, !723, !724, !725, !726, !727, !728, !729}
!llvm.ident = !{!730}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../drivers/pci/pci.c", i32 37, i32 1}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @pci_slot_mutex, !1, !"pci_slot_mutex", i1 false, i1 false}
!4 = !{ptr @.str.2, !5, !"<string literal>", i1 false, i1 false}
!5 = !{!"../drivers/pci/pci.c", i32 40, i32 2}
!6 = !{ptr @.str.3, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../drivers/pci/pci.c", i32 40, i32 11}
!8 = !{ptr @.str.4, !9, !"<string literal>", i1 false, i1 false}
!9 = !{!"../drivers/pci/pci.c", i32 40, i32 17}
!10 = !{ptr @.str.5, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../drivers/pci/pci.c", i32 40, i32 23}
!12 = !{ptr @.str.6, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../drivers/pci/pci.c", i32 40, i32 29}
!14 = !{ptr @.str.7, !15, !"<string literal>", i1 false, i1 false}
!15 = !{!"../drivers/pci/pci.c", i32 40, i32 38}
!16 = !{ptr @.str.8, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../drivers/pci/pci.c", i32 40, i32 48}
!18 = !{ptr @pci_power_names, !19, !"pci_power_names", i1 false, i1 false}
!19 = !{!"../drivers/pci/pci.c", i32 39, i32 13}
!20 = !{ptr @__ksymtab_pci_power_names, !21, !"__ksymtab_pci_power_names", i1 false, i1 false}
!21 = !{!"../drivers/pci/pci.c", i32 42, i32 1}
!22 = !{ptr @__ksymtab_isa_dma_bridge_buggy, !23, !"__ksymtab_isa_dma_bridge_buggy", i1 false, i1 false}
!23 = !{!"../drivers/pci/pci.c", i32 45, i32 1}
!24 = !{ptr @__ksymtab_pci_pci_problems, !25, !"__ksymtab_pci_pci_problems", i1 false, i1 false}
!25 = !{!"../drivers/pci/pci.c", i32 48, i32 1}
!26 = !{ptr @pci_domains_supported, !27, !"pci_domains_supported", i1 false, i1 false}
!27 = !{!"../drivers/pci/pci.c", i32 82, i32 5}
!28 = !{ptr @pci_cardbus_io_size, !29, !"pci_cardbus_io_size", i1 false, i1 false}
!29 = !{!"../drivers/pci/pci.c", i32 88, i32 15}
!30 = !{ptr @pci_cardbus_mem_size, !31, !"pci_cardbus_mem_size", i1 false, i1 false}
!31 = !{!"../drivers/pci/pci.c", i32 89, i32 15}
!32 = !{ptr @pci_hotplug_io_size, !33, !"pci_hotplug_io_size", i1 false, i1 false}
!33 = !{!"../drivers/pci/pci.c", i32 95, i32 15}
!34 = !{ptr @pci_hotplug_mmio_size, !35, !"pci_hotplug_mmio_size", i1 false, i1 false}
!35 = !{!"../drivers/pci/pci.c", i32 101, i32 15}
!36 = !{ptr @pci_hotplug_mmio_pref_size, !37, !"pci_hotplug_mmio_pref_size", i1 false, i1 false}
!37 = !{!"../drivers/pci/pci.c", i32 102, i32 15}
!38 = !{ptr @pci_hotplug_bus_size, !39, !"pci_hotplug_bus_size", i1 false, i1 false}
!39 = !{!"../drivers/pci/pci.c", i32 105, i32 15}
!40 = !{ptr @pcie_bus_config, !41, !"pcie_bus_config", i1 false, i1 false}
!41 = !{!"../drivers/pci/pci.c", i32 118, i32 28}
!42 = !{ptr @pci_dfl_cache_line_size, !43, !"pci_dfl_cache_line_size", i1 false, i1 false}
!43 = !{!"../drivers/pci/pci.c", i32 127, i32 4}
!44 = !{ptr @pcibios_max_latency, !45, !"pcibios_max_latency", i1 false, i1 false}
!45 = !{!"../drivers/pci/pci.c", i32 134, i32 14}
!46 = !{ptr @__ksymtab_pci_ats_disabled, !47, !"__ksymtab_pci_ats_disabled", i1 false, i1 false}
!47 = !{!"../drivers/pci/pci.c", i32 149, i32 1}
!48 = !{ptr @__setup_pcie_port_pm_setup, !49, !"__setup_pcie_port_pm_setup", i1 false, i1 false}
!49 = !{!"../drivers/pci/pci.c", i32 164, i32 1}
!50 = !{ptr @__ksymtab_pci_bus_max_busnr, !51, !"__ksymtab_pci_bus_max_busnr", i1 false, i1 false}
!51 = !{!"../drivers/pci/pci.c", i32 189, i32 1}
!52 = !{ptr @__ksymtab_pci_status_get_and_clear_errors, !53, !"__ksymtab_pci_status_get_and_clear_errors", i1 false, i1 false}
!53 = !{!"../drivers/pci/pci.c", i32 212, i32 1}
!54 = !{ptr @__ksymtab_pci_ioremap_bar, !55, !"__ksymtab_pci_ioremap_bar", i1 false, i1 false}
!55 = !{!"../drivers/pci/pci.c", i32 240, i32 1}
!56 = !{ptr @__ksymtab_pci_ioremap_wc_bar, !57, !"__ksymtab_pci_ioremap_wc_bar", i1 false, i1 false}
!57 = !{!"../drivers/pci/pci.c", i32 246, i32 1}
!58 = !{ptr @__ksymtab_pci_find_next_capability, !59, !"__ksymtab_pci_find_next_capability", i1 false, i1 false}
!59 = !{!"../drivers/pci/pci.c", i32 449, i32 1}
!60 = !{ptr @__ksymtab_pci_find_capability, !61, !"__ksymtab_pci_find_capability", i1 false, i1 false}
!61 = !{!"../drivers/pci/pci.c", i32 500, i32 1}
!62 = !{ptr @__ksymtab_pci_bus_find_capability, !63, !"__ksymtab_pci_bus_find_capability", i1 false, i1 false}
!63 = !{!"../drivers/pci/pci.c", i32 527, i32 1}
!64 = !{ptr @__ksymtab_pci_find_next_ext_capability, !65, !"__ksymtab_pci_find_next_ext_capability", i1 false, i1 false}
!65 = !{!"../drivers/pci/pci.c", i32 579, i32 1}
!66 = !{ptr @__ksymtab_pci_find_ext_capability, !67, !"__ksymtab_pci_find_ext_capability", i1 false, i1 false}
!67 = !{!"../drivers/pci/pci.c", i32 599, i32 1}
!68 = !{ptr @__ksymtab_pci_get_dsn, !69, !"__ksymtab_pci_get_dsn", i1 false, i1 false}
!69 = !{!"../drivers/pci/pci.c", i32 633, i32 1}
!70 = !{ptr @__ksymtab_pci_find_next_ht_capability, !71, !"__ksymtab_pci_find_next_ht_capability", i1 false, i1 false}
!71 = !{!"../drivers/pci/pci.c", i32 680, i32 1}
!72 = !{ptr @__ksymtab_pci_find_ht_capability, !73, !"__ksymtab_pci_find_ht_capability", i1 false, i1 false}
!73 = !{!"../drivers/pci/pci.c", i32 703, i32 1}
!74 = !{ptr @__ksymtab_pci_find_vsec_capability, !75, !"__ksymtab_pci_find_vsec_capability", i1 false, i1 false}
!75 = !{!"../drivers/pci/pci.c", i32 733, i32 1}
!76 = !{ptr @__ksymtab_pci_find_dvsec_capability, !77, !"__ksymtab_pci_find_dvsec_capability", i1 false, i1 false}
!77 = !{!"../drivers/pci/pci.c", i32 765, i32 1}
!78 = !{ptr @__ksymtab_pci_find_parent_resource, !79, !"__ksymtab_pci_find_parent_resource", i1 false, i1 false}
!79 = !{!"../drivers/pci/pci.c", i32 809, i32 1}
!80 = !{ptr @__ksymtab_pci_find_resource, !81, !"__ksymtab_pci_find_resource", i1 false, i1 false}
!81 = !{!"../drivers/pci/pci.c", i32 833, i32 1}
!82 = !{ptr @__ksymtab_pci_platform_power_transition, !83, !"__ksymtab_pci_platform_power_transition", i1 false, i1 false}
!83 = !{!"../drivers/pci/pci.c", i32 1247, i32 1}
!84 = !{ptr @__ksymtab_pci_set_power_state, !85, !"__ksymtab_pci_set_power_state", i1 false, i1 false}
!85 = !{!"../drivers/pci/pci.c", i32 1421, i32 1}
!86 = !{ptr @.str.9, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/pci/pci.c", i32 1484, i32 4}
!88 = !{ptr @.str.10, !87, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @.str.11, !87, !"<string literal>", i1 false, i1 false}
!90 = !{ptr @.str.12, !87, !"<string literal>", i1 false, i1 false}
!91 = !{ptr @pci_bridge_reconfigure_ltr.__UNIQUE_ID_ddebug237, !87, !"__UNIQUE_ID_ddebug237", i1 false, i1 false}
!92 = !{ptr @.str.13, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../drivers/pci/pci.c", i32 1606, i32 3}
!94 = !{ptr @.str.14, !93, !"<string literal>", i1 false, i1 false}
!95 = !{ptr @pci_save_state.__UNIQUE_ID_ddebug238, !93, !"__UNIQUE_ID_ddebug238", i1 false, i1 false}
!96 = !{ptr @__ksymtab_pci_save_state, !97, !"__ksymtab_pci_save_state", i1 false, i1 false}
!97 = !{!"../drivers/pci/pci.c", i32 1625, i32 1}
!98 = !{ptr @__ksymtab_pci_restore_state, !99, !"__ksymtab_pci_restore_state", i1 false, i1 false}
!99 = !{!"../drivers/pci/pci.c", i32 1750, i32 1}
!100 = !{ptr @__ksymtab_pci_store_saved_state, !101, !"__ksymtab_pci_store_saved_state", i1 false, i1 false}
!101 = !{!"../drivers/pci/pci.c", i32 1796, i32 1}
!102 = !{ptr @__ksymtab_pci_load_saved_state, !103, !"__ksymtab_pci_load_saved_state", i1 false, i1 false}
!103 = !{!"../drivers/pci/pci.c", i32 1832, i32 1}
!104 = !{ptr @__ksymtab_pci_load_and_free_saved_state, !105, !"__ksymtab_pci_load_and_free_saved_state", i1 false, i1 false}
!105 = !{!"../drivers/pci/pci.c", i32 1848, i32 1}
!106 = !{ptr @__ksymtab_pci_reenable_device, !107, !"__ksymtab_pci_reenable_device", i1 false, i1 false}
!107 = !{!"../drivers/pci/pci.c", i32 1902, i32 1}
!108 = !{ptr @__ksymtab_pci_enable_device_io, !109, !"__ksymtab_pci_enable_device_io", i1 false, i1 false}
!109 = !{!"../drivers/pci/pci.c", i32 1973, i32 1}
!110 = !{ptr @__ksymtab_pci_enable_device_mem, !111, !"__ksymtab_pci_enable_device_mem", i1 false, i1 false}
!111 = !{!"../drivers/pci/pci.c", i32 1987, i32 1}
!112 = !{ptr @__ksymtab_pci_enable_device, !113, !"__ksymtab_pci_enable_device", i1 false, i1 false}
!113 = !{!"../drivers/pci/pci.c", i32 2004, i32 1}
!114 = !{ptr @__ksymtab_pcim_enable_device, !115, !"__ksymtab_pcim_enable_device", i1 false, i1 false}
!115 = !{!"../drivers/pci/pci.c", i32 2086, i32 1}
!116 = !{ptr @__ksymtab_pcim_pin_device, !117, !"__ksymtab_pcim_pin_device", i1 false, i1 false}
!117 = !{!"../drivers/pci/pci.c", i32 2105, i32 1}
!118 = distinct !{null, !119, !"__already_done", i1 false, i1 false}
!119 = !{!"../drivers/pci/pci.c", i32 2196, i32 2}
!120 = !{ptr @.str.15, !119, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @__ksymtab_pci_disable_device, !122, !"__ksymtab_pci_disable_device", i1 false, i1 false}
!122 = !{!"../drivers/pci/pci.c", i32 2206, i32 1}
!123 = !{ptr @__ksymtab_pci_set_pcie_reset_state, !124, !"__ksymtab_pci_set_pcie_reset_state", i1 false, i1 false}
!124 = !{!"../drivers/pci/pci.c", i32 2233, i32 1}
!125 = !{ptr @__ksymtab_pci_pme_capable, !126, !"__ksymtab_pci_pme_capable", i1 false, i1 false}
!126 = !{!"../drivers/pci/pci.c", i32 2332, i32 1}
!127 = !{ptr @.str.16, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../drivers/pci/pci.c", i32 2446, i32 5}
!129 = !{ptr @.str.17, !128, !"<string literal>", i1 false, i1 false}
!130 = !{ptr @.str.18, !128, !"<string literal>", i1 false, i1 false}
!131 = !{ptr @.str.19, !128, !"<string literal>", i1 false, i1 false}
!132 = !{ptr @pci_pme_active._entry, !128, !"_entry", i1 false, i1 false}
!133 = !{ptr @pci_pme_active._entry_ptr, !128, !"_entry_ptr", i1 false, i1 false}
!134 = !{ptr @.str.20, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/pci/pci.c", i32 2470, i32 2}
!136 = !{ptr @pci_pme_active.__UNIQUE_ID_ddebug240, !135, !"__UNIQUE_ID_ddebug240", i1 false, i1 false}
!137 = !{ptr @.str.21, !135, !"<string literal>", i1 false, i1 false}
!138 = !{ptr @.str.22, !135, !"<string literal>", i1 false, i1 false}
!139 = !{ptr @__ksymtab_pci_pme_active, !140, !"__ksymtab_pci_pme_active", i1 false, i1 false}
!140 = !{!"../drivers/pci/pci.c", i32 2472, i32 1}
!141 = !{ptr @__ksymtab_pci_enable_wake, !142, !"__ksymtab_pci_enable_wake", i1 false, i1 false}
!142 = !{!"../drivers/pci/pci.c", i32 2561, i32 1}
!143 = !{ptr @__ksymtab_pci_wake_from_d3, !144, !"__ksymtab_pci_wake_from_d3", i1 false, i1 false}
!144 = !{!"../drivers/pci/pci.c", i32 2583, i32 1}
!145 = !{ptr @__ksymtab_pci_prepare_to_sleep, !146, !"__ksymtab_pci_prepare_to_sleep", i1 false, i1 false}
!146 = !{!"../drivers/pci/pci.c", i32 2684, i32 1}
!147 = !{ptr @__ksymtab_pci_back_from_sleep, !148, !"__ksymtab_pci_back_from_sleep", i1 false, i1 false}
!148 = !{!"../drivers/pci/pci.c", i32 2703, i32 1}
!149 = !{ptr @__ksymtab_pci_dev_run_wake, !150, !"__ksymtab_pci_dev_run_wake", i1 false, i1 false}
!150 = !{!"../drivers/pci/pci.c", i32 2783, i32 1}
!151 = !{ptr @__ksymtab_pci_choose_state, !152, !"__ksymtab_pci_choose_state", i1 false, i1 false}
!152 = !{!"../drivers/pci/pci.c", i32 2875, i32 1}
!153 = !{ptr @__ksymtab_pci_d3cold_enable, !154, !"__ksymtab_pci_d3cold_enable", i1 false, i1 false}
!154 = !{!"../drivers/pci/pci.c", i32 3075, i32 1}
!155 = !{ptr @__ksymtab_pci_d3cold_disable, !156, !"__ksymtab_pci_d3cold_disable", i1 false, i1 false}
!156 = !{!"../drivers/pci/pci.c", i32 3092, i32 1}
!157 = !{ptr @.str.23, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../drivers/pci/pci.c", i32 3121, i32 3}
!159 = !{ptr @.str.24, !158, !"<string literal>", i1 false, i1 false}
!160 = !{ptr @.str.25, !158, !"<string literal>", i1 false, i1 false}
!161 = !{ptr @pci_pm_init._entry, !158, !"_entry", i1 false, i1 false}
!162 = !{ptr @pci_pm_init._entry_ptr, !158, !"_entry_ptr", i1 false, i1 false}
!163 = !{ptr @.str.27, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../drivers/pci/pci.c", i32 3141, i32 4}
!165 = !{ptr @.str.28, !164, !"<string literal>", i1 false, i1 false}
!166 = !{ptr @pci_pm_init._entry.26, !164, !"_entry", i1 false, i1 false}
!167 = !{ptr @pci_pm_init._entry_ptr.29, !164, !"_entry_ptr", i1 false, i1 false}
!168 = !{ptr @.str.30, !164, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @.str.31, !164, !"<string literal>", i1 false, i1 false}
!170 = !{ptr @.str.32, !164, !"<string literal>", i1 false, i1 false}
!171 = !{ptr @.str.34, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../drivers/pci/pci.c", i32 3148, i32 3}
!173 = !{ptr @pci_pm_init._entry.33, !172, !"_entry", i1 false, i1 false}
!174 = !{ptr @pci_pm_init._entry_ptr.35, !172, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @.str.36, !172, !"<string literal>", i1 false, i1 false}
!176 = !{ptr @.str.37, !172, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @.str.38, !172, !"<string literal>", i1 false, i1 false}
!178 = !{ptr @.str.39, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../drivers/pci/pci.c", i32 3422, i32 3}
!180 = !{ptr @.str.40, !179, !"<string literal>", i1 false, i1 false}
!181 = !{ptr @pci_allocate_cap_save_buffers._entry, !179, !"_entry", i1 false, i1 false}
!182 = !{ptr @pci_allocate_cap_save_buffers._entry_ptr, !179, !"_entry_ptr", i1 false, i1 false}
!183 = !{ptr @.str.42, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../drivers/pci/pci.c", i32 3426, i32 3}
!185 = !{ptr @pci_allocate_cap_save_buffers._entry.41, !184, !"_entry", i1 false, i1 false}
!186 = !{ptr @pci_allocate_cap_save_buffers._entry_ptr.43, !184, !"_entry_ptr", i1 false, i1 false}
!187 = !{ptr @.str.45, !188, !"<string literal>", i1 false, i1 false}
!188 = !{!"../drivers/pci/pci.c", i32 3431, i32 3}
!189 = !{ptr @pci_allocate_cap_save_buffers._entry.44, !188, !"_entry", i1 false, i1 false}
!190 = !{ptr @pci_allocate_cap_save_buffers._entry_ptr.46, !188, !"_entry_ptr", i1 false, i1 false}
!191 = !{ptr @__ksymtab_pci_rebar_get_possible_sizes, !192, !"__ksymtab_pci_rebar_get_possible_sizes", i1 false, i1 false}
!192 = !{!"../drivers/pci/pci.c", i32 3687, i32 1}
!193 = !{ptr @__ksymtab_pci_enable_atomic_ops_to_root, !194, !"__ksymtab_pci_enable_atomic_ops_to_root", i1 false, i1 false}
!194 = !{!"../drivers/pci/pci.c", i32 3816, i32 1}
!195 = !{ptr @__ksymtab_pci_common_swizzle, !196, !"__ksymtab_pci_common_swizzle", i1 false, i1 false}
!196 = !{!"../drivers/pci/pci.c", i32 3876, i32 1}
!197 = !{ptr @__ksymtab_pci_release_region, !198, !"__ksymtab_pci_release_region", i1 false, i1 false}
!198 = !{!"../drivers/pci/pci.c", i32 3905, i32 1}
!199 = !{ptr @__ksymtab_pci_request_region, !200, !"__ksymtab_pci_request_region", i1 false, i1 false}
!200 = !{!"../drivers/pci/pci.c", i32 3975, i32 1}
!201 = !{ptr @__ksymtab_pci_release_selected_regions, !202, !"__ksymtab_pci_release_selected_regions", i1 false, i1 false}
!202 = !{!"../drivers/pci/pci.c", i32 3993, i32 1}
!203 = !{ptr @__ksymtab_pci_request_selected_regions, !204, !"__ksymtab_pci_request_selected_regions", i1 false, i1 false}
!204 = !{!"../drivers/pci/pci.c", i32 4026, i32 1}
!205 = !{ptr @__ksymtab_pci_request_selected_regions_exclusive, !206, !"__ksymtab_pci_request_selected_regions_exclusive", i1 false, i1 false}
!206 = !{!"../drivers/pci/pci.c", i32 4034, i32 1}
!207 = !{ptr @__ksymtab_pci_release_regions, !208, !"__ksymtab_pci_release_regions", i1 false, i1 false}
!208 = !{!"../drivers/pci/pci.c", i32 4050, i32 1}
!209 = !{ptr @__ksymtab_pci_request_regions, !210, !"__ksymtab_pci_request_regions", i1 false, i1 false}
!210 = !{!"../drivers/pci/pci.c", i32 4070, i32 1}
!211 = !{ptr @__ksymtab_pci_request_regions_exclusive, !212, !"__ksymtab_pci_request_regions_exclusive", i1 false, i1 false}
!212 = !{!"../drivers/pci/pci.c", i32 4092, i32 1}
!213 = !{ptr @__ksymtab_pci_pio_to_address, !214, !"__ksymtab_pci_pio_to_address", i1 false, i1 false}
!214 = !{!"../drivers/pci/pci.c", i32 4142, i32 1}
!215 = !{ptr @__ksymtab_pci_unmap_iospace, !216, !"__ksymtab_pci_unmap_iospace", i1 false, i1 false}
!216 = !{!"../drivers/pci/pci.c", i32 4208, i32 1}
!217 = !{ptr @.str.47, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/pci/pci.c", i32 4232, i32 8}
!219 = !{ptr @__ksymtab_devm_pci_remap_iospace, !220, !"__ksymtab_devm_pci_remap_iospace", i1 false, i1 false}
!220 = !{!"../drivers/pci/pci.c", i32 4246, i32 1}
!221 = !{ptr @.str.48, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../drivers/pci/pci.c", i32 4263, i32 8}
!223 = !{ptr @__ksymtab_devm_pci_remap_cfgspace, !224, !"__ksymtab_devm_pci_remap_cfgspace", i1 false, i1 false}
!224 = !{!"../drivers/pci/pci.c", i32 4276, i32 1}
!225 = !{ptr @.str.49, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../drivers/pci/pci.c", i32 4307, i32 3}
!227 = !{ptr @.str.50, !226, !"<string literal>", i1 false, i1 false}
!228 = !{ptr @devm_pci_remap_cfg_resource._entry, !226, !"_entry", i1 false, i1 false}
!229 = !{ptr @devm_pci_remap_cfg_resource._entry_ptr, !226, !"_entry_ptr", i1 false, i1 false}
!230 = !{ptr @.str.51, !231, !"<string literal>", i1 false, i1 false}
!231 = !{!"../drivers/pci/pci.c", i32 4314, i32 42}
!232 = !{ptr @.str.53, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/pci/pci.c", i32 4322, i32 3}
!234 = !{ptr @devm_pci_remap_cfg_resource._entry.52, !233, !"_entry", i1 false, i1 false}
!235 = !{ptr @devm_pci_remap_cfg_resource._entry_ptr.54, !233, !"_entry_ptr", i1 false, i1 false}
!236 = !{ptr @.str.56, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../drivers/pci/pci.c", i32 4328, i32 3}
!238 = !{ptr @devm_pci_remap_cfg_resource._entry.55, !237, !"_entry", i1 false, i1 false}
!239 = !{ptr @devm_pci_remap_cfg_resource._entry_ptr.57, !237, !"_entry_ptr", i1 false, i1 false}
!240 = !{ptr @__ksymtab_devm_pci_remap_cfg_resource, !241, !"__ksymtab_devm_pci_remap_cfg_resource", i1 false, i1 false}
!241 = !{!"../drivers/pci/pci.c", i32 4335, i32 1}
!242 = !{ptr @__ksymtab_pci_set_master, !243, !"__ksymtab_pci_set_master", i1 false, i1 false}
!243 = !{!"../drivers/pci/pci.c", i32 4405, i32 1}
!244 = !{ptr @__ksymtab_pci_clear_master, !245, !"__ksymtab_pci_clear_master", i1 false, i1 false}
!245 = !{!"../drivers/pci/pci.c", i32 4415, i32 1}
!246 = !{ptr @.str.58, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../drivers/pci/pci.c", i32 4448, i32 2}
!248 = !{ptr @.str.59, !247, !"<string literal>", i1 false, i1 false}
!249 = !{ptr @pci_set_cacheline_size.__UNIQUE_ID_ddebug242, !247, !"__UNIQUE_ID_ddebug242", i1 false, i1 false}
!250 = !{ptr @__ksymtab_pci_set_cacheline_size, !251, !"__ksymtab_pci_set_cacheline_size", i1 false, i1 false}
!251 = !{!"../drivers/pci/pci.c", i32 4453, i32 1}
!252 = !{ptr @.str.60, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../drivers/pci/pci.c", i32 4477, i32 3}
!254 = !{ptr @.str.61, !253, !"<string literal>", i1 false, i1 false}
!255 = !{ptr @pci_set_mwi.__UNIQUE_ID_ddebug243, !253, !"__UNIQUE_ID_ddebug243", i1 false, i1 false}
!256 = !{ptr @__ksymtab_pci_set_mwi, !257, !"__ksymtab_pci_set_mwi", i1 false, i1 false}
!257 = !{!"../drivers/pci/pci.c", i32 4484, i32 1}
!258 = !{ptr @__ksymtab_pcim_set_mwi, !259, !"__ksymtab_pcim_set_mwi", i1 false, i1 false}
!259 = !{!"../drivers/pci/pci.c", i32 4505, i32 1}
!260 = !{ptr @__ksymtab_pci_try_set_mwi, !261, !"__ksymtab_pci_try_set_mwi", i1 false, i1 false}
!261 = !{!"../drivers/pci/pci.c", i32 4524, i32 1}
!262 = !{ptr @__ksymtab_pci_clear_mwi, !263, !"__ksymtab_pci_clear_mwi", i1 false, i1 false}
!263 = !{!"../drivers/pci/pci.c", i32 4544, i32 1}
!264 = !{ptr @__ksymtab_pci_intx, !265, !"__ksymtab_pci_intx", i1 false, i1 false}
!265 = !{!"../drivers/pci/pci.c", i32 4593, i32 1}
!266 = !{ptr @__ksymtab_pci_check_and_mask_intx, !267, !"__ksymtab_pci_check_and_mask_intx", i1 false, i1 false}
!267 = !{!"../drivers/pci/pci.c", i32 4651, i32 1}
!268 = !{ptr @__ksymtab_pci_check_and_unmask_intx, !269, !"__ksymtab_pci_check_and_unmask_intx", i1 false, i1 false}
!269 = !{!"../drivers/pci/pci.c", i32 4665, i32 1}
!270 = !{ptr @__ksymtab_pci_wait_for_pending_transaction, !271, !"__ksymtab_pci_wait_for_pending_transaction", i1 false, i1 false}
!271 = !{!"../drivers/pci/pci.c", i32 4681, i32 1}
!272 = !{ptr @.str.62, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/pci/pci.c", i32 4693, i32 3}
!274 = !{ptr @.str.63, !273, !"<string literal>", i1 false, i1 false}
!275 = !{ptr @pcie_flr._entry, !273, !"_entry", i1 false, i1 false}
!276 = !{ptr @pcie_flr._entry_ptr, !273, !"_entry_ptr", i1 false, i1 false}
!277 = !{ptr @.str.64, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../drivers/pci/pci.c", i32 4707, i32 27}
!279 = !{ptr @__ksymtab_pcie_flr, !280, !"__ksymtab_pcie_flr", i1 false, i1 false}
!280 = !{!"../drivers/pci/pci.c", i32 4709, i32 1}
!281 = !{ptr @__ksymtab_pcie_reset_flr, !282, !"__ksymtab_pcie_reset_flr", i1 false, i1 false}
!282 = !{!"../drivers/pci/pci.c", i32 4731, i32 1}
!283 = !{ptr @.str.65, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/pci/pci.c", i32 4961, i32 3}
!285 = !{ptr @.str.66, !284, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug248, !284, !"__UNIQUE_ID_ddebug248", i1 false, i1 false}
!287 = !{ptr @.str.67, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../drivers/pci/pci.c", i32 4987, i32 3}
!289 = !{ptr @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug249, !288, !"__UNIQUE_ID_ddebug249", i1 false, i1 false}
!290 = !{ptr @.str.68, !291, !"<string literal>", i1 false, i1 false}
!291 = !{!"../drivers/pci/pci.c", i32 4990, i32 3}
!292 = !{ptr @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug250, !291, !"__UNIQUE_ID_ddebug250", i1 false, i1 false}
!293 = !{ptr @.str.69, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/pci/pci.c", i32 4994, i32 4}
!295 = !{ptr @pci_bridge_wait_for_secondary_bus._entry, !294, !"_entry", i1 false, i1 false}
!296 = !{ptr @pci_bridge_wait_for_secondary_bus._entry_ptr, !294, !"_entry_ptr", i1 false, i1 false}
!297 = !{ptr @.str.70, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../drivers/pci/pci.c", i32 5000, i32 3}
!299 = !{ptr @pci_bridge_wait_for_secondary_bus.__UNIQUE_ID_ddebug251, !298, !"__UNIQUE_ID_ddebug251", i1 false, i1 false}
!300 = !{ptr @.str.71, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../drivers/pci/pci.c", i32 5048, i32 27}
!302 = !{ptr @__ksymtab_pci_bridge_secondary_bus_reset, !303, !"__ksymtab_pci_bridge_secondary_bus_reset", i1 false, i1 false}
!303 = !{!"../drivers/pci/pci.c", i32 5050, i32 1}
!304 = !{ptr @__ksymtab_pci_dev_lock, !305, !"__ksymtab_pci_dev_lock", i1 false, i1 false}
!305 = !{!"../drivers/pci/pci.c", i32 5110, i32 1}
!306 = !{ptr @__ksymtab_pci_dev_trylock, !307, !"__ksymtab_pci_dev_trylock", i1 false, i1 false}
!307 = !{!"../drivers/pci/pci.c", i32 5123, i32 1}
!308 = !{ptr @__ksymtab_pci_dev_unlock, !309, !"__ksymtab_pci_dev_unlock", i1 false, i1 false}
!309 = !{!"../drivers/pci/pci.c", i32 5130, i32 1}
!310 = !{ptr @pci_dev_reset_method_attr_group, !311, !"pci_dev_reset_method_attr_group", i1 false, i1 false}
!311 = !{!"../drivers/pci/pci.c", i32 5307, i32 30}
!312 = !{ptr @__ksymtab___pci_reset_function_locked, !313, !"__ksymtab___pci_reset_function_locked", i1 false, i1 false}
!313 = !{!"../drivers/pci/pci.c", i32 5360, i32 1}
!314 = !{ptr @__ksymtab_pci_reset_function, !315, !"__ksymtab_pci_reset_function", i1 false, i1 false}
!315 = !{!"../drivers/pci/pci.c", i32 5427, i32 1}
!316 = !{ptr @__ksymtab_pci_reset_function_locked, !317, !"__ksymtab_pci_reset_function_locked", i1 false, i1 false}
!317 = !{!"../drivers/pci/pci.c", i32 5461, i32 1}
!318 = !{ptr @__ksymtab_pci_try_reset_function, !319, !"__ksymtab_pci_try_reset_function", i1 false, i1 false}
!319 = !{!"../drivers/pci/pci.c", i32 5486, i32 1}
!320 = !{ptr @__ksymtab_pci_probe_reset_slot, !321, !"__ksymtab_pci_probe_reset_slot", i1 false, i1 false}
!321 = !{!"../drivers/pci/pci.c", i32 5731, i32 1}
!322 = !{ptr @__ksymtab_pci_probe_reset_bus, !323, !"__ksymtab_pci_probe_reset_bus", i1 false, i1 false}
!323 = !{!"../drivers/pci/pci.c", i32 5834, i32 1}
!324 = !{ptr @__ksymtab_pci_reset_bus, !325, !"__ksymtab_pci_reset_bus", i1 false, i1 false}
!325 = !{!"../drivers/pci/pci.c", i32 5873, i32 1}
!326 = !{ptr @__ksymtab_pcix_get_max_mmrbc, !327, !"__ksymtab_pcix_get_max_mmrbc", i1 false, i1 false}
!327 = !{!"../drivers/pci/pci.c", i32 5896, i32 1}
!328 = !{ptr @__ksymtab_pcix_get_mmrbc, !329, !"__ksymtab_pcix_get_mmrbc", i1 false, i1 false}
!329 = !{!"../drivers/pci/pci.c", i32 5919, i32 1}
!330 = !{ptr @__ksymtab_pcix_set_mmrbc, !331, !"__ksymtab_pcix_set_mmrbc", i1 false, i1 false}
!331 = !{!"../drivers/pci/pci.c", i32 5966, i32 1}
!332 = !{ptr @__ksymtab_pcie_get_readrq, !333, !"__ksymtab_pcie_get_readrq", i1 false, i1 false}
!333 = !{!"../drivers/pci/pci.c", i32 5982, i32 1}
!334 = !{ptr @__ksymtab_pcie_set_readrq, !335, !"__ksymtab_pcie_set_readrq", i1 false, i1 false}
!335 = !{!"../drivers/pci/pci.c", i32 6019, i32 1}
!336 = !{ptr @__ksymtab_pcie_get_mps, !337, !"__ksymtab_pcie_get_mps", i1 false, i1 false}
!337 = !{!"../drivers/pci/pci.c", i32 6035, i32 1}
!338 = !{ptr @__ksymtab_pcie_set_mps, !339, !"__ksymtab_pcie_set_mps", i1 false, i1 false}
!339 = !{!"../drivers/pci/pci.c", i32 6063, i32 1}
!340 = !{ptr @__ksymtab_pcie_bandwidth_available, !341, !"__ksymtab_pcie_bandwidth_available", i1 false, i1 false}
!341 = !{!"../drivers/pci/pci.c", i32 6121, i32 1}
!342 = !{ptr @__ksymtab_pcie_get_speed_cap, !343, !"__ksymtab_pcie_get_speed_cap", i1 false, i1 false}
!343 = !{!"../drivers/pci/pci.c", i32 6157, i32 1}
!344 = !{ptr @__ksymtab_pcie_get_width_cap, !345, !"__ksymtab_pcie_get_width_cap", i1 false, i1 false}
!345 = !{!"../drivers/pci/pci.c", i32 6176, i32 1}
!346 = !{ptr @.str.72, !347, !"<string literal>", i1 false, i1 false}
!347 = !{!"../drivers/pci/pci.c", i32 6221, i32 3}
!348 = !{ptr @.str.73, !347, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @__pcie_print_link_status._entry, !347, !"_entry", i1 false, i1 false}
!350 = !{ptr @__pcie_print_link_status._entry_ptr, !347, !"_entry_ptr", i1 false, i1 false}
!351 = !{ptr @.str.75, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../drivers/pci/pci.c", i32 6225, i32 3}
!353 = !{ptr @__pcie_print_link_status._entry.74, !352, !"_entry", i1 false, i1 false}
!354 = !{ptr @__pcie_print_link_status._entry_ptr.76, !352, !"_entry_ptr", i1 false, i1 false}
!355 = !{ptr @.str.77, !352, !"<string literal>", i1 false, i1 false}
!356 = !{ptr @__ksymtab_pcie_print_link_status, !357, !"__ksymtab_pcie_print_link_status", i1 false, i1 false}
!357 = !{!"../drivers/pci/pci.c", i32 6243, i32 1}
!358 = !{ptr @__ksymtab_pci_select_bars, !359, !"__ksymtab_pci_select_bars", i1 false, i1 false}
!359 = !{!"../drivers/pci/pci.c", i32 6260, i32 1}
!360 = !{ptr @.str.78, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/pci/pci.c", i32 6381, i32 3}
!362 = !{ptr @.str.79, !361, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @pci_add_dma_alias._entry, !361, !"_entry", i1 false, i1 false}
!364 = !{ptr @pci_add_dma_alias._entry_ptr, !361, !"_entry_ptr", i1 false, i1 false}
!365 = !{ptr @.str.81, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../drivers/pci/pci.c", i32 6388, i32 3}
!367 = !{ptr @pci_add_dma_alias._entry.80, !366, !"_entry", i1 false, i1 false}
!368 = !{ptr @pci_add_dma_alias._entry_ptr.82, !366, !"_entry_ptr", i1 false, i1 false}
!369 = !{ptr @.str.84, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../drivers/pci/pci.c", i32 6391, i32 3}
!371 = !{ptr @pci_add_dma_alias._entry.83, !370, !"_entry", i1 false, i1 false}
!372 = !{ptr @pci_add_dma_alias._entry_ptr.85, !370, !"_entry_ptr", i1 false, i1 false}
!373 = !{ptr @__ksymtab_pci_device_is_present, !374, !"__ksymtab_pci_device_is_present", i1 false, i1 false}
!374 = !{!"../drivers/pci/pci.c", i32 6414, i32 1}
!375 = !{ptr @__ksymtab_pci_ignore_hotplug, !376, !"__ksymtab_pci_ignore_hotplug", i1 false, i1 false}
!376 = !{!"../drivers/pci/pci.c", i32 6425, i32 1}
!377 = !{ptr @.str.86, !378, !"<string literal>", i1 false, i1 false}
!378 = !{!"../drivers/pci/pci.c", i32 6617, i32 3}
!379 = !{ptr @.str.87, !378, !"<string literal>", i1 false, i1 false}
!380 = !{ptr @pci_reassigndev_resource_alignment._entry, !378, !"_entry", i1 false, i1 false}
!381 = !{ptr @pci_reassigndev_resource_alignment._entry_ptr, !378, !"_entry_ptr", i1 false, i1 false}
!382 = !{ptr @__initcall__kmod_pci__255_6696_pci_resource_alignment_sysfs_init7, !383, !"__initcall__kmod_pci__255_6696_pci_resource_alignment_sysfs_init7", i1 false, i1 false}
!383 = !{!"../drivers/pci/pci.c", i32 6696, i32 1}
!384 = !{ptr @__ksymtab_pci_fixup_cardbus, !385, !"__ksymtab_pci_fixup_cardbus", i1 false, i1 false}
!385 = !{!"../drivers/pci/pci.c", i32 6784, i32 1}
!386 = !{ptr @__setup_pci_setup, !387, !"__setup_pci_setup", i1 false, i1 false}
!387 = !{!"../drivers/pci/pci.c", i32 6852, i32 1}
!388 = !{ptr @__initcall__kmod_pci__256_6871_pci_realloc_setup_params0, !389, !"__initcall__kmod_pci__256_6871_pci_realloc_setup_params0", i1 false, i1 false}
!389 = !{!"../drivers/pci/pci.c", i32 6871, i32 1}
!390 = !{ptr @isa_dma_bridge_buggy, !391, !"isa_dma_bridge_buggy", i1 false, i1 false}
!391 = !{!"../drivers/pci/pci.c", i32 44, i32 5}
!392 = !{ptr @pci_pci_problems, !393, !"pci_pci_problems", i1 false, i1 false}
!393 = !{!"../drivers/pci/pci.c", i32 47, i32 5}
!394 = !{ptr @pci_pm_d3hot_delay, !395, !"pci_pm_d3hot_delay", i1 false, i1 false}
!395 = !{!"../drivers/pci/pci.c", i32 50, i32 14}
!396 = !{ptr @pci_cache_line_size, !397, !"pci_cache_line_size", i1 false, i1 false}
!397 = !{!"../drivers/pci/pci.c", i32 128, i32 4}
!398 = distinct !{null, !399, !"pcie_ari_disabled", i1 false, i1 false}
!399 = !{!"../drivers/pci/pci.c", i32 137, i32 13}
!400 = distinct !{null, !401, !"pcie_ats_disabled", i1 false, i1 false}
!401 = !{!"../drivers/pci/pci.c", i32 140, i32 13}
!402 = !{ptr @pci_early_dump, !403, !"pci_early_dump", i1 false, i1 false}
!403 = !{!"../drivers/pci/pci.c", i32 143, i32 6}
!404 = distinct !{null, !405, !"pci_bridge_d3_disable", i1 false, i1 false}
!405 = !{!"../drivers/pci/pci.c", i32 152, i32 13}
!406 = distinct !{null, !407, !"pci_bridge_d3_force", i1 false, i1 false}
!407 = !{!"../drivers/pci/pci.c", i32 154, i32 13}
!408 = distinct !{null, !409, !"pci_acs_enable", i1 false, i1 false}
!409 = !{!"../drivers/pci/pci.c", i32 861, i32 12}
!410 = !{ptr @arch_set_vga_state, !411, !"arch_set_vga_state", i1 false, i1 false}
!411 = !{!"../drivers/pci/pci.c", i32 6263, i32 29}
!412 = !{ptr @__setup_str_pcie_port_pm_setup, !49, !"__setup_str_pcie_port_pm_setup", i1 false, i1 false}
!413 = !{ptr @.str.88, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../drivers/pci/pci.c", i32 158, i32 19}
!415 = !{ptr @.str.89, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../drivers/pci/pci.c", i32 160, i32 24}
!417 = !{ptr @.str.90, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../drivers/pci/pci.c", i32 226, i32 3}
!419 = !{ptr @.str.91, !418, !"<string literal>", i1 false, i1 false}
!420 = !{ptr @__pci_ioremap_resource._entry, !418, !"_entry", i1 false, i1 false}
!421 = !{ptr @__pci_ioremap_resource._entry_ptr, !418, !"_entry_ptr", i1 false, i1 false}
!422 = !{ptr @.str.92, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../drivers/pci/pci.c", i32 1106, i32 3}
!424 = !{ptr @.str.93, !423, !"<string literal>", i1 false, i1 false}
!425 = !{ptr @pci_raw_set_power_state._entry, !423, !"_entry", i1 false, i1 false}
!426 = !{ptr @pci_raw_set_power_state._entry_ptr, !423, !"_entry_ptr", i1 false, i1 false}
!427 = !{ptr @.str.95, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../drivers/pci/pci.c", i32 1119, i32 3}
!429 = !{ptr @pci_raw_set_power_state._entry.94, !428, !"_entry", i1 false, i1 false}
!430 = !{ptr @pci_raw_set_power_state._entry_ptr.96, !428, !"_entry_ptr", i1 false, i1 false}
!431 = !{ptr @.str.97, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../drivers/pci/pci.c", i32 1164, i32 3}
!433 = !{ptr @pci_raw_set_power_state._rs, !432, !"_rs", i1 false, i1 false}
!434 = !{ptr @.str.99, !432, !"<string literal>", i1 false, i1 false}
!435 = !{ptr @pci_raw_set_power_state._entry.98, !432, !"_entry", i1 false, i1 false}
!436 = !{ptr @pci_raw_set_power_state._entry_ptr.100, !432, !"_entry_ptr", i1 false, i1 false}
!437 = !{ptr @.str.101, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../drivers/pci/pci.c", i32 1458, i32 3}
!439 = !{ptr @.str.102, !438, !"<string literal>", i1 false, i1 false}
!440 = !{ptr @pci_save_pcie_state._entry, !438, !"_entry", i1 false, i1 false}
!441 = !{ptr @pci_save_pcie_state._entry_ptr, !438, !"_entry_ptr", i1 false, i1 false}
!442 = !{ptr @.str.103, !443, !"<string literal>", i1 false, i1 false}
!443 = !{!"../drivers/pci/pci.c", i32 1530, i32 3}
!444 = !{ptr @pci_save_pcix_state._entry, !443, !"_entry", i1 false, i1 false}
!445 = !{ptr @pci_save_pcix_state._entry_ptr, !443, !"_entry_ptr", i1 false, i1 false}
!446 = !{ptr @.str.104, !447, !"<string literal>", i1 false, i1 false}
!447 = !{!"../drivers/pci/pci.c", i32 1570, i32 3}
!448 = !{ptr @.str.105, !447, !"<string literal>", i1 false, i1 false}
!449 = !{ptr @pci_save_ltr_state._entry, !447, !"_entry", i1 false, i1 false}
!450 = !{ptr @pci_save_ltr_state._entry_ptr, !447, !"_entry_ptr", i1 false, i1 false}
!451 = !{ptr @.str.106, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../drivers/pci/pci.c", i32 1637, i32 3}
!453 = !{ptr @.str.107, !452, !"<string literal>", i1 false, i1 false}
!454 = !{ptr @pci_restore_config_dword.__UNIQUE_ID_ddebug239, !452, !"__UNIQUE_ID_ddebug239", i1 false, i1 false}
!455 = distinct !{null, !456, !"__already_done", i1 false, i1 false}
!456 = !{!"../drivers/pci/pci.c", i32 893, i32 4}
!457 = !{ptr @.str.108, !456, !"<string literal>", i1 false, i1 false}
!458 = !{ptr @.str.109, !456, !"<string literal>", i1 false, i1 false}
!459 = !{ptr @pci_disable_acs_redir._entry, !456, !"_entry", i1 false, i1 false}
!460 = !{ptr @pci_disable_acs_redir._entry_ptr, !456, !"_entry_ptr", i1 false, i1 false}
!461 = !{ptr @.str.111, !462, !"<string literal>", i1 false, i1 false}
!462 = !{!"../drivers/pci/pci.c", i32 917, i32 3}
!463 = !{ptr @pci_disable_acs_redir._entry.110, !462, !"_entry", i1 false, i1 false}
!464 = !{ptr @pci_disable_acs_redir._entry_ptr.112, !462, !"_entry_ptr", i1 false, i1 false}
!465 = !{ptr @.str.114, !466, !"<string literal>", i1 false, i1 false}
!466 = !{!"../drivers/pci/pci.c", i32 928, i32 2}
!467 = !{ptr @pci_disable_acs_redir._entry.113, !466, !"_entry", i1 false, i1 false}
!468 = !{ptr @pci_disable_acs_redir._entry_ptr.115, !466, !"_entry_ptr", i1 false, i1 false}
!469 = !{ptr @disable_acs_redir_param, !470, !"disable_acs_redir_param", i1 false, i1 false}
!470 = !{!"../drivers/pci/pci.c", i32 871, i32 20}
!471 = !{ptr @.str.116, !472, !"<string literal>", i1 false, i1 false}
!472 = !{!"../drivers/pci/pci.c", i32 369, i32 17}
!473 = !{ptr @.str.117, !474, !"<string literal>", i1 false, i1 false}
!474 = !{!"../drivers/pci/pci.c", i32 372, i32 19}
!475 = !{ptr @.str.118, !476, !"<string literal>", i1 false, i1 false}
!476 = !{!"../drivers/pci/pci.c", i32 375, i32 20}
!477 = !{ptr @.str.119, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../drivers/pci/pci.c", i32 286, i32 19}
!479 = !{ptr @.str.120, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../drivers/pci/pci.c", i32 312, i32 22}
!481 = !{ptr @.str.121, !482, !"<string literal>", i1 false, i1 false}
!482 = !{!"../drivers/pci/pci.c", i32 316, i32 23}
!483 = !{ptr @.str.122, !484, !"<string literal>", i1 false, i1 false}
!484 = !{!"../drivers/pci/pci.c", i32 1921, i32 3}
!485 = !{ptr @.str.123, !484, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @pci_enable_bridge._entry, !484, !"_entry", i1 false, i1 false}
!487 = !{ptr @pci_enable_bridge._entry_ptr, !484, !"_entry_ptr", i1 false, i1 false}
!488 = !{ptr @.str.124, !489, !"<string literal>", i1 false, i1 false}
!489 = !{!"../drivers/pci/pci.c", i32 2049, i32 11}
!490 = !{ptr @.str.125, !491, !"<string literal>", i1 false, i1 false}
!491 = !{!"../drivers/pci/pci.c", i32 55, i32 8}
!492 = !{ptr @.str.126, !491, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @pci_pme_list_mutex, !491, !"pci_pme_list_mutex", i1 false, i1 false}
!494 = !{ptr @pci_pme_list, !495, !"pci_pme_list", i1 false, i1 false}
!495 = !{!"../drivers/pci/pci.c", i32 54, i32 8}
!496 = !{ptr @.str.127, !497, !"<string literal>", i1 false, i1 false}
!497 = !{!"../drivers/pci/pci.c", i32 56, i32 8}
!498 = !{ptr @.str.128, !497, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @pci_pme_work, !497, !"pci_pme_work", i1 false, i1 false}
!500 = distinct !{null, !501, !"bridge_d3_blacklist", i1 false, i1 false}
!501 = !{!"../drivers/pci/pci.c", i32 2909, i32 35}
!502 = !{ptr @.str.129, !503, !"<string literal>", i1 false, i1 false}
!503 = !{!"../drivers/pci/pci.c", i32 3244, i32 3}
!504 = !{ptr @.str.130, !503, !"<string literal>", i1 false, i1 false}
!505 = !{ptr @pci_ea_read._entry, !503, !"_entry", i1 false, i1 false}
!506 = !{ptr @pci_ea_read._entry_ptr, !503, !"_entry_ptr", i1 false, i1 false}
!507 = !{ptr @.str.132, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../drivers/pci/pci.c", i32 3250, i32 3}
!509 = !{ptr @pci_ea_read._entry.131, !508, !"_entry", i1 false, i1 false}
!510 = !{ptr @pci_ea_read._entry_ptr.133, !508, !"_entry_ptr", i1 false, i1 false}
!511 = !{ptr @.str.135, !512, !"<string literal>", i1 false, i1 false}
!512 = !{!"../drivers/pci/pci.c", i32 3300, i32 3}
!513 = !{ptr @pci_ea_read._entry.134, !512, !"_entry", i1 false, i1 false}
!514 = !{ptr @pci_ea_read._entry_ptr.136, !512, !"_entry_ptr", i1 false, i1 false}
!515 = !{ptr @.str.138, !516, !"<string literal>", i1 false, i1 false}
!516 = !{!"../drivers/pci/pci.c", i32 3305, i32 3}
!517 = !{ptr @pci_ea_read._entry.137, !516, !"_entry", i1 false, i1 false}
!518 = !{ptr @pci_ea_read._entry_ptr.139, !516, !"_entry_ptr", i1 false, i1 false}
!519 = !{ptr @.str.141, !520, !"<string literal>", i1 false, i1 false}
!520 = !{!"../drivers/pci/pci.c", i32 3316, i32 3}
!521 = !{ptr @pci_ea_read._entry.140, !520, !"_entry", i1 false, i1 false}
!522 = !{ptr @pci_ea_read._entry_ptr.142, !520, !"_entry_ptr", i1 false, i1 false}
!523 = !{ptr @.str.144, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../drivers/pci/pci.c", i32 3319, i32 3}
!525 = !{ptr @pci_ea_read._entry.143, !524, !"_entry", i1 false, i1 false}
!526 = !{ptr @pci_ea_read._entry_ptr.145, !524, !"_entry_ptr", i1 false, i1 false}
!527 = !{ptr @.str.147, !528, !"<string literal>", i1 false, i1 false}
!528 = !{!"../drivers/pci/pci.c", i32 3322, i32 3}
!529 = !{ptr @pci_ea_read._entry.146, !528, !"_entry", i1 false, i1 false}
!530 = !{ptr @pci_ea_read._entry_ptr.148, !528, !"_entry_ptr", i1 false, i1 false}
!531 = !{ptr @.str.150, !532, !"<string literal>", i1 false, i1 false}
!532 = !{!"../drivers/pci/pci.c", i32 3325, i32 3}
!533 = !{ptr @pci_ea_read._entry.149, !532, !"_entry", i1 false, i1 false}
!534 = !{ptr @pci_ea_read._entry_ptr.151, !532, !"_entry_ptr", i1 false, i1 false}
!535 = !{ptr @.str.152, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../drivers/pci/pci.c", i32 3952, i32 2}
!537 = !{ptr @.str.153, !536, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @__pci_request_region._entry, !536, !"_entry", i1 false, i1 false}
!539 = !{ptr @__pci_request_region._entry_ptr, !536, !"_entry_ptr", i1 false, i1 false}
!540 = !{ptr @.str.154, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../drivers/pci/pci.c", i32 4347, i32 3}
!542 = !{ptr @.str.155, !541, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @__pci_set_master.__UNIQUE_ID_ddebug241, !541, !"__UNIQUE_ID_ddebug241", i1 false, i1 false}
!544 = !{ptr @.str.156, !541, !"<string literal>", i1 false, i1 false}
!545 = !{ptr @.str.157, !541, !"<string literal>", i1 false, i1 false}
!546 = !{ptr @.str.158, !547, !"<string literal>", i1 false, i1 false}
!547 = !{!"../drivers/pci/pci.c", i32 1285, i32 4}
!548 = !{ptr @.str.159, !547, !"<string literal>", i1 false, i1 false}
!549 = !{ptr @pci_dev_wait._entry, !547, !"_entry", i1 false, i1 false}
!550 = !{ptr @pci_dev_wait._entry_ptr, !547, !"_entry_ptr", i1 false, i1 false}
!551 = !{ptr @.str.161, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../drivers/pci/pci.c", i32 1291, i32 4}
!553 = !{ptr @pci_dev_wait._entry.160, !552, !"_entry", i1 false, i1 false}
!554 = !{ptr @pci_dev_wait._entry_ptr.162, !552, !"_entry_ptr", i1 false, i1 false}
!555 = !{ptr @.str.164, !556, !"<string literal>", i1 false, i1 false}
!556 = !{!"../drivers/pci/pci.c", i32 1300, i32 3}
!557 = !{ptr @pci_dev_wait._entry.163, !556, !"_entry", i1 false, i1 false}
!558 = !{ptr @pci_dev_wait._entry_ptr.165, !556, !"_entry_ptr", i1 false, i1 false}
!559 = !{ptr @pci_dev_reset_method_attrs, !560, !"pci_dev_reset_method_attrs", i1 false, i1 false}
!560 = !{!"../drivers/pci/pci.c", i32 5291, i32 26}
!561 = !{ptr @.str.166, !562, !"<string literal>", i1 false, i1 false}
!562 = !{!"../drivers/pci/pci.c", i32 5289, i32 8}
!563 = !{ptr @dev_attr_reset_method, !562, !"dev_attr_reset_method", i1 false, i1 false}
!564 = !{ptr @.str.167, !565, !"<string literal>", i1 false, i1 false}
!565 = !{!"../drivers/pci/pci.c", i32 5202, i32 34}
!566 = !{ptr @.str.168, !567, !"<string literal>", i1 false, i1 false}
!567 = !{!"../drivers/pci/pci.c", i32 5202, i32 48}
!568 = !{ptr @.str.169, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../drivers/pci/pci.c", i32 5207, i32 34}
!570 = !{ptr @.str.170, !571, !"<string literal>", i1 false, i1 false}
!571 = !{!"../drivers/pci/pci.c", i32 5235, i32 3}
!572 = !{ptr @.str.171, !571, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @reset_method_store._entry, !571, !"_entry", i1 false, i1 false}
!574 = !{ptr @reset_method_store._entry_ptr, !571, !"_entry_ptr", i1 false, i1 false}
!575 = !{ptr @.str.172, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../drivers/pci/pci.c", i32 5239, i32 23}
!577 = !{ptr @.str.174, !578, !"<string literal>", i1 false, i1 false}
!578 = !{!"../drivers/pci/pci.c", i32 5257, i32 4}
!579 = !{ptr @reset_method_store._entry.173, !578, !"_entry", i1 false, i1 false}
!580 = !{ptr @reset_method_store._entry_ptr.175, !578, !"_entry_ptr", i1 false, i1 false}
!581 = !{ptr @.str.177, !582, !"<string literal>", i1 false, i1 false}
!582 = !{!"../drivers/pci/pci.c", i32 5262, i32 4}
!583 = !{ptr @reset_method_store._entry.176, !582, !"_entry", i1 false, i1 false}
!584 = !{ptr @reset_method_store._entry_ptr.178, !582, !"_entry_ptr", i1 false, i1 false}
!585 = !{ptr @.str.180, !586, !"<string literal>", i1 false, i1 false}
!586 = !{!"../drivers/pci/pci.c", i32 5267, i32 4}
!587 = !{ptr @reset_method_store._entry.179, !586, !"_entry", i1 false, i1 false}
!588 = !{ptr @reset_method_store._entry_ptr.181, !586, !"_entry_ptr", i1 false, i1 false}
!589 = !{ptr @.str.183, !590, !"<string literal>", i1 false, i1 false}
!590 = !{!"../drivers/pci/pci.c", i32 5279, i32 3}
!591 = !{ptr @reset_method_store._entry.182, !590, !"_entry", i1 false, i1 false}
!592 = !{ptr @reset_method_store._entry_ptr.184, !590, !"_entry_ptr", i1 false, i1 false}
!593 = !{ptr @.str.185, !594, !"<string literal>", i1 false, i1 false}
!594 = !{!"../drivers/pci/pci.c", i32 5182, i32 36}
!595 = !{ptr @.str.186, !596, !"<string literal>", i1 false, i1 false}
!596 = !{!"../drivers/pci/pci.c", i32 5183, i32 32}
!597 = !{ptr @.str.187, !598, !"<string literal>", i1 false, i1 false}
!598 = !{!"../drivers/pci/pci.c", i32 5184, i32 28}
!599 = !{ptr @.str.188, !600, !"<string literal>", i1 false, i1 false}
!600 = !{!"../drivers/pci/pci.c", i32 5185, i32 24}
!601 = !{ptr @.str.189, !602, !"<string literal>", i1 false, i1 false}
!602 = !{!"../drivers/pci/pci.c", i32 5186, i32 26}
!603 = !{ptr @.str.190, !604, !"<string literal>", i1 false, i1 false}
!604 = !{!"../drivers/pci/pci.c", i32 5187, i32 36}
!605 = !{ptr @pci_reset_fn_methods, !606, !"pci_reset_fn_methods", i1 false, i1 false}
!606 = !{!"../drivers/pci/pci.c", i32 5180, i32 41}
!607 = !{ptr @.str.191, !608, !"<string literal>", i1 false, i1 false}
!608 = !{!"../drivers/pci/pci.c", i32 4759, i32 3}
!609 = !{ptr @.str.192, !608, !"<string literal>", i1 false, i1 false}
!610 = !{ptr @pci_af_flr._entry, !608, !"_entry", i1 false, i1 false}
!611 = !{ptr @pci_af_flr._entry_ptr, !608, !"_entry_ptr", i1 false, i1 false}
!612 = !{ptr @.str.193, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../drivers/pci/pci.c", i32 4774, i32 27}
!614 = !{ptr @.str.194, !615, !"<string literal>", i1 false, i1 false}
!615 = !{!"../drivers/pci/pci.c", i32 4819, i32 27}
!616 = distinct !{null, !617, !"__already_done", i1 false, i1 false}
!617 = !{!"../drivers/pci/pci.c", i32 6484, i32 3}
!618 = !{ptr @.str.195, !617, !"<string literal>", i1 false, i1 false}
!619 = !{ptr @.str.196, !617, !"<string literal>", i1 false, i1 false}
!620 = !{ptr @pci_specified_resource_alignment._entry, !617, !"_entry", i1 false, i1 false}
!621 = !{ptr @pci_specified_resource_alignment._entry_ptr, !617, !"_entry_ptr", i1 false, i1 false}
!622 = !{ptr @.str.197, !623, !"<string literal>", i1 false, i1 false}
!623 = !{!"../drivers/pci/pci.c", i32 6490, i32 17}
!624 = !{ptr @.str.199, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../drivers/pci/pci.c", i32 6494, i32 5}
!626 = !{ptr @pci_specified_resource_alignment._entry.198, !625, !"_entry", i1 false, i1 false}
!627 = !{ptr @pci_specified_resource_alignment._entry_ptr.200, !625, !"_entry_ptr", i1 false, i1 false}
!628 = !{ptr @.str.202, !629, !"<string literal>", i1 false, i1 false}
!629 = !{!"../drivers/pci/pci.c", i32 6508, i32 4}
!630 = !{ptr @pci_specified_resource_alignment._entry.201, !629, !"_entry", i1 false, i1 false}
!631 = !{ptr @pci_specified_resource_alignment._entry_ptr.203, !629, !"_entry_ptr", i1 false, i1 false}
!632 = !{ptr @.str.204, !633, !"<string literal>", i1 false, i1 false}
!633 = !{!"../drivers/pci/pci.c", i32 6460, i32 8}
!634 = !{ptr @resource_alignment_lock, !633, !"resource_alignment_lock", i1 false, i1 false}
!635 = !{ptr @resource_alignment_param, !636, !"resource_alignment_param", i1 false, i1 false}
!636 = !{!"../drivers/pci/pci.c", i32 6459, i32 14}
!637 = !{ptr @.str.205, !638, !"<string literal>", i1 false, i1 false}
!638 = !{!"../drivers/pci/pci.c", i32 6534, i32 3}
!639 = !{ptr @.str.206, !638, !"<string literal>", i1 false, i1 false}
!640 = !{ptr @pci_request_resource_alignment._entry, !638, !"_entry", i1 false, i1 false}
!641 = !{ptr @pci_request_resource_alignment._entry_ptr, !638, !"_entry_ptr", i1 false, i1 false}
!642 = !{ptr @.str.208, !643, !"<string literal>", i1 false, i1 false}
!643 = !{!"../drivers/pci/pci.c", i32 6571, i32 2}
!644 = !{ptr @pci_request_resource_alignment._entry.207, !643, !"_entry", i1 false, i1 false}
!645 = !{ptr @pci_request_resource_alignment._entry_ptr.209, !643, !"_entry_ptr", i1 false, i1 false}
!646 = !{ptr @.str.210, !647, !"<string literal>", i1 false, i1 false}
!647 = !{!"../drivers/pci/pci.c", i32 6689, i32 8}
!648 = !{ptr @bus_attr_resource_alignment, !647, !"bus_attr_resource_alignment", i1 false, i1 false}
!649 = !{ptr @.str.211, !650, !"<string literal>", i1 false, i1 false}
!650 = !{!"../drivers/pci/pci.c", i32 6652, i32 27}
!651 = !{ptr @of_pci_bus_find_domain_nr.use_dt_domains, !652, !"use_dt_domains", i1 false, i1 false}
!652 = !{!"../drivers/pci/pci.c", i32 6715, i32 13}
!653 = !{ptr @.str.212, !654, !"<string literal>", i1 false, i1 false}
!654 = !{!"../drivers/pci/pci.c", i32 6754, i32 4}
!655 = !{ptr @.str.213, !654, !"<string literal>", i1 false, i1 false}
!656 = !{ptr @of_pci_bus_find_domain_nr._entry, !654, !"_entry", i1 false, i1 false}
!657 = !{ptr @of_pci_bus_find_domain_nr._entry_ptr, !654, !"_entry_ptr", i1 false, i1 false}
!658 = !{ptr @.str.215, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../drivers/pci/pci.c", i32 6755, i32 3}
!660 = !{ptr @of_pci_bus_find_domain_nr._entry.214, !659, !"_entry", i1 false, i1 false}
!661 = !{ptr @of_pci_bus_find_domain_nr._entry_ptr.216, !659, !"_entry_ptr", i1 false, i1 false}
!662 = !{ptr @__domain_nr, !663, !"__domain_nr", i1 false, i1 false}
!663 = !{!"../drivers/pci/pci.c", i32 6706, i32 17}
!664 = !{ptr @__setup_str_pci_setup, !387, !"__setup_str_pci_setup", i1 false, i1 false}
!665 = !{ptr @.str.217, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../drivers/pci/pci.c", i32 6793, i32 21}
!667 = !{ptr @.str.218, !668, !"<string literal>", i1 false, i1 false}
!668 = !{!"../drivers/pci/pci.c", i32 6795, i32 29}
!669 = !{ptr @.str.219, !670, !"<string literal>", i1 false, i1 false}
!670 = !{!"../drivers/pci/pci.c", i32 6796, i32 5}
!671 = !{ptr @.str.220, !670, !"<string literal>", i1 false, i1 false}
!672 = !{ptr @pci_setup._entry, !670, !"_entry", i1 false, i1 false}
!673 = !{ptr @pci_setup._entry_ptr, !670, !"_entry_ptr", i1 false, i1 false}
!674 = !{ptr @.str.221, !675, !"<string literal>", i1 false, i1 false}
!675 = !{!"../drivers/pci/pci.c", i32 6798, i32 28}
!676 = !{ptr @.str.222, !677, !"<string literal>", i1 false, i1 false}
!677 = !{!"../drivers/pci/pci.c", i32 6800, i32 28}
!678 = !{ptr @.str.223, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../drivers/pci/pci.c", i32 6802, i32 29}
!680 = !{ptr @.str.224, !681, !"<string literal>", i1 false, i1 false}
!681 = !{!"../drivers/pci/pci.c", i32 6804, i32 29}
!682 = !{ptr @.str.225, !683, !"<string literal>", i1 false, i1 false}
!683 = !{!"../drivers/pci/pci.c", i32 6805, i32 25}
!684 = !{ptr @.str.226, !685, !"<string literal>", i1 false, i1 false}
!685 = !{!"../drivers/pci/pci.c", i32 6806, i32 28}
!686 = !{ptr @.str.227, !687, !"<string literal>", i1 false, i1 false}
!687 = !{!"../drivers/pci/pci.c", i32 6808, i32 29}
!688 = !{ptr @.str.228, !689, !"<string literal>", i1 false, i1 false}
!689 = !{!"../drivers/pci/pci.c", i32 6810, i32 29}
!690 = !{ptr @.str.229, !691, !"<string literal>", i1 false, i1 false}
!691 = !{!"../drivers/pci/pci.c", i32 6812, i32 29}
!692 = !{ptr @.str.230, !693, !"<string literal>", i1 false, i1 false}
!693 = !{!"../drivers/pci/pci.c", i32 6814, i32 29}
!694 = !{ptr @.str.231, !695, !"<string literal>", i1 false, i1 false}
!695 = !{!"../drivers/pci/pci.c", i32 6816, i32 29}
!696 = !{ptr @.str.232, !697, !"<string literal>", i1 false, i1 false}
!697 = !{!"../drivers/pci/pci.c", i32 6818, i32 29}
!698 = !{ptr @.str.233, !699, !"<string literal>", i1 false, i1 false}
!699 = !{!"../drivers/pci/pci.c", i32 6820, i32 29}
!700 = !{ptr @.str.234, !701, !"<string literal>", i1 false, i1 false}
!701 = !{!"../drivers/pci/pci.c", i32 6822, i32 29}
!702 = !{ptr @.str.235, !703, !"<string literal>", i1 false, i1 false}
!703 = !{!"../drivers/pci/pci.c", i32 6824, i32 29}
!704 = !{ptr @.str.236, !705, !"<string literal>", i1 false, i1 false}
!705 = !{!"../drivers/pci/pci.c", i32 6827, i32 29}
!706 = !{ptr @.str.237, !707, !"<string literal>", i1 false, i1 false}
!707 = !{!"../drivers/pci/pci.c", i32 6832, i32 29}
!708 = !{ptr @.str.238, !709, !"<string literal>", i1 false, i1 false}
!709 = !{!"../drivers/pci/pci.c", i32 6834, i32 29}
!710 = !{ptr @.str.239, !711, !"<string literal>", i1 false, i1 false}
!711 = !{!"../drivers/pci/pci.c", i32 6836, i32 29}
!712 = !{ptr @.str.240, !713, !"<string literal>", i1 false, i1 false}
!713 = !{!"../drivers/pci/pci.c", i32 6838, i32 29}
!714 = !{ptr @.str.241, !715, !"<string literal>", i1 false, i1 false}
!715 = !{!"../drivers/pci/pci.c", i32 6840, i32 29}
!716 = !{ptr @.str.242, !717, !"<string literal>", i1 false, i1 false}
!717 = !{!"../drivers/pci/pci.c", i32 6842, i32 29}
!718 = !{ptr @.str.244, !719, !"<string literal>", i1 false, i1 false}
!719 = !{!"../drivers/pci/pci.c", i32 6845, i32 5}
!720 = !{ptr @pci_setup._entry.243, !719, !"_entry", i1 false, i1 false}
!721 = !{ptr @pci_setup._entry_ptr.245, !719, !"_entry_ptr", i1 false, i1 false}
!722 = !{i32 1, !"wchar_size", i32 2}
!723 = !{i32 1, !"min_enum_size", i32 4}
!724 = !{i32 8, !"branch-target-enforcement", i32 0}
!725 = !{i32 8, !"sign-return-address", i32 0}
!726 = !{i32 8, !"sign-return-address-all", i32 0}
!727 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!728 = !{i32 7, !"uwtable", i32 1}
!729 = !{i32 7, !"frame-pointer", i32 2}
!730 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!731 = !{!"auto-init"}
!732 = !{i8 0, i8 2}
!733 = !{i64 2149129963, i64 2149129968, i64 2149129981, i64 2149130025, i64 2149130059, i64 2149130080}
!734 = !{i32 0, i32 33}
!735 = !{!"branch_weights", i32 2000, i32 1}
!736 = !{i64 2148571094}
!737 = !{i64 2148486391, i64 2148486423, i64 2148486452, i64 2148486486, i64 2148486517, i64 2148486540}
!738 = !{i64 2148571323}
!739 = !{i64 2148488136, i64 2148488162, i64 2148488191, i64 2148488225, i64 2148488256, i64 2148488279}
!740 = !{!"branch_weights", i32 1, i32 2000}
!741 = !{i64 2148574135}
!742 = !{i64 2148488856, i64 2148488888, i64 2148488917, i64 2148488951, i64 2148488982, i64 2148489005}
!743 = !{i64 2148574364}
!744 = !{i64 2148485671, i64 2148485697, i64 2148485726, i64 2148485760, i64 2148485791, i64 2148485814}
!745 = !{i64 2155533053, i64 2155533536, i64 2155533090, i64 2155533146, i64 2155533180, i64 2155533204, i64 2155533245, i64 2155533266, i64 2155533294, i64 2155533328}
