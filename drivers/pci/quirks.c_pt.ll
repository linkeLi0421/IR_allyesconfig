; ModuleID = '/llk/IR_all_yes/drivers/pci/quirks.c_pt.bc'
source_filename = "../drivers/pci/quirks.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+pci_fixup_device\22, \22a\22\09"
module asm "\09.weak\09__crc_pci_fixup_device\09\09\09\09"
module asm "\09.long\09__crc_pci_fixup_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pci_fixup_device:\09\09\09\09\09"
module asm "\09.asciz \09\22pci_fixup_device\22\09\09\09\09\09"
module asm "__kstrtabns_pci_fixup_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.pci_fixup = type { i16, i16, i32, i32, ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.pci_dev_acs_enabled = type { i16, i16, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%union.anon.85 = type { %union.anon.86 }
%union.anon.86 = type { [1 x i64] }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.atomic_t = type { i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.78, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.list_head = type { ptr, ptr }
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.hlist_head = type { ptr }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.78 = type { ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.57, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%struct.llist_node = type { ptr }
%union.anon.20 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.22 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.57 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.pci_bus_region = type { i32, i32 }
%struct.pci_bus = type { %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, [4 x ptr], %struct.list_head, %struct.resource, ptr, ptr, ptr, i8, i8, i8, i8, i32, [48 x i8], i16, i16, ptr, %struct.device, ptr, ptr, i8 }
%struct.property_entry = type { ptr, i32, i8, i32, %union.anon.85 }
%struct.pci_cap_saved_state = type { %struct.hlist_node, %struct.pci_cap_saved_data }
%struct.pci_cap_saved_data = type { i16, i8, i32, [0 x i32] }
%struct.pci_host_bridge = type { %struct.device, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i16, ptr, [32 x i8], [0 x i32] }
%struct.ntb_ctrl_regs = type { i32, i32, i32, i32, i32, i16, i16, i32, i16, i16, i32, [7 x i32], [6 x %struct.anon.87], [6 x %struct.anon.88], [192 x i32], [512 x i32], [256 x i32], [512 x i64] }
%struct.anon.87 = type { i32, i32, i64 }
%struct.anon.88 = type { i32, [3 x i32] }

@__start_pci_fixups_early = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_early = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_header = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_header = external dso_local global [0 x %struct.pci_fixup], align 4
@pci_apply_fixup_final_quirks = internal global { i1, [31 x i8] } zeroinitializer, align 32
@__start_pci_fixups_final = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_final = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_enable = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_enable = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_resume = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_resume = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_resume_early = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_resume_early = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_suspend = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_suspend = external dso_local global [0 x %struct.pci_fixup], align 4
@__start_pci_fixups_suspend_late = external dso_local global [0 x %struct.pci_fixup], align 4
@__end_pci_fixups_suspend_late = external dso_local global [0 x %struct.pci_fixup], align 4
@__kstrtab_pci_fixup_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_pci_fixup_device = external dso_local constant [0 x i8], align 1
@__ksymtab_pci_fixup_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pci_fixup_device to i32), ptr @__kstrtab_pci_fixup_device, ptr @__kstrtabns_pci_fixup_device }, section "___ksymtab+pci_fixup_device", align 4
@__initcall__kmod_quirks__293_194_pci_apply_final_quirks5s = internal global ptr @pci_apply_final_quirks, section ".initcall5s.init", align 4
@__pci_fixup_quirk_mmio_always_on207 = internal constant %struct.pci_fixup { i16 -1, i16 -1, i32 1536, i32 8, ptr @quirk_mmio_always_on }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_disable_parity213 = internal constant %struct.pci_fixup { i16 5555, i16 23108, i32 -1, i32 0, ptr @pci_disable_parity }, section ".pci_fixup_final", align 4
@__pci_fixup_pci_disable_parity214 = internal constant %struct.pci_fixup { i16 5555, i16 23110, i32 -1, i32 0, ptr @pci_disable_parity }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_passive_release238 = internal constant %struct.pci_fixup { i16 -32634, i16 4663, i32 -1, i32 0, ptr @quirk_passive_release }, section ".pci_fixup_final", align 4
@__pci_fixup_resumequirk_passive_release239 = internal constant %struct.pci_fixup { i16 -32634, i16 4663, i32 -1, i32 0, ptr @quirk_passive_release }, section ".pci_fixup_resume", align 4
@__pci_fixup_quirk_isa_dma_hangs260 = internal constant %struct.pci_fixup { i16 4358, i16 1414, i32 -1, i32 0, ptr @quirk_isa_dma_hangs }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_isa_dma_hangs261 = internal constant %struct.pci_fixup { i16 4358, i16 1430, i32 -1, i32 0, ptr @quirk_isa_dma_hangs }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_isa_dma_hangs262 = internal constant %struct.pci_fixup { i16 -32634, i16 28672, i32 -1, i32 0, ptr @quirk_isa_dma_hangs }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_isa_dma_hangs263 = internal constant %struct.pci_fixup { i16 4281, i16 5427, i32 -1, i32 0, ptr @quirk_isa_dma_hangs }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_isa_dma_hangs264 = internal constant %struct.pci_fixup { i16 4147, i16 1, i32 -1, i32 0, ptr @quirk_isa_dma_hangs }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_isa_dma_hangs265 = internal constant %struct.pci_fixup { i16 4147, i16 45, i32 -1, i32 0, ptr @quirk_isa_dma_hangs }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_isa_dma_hangs266 = internal constant %struct.pci_fixup { i16 4147, i16 59, i32 -1, i32 0, ptr @quirk_isa_dma_hangs }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_tigerpoint_bm_sts286 = internal constant %struct.pci_fixup { i16 -32634, i16 10172, i32 -1, i32 0, ptr @quirk_tigerpoint_bm_sts }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_nopcipci296 = internal constant %struct.pci_fixup { i16 4153, i16 21911, i32 -1, i32 0, ptr @quirk_nopcipci }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_nopcipci297 = internal constant %struct.pci_fixup { i16 4153, i16 1174, i32 -1, i32 0, ptr @quirk_nopcipci }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_nopciamd309 = internal constant %struct.pci_fixup { i16 4130, i16 29780, i32 -1, i32 0, ptr @quirk_nopciamd }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_triton319 = internal constant %struct.pci_fixup { i16 -32634, i16 4653, i32 -1, i32 0, ptr @quirk_triton }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_triton320 = internal constant %struct.pci_fixup { i16 -32634, i16 28720, i32 -1, i32 0, ptr @quirk_triton }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_triton321 = internal constant %struct.pci_fixup { i16 -32634, i16 4688, i32 -1, i32 0, ptr @quirk_triton }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_triton322 = internal constant %struct.pci_fixup { i16 -32634, i16 28928, i32 -1, i32 0, ptr @quirk_triton }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_vialatency388 = internal constant %struct.pci_fixup { i16 4358, i16 773, i32 -1, i32 0, ptr @quirk_vialatency }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_vialatency389 = internal constant %struct.pci_fixup { i16 4358, i16 -31855, i32 -1, i32 0, ptr @quirk_vialatency }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_vialatency390 = internal constant %struct.pci_fixup { i16 4358, i16 12562, i32 -1, i32 0, ptr @quirk_vialatency }, section ".pci_fixup_final", align 4
@__pci_fixup_resumequirk_vialatency392 = internal constant %struct.pci_fixup { i16 4358, i16 773, i32 -1, i32 0, ptr @quirk_vialatency }, section ".pci_fixup_resume", align 4
@__pci_fixup_resumequirk_vialatency393 = internal constant %struct.pci_fixup { i16 4358, i16 -31855, i32 -1, i32 0, ptr @quirk_vialatency }, section ".pci_fixup_resume", align 4
@__pci_fixup_resumequirk_vialatency394 = internal constant %struct.pci_fixup { i16 4358, i16 12562, i32 -1, i32 0, ptr @quirk_vialatency }, section ".pci_fixup_resume", align 4
@__pci_fixup_quirk_viaetbf404 = internal constant %struct.pci_fixup { i16 4358, i16 1431, i32 -1, i32 0, ptr @quirk_viaetbf }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_vsfx413 = internal constant %struct.pci_fixup { i16 4358, i16 1398, i32 -1, i32 0, ptr @quirk_vsfx }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_alimagik427 = internal constant %struct.pci_fixup { i16 4281, i16 5703, i32 -1, i32 0, ptr @quirk_alimagik }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_alimagik428 = internal constant %struct.pci_fixup { i16 4281, i16 5713, i32 -1, i32 0, ptr @quirk_alimagik }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_natoma438 = internal constant %struct.pci_fixup { i16 -32634, i16 4663, i32 -1, i32 0, ptr @quirk_natoma }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_natoma439 = internal constant %struct.pci_fixup { i16 -32634, i16 29056, i32 -1, i32 0, ptr @quirk_natoma }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_natoma440 = internal constant %struct.pci_fixup { i16 -32634, i16 29057, i32 -1, i32 0, ptr @quirk_natoma }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_natoma441 = internal constant %struct.pci_fixup { i16 -32634, i16 29072, i32 -1, i32 0, ptr @quirk_natoma }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_natoma442 = internal constant %struct.pci_fixup { i16 -32634, i16 29073, i32 -1, i32 0, ptr @quirk_natoma }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_natoma443 = internal constant %struct.pci_fixup { i16 -32634, i16 29074, i32 -1, i32 0, ptr @quirk_natoma }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_citrine453 = internal constant %struct.pci_fixup { i16 4116, i16 652, i32 -1, i32 0, ptr @quirk_citrine }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_nfp6000463 = internal constant %struct.pci_fixup { i16 6638, i16 16384, i32 -1, i32 0, ptr @quirk_nfp6000 }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_nfp6000464 = internal constant %struct.pci_fixup { i16 6638, i16 24576, i32 -1, i32 0, ptr @quirk_nfp6000 }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_nfp6000465 = internal constant %struct.pci_fixup { i16 6638, i16 20480, i32 -1, i32 0, ptr @quirk_nfp6000 }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_nfp6000466 = internal constant %struct.pci_fixup { i16 6638, i16 24579, i32 -1, i32 0, ptr @quirk_nfp6000 }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_extend_bar_to_page485 = internal constant %struct.pci_fixup { i16 4116, i16 842, i32 -1, i32 0, ptr @quirk_extend_bar_to_page }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_s3_64M501 = internal constant %struct.pci_fixup { i16 21299, i16 -30592, i32 -1, i32 0, ptr @quirk_s3_64M }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_s3_64M502 = internal constant %struct.pci_fixup { i16 21299, i16 -30480, i32 -1, i32 0, ptr @quirk_s3_64M }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_cs5536_vsa552 = internal constant %struct.pci_fixup { i16 4130, i16 8336, i32 -1, i32 0, ptr @quirk_cs5536_vsa }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ati_exploding_mce590 = internal constant %struct.pci_fixup { i16 4098, i16 -13648, i32 -1, i32 0, ptr @quirk_ati_exploding_mce }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_nl_class613 = internal constant %struct.pci_fixup { i16 4130, i16 30994, i32 -1, i32 0, ptr @quirk_amd_nl_class }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_synopsys_haps638 = internal constant %struct.pci_fixup { i16 5827, i16 -1, i32 787248, i32 0, ptr @quirk_synopsys_haps }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ali7101_acpi655 = internal constant %struct.pci_fixup { i16 4281, i16 28929, i32 -1, i32 0, ptr @quirk_ali7101_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_piix4_acpi743 = internal constant %struct.pci_fixup { i16 -32634, i16 28947, i32 -1, i32 0, ptr @quirk_piix4_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_piix4_acpi744 = internal constant %struct.pci_fixup { i16 -32634, i16 29083, i32 -1, i32 0, ptr @quirk_piix4_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi783 = internal constant %struct.pci_fixup { i16 -32634, i16 9232, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi784 = internal constant %struct.pci_fixup { i16 -32634, i16 9248, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi785 = internal constant %struct.pci_fixup { i16 -32634, i16 9280, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi786 = internal constant %struct.pci_fixup { i16 -32634, i16 9292, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi787 = internal constant %struct.pci_fixup { i16 -32634, i16 9344, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi788 = internal constant %struct.pci_fixup { i16 -32634, i16 9356, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi789 = internal constant %struct.pci_fixup { i16 -32634, i16 9408, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi790 = internal constant %struct.pci_fixup { i16 -32634, i16 9420, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi791 = internal constant %struct.pci_fixup { i16 -32634, i16 9424, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich4_lpc_acpi792 = internal constant %struct.pci_fixup { i16 -32634, i16 9633, i32 -1, i32 0, ptr @quirk_ich4_lpc_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich6_lpc850 = internal constant %struct.pci_fixup { i16 -32634, i16 9792, i32 -1, i32 0, ptr @quirk_ich6_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich6_lpc851 = internal constant %struct.pci_fixup { i16 -32634, i16 9793, i32 -1, i32 0, ptr @quirk_ich6_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc889 = internal constant %struct.pci_fixup { i16 -32634, i16 10168, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc890 = internal constant %struct.pci_fixup { i16 -32634, i16 10169, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc891 = internal constant %struct.pci_fixup { i16 -32634, i16 10173, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc892 = internal constant %struct.pci_fixup { i16 -32634, i16 10256, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc893 = internal constant %struct.pci_fixup { i16 -32634, i16 10258, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc894 = internal constant %struct.pci_fixup { i16 -32634, i16 10260, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc895 = internal constant %struct.pci_fixup { i16 -32634, i16 10257, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc896 = internal constant %struct.pci_fixup { i16 -32634, i16 10261, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc897 = internal constant %struct.pci_fixup { i16 -32634, i16 10514, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc898 = internal constant %struct.pci_fixup { i16 -32634, i16 10516, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc899 = internal constant %struct.pci_fixup { i16 -32634, i16 10518, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc900 = internal constant %struct.pci_fixup { i16 -32634, i16 10520, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_ich7_lpc901 = internal constant %struct.pci_fixup { i16 -32634, i16 14870, i32 -1, i32 0, ptr @quirk_ich7_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_vt82c586_acpi913 = internal constant %struct.pci_fixup { i16 4358, i16 12352, i32 -1, i32 0, ptr @quirk_vt82c586_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_vt82c686_acpi930 = internal constant %struct.pci_fixup { i16 4358, i16 12375, i32 -1, i32 0, ptr @quirk_vt82c686_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_vt8235_acpi942 = internal constant %struct.pci_fixup { i16 4358, i16 12663, i32 -1, i32 0, ptr @quirk_vt8235_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_xio2000a961 = internal constant %struct.pci_fixup { i16 4172, i16 -32207, i32 -1, i32 0, ptr @quirk_xio2000a }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_8131_mmrbc1054 = internal constant %struct.pci_fixup { i16 4130, i16 29776, i32 -1, i32 0, ptr @quirk_amd_8131_mmrbc }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_via_acpi1073 = internal constant %struct.pci_fixup { i16 4358, i16 12352, i32 -1, i32 0, ptr @quirk_via_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_acpi1074 = internal constant %struct.pci_fixup { i16 4358, i16 12375, i32 -1, i32 0, ptr @quirk_via_acpi }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_bridge1107 = internal constant %struct.pci_fixup { i16 4358, i16 1670, i32 -1, i32 0, ptr @quirk_via_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_bridge1108 = internal constant %struct.pci_fixup { i16 4358, i16 -32207, i32 -1, i32 0, ptr @quirk_via_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_bridge1109 = internal constant %struct.pci_fixup { i16 4358, i16 12404, i32 -1, i32 0, ptr @quirk_via_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_bridge1110 = internal constant %struct.pci_fixup { i16 4358, i16 12615, i32 -1, i32 0, ptr @quirk_via_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_bridge1111 = internal constant %struct.pci_fixup { i16 4358, i16 12553, i32 -1, i32 0, ptr @quirk_via_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_bridge1112 = internal constant %struct.pci_fixup { i16 4358, i16 12663, i32 -1, i32 0, ptr @quirk_via_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_bridge1113 = internal constant %struct.pci_fixup { i16 4358, i16 12839, i32 -1, i32 0, ptr @quirk_via_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_bridge1114 = internal constant %struct.pci_fixup { i16 4358, i16 13111, i32 -1, i32 0, ptr @quirk_via_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_via_vlink1158 = internal constant %struct.pci_fixup { i16 4358, i16 -1, i32 -1, i32 0, ptr @quirk_via_vlink }, section ".pci_fixup_enable", align 4
@__pci_fixup_quirk_vt82c598_id1170 = internal constant %struct.pci_fixup { i16 4358, i16 1431, i32 -1, i32 0, ptr @quirk_vt82c598_id }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_cardbus_legacy1183 = internal constant %struct.pci_fixup { i16 -1, i16 -1, i32 1543, i32 8, ptr @quirk_cardbus_legacy }, section ".pci_fixup_final", align 4
@__pci_fixup_resume_earlyquirk_cardbus_legacy1185 = internal constant %struct.pci_fixup { i16 -1, i16 -1, i32 1543, i32 8, ptr @quirk_cardbus_legacy }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_amd_ordering1207 = internal constant %struct.pci_fixup { i16 4130, i16 28684, i32 -1, i32 0, ptr @quirk_amd_ordering }, section ".pci_fixup_final", align 4
@__pci_fixup_resume_earlyquirk_amd_ordering1208 = internal constant %struct.pci_fixup { i16 4130, i16 28684, i32 -1, i32 0, ptr @quirk_amd_ordering }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_dunord1225 = internal constant %struct.pci_fixup { i16 21828, i16 1, i32 -1, i32 0, ptr @quirk_dunord }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_transparent_bridge1236 = internal constant %struct.pci_fixup { i16 -32634, i16 4683, i32 -1, i32 0, ptr @quirk_transparent_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_transparent_bridge1237 = internal constant %struct.pci_fixup { i16 4473, i16 1541, i32 -1, i32 0, ptr @quirk_transparent_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_mediagx_master1257 = internal constant %struct.pci_fixup { i16 4216, i16 1, i32 -1, i32 0, ptr @quirk_mediagx_master }, section ".pci_fixup_final", align 4
@__pci_fixup_resumequirk_mediagx_master1258 = internal constant %struct.pci_fixup { i16 4216, i16 1, i32 -1, i32 0, ptr @quirk_mediagx_master }, section ".pci_fixup_resume", align 4
@__pci_fixup_quirk_disable_pxb1278 = internal constant %struct.pci_fixup { i16 -32634, i16 -31541, i32 -1, i32 0, ptr @quirk_disable_pxb }, section ".pci_fixup_final", align 4
@__pci_fixup_resume_earlyquirk_disable_pxb1279 = internal constant %struct.pci_fixup { i16 -32634, i16 -31541, i32 -1, i32 0, ptr @quirk_disable_pxb }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_amd_ide_mode1298 = internal constant %struct.pci_fixup { i16 4098, i16 17280, i32 -1, i32 0, ptr @quirk_amd_ide_mode }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyquirk_amd_ide_mode1299 = internal constant %struct.pci_fixup { i16 4098, i16 17280, i32 -1, i32 0, ptr @quirk_amd_ide_mode }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_amd_ide_mode1300 = internal constant %struct.pci_fixup { i16 4098, i16 17296, i32 -1, i32 0, ptr @quirk_amd_ide_mode }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyquirk_amd_ide_mode1301 = internal constant %struct.pci_fixup { i16 4098, i16 17296, i32 -1, i32 0, ptr @quirk_amd_ide_mode }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_amd_ide_mode1302 = internal constant %struct.pci_fixup { i16 4130, i16 30720, i32 -1, i32 0, ptr @quirk_amd_ide_mode }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyquirk_amd_ide_mode1303 = internal constant %struct.pci_fixup { i16 4130, i16 30720, i32 -1, i32 0, ptr @quirk_amd_ide_mode }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_amd_ide_mode1304 = internal constant %struct.pci_fixup { i16 4130, i16 30976, i32 -1, i32 0, ptr @quirk_amd_ide_mode }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyquirk_amd_ide_mode1305 = internal constant %struct.pci_fixup { i16 4130, i16 30976, i32 -1, i32 0, ptr @quirk_amd_ide_mode }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_svwks_csb5ide1319 = internal constant %struct.pci_fixup { i16 4454, i16 530, i32 -1, i32 0, ptr @quirk_svwks_csb5ide }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_ide_samemode1335 = internal constant %struct.pci_fixup { i16 -32634, i16 9354, i32 -1, i32 0, ptr @quirk_ide_samemode }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ata_d31344 = internal constant %struct.pci_fixup { i16 4454, i16 -1, i32 257, i32 8, ptr @quirk_no_ata_d3 }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ata_d31346 = internal constant %struct.pci_fixup { i16 4098, i16 -1, i32 257, i32 8, ptr @quirk_no_ata_d3 }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ata_d31349 = internal constant %struct.pci_fixup { i16 4281, i16 -1, i32 257, i32 8, ptr @quirk_no_ata_d3 }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ata_d31353 = internal constant %struct.pci_fixup { i16 4358, i16 -1, i32 257, i32 8, ptr @quirk_no_ata_d3 }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_eisa_bridge1363 = internal constant %struct.pci_fixup { i16 -32634, i16 1154, i32 -1, i32 0, ptr @quirk_eisa_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1510 = internal constant %struct.pci_fixup { i16 -32634, i16 6704, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1511 = internal constant %struct.pci_fixup { i16 -32634, i16 9568, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1512 = internal constant %struct.pci_fixup { i16 -32634, i16 9520, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1513 = internal constant %struct.pci_fixup { i16 -32634, i16 9584, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1514 = internal constant %struct.pci_fixup { i16 -32634, i16 9592, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1515 = internal constant %struct.pci_fixup { i16 -32634, i16 9565, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1516 = internal constant %struct.pci_fixup { i16 -32634, i16 9548, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1517 = internal constant %struct.pci_fixup { i16 -32634, i16 13120, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1518 = internal constant %struct.pci_fixup { i16 -32634, i16 13696, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1519 = internal constant %struct.pci_fixup { i16 -32634, i16 9616, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1521 = internal constant %struct.pci_fixup { i16 -32634, i16 28963, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1522 = internal constant %struct.pci_fixup { i16 -32634, i16 9410, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_hostbridge1523 = internal constant %struct.pci_fixup { i16 -32634, i16 4402, i32 -1, i32 0, ptr @asus_hides_smbus_hostbridge }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_lpc1543 = internal constant %struct.pci_fixup { i16 -32634, i16 9232, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_lpc1544 = internal constant %struct.pci_fixup { i16 -32634, i16 9408, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_lpc1545 = internal constant %struct.pci_fixup { i16 -32634, i16 9280, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_lpc1546 = internal constant %struct.pci_fixup { i16 -32634, i16 9344, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_lpc1547 = internal constant %struct.pci_fixup { i16 -32634, i16 9356, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_lpc1548 = internal constant %struct.pci_fixup { i16 -32634, i16 9420, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_asus_hides_smbus_lpc1549 = internal constant %struct.pci_fixup { i16 -32634, i16 9424, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyasus_hides_smbus_lpc1550 = internal constant %struct.pci_fixup { i16 -32634, i16 9232, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyasus_hides_smbus_lpc1551 = internal constant %struct.pci_fixup { i16 -32634, i16 9408, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyasus_hides_smbus_lpc1552 = internal constant %struct.pci_fixup { i16 -32634, i16 9280, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyasus_hides_smbus_lpc1553 = internal constant %struct.pci_fixup { i16 -32634, i16 9344, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyasus_hides_smbus_lpc1554 = internal constant %struct.pci_fixup { i16 -32634, i16 9356, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyasus_hides_smbus_lpc1555 = internal constant %struct.pci_fixup { i16 -32634, i16 9420, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyasus_hides_smbus_lpc1556 = internal constant %struct.pci_fixup { i16 -32634, i16 9424, i32 -1, i32 0, ptr @asus_hides_smbus_lpc }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_asus_hides_smbus_lpc_ich61605 = internal constant %struct.pci_fixup { i16 -32634, i16 9793, i32 -1, i32 0, ptr @asus_hides_smbus_lpc_ich6 }, section ".pci_fixup_header", align 4
@__pci_fixup_suspendasus_hides_smbus_lpc_ich6_suspend1606 = internal constant %struct.pci_fixup { i16 -32634, i16 9793, i32 -1, i32 0, ptr @asus_hides_smbus_lpc_ich6_suspend }, section ".pci_fixup_suspend", align 4
@__pci_fixup_resumeasus_hides_smbus_lpc_ich6_resume1607 = internal constant %struct.pci_fixup { i16 -32634, i16 9793, i32 -1, i32 0, ptr @asus_hides_smbus_lpc_ich6_resume }, section ".pci_fixup_resume", align 4
@__pci_fixup_resume_earlyasus_hides_smbus_lpc_ich6_resume_early1608 = internal constant %struct.pci_fixup { i16 -32634, i16 9793, i32 -1, i32 0, ptr @asus_hides_smbus_lpc_ich6_resume_early }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_sis_96x_smbus1620 = internal constant %struct.pci_fixup { i16 4153, i16 2401, i32 -1, i32 0, ptr @quirk_sis_96x_smbus }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_sis_96x_smbus1621 = internal constant %struct.pci_fixup { i16 4153, i16 2402, i32 -1, i32 0, ptr @quirk_sis_96x_smbus }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_sis_96x_smbus1622 = internal constant %struct.pci_fixup { i16 4153, i16 2403, i32 -1, i32 0, ptr @quirk_sis_96x_smbus }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_sis_96x_smbus1623 = internal constant %struct.pci_fixup { i16 4153, i16 24, i32 -1, i32 0, ptr @quirk_sis_96x_smbus }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyquirk_sis_96x_smbus1624 = internal constant %struct.pci_fixup { i16 4153, i16 2401, i32 -1, i32 0, ptr @quirk_sis_96x_smbus }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_sis_96x_smbus1625 = internal constant %struct.pci_fixup { i16 4153, i16 2402, i32 -1, i32 0, ptr @quirk_sis_96x_smbus }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_sis_96x_smbus1626 = internal constant %struct.pci_fixup { i16 4153, i16 2403, i32 -1, i32 0, ptr @quirk_sis_96x_smbus }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_sis_96x_smbus1627 = internal constant %struct.pci_fixup { i16 4153, i16 24, i32 -1, i32 0, ptr @quirk_sis_96x_smbus }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_sis_5031660 = internal constant %struct.pci_fixup { i16 4153, i16 8, i32 -1, i32 0, ptr @quirk_sis_503 }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyquirk_sis_5031661 = internal constant %struct.pci_fixup { i16 4153, i16 8, i32 -1, i32 0, ptr @quirk_sis_503 }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_asus_hides_ac97_lpc1693 = internal constant %struct.pci_fixup { i16 4358, i16 12839, i32 -1, i32 0, ptr @asus_hides_ac97_lpc }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyasus_hides_ac97_lpc1694 = internal constant %struct.pci_fixup { i16 4358, i16 12839, i32 -1, i32 0, ptr @asus_hides_ac97_lpc }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_jmicron_ata1755 = internal constant %struct.pci_fixup { i16 6523, i16 9056, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_jmicron_ata1756 = internal constant %struct.pci_fixup { i16 6523, i16 9057, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_jmicron_ata1757 = internal constant %struct.pci_fixup { i16 6523, i16 9058, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_jmicron_ata1758 = internal constant %struct.pci_fixup { i16 6523, i16 9059, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_jmicron_ata1759 = internal constant %struct.pci_fixup { i16 6523, i16 9060, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_jmicron_ata1760 = internal constant %struct.pci_fixup { i16 6523, i16 9061, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_jmicron_ata1761 = internal constant %struct.pci_fixup { i16 6523, i16 9062, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_jmicron_ata1762 = internal constant %struct.pci_fixup { i16 6523, i16 9064, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_jmicron_ata1763 = internal constant %struct.pci_fixup { i16 6523, i16 9065, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1764 = internal constant %struct.pci_fixup { i16 6523, i16 9056, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1765 = internal constant %struct.pci_fixup { i16 6523, i16 9057, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1766 = internal constant %struct.pci_fixup { i16 6523, i16 9058, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1767 = internal constant %struct.pci_fixup { i16 6523, i16 9059, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1768 = internal constant %struct.pci_fixup { i16 6523, i16 9060, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1769 = internal constant %struct.pci_fixup { i16 6523, i16 9061, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1770 = internal constant %struct.pci_fixup { i16 6523, i16 9062, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1771 = internal constant %struct.pci_fixup { i16 6523, i16 9064, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_resume_earlyquirk_jmicron_ata1772 = internal constant %struct.pci_fixup { i16 6523, i16 9065, i32 -1, i32 0, ptr @quirk_jmicron_ata }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_jmicron_async_suspend1783 = internal constant %struct.pci_fixup { i16 6523, i16 -1, i32 257, i32 8, ptr @quirk_jmicron_async_suspend }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_jmicron_async_suspend1784 = internal constant %struct.pci_fixup { i16 6523, i16 -1, i32 67073, i32 0, ptr @quirk_jmicron_async_suspend }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_jmicron_async_suspend1785 = internal constant %struct.pci_fixup { i16 6523, i16 9058, i32 -1, i32 0, ptr @quirk_jmicron_async_suspend }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_jmicron_async_suspend1786 = internal constant %struct.pci_fixup { i16 6523, i16 9071, i32 -1, i32 0, ptr @quirk_jmicron_async_suspend }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_pcie_mch1818 = internal constant %struct.pci_fixup { i16 -32634, i16 13712, i32 -1, i32 0, ptr @quirk_pcie_mch }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_pcie_mch1819 = internal constant %struct.pci_fixup { i16 -32634, i16 13714, i32 -1, i32 0, ptr @quirk_pcie_mch }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_pcie_mch1820 = internal constant %struct.pci_fixup { i16 -32634, i16 13726, i32 -1, i32 0, ptr @quirk_pcie_mch }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_pcie_mch1822 = internal constant %struct.pci_fixup { i16 6629, i16 5648, i32 1540, i32 8, ptr @quirk_pcie_mch }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_huawei_pcie_sva1856 = internal constant %struct.pci_fixup { i16 6629, i16 -23984, i32 -1, i32 0, ptr @quirk_huawei_pcie_sva }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_huawei_pcie_sva1857 = internal constant %struct.pci_fixup { i16 6629, i16 -23983, i32 -1, i32 0, ptr @quirk_huawei_pcie_sva }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_huawei_pcie_sva1858 = internal constant %struct.pci_fixup { i16 6629, i16 -23979, i32 -1, i32 0, ptr @quirk_huawei_pcie_sva }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_huawei_pcie_sva1859 = internal constant %struct.pci_fixup { i16 6629, i16 -23978, i32 -1, i32 0, ptr @quirk_huawei_pcie_sva }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_huawei_pcie_sva1860 = internal constant %struct.pci_fixup { i16 6629, i16 -23976, i32 -1, i32 0, ptr @quirk_huawei_pcie_sva }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_huawei_pcie_sva1861 = internal constant %struct.pci_fixup { i16 6629, i16 -23975, i32 -1, i32 0, ptr @quirk_huawei_pcie_sva }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_pcie_pxh1872 = internal constant %struct.pci_fixup { i16 -32634, i16 800, i32 -1, i32 0, ptr @quirk_pcie_pxh }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_pcie_pxh1873 = internal constant %struct.pci_fixup { i16 -32634, i16 801, i32 -1, i32 0, ptr @quirk_pcie_pxh }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_pcie_pxh1874 = internal constant %struct.pci_fixup { i16 -32634, i16 809, i32 -1, i32 0, ptr @quirk_pcie_pxh }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_pcie_pxh1875 = internal constant %struct.pci_fixup { i16 -32634, i16 810, i32 -1, i32 0, ptr @quirk_pcie_pxh }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_pcie_pxh1876 = internal constant %struct.pci_fixup { i16 -32634, i16 812, i32 -1, i32 0, ptr @quirk_pcie_pxh }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_intel_pcie_pm1887 = internal constant %struct.pci_fixup { i16 -32634, i16 9698, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1888 = internal constant %struct.pci_fixup { i16 -32634, i16 9699, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1889 = internal constant %struct.pci_fixup { i16 -32634, i16 9700, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1890 = internal constant %struct.pci_fixup { i16 -32634, i16 9701, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1891 = internal constant %struct.pci_fixup { i16 -32634, i16 9702, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1892 = internal constant %struct.pci_fixup { i16 -32634, i16 9703, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1893 = internal constant %struct.pci_fixup { i16 -32634, i16 9719, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1894 = internal constant %struct.pci_fixup { i16 -32634, i16 9720, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1895 = internal constant %struct.pci_fixup { i16 -32634, i16 9721, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1896 = internal constant %struct.pci_fixup { i16 -32634, i16 9722, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1897 = internal constant %struct.pci_fixup { i16 -32634, i16 9729, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1898 = internal constant %struct.pci_fixup { i16 -32634, i16 9730, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1899 = internal constant %struct.pci_fixup { i16 -32634, i16 9731, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1900 = internal constant %struct.pci_fixup { i16 -32634, i16 9732, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1901 = internal constant %struct.pci_fixup { i16 -32634, i16 9733, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1902 = internal constant %struct.pci_fixup { i16 -32634, i16 9734, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1903 = internal constant %struct.pci_fixup { i16 -32634, i16 9735, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1904 = internal constant %struct.pci_fixup { i16 -32634, i16 9736, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1905 = internal constant %struct.pci_fixup { i16 -32634, i16 9737, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1906 = internal constant %struct.pci_fixup { i16 -32634, i16 9738, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_intel_pcie_pm1907 = internal constant %struct.pci_fixup { i16 -32634, i16 9739, i32 -1, i32 0, ptr @quirk_intel_pcie_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_radeon_pm1925 = internal constant %struct.pci_fixup { i16 4098, i16 26433, i32 -1, i32 0, ptr @quirk_radeon_pm }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_ryzen_xhci_d3hot1940 = internal constant %struct.pci_fixup { i16 4130, i16 5600, i32 -1, i32 0, ptr @quirk_ryzen_xhci_d3hot }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_ryzen_xhci_d3hot1941 = internal constant %struct.pci_fixup { i16 4130, i16 5601, i32 -1, i32 0, ptr @quirk_ryzen_xhci_d3hot }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_ryzen_xhci_d3hot1942 = internal constant %struct.pci_fixup { i16 4130, i16 5689, i32 -1, i32 0, ptr @quirk_ryzen_xhci_d3hot }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_tc86c001_ide2201 = internal constant %struct.pci_fixup { i16 4143, i16 261, i32 -1, i32 0, ptr @quirk_tc86c001_ide }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_plx_pci90502229 = internal constant %struct.pci_fixup { i16 4277, i16 -28592, i32 -1, i32 0, ptr @quirk_plx_pci9050 }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_plx_pci90502239 = internal constant %struct.pci_fixup { i16 5122, i16 8192, i32 -1, i32 0, ptr @quirk_plx_pci9050 }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_plx_pci90502240 = internal constant %struct.pci_fixup { i16 5122, i16 9728, i32 -1, i32 0, ptr @quirk_plx_pci9050 }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_netmos2277 = internal constant %struct.pci_fixup { i16 -26864, i16 -1, i32 1792, i32 8, ptr @quirk_netmos }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_e100_interrupt2343 = internal constant %struct.pci_fixup { i16 -32634, i16 -1, i32 512, i32 8, ptr @quirk_e100_interrupt }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2354 = internal constant %struct.pci_fixup { i16 -32634, i16 4263, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2355 = internal constant %struct.pci_fixup { i16 -32634, i16 4265, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2356 = internal constant %struct.pci_fixup { i16 -32634, i16 4278, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2357 = internal constant %struct.pci_fixup { i16 -32634, i16 4294, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2358 = internal constant %struct.pci_fixup { i16 -32634, i16 4295, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2359 = internal constant %struct.pci_fixup { i16 -32634, i16 4296, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2360 = internal constant %struct.pci_fixup { i16 -32634, i16 4310, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2361 = internal constant %struct.pci_fixup { i16 -32634, i16 4315, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2362 = internal constant %struct.pci_fixup { i16 -32634, i16 4317, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2363 = internal constant %struct.pci_fixup { i16 -32634, i16 4321, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2364 = internal constant %struct.pci_fixup { i16 -32634, i16 4332, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2365 = internal constant %struct.pci_fixup { i16 -32634, i16 4337, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2366 = internal constant %struct.pci_fixup { i16 -32634, i16 4340, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s2367 = internal constant %struct.pci_fixup { i16 -32634, i16 5384, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_aspm_l0s_l12380 = internal constant %struct.pci_fixup { i16 6945, i16 4224, i32 -1, i32 0, ptr @quirk_disable_aspm_l0s_l1 }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_enable_clear_retrain_link2395 = internal constant %struct.pci_fixup { i16 4824, i16 -7920, i32 -1, i32 0, ptr @quirk_enable_clear_retrain_link }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_enable_clear_retrain_link2396 = internal constant %struct.pci_fixup { i16 4824, i16 -7919, i32 -1, i32 0, ptr @quirk_enable_clear_retrain_link }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_enable_clear_retrain_link2397 = internal constant %struct.pci_fixup { i16 4824, i16 -7888, i32 -1, i32 0, ptr @quirk_enable_clear_retrain_link }, section ".pci_fixup_header", align 4
@__pci_fixup_fixup_rev1_53c8102414 = internal constant %struct.pci_fixup { i16 4096, i16 1, i32 -1, i32 0, ptr @fixup_rev1_53c810 }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_p64h2_1k_io2428 = internal constant %struct.pci_fixup { i16 -32634, i16 5216, i32 -1, i32 0, ptr @quirk_p64h2_1k_io }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_nvidia_ck804_pcie_aer_ext_cap2447 = internal constant %struct.pci_fixup { i16 4318, i16 93, i32 -1, i32 0, ptr @quirk_nvidia_ck804_pcie_aer_ext_cap }, section ".pci_fixup_final", align 4
@__pci_fixup_resume_earlyquirk_nvidia_ck804_pcie_aer_ext_cap2449 = internal constant %struct.pci_fixup { i16 4318, i16 93, i32 -1, i32 0, ptr @quirk_nvidia_ck804_pcie_aer_ext_cap }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_via_cx700_pci_parking_caching2501 = internal constant %struct.pci_fixup { i16 4358, i16 12878, i32 -1, i32 0, ptr @quirk_via_cx700_pci_parking_caching }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_brcm_5719_limit_mrrs2518 = internal constant %struct.pci_fixup { i16 5348, i16 5719, i32 -1, i32 0, ptr @quirk_brcm_5719_limit_mrrs }, section ".pci_fixup_enable", align 4
@__pci_fixup_quirk_unhide_mch_dev62536 = internal constant %struct.pci_fixup { i16 -32634, i16 9584, i32 -1, i32 0, ptr @quirk_unhide_mch_dev6 }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_unhide_mch_dev62538 = internal constant %struct.pci_fixup { i16 -32634, i16 9592, i32 -1, i32 0, ptr @quirk_unhide_mch_dev6 }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_disable_all_msi2553 = internal constant %struct.pci_fixup { i16 4454, i16 23, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_all_msi2554 = internal constant %struct.pci_fixup { i16 4098, i16 23091, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_all_msi2555 = internal constant %struct.pci_fixup { i16 4098, i16 22864, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_all_msi2556 = internal constant %struct.pci_fixup { i16 4358, i16 822, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_all_msi2557 = internal constant %struct.pci_fixup { i16 4358, i16 849, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_all_msi2558 = internal constant %struct.pci_fixup { i16 4358, i16 868, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_all_msi2559 = internal constant %struct.pci_fixup { i16 4358, i16 516, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_all_msi2560 = internal constant %struct.pci_fixup { i16 4153, i16 1889, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_all_msi2561 = internal constant %struct.pci_fixup { i16 5197, i16 -23069, i32 -1, i32 0, ptr @quirk_disable_all_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_msi2571 = internal constant %struct.pci_fixup { i16 4130, i16 29776, i32 -1, i32 0, ptr @quirk_disable_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_msi2572 = internal constant %struct.pci_fixup { i16 4358, i16 -24008, i32 -1, i32 0, ptr @quirk_disable_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_disable_msi2573 = internal constant %struct.pci_fixup { i16 4098, i16 23103, i32 -1, i32 0, ptr @quirk_disable_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_780_apc_msi2592 = internal constant %struct.pci_fixup { i16 4130, i16 -27136, i32 -1, i32 0, ptr @quirk_amd_780_apc_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_780_apc_msi2593 = internal constant %struct.pci_fixup { i16 4130, i16 -27135, i32 -1, i32 0, ptr @quirk_amd_780_apc_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_ht_cap2628 = internal constant %struct.pci_fixup { i16 4454, i16 306, i32 -1, i32 0, ptr @quirk_msi_ht_cap }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_nvidia_ck804_msi_ht_cap2650 = internal constant %struct.pci_fixup { i16 4318, i16 93, i32 -1, i32 0, ptr @quirk_nvidia_ck804_msi_ht_cap }, section ".pci_fixup_final", align 4
@__pci_fixup_ht_enable_msi_mapping2674 = internal constant %struct.pci_fixup { i16 4454, i16 54, i32 -1, i32 0, ptr @ht_enable_msi_mapping }, section ".pci_fixup_header", align 4
@__pci_fixup_ht_enable_msi_mapping2676 = internal constant %struct.pci_fixup { i16 4130, i16 29784, i32 -1, i32 0, ptr @ht_enable_msi_mapping }, section ".pci_fixup_header", align 4
@__pci_fixup_nvenet_msi_disable2696 = internal constant %struct.pci_fixup { i16 4318, i16 883, i32 -1, i32 0, ptr @nvenet_msi_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2713 = internal constant %struct.pci_fixup { i16 4318, i16 6864, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2716 = internal constant %struct.pci_fixup { i16 4318, i16 6865, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2719 = internal constant %struct.pci_fixup { i16 4318, i16 6866, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2722 = internal constant %struct.pci_fixup { i16 4318, i16 3056, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2725 = internal constant %struct.pci_fixup { i16 4318, i16 3057, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2728 = internal constant %struct.pci_fixup { i16 4318, i16 3612, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2731 = internal constant %struct.pci_fixup { i16 4318, i16 3613, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2734 = internal constant %struct.pci_fixup { i16 4318, i16 3602, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2737 = internal constant %struct.pci_fixup { i16 4318, i16 3603, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2740 = internal constant %struct.pci_fixup { i16 4318, i16 4014, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2743 = internal constant %struct.pci_fixup { i16 4318, i16 4015, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2746 = internal constant %struct.pci_fixup { i16 4318, i16 4325, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2749 = internal constant %struct.pci_fixup { i16 4318, i16 4326, i32 1540, i32 8, ptr @pci_quirk_nvidia_tegra_disable_rp_msi }, section ".pci_fixup_early", align 4
@__pci_fixup_nvbridge_check_legacy_irq_routing2778 = internal constant %struct.pci_fixup { i16 4318, i16 864, i32 -1, i32 0, ptr @nvbridge_check_legacy_irq_routing }, section ".pci_fixup_early", align 4
@__pci_fixup_nvbridge_check_legacy_irq_routing2781 = internal constant %struct.pci_fixup { i16 4318, i16 868, i32 -1, i32 0, ptr @nvbridge_check_legacy_irq_routing }, section ".pci_fixup_early", align 4
@__pci_fixup_nv_msi_ht_cap_quirk_all2983 = internal constant %struct.pci_fixup { i16 4281, i16 -1, i32 -1, i32 0, ptr @nv_msi_ht_cap_quirk_all }, section ".pci_fixup_final", align 4
@__pci_fixup_resume_earlynv_msi_ht_cap_quirk_all2984 = internal constant %struct.pci_fixup { i16 4281, i16 -1, i32 -1, i32 0, ptr @nv_msi_ht_cap_quirk_all }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_nv_msi_ht_cap_quirk_leaf2990 = internal constant %struct.pci_fixup { i16 4318, i16 -1, i32 -1, i32 0, ptr @nv_msi_ht_cap_quirk_leaf }, section ".pci_fixup_final", align 4
@__pci_fixup_resume_earlynv_msi_ht_cap_quirk_leaf2991 = internal constant %struct.pci_fixup { i16 4318, i16 -1, i32 -1, i32 0, ptr @nv_msi_ht_cap_quirk_leaf }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3027 = internal constant %struct.pci_fixup { i16 5348, i16 5738, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3030 = internal constant %struct.pci_fixup { i16 5348, i16 5739, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3033 = internal constant %struct.pci_fixup { i16 5348, i16 5736, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3036 = internal constant %struct.pci_fixup { i16 5348, i16 5737, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3039 = internal constant %struct.pci_fixup { i16 5348, i16 5752, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3042 = internal constant %struct.pci_fixup { i16 5348, i16 5753, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_ati_bug3045 = internal constant %struct.pci_fixup { i16 4098, i16 17296, i32 -1, i32 0, ptr @quirk_msi_intx_disable_ati_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_ati_bug3047 = internal constant %struct.pci_fixup { i16 4098, i16 17297, i32 -1, i32 0, ptr @quirk_msi_intx_disable_ati_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_ati_bug3049 = internal constant %struct.pci_fixup { i16 4098, i16 17298, i32 -1, i32 0, ptr @quirk_msi_intx_disable_ati_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_ati_bug3051 = internal constant %struct.pci_fixup { i16 4098, i16 17299, i32 -1, i32 0, ptr @quirk_msi_intx_disable_ati_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_ati_bug3053 = internal constant %struct.pci_fixup { i16 4098, i16 17300, i32 -1, i32 0, ptr @quirk_msi_intx_disable_ati_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3056 = internal constant %struct.pci_fixup { i16 4098, i16 17267, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3058 = internal constant %struct.pci_fixup { i16 4098, i16 17268, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3060 = internal constant %struct.pci_fixup { i16 4098, i16 17269, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3063 = internal constant %struct.pci_fixup { i16 6505, i16 4194, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3065 = internal constant %struct.pci_fixup { i16 6505, i16 4195, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3067 = internal constant %struct.pci_fixup { i16 6505, i16 8288, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3069 = internal constant %struct.pci_fixup { i16 6505, i16 8290, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3071 = internal constant %struct.pci_fixup { i16 6505, i16 4211, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_bug3073 = internal constant %struct.pci_fixup { i16 6505, i16 4227, i32 -1, i32 0, ptr @quirk_msi_intx_disable_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_qca_bug3075 = internal constant %struct.pci_fixup { i16 6505, i16 4240, i32 -1, i32 0, ptr @quirk_msi_intx_disable_qca_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_qca_bug3077 = internal constant %struct.pci_fixup { i16 6505, i16 4241, i32 -1, i32 0, ptr @quirk_msi_intx_disable_qca_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_qca_bug3079 = internal constant %struct.pci_fixup { i16 6505, i16 4256, i32 -1, i32 0, ptr @quirk_msi_intx_disable_qca_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_qca_bug3081 = internal constant %struct.pci_fixup { i16 6505, i16 4257, i32 -1, i32 0, ptr @quirk_msi_intx_disable_qca_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_msi_intx_disable_qca_bug3083 = internal constant %struct.pci_fixup { i16 6505, i16 -8047, i32 -1, i32 0, ptr @quirk_msi_intx_disable_qca_bug }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_al_msi_disable3101 = internal constant %struct.pci_fixup { i16 7222, i16 49, i32 1540, i32 8, ptr @quirk_al_msi_disable }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_hotplug_bridge3115 = internal constant %struct.pci_fixup { i16 13192, i16 32, i32 -1, i32 0, ptr @quirk_hotplug_bridge }, section ".pci_fixup_header", align 4
@__pci_fixup_ricoh_mmc_fixup_rl5c4763172 = internal constant %struct.pci_fixup { i16 4480, i16 1142, i32 -1, i32 0, ptr @ricoh_mmc_fixup_rl5c476 }, section ".pci_fixup_early", align 4
@__pci_fixup_resume_earlyricoh_mmc_fixup_rl5c4763173 = internal constant %struct.pci_fixup { i16 4480, i16 1142, i32 -1, i32 0, ptr @ricoh_mmc_fixup_rl5c476 }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_ricoh_mmc_fixup_r5c8323225 = internal constant %struct.pci_fixup { i16 4480, i16 2098, i32 -1, i32 0, ptr @ricoh_mmc_fixup_r5c832 }, section ".pci_fixup_early", align 4
@__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323226 = internal constant %struct.pci_fixup { i16 4480, i16 2098, i32 -1, i32 0, ptr @ricoh_mmc_fixup_r5c832 }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_ricoh_mmc_fixup_r5c8323227 = internal constant %struct.pci_fixup { i16 4480, i16 -6110, i32 -1, i32 0, ptr @ricoh_mmc_fixup_r5c832 }, section ".pci_fixup_early", align 4
@__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323228 = internal constant %struct.pci_fixup { i16 4480, i16 -6110, i32 -1, i32 0, ptr @ricoh_mmc_fixup_r5c832 }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_ricoh_mmc_fixup_r5c8323229 = internal constant %struct.pci_fixup { i16 4480, i16 -6109, i32 -1, i32 0, ptr @ricoh_mmc_fixup_r5c832 }, section ".pci_fixup_early", align 4
@__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323230 = internal constant %struct.pci_fixup { i16 4480, i16 -6109, i32 -1, i32 0, ptr @ricoh_mmc_fixup_r5c832 }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_fixup_ti816x_class3267 = internal constant %struct.pci_fixup { i16 4172, i16 -18432, i32 0, i32 8, ptr @fixup_ti816x_class }, section ".pci_fixup_early", align 4
@__pci_fixup_fixup_mpss_2563278 = internal constant %struct.pci_fixup { i16 6436, i16 1795, i32 -1, i32 0, ptr @fixup_mpss_256 }, section ".pci_fixup_early", align 4
@__pci_fixup_fixup_mpss_2563280 = internal constant %struct.pci_fixup { i16 6436, i16 26371, i32 -1, i32 0, ptr @fixup_mpss_256 }, section ".pci_fixup_early", align 4
@__pci_fixup_fixup_mpss_2563282 = internal constant %struct.pci_fixup { i16 6436, i16 1808, i32 -1, i32 0, ptr @fixup_mpss_256 }, section ".pci_fixup_early", align 4
@__pci_fixup_fixup_mpss_2563283 = internal constant %struct.pci_fixup { i16 6945, i16 1554, i32 -1, i32 0, ptr @fixup_mpss_256 }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_intel_mc_errata3327 = internal constant %struct.pci_fixup { i16 -32634, i16 9664, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3328 = internal constant %struct.pci_fixup { i16 -32634, i16 9680, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3329 = internal constant %struct.pci_fixup { i16 -32634, i16 9684, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3330 = internal constant %struct.pci_fixup { i16 -32634, i16 9688, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3331 = internal constant %struct.pci_fixup { i16 -32634, i16 9698, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3332 = internal constant %struct.pci_fixup { i16 -32634, i16 9699, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3333 = internal constant %struct.pci_fixup { i16 -32634, i16 9700, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3334 = internal constant %struct.pci_fixup { i16 -32634, i16 9701, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3335 = internal constant %struct.pci_fixup { i16 -32634, i16 9702, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3336 = internal constant %struct.pci_fixup { i16 -32634, i16 9703, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3337 = internal constant %struct.pci_fixup { i16 -32634, i16 9719, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3338 = internal constant %struct.pci_fixup { i16 -32634, i16 9720, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3339 = internal constant %struct.pci_fixup { i16 -32634, i16 9721, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3340 = internal constant %struct.pci_fixup { i16 -32634, i16 9722, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3342 = internal constant %struct.pci_fixup { i16 -32634, i16 26048, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3343 = internal constant %struct.pci_fixup { i16 -32634, i16 26082, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3344 = internal constant %struct.pci_fixup { i16 -32634, i16 26083, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3345 = internal constant %struct.pci_fixup { i16 -32634, i16 26084, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3346 = internal constant %struct.pci_fixup { i16 -32634, i16 26085, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3347 = internal constant %struct.pci_fixup { i16 -32634, i16 26086, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3348 = internal constant %struct.pci_fixup { i16 -32634, i16 26087, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3349 = internal constant %struct.pci_fixup { i16 -32634, i16 26103, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3350 = internal constant %struct.pci_fixup { i16 -32634, i16 26104, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3351 = internal constant %struct.pci_fixup { i16 -32634, i16 26105, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_mc_errata3352 = internal constant %struct.pci_fixup { i16 -32634, i16 26106, i32 -1, i32 0, ptr @quirk_intel_mc_errata }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_ntb3376 = internal constant %struct.pci_fixup { i16 -32634, i16 3592, i32 -1, i32 0, ptr @quirk_intel_ntb }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_intel_ntb3377 = internal constant %struct.pci_fixup { i16 -32634, i16 3597, i32 -1, i32 0, ptr @quirk_intel_ntb }, section ".pci_fixup_header", align 4
@__pci_fixup_disable_igfx_irq3409 = internal constant %struct.pci_fixup { i16 -32634, i16 66, i32 -1, i32 0, ptr @disable_igfx_irq }, section ".pci_fixup_final", align 4
@__pci_fixup_disable_igfx_irq3410 = internal constant %struct.pci_fixup { i16 -32634, i16 70, i32 -1, i32 0, ptr @disable_igfx_irq }, section ".pci_fixup_final", align 4
@__pci_fixup_disable_igfx_irq3411 = internal constant %struct.pci_fixup { i16 -32634, i16 74, i32 -1, i32 0, ptr @disable_igfx_irq }, section ".pci_fixup_final", align 4
@__pci_fixup_disable_igfx_irq3412 = internal constant %struct.pci_fixup { i16 -32634, i16 258, i32 -1, i32 0, ptr @disable_igfx_irq }, section ".pci_fixup_final", align 4
@__pci_fixup_disable_igfx_irq3413 = internal constant %struct.pci_fixup { i16 -32634, i16 262, i32 -1, i32 0, ptr @disable_igfx_irq }, section ".pci_fixup_final", align 4
@__pci_fixup_disable_igfx_irq3414 = internal constant %struct.pci_fixup { i16 -32634, i16 266, i32 -1, i32 0, ptr @disable_igfx_irq }, section ".pci_fixup_final", align 4
@__pci_fixup_disable_igfx_irq3415 = internal constant %struct.pci_fixup { i16 -32634, i16 338, i32 -1, i32 0, ptr @disable_igfx_irq }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3426 = internal constant %struct.pci_fixup { i16 -32634, i16 1042, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3427 = internal constant %struct.pci_fixup { i16 -32634, i16 3072, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3428 = internal constant %struct.pci_fixup { i16 -32634, i16 3084, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3430 = internal constant %struct.pci_fixup { i16 -32634, i16 -29694, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3431 = internal constant %struct.pci_fixup { i16 -32634, i16 -29672, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3432 = internal constant %struct.pci_fixup { i16 -32634, i16 -29668, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3433 = internal constant %struct.pci_fixup { i16 -32634, i16 -29664, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3434 = internal constant %struct.pci_fixup { i16 -32634, i16 -29662, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3435 = internal constant %struct.pci_fixup { i16 -32634, i16 -29658, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3436 = internal constant %struct.pci_fixup { i16 -32634, i16 -29651, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3437 = internal constant %struct.pci_fixup { i16 -32634, i16 -29647, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3438 = internal constant %struct.pci_fixup { i16 -32634, i16 -29638, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3439 = internal constant %struct.pci_fixup { i16 -32634, i16 -29635, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3440 = internal constant %struct.pci_fixup { i16 -32634, i16 -29618, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3442 = internal constant %struct.pci_fixup { i16 -32634, i16 8832, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3443 = internal constant %struct.pci_fixup { i16 -32634, i16 8856, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3444 = internal constant %struct.pci_fixup { i16 -32634, i16 8860, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3445 = internal constant %struct.pci_fixup { i16 -32634, i16 8880, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3446 = internal constant %struct.pci_fixup { i16 -32634, i16 8885, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3447 = internal constant %struct.pci_fixup { i16 -32634, i16 8887, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3448 = internal constant %struct.pci_fixup { i16 -32634, i16 8888, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3449 = internal constant %struct.pci_fixup { i16 -32634, i16 8920, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_remove_d3hot_delay3450 = internal constant %struct.pci_fixup { i16 -32634, i16 8924, i32 -1, i32 0, ptr @quirk_remove_d3hot_delay }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3462 = internal constant %struct.pci_fixup { i16 5157, i16 48, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3464 = internal constant %struct.pci_fixup { i16 6164, i16 1537, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3466 = internal constant %struct.pci_fixup { i16 7036, i16 4, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3475 = internal constant %struct.pci_fixup { i16 4332, i16 -32407, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3481 = internal constant %struct.pci_fixup { i16 -32634, i16 5490, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3482 = internal constant %struct.pci_fixup { i16 -32634, i16 5492, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3483 = internal constant %struct.pci_fixup { i16 -32634, i16 5504, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3484 = internal constant %struct.pci_fixup { i16 -32634, i16 5505, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3485 = internal constant %struct.pci_fixup { i16 -32634, i16 5507, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3486 = internal constant %struct.pci_fixup { i16 -32634, i16 5508, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3487 = internal constant %struct.pci_fixup { i16 -32634, i16 5509, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3488 = internal constant %struct.pci_fixup { i16 -32634, i16 5510, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3489 = internal constant %struct.pci_fixup { i16 -32634, i16 5511, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3490 = internal constant %struct.pci_fixup { i16 -32634, i16 5512, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3491 = internal constant %struct.pci_fixup { i16 -32634, i16 5513, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3492 = internal constant %struct.pci_fixup { i16 -32634, i16 5514, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3493 = internal constant %struct.pci_fixup { i16 -32634, i16 5515, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3494 = internal constant %struct.pci_fixup { i16 -32634, i16 14288, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3495 = internal constant %struct.pci_fixup { i16 -32634, i16 14289, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_broken_intx_masking3496 = internal constant %struct.pci_fixup { i16 -32634, i16 14290, i32 -1, i32 0, ptr @quirk_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_mellanox_check_broken_intx_masking3584 = internal constant %struct.pci_fixup { i16 5555, i16 -1, i32 -1, i32 0, ptr @mellanox_check_broken_intx_masking }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_nvidia_no_bus_reset3601 = internal constant %struct.pci_fixup { i16 4318, i16 -1, i32 -1, i32 0, ptr @quirk_nvidia_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_bus_reset3610 = internal constant %struct.pci_fixup { i16 5772, i16 48, i32 -1, i32 0, ptr @quirk_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_bus_reset3611 = internal constant %struct.pci_fixup { i16 5772, i16 50, i32 -1, i32 0, ptr @quirk_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_bus_reset3612 = internal constant %struct.pci_fixup { i16 5772, i16 60, i32 -1, i32 0, ptr @quirk_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_bus_reset3613 = internal constant %struct.pci_fixup { i16 5772, i16 51, i32 -1, i32 0, ptr @quirk_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_bus_reset3614 = internal constant %struct.pci_fixup { i16 5772, i16 52, i32 -1, i32 0, ptr @quirk_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_bus_reset3615 = internal constant %struct.pci_fixup { i16 5772, i16 62, i32 -1, i32 0, ptr @quirk_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_bus_reset3622 = internal constant %struct.pci_fixup { i16 6013, i16 -24320, i32 -1, i32 0, ptr @quirk_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_bus_reset3632 = internal constant %struct.pci_fixup { i16 4172, i16 -20475, i32 -1, i32 0, ptr @quirk_no_bus_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_no_pm_reset3653 = internal constant %struct.pci_fixup { i16 4098, i16 -1, i32 768, i32 8, ptr @quirk_no_pm_reset }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_thunderbolt_hotplug_msi3668 = internal constant %struct.pci_fixup { i16 -32634, i16 5395, i32 -1, i32 0, ptr @quirk_thunderbolt_hotplug_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_thunderbolt_hotplug_msi3670 = internal constant %struct.pci_fixup { i16 -32634, i16 5402, i32 -1, i32 0, ptr @quirk_thunderbolt_hotplug_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_thunderbolt_hotplug_msi3672 = internal constant %struct.pci_fixup { i16 -32634, i16 5403, i32 -1, i32 0, ptr @quirk_thunderbolt_hotplug_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_thunderbolt_hotplug_msi3674 = internal constant %struct.pci_fixup { i16 -32634, i16 5447, i32 -1, i32 0, ptr @quirk_thunderbolt_hotplug_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_thunderbolt_hotplug_msi3676 = internal constant %struct.pci_fixup { i16 -32634, i16 5449, i32 -1, i32 0, ptr @quirk_thunderbolt_hotplug_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_dma_func0_alias4087 = internal constant %struct.pci_fixup { i16 4480, i16 -6094, i32 -1, i32 0, ptr @quirk_dma_func0_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func0_alias4088 = internal constant %struct.pci_fixup { i16 4480, i16 -7050, i32 -1, i32 0, ptr @quirk_dma_func0_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4103 = internal constant %struct.pci_fixup { i16 6987, i16 -28384, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4105 = internal constant %struct.pci_fixup { i16 6987, i16 -28381, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4108 = internal constant %struct.pci_fixup { i16 6987, i16 -28379, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4110 = internal constant %struct.pci_fixup { i16 6987, i16 -28376, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4113 = internal constant %struct.pci_fixup { i16 6987, i16 -28368, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4115 = internal constant %struct.pci_fixup { i16 6987, i16 -28304, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4118 = internal constant %struct.pci_fixup { i16 6987, i16 -28302, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4121 = internal constant %struct.pci_fixup { i16 6987, i16 -28294, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4124 = internal constant %struct.pci_fixup { i16 6987, i16 -28286, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4127 = internal constant %struct.pci_fixup { i16 6987, i16 -28285, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4130 = internal constant %struct.pci_fixup { i16 6987, i16 -28256, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4133 = internal constant %struct.pci_fixup { i16 6987, i16 -28139, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4136 = internal constant %struct.pci_fixup { i16 6987, i16 -28128, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4139 = internal constant %struct.pci_fixup { i16 6987, i16 -28112, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4141 = internal constant %struct.pci_fixup { i16 4355, i16 1602, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4143 = internal constant %struct.pci_fixup { i16 4355, i16 1605, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4147 = internal constant %struct.pci_fixup { i16 6523, i16 9106, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_dma_func1_alias4151 = internal constant %struct.pci_fixup { i16 7208, i16 290, i32 -1, i32 0, ptr @quirk_dma_func1_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_fixed_dma_alias4186 = internal constant %struct.pci_fixup { i16 -28667, i16 645, i32 -1, i32 0, ptr @quirk_fixed_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_use_pcie_bridge_dma_alias4207 = internal constant %struct.pci_fixup { i16 6945, i16 4224, i32 -1, i32 0, ptr @quirk_use_pcie_bridge_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_use_pcie_bridge_dma_alias4209 = internal constant %struct.pci_fixup { i16 4323, i16 -32493, i32 -1, i32 0, ptr @quirk_use_pcie_bridge_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_use_pcie_bridge_dma_alias4211 = internal constant %struct.pci_fixup { i16 4739, i16 -30574, i32 -1, i32 0, ptr @quirk_use_pcie_bridge_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_use_pcie_bridge_dma_alias4213 = internal constant %struct.pci_fixup { i16 4739, i16 -30573, i32 -1, i32 0, ptr @quirk_use_pcie_bridge_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_use_pcie_bridge_dma_alias4215 = internal constant %struct.pci_fixup { i16 -32634, i16 9294, i32 -1, i32 0, ptr @quirk_use_pcie_bridge_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_mic_x200_dma_alias4229 = internal constant %struct.pci_fixup { i16 -32634, i16 8800, i32 -1, i32 0, ptr @quirk_mic_x200_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_mic_x200_dma_alias4230 = internal constant %struct.pci_fixup { i16 -32634, i16 8804, i32 -1, i32 0, ptr @quirk_mic_x200_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_pex_vca_alias4254 = internal constant %struct.pci_fixup { i16 -32634, i16 10580, i32 -1, i32 0, ptr @quirk_pex_vca_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_pex_vca_alias4255 = internal constant %struct.pci_fixup { i16 -32634, i16 10581, i32 -1, i32 0, ptr @quirk_pex_vca_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_pex_vca_alias4256 = internal constant %struct.pci_fixup { i16 -32634, i16 10582, i32 -1, i32 0, ptr @quirk_pex_vca_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_pex_vca_alias4257 = internal constant %struct.pci_fixup { i16 -32634, i16 10584, i32 -1, i32 0, ptr @quirk_pex_vca_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_pex_vca_alias4258 = internal constant %struct.pci_fixup { i16 -32634, i16 10585, i32 -1, i32 0, ptr @quirk_pex_vca_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_pex_vca_alias4259 = internal constant %struct.pci_fixup { i16 -32634, i16 10586, i32 -1, i32 0, ptr @quirk_pex_vca_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_bridge_cavm_thrx2_pcie_root4271 = internal constant %struct.pci_fixup { i16 5348, i16 -28672, i32 -1, i32 0, ptr @quirk_bridge_cavm_thrx2_pcie_root }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_bridge_cavm_thrx2_pcie_root4273 = internal constant %struct.pci_fixup { i16 5348, i16 -28540, i32 -1, i32 0, ptr @quirk_bridge_cavm_thrx2_pcie_root }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_tw686x_class4289 = internal constant %struct.pci_fixup { i16 6039, i16 26724, i32 0, i32 8, ptr @quirk_tw686x_class }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_tw686x_class4291 = internal constant %struct.pci_fixup { i16 6039, i16 26725, i32 0, i32 8, ptr @quirk_tw686x_class }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_tw686x_class4293 = internal constant %struct.pci_fixup { i16 6039, i16 26728, i32 0, i32 8, ptr @quirk_tw686x_class }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_tw686x_class4295 = internal constant %struct.pci_fixup { i16 6039, i16 26729, i32 0, i32 8, ptr @quirk_tw686x_class }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4314 = internal constant %struct.pci_fixup { i16 -32634, i16 28417, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4316 = internal constant %struct.pci_fixup { i16 -32634, i16 28418, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4318 = internal constant %struct.pci_fixup { i16 -32634, i16 28419, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4320 = internal constant %struct.pci_fixup { i16 -32634, i16 28420, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4322 = internal constant %struct.pci_fixup { i16 -32634, i16 28421, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4324 = internal constant %struct.pci_fixup { i16 -32634, i16 28422, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4326 = internal constant %struct.pci_fixup { i16 -32634, i16 28423, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4328 = internal constant %struct.pci_fixup { i16 -32634, i16 28424, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4330 = internal constant %struct.pci_fixup { i16 -32634, i16 28425, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4332 = internal constant %struct.pci_fixup { i16 -32634, i16 28426, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4334 = internal constant %struct.pci_fixup { i16 -32634, i16 28427, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4336 = internal constant %struct.pci_fixup { i16 -32634, i16 28428, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4338 = internal constant %struct.pci_fixup { i16 -32634, i16 28429, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4340 = internal constant %struct.pci_fixup { i16 -32634, i16 28430, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4342 = internal constant %struct.pci_fixup { i16 -32634, i16 12033, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4344 = internal constant %struct.pci_fixup { i16 -32634, i16 12034, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4346 = internal constant %struct.pci_fixup { i16 -32634, i16 12035, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4348 = internal constant %struct.pci_fixup { i16 -32634, i16 12036, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4350 = internal constant %struct.pci_fixup { i16 -32634, i16 12037, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4352 = internal constant %struct.pci_fixup { i16 -32634, i16 12038, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4354 = internal constant %struct.pci_fixup { i16 -32634, i16 12039, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4356 = internal constant %struct.pci_fixup { i16 -32634, i16 12040, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4358 = internal constant %struct.pci_fixup { i16 -32634, i16 12041, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4360 = internal constant %struct.pci_fixup { i16 -32634, i16 12042, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4362 = internal constant %struct.pci_fixup { i16 -32634, i16 12043, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4364 = internal constant %struct.pci_fixup { i16 -32634, i16 12044, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4366 = internal constant %struct.pci_fixup { i16 -32634, i16 12045, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4368 = internal constant %struct.pci_fixup { i16 -32634, i16 12046, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4380 = internal constant %struct.pci_fixup { i16 4130, i16 6656, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4382 = internal constant %struct.pci_fixup { i16 4130, i16 6657, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_relaxedordering_disable4384 = internal constant %struct.pci_fixup { i16 4130, i16 6658, i32 0, i32 8, ptr @quirk_relaxedordering_disable }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_chelsio_T5_disable_root_port_attributes4441 = internal constant %struct.pci_fixup { i16 5157, i16 -1, i32 -1, i32 0, ptr @quirk_chelsio_T5_disable_root_port_attributes }, section ".pci_fixup_header", align 4
@pci_dev_acs_enabled = internal constant { [112 x %struct.pci_dev_acs_enabled], [224 x i8] } { [112 x %struct.pci_dev_acs_enabled] [%struct.pci_dev_acs_enabled { i16 4098, i16 17285, ptr @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17308, ptr @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17283, ptr @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17309, ptr @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17284, ptr @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4098, i16 17305, ptr @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4130, i16 30735, ptr @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 4130, i16 30729, ptr @pci_quirk_amd_sb_acs }, %struct.pci_dev_acs_enabled { i16 6436, i16 2307, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6436, i16 2339, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6436, i16 2563, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4294, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4315, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4317, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4321, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4337, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4343, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4344, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4345, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4346, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4347, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4348, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5383, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5396, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5404, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5417, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5418, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5453, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5455, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5457, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5464, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5385, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5390, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5391, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5392, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5393, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5398, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5415, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4297, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4326, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4327, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4328, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5386, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5389, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5400, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5414, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4263, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4265, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4310, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5409, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5410, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5411, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5412, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4190, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4191, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4192, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 4313, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5559, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 5560, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 -1, ptr @pci_quirk_rciep_acs }, %struct.pci_dev_acs_enabled { i16 6091, i16 1024, ptr @pci_quirk_qcom_rp_acs }, %struct.pci_dev_acs_enabled { i16 6091, i16 1025, ptr @pci_quirk_qcom_rp_acs }, %struct.pci_dev_acs_enabled { i16 7615, i16 1025, ptr @pci_quirk_qcom_rp_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 -1, ptr @pci_quirk_intel_pch_acs }, %struct.pci_dev_acs_enabled { i16 -32634, i16 -1, ptr @pci_quirk_intel_spt_pch_acs }, %struct.pci_dev_acs_enabled { i16 6562, i16 1808, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 4319, i16 1824, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6013, i16 -1, ptr @pci_quirk_cavium_acs }, %struct.pci_dev_acs_enabled { i16 6013, i16 -24538, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6013, i16 -24487, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6013, i16 -24480, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 4328, i16 -8188, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8187, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8186, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8185, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8184, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8183, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8182, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8181, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 7663, i16 -8180, ptr @pci_quirk_xgene_acs }, %struct.pci_dev_acs_enabled { i16 5348, i16 5847, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 5348, i16 -10476, ptr @pci_quirk_brcm_acs }, %struct.pci_dev_acs_enabled { i16 7222, i16 49, ptr @pci_quirk_al_acs }, %struct.pci_dev_acs_enabled { i16 7447, i16 12344, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 7447, i16 12548, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 7447, i16 -28541, ptr @pci_quirk_mf_endpoint_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29311, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29279, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29309, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29312, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29280, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29310, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29296, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29264, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29294, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29295, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29263, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29293, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29303, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29271, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29301, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29304, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29272, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29302, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29288, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29256, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29286, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29287, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29255, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 6487, i16 -29285, ptr @pci_quirk_nxp_rp_acs }, %struct.pci_dev_acs_enabled { i16 7447, i16 -1, ptr @pci_quirk_zhaoxin_pcie_ports_acs }, %struct.pci_dev_acs_enabled zeroinitializer], [224 x i8] zeroinitializer }, align 32
@__pci_fixup_quirk_intel_qat_vf_cap5297 = internal constant %struct.pci_fixup { i16 -32634, i16 1091, i32 -1, i32 0, ptr @quirk_intel_qat_vf_cap }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_flr5313 = internal constant %struct.pci_fixup { i16 4130, i16 5255, i32 -1, i32 0, ptr @quirk_no_flr }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_flr5314 = internal constant %struct.pci_fixup { i16 4130, i16 5260, i32 -1, i32 0, ptr @quirk_no_flr }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_flr5315 = internal constant %struct.pci_fixup { i16 4130, i16 5276, i32 -1, i32 0, ptr @quirk_no_flr }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_flr5316 = internal constant %struct.pci_fixup { i16 -32634, i16 5378, i32 -1, i32 0, ptr @quirk_no_flr }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_flr5317 = internal constant %struct.pci_fixup { i16 -32634, i16 5379, i32 -1, i32 0, ptr @quirk_no_flr }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ext_tags5331 = internal constant %struct.pci_fixup { i16 4454, i16 306, i32 -1, i32 0, ptr @quirk_no_ext_tags }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ext_tags5332 = internal constant %struct.pci_fixup { i16 4454, i16 320, i32 -1, i32 0, ptr @quirk_no_ext_tags }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ext_tags5333 = internal constant %struct.pci_fixup { i16 4454, i16 321, i32 -1, i32 0, ptr @quirk_no_ext_tags }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ext_tags5334 = internal constant %struct.pci_fixup { i16 4454, i16 322, i32 -1, i32 0, ptr @quirk_no_ext_tags }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ext_tags5335 = internal constant %struct.pci_fixup { i16 4454, i16 324, i32 -1, i32 0, ptr @quirk_no_ext_tags }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ext_tags5336 = internal constant %struct.pci_fixup { i16 4454, i16 1056, i32 -1, i32 0, ptr @quirk_no_ext_tags }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_no_ext_tags5337 = internal constant %struct.pci_fixup { i16 4454, i16 1058, i32 -1, i32 0, ptr @quirk_no_ext_tags }, section ".pci_fixup_early", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5364 = internal constant %struct.pci_fixup { i16 4098, i16 -26396, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5366 = internal constant %struct.pci_fixup { i16 4098, i16 26880, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5368 = internal constant %struct.pci_fixup { i16 4098, i16 29456, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5369 = internal constant %struct.pci_fixup { i16 4098, i16 29458, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5370 = internal constant %struct.pci_fixup { i16 4098, i16 29464, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5371 = internal constant %struct.pci_fixup { i16 4098, i16 29465, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5372 = internal constant %struct.pci_fixup { i16 4098, i16 29466, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5373 = internal constant %struct.pci_fixup { i16 4098, i16 29467, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5374 = internal constant %struct.pci_fixup { i16 4098, i16 29470, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5375 = internal constant %struct.pci_fixup { i16 4098, i16 29471, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5377 = internal constant %struct.pci_fixup { i16 4098, i16 29504, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5378 = internal constant %struct.pci_fixup { i16 4098, i16 29505, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5379 = internal constant %struct.pci_fixup { i16 4098, i16 29511, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5380 = internal constant %struct.pci_fixup { i16 4098, i16 29519, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_amd_harvest_no_ats5382 = internal constant %struct.pci_fixup { i16 4098, i16 5592, i32 -1, i32 0, ptr @quirk_amd_harvest_no_ats }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_fsl_no_msi5391 = internal constant %struct.pci_fixup { i16 6487, i16 -1, i32 -1, i32 0, ptr @quirk_fsl_no_msi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_gpu_hda5439 = internal constant %struct.pci_fixup { i16 4098, i16 -1, i32 1027, i32 8, ptr @quirk_gpu_hda }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_gpu_hda5441 = internal constant %struct.pci_fixup { i16 4130, i16 -1, i32 1027, i32 8, ptr @quirk_gpu_hda }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_gpu_hda5443 = internal constant %struct.pci_fixup { i16 4318, i16 -1, i32 1027, i32 8, ptr @quirk_gpu_hda }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_gpu_usb5454 = internal constant %struct.pci_fixup { i16 4318, i16 -1, i32 3075, i32 8, ptr @quirk_gpu_usb }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_gpu_usb5456 = internal constant %struct.pci_fixup { i16 4098, i16 -1, i32 3075, i32 8, ptr @quirk_gpu_usb }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_gpu_usb_typec_ucsi5471 = internal constant %struct.pci_fixup { i16 4318, i16 -1, i32 3200, i32 8, ptr @quirk_gpu_usb_typec_ucsi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_gpu_usb_typec_ucsi5474 = internal constant %struct.pci_fixup { i16 4098, i16 -1, i32 3200, i32 8, ptr @quirk_gpu_usb_typec_ucsi }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_nvidia_hda5502 = internal constant %struct.pci_fixup { i16 4318, i16 -1, i32 3, i32 16, ptr @quirk_nvidia_hda }, section ".pci_fixup_header", align 4
@__pci_fixup_resume_earlyquirk_nvidia_hda5504 = internal constant %struct.pci_fixup { i16 4318, i16 -1, i32 3, i32 16, ptr @quirk_nvidia_hda }, section ".pci_fixup_resume_early", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5645 = internal constant %struct.pci_fixup { i16 4600, i16 -31439, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5646 = internal constant %struct.pci_fixup { i16 4600, i16 -31438, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5647 = internal constant %struct.pci_fixup { i16 4600, i16 -31437, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5648 = internal constant %struct.pci_fixup { i16 4600, i16 -31436, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5649 = internal constant %struct.pci_fixup { i16 4600, i16 -31435, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5650 = internal constant %struct.pci_fixup { i16 4600, i16 -31434, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5651 = internal constant %struct.pci_fixup { i16 4600, i16 -31423, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5652 = internal constant %struct.pci_fixup { i16 4600, i16 -31422, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5653 = internal constant %struct.pci_fixup { i16 4600, i16 -31421, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5654 = internal constant %struct.pci_fixup { i16 4600, i16 -31420, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5655 = internal constant %struct.pci_fixup { i16 4600, i16 -31419, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5656 = internal constant %struct.pci_fixup { i16 4600, i16 -31418, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5657 = internal constant %struct.pci_fixup { i16 4600, i16 -31407, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5658 = internal constant %struct.pci_fixup { i16 4600, i16 -31406, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5659 = internal constant %struct.pci_fixup { i16 4600, i16 -31405, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5660 = internal constant %struct.pci_fixup { i16 4600, i16 -31404, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5661 = internal constant %struct.pci_fixup { i16 4600, i16 -31403, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5662 = internal constant %struct.pci_fixup { i16 4600, i16 -31402, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5663 = internal constant %struct.pci_fixup { i16 4600, i16 -31391, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5664 = internal constant %struct.pci_fixup { i16 4600, i16 -31390, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5665 = internal constant %struct.pci_fixup { i16 4600, i16 -31389, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5666 = internal constant %struct.pci_fixup { i16 4600, i16 -31388, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5667 = internal constant %struct.pci_fixup { i16 4600, i16 -31387, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5668 = internal constant %struct.pci_fixup { i16 4600, i16 -31386, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5669 = internal constant %struct.pci_fixup { i16 4600, i16 -31375, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5670 = internal constant %struct.pci_fixup { i16 4600, i16 -31374, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5671 = internal constant %struct.pci_fixup { i16 4600, i16 -31373, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5672 = internal constant %struct.pci_fixup { i16 4600, i16 -31372, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5673 = internal constant %struct.pci_fixup { i16 4600, i16 -31371, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5674 = internal constant %struct.pci_fixup { i16 4600, i16 -31370, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5675 = internal constant %struct.pci_fixup { i16 4600, i16 16384, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5676 = internal constant %struct.pci_fixup { i16 4600, i16 16516, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5677 = internal constant %struct.pci_fixup { i16 4600, i16 16488, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5678 = internal constant %struct.pci_fixup { i16 4600, i16 16466, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5679 = internal constant %struct.pci_fixup { i16 4600, i16 16438, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5680 = internal constant %struct.pci_fixup { i16 4600, i16 16424, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5681 = internal constant %struct.pci_fixup { i16 4600, i16 16640, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5682 = internal constant %struct.pci_fixup { i16 4600, i16 16772, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5683 = internal constant %struct.pci_fixup { i16 4600, i16 16744, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5684 = internal constant %struct.pci_fixup { i16 4600, i16 16722, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5685 = internal constant %struct.pci_fixup { i16 4600, i16 16694, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5686 = internal constant %struct.pci_fixup { i16 4600, i16 16680, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5687 = internal constant %struct.pci_fixup { i16 4600, i16 16896, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5688 = internal constant %struct.pci_fixup { i16 4600, i16 17028, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5689 = internal constant %struct.pci_fixup { i16 4600, i16 17000, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5690 = internal constant %struct.pci_fixup { i16 4600, i16 16978, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5691 = internal constant %struct.pci_fixup { i16 4600, i16 16950, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5692 = internal constant %struct.pci_fixup { i16 4600, i16 16936, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5693 = internal constant %struct.pci_fixup { i16 4600, i16 17234, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5694 = internal constant %struct.pci_fixup { i16 4600, i16 17206, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5695 = internal constant %struct.pci_fixup { i16 4600, i16 17192, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5696 = internal constant %struct.pci_fixup { i16 4600, i16 17490, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5697 = internal constant %struct.pci_fixup { i16 4600, i16 17462, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5698 = internal constant %struct.pci_fixup { i16 4600, i16 17448, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5699 = internal constant %struct.pci_fixup { i16 4600, i16 17746, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5700 = internal constant %struct.pci_fixup { i16 4600, i16 17718, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_switchtec_ntb_dma_alias5701 = internal constant %struct.pci_fixup { i16 4600, i16 17704, i32 1664, i32 8, ptr @quirk_switchtec_ntb_dma_alias }, section ".pci_fixup_final", align 4
@__pci_fixup_quirk_plx_ntb_dma_alias5715 = internal constant %struct.pci_fixup { i16 4277, i16 -30800, i32 -1, i32 0, ptr @quirk_plx_ntb_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_plx_ntb_dma_alias5716 = internal constant %struct.pci_fixup { i16 4277, i16 -30799, i32 -1, i32 0, ptr @quirk_plx_ntb_dma_alias }, section ".pci_fixup_header", align 4
@__pci_fixup_quirk_reset_lenovo_thinkpad_p50_nvgpu5774 = internal constant %struct.pci_fixup { i16 4318, i16 5041, i32 768, i32 8, ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu }, section ".pci_fixup_final", align 4
@__pci_fixup_pci_fixup_no_d0_pme5785 = internal constant %struct.pci_fixup { i16 6945, i16 8514, i32 -1, i32 0, ptr @pci_fixup_no_d0_pme }, section ".pci_fixup_final", align 4
@__pci_fixup_pci_fixup_no_msi_no_pme5806 = internal constant %struct.pci_fixup { i16 4824, i16 16398, i32 -1, i32 0, ptr @pci_fixup_no_msi_no_pme }, section ".pci_fixup_final", align 4
@__pci_fixup_pci_fixup_no_msi_no_pme5807 = internal constant %struct.pci_fixup { i16 4824, i16 16399, i32 -1, i32 0, ptr @pci_fixup_no_msi_no_pme }, section ".pci_fixup_final", align 4
@__pci_fixup_apex_pci_fixup_class5814 = internal constant %struct.pci_fixup { i16 6849, i16 2202, i32 0, i32 8, ptr @apex_pci_fixup_class }, section ".pci_fixup_header", align 4
@__pci_fixup_pci_fixup_pericom_acs_store_forward5859 = internal constant %struct.pci_fixup { i16 4824, i16 9220, i32 -1, i32 0, ptr @pci_fixup_pericom_acs_store_forward }, section ".pci_fixup_enable", align 4
@__pci_fixup_resumepci_fixup_pericom_acs_store_forward5861 = internal constant %struct.pci_fixup { i16 4824, i16 9220, i32 -1, i32 0, ptr @pci_fixup_pericom_acs_store_forward }, section ".pci_fixup_resume", align 4
@__pci_fixup_pci_fixup_pericom_acs_store_forward5863 = internal constant %struct.pci_fixup { i16 4824, i16 8964, i32 -1, i32 0, ptr @pci_fixup_pericom_acs_store_forward }, section ".pci_fixup_enable", align 4
@__pci_fixup_resumepci_fixup_pericom_acs_store_forward5865 = internal constant %struct.pci_fixup { i16 4824, i16 8964, i32 -1, i32 0, ptr @pci_fixup_pericom_acs_store_forward }, section ".pci_fixup_resume", align 4
@__pci_fixup_pci_fixup_pericom_acs_store_forward5867 = internal constant %struct.pci_fixup { i16 4824, i16 8963, i32 -1, i32 0, ptr @pci_fixup_pericom_acs_store_forward }, section ".pci_fixup_enable", align 4
@__pci_fixup_resumepci_fixup_pericom_acs_store_forward5869 = internal constant %struct.pci_fixup { i16 4824, i16 8963, i32 -1, i32 0, ptr @pci_fixup_pericom_acs_store_forward }, section ".pci_fixup_resume", align 4
@__pci_fixup_nvidia_ion_ahci_fixup5875 = internal constant %struct.pci_fixup { i16 4318, i16 2744, i32 -1, i32 0, ptr @nvidia_ion_ahci_fixup }, section ".pci_fixup_final", align 4
@__pci_fixup_rom_bar_overlap_defect5882 = internal constant %struct.pci_fixup { i16 -32634, i16 5427, i32 -1, i32 0, ptr @rom_bar_overlap_defect }, section ".pci_fixup_early", align 4
@__pci_fixup_rom_bar_overlap_defect5883 = internal constant %struct.pci_fixup { i16 -32634, i16 5430, i32 -1, i32 0, ptr @rom_bar_overlap_defect }, section ".pci_fixup_early", align 4
@__pci_fixup_rom_bar_overlap_defect5884 = internal constant %struct.pci_fixup { i16 -32634, i16 5431, i32 -1, i32 0, ptr @rom_bar_overlap_defect }, section ".pci_fixup_early", align 4
@__pci_fixup_rom_bar_overlap_defect5885 = internal constant %struct.pci_fixup { i16 -32634, i16 5432, i32 -1, i32 0, ptr @rom_bar_overlap_defect }, section ".pci_fixup_early", align 4
@initcall_debug = external dso_local local_unnamed_addr global i8, align 1
@fixup_debug_start._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 39, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"calling  %pS @ %i\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"fixup_debug_start\00", [46 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"drivers/pci/quirks.c\00", [43 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@fixup_debug_start._entry_ptr = internal global ptr @fixup_debug_start._entry, section ".printk_index", align 4
@fixup_debug_report._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.6, ptr @.str.2, i32 54, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%pS took %lld usecs\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"fixup_debug_report\00", [45 x i8] zeroinitializer }, align 32
@fixup_debug_report._entry_ptr = internal global ptr @fixup_debug_report._entry, section ".printk_index", align 4
@pci_cache_line_size = external dso_local local_unnamed_addr global i8, align 1
@pci_apply_final_quirks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.8, ptr @.str.2, i32 162, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\016PCI: CLS %u bytes\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pci_apply_final_quirks\00", [41 x i8] zeroinitializer }, align 32
@pci_apply_final_quirks._entry_ptr = internal global ptr @pci_apply_final_quirks._entry, section ".printk_index", align 4
@pci_apply_final_quirks._entry.9 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.8, ptr @.str.2, i32 181, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"CLS mismatch (%u != %u), using %u bytes\0A\00", [55 x i8] zeroinitializer }, align 32
@pci_apply_final_quirks._entry_ptr.11 = internal global ptr @pci_apply_final_quirks._entry.9, section ".printk_index", align 4
@pci_dfl_cache_line_size = external dso_local local_unnamed_addr global i8, align 1
@pci_apply_final_quirks._entry.12 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.8, ptr @.str.2, i32 188, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016PCI: CLS %u bytes, default %u\0A\00", [63 x i8] zeroinitializer }, align 32
@pci_apply_final_quirks._entry_ptr.14 = internal global ptr @pci_apply_final_quirks._entry.12, section ".printk_index", align 4
@quirk_passive_release._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.16, ptr @.str.2, i32 232, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"PIIX3: Enabling Passive Release\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"quirk_passive_release\00", [42 x i8] zeroinitializer }, align 32
@quirk_passive_release._entry_ptr = internal global ptr @quirk_passive_release._entry, section ".printk_index", align 4
@isa_dma_bridge_buggy = external dso_local local_unnamed_addr global i32, align 4
@quirk_isa_dma_hangs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str.2, i32 253, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Activating ISA DMA hang workarounds\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"quirk_isa_dma_hangs\00", [44 x i8] zeroinitializer }, align 32
@quirk_isa_dma_hangs._entry_ptr = internal global ptr @quirk_isa_dma_hangs._entry, section ".printk_index", align 4
@quirk_tigerpoint_bm_sts._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.20, ptr @.str.2, i32 282, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"[Firmware Bug]: TigerPoint LPC.BM_STS cleared\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"quirk_tigerpoint_bm_sts\00", [40 x i8] zeroinitializer }, align 32
@quirk_tigerpoint_bm_sts._entry_ptr = internal global ptr @quirk_tigerpoint_bm_sts._entry, section ".printk_index", align 4
@pci_pci_problems = external dso_local local_unnamed_addr global i32, align 4
@quirk_nopcipci._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.22, ptr @.str.2, i32 292, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Disabling direct PCI/PCI transfers\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"quirk_nopcipci\00", [17 x i8] zeroinitializer }, align 32
@quirk_nopcipci._entry_ptr = internal global ptr @quirk_nopcipci._entry, section ".printk_index", align 4
@quirk_nopciamd._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.24, ptr @.str.2, i32 305, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"Chipset erratum: Disabling direct PCI/AGP transfers\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"quirk_nopciamd\00", [17 x i8] zeroinitializer }, align 32
@quirk_nopciamd._entry_ptr = internal global ptr @quirk_nopciamd._entry, section ".printk_index", align 4
@quirk_triton._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.26, ptr @.str.2, i32 315, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Limiting direct PCI/PCI transfers\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"quirk_triton\00", [19 x i8] zeroinitializer }, align 32
@quirk_triton._entry_ptr = internal global ptr @quirk_triton._entry, section ".printk_index", align 4
@quirk_vialatency._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.28, ptr @.str.2, i32 384, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Applying VIA southbridge workaround\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"quirk_vialatency\00", [47 x i8] zeroinitializer }, align 32
@quirk_vialatency._entry_ptr = internal global ptr @quirk_vialatency._entry, section ".printk_index", align 4
@quirk_viaetbf._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.29, ptr @.str.2, i32 400, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"quirk_viaetbf\00", [18 x i8] zeroinitializer }, align 32
@quirk_viaetbf._entry_ptr = internal global ptr @quirk_viaetbf._entry, section ".printk_index", align 4
@quirk_vsfx._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.30, ptr @.str.2, i32 409, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"quirk_vsfx\00", [21 x i8] zeroinitializer }, align 32
@quirk_vsfx._entry_ptr = internal global ptr @quirk_vsfx._entry, section ".printk_index", align 4
@quirk_alimagik._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.31, ptr @.str.2, i32 423, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"quirk_alimagik\00", [17 x i8] zeroinitializer }, align 32
@quirk_alimagik._entry_ptr = internal global ptr @quirk_alimagik._entry, section ".printk_index", align 4
@quirk_natoma._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.32, ptr @.str.2, i32 434, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"quirk_natoma\00", [19 x i8] zeroinitializer }, align 32
@quirk_natoma._entry_ptr = internal global ptr @quirk_natoma._entry, section ".printk_index", align 4
@quirk_extend_bar_to_page._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.34, ptr @.str.2, i32 481, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"expanded BAR %d to page size: %pR\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"quirk_extend_bar_to_page\00", [39 x i8] zeroinitializer }, align 32
@quirk_extend_bar_to_page._entry_ptr = internal global ptr @quirk_extend_bar_to_page._entry, section ".printk_index", align 4
@.str.35 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"CS5536 ISA bridge\00", [46 x i8] zeroinitializer }, align 32
@quirk_cs5536_vsa._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.37, ptr @.str.2, i32 549, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"%s bug detected (incorrect header); workaround applied\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"quirk_cs5536_vsa\00", [47 x i8] zeroinitializer }, align 32
@quirk_cs5536_vsa._entry_ptr = internal global ptr @quirk_cs5536_vsa._entry, section ".printk_index", align 4
@quirk_io._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.39, ptr @.str.2, i32 528, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"[Firmware Bug]: %s quirk: reg 0x%x: %pR\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"quirk_io\00", [23 x i8] zeroinitializer }, align 32
@quirk_io._entry_ptr = internal global ptr @quirk_io._entry, section ".printk_index", align 4
@quirk_ati_exploding_mce._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.40, ptr @.str.41, ptr @.str.2, i32 585, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"ATI Northbridge, reserving I/O ports 0x3b0 to 0x3bb\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"quirk_ati_exploding_mce\00", [40 x i8] zeroinitializer }, align 32
@quirk_ati_exploding_mce._entry_ptr = internal global ptr @quirk_ati_exploding_mce._entry, section ".printk_index", align 4
@ioport_resource = external dso_local global %struct.resource, align 4
@.str.42 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RadeonIGP\00", [22 x i8] zeroinitializer }, align 32
@quirk_amd_nl_class._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.44, ptr @.str.2, i32 610, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"PCI class overridden (%#08x -> %#08x) so dwc3 driver can claim this instead of xhci\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"quirk_amd_nl_class\00", [45 x i8] zeroinitializer }, align 32
@quirk_amd_nl_class._entry_ptr = internal global ptr @quirk_amd_nl_class._entry, section ".printk_index", align 4
@quirk_synopsys_haps._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.45, ptr @.str.2, i32 632, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"quirk_synopsys_haps\00", [44 x i8] zeroinitializer }, align 32
@quirk_synopsys_haps._entry_ptr = internal global ptr @quirk_synopsys_haps._entry, section ".printk_index", align 4
@.str.46 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ali7101 ACPI\00", [19 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ali7101 SMB\00", [20 x i8] zeroinitializer }, align 32
@quirk_io_region._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.49, ptr @.str.2, i32 576, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"quirk: %pR claimed by %s\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"quirk_io_region\00", [16 x i8] zeroinitializer }, align 32
@quirk_io_region._entry_ptr = internal global ptr @quirk_io_region._entry, section ".printk_index", align 4
@.str.50 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"PIIX4 ACPI\00", [21 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"PIIX4 SMB\00", [22 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PIIX4 devres B\00", [17 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PIIX4 devres C\00", [17 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PIIX4 devres E\00", [17 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PIIX4 devres F\00", [17 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PIIX4 devres G\00", [17 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PIIX4 devres H\00", [17 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PIIX4 devres I\00", [17 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PIIX4 devres J\00", [17 x i8] zeroinitializer }, align 32
@piix4_io_quirk._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.60, ptr @.str.61, ptr @.str.2, i32 680, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%s PIO at %04x-%04x\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"piix4_io_quirk\00", [17 x i8] zeroinitializer }, align 32
@piix4_io_quirk._entry_ptr = internal global ptr @piix4_io_quirk._entry, section ".printk_index", align 4
@piix4_mem_quirk._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.62, ptr @.str.63, ptr @.str.2, i32 706, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"%s MMIO at %04x-%04x\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"piix4_mem_quirk\00", [16 x i8] zeroinitializer }, align 32
@piix4_mem_quirk._entry_ptr = internal global ptr @piix4_mem_quirk._entry, section ".printk_index", align 4
@.str.64 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"ICH4 ACPI/GPIO/TCO\00", [45 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ICH4 GPIO\00", [22 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"LPC Generic IO decode 1\00", [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"LPC Generic IO decode 2\00", [40 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"ICH6 ACPI/GPIO/TCO\00", [45 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ICH6 GPIO\00", [22 x i8] zeroinitializer }, align 32
@ich6_lpc_generic_decode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.60, ptr @.str.70, ptr @.str.2, i32 838, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"ich6_lpc_generic_decode\00", [40 x i8] zeroinitializer }, align 32
@ich6_lpc_generic_decode._entry_ptr = internal global ptr @ich6_lpc_generic_decode._entry, section ".printk_index", align 4
@.str.71 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"ICH7 LPC Generic IO decode 1\00", [35 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"ICH7 LPC Generic IO decode 2\00", [35 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"ICH7 LPC Generic IO decode 3\00", [35 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"ICH7 LPC Generic IO decode 4\00", [35 x i8] zeroinitializer }, align 32
@ich7_lpc_generic_decode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.76, ptr @.str.2, i32 874, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s PIO at %04x (mask %04x)\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"ich7_lpc_generic_decode\00", [40 x i8] zeroinitializer }, align 32
@ich7_lpc_generic_decode._entry_ptr = internal global ptr @ich7_lpc_generic_decode._entry, section ".printk_index", align 4
@.str.77 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"vt82c586 ACPI\00", [18 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"vt82c686 HW-mon\00", [16 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"vt82c686 SMB\00", [19 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"vt8235 PM\00", [22 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"vt8235 SMB\00", [21 x i8] zeroinitializer }, align 32
@quirk_xio2000a._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.82, ptr @.str.83, ptr @.str.2, i32 953, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"TI XIO2000a quirk detected; secondary bus fast back-to-back transfers disabled\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"quirk_xio2000a\00", [17 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@quirk_xio2000a._entry_ptr = internal global ptr @quirk_xio2000a._entry, section ".printk_index", align 4
@quirk_amd_8131_mmrbc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.85, ptr @.str.86, ptr @.str.2, i32 1050, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"AMD8131 rev %x detected; disabling PCI-X MMRBC\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"quirk_amd_8131_mmrbc\00", [43 x i8] zeroinitializer }, align 32
@quirk_amd_8131_mmrbc._entry_ptr = internal global ptr @quirk_amd_8131_mmrbc._entry, section ".printk_index", align 4
@via_vlink_dev_lo = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@via_vlink_dev_hi = internal global { i32, [28 x i8] } { i32 18, [28 x i8] zeroinitializer }, align 32
@quirk_via_vlink._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.88, ptr @.str.2, i32 1153, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"VIA VLink IRQ fixup, from %d to %d\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"quirk_via_vlink\00", [16 x i8] zeroinitializer }, align 32
@quirk_via_vlink._entry_ptr = internal global ptr @quirk_via_vlink._entry, section ".printk_index", align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@quirk_amd_ordering._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.90, ptr @.str.2, i32 1200, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"BIOS failed to enable PCI standards compliance; fixing this error\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"quirk_amd_ordering\00", [45 x i8] zeroinitializer }, align 32
@quirk_amd_ordering._entry_ptr = internal global ptr @quirk_amd_ordering._entry, section ".printk_index", align 4
@quirk_mediagx_master._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.91, ptr @.str.92, ptr @.str.2, i32 1253, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"Fixup for MediaGX/Geode Slave Disconnect Boundary (0x41=0x%02x)\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"quirk_mediagx_master\00", [43 x i8] zeroinitializer }, align 32
@quirk_mediagx_master._entry_ptr = internal global ptr @quirk_mediagx_master._entry, section ".printk_index", align 4
@quirk_disable_pxb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.93, ptr @.str.94, ptr @.str.2, i32 1275, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"C0 revision 450NX. Disabling PCI restreaming\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"quirk_disable_pxb\00", [46 x i8] zeroinitializer }, align 32
@quirk_disable_pxb._entry_ptr = internal global ptr @quirk_disable_pxb._entry, section ".printk_index", align 4
@quirk_amd_ide_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.96, ptr @.str.2, i32 1295, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"set SATA to AHCI mode\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"quirk_amd_ide_mode\00", [45 x i8] zeroinitializer }, align 32
@quirk_amd_ide_mode._entry_ptr = internal global ptr @quirk_amd_ide_mode._entry, section ".printk_index", align 4
@quirk_ide_samemode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.98, ptr @.str.2, i32 1329, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"IDE mode mismatch; forcing legacy mode\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"quirk_ide_samemode\00", [45 x i8] zeroinitializer }, align 32
@quirk_ide_samemode._entry_ptr = internal global ptr @quirk_ide_samemode._entry, section ".printk_index", align 4
@asus_hides_smbus = internal global { i1, [31 x i8] } zeroinitializer, align 32
@asus_hides_smbus_lpc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.100, ptr @.str.2, i32 1538, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"i801 SMBus device continues to play 'hide and seek'! 0x%x\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"asus_hides_smbus_lpc\00", [43 x i8] zeroinitializer }, align 32
@asus_hides_smbus_lpc._entry_ptr = internal global ptr @asus_hides_smbus_lpc._entry, section ".printk_index", align 4
@asus_hides_smbus_lpc._entry.101 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.102, ptr @.str.100, ptr @.str.2, i32 1540, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Enabled i801 SMBus device\0A\00", [37 x i8] zeroinitializer }, align 32
@asus_hides_smbus_lpc._entry_ptr.103 = internal global ptr @asus_hides_smbus_lpc._entry.101, section ".printk_index", align 4
@asus_rcba_base = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@asus_hides_smbus_lpc_ich6_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.104, ptr @.str.105, ptr @.str.2, i32 1596, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Enabled ICH6/i801 SMBus device\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"asus_hides_smbus_lpc_ich6_resume\00", [63 x i8] zeroinitializer }, align 32
@asus_hides_smbus_lpc_ich6_resume._entry_ptr = internal global ptr @asus_hides_smbus_lpc_ich6_resume._entry, section ".printk_index", align 4
@quirk_sis_96x_smbus._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.106, ptr @.str.107, ptr @.str.2, i32 1616, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Enabling SiS 96x SMBus\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"quirk_sis_96x_smbus\00", [44 x i8] zeroinitializer }, align 32
@quirk_sis_96x_smbus._entry_ptr = internal global ptr @quirk_sis_96x_smbus._entry, section ".printk_index", align 4
@asus_hides_ac97_lpc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.109, ptr @.str.2, i32 1688, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"Onboard AC97/MC97 devices continue to play 'hide and seek'! 0x%x\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"asus_hides_ac97_lpc\00", [44 x i8] zeroinitializer }, align 32
@asus_hides_ac97_lpc._entry_ptr = internal global ptr @asus_hides_ac97_lpc._entry, section ".printk_index", align 4
@asus_hides_ac97_lpc._entry.110 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.111, ptr @.str.109, ptr @.str.2, i32 1690, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Enabled onboard AC97/MC97 devices\0A\00", [61 x i8] zeroinitializer }, align 32
@asus_hides_ac97_lpc._entry_ptr.112 = internal global ptr @asus_hides_ac97_lpc._entry.110, section ".printk_index", align 4
@quirk_jmicron_async_suspend._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.113, ptr @.str.114, ptr @.str.2, i32 1780, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"async suspend disabled to avoid multi-function power-on ordering issue\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"quirk_jmicron_async_suspend\00", [36 x i8] zeroinitializer }, align 32
@quirk_jmicron_async_suspend._entry_ptr = internal global ptr @quirk_jmicron_async_suspend._entry, section ".printk_index", align 4
@.str.115 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"dma-can-stall\00", [18 x i8] zeroinitializer }, align 32
@__const.quirk_huawei_pcie_sva.properties = private unnamed_addr constant [2 x { ptr, i32, i8, [3 x i8], i32, %union.anon.85 }] [{ ptr, i32, i8, [3 x i8], i32, %union.anon.85 } { ptr @.str.115, i32 0, i8 1, [3 x i8] zeroinitializer, i32 0, %union.anon.85 zeroinitializer }, { ptr, i32, i8, [3 x i8], i32, %union.anon.85 } zeroinitializer], align 8
@quirk_huawei_pcie_sva._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.116, ptr @.str.117, ptr @.str.2, i32 1854, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"could not add stall property\00", [35 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"quirk_huawei_pcie_sva\00", [42 x i8] zeroinitializer }, align 32
@quirk_huawei_pcie_sva._entry_ptr = internal global ptr @quirk_huawei_pcie_sva._entry, section ".printk_index", align 4
@quirk_pcie_pxh._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.118, ptr @.str.119, ptr @.str.2, i32 1870, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"PXH quirk detected; SHPC device MSI disabled\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"quirk_pcie_pxh\00", [17 x i8] zeroinitializer }, align 32
@quirk_pcie_pxh._entry_ptr = internal global ptr @quirk_pcie_pxh._entry, section ".printk_index", align 4
@pci_pm_d3hot_delay = external dso_local local_unnamed_addr global i32, align 4
@quirk_d3hot_delay._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.120, ptr @.str.121, ptr @.str.2, i32 1916, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"extending delay after power-on from D3hot to %d msec\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"quirk_d3hot_delay\00", [46 x i8] zeroinitializer }, align 32
@quirk_d3hot_delay._entry_ptr = internal global ptr @quirk_d3hot_delay._entry, section ".printk_index", align 4
@quirk_plx_pci9050._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.122, ptr @.str.123, ptr @.str.2, i32 2222, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"Re-allocating PLX PCI 9050 BAR %u to length 256 to avoid bit 7 bug\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"quirk_plx_pci9050\00", [46 x i8] zeroinitializer }, align 32
@quirk_plx_pci9050._entry_ptr = internal global ptr @quirk_plx_pci9050._entry, section ".printk_index", align 4
@quirk_netmos._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.124, ptr @.str.125, ptr @.str.2, i32 2270, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [91 x i8], [37 x i8] } { [91 x i8] c"Netmos %04x (%u parallel, %u serial); changing class SERIAL to OTHER (use parport_serial)\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"quirk_netmos\00", [19 x i8] zeroinitializer }, align 32
@quirk_netmos._entry_ptr = internal global ptr @quirk_netmos._entry, section ".printk_index", align 4
@quirk_e100_interrupt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.127, ptr @.str.2, i32 2330, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Can't map e100 registers\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"quirk_e100_interrupt\00", [43 x i8] zeroinitializer }, align 32
@quirk_e100_interrupt._entry_ptr = internal global ptr @quirk_e100_interrupt._entry, section ".printk_index", align 4
@quirk_e100_interrupt._entry.128 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.127, ptr @.str.2, i32 2336, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Firmware left e100 interrupts enabled; disabling\0A\00", [46 x i8] zeroinitializer }, align 32
@quirk_e100_interrupt._entry_ptr.130 = internal global ptr @quirk_e100_interrupt._entry.128, section ".printk_index", align 4
@quirk_disable_aspm_l0s._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.131, ptr @.str.132, ptr @.str.2, i32 2351, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Disabling L0s\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"quirk_disable_aspm_l0s\00", [41 x i8] zeroinitializer }, align 32
@quirk_disable_aspm_l0s._entry_ptr = internal global ptr @quirk_disable_aspm_l0s._entry, section ".printk_index", align 4
@quirk_disable_aspm_l0s_l1._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.133, ptr @.str.134, ptr @.str.2, i32 2371, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Disabling ASPM L0s/L1\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"quirk_disable_aspm_l0s_l1\00", [38 x i8] zeroinitializer }, align 32
@quirk_disable_aspm_l0s_l1._entry_ptr = internal global ptr @quirk_disable_aspm_l0s_l1._entry, section ".printk_index", align 4
@quirk_enable_clear_retrain_link._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.136, ptr @.str.2, i32 2393, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Enable PCIe Retrain Link quirk\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"quirk_enable_clear_retrain_link\00", [32 x i8] zeroinitializer }, align 32
@quirk_enable_clear_retrain_link._entry_ptr = internal global ptr @quirk_enable_clear_retrain_link._entry, section ".printk_index", align 4
@fixup_rev1_53c810._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.137, ptr @.str.138, ptr @.str.2, i32 2412, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"NCR 53c810 rev 1 PCI class overridden (%#08x -> %#08x)\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"fixup_rev1_53c810\00", [46 x i8] zeroinitializer }, align 32
@fixup_rev1_53c810._entry_ptr = internal global ptr @fixup_rev1_53c810._entry, section ".printk_index", align 4
@quirk_p64h2_1k_io._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.140, ptr @.str.2, i32 2424, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Enable I/O Space to 1KB granularity\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"quirk_p64h2_1k_io\00", [46 x i8] zeroinitializer }, align 32
@quirk_p64h2_1k_io._entry_ptr = internal global ptr @quirk_p64h2_1k_io._entry, section ".printk_index", align 4
@quirk_nvidia_ck804_pcie_aer_ext_cap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.142, ptr @.str.2, i32 2442, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Linking AER extended capability\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"quirk_nvidia_ck804_pcie_aer_ext_cap\00", [60 x i8] zeroinitializer }, align 32
@quirk_nvidia_ck804_pcie_aer_ext_cap._entry_ptr = internal global ptr @quirk_nvidia_ck804_pcie_aer_ext_cap._entry, section ".printk_index", align 4
@quirk_via_cx700_pci_parking_caching._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.143, ptr @.str.144, ptr @.str.2, i32 2482, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Disabling VIA CX700 PCI parking\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"quirk_via_cx700_pci_parking_caching\00", [60 x i8] zeroinitializer }, align 32
@quirk_via_cx700_pci_parking_caching._entry_ptr = internal global ptr @quirk_via_cx700_pci_parking_caching._entry, section ".printk_index", align 4
@quirk_via_cx700_pci_parking_caching._entry.145 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.146, ptr @.str.144, ptr @.str.2, i32 2497, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Disabling VIA CX700 PCI caching\0A\00", [63 x i8] zeroinitializer }, align 32
@quirk_via_cx700_pci_parking_caching._entry_ptr.147 = internal global ptr @quirk_via_cx700_pci_parking_caching._entry.145, section ".printk_index", align 4
@quirk_unhide_mch_dev6._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.148, ptr @.str.149, ptr @.str.2, i32 2531, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Enabling MCH 'Overflow' Device\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"quirk_unhide_mch_dev6\00", [42 x i8] zeroinitializer }, align 32
@quirk_unhide_mch_dev6._entry_ptr = internal global ptr @quirk_unhide_mch_dev6._entry, section ".printk_index", align 4
@quirk_disable_all_msi._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.151, ptr @.str.2, i32 2551, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"MSI quirk detected; MSI disabled\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"quirk_disable_all_msi\00", [42 x i8] zeroinitializer }, align 32
@quirk_disable_all_msi._entry_ptr = internal global ptr @quirk_disable_all_msi._entry, section ".printk_index", align 4
@quirk_disable_msi._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.152, ptr @.str.153, ptr @.str.2, i32 2567, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"MSI quirk detected; subordinate MSI disabled\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"quirk_disable_msi\00", [46 x i8] zeroinitializer }, align 32
@quirk_disable_msi._entry_ptr = internal global ptr @quirk_disable_msi._entry, section ".printk_index", align 4
@msi_ht_cap_enabled._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.154, ptr @.str.155, ptr @.str.2, i32 2611, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Found %s HT MSI Mapping\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"msi_ht_cap_enabled\00", [45 x i8] zeroinitializer }, align 32
@msi_ht_cap_enabled._entry_ptr = internal global ptr @msi_ht_cap_enabled._entry, section ".printk_index", align 4
@.str.156 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"enabled\00", [24 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"disabled\00", [23 x i8] zeroinitializer }, align 32
@ht_enable_msi_mapping._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.158, ptr @.str.159, ptr @.str.2, i32 2663, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Enabling HT MSI Mapping\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"ht_enable_msi_mapping\00", [42 x i8] zeroinitializer }, align 32
@ht_enable_msi_mapping._entry_ptr = internal global ptr @ht_enable_msi_mapping._entry, section ".printk_index", align 4
@nvenet_msi_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.162, ptr @.str.163, ptr @.str.2, i32 2690, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Disabling MSI for MCP55 NIC on P5N32-SLI\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"nvenet_msi_disable\00", [45 x i8] zeroinitializer }, align 32
@nvenet_msi_disable._entry_ptr = internal global ptr @nvenet_msi_disable._entry, section ".printk_index", align 4
@nvbridge_check_legacy_irq_routing._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.165, ptr @.str.2, i32 2771, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016Rewriting IRQ routing register on MCP55\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"nvbridge_check_legacy_irq_routing\00", [62 x i8] zeroinitializer }, align 32
@nvbridge_check_legacy_irq_routing._entry_ptr = internal global ptr @nvbridge_check_legacy_irq_routing._entry, section ".printk_index", align 4
@__nv_msi_ht_cap_quirk._entry = internal constant %struct.pi_entry { ptr @.str.166, ptr @.str.167, ptr @.str.2, i32 2951, ptr @.str.84, ptr @.str.4 }, align 1
@.str.166 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"nv_msi_ht_cap_quirk didn't locate host bridge\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"__nv_msi_ht_cap_quirk\00", [42 x i8] zeroinitializer }, align 32
@__nv_msi_ht_cap_quirk._entry_ptr = internal global ptr @__nv_msi_ht_cap_quirk._entry, section ".printk_index", align 4
@ht_disable_msi_mapping._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.169, ptr @.str.2, i32 2918, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Disabling HT MSI Mapping\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"ht_disable_msi_mapping\00", [41 x i8] zeroinitializer }, align 32
@ht_disable_msi_mapping._entry_ptr = internal global ptr @ht_disable_msi_mapping._entry, section ".printk_index", align 4
@quirk_msi_intx_disable_qca_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.170, ptr @.str.171, ptr @.str.2, i32 3021, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"set MSI_INTX_DISABLE_BUG flag\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"quirk_msi_intx_disable_qca_bug\00", [33 x i8] zeroinitializer }, align 32
@quirk_msi_intx_disable_qca_bug._entry_ptr = internal global ptr @quirk_msi_intx_disable_qca_bug._entry, section ".printk_index", align 4
@quirk_al_msi_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.172, ptr @.str.173, ptr @.str.2, i32 3098, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Disabling MSI/MSI-X\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"quirk_al_msi_disable\00", [43 x i8] zeroinitializer }, align 32
@quirk_al_msi_disable._entry_ptr = internal global ptr @quirk_al_msi_disable._entry, section ".printk_index", align 4
@ricoh_mmc_fixup_rl5c476._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.175, ptr @.str.2, i32 3169, ptr @.str.176, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"proprietary Ricoh MMC controller disabled (via CardBus function)\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"ricoh_mmc_fixup_rl5c476\00", [40 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\015\00", [29 x i8] zeroinitializer }, align 32
@ricoh_mmc_fixup_rl5c476._entry_ptr = internal global ptr @ricoh_mmc_fixup_rl5c476._entry, section ".printk_index", align 4
@ricoh_mmc_fixup_rl5c476._entry.177 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.178, ptr @.str.175, ptr @.str.2, i32 3170, ptr @.str.176, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"MMC cards are now supported by standard SDHCI controller\0A\00", [38 x i8] zeroinitializer }, align 32
@ricoh_mmc_fixup_rl5c476._entry_ptr.179 = internal global ptr @ricoh_mmc_fixup_rl5c476._entry.177, section ".printk_index", align 4
@ricoh_mmc_fixup_r5c832._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.181, ptr @.str.2, i32 3208, ptr @.str.176, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"MMC controller base frequency changed to 50Mhz.\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"ricoh_mmc_fixup_r5c832\00", [41 x i8] zeroinitializer }, align 32
@ricoh_mmc_fixup_r5c832._entry_ptr = internal global ptr @ricoh_mmc_fixup_r5c832._entry, section ".printk_index", align 4
@ricoh_mmc_fixup_r5c832._entry.182 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.181, ptr @.str.2, i32 3221, ptr @.str.176, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"proprietary Ricoh MMC controller disabled (via FireWire function)\0A\00", [61 x i8] zeroinitializer }, align 32
@ricoh_mmc_fixup_r5c832._entry_ptr.184 = internal global ptr @ricoh_mmc_fixup_r5c832._entry.182, section ".printk_index", align 4
@ricoh_mmc_fixup_r5c832._entry.185 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.178, ptr @.str.181, ptr @.str.2, i32 3222, ptr @.str.176, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@ricoh_mmc_fixup_r5c832._entry_ptr.186 = internal global ptr @ricoh_mmc_fixup_r5c832._entry.185, section ".printk_index", align 4
@fixup_ti816x_class._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.187, ptr @.str.188, ptr @.str.2, i32 3264, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"PCI class overridden (%#08x -> %#08x)\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"fixup_ti816x_class\00", [45 x i8] zeroinitializer }, align 32
@fixup_ti816x_class._entry_ptr = internal global ptr @fixup_ti816x_class._entry, section ".printk_index", align 4
@pcie_bus_config = external dso_local local_unnamed_addr global i32, align 4
@quirk_intel_mc_errata._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.189, ptr @.str.190, ptr @.str.2, i32 3309, ptr @.str.191, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"Error attempting to read the read completion coalescing register\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"quirk_intel_mc_errata\00", [42 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@quirk_intel_mc_errata._entry_ptr = internal global ptr @quirk_intel_mc_errata._entry, section ".printk_index", align 4
@quirk_intel_mc_errata._entry.192 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.193, ptr @.str.190, ptr @.str.2, i32 3320, ptr @.str.191, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"Error attempting to write the read completion coalescing register\0A\00", [61 x i8] zeroinitializer }, align 32
@quirk_intel_mc_errata._entry_ptr.194 = internal global ptr @quirk_intel_mc_errata._entry.192, section ".printk_index", align 4
@quirk_intel_mc_errata.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@quirk_intel_mc_errata._entry.195 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.196, ptr @.str.190, ptr @.str.2, i32 3324, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"\016Read completion coalescing disabled due to hardware erratum relating to 256B MPS\0A\00", [44 x i8] zeroinitializer }, align 32
@quirk_intel_mc_errata._entry_ptr.197 = internal global ptr @quirk_intel_mc_errata._entry.195, section ".printk_index", align 4
@disable_igfx_irq._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.199, ptr @.str.2, i32 3396, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"igfx quirk: Can't iomap PCI device\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"disable_igfx_irq\00", [47 x i8] zeroinitializer }, align 32
@disable_igfx_irq._entry_ptr = internal global ptr @disable_igfx_irq._entry, section ".printk_index", align 4
@disable_igfx_irq._entry.200 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.201, ptr @.str.199, ptr @.str.2, i32 3402, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"BIOS left Intel GPU interrupts enabled; disabling\0A\00", [45 x i8] zeroinitializer }, align 32
@disable_igfx_irq._entry_ptr.202 = internal global ptr @disable_igfx_irq._entry.200, section ".printk_index", align 4
@mellanox_check_broken_intx_masking._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.203, ptr @.str.204, ptr @.str.2, i32 3554, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Can't enable device memory\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"mellanox_check_broken_intx_masking\00", [61 x i8] zeroinitializer }, align 32
@mellanox_check_broken_intx_masking._entry_ptr = internal global ptr @mellanox_check_broken_intx_masking._entry, section ".printk_index", align 4
@mellanox_check_broken_intx_masking._entry.205 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.206, ptr @.str.204, ptr @.str.2, i32 3560, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Can't map ConnectX-4 initialization segment\0A\00", [51 x i8] zeroinitializer }, align 32
@mellanox_check_broken_intx_masking._entry_ptr.207 = internal global ptr @mellanox_check_broken_intx_masking._entry.205, section ".printk_index", align 4
@mellanox_check_broken_intx_masking._entry.208 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.209, ptr @.str.204, ptr @.str.2, i32 3574, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [122 x i8], [38 x i8] } { [122 x i8] c"ConnectX-4: FW %u.%u.%u doesn't support INTx masking, disabling. Please upgrade FW to %d.14.1100 and up for INTx support\0A\00", [38 x i8] zeroinitializer }, align 32
@mellanox_check_broken_intx_masking._entry_ptr.210 = internal global ptr @mellanox_check_broken_intx_masking._entry.208, section ".printk_index", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@reset_ivb_igd._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.211, ptr @.str.212, ptr @.str.2, i32 3802, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"timeout during reset\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"reset_ivb_igd\00", [18 x i8] zeroinitializer }, align 32
@reset_ivb_igd._entry_ptr = internal global ptr @reset_ivb_igd._entry, section ".printk_index", align 4
@nvme_disable_and_flr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.213, ptr @.str.214, ptr @.str.2, i32 3945, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"Timeout waiting for NVMe ready status to clear after disable\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"nvme_disable_and_flr\00", [43 x i8] zeroinitializer }, align 32
@nvme_disable_and_flr._entry_ptr = internal global ptr @nvme_disable_and_flr._entry, section ".printk_index", align 4
@reset_hinic_vf_dev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.215, ptr @.str.216, ptr @.str.2, i32 4031, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Reset dev timeout, FLR ack reg: %#010x\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"reset_hinic_vf_dev\00", [45 x i8] zeroinitializer }, align 32
@reset_hinic_vf_dev._entry_ptr = internal global ptr @reset_hinic_vf_dev._entry, section ".printk_index", align 4
@fixed_dma_alias_tbl = internal constant { [3 x %struct.pci_device_id], [32 x i8] } { [3 x %struct.pci_device_id] [%struct.pci_device_id { i32 36869, i32 645, i32 36869, i32 699, i32 0, i32 0, i32 8, i32 0 }, %struct.pci_device_id { i32 36869, i32 645, i32 36869, i32 700, i32 0, i32 0, i32 8, i32 0 }, %struct.pci_device_id zeroinitializer], [32 x i8] zeroinitializer }, align 32
@quirk_tw686x_class._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.218, ptr @.str.2, i32 4286, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"TW686x PCI class overridden (%#08x -> %#08x)\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"quirk_tw686x_class\00", [45 x i8] zeroinitializer }, align 32
@quirk_tw686x_class._entry_ptr = internal global ptr @quirk_tw686x_class._entry, section ".printk_index", align 4
@quirk_relaxedordering_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.219, ptr @.str.220, ptr @.str.2, i32 4305, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"Disable Relaxed Ordering Attributes to avoid PCIe Completion erratum\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"quirk_relaxedordering_disable\00", [34 x i8] zeroinitializer }, align 32
@quirk_relaxedordering_disable._entry_ptr = internal global ptr @quirk_relaxedordering_disable._entry, section ".printk_index", align 4
@quirk_disable_root_port_attributes._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.221, ptr @.str.222, ptr @.str.2, i32 4414, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"PCIe Completion erratum may cause device errors\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"quirk_disable_root_port_attributes\00", [61 x i8] zeroinitializer }, align 32
@quirk_disable_root_port_attributes._entry_ptr = internal global ptr @quirk_disable_root_port_attributes._entry, section ".printk_index", align 4
@quirk_disable_root_port_attributes._entry.223 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.224, ptr @.str.222, ptr @.str.2, i32 4419, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [87 x i8], [41 x i8] } { [87 x i8] c"Disabling No Snoop/Relaxed Ordering Attributes to avoid PCIe Completion erratum in %s\0A\00", [41 x i8] zeroinitializer }, align 32
@quirk_disable_root_port_attributes._entry_ptr.225 = internal global ptr @quirk_disable_root_port_attributes._entry.223, section ".printk_index", align 4
@pci_quirk_intel_pch_acs_ids = internal constant { [119 x i16], [50 x i8] } { [119 x i16] [i16 15170, i16 15171, i16 15172, i16 15173, i16 15174, i16 15175, i16 15176, i16 15177, i16 15178, i16 15179, i16 15180, i16 15181, i16 15182, i16 15183, i16 15184, i16 15185, i16 7184, i16 7185, i16 7186, i16 7187, i16 7188, i16 7189, i16 7190, i16 7191, i16 7192, i16 7193, i16 7194, i16 7195, i16 7196, i16 7197, i16 7198, i16 7199, i16 7696, i16 7697, i16 7698, i16 7699, i16 7700, i16 7701, i16 7702, i16 7703, i16 7704, i16 7705, i16 7706, i16 7707, i16 7708, i16 7709, i16 7710, i16 7711, i16 -29680, i16 -29679, i16 -29678, i16 -29677, i16 -29676, i16 -29675, i16 -29674, i16 -29673, i16 -29672, i16 -29671, i16 -29670, i16 -29669, i16 -29668, i16 -29667, i16 -29666, i16 -29665, i16 -25584, i16 -25583, i16 -25582, i16 -25581, i16 -25580, i16 -25579, i16 -25578, i16 -25577, i16 -25576, i16 -25575, i16 -25574, i16 -25573, i16 -25456, i16 -25455, i16 -25454, i16 -25453, i16 -25452, i16 -25451, i16 -25450, i16 -25449, i16 -25448, i16 -25447, i16 -25446, i16 -25445, i16 7440, i16 7442, i16 7444, i16 7446, i16 7448, i16 7450, i16 7452, i16 7454, i16 -29424, i16 -29423, i16 -29422, i16 -29421, i16 -29420, i16 -29419, i16 -29418, i16 -29417, i16 -29416, i16 -29415, i16 -29414, i16 -29413, i16 -29412, i16 -29411, i16 -29410, i16 -29552, i16 -29550, i16 -29548, i16 -29546, i16 -29544, i16 -29542, i16 -29540, i16 -29538], [50 x i8] zeroinitializer }, align 32
@pci_quirk_enable_intel_pch_acs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.227, ptr @.str.2, i32 5092, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Failed to enable Intel PCH ACS quirk\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"pci_quirk_enable_intel_pch_acs\00", [33 x i8] zeroinitializer }, align 32
@pci_quirk_enable_intel_pch_acs._entry_ptr = internal global ptr @pci_quirk_enable_intel_pch_acs._entry, section ".printk_index", align 4
@pci_quirk_enable_intel_pch_acs._entry.228 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.227, ptr @.str.2, i32 5100, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Intel PCH root port ACS workaround enabled\0A\00", [52 x i8] zeroinitializer }, align 32
@pci_quirk_enable_intel_pch_acs._entry_ptr.230 = internal global ptr @pci_quirk_enable_intel_pch_acs._entry.228, section ".printk_index", align 4
@pci_quirk_enable_intel_lpc_acs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.231, ptr @.str.232, ptr @.str.2, i32 5046, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Disabling UPDCR peer decodes\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"pci_quirk_enable_intel_lpc_acs\00", [33 x i8] zeroinitializer }, align 32
@pci_quirk_enable_intel_lpc_acs._entry_ptr = internal global ptr @pci_quirk_enable_intel_lpc_acs._entry, section ".printk_index", align 4
@pci_quirk_enable_intel_rp_mpc_acs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.234, ptr @.str.2, i32 5073, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Enabling MPC IRBNCE\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"pci_quirk_enable_intel_rp_mpc_acs\00", [62 x i8] zeroinitializer }, align 32
@pci_quirk_enable_intel_rp_mpc_acs._entry_ptr = internal global ptr @pci_quirk_enable_intel_rp_mpc_acs._entry, section ".printk_index", align 4
@pci_quirk_enable_intel_spt_pch_acs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.235, ptr @.str.236, ptr @.str.2, i32 5130, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Intel SPT PCH root port ACS workaround enabled\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"pci_quirk_enable_intel_spt_pch_acs\00", [61 x i8] zeroinitializer }, align 32
@pci_quirk_enable_intel_spt_pch_acs._entry_ptr = internal global ptr @pci_quirk_enable_intel_spt_pch_acs._entry, section ".printk_index", align 4
@pci_quirk_disable_intel_spt_pch_acs_redir._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.237, ptr @.str.238, ptr @.str.2, i32 5154, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"Intel SPT PCH root port workaround: disabled ACS redirect\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"pci_quirk_disable_intel_spt_pch_acs_redir\00", [54 x i8] zeroinitializer }, align 32
@pci_quirk_disable_intel_spt_pch_acs_redir._entry_ptr = internal global ptr @pci_quirk_disable_intel_spt_pch_acs_redir._entry, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@quirk_no_ext_tags._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.240, ptr @.str.2, i32 5327, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"disabling Extended Tags (this device can't handle them)\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"quirk_no_ext_tags\00", [46 x i8] zeroinitializer }, align 32
@quirk_no_ext_tags._entry_ptr = internal global ptr @quirk_no_ext_tags._entry, section ".printk_index", align 4
@quirk_amd_harvest_no_ats._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.241, ptr @.str.242, ptr @.str.2, i32 5359, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"disabling ATS\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"quirk_amd_harvest_no_ats\00", [39 x i8] zeroinitializer }, align 32
@quirk_amd_harvest_no_ats._entry_ptr = internal global ptr @quirk_amd_harvest_no_ats._entry, section ".printk_index", align 4
@pci_create_device_link._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.243, ptr @.str.244, ptr @.str.2, i32 5421, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"D0 power state depends on %s\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pci_create_device_link\00", [41 x i8] zeroinitializer }, align 32
@pci_create_device_link._entry_ptr = internal global ptr @pci_create_device_link._entry, section ".printk_index", align 4
@pci_create_device_link._entry.245 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.246, ptr @.str.244, ptr @.str.2, i32 5424, ptr @.str.191, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Cannot enforce power dependency on %s\0A\00", [57 x i8] zeroinitializer }, align 32
@pci_create_device_link._entry_ptr.247 = internal global ptr @pci_create_device_link._entry.245, section ".printk_index", align 4
@quirk_nvidia_hda._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.248, ptr @.str.249, ptr @.str.2, i32 5494, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Enabling HDA controller\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"quirk_nvidia_hda\00", [47 x i8] zeroinitializer }, align 32
@quirk_nvidia_hda._entry_ptr = internal global ptr @quirk_nvidia_hda._entry, section ".printk_index", align 4
@quirk_switchtec_ntb_dma_alias._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.250, ptr @.str.251, ptr @.str.2, i32 5578, ptr @.str.191, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Cannot enable Switchtec device\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"quirk_switchtec_ntb_dma_alias\00", [34 x i8] zeroinitializer }, align 32
@quirk_switchtec_ntb_dma_alias._entry_ptr = internal global ptr @quirk_switchtec_ntb_dma_alias._entry, section ".printk_index", align 4
@quirk_switchtec_ntb_dma_alias._entry.252 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.253, ptr @.str.251, ptr @.str.2, i32 5585, ptr @.str.191, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Cannot iomap Switchtec device\0A\00", [33 x i8] zeroinitializer }, align 32
@quirk_switchtec_ntb_dma_alias._entry_ptr.254 = internal global ptr @quirk_switchtec_ntb_dma_alias._entry.252, section ".printk_index", align 4
@quirk_switchtec_ntb_dma_alias._entry.255 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.256, ptr @.str.251, ptr @.str.2, i32 5589, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Setting Switchtec proxy ID aliases\0A\00", [60 x i8] zeroinitializer }, align 32
@quirk_switchtec_ntb_dma_alias._entry_ptr.257 = internal global ptr @quirk_switchtec_ntb_dma_alias._entry.255, section ".printk_index", align 4
@quirk_switchtec_ntb_dma_alias.__UNIQUE_ID_ddebug294 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.258, ptr @.str.251, ptr @.str.2, ptr @.str.259, i8 5, i8 122, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.258 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"quirks\00", [25 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Processing partition %d\0A\00", [39 x i8] zeroinitializer }, align 32
@quirk_switchtec_ntb_dma_alias._entry.260 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.261, ptr @.str.251, ptr @.str.2, i32 5614, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Partition %d table_sz 0\0A\00", [39 x i8] zeroinitializer }, align 32
@quirk_switchtec_ntb_dma_alias._entry_ptr.262 = internal global ptr @quirk_switchtec_ntb_dma_alias._entry.260, section ".printk_index", align 4
@quirk_switchtec_ntb_dma_alias._entry.263 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.264, ptr @.str.251, ptr @.str.2, i32 5621, ptr @.str.84, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Invalid Switchtec partition %d table_sz %d\0A\00", [52 x i8] zeroinitializer }, align 32
@quirk_switchtec_ntb_dma_alias._entry_ptr.265 = internal global ptr @quirk_switchtec_ntb_dma_alias._entry.263, section ".printk_index", align 4
@quirk_switchtec_ntb_dma_alias.__UNIQUE_ID_ddebug295 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.258, ptr @.str.251, ptr @.str.2, ptr @.str.266, i8 5, i8 -128, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.266 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Aliasing Partition %d Proxy ID %02x.%d\0A\00", [56 x i8] zeroinitializer }, align 32
@quirk_plx_ntb_dma_alias._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.267, ptr @.str.268, ptr @.str.2, i32 5711, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Setting PLX NTB proxy ID aliases\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"quirk_plx_ntb_dma_alias\00", [40 x i8] zeroinitializer }, align 32
@quirk_plx_ntb_dma_alias._entry_ptr = internal global ptr @quirk_plx_ntb_dma_alias._entry, section ".printk_index", align 4
@quirk_reset_lenovo_thinkpad_p50_nvgpu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.269, ptr @.str.270, ptr @.str.2, i32 5753, ptr @.str.191, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Can't map MMIO space\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"quirk_reset_lenovo_thinkpad_p50_nvgpu\00", [58 x i8] zeroinitializer }, align 32
@quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr = internal global ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry, section ".printk_index", align 4
@quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.271 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.272, ptr @.str.270, ptr @.str.2, i32 5762, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"[Firmware Bug]: GPU left initialized by EFI, resetting\0A\00", [40 x i8] zeroinitializer }, align 32
@quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr.273 = internal global ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.271, section ".printk_index", align 4
@quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.274 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.275, ptr @.str.270, ptr @.str.2, i32 5765, ptr @.str.191, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to reset GPU: %d\0A\00", [39 x i8] zeroinitializer }, align 32
@quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr.276 = internal global ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.274, section ".printk_index", align 4
@pci_fixup_no_d0_pme._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.277, ptr @.str.278, ptr @.str.2, i32 5782, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"PME# does not work under D0, disabling it\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"pci_fixup_no_d0_pme\00", [44 x i8] zeroinitializer }, align 32
@pci_fixup_no_d0_pme._entry_ptr = internal global ptr @pci_fixup_no_d0_pme._entry, section ".printk_index", align 4
@pci_fixup_no_msi_no_pme._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.279, ptr @.str.280, ptr @.str.2, i32 5800, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"MSI is not implemented on this device, disabling it\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"pci_fixup_no_msi_no_pme\00", [40 x i8] zeroinitializer }, align 32
@pci_fixup_no_msi_no_pme._entry_ptr = internal global ptr @pci_fixup_no_msi_no_pme._entry, section ".printk_index", align 4
@pci_fixup_no_msi_no_pme._entry.281 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.282, ptr @.str.280, ptr @.str.2, i32 5803, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"PME# is unreliable, disabling it\0A\00", [62 x i8] zeroinitializer }, align 32
@pci_fixup_no_msi_no_pme._entry_ptr.283 = internal global ptr @pci_fixup_no_msi_no_pme._entry.281, section ".printk_index", align 4
@pci_fixup_pericom_acs_store_forward._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.284, ptr @.str.285, ptr @.str.2, i32 5849, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"Setting PI7C9X2Gxxx store-forward mode to avoid ACS erratum\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"pci_fixup_pericom_acs_store_forward\00", [60 x i8] zeroinitializer }, align 32
@pci_fixup_pericom_acs_store_forward._entry_ptr = internal global ptr @pci_fixup_pericom_acs_store_forward._entry, section ".printk_index", align 4
@rom_bar_overlap_defect._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.286, ptr @.str.287, ptr @.str.2, i32 5879, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"working around ROM BAR overlap defect\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rom_bar_overlap_defect\00", [41 x i8] zeroinitializer }, align 32
@rom_bar_overlap_defect._entry_ptr = internal global ptr @rom_bar_overlap_defect._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [10 x i64] [i64 8, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7]
@__sancov_gen_cov_switch_values.288 = internal global [4 x i64] [i64 2, i64 4, i64 0, i64 2]
@__sancov_gen_cov_switch_values.289 = internal global [10 x i64] [i64 8, i64 16, i64 1670, i64 12404, i64 12553, i64 12615, i64 12663, i64 12839, i64 13111, i64 33329]
@__sancov_gen_cov_switch_values.290 = internal global [4 x i64] [i64 2, i64 3, i64 1, i64 4]
@__sancov_gen_cov_switch_values.291 = internal global [6 x i64] [i64 4, i64 16, i64 3601, i64 4156, i64 4163, i64 5197]
@__sancov_gen_cov_switch_values.292 = internal global [11 x i64] [i64 9, i64 16, i64 6704, i64 9520, i64 9548, i64 9565, i64 9568, i64 9584, i64 9616, i64 13120, i64 13696]
@__sancov_gen_cov_switch_values.293 = internal global [6 x i64] [i64 4, i64 16, i64 5670, i64 32805, i64 32880, i64 32904]
@__sancov_gen_cov_switch_values.294 = internal global [5 x i64] [i64 3, i64 16, i64 32915, i64 32945, i64 32946]
@__sancov_gen_cov_switch_values.295 = internal global [5 x i64] [i64 3, i64 16, i64 5969, i64 6177, i64 6295]
@__sancov_gen_cov_switch_values.296 = internal global [4 x i64] [i64 2, i64 16, i64 6219, i64 6250]
@__sancov_gen_cov_switch_values.297 = internal global [4 x i64] [i64 2, i64 16, i64 6274, i64 6519]
@__sancov_gen_cov_switch_values.298 = internal global [5 x i64] [i64 3, i64 16, i64 9584, i64 9592, i64 13120]
@__sancov_gen_cov_switch_values.299 = internal global [4 x i64] [i64 2, i64 16, i64 2188, i64 2192]
@__sancov_gen_cov_switch_values.300 = internal global [5 x i64] [i64 3, i64 16, i64 106, i64 4796, i64 4797]
@__sancov_gen_cov_switch_values.301 = internal global [6 x i64] [i64 4, i64 16, i64 4402, i64 9410, i64 13120, i64 28963]
@__sancov_gen_cov_switch_values.302 = internal global [11 x i64] [i64 9, i64 16, i64 9056, i64 9057, i64 9058, i64 9059, i64 9060, i64 9061, i64 9062, i64 9064, i64 9065]
@__sancov_gen_cov_switch_values.303 = internal global [4 x i64] [i64 2, i64 8, i64 33, i64 48]
@__sancov_gen_cov_switch_values.304 = internal global [7 x i64] [i64 5, i64 16, i64 38709, i64 38725, i64 38965, i64 38981, i64 38997]
@__sancov_gen_cov_switch_values.305 = internal global [43 x i64] [i64 41, i64 16, i64 4137, i64 4144, i64 4145, i64 4146, i64 4147, i64 4148, i64 4152, i64 4153, i64 4154, i64 4155, i64 4156, i64 4157, i64 4158, i64 4176, i64 4177, i64 4178, i64 4179, i64 4180, i64 4181, i64 4182, i64 4183, i64 4185, i64 4196, i64 4197, i64 4198, i64 4199, i64 4200, i64 4201, i64 4202, i64 4203, i64 4241, i64 4242, i64 4243, i64 4244, i64 4245, i64 4617, i64 4649, i64 9289, i64 9305, i64 9309, i64 10204]
@__sancov_gen_cov_switch_values.306 = internal global [16 x i64] [i64 14, i64 16, i64 4099, i64 4103, i64 25408, i64 25418, i64 25428, i64 25448, i64 25458, i64 26418, i64 26428, i64 26438, i64 26448, i64 26458, i64 26468, i64 26478]
@__sancov_gen_cov_switch_values.307 = internal global [4 x i64] [i64 2, i64 16, i64 4115, i64 4117]
@__sancov_gen_cov_switch_values.308 = internal global [6 x i64] [i64 4, i64 16, i64 5157, i64 5197, i64 6629, i64 32902]
@__sancov_gen_cov_switch_values.309 = internal global [5 x i64] [i64 3, i64 16, i64 52232, i64 52240, i64 52761]
@__sancov_gen_cov_switch_values.310 = internal global [4 x i64] [i64 2, i64 16, i64 44932, i64 47236]
@__sancov_gen_cov_switch_values.311 = internal global [4 x i64] [i64 2, i64 32, i64 4, i64 6]
@__sancov_gen_cov_switch_values.312 = internal global [34 x i64] [i64 32, i64 16, i64 1808, i64 1809, i64 1810, i64 1811, i64 1812, i64 1813, i64 1814, i64 1815, i64 1816, i64 1817, i64 1818, i64 1819, i64 1820, i64 1821, i64 1822, i64 1825, i64 1827, i64 1828, i64 1829, i64 1830, i64 1831, i64 1832, i64 1833, i64 1834, i64 1835, i64 1836, i64 1837, i64 1838, i64 1839, i64 1840, i64 1841, i64 1842]
@__sancov_gen_cov_switch_values.313 = internal global [58 x i64] [i64 56, i64 16, i64 40208, i64 40209, i64 40210, i64 40211, i64 40212, i64 40213, i64 40214, i64 40215, i64 40216, i64 40217, i64 40218, i64 40219, i64 41232, i64 41233, i64 41234, i64 41235, i64 41236, i64 41237, i64 41238, i64 41239, i64 41240, i64 41241, i64 41242, i64 41243, i64 41244, i64 41245, i64 41246, i64 41247, i64 41319, i64 41320, i64 41321, i64 41322, i64 41616, i64 41617, i64 41618, i64 41619, i64 41620, i64 41621, i64 41622, i64 41623, i64 41624, i64 41625, i64 41626, i64 41627, i64 41628, i64 41629, i64 41630, i64 41631, i64 41703, i64 41704, i64 41705, i64 41706, i64 41707, i64 41708, i64 41709, i64 41710]
@___asan_gen_.314 = private unnamed_addr constant [29 x i8] c"pci_apply_fixup_final_quirks\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [20 x i8] c"pci_dev_acs_enabled\00", align 1
@___asan_gen_.317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 4818, i32 3 }
@___asan_gen_.335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 39, i32 3 }
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 54, i32 3 }
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 162, i32 3 }
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 179, i32 4 }
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 187, i32 3 }
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 232, i32 4 }
@___asan_gen_.383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 253, i32 3 }
@___asan_gen_.392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 282, i32 3 }
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 292, i32 3 }
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 305, i32 3 }
@___asan_gen_.419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 315, i32 3 }
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 384, i32 2 }
@___asan_gen_.434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 400, i32 3 }
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 409, i32 3 }
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 423, i32 3 }
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 434, i32 3 }
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 480, i32 4 }
@___asan_gen_.464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 542, i32 22 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 548, i32 3 }
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 527, i32 2 }
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 585, i32 2 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 587, i32 2 }
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 609, i32 2 }
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 631, i32 3 }
@___asan_gen_.512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 652, i32 55 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 653, i32 57 }
@___asan_gen_.524 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 576, i32 3 }
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 719, i32 55 }
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 720, i32 57 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 725, i32 22 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 726, i32 22 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 732, i32 23 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 733, i32 24 }
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 737, i32 23 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 738, i32 24 }
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 740, i32 22 }
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 741, i32 22 }
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 680, i32 2 }
@___asan_gen_.572 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 706, i32 2 }
@___asan_gen_.575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 776, i32 6 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 781, i32 5 }
@___asan_gen_.581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 847, i32 37 }
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 848, i32 37 }
@___asan_gen_.587 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 801, i32 6 }
@___asan_gen_.590 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 806, i32 5 }
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 838, i32 2 }
@___asan_gen_.599 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 884, i32 37 }
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 885, i32 37 }
@___asan_gen_.605 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 886, i32 37 }
@___asan_gen_.608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 887, i32 37 }
@___asan_gen_.617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 874, i32 2 }
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 911, i32 5 }
@___asan_gen_.623 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 926, i32 6 }
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 928, i32 57 }
@___asan_gen_.629 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 939, i32 56 }
@___asan_gen_.632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 940, i32 57 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 953, i32 2 }
@___asan_gen_.653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1049, i32 3 }
@___asan_gen_.654 = private unnamed_addr constant [17 x i8] c"via_vlink_dev_lo\00", align 1
@___asan_gen_.656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1077, i32 12 }
@___asan_gen_.657 = private unnamed_addr constant [17 x i8] c"via_vlink_dev_hi\00", align 1
@___asan_gen_.659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1077, i32 35 }
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1152, i32 3 }
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1200, i32 3 }
@___asan_gen_.686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1252, i32 3 }
@___asan_gen_.695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1275, i32 3 }
@___asan_gen_.704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1295, i32 3 }
@___asan_gen_.713 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1329, i32 3 }
@___asan_gen_.714 = private unnamed_addr constant [17 x i8] c"asus_hides_smbus\00", align 1
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1537, i32 4 }
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1540, i32 4 }
@___asan_gen_.730 = private unnamed_addr constant [15 x i8] c"asus_rcba_base\00", align 1
@___asan_gen_.732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1559, i32 22 }
@___asan_gen_.741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1596, i32 2 }
@___asan_gen_.750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1616, i32 3 }
@___asan_gen_.759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1687, i32 4 }
@___asan_gen_.765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1690, i32 4 }
@___asan_gen_.774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1780, i32 3 }
@___asan_gen_.777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1839, i32 3 }
@___asan_gen_.786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1854, i32 3 }
@___asan_gen_.795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1870, i32 2 }
@___asan_gen_.804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 1915, i32 2 }
@___asan_gen_.813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2221, i32 4 }
@___asan_gen_.822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2269, i32 4 }
@___asan_gen_.831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2330, i32 3 }
@___asan_gen_.837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2336, i32 3 }
@___asan_gen_.846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2351, i32 2 }
@___asan_gen_.855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2371, i32 2 }
@___asan_gen_.864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2393, i32 2 }
@___asan_gen_.873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2411, i32 2 }
@___asan_gen_.882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2424, i32 3 }
@___asan_gen_.891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2442, i32 4 }
@___asan_gen_.900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2482, i32 4 }
@___asan_gen_.906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2497, i32 4 }
@___asan_gen_.915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2531, i32 3 }
@___asan_gen_.924 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2551, i32 2 }
@___asan_gen_.933 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2567, i32 3 }
@___asan_gen_.948 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2609, i32 4 }
@___asan_gen_.957 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2663, i32 4 }
@___asan_gen_.966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2690, i32 3 }
@___asan_gen_.975 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2771, i32 3 }
@___asan_gen_.981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2951, i32 3 }
@___asan_gen_.990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 2918, i32 4 }
@___asan_gen_.999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3021, i32 3 }
@___asan_gen_.1008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3098, i32 2 }
@___asan_gen_.1020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3169, i32 2 }
@___asan_gen_.1026 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3170, i32 2 }
@___asan_gen_.1035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3208, i32 3 }
@___asan_gen_.1041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3221, i32 2 }
@___asan_gen_.1044 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3222, i32 2 }
@___asan_gen_.1053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3263, i32 2 }
@___asan_gen_.1065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3309, i32 3 }
@___asan_gen_.1071 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3320, i32 3 }
@___asan_gen_.1077 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3324, i32 2 }
@___asan_gen_.1086 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3396, i32 3 }
@___asan_gen_.1092 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3402, i32 3 }
@___asan_gen_.1101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3554, i32 3 }
@___asan_gen_.1107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3560, i32 3 }
@___asan_gen_.1113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3572, i32 3 }
@___asan_gen_.1122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3802, i32 2 }
@___asan_gen_.1131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 3945, i32 5 }
@___asan_gen_.1140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 4031, i32 2 }
@___asan_gen_.1141 = private unnamed_addr constant [20 x i8] c"fixed_dma_alias_tbl\00", align 1
@___asan_gen_.1143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 4168, i32 35 }
@___asan_gen_.1152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 4285, i32 2 }
@___asan_gen_.1161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 4305, i32 2 }
@___asan_gen_.1170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 4414, i32 3 }
@___asan_gen_.1176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 4418, i32 2 }
@___asan_gen_.1177 = private unnamed_addr constant [28 x i8] c"pci_quirk_intel_pch_acs_ids\00", align 1
@___asan_gen_.1179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 4588, i32 18 }
@___asan_gen_.1188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5092, i32 3 }
@___asan_gen_.1194 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5100, i32 2 }
@___asan_gen_.1203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5046, i32 4 }
@___asan_gen_.1212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5073, i32 3 }
@___asan_gen_.1221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5130, i32 2 }
@___asan_gen_.1230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5154, i32 2 }
@___asan_gen_.1239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5327, i32 2 }
@___asan_gen_.1248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5359, i32 2 }
@___asan_gen_.1257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5420, i32 3 }
@___asan_gen_.1263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5423, i32 3 }
@___asan_gen_.1272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5494, i32 2 }
@___asan_gen_.1281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5578, i32 3 }
@___asan_gen_.1287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5585, i32 3 }
@___asan_gen_.1293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5589, i32 2 }
@___asan_gen_.1299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5608, i32 3 }
@___asan_gen_.1305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5614, i32 4 }
@___asan_gen_.1311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5619, i32 4 }
@___asan_gen_.1314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5631, i32 4 }
@___asan_gen_.1323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5711, i32 2 }
@___asan_gen_.1332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5753, i32 3 }
@___asan_gen_.1338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5762, i32 3 }
@___asan_gen_.1344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5765, i32 4 }
@___asan_gen_.1353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5782, i32 2 }
@___asan_gen_.1362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5800, i32 2 }
@___asan_gen_.1368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5803, i32 2 }
@___asan_gen_.1377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5849, i32 3 }
@___asan_gen_.1378 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1384 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1385 = private constant [24 x i8] c"../drivers/pci/quirks.c\00", align 1
@___asan_gen_.1386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1385, i32 5879, i32 2 }
@llvm.compiler.used = appending global [1088 x ptr] [ptr @__initcall__kmod_quirks__293_194_pci_apply_final_quirks5s, ptr @__ksymtab_pci_fixup_device, ptr @__nv_msi_ht_cap_quirk._entry, ptr @__nv_msi_ht_cap_quirk._entry_ptr, ptr @__pci_fixup_apex_pci_fixup_class5814, ptr @__pci_fixup_asus_hides_ac97_lpc1693, ptr @__pci_fixup_asus_hides_smbus_hostbridge1510, ptr @__pci_fixup_asus_hides_smbus_hostbridge1511, ptr @__pci_fixup_asus_hides_smbus_hostbridge1512, ptr @__pci_fixup_asus_hides_smbus_hostbridge1513, ptr @__pci_fixup_asus_hides_smbus_hostbridge1514, ptr @__pci_fixup_asus_hides_smbus_hostbridge1515, ptr @__pci_fixup_asus_hides_smbus_hostbridge1516, ptr @__pci_fixup_asus_hides_smbus_hostbridge1517, ptr @__pci_fixup_asus_hides_smbus_hostbridge1518, ptr @__pci_fixup_asus_hides_smbus_hostbridge1519, ptr @__pci_fixup_asus_hides_smbus_hostbridge1521, ptr @__pci_fixup_asus_hides_smbus_hostbridge1522, ptr @__pci_fixup_asus_hides_smbus_hostbridge1523, ptr @__pci_fixup_asus_hides_smbus_lpc1543, ptr @__pci_fixup_asus_hides_smbus_lpc1544, ptr @__pci_fixup_asus_hides_smbus_lpc1545, ptr @__pci_fixup_asus_hides_smbus_lpc1546, ptr @__pci_fixup_asus_hides_smbus_lpc1547, ptr @__pci_fixup_asus_hides_smbus_lpc1548, ptr @__pci_fixup_asus_hides_smbus_lpc1549, ptr @__pci_fixup_asus_hides_smbus_lpc_ich61605, ptr @__pci_fixup_disable_igfx_irq3409, ptr @__pci_fixup_disable_igfx_irq3410, ptr @__pci_fixup_disable_igfx_irq3411, ptr @__pci_fixup_disable_igfx_irq3412, ptr @__pci_fixup_disable_igfx_irq3413, ptr @__pci_fixup_disable_igfx_irq3414, ptr @__pci_fixup_disable_igfx_irq3415, ptr @__pci_fixup_fixup_mpss_2563278, ptr @__pci_fixup_fixup_mpss_2563280, ptr @__pci_fixup_fixup_mpss_2563282, ptr @__pci_fixup_fixup_mpss_2563283, ptr @__pci_fixup_fixup_rev1_53c8102414, ptr @__pci_fixup_fixup_ti816x_class3267, ptr @__pci_fixup_ht_enable_msi_mapping2674, ptr @__pci_fixup_ht_enable_msi_mapping2676, ptr @__pci_fixup_mellanox_check_broken_intx_masking3584, ptr @__pci_fixup_nv_msi_ht_cap_quirk_all2983, ptr @__pci_fixup_nv_msi_ht_cap_quirk_leaf2990, ptr @__pci_fixup_nvbridge_check_legacy_irq_routing2778, ptr @__pci_fixup_nvbridge_check_legacy_irq_routing2781, ptr @__pci_fixup_nvenet_msi_disable2696, ptr @__pci_fixup_nvidia_ion_ahci_fixup5875, ptr @__pci_fixup_pci_disable_parity213, ptr @__pci_fixup_pci_disable_parity214, ptr @__pci_fixup_pci_fixup_no_d0_pme5785, ptr @__pci_fixup_pci_fixup_no_msi_no_pme5806, ptr @__pci_fixup_pci_fixup_no_msi_no_pme5807, ptr @__pci_fixup_pci_fixup_pericom_acs_store_forward5859, ptr @__pci_fixup_pci_fixup_pericom_acs_store_forward5863, ptr @__pci_fixup_pci_fixup_pericom_acs_store_forward5867, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2713, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2716, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2719, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2722, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2725, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2728, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2731, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2734, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2737, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2740, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2743, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2746, ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2749, ptr @__pci_fixup_quirk_al_msi_disable3101, ptr @__pci_fixup_quirk_ali7101_acpi655, ptr @__pci_fixup_quirk_alimagik427, ptr @__pci_fixup_quirk_alimagik428, ptr @__pci_fixup_quirk_amd_780_apc_msi2592, ptr @__pci_fixup_quirk_amd_780_apc_msi2593, ptr @__pci_fixup_quirk_amd_8131_mmrbc1054, ptr @__pci_fixup_quirk_amd_harvest_no_ats5364, ptr @__pci_fixup_quirk_amd_harvest_no_ats5366, ptr @__pci_fixup_quirk_amd_harvest_no_ats5368, ptr @__pci_fixup_quirk_amd_harvest_no_ats5369, ptr @__pci_fixup_quirk_amd_harvest_no_ats5370, ptr @__pci_fixup_quirk_amd_harvest_no_ats5371, ptr @__pci_fixup_quirk_amd_harvest_no_ats5372, ptr @__pci_fixup_quirk_amd_harvest_no_ats5373, ptr @__pci_fixup_quirk_amd_harvest_no_ats5374, ptr @__pci_fixup_quirk_amd_harvest_no_ats5375, ptr @__pci_fixup_quirk_amd_harvest_no_ats5377, ptr @__pci_fixup_quirk_amd_harvest_no_ats5378, ptr @__pci_fixup_quirk_amd_harvest_no_ats5379, ptr @__pci_fixup_quirk_amd_harvest_no_ats5380, ptr @__pci_fixup_quirk_amd_harvest_no_ats5382, ptr @__pci_fixup_quirk_amd_ide_mode1298, ptr @__pci_fixup_quirk_amd_ide_mode1300, ptr @__pci_fixup_quirk_amd_ide_mode1302, ptr @__pci_fixup_quirk_amd_ide_mode1304, ptr @__pci_fixup_quirk_amd_nl_class613, ptr @__pci_fixup_quirk_amd_ordering1207, ptr @__pci_fixup_quirk_ati_exploding_mce590, ptr @__pci_fixup_quirk_brcm_5719_limit_mrrs2518, ptr @__pci_fixup_quirk_bridge_cavm_thrx2_pcie_root4271, ptr @__pci_fixup_quirk_bridge_cavm_thrx2_pcie_root4273, ptr @__pci_fixup_quirk_broken_intx_masking3462, ptr @__pci_fixup_quirk_broken_intx_masking3464, ptr @__pci_fixup_quirk_broken_intx_masking3466, ptr @__pci_fixup_quirk_broken_intx_masking3475, ptr @__pci_fixup_quirk_broken_intx_masking3481, ptr @__pci_fixup_quirk_broken_intx_masking3482, ptr @__pci_fixup_quirk_broken_intx_masking3483, ptr @__pci_fixup_quirk_broken_intx_masking3484, ptr @__pci_fixup_quirk_broken_intx_masking3485, ptr @__pci_fixup_quirk_broken_intx_masking3486, ptr @__pci_fixup_quirk_broken_intx_masking3487, ptr @__pci_fixup_quirk_broken_intx_masking3488, ptr @__pci_fixup_quirk_broken_intx_masking3489, ptr @__pci_fixup_quirk_broken_intx_masking3490, ptr @__pci_fixup_quirk_broken_intx_masking3491, ptr @__pci_fixup_quirk_broken_intx_masking3492, ptr @__pci_fixup_quirk_broken_intx_masking3493, ptr @__pci_fixup_quirk_broken_intx_masking3494, ptr @__pci_fixup_quirk_broken_intx_masking3495, ptr @__pci_fixup_quirk_broken_intx_masking3496, ptr @__pci_fixup_quirk_cardbus_legacy1183, ptr @__pci_fixup_quirk_chelsio_T5_disable_root_port_attributes4441, ptr @__pci_fixup_quirk_citrine453, ptr @__pci_fixup_quirk_cs5536_vsa552, ptr @__pci_fixup_quirk_disable_all_msi2553, ptr @__pci_fixup_quirk_disable_all_msi2554, ptr @__pci_fixup_quirk_disable_all_msi2555, ptr @__pci_fixup_quirk_disable_all_msi2556, ptr @__pci_fixup_quirk_disable_all_msi2557, ptr @__pci_fixup_quirk_disable_all_msi2558, ptr @__pci_fixup_quirk_disable_all_msi2559, ptr @__pci_fixup_quirk_disable_all_msi2560, ptr @__pci_fixup_quirk_disable_all_msi2561, ptr @__pci_fixup_quirk_disable_aspm_l0s2354, ptr @__pci_fixup_quirk_disable_aspm_l0s2355, ptr @__pci_fixup_quirk_disable_aspm_l0s2356, ptr @__pci_fixup_quirk_disable_aspm_l0s2357, ptr @__pci_fixup_quirk_disable_aspm_l0s2358, ptr @__pci_fixup_quirk_disable_aspm_l0s2359, ptr @__pci_fixup_quirk_disable_aspm_l0s2360, ptr @__pci_fixup_quirk_disable_aspm_l0s2361, ptr @__pci_fixup_quirk_disable_aspm_l0s2362, ptr @__pci_fixup_quirk_disable_aspm_l0s2363, ptr @__pci_fixup_quirk_disable_aspm_l0s2364, ptr @__pci_fixup_quirk_disable_aspm_l0s2365, ptr @__pci_fixup_quirk_disable_aspm_l0s2366, ptr @__pci_fixup_quirk_disable_aspm_l0s2367, ptr @__pci_fixup_quirk_disable_aspm_l0s_l12380, ptr @__pci_fixup_quirk_disable_msi2571, ptr @__pci_fixup_quirk_disable_msi2572, ptr @__pci_fixup_quirk_disable_msi2573, ptr @__pci_fixup_quirk_disable_pxb1278, ptr @__pci_fixup_quirk_dma_func0_alias4087, ptr @__pci_fixup_quirk_dma_func0_alias4088, ptr @__pci_fixup_quirk_dma_func1_alias4103, ptr @__pci_fixup_quirk_dma_func1_alias4105, ptr @__pci_fixup_quirk_dma_func1_alias4108, ptr @__pci_fixup_quirk_dma_func1_alias4110, ptr @__pci_fixup_quirk_dma_func1_alias4113, ptr @__pci_fixup_quirk_dma_func1_alias4115, ptr @__pci_fixup_quirk_dma_func1_alias4118, ptr @__pci_fixup_quirk_dma_func1_alias4121, ptr @__pci_fixup_quirk_dma_func1_alias4124, ptr @__pci_fixup_quirk_dma_func1_alias4127, ptr @__pci_fixup_quirk_dma_func1_alias4130, ptr @__pci_fixup_quirk_dma_func1_alias4133, ptr @__pci_fixup_quirk_dma_func1_alias4136, ptr @__pci_fixup_quirk_dma_func1_alias4139, ptr @__pci_fixup_quirk_dma_func1_alias4141, ptr @__pci_fixup_quirk_dma_func1_alias4143, ptr @__pci_fixup_quirk_dma_func1_alias4147, ptr @__pci_fixup_quirk_dma_func1_alias4151, ptr @__pci_fixup_quirk_dunord1225, ptr @__pci_fixup_quirk_e100_interrupt2343, ptr @__pci_fixup_quirk_eisa_bridge1363, ptr @__pci_fixup_quirk_enable_clear_retrain_link2395, ptr @__pci_fixup_quirk_enable_clear_retrain_link2396, ptr @__pci_fixup_quirk_enable_clear_retrain_link2397, ptr @__pci_fixup_quirk_extend_bar_to_page485, ptr @__pci_fixup_quirk_fixed_dma_alias4186, ptr @__pci_fixup_quirk_fsl_no_msi5391, ptr @__pci_fixup_quirk_gpu_hda5439, ptr @__pci_fixup_quirk_gpu_hda5441, ptr @__pci_fixup_quirk_gpu_hda5443, ptr @__pci_fixup_quirk_gpu_usb5454, ptr @__pci_fixup_quirk_gpu_usb5456, ptr @__pci_fixup_quirk_gpu_usb_typec_ucsi5471, ptr @__pci_fixup_quirk_gpu_usb_typec_ucsi5474, ptr @__pci_fixup_quirk_hotplug_bridge3115, ptr @__pci_fixup_quirk_huawei_pcie_sva1856, ptr @__pci_fixup_quirk_huawei_pcie_sva1857, ptr @__pci_fixup_quirk_huawei_pcie_sva1858, ptr @__pci_fixup_quirk_huawei_pcie_sva1859, ptr @__pci_fixup_quirk_huawei_pcie_sva1860, ptr @__pci_fixup_quirk_huawei_pcie_sva1861, ptr @__pci_fixup_quirk_ich4_lpc_acpi783, ptr @__pci_fixup_quirk_ich4_lpc_acpi784, ptr @__pci_fixup_quirk_ich4_lpc_acpi785, ptr @__pci_fixup_quirk_ich4_lpc_acpi786, ptr @__pci_fixup_quirk_ich4_lpc_acpi787, ptr @__pci_fixup_quirk_ich4_lpc_acpi788, ptr @__pci_fixup_quirk_ich4_lpc_acpi789, ptr @__pci_fixup_quirk_ich4_lpc_acpi790, ptr @__pci_fixup_quirk_ich4_lpc_acpi791, ptr @__pci_fixup_quirk_ich4_lpc_acpi792, ptr @__pci_fixup_quirk_ich6_lpc850, ptr @__pci_fixup_quirk_ich6_lpc851, ptr @__pci_fixup_quirk_ich7_lpc889, ptr @__pci_fixup_quirk_ich7_lpc890, ptr @__pci_fixup_quirk_ich7_lpc891, ptr @__pci_fixup_quirk_ich7_lpc892, ptr @__pci_fixup_quirk_ich7_lpc893, ptr @__pci_fixup_quirk_ich7_lpc894, ptr @__pci_fixup_quirk_ich7_lpc895, ptr @__pci_fixup_quirk_ich7_lpc896, ptr @__pci_fixup_quirk_ich7_lpc897, ptr @__pci_fixup_quirk_ich7_lpc898, ptr @__pci_fixup_quirk_ich7_lpc899, ptr @__pci_fixup_quirk_ich7_lpc900, ptr @__pci_fixup_quirk_ich7_lpc901, ptr @__pci_fixup_quirk_ide_samemode1335, ptr @__pci_fixup_quirk_intel_mc_errata3327, ptr @__pci_fixup_quirk_intel_mc_errata3328, ptr @__pci_fixup_quirk_intel_mc_errata3329, ptr @__pci_fixup_quirk_intel_mc_errata3330, ptr @__pci_fixup_quirk_intel_mc_errata3331, ptr @__pci_fixup_quirk_intel_mc_errata3332, ptr @__pci_fixup_quirk_intel_mc_errata3333, ptr @__pci_fixup_quirk_intel_mc_errata3334, ptr @__pci_fixup_quirk_intel_mc_errata3335, ptr @__pci_fixup_quirk_intel_mc_errata3336, ptr @__pci_fixup_quirk_intel_mc_errata3337, ptr @__pci_fixup_quirk_intel_mc_errata3338, ptr @__pci_fixup_quirk_intel_mc_errata3339, ptr @__pci_fixup_quirk_intel_mc_errata3340, ptr @__pci_fixup_quirk_intel_mc_errata3342, ptr @__pci_fixup_quirk_intel_mc_errata3343, ptr @__pci_fixup_quirk_intel_mc_errata3344, ptr @__pci_fixup_quirk_intel_mc_errata3345, ptr @__pci_fixup_quirk_intel_mc_errata3346, ptr @__pci_fixup_quirk_intel_mc_errata3347, ptr @__pci_fixup_quirk_intel_mc_errata3348, ptr @__pci_fixup_quirk_intel_mc_errata3349, ptr @__pci_fixup_quirk_intel_mc_errata3350, ptr @__pci_fixup_quirk_intel_mc_errata3351, ptr @__pci_fixup_quirk_intel_mc_errata3352, ptr @__pci_fixup_quirk_intel_ntb3376, ptr @__pci_fixup_quirk_intel_ntb3377, ptr @__pci_fixup_quirk_intel_pcie_pm1887, ptr @__pci_fixup_quirk_intel_pcie_pm1888, ptr @__pci_fixup_quirk_intel_pcie_pm1889, ptr @__pci_fixup_quirk_intel_pcie_pm1890, ptr @__pci_fixup_quirk_intel_pcie_pm1891, ptr @__pci_fixup_quirk_intel_pcie_pm1892, ptr @__pci_fixup_quirk_intel_pcie_pm1893, ptr @__pci_fixup_quirk_intel_pcie_pm1894, ptr @__pci_fixup_quirk_intel_pcie_pm1895, ptr @__pci_fixup_quirk_intel_pcie_pm1896, ptr @__pci_fixup_quirk_intel_pcie_pm1897, ptr @__pci_fixup_quirk_intel_pcie_pm1898, ptr @__pci_fixup_quirk_intel_pcie_pm1899, ptr @__pci_fixup_quirk_intel_pcie_pm1900, ptr @__pci_fixup_quirk_intel_pcie_pm1901, ptr @__pci_fixup_quirk_intel_pcie_pm1902, ptr @__pci_fixup_quirk_intel_pcie_pm1903, ptr @__pci_fixup_quirk_intel_pcie_pm1904, ptr @__pci_fixup_quirk_intel_pcie_pm1905, ptr @__pci_fixup_quirk_intel_pcie_pm1906, ptr @__pci_fixup_quirk_intel_pcie_pm1907, ptr @__pci_fixup_quirk_intel_qat_vf_cap5297, ptr @__pci_fixup_quirk_isa_dma_hangs260, ptr @__pci_fixup_quirk_isa_dma_hangs261, ptr @__pci_fixup_quirk_isa_dma_hangs262, ptr @__pci_fixup_quirk_isa_dma_hangs263, ptr @__pci_fixup_quirk_isa_dma_hangs264, ptr @__pci_fixup_quirk_isa_dma_hangs265, ptr @__pci_fixup_quirk_isa_dma_hangs266, ptr @__pci_fixup_quirk_jmicron_async_suspend1783, ptr @__pci_fixup_quirk_jmicron_async_suspend1784, ptr @__pci_fixup_quirk_jmicron_async_suspend1785, ptr @__pci_fixup_quirk_jmicron_async_suspend1786, ptr @__pci_fixup_quirk_jmicron_ata1755, ptr @__pci_fixup_quirk_jmicron_ata1756, ptr @__pci_fixup_quirk_jmicron_ata1757, ptr @__pci_fixup_quirk_jmicron_ata1758, ptr @__pci_fixup_quirk_jmicron_ata1759, ptr @__pci_fixup_quirk_jmicron_ata1760, ptr @__pci_fixup_quirk_jmicron_ata1761, ptr @__pci_fixup_quirk_jmicron_ata1762, ptr @__pci_fixup_quirk_jmicron_ata1763, ptr @__pci_fixup_quirk_mediagx_master1257, ptr @__pci_fixup_quirk_mic_x200_dma_alias4229, ptr @__pci_fixup_quirk_mic_x200_dma_alias4230, ptr @__pci_fixup_quirk_mmio_always_on207, ptr @__pci_fixup_quirk_msi_ht_cap2628, ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3045, ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3047, ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3049, ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3051, ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3053, ptr @__pci_fixup_quirk_msi_intx_disable_bug3027, ptr @__pci_fixup_quirk_msi_intx_disable_bug3030, ptr @__pci_fixup_quirk_msi_intx_disable_bug3033, ptr @__pci_fixup_quirk_msi_intx_disable_bug3036, ptr @__pci_fixup_quirk_msi_intx_disable_bug3039, ptr @__pci_fixup_quirk_msi_intx_disable_bug3042, ptr @__pci_fixup_quirk_msi_intx_disable_bug3056, ptr @__pci_fixup_quirk_msi_intx_disable_bug3058, ptr @__pci_fixup_quirk_msi_intx_disable_bug3060, ptr @__pci_fixup_quirk_msi_intx_disable_bug3063, ptr @__pci_fixup_quirk_msi_intx_disable_bug3065, ptr @__pci_fixup_quirk_msi_intx_disable_bug3067, ptr @__pci_fixup_quirk_msi_intx_disable_bug3069, ptr @__pci_fixup_quirk_msi_intx_disable_bug3071, ptr @__pci_fixup_quirk_msi_intx_disable_bug3073, ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3075, ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3077, ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3079, ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3081, ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3083, ptr @__pci_fixup_quirk_natoma438, ptr @__pci_fixup_quirk_natoma439, ptr @__pci_fixup_quirk_natoma440, ptr @__pci_fixup_quirk_natoma441, ptr @__pci_fixup_quirk_natoma442, ptr @__pci_fixup_quirk_natoma443, ptr @__pci_fixup_quirk_netmos2277, ptr @__pci_fixup_quirk_nfp6000463, ptr @__pci_fixup_quirk_nfp6000464, ptr @__pci_fixup_quirk_nfp6000465, ptr @__pci_fixup_quirk_nfp6000466, ptr @__pci_fixup_quirk_no_ata_d31344, ptr @__pci_fixup_quirk_no_ata_d31346, ptr @__pci_fixup_quirk_no_ata_d31349, ptr @__pci_fixup_quirk_no_ata_d31353, ptr @__pci_fixup_quirk_no_bus_reset3610, ptr @__pci_fixup_quirk_no_bus_reset3611, ptr @__pci_fixup_quirk_no_bus_reset3612, ptr @__pci_fixup_quirk_no_bus_reset3613, ptr @__pci_fixup_quirk_no_bus_reset3614, ptr @__pci_fixup_quirk_no_bus_reset3615, ptr @__pci_fixup_quirk_no_bus_reset3622, ptr @__pci_fixup_quirk_no_bus_reset3632, ptr @__pci_fixup_quirk_no_ext_tags5331, ptr @__pci_fixup_quirk_no_ext_tags5332, ptr @__pci_fixup_quirk_no_ext_tags5333, ptr @__pci_fixup_quirk_no_ext_tags5334, ptr @__pci_fixup_quirk_no_ext_tags5335, ptr @__pci_fixup_quirk_no_ext_tags5336, ptr @__pci_fixup_quirk_no_ext_tags5337, ptr @__pci_fixup_quirk_no_flr5313, ptr @__pci_fixup_quirk_no_flr5314, ptr @__pci_fixup_quirk_no_flr5315, ptr @__pci_fixup_quirk_no_flr5316, ptr @__pci_fixup_quirk_no_flr5317, ptr @__pci_fixup_quirk_no_pm_reset3653, ptr @__pci_fixup_quirk_nopciamd309, ptr @__pci_fixup_quirk_nopcipci296, ptr @__pci_fixup_quirk_nopcipci297, ptr @__pci_fixup_quirk_nvidia_ck804_msi_ht_cap2650, ptr @__pci_fixup_quirk_nvidia_ck804_pcie_aer_ext_cap2447, ptr @__pci_fixup_quirk_nvidia_hda5502, ptr @__pci_fixup_quirk_nvidia_no_bus_reset3601, ptr @__pci_fixup_quirk_p64h2_1k_io2428, ptr @__pci_fixup_quirk_passive_release238, ptr @__pci_fixup_quirk_pcie_mch1818, ptr @__pci_fixup_quirk_pcie_mch1819, ptr @__pci_fixup_quirk_pcie_mch1820, ptr @__pci_fixup_quirk_pcie_mch1822, ptr @__pci_fixup_quirk_pcie_pxh1872, ptr @__pci_fixup_quirk_pcie_pxh1873, ptr @__pci_fixup_quirk_pcie_pxh1874, ptr @__pci_fixup_quirk_pcie_pxh1875, ptr @__pci_fixup_quirk_pcie_pxh1876, ptr @__pci_fixup_quirk_pex_vca_alias4254, ptr @__pci_fixup_quirk_pex_vca_alias4255, ptr @__pci_fixup_quirk_pex_vca_alias4256, ptr @__pci_fixup_quirk_pex_vca_alias4257, ptr @__pci_fixup_quirk_pex_vca_alias4258, ptr @__pci_fixup_quirk_pex_vca_alias4259, ptr @__pci_fixup_quirk_piix4_acpi743, ptr @__pci_fixup_quirk_piix4_acpi744, ptr @__pci_fixup_quirk_plx_ntb_dma_alias5715, ptr @__pci_fixup_quirk_plx_ntb_dma_alias5716, ptr @__pci_fixup_quirk_plx_pci90502229, ptr @__pci_fixup_quirk_plx_pci90502239, ptr @__pci_fixup_quirk_plx_pci90502240, ptr @__pci_fixup_quirk_radeon_pm1925, ptr @__pci_fixup_quirk_relaxedordering_disable4314, ptr @__pci_fixup_quirk_relaxedordering_disable4316, ptr @__pci_fixup_quirk_relaxedordering_disable4318, ptr @__pci_fixup_quirk_relaxedordering_disable4320, ptr @__pci_fixup_quirk_relaxedordering_disable4322, ptr @__pci_fixup_quirk_relaxedordering_disable4324, ptr @__pci_fixup_quirk_relaxedordering_disable4326, ptr @__pci_fixup_quirk_relaxedordering_disable4328, ptr @__pci_fixup_quirk_relaxedordering_disable4330, ptr @__pci_fixup_quirk_relaxedordering_disable4332, ptr @__pci_fixup_quirk_relaxedordering_disable4334, ptr @__pci_fixup_quirk_relaxedordering_disable4336, ptr @__pci_fixup_quirk_relaxedordering_disable4338, ptr @__pci_fixup_quirk_relaxedordering_disable4340, ptr @__pci_fixup_quirk_relaxedordering_disable4342, ptr @__pci_fixup_quirk_relaxedordering_disable4344, ptr @__pci_fixup_quirk_relaxedordering_disable4346, ptr @__pci_fixup_quirk_relaxedordering_disable4348, ptr @__pci_fixup_quirk_relaxedordering_disable4350, ptr @__pci_fixup_quirk_relaxedordering_disable4352, ptr @__pci_fixup_quirk_relaxedordering_disable4354, ptr @__pci_fixup_quirk_relaxedordering_disable4356, ptr @__pci_fixup_quirk_relaxedordering_disable4358, ptr @__pci_fixup_quirk_relaxedordering_disable4360, ptr @__pci_fixup_quirk_relaxedordering_disable4362, ptr @__pci_fixup_quirk_relaxedordering_disable4364, ptr @__pci_fixup_quirk_relaxedordering_disable4366, ptr @__pci_fixup_quirk_relaxedordering_disable4368, ptr @__pci_fixup_quirk_relaxedordering_disable4380, ptr @__pci_fixup_quirk_relaxedordering_disable4382, ptr @__pci_fixup_quirk_relaxedordering_disable4384, ptr @__pci_fixup_quirk_remove_d3hot_delay3426, ptr @__pci_fixup_quirk_remove_d3hot_delay3427, ptr @__pci_fixup_quirk_remove_d3hot_delay3428, ptr @__pci_fixup_quirk_remove_d3hot_delay3430, ptr @__pci_fixup_quirk_remove_d3hot_delay3431, ptr @__pci_fixup_quirk_remove_d3hot_delay3432, ptr @__pci_fixup_quirk_remove_d3hot_delay3433, ptr @__pci_fixup_quirk_remove_d3hot_delay3434, ptr @__pci_fixup_quirk_remove_d3hot_delay3435, ptr @__pci_fixup_quirk_remove_d3hot_delay3436, ptr @__pci_fixup_quirk_remove_d3hot_delay3437, ptr @__pci_fixup_quirk_remove_d3hot_delay3438, ptr @__pci_fixup_quirk_remove_d3hot_delay3439, ptr @__pci_fixup_quirk_remove_d3hot_delay3440, ptr @__pci_fixup_quirk_remove_d3hot_delay3442, ptr @__pci_fixup_quirk_remove_d3hot_delay3443, ptr @__pci_fixup_quirk_remove_d3hot_delay3444, ptr @__pci_fixup_quirk_remove_d3hot_delay3445, ptr @__pci_fixup_quirk_remove_d3hot_delay3446, ptr @__pci_fixup_quirk_remove_d3hot_delay3447, ptr @__pci_fixup_quirk_remove_d3hot_delay3448, ptr @__pci_fixup_quirk_remove_d3hot_delay3449, ptr @__pci_fixup_quirk_remove_d3hot_delay3450, ptr @__pci_fixup_quirk_reset_lenovo_thinkpad_p50_nvgpu5774, ptr @__pci_fixup_quirk_ryzen_xhci_d3hot1940, ptr @__pci_fixup_quirk_ryzen_xhci_d3hot1941, ptr @__pci_fixup_quirk_ryzen_xhci_d3hot1942, ptr @__pci_fixup_quirk_s3_64M501, ptr @__pci_fixup_quirk_s3_64M502, ptr @__pci_fixup_quirk_sis_5031660, ptr @__pci_fixup_quirk_sis_96x_smbus1620, ptr @__pci_fixup_quirk_sis_96x_smbus1621, ptr @__pci_fixup_quirk_sis_96x_smbus1622, ptr @__pci_fixup_quirk_sis_96x_smbus1623, ptr @__pci_fixup_quirk_svwks_csb5ide1319, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5645, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5646, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5647, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5648, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5649, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5650, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5651, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5652, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5653, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5654, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5655, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5656, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5657, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5658, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5659, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5660, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5661, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5662, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5663, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5664, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5665, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5666, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5667, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5668, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5669, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5670, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5671, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5672, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5673, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5674, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5675, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5676, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5677, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5678, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5679, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5680, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5681, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5682, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5683, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5684, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5685, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5686, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5687, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5688, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5689, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5690, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5691, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5692, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5693, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5694, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5695, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5696, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5697, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5698, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5699, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5700, ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5701, ptr @__pci_fixup_quirk_synopsys_haps638, ptr @__pci_fixup_quirk_tc86c001_ide2201, ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3668, ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3670, ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3672, ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3674, ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3676, ptr @__pci_fixup_quirk_tigerpoint_bm_sts286, ptr @__pci_fixup_quirk_transparent_bridge1236, ptr @__pci_fixup_quirk_transparent_bridge1237, ptr @__pci_fixup_quirk_triton319, ptr @__pci_fixup_quirk_triton320, ptr @__pci_fixup_quirk_triton321, ptr @__pci_fixup_quirk_triton322, ptr @__pci_fixup_quirk_tw686x_class4289, ptr @__pci_fixup_quirk_tw686x_class4291, ptr @__pci_fixup_quirk_tw686x_class4293, ptr @__pci_fixup_quirk_tw686x_class4295, ptr @__pci_fixup_quirk_unhide_mch_dev62536, ptr @__pci_fixup_quirk_unhide_mch_dev62538, ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4207, ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4209, ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4211, ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4213, ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4215, ptr @__pci_fixup_quirk_via_acpi1073, ptr @__pci_fixup_quirk_via_acpi1074, ptr @__pci_fixup_quirk_via_bridge1107, ptr @__pci_fixup_quirk_via_bridge1108, ptr @__pci_fixup_quirk_via_bridge1109, ptr @__pci_fixup_quirk_via_bridge1110, ptr @__pci_fixup_quirk_via_bridge1111, ptr @__pci_fixup_quirk_via_bridge1112, ptr @__pci_fixup_quirk_via_bridge1113, ptr @__pci_fixup_quirk_via_bridge1114, ptr @__pci_fixup_quirk_via_cx700_pci_parking_caching2501, ptr @__pci_fixup_quirk_via_vlink1158, ptr @__pci_fixup_quirk_viaetbf404, ptr @__pci_fixup_quirk_vialatency388, ptr @__pci_fixup_quirk_vialatency389, ptr @__pci_fixup_quirk_vialatency390, ptr @__pci_fixup_quirk_vsfx413, ptr @__pci_fixup_quirk_vt8235_acpi942, ptr @__pci_fixup_quirk_vt82c586_acpi913, ptr @__pci_fixup_quirk_vt82c598_id1170, ptr @__pci_fixup_quirk_vt82c686_acpi930, ptr @__pci_fixup_quirk_xio2000a961, ptr @__pci_fixup_resume_earlyasus_hides_ac97_lpc1694, ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1550, ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1551, ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1552, ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1553, ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1554, ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1555, ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1556, ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc_ich6_resume_early1608, ptr @__pci_fixup_resume_earlynv_msi_ht_cap_quirk_all2984, ptr @__pci_fixup_resume_earlynv_msi_ht_cap_quirk_leaf2991, ptr @__pci_fixup_resume_earlyquirk_amd_ide_mode1299, ptr @__pci_fixup_resume_earlyquirk_amd_ide_mode1301, ptr @__pci_fixup_resume_earlyquirk_amd_ide_mode1303, ptr @__pci_fixup_resume_earlyquirk_amd_ide_mode1305, ptr @__pci_fixup_resume_earlyquirk_amd_ordering1208, ptr @__pci_fixup_resume_earlyquirk_cardbus_legacy1185, ptr @__pci_fixup_resume_earlyquirk_disable_pxb1279, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1764, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1765, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1766, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1767, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1768, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1769, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1770, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1771, ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1772, ptr @__pci_fixup_resume_earlyquirk_nvidia_ck804_pcie_aer_ext_cap2449, ptr @__pci_fixup_resume_earlyquirk_nvidia_hda5504, ptr @__pci_fixup_resume_earlyquirk_sis_5031661, ptr @__pci_fixup_resume_earlyquirk_sis_96x_smbus1624, ptr @__pci_fixup_resume_earlyquirk_sis_96x_smbus1625, ptr @__pci_fixup_resume_earlyquirk_sis_96x_smbus1626, ptr @__pci_fixup_resume_earlyquirk_sis_96x_smbus1627, ptr @__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323226, ptr @__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323228, ptr @__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323230, ptr @__pci_fixup_resume_earlyricoh_mmc_fixup_rl5c4763173, ptr @__pci_fixup_resumeasus_hides_smbus_lpc_ich6_resume1607, ptr @__pci_fixup_resumepci_fixup_pericom_acs_store_forward5861, ptr @__pci_fixup_resumepci_fixup_pericom_acs_store_forward5865, ptr @__pci_fixup_resumepci_fixup_pericom_acs_store_forward5869, ptr @__pci_fixup_resumequirk_mediagx_master1258, ptr @__pci_fixup_resumequirk_passive_release239, ptr @__pci_fixup_resumequirk_vialatency392, ptr @__pci_fixup_resumequirk_vialatency393, ptr @__pci_fixup_resumequirk_vialatency394, ptr @__pci_fixup_ricoh_mmc_fixup_r5c8323225, ptr @__pci_fixup_ricoh_mmc_fixup_r5c8323227, ptr @__pci_fixup_ricoh_mmc_fixup_r5c8323229, ptr @__pci_fixup_ricoh_mmc_fixup_rl5c4763172, ptr @__pci_fixup_rom_bar_overlap_defect5882, ptr @__pci_fixup_rom_bar_overlap_defect5883, ptr @__pci_fixup_rom_bar_overlap_defect5884, ptr @__pci_fixup_rom_bar_overlap_defect5885, ptr @__pci_fixup_suspendasus_hides_smbus_lpc_ich6_suspend1606, ptr @asus_hides_ac97_lpc._entry, ptr @asus_hides_ac97_lpc._entry.110, ptr @asus_hides_ac97_lpc._entry_ptr, ptr @asus_hides_ac97_lpc._entry_ptr.112, ptr @asus_hides_smbus_lpc._entry, ptr @asus_hides_smbus_lpc._entry.101, ptr @asus_hides_smbus_lpc._entry_ptr, ptr @asus_hides_smbus_lpc._entry_ptr.103, ptr @asus_hides_smbus_lpc_ich6_resume._entry, ptr @asus_hides_smbus_lpc_ich6_resume._entry_ptr, ptr @disable_igfx_irq._entry, ptr @disable_igfx_irq._entry.200, ptr @disable_igfx_irq._entry_ptr, ptr @disable_igfx_irq._entry_ptr.202, ptr @fixup_debug_report._entry, ptr @fixup_debug_report._entry_ptr, ptr @fixup_debug_start._entry, ptr @fixup_debug_start._entry_ptr, ptr @fixup_rev1_53c810._entry, ptr @fixup_rev1_53c810._entry_ptr, ptr @fixup_ti816x_class._entry, ptr @fixup_ti816x_class._entry_ptr, ptr @ht_disable_msi_mapping._entry, ptr @ht_disable_msi_mapping._entry_ptr, ptr @ht_enable_msi_mapping._entry, ptr @ht_enable_msi_mapping._entry_ptr, ptr @ich6_lpc_generic_decode._entry, ptr @ich6_lpc_generic_decode._entry_ptr, ptr @ich7_lpc_generic_decode._entry, ptr @ich7_lpc_generic_decode._entry_ptr, ptr @mellanox_check_broken_intx_masking._entry, ptr @mellanox_check_broken_intx_masking._entry.205, ptr @mellanox_check_broken_intx_masking._entry.208, ptr @mellanox_check_broken_intx_masking._entry_ptr, ptr @mellanox_check_broken_intx_masking._entry_ptr.207, ptr @mellanox_check_broken_intx_masking._entry_ptr.210, ptr @msi_ht_cap_enabled._entry, ptr @msi_ht_cap_enabled._entry_ptr, ptr @nvbridge_check_legacy_irq_routing._entry, ptr @nvbridge_check_legacy_irq_routing._entry_ptr, ptr @nvenet_msi_disable._entry, ptr @nvenet_msi_disable._entry_ptr, ptr @nvme_disable_and_flr._entry, ptr @nvme_disable_and_flr._entry_ptr, ptr @pci_apply_final_quirks._entry, ptr @pci_apply_final_quirks._entry.12, ptr @pci_apply_final_quirks._entry.9, ptr @pci_apply_final_quirks._entry_ptr, ptr @pci_apply_final_quirks._entry_ptr.11, ptr @pci_apply_final_quirks._entry_ptr.14, ptr @pci_create_device_link._entry, ptr @pci_create_device_link._entry.245, ptr @pci_create_device_link._entry_ptr, ptr @pci_create_device_link._entry_ptr.247, ptr @pci_fixup_no_d0_pme._entry, ptr @pci_fixup_no_d0_pme._entry_ptr, ptr @pci_fixup_no_msi_no_pme._entry, ptr @pci_fixup_no_msi_no_pme._entry.281, ptr @pci_fixup_no_msi_no_pme._entry_ptr, ptr @pci_fixup_no_msi_no_pme._entry_ptr.283, ptr @pci_fixup_pericom_acs_store_forward._entry, ptr @pci_fixup_pericom_acs_store_forward._entry_ptr, ptr @pci_quirk_disable_intel_spt_pch_acs_redir._entry, ptr @pci_quirk_disable_intel_spt_pch_acs_redir._entry_ptr, ptr @pci_quirk_enable_intel_lpc_acs._entry, ptr @pci_quirk_enable_intel_lpc_acs._entry_ptr, ptr @pci_quirk_enable_intel_pch_acs._entry, ptr @pci_quirk_enable_intel_pch_acs._entry.228, ptr @pci_quirk_enable_intel_pch_acs._entry_ptr, ptr @pci_quirk_enable_intel_pch_acs._entry_ptr.230, ptr @pci_quirk_enable_intel_rp_mpc_acs._entry, ptr @pci_quirk_enable_intel_rp_mpc_acs._entry_ptr, ptr @pci_quirk_enable_intel_spt_pch_acs._entry, ptr @pci_quirk_enable_intel_spt_pch_acs._entry_ptr, ptr @piix4_io_quirk._entry, ptr @piix4_io_quirk._entry_ptr, ptr @piix4_mem_quirk._entry, ptr @piix4_mem_quirk._entry_ptr, ptr @quirk_al_msi_disable._entry, ptr @quirk_al_msi_disable._entry_ptr, ptr @quirk_alimagik._entry, ptr @quirk_alimagik._entry_ptr, ptr @quirk_amd_8131_mmrbc._entry, ptr @quirk_amd_8131_mmrbc._entry_ptr, ptr @quirk_amd_harvest_no_ats._entry, ptr @quirk_amd_harvest_no_ats._entry_ptr, ptr @quirk_amd_ide_mode._entry, ptr @quirk_amd_ide_mode._entry_ptr, ptr @quirk_amd_nl_class._entry, ptr @quirk_amd_nl_class._entry_ptr, ptr @quirk_amd_ordering._entry, ptr @quirk_amd_ordering._entry_ptr, ptr @quirk_ati_exploding_mce._entry, ptr @quirk_ati_exploding_mce._entry_ptr, ptr @quirk_cs5536_vsa._entry, ptr @quirk_cs5536_vsa._entry_ptr, ptr @quirk_d3hot_delay._entry, ptr @quirk_d3hot_delay._entry_ptr, ptr @quirk_disable_all_msi._entry, ptr @quirk_disable_all_msi._entry_ptr, ptr @quirk_disable_aspm_l0s._entry, ptr @quirk_disable_aspm_l0s._entry_ptr, ptr @quirk_disable_aspm_l0s_l1._entry, ptr @quirk_disable_aspm_l0s_l1._entry_ptr, ptr @quirk_disable_msi._entry, ptr @quirk_disable_msi._entry_ptr, ptr @quirk_disable_pxb._entry, ptr @quirk_disable_pxb._entry_ptr, ptr @quirk_disable_root_port_attributes._entry, ptr @quirk_disable_root_port_attributes._entry.223, ptr @quirk_disable_root_port_attributes._entry_ptr, ptr @quirk_disable_root_port_attributes._entry_ptr.225, ptr @quirk_e100_interrupt._entry, ptr @quirk_e100_interrupt._entry.128, ptr @quirk_e100_interrupt._entry_ptr, ptr @quirk_e100_interrupt._entry_ptr.130, ptr @quirk_enable_clear_retrain_link._entry, ptr @quirk_enable_clear_retrain_link._entry_ptr, ptr @quirk_extend_bar_to_page._entry, ptr @quirk_extend_bar_to_page._entry_ptr, ptr @quirk_huawei_pcie_sva._entry, ptr @quirk_huawei_pcie_sva._entry_ptr, ptr @quirk_ide_samemode._entry, ptr @quirk_ide_samemode._entry_ptr, ptr @quirk_intel_mc_errata._entry, ptr @quirk_intel_mc_errata._entry.192, ptr @quirk_intel_mc_errata._entry.195, ptr @quirk_intel_mc_errata._entry_ptr, ptr @quirk_intel_mc_errata._entry_ptr.194, ptr @quirk_intel_mc_errata._entry_ptr.197, ptr @quirk_io._entry, ptr @quirk_io._entry_ptr, ptr @quirk_io_region._entry, ptr @quirk_io_region._entry_ptr, ptr @quirk_isa_dma_hangs._entry, ptr @quirk_isa_dma_hangs._entry_ptr, ptr @quirk_jmicron_async_suspend._entry, ptr @quirk_jmicron_async_suspend._entry_ptr, ptr @quirk_mediagx_master._entry, ptr @quirk_mediagx_master._entry_ptr, ptr @quirk_msi_intx_disable_qca_bug._entry, ptr @quirk_msi_intx_disable_qca_bug._entry_ptr, ptr @quirk_natoma._entry, ptr @quirk_natoma._entry_ptr, ptr @quirk_netmos._entry, ptr @quirk_netmos._entry_ptr, ptr @quirk_no_ext_tags._entry, ptr @quirk_no_ext_tags._entry_ptr, ptr @quirk_nopciamd._entry, ptr @quirk_nopciamd._entry_ptr, ptr @quirk_nopcipci._entry, ptr @quirk_nopcipci._entry_ptr, ptr @quirk_nvidia_ck804_pcie_aer_ext_cap._entry, ptr @quirk_nvidia_ck804_pcie_aer_ext_cap._entry_ptr, ptr @quirk_nvidia_hda._entry, ptr @quirk_nvidia_hda._entry_ptr, ptr @quirk_p64h2_1k_io._entry, ptr @quirk_p64h2_1k_io._entry_ptr, ptr @quirk_passive_release._entry, ptr @quirk_passive_release._entry_ptr, ptr @quirk_pcie_pxh._entry, ptr @quirk_pcie_pxh._entry_ptr, ptr @quirk_plx_ntb_dma_alias._entry, ptr @quirk_plx_ntb_dma_alias._entry_ptr, ptr @quirk_plx_pci9050._entry, ptr @quirk_plx_pci9050._entry_ptr, ptr @quirk_relaxedordering_disable._entry, ptr @quirk_relaxedordering_disable._entry_ptr, ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry, ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.271, ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.274, ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr, ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr.273, ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr.276, ptr @quirk_sis_96x_smbus._entry, ptr @quirk_sis_96x_smbus._entry_ptr, ptr @quirk_switchtec_ntb_dma_alias._entry, ptr @quirk_switchtec_ntb_dma_alias._entry.252, ptr @quirk_switchtec_ntb_dma_alias._entry.255, ptr @quirk_switchtec_ntb_dma_alias._entry.260, ptr @quirk_switchtec_ntb_dma_alias._entry.263, ptr @quirk_switchtec_ntb_dma_alias._entry_ptr, ptr @quirk_switchtec_ntb_dma_alias._entry_ptr.254, ptr @quirk_switchtec_ntb_dma_alias._entry_ptr.257, ptr @quirk_switchtec_ntb_dma_alias._entry_ptr.262, ptr @quirk_switchtec_ntb_dma_alias._entry_ptr.265, ptr @quirk_synopsys_haps._entry, ptr @quirk_synopsys_haps._entry_ptr, ptr @quirk_tigerpoint_bm_sts._entry, ptr @quirk_tigerpoint_bm_sts._entry_ptr, ptr @quirk_triton._entry, ptr @quirk_triton._entry_ptr, ptr @quirk_tw686x_class._entry, ptr @quirk_tw686x_class._entry_ptr, ptr @quirk_unhide_mch_dev6._entry, ptr @quirk_unhide_mch_dev6._entry_ptr, ptr @quirk_via_cx700_pci_parking_caching._entry, ptr @quirk_via_cx700_pci_parking_caching._entry.145, ptr @quirk_via_cx700_pci_parking_caching._entry_ptr, ptr @quirk_via_cx700_pci_parking_caching._entry_ptr.147, ptr @quirk_via_vlink._entry, ptr @quirk_via_vlink._entry_ptr, ptr @quirk_viaetbf._entry, ptr @quirk_viaetbf._entry_ptr, ptr @quirk_vialatency._entry, ptr @quirk_vialatency._entry_ptr, ptr @quirk_vsfx._entry, ptr @quirk_vsfx._entry_ptr, ptr @quirk_xio2000a._entry, ptr @quirk_xio2000a._entry_ptr, ptr @reset_hinic_vf_dev._entry, ptr @reset_hinic_vf_dev._entry_ptr, ptr @reset_ivb_igd._entry, ptr @reset_ivb_igd._entry_ptr, ptr @ricoh_mmc_fixup_r5c832._entry, ptr @ricoh_mmc_fixup_r5c832._entry.182, ptr @ricoh_mmc_fixup_r5c832._entry.185, ptr @ricoh_mmc_fixup_r5c832._entry_ptr, ptr @ricoh_mmc_fixup_r5c832._entry_ptr.184, ptr @ricoh_mmc_fixup_r5c832._entry_ptr.186, ptr @ricoh_mmc_fixup_rl5c476._entry, ptr @ricoh_mmc_fixup_rl5c476._entry.177, ptr @ricoh_mmc_fixup_rl5c476._entry_ptr, ptr @ricoh_mmc_fixup_rl5c476._entry_ptr.179, ptr @rom_bar_overlap_defect._entry, ptr @rom_bar_overlap_defect._entry_ptr, ptr @pci_apply_fixup_final_quirks, ptr @pci_dev_acs_enabled, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.10, ptr @.str.13, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @via_vlink_dev_lo, ptr @via_vlink_dev_hi, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @asus_hides_smbus, ptr @.str.99, ptr @.str.100, ptr @.str.102, ptr @asus_rcba_base, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.111, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.129, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.146, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.178, ptr @.str.180, ptr @.str.181, ptr @.str.183, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.193, ptr @.str.196, ptr @.str.198, ptr @.str.199, ptr @.str.201, ptr @.str.203, ptr @.str.204, ptr @.str.206, ptr @.str.209, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @fixed_dma_alias_tbl, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.224, ptr @pci_quirk_intel_pch_acs_ids, ptr @.str.226, ptr @.str.227, ptr @.str.229, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.246, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.253, ptr @.str.256, ptr @.str.258, ptr @.str.259, ptr @.str.261, ptr @.str.264, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.272, ptr @.str.275, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.282, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287], section "llvm.metadata"
@0 = internal global [359 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_apply_fixup_final_quirks to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_dev_acs_enabled to i32), i32 896, i32 1120, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fixup_debug_start._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fixup_debug_report._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_apply_final_quirks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_apply_final_quirks._entry.9 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_apply_final_quirks._entry.12 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_passive_release._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_isa_dma_hangs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_tigerpoint_bm_sts._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_nopcipci._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_nopciamd._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_triton._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_vialatency._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_viaetbf._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_vsfx._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_alimagik._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_natoma._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_extend_bar_to_page._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_cs5536_vsa._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_io._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_ati_exploding_mce._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_amd_nl_class._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_synopsys_haps._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_io_region._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @piix4_io_quirk._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @piix4_mem_quirk._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ich6_lpc_generic_decode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ich7_lpc_generic_decode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_xio2000a._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_amd_8131_mmrbc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @via_vlink_dev_lo to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @via_vlink_dev_hi to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_via_vlink._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_amd_ordering._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_mediagx_master._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_disable_pxb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_amd_ide_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_ide_samemode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_hides_smbus to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_hides_smbus_lpc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_hides_smbus_lpc._entry.101 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_rcba_base to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_hides_smbus_lpc_ich6_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_sis_96x_smbus._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_hides_ac97_lpc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asus_hides_ac97_lpc._entry.110 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_jmicron_async_suspend._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_huawei_pcie_sva._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_pcie_pxh._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_d3hot_delay._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_plx_pci9050._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_netmos._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 91, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_e100_interrupt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_e100_interrupt._entry.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_disable_aspm_l0s._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_disable_aspm_l0s_l1._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_enable_clear_retrain_link._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fixup_rev1_53c810._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_p64h2_1k_io._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_nvidia_ck804_pcie_aer_ext_cap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_via_cx700_pci_parking_caching._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_via_cx700_pci_parking_caching._entry.145 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_unhide_mch_dev6._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_disable_all_msi._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_disable_msi._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @msi_ht_cap_enabled._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ht_enable_msi_mapping._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nvenet_msi_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nvbridge_check_legacy_irq_routing._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ht_disable_msi_mapping._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_msi_intx_disable_qca_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_al_msi_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ricoh_mmc_fixup_rl5c476._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ricoh_mmc_fixup_rl5c476._entry.177 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ricoh_mmc_fixup_r5c832._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ricoh_mmc_fixup_r5c832._entry.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ricoh_mmc_fixup_r5c832._entry.185 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fixup_ti816x_class._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_intel_mc_errata._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_intel_mc_errata._entry.192 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_intel_mc_errata._entry.195 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @disable_igfx_irq._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1086 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1086 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1086 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @disable_igfx_irq._entry.200 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mellanox_check_broken_intx_masking._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mellanox_check_broken_intx_masking._entry.205 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mellanox_check_broken_intx_masking._entry.208 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 122, i32 160, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @reset_ivb_igd._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nvme_disable_and_flr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @reset_hinic_vf_dev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fixed_dma_alias_tbl to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_tw686x_class._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_relaxedordering_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_disable_root_port_attributes._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_disable_root_port_attributes._entry.223 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 87, i32 128, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_quirk_intel_pch_acs_ids to i32), i32 238, i32 288, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_quirk_enable_intel_pch_acs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_quirk_enable_intel_pch_acs._entry.228 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_quirk_enable_intel_lpc_acs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_quirk_enable_intel_rp_mpc_acs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_quirk_enable_intel_spt_pch_acs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_quirk_disable_intel_spt_pch_acs_redir._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_no_ext_tags._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_amd_harvest_no_ats._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_create_device_link._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_create_device_link._entry.245 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_nvidia_hda._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_switchtec_ntb_dma_alias._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_switchtec_ntb_dma_alias._entry.252 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_switchtec_ntb_dma_alias._entry.255 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_switchtec_ntb_dma_alias._entry.260 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_switchtec_ntb_dma_alias._entry.263 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_plx_ntb_dma_alias._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.271 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.274 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_fixup_no_d0_pme._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_fixup_no_msi_no_pme._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_fixup_no_msi_no_pme._entry.281 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pci_fixup_pericom_acs_store_forward._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rom_bar_overlap_defect._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1386 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pci_fixup_device(i32 noundef %pass, ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %pass to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values)
  switch i32 %pass, label %entry.cleanup_crit_edge [
    i32 0, label %entry.sw.epilog_crit_edge
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 6, label %sw.bb5
    i32 5, label %sw.bb6
    i32 7, label %sw.bb7
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %.b9 = load i1, ptr @pci_apply_fixup_final_quirks, align 1
  br i1 %.b9, label %sw.bb2.sw.epilog_crit_edge, label %sw.bb2.cleanup_crit_edge

sw.bb2.cleanup_crit_edge:                         ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb2.sw.epilog_crit_edge:                       ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2.sw.epilog_crit_edge, %sw.bb1, %entry.sw.epilog_crit_edge
  %start.0 = phi ptr [ @__start_pci_fixups_suspend_late, %sw.bb7 ], [ @__start_pci_fixups_suspend, %sw.bb6 ], [ @__start_pci_fixups_resume_early, %sw.bb5 ], [ @__start_pci_fixups_resume, %sw.bb4 ], [ @__start_pci_fixups_enable, %sw.bb3 ], [ @__start_pci_fixups_header, %sw.bb1 ], [ @__start_pci_fixups_early, %entry.sw.epilog_crit_edge ], [ @__start_pci_fixups_final, %sw.bb2.sw.epilog_crit_edge ]
  %end.0 = phi ptr [ @__end_pci_fixups_suspend_late, %sw.bb7 ], [ @__end_pci_fixups_suspend, %sw.bb6 ], [ @__end_pci_fixups_resume_early, %sw.bb5 ], [ @__end_pci_fixups_resume, %sw.bb4 ], [ @__end_pci_fixups_enable, %sw.bb3 ], [ @__end_pci_fixups_header, %sw.bb1 ], [ @__end_pci_fixups_early, %entry.sw.epilog_crit_edge ], [ @__end_pci_fixups_final, %sw.bb2.sw.epilog_crit_edge ]
  %cmp46.i = icmp ult ptr %start.0, %end.0
  br i1 %cmp46.i, label %for.body.lr.ph.i, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %sw.epilog
  %class1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 11
  %vendor5.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 7
  %device16.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %dev1.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %f.addr.047.i = phi ptr [ %start.0, %for.body.lr.ph.i ], [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ]
  %class.i = getelementptr inbounds %struct.pci_fixup, ptr %f.addr.047.i, i32 0, i32 2
  %1 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %class.i, align 4
  %3 = ptrtoint ptr %class1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %class1.i, align 8
  %class_shift.i = getelementptr inbounds %struct.pci_fixup, ptr %f.addr.047.i, i32 0, i32 3
  %5 = ptrtoint ptr %class_shift.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %class_shift.i, align 4
  %shr.i = lshr i32 %4, %6
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %shr.i)
  %cmp2.i = icmp eq i32 %2, %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %2)
  %cmp4.i = icmp eq i32 %2, -1
  %or.cond.i = or i1 %cmp4.i, %cmp2.i
  br i1 %or.cond.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %7 = ptrtoint ptr %f.addr.047.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %f.addr.047.i, align 4
  %9 = ptrtoint ptr %vendor5.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vendor5.i, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %10)
  %cmp7.i = icmp eq i16 %8, %10
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %8)
  %cmp12.i = icmp eq i16 %8, -1
  %or.cond42.i = or i1 %cmp12.i, %cmp7.i
  br i1 %or.cond42.i, label %land.lhs.true14.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

land.lhs.true14.i:                                ; preds = %land.lhs.true.i
  %device.i = getelementptr inbounds %struct.pci_fixup, ptr %f.addr.047.i, i32 0, i32 1
  %11 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %device.i, align 2
  %13 = ptrtoint ptr %device16.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %device16.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %12, i16 %14)
  %cmp18.i = icmp eq i16 %12, %14
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %12)
  %cmp23.i = icmp eq i16 %12, -1
  %or.cond43.i = or i1 %cmp23.i, %cmp18.i
  br i1 %or.cond43.i, label %if.then.i, label %land.lhs.true14.i.for.inc.i_crit_edge

land.lhs.true14.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then.i:                                        ; preds = %land.lhs.true14.i
  %hook25.i = getelementptr inbounds %struct.pci_fixup, ptr %f.addr.047.i, i32 0, i32 4
  %15 = ptrtoint ptr %hook25.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hook25.i, align 4
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @initcall_debug to i32))
  %17 = load i8, ptr @initcall_debug, align 1, !range !1881
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.i.i = icmp eq i8 %17, 0
  br i1 %tobool.not.i.i, label %if.then.i.fixup_debug_start.exit.i_crit_edge, label %do.end.i.i

if.then.i.fixup_debug_start.exit.i_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fixup_debug_start.exit.i

do.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %18 = tail call i32 @llvm.read_register.i32(metadata !1871) #14
  %and.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i.i, align 8
  %pid.i.i.i = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 68
  %22 = ptrtoint ptr %pid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pid.i.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str, ptr noundef %16, i32 noundef %23) #17
  br label %fixup_debug_start.exit.i

fixup_debug_start.exit.i:                         ; preds = %do.end.i.i, %if.then.i.fixup_debug_start.exit.i_crit_edge
  %call3.i.i = tail call i64 @ktime_get() #14
  tail call void %16(ptr noundef %dev) #14
  %call.i.i = tail call i64 @ktime_get() #14
  %sub.i.i = sub i64 %call.i.i, %call3.i.i
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @initcall_debug to i32))
  %24 = load i8, ptr @initcall_debug, align 1, !range !1881
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not.i44.i = icmp ne i8 %24, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 10241023, i64 %sub.i.i)
  %cmp.i.i = icmp ugt i64 %sub.i.i, 10241023
  %or.cond.i.i = select i1 %tobool.not.i44.i, i1 true, i1 %cmp.i.i
  br i1 %or.cond.i.i, label %do.end.i45.i, label %fixup_debug_start.exit.i.for.inc.i_crit_edge

fixup_debug_start.exit.i.for.inc.i_crit_edge:     ; preds = %fixup_debug_start.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

do.end.i45.i:                                     ; preds = %fixup_debug_start.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %shr.i.i = lshr i64 %sub.i.i, 10
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.5, ptr noundef %16, i64 noundef %shr.i.i) #17
  br label %for.inc.i

for.inc.i:                                        ; preds = %do.end.i45.i, %fixup_debug_start.exit.i.for.inc.i_crit_edge, %land.lhs.true14.i.for.inc.i_crit_edge, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %incdec.ptr.i = getelementptr %struct.pci_fixup, ptr %f.addr.047.i, i32 1
  %cmp.i = icmp ult ptr %incdec.ptr.i, %end.0
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.cleanup_crit_edge

for.inc.i.cleanup_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

cleanup:                                          ; preds = %for.inc.i.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge, %sw.bb2.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_apply_final_quirks() #2 section ".init.text" align 64 {
entry:
  %tmp = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp) #14
  %0 = ptrtoint ptr %tmp to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %tmp, align 1, !annotation !1882
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @pci_cache_line_size to i32))
  %1 = load i8, ptr @pci_cache_line_size, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i8 %1 to i32
  %shl = shl nuw nsw i32 %conv, 2
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7, i32 noundef %shl) #17
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  store i1 true, ptr @pci_apply_fixup_final_quirks, align 1
  %call254 = call ptr @pci_get_device(i32 noundef -1, i32 noundef -1, ptr noundef null) #14
  %cmp.not55 = icmp eq ptr %call254, null
  br i1 %cmp.not55, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %if.end.while.body_crit_edge
  %call257 = phi ptr [ %call2, %while.cond.backedge.while.body_crit_edge ], [ %call254, %if.end.while.body_crit_edge ]
  %cls.056 = phi i8 [ %cls.0.be, %while.cond.backedge.while.body_crit_edge ], [ 0, %if.end.while.body_crit_edge ]
  call void @pci_fixup_device(i32 noundef 2, ptr noundef nonnull %call257)
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @pci_cache_line_size to i32))
  %2 = load i8, ptr @pci_cache_line_size, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool4.not = icmp eq i8 %2, 0
  br i1 %tobool4.not, label %if.then5, label %while.body.while.cond.backedge_crit_edge

while.body.while.cond.backedge_crit_edge:         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.backedge

if.then5:                                         ; preds = %while.body
  %call6 = call i32 @pci_read_config_byte(ptr noundef nonnull %call257, i32 noundef 12, ptr noundef nonnull %tmp) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %cls.056)
  %tobool7.not = icmp eq i8 %cls.056, 0
  br i1 %tobool7.not, label %if.then8, label %if.then5.if.end9_crit_edge

if.then5.if.end9_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then8:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  %3 = ptrtoint ptr %tmp to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %tmp, align 1
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.then5.if.end9_crit_edge
  %cls.1 = phi i8 [ %cls.056, %if.then5.if.end9_crit_edge ], [ %4, %if.then8 ]
  %5 = ptrtoint ptr %tmp to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %tmp, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool10.not = icmp eq i8 %6, 0
  call void @__sanitizer_cov_trace_cmp1(i8 %cls.1, i8 %6)
  %cmp13 = icmp eq i8 %cls.1, %6
  %or.cond = select i1 %tobool10.not, i1 true, i1 %cmp13
  br i1 %or.cond, label %if.end9.while.cond.backedge_crit_edge, label %do.end19

if.end9.while.cond.backedge_crit_edge:            ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.backedge

do.end19:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %conv12 = zext i8 %6 to i32
  %conv11 = zext i8 %cls.1 to i32
  %dev20 = getelementptr inbounds %struct.pci_dev, ptr %call257, i32 0, i32 44
  %shl22 = shl nuw nsw i32 %conv11, 2
  %shl24 = shl nuw nsw i32 %conv12, 2
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @pci_dfl_cache_line_size to i32))
  %7 = load i8, ptr @pci_dfl_cache_line_size, align 1
  %conv25 = zext i8 %7 to i32
  %shl26 = shl nuw nsw i32 %conv25, 2
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev20, ptr noundef nonnull @.str.10, i32 noundef %shl22, i32 noundef %shl24, i32 noundef %shl26) #17
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @pci_dfl_cache_line_size to i32))
  %8 = load i8, ptr @pci_dfl_cache_line_size, align 1
  call void @__asan_store1_noabort(i32 ptrtoint (ptr @pci_cache_line_size to i32))
  store i8 %8, ptr @pci_cache_line_size, align 1
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %do.end19, %if.end9.while.cond.backedge_crit_edge, %while.body.while.cond.backedge_crit_edge
  %cls.0.be = phi i8 [ %cls.1, %if.end9.while.cond.backedge_crit_edge ], [ %cls.056, %while.body.while.cond.backedge_crit_edge ], [ %cls.1, %do.end19 ]
  %call2 = call ptr @pci_get_device(i32 noundef -1, i32 noundef -1, ptr noundef nonnull %call257) #14
  %cmp.not = icmp eq ptr %call2, null
  br i1 %cmp.not, label %while.cond.backedge.while.end_crit_edge, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.cond.backedge.while.end_crit_edge:          ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.cond.backedge.while.end_crit_edge, %if.end.while.end_crit_edge
  %cls.0.lcssa = phi i8 [ 0, %if.end.while.end_crit_edge ], [ %cls.0.be, %while.cond.backedge.while.end_crit_edge ]
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @pci_cache_line_size to i32))
  %9 = load i8, ptr @pci_cache_line_size, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool28.not = icmp eq i8 %9, 0
  br i1 %tobool28.not, label %do.end32, label %while.end.if.end44_crit_edge

while.end.if.end44_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44

do.end32:                                         ; preds = %while.end
  %conv34 = zext i8 %cls.0.lcssa to i32
  %shl35 = shl nuw nsw i32 %conv34, 2
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @pci_dfl_cache_line_size to i32))
  %10 = load i8, ptr @pci_dfl_cache_line_size, align 1
  %conv36 = zext i8 %10 to i32
  %shl37 = shl nuw nsw i32 %conv36, 2
  %call38 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.13, i32 noundef %shl35, i32 noundef %shl37) #17
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %cls.0.lcssa)
  %tobool40.not = icmp eq i8 %cls.0.lcssa, 0
  br i1 %tobool40.not, label %cond.false, label %do.end32.cond.end_crit_edge

do.end32.cond.end_crit_edge:                      ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.false:                                       ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @pci_dfl_cache_line_size to i32))
  %11 = load i8, ptr @pci_dfl_cache_line_size, align 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %do.end32.cond.end_crit_edge
  %cond = phi i8 [ %11, %cond.false ], [ %cls.0.lcssa, %do.end32.cond.end_crit_edge ]
  call void @__asan_store1_noabort(i32 ptrtoint (ptr @pci_cache_line_size to i32))
  store i8 %cond, ptr @pci_cache_line_size, align 1
  br label %if.end44

if.end44:                                         ; preds = %cond.end, %while.end.if.end44_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp) #14
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_mmio_always_on(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mmio_always_on = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %mmio_always_on to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %mmio_always_on, align 2
  %bf.set = or i32 %bf.load, 524288
  store i32 %bf.set, ptr %mmio_always_on, align 2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_parity(ptr noundef) #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_passive_release(ptr nocapture noundef readnone %dev) #0 align 64 {
entry:
  %dlc = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %dlc) #14
  %0 = ptrtoint ptr %dlc to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %dlc, align 1, !annotation !1882
  %call10 = call ptr @pci_get_device(i32 noundef 32902, i32 noundef 28672, ptr noundef null) #14
  %tobool.not11 = icmp eq ptr %call10, null
  br i1 %tobool.not11, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %if.end.while.body_crit_edge, %entry.while.body_crit_edge
  %call12 = phi ptr [ %call, %if.end.while.body_crit_edge ], [ %call10, %entry.while.body_crit_edge ]
  %call1 = call i32 @pci_read_config_byte(ptr noundef nonnull %call12, i32 noundef 130, ptr noundef nonnull %dlc) #14
  %1 = ptrtoint ptr %dlc to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %dlc, align 1
  %3 = and i8 %2, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool2.not = icmp eq i8 %3, 0
  br i1 %tobool2.not, label %do.end, label %while.body.if.end_crit_edge

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %dev3 = getelementptr inbounds %struct.pci_dev, ptr %call12, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.15) #17
  %4 = ptrtoint ptr %dlc to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %dlc, align 1
  %6 = or i8 %5, 2
  store i8 %6, ptr %dlc, align 1
  %call6 = call i32 @pci_write_config_byte(ptr noundef nonnull %call12, i32 noundef 130, i8 noundef zeroext %6) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %while.body.if.end_crit_edge
  %call = call ptr @pci_get_device(i32 noundef 32902, i32 noundef 28672, ptr noundef nonnull %call12) #14
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %entry.while.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %dlc) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_isa_dma_hangs(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @isa_dma_bridge_buggy to i32))
  %0 = load i32, ptr @isa_dma_bridge_buggy, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @isa_dma_bridge_buggy to i32))
  store i32 1, ptr @isa_dma_bridge_buggy, align 4
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.17) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_tigerpoint_bm_sts(ptr noundef %dev) #0 align 64 {
entry:
  %pmbase = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pmbase) #14
  %0 = ptrtoint ptr %pmbase to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pmbase, align 4, !annotation !1882
  %call = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 64, ptr noundef nonnull %pmbase) #14
  %1 = ptrtoint ptr %pmbase to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pmbase, align 4
  %and = and i32 %2, 65408
  store i32 %and, ptr %pmbase, align 4
  %add = or i32 %and, -18874368
  %3 = inttoptr i32 %add to ptr
  %4 = call i16 asm sideeffect "ldrh $0, $1", "=r,*Q"(ptr nonnull elementtype(i16) %3) #14, !srcloc !1883
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1884
  %5 = and i16 %4, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not = icmp eq i16 %5, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev5, ptr noundef nonnull @.str.19) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1885
  call void @arm_heavy_mb() #14
  %6 = ptrtoint ptr %pmbase to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pmbase, align 4
  %and9 = and i32 %7, 1048575
  %add10 = or i32 %and9, -18874368
  %8 = inttoptr i32 %add10 to ptr
  call void asm sideeffect "strh $1, $0", "*Q,r"(ptr nonnull elementtype(i16) %8, i16 4096) #14, !srcloc !1886
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pmbase) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_nopcipci(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %0 = load i32, ptr @pci_pci_problems, align 4
  %and = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.21) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %1 = load i32, ptr @pci_pci_problems, align 4
  %or = or i32 %1, 1
  store i32 %or, ptr @pci_pci_problems, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_nopciamd(ptr noundef %dev) #0 align 64 {
entry:
  %rev = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %rev) #14
  %0 = ptrtoint ptr %rev to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %rev, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 8, ptr noundef nonnull %rev) #14
  %1 = ptrtoint ptr %rev to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %rev, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 19, i8 %2)
  %cmp = icmp eq i8 %2, 19
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev2, ptr noundef nonnull @.str.23) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %3 = load i32, ptr @pci_pci_problems, align 4
  %or = or i32 %3, 64
  store i32 %or, ptr @pci_pci_problems, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %rev) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_triton(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %0 = load i32, ptr @pci_pci_problems, align 4
  %and = and i32 %0, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.25) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %1 = load i32, ptr @pci_pci_problems, align 4
  %or = or i32 %1, 2
  store i32 %or, ptr @pci_pci_problems, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_vialatency(ptr noundef %dev) #0 align 64 {
entry:
  %busarb = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %busarb) #14
  %0 = ptrtoint ptr %busarb to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %busarb, align 1, !annotation !1882
  %call = tail call ptr @pci_get_device(i32 noundef 4358, i32 noundef 1670, ptr noundef null) #14
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %revision = getelementptr inbounds %struct.pci_dev, ptr %call, i32 0, i32 12
  %1 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %revision, align 4
  %3 = add i8 %2, -67
  call void @__sanitizer_cov_trace_const_cmp1(i8 -3, i8 %3)
  %4 = icmp ult i8 %3, -3
  br i1 %4, label %if.then.exit_crit_edge, label %if.then.if.end24_crit_edge

if.then.if.end24_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then.exit_crit_edge:                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %exit

if.else:                                          ; preds = %entry
  %call8 = tail call ptr @pci_get_device(i32 noundef 4358, i32 noundef 33329, ptr noundef null) #14
  %cmp9 = icmp eq ptr %call8, null
  br i1 %cmp9, label %if.else.exit_crit_edge, label %if.end12

if.else.exit_crit_edge:                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %exit

if.end12:                                         ; preds = %if.else
  %revision13 = getelementptr inbounds %struct.pci_dev, ptr %call8, i32 0, i32 12
  %5 = ptrtoint ptr %revision13 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %revision13, align 4
  %7 = add i8 %6, -19
  call void @__sanitizer_cov_trace_const_cmp1(i8 -3, i8 %7)
  %8 = icmp ult i8 %7, -3
  br i1 %8, label %if.end12.exit_crit_edge, label %if.end12.if.end24_crit_edge

if.end12.if.end24_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.end12.exit_crit_edge:                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %exit

if.end24:                                         ; preds = %if.end12.if.end24_crit_edge, %if.then.if.end24_crit_edge
  %p.0 = phi ptr [ %call, %if.then.if.end24_crit_edge ], [ %call8, %if.end12.if.end24_crit_edge ]
  %call25 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 118, ptr noundef nonnull %busarb) #14
  %9 = ptrtoint ptr %busarb to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %busarb, align 1
  %11 = and i8 %10, -49
  %12 = or i8 %11, 16
  store i8 %12, ptr %busarb, align 1
  %call30 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 118, i8 noundef zeroext %12) #14
  %dev31 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev31, ptr noundef nonnull @.str.27) #17
  br label %exit

exit:                                             ; preds = %if.end24, %if.end12.exit_crit_edge, %if.else.exit_crit_edge, %if.then.exit_crit_edge
  %p.1 = phi ptr [ %call, %if.then.exit_crit_edge ], [ %p.0, %if.end24 ], [ null, %if.else.exit_crit_edge ], [ %call8, %if.end12.exit_crit_edge ]
  call void @pci_dev_put(ptr noundef %p.1) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %busarb) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_viaetbf(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %0 = load i32, ptr @pci_pci_problems, align 4
  %and = and i32 %0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.25) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %1 = load i32, ptr @pci_pci_problems, align 4
  %or = or i32 %1, 8
  store i32 %or, ptr @pci_pci_problems, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_vsfx(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %0 = load i32, ptr @pci_pci_problems, align 4
  %and = and i32 %0, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.25) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %1 = load i32, ptr @pci_pci_problems, align 4
  %or = or i32 %1, 16
  store i32 %or, ptr @pci_pci_problems, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_alimagik(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %0 = load i32, ptr @pci_pci_problems, align 4
  %and = and i32 %0, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.25) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %1 = load i32, ptr @pci_pci_problems, align 4
  %or = or i32 %1, 34
  store i32 %or, ptr @pci_pci_problems, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_natoma(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %0 = load i32, ptr @pci_pci_problems, align 4
  %and = and i32 %0, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.25) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pci_pci_problems to i32))
  %1 = load i32, ptr @pci_pci_problems, align 4
  %or = or i32 %1, 4
  store i32 %or, ptr @pci_pci_problems, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal void @quirk_citrine(ptr nocapture noundef writeonly %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %cfg_size = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %0 = ptrtoint ptr %cfg_size to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 160, ptr %cfg_size, align 8
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal void @quirk_nfp6000(ptr nocapture noundef writeonly %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %cfg_size = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 45
  %0 = ptrtoint ptr %cfg_size to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 1536, ptr %cfg_size, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_extend_bar_to_page(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev3 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %arrayidx = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0
  %flags = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 3
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %end.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 1
  %2 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %end.i, align 4
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %sub.i = add i32 %3, 1
  %add.i = sub i32 %sub.i, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i)
  %cmp1 = icmp ult i32 %add.i, 4096
  br i1 %cmp1, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %end.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 4095, ptr %end.i, align 4
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %arrayidx, align 4
  %or = or i32 %1, 536870912
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or, ptr %flags, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.33, i32 noundef 0, ptr noundef %arrayidx) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %arrayidx.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1
  %flags.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 3
  %9 = ptrtoint ptr %flags.1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags.1, align 4
  %and.1 = and i32 %10, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool.not.1, label %if.end.if.end.1_crit_edge, label %land.lhs.true.1

if.end.if.end.1_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.1

land.lhs.true.1:                                  ; preds = %if.end
  %end.i.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 1
  %11 = ptrtoint ptr %end.i.1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %end.i.1, align 4
  %13 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.1, align 4
  %sub.i.1 = add i32 %12, 1
  %add.i.1 = sub i32 %sub.i.1, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i.1)
  %cmp1.1 = icmp ult i32 %add.i.1, 4096
  br i1 %cmp1.1, label %if.then.1, label %land.lhs.true.1.if.end.1_crit_edge

land.lhs.true.1.if.end.1_crit_edge:               ; preds = %land.lhs.true.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.1

if.then.1:                                        ; preds = %land.lhs.true.1
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %end.i.1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 4095, ptr %end.i.1, align 4
  %16 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %arrayidx.1, align 4
  %or.1 = or i32 %10, 536870912
  %17 = ptrtoint ptr %flags.1 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %or.1, ptr %flags.1, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.33, i32 noundef 1, ptr noundef %arrayidx.1) #17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %land.lhs.true.1.if.end.1_crit_edge, %if.end.if.end.1_crit_edge
  %arrayidx.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2
  %flags.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 3
  %18 = ptrtoint ptr %flags.2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.2, align 4
  %and.2 = and i32 %19, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool.not.2 = icmp eq i32 %and.2, 0
  br i1 %tobool.not.2, label %if.end.1.if.end.2_crit_edge, label %land.lhs.true.2

if.end.1.if.end.2_crit_edge:                      ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.2

land.lhs.true.2:                                  ; preds = %if.end.1
  %end.i.2 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 1
  %20 = ptrtoint ptr %end.i.2 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %end.i.2, align 4
  %22 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.2, align 4
  %sub.i.2 = add i32 %21, 1
  %add.i.2 = sub i32 %sub.i.2, %23
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i.2)
  %cmp1.2 = icmp ult i32 %add.i.2, 4096
  br i1 %cmp1.2, label %if.then.2, label %land.lhs.true.2.if.end.2_crit_edge

land.lhs.true.2.if.end.2_crit_edge:               ; preds = %land.lhs.true.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.2

if.then.2:                                        ; preds = %land.lhs.true.2
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %end.i.2 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 4095, ptr %end.i.2, align 4
  %25 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %arrayidx.2, align 4
  %or.2 = or i32 %19, 536870912
  %26 = ptrtoint ptr %flags.2 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %or.2, ptr %flags.2, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.33, i32 noundef 2, ptr noundef %arrayidx.2) #17
  br label %if.end.2

if.end.2:                                         ; preds = %if.then.2, %land.lhs.true.2.if.end.2_crit_edge, %if.end.1.if.end.2_crit_edge
  %arrayidx.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 3
  %flags.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 3, i32 3
  %27 = ptrtoint ptr %flags.3 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %flags.3, align 4
  %and.3 = and i32 %28, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool.not.3 = icmp eq i32 %and.3, 0
  br i1 %tobool.not.3, label %if.end.2.if.end.3_crit_edge, label %land.lhs.true.3

if.end.2.if.end.3_crit_edge:                      ; preds = %if.end.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.3

land.lhs.true.3:                                  ; preds = %if.end.2
  %end.i.3 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 3, i32 1
  %29 = ptrtoint ptr %end.i.3 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %end.i.3, align 4
  %31 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.3, align 4
  %sub.i.3 = add i32 %30, 1
  %add.i.3 = sub i32 %sub.i.3, %32
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i.3)
  %cmp1.3 = icmp ult i32 %add.i.3, 4096
  br i1 %cmp1.3, label %if.then.3, label %land.lhs.true.3.if.end.3_crit_edge

land.lhs.true.3.if.end.3_crit_edge:               ; preds = %land.lhs.true.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.3

if.then.3:                                        ; preds = %land.lhs.true.3
  call void @__sanitizer_cov_trace_pc() #16
  %33 = ptrtoint ptr %end.i.3 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 4095, ptr %end.i.3, align 4
  %34 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %arrayidx.3, align 4
  %or.3 = or i32 %28, 536870912
  %35 = ptrtoint ptr %flags.3 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %or.3, ptr %flags.3, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.33, i32 noundef 3, ptr noundef %arrayidx.3) #17
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.3, %land.lhs.true.3.if.end.3_crit_edge, %if.end.2.if.end.3_crit_edge
  %arrayidx.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4
  %flags.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4, i32 3
  %36 = ptrtoint ptr %flags.4 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags.4, align 4
  %and.4 = and i32 %37, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool.not.4 = icmp eq i32 %and.4, 0
  br i1 %tobool.not.4, label %if.end.3.if.end.4_crit_edge, label %land.lhs.true.4

if.end.3.if.end.4_crit_edge:                      ; preds = %if.end.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.4

land.lhs.true.4:                                  ; preds = %if.end.3
  %end.i.4 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4, i32 1
  %38 = ptrtoint ptr %end.i.4 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %end.i.4, align 4
  %40 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx.4, align 4
  %sub.i.4 = add i32 %39, 1
  %add.i.4 = sub i32 %sub.i.4, %41
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i.4)
  %cmp1.4 = icmp ult i32 %add.i.4, 4096
  br i1 %cmp1.4, label %if.then.4, label %land.lhs.true.4.if.end.4_crit_edge

land.lhs.true.4.if.end.4_crit_edge:               ; preds = %land.lhs.true.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.4

if.then.4:                                        ; preds = %land.lhs.true.4
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %end.i.4 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 4095, ptr %end.i.4, align 4
  %43 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %arrayidx.4, align 4
  %or.4 = or i32 %37, 536870912
  %44 = ptrtoint ptr %flags.4 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %or.4, ptr %flags.4, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.33, i32 noundef 4, ptr noundef %arrayidx.4) #17
  br label %if.end.4

if.end.4:                                         ; preds = %if.then.4, %land.lhs.true.4.if.end.4_crit_edge, %if.end.3.if.end.4_crit_edge
  %arrayidx.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 5
  %flags.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 5, i32 3
  %45 = ptrtoint ptr %flags.5 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %flags.5, align 4
  %and.5 = and i32 %46, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5)
  %tobool.not.5 = icmp eq i32 %and.5, 0
  br i1 %tobool.not.5, label %if.end.4.if.end.5_crit_edge, label %land.lhs.true.5

if.end.4.if.end.5_crit_edge:                      ; preds = %if.end.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.5

land.lhs.true.5:                                  ; preds = %if.end.4
  %end.i.5 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 5, i32 1
  %47 = ptrtoint ptr %end.i.5 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %end.i.5, align 4
  %49 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx.5, align 4
  %sub.i.5 = add i32 %48, 1
  %add.i.5 = sub i32 %sub.i.5, %50
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i.5)
  %cmp1.5 = icmp ult i32 %add.i.5, 4096
  br i1 %cmp1.5, label %if.then.5, label %land.lhs.true.5.if.end.5_crit_edge

land.lhs.true.5.if.end.5_crit_edge:               ; preds = %land.lhs.true.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.5

if.then.5:                                        ; preds = %land.lhs.true.5
  call void @__sanitizer_cov_trace_pc() #16
  %51 = ptrtoint ptr %end.i.5 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 4095, ptr %end.i.5, align 4
  %52 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 0, ptr %arrayidx.5, align 4
  %or.5 = or i32 %46, 536870912
  %53 = ptrtoint ptr %flags.5 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %or.5, ptr %flags.5, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.33, i32 noundef 5, ptr noundef %arrayidx.5) #17
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.5, %land.lhs.true.5.if.end.5_crit_edge, %if.end.4.if.end.5_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_s3_64M(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %resource = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47
  %0 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %resource, align 4
  %and = and i32 %1, 67108863
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %end = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 1
  %2 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %end, align 4
  %add = add nuw i32 %1, 67108863
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %add)
  %cmp.not = icmp eq i32 %3, %add
  br i1 %cmp.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %or = or i32 %5, 536870912
  store i32 %or, ptr %flags, align 4
  %6 = ptrtoint ptr %resource to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %resource, align 4
  %end3 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 1
  %7 = ptrtoint ptr %end3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 67108863, ptr %end3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_cs5536_vsa(ptr noundef %dev) #0 align 64 {
entry:
  %region.i35 = alloca i32, align 4
  %bus_region.i36 = alloca %struct.pci_bus_region, align 4
  %region.i14 = alloca i32, align 4
  %bus_region.i15 = alloca %struct.pci_bus_region, align 4
  %region.i = alloca i32, align 4
  %bus_region.i = alloca %struct.pci_bus_region, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %end = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 1
  %0 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.if.then_crit_edge, label %cond.false

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

cond.false:                                       ; preds = %entry
  %resource = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47
  %2 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %resource, align 8
  %sub = sub i32 %1, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %sub)
  %phi.cmp = icmp eq i32 %sub, 7
  br i1 %phi.cmp, label %cond.false.if.end_crit_edge, label %cond.false.if.then_crit_edge

cond.false.if.then_crit_edge:                     ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

cond.false.if.end_crit_edge:                      ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %cond.false.if.then_crit_edge, %entry.if.then_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %region.i) #14
  %4 = ptrtoint ptr %region.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %region.i, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bus_region.i) #14
  %5 = getelementptr inbounds %struct.pci_bus_region, ptr %bus_region.i, i32 0, i32 1
  %call.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 16, ptr noundef nonnull %region.i) #14
  %6 = ptrtoint ptr %region.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %region.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %if.then.quirk_io.exit_crit_edge, label %if.end.i

if.then.quirk_io.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %quirk_io.exit

if.end.i:                                         ; preds = %if.then
  %resource.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47
  %init_name.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 3
  %8 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.end.i.pci_name.exit.i_crit_edge

if.end.i.pci_name.exit.i_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_name.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %10 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev.i.i, align 4
  br label %pci_name.exit.i

pci_name.exit.i:                                  ; preds = %if.end.i.i.i, %if.end.i.pci_name.exit.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %11, %if.end.i.i.i ], [ %9, %if.end.i.pci_name.exit.i_crit_edge ]
  %name2.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 2
  %12 = ptrtoint ptr %name2.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %retval.0.i.i.i, ptr %name2.i, align 4
  %and.i = and i32 %7, 3
  %flags.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 3
  %or.i = or i32 %and.i, 262416
  %13 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %or.i, ptr %flags.i, align 4
  %and4.i = and i32 %7, -8
  %14 = ptrtoint ptr %region.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %and4.i, ptr %region.i, align 4
  %15 = ptrtoint ptr %bus_region.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %and4.i, ptr %bus_region.i, align 4
  %sub6.i = or i32 %7, 7
  %16 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %sub6.i, ptr %5, align 4
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %17 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bus.i, align 8
  call void @pcibios_bus_to_resource(ptr noundef %18, ptr noundef %resource.i, ptr noundef nonnull %bus_region.i) #14
  %dev7.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev7.i, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.35, i32 noundef 16, ptr noundef %resource.i) #17
  br label %quirk_io.exit

quirk_io.exit:                                    ; preds = %pci_name.exit.i, %if.then.quirk_io.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bus_region.i) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %region.i) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %region.i14) #14
  %19 = ptrtoint ptr %region.i14 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -1, ptr %region.i14, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bus_region.i15) #14
  %20 = getelementptr inbounds %struct.pci_bus_region, ptr %bus_region.i15, i32 0, i32 1
  %call.i16 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 20, ptr noundef nonnull %region.i14) #14
  %21 = ptrtoint ptr %region.i14 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %region.i14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i17 = icmp eq i32 %22, 0
  br i1 %tobool.not.i17, label %quirk_io.exit.quirk_io.exit34_crit_edge, label %if.end.i21

quirk_io.exit.quirk_io.exit34_crit_edge:          ; preds = %quirk_io.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %quirk_io.exit34

if.end.i21:                                       ; preds = %quirk_io.exit
  %add.ptr.i = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1
  %init_name.i.i.i19 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 3
  %23 = ptrtoint ptr %init_name.i.i.i19 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %init_name.i.i.i19, align 8
  %tobool.not.i.i.i20 = icmp eq ptr %24, null
  br i1 %tobool.not.i.i.i20, label %if.end.i.i.i23, label %if.end.i21.pci_name.exit.i33_crit_edge

if.end.i21.pci_name.exit.i33_crit_edge:           ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_name.exit.i33

if.end.i.i.i23:                                   ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i.i22 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %25 = ptrtoint ptr %dev.i.i22 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dev.i.i22, align 4
  br label %pci_name.exit.i33

pci_name.exit.i33:                                ; preds = %if.end.i.i.i23, %if.end.i21.pci_name.exit.i33_crit_edge
  %retval.0.i.i.i24 = phi ptr [ %26, %if.end.i.i.i23 ], [ %24, %if.end.i21.pci_name.exit.i33_crit_edge ]
  %name2.i25 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 2
  %27 = ptrtoint ptr %name2.i25 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %retval.0.i.i.i24, ptr %name2.i25, align 4
  %and.i26 = and i32 %22, 3
  %flags.i27 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 3
  %or.i28 = or i32 %and.i26, 262416
  %28 = ptrtoint ptr %flags.i27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %or.i28, ptr %flags.i27, align 4
  %and4.i29 = and i32 %22, -256
  %29 = ptrtoint ptr %region.i14 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %and4.i29, ptr %region.i14, align 4
  %30 = ptrtoint ptr %bus_region.i15 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %and4.i29, ptr %bus_region.i15, align 4
  %sub6.i30 = or i32 %22, 255
  %31 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %sub6.i30, ptr %20, align 4
  %bus.i31 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %32 = ptrtoint ptr %bus.i31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %bus.i31, align 8
  call void @pcibios_bus_to_resource(ptr noundef %33, ptr noundef %add.ptr.i, ptr noundef nonnull %bus_region.i15) #14
  %dev7.i32 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev7.i32, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.35, i32 noundef 20, ptr noundef %add.ptr.i) #17
  br label %quirk_io.exit34

quirk_io.exit34:                                  ; preds = %pci_name.exit.i33, %quirk_io.exit.quirk_io.exit34_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bus_region.i15) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %region.i14) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %region.i35) #14
  %34 = ptrtoint ptr %region.i35 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 -1, ptr %region.i35, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bus_region.i36) #14
  %35 = getelementptr inbounds %struct.pci_bus_region, ptr %bus_region.i36, i32 0, i32 1
  %call.i37 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 24, ptr noundef nonnull %region.i35) #14
  %36 = ptrtoint ptr %region.i35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %region.i35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.i38 = icmp eq i32 %37, 0
  br i1 %tobool.not.i38, label %quirk_io.exit34.quirk_io.exit56_crit_edge, label %if.end.i43

quirk_io.exit34.quirk_io.exit56_crit_edge:        ; preds = %quirk_io.exit34
  call void @__sanitizer_cov_trace_pc() #16
  br label %quirk_io.exit56

if.end.i43:                                       ; preds = %quirk_io.exit34
  %add.ptr.i40 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2
  %init_name.i.i.i41 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 3
  %38 = ptrtoint ptr %init_name.i.i.i41 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %init_name.i.i.i41, align 8
  %tobool.not.i.i.i42 = icmp eq ptr %39, null
  br i1 %tobool.not.i.i.i42, label %if.end.i.i.i45, label %if.end.i43.pci_name.exit.i55_crit_edge

if.end.i43.pci_name.exit.i55_crit_edge:           ; preds = %if.end.i43
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_name.exit.i55

if.end.i.i.i45:                                   ; preds = %if.end.i43
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i.i44 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %40 = ptrtoint ptr %dev.i.i44 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %dev.i.i44, align 4
  br label %pci_name.exit.i55

pci_name.exit.i55:                                ; preds = %if.end.i.i.i45, %if.end.i43.pci_name.exit.i55_crit_edge
  %retval.0.i.i.i46 = phi ptr [ %41, %if.end.i.i.i45 ], [ %39, %if.end.i43.pci_name.exit.i55_crit_edge ]
  %name2.i47 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 2
  %42 = ptrtoint ptr %name2.i47 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %retval.0.i.i.i46, ptr %name2.i47, align 4
  %and.i48 = and i32 %37, 3
  %flags.i49 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 3
  %or.i50 = or i32 %and.i48, 262416
  %43 = ptrtoint ptr %flags.i49 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %or.i50, ptr %flags.i49, align 4
  %and4.i51 = and i32 %37, -64
  %44 = ptrtoint ptr %region.i35 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %and4.i51, ptr %region.i35, align 4
  %45 = ptrtoint ptr %bus_region.i36 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %and4.i51, ptr %bus_region.i36, align 4
  %sub6.i52 = or i32 %37, 63
  %46 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %sub6.i52, ptr %35, align 4
  %bus.i53 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %47 = ptrtoint ptr %bus.i53 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %bus.i53, align 8
  call void @pcibios_bus_to_resource(ptr noundef %48, ptr noundef %add.ptr.i40, ptr noundef nonnull %bus_region.i36) #14
  %dev7.i54 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev7.i54, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.35, i32 noundef 24, ptr noundef %add.ptr.i40) #17
  br label %quirk_io.exit56

quirk_io.exit56:                                  ; preds = %pci_name.exit.i55, %quirk_io.exit34.quirk_io.exit56_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bus_region.i36) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %region.i35) #14
  %dev7 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev7, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.35) #17
  br label %if.end

if.end:                                           ; preds = %quirk_io.exit56, %cond.false.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_ati_exploding_mce(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.40) #17
  %call = tail call ptr @__request_region(ptr noundef nonnull @ioport_resource, i32 noundef 944, i32 noundef 12, ptr noundef nonnull @.str.42, i32 noundef 0) #14
  %call2 = tail call ptr @__request_region(ptr noundef nonnull @ioport_resource, i32 noundef 979, i32 noundef 1, ptr noundef nonnull @.str.42, i32 noundef 0) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_amd_nl_class(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %class1 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 11
  %0 = ptrtoint ptr %class1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %class1, align 8
  store i32 787454, ptr %class1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.43, i32 noundef %1, i32 noundef 787454) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_synopsys_haps(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 8
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %device, align 2
  %.off = add i16 %1, 21555
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %.off)
  %switch = icmp ult i16 %.off, 3
  br i1 %switch, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %class1 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 11
  %2 = ptrtoint ptr %class1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %class1, align 8
  store i32 787454, ptr %class1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.43, i32 noundef %3, i32 noundef 787454) #17
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_ali7101_acpi(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 224, i32 noundef 64, i32 noundef 13, ptr noundef nonnull @.str.46)
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 226, i32 noundef 32, i32 noundef 14, ptr noundef nonnull @.str.47)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_piix4_acpi(ptr noundef %dev) #0 align 64 {
entry:
  %devres.i122 = alloca i32, align 4
  %devres.i103 = alloca i32, align 4
  %devres.i83 = alloca i32, align 4
  %devres.i64 = alloca i32, align 4
  %devres.i53 = alloca i32, align 4
  %devres.i34 = alloca i32, align 4
  %devres.i15 = alloca i32, align 4
  %devres.i = alloca i32, align 4
  %res_a = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %res_a) #14
  %0 = ptrtoint ptr %res_a to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %res_a, align 4, !annotation !1882
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 64, i32 noundef 64, i32 noundef 13, ptr noundef nonnull @.str.50)
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 144, i32 noundef 16, i32 noundef 14, ptr noundef nonnull @.str.51)
  %call = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 92, ptr noundef nonnull %res_a) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devres.i) #14
  %1 = ptrtoint ptr %devres.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %devres.i, align 4, !annotation !1882
  %call.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 96, ptr noundef nonnull %devres.i) #14
  %2 = ptrtoint ptr %devres.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %devres.i, align 4
  %and.i = and i32 %3, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 6291456, i32 %and.i)
  %cmp.not.i = icmp eq i32 %and.i, 6291456
  br i1 %cmp.not.i, label %if.end.i, label %entry.piix4_io_quirk.exit_crit_edge

entry.piix4_io_quirk.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %piix4_io_quirk.exit

if.end.i:                                         ; preds = %entry
  %shr.i = lshr i32 %3, 16
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i.for.cond.i_crit_edge, %if.end.i
  %size.0.i = phi i32 [ 16, %if.end.i ], [ %shr3.i, %for.cond.i.for.cond.i_crit_edge ]
  %shr3.i = lshr i32 %size.0.i, 1
  %and4.i = and i32 %shr3.i, %shr.i
  %cmp5.i = icmp eq i32 %and4.i, %shr3.i
  br i1 %cmp5.i, label %for.end.i, label %for.cond.i.for.cond.i_crit_edge

for.cond.i.for.cond.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  %and2.i = and i32 %3, 65535
  %sub.i = sub nsw i32 0, %size.0.i
  %and8.i = and i32 %and2.i, %sub.i
  %dev9.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i = add nsw i32 %size.0.i, -1
  %sub10.i = add nsw i32 %add.i, %and8.i
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev9.i, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.52, i32 noundef %and8.i, i32 noundef %sub10.i) #17
  br label %piix4_io_quirk.exit

piix4_io_quirk.exit:                              ; preds = %for.end.i, %entry.piix4_io_quirk.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devres.i) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devres.i15) #14
  %4 = ptrtoint ptr %devres.i15 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %devres.i15, align 4, !annotation !1882
  %call.i16 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 100, ptr noundef nonnull %devres.i15) #14
  %5 = ptrtoint ptr %devres.i15 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %devres.i15, align 4
  %and.i17 = and i32 %6, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 6291456, i32 %and.i17)
  %cmp.not.i18 = icmp eq i32 %and.i17, 6291456
  br i1 %cmp.not.i18, label %if.end.i20, label %piix4_io_quirk.exit.piix4_io_quirk.exit33_crit_edge

piix4_io_quirk.exit.piix4_io_quirk.exit33_crit_edge: ; preds = %piix4_io_quirk.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %piix4_io_quirk.exit33

if.end.i20:                                       ; preds = %piix4_io_quirk.exit
  %shr.i19 = lshr i32 %6, 16
  br label %for.cond.i25

for.cond.i25:                                     ; preds = %for.cond.i25.for.cond.i25_crit_edge, %if.end.i20
  %size.0.i21 = phi i32 [ 16, %if.end.i20 ], [ %shr3.i22, %for.cond.i25.for.cond.i25_crit_edge ]
  %shr3.i22 = lshr i32 %size.0.i21, 1
  %and4.i23 = and i32 %shr3.i22, %shr.i19
  %cmp5.i24 = icmp eq i32 %and4.i23, %shr3.i22
  br i1 %cmp5.i24, label %for.end.i32, label %for.cond.i25.for.cond.i25_crit_edge

for.cond.i25.for.cond.i25_crit_edge:              ; preds = %for.cond.i25
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i25

for.end.i32:                                      ; preds = %for.cond.i25
  call void @__sanitizer_cov_trace_pc() #16
  %and2.i26 = and i32 %6, 65535
  %sub.i27 = sub nsw i32 0, %size.0.i21
  %and8.i28 = and i32 %and2.i26, %sub.i27
  %dev9.i29 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i30 = add nsw i32 %size.0.i21, -1
  %sub10.i31 = add nsw i32 %add.i30, %and8.i28
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev9.i29, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.53, i32 noundef %and8.i28, i32 noundef %sub10.i31) #17
  br label %piix4_io_quirk.exit33

piix4_io_quirk.exit33:                            ; preds = %for.end.i32, %piix4_io_quirk.exit.piix4_io_quirk.exit33_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devres.i15) #14
  %7 = ptrtoint ptr %res_a to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %res_a, align 4
  %and = and i32 %8, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %piix4_io_quirk.exit33.if.end_crit_edge, label %if.then

piix4_io_quirk.exit33.if.end_crit_edge:           ; preds = %piix4_io_quirk.exit33
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %piix4_io_quirk.exit33
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devres.i34) #14
  %9 = ptrtoint ptr %devres.i34 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %devres.i34, align 4, !annotation !1882
  %call.i35 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 104, ptr noundef nonnull %devres.i34) #14
  %10 = ptrtoint ptr %devres.i34 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %devres.i34, align 4
  %and.i36 = and i32 %11, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i36)
  %cmp.not.i37.not = icmp eq i32 %and.i36, 0
  br i1 %cmp.not.i37.not, label %if.then.piix4_io_quirk.exit52_crit_edge, label %if.end.i39

if.then.piix4_io_quirk.exit52_crit_edge:          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %piix4_io_quirk.exit52

if.end.i39:                                       ; preds = %if.then
  %shr.i38 = lshr i32 %11, 16
  br label %for.cond.i44

for.cond.i44:                                     ; preds = %for.cond.i44.for.cond.i44_crit_edge, %if.end.i39
  %size.0.i40 = phi i32 [ 16, %if.end.i39 ], [ %shr3.i41, %for.cond.i44.for.cond.i44_crit_edge ]
  %shr3.i41 = lshr i32 %size.0.i40, 1
  %and4.i42 = and i32 %shr3.i41, %shr.i38
  %cmp5.i43 = icmp eq i32 %and4.i42, %shr3.i41
  br i1 %cmp5.i43, label %for.end.i51, label %for.cond.i44.for.cond.i44_crit_edge

for.cond.i44.for.cond.i44_crit_edge:              ; preds = %for.cond.i44
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i44

for.end.i51:                                      ; preds = %for.cond.i44
  call void @__sanitizer_cov_trace_pc() #16
  %and2.i45 = and i32 %11, 65535
  %sub.i46 = sub nsw i32 0, %size.0.i40
  %and8.i47 = and i32 %and2.i45, %sub.i46
  %dev9.i48 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i49 = add nsw i32 %size.0.i40, -1
  %sub10.i50 = add nsw i32 %add.i49, %and8.i47
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev9.i48, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.54, i32 noundef %and8.i47, i32 noundef %sub10.i50) #17
  br label %piix4_io_quirk.exit52

piix4_io_quirk.exit52:                            ; preds = %for.end.i51, %if.then.piix4_io_quirk.exit52_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devres.i34) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devres.i53) #14
  %12 = ptrtoint ptr %devres.i53 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %devres.i53, align 4, !annotation !1882
  %call.i54 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 108, ptr noundef nonnull %devres.i53) #14
  %13 = ptrtoint ptr %devres.i53 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %devres.i53, align 4
  %and.i55 = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i55)
  %cmp.not.not.i = icmp eq i32 %and.i55, 0
  br i1 %cmp.not.not.i, label %piix4_io_quirk.exit52.piix4_mem_quirk.exit_crit_edge, label %if.end.i57

piix4_io_quirk.exit52.piix4_mem_quirk.exit_crit_edge: ; preds = %piix4_io_quirk.exit52
  call void @__sanitizer_cov_trace_pc() #16
  br label %piix4_mem_quirk.exit

if.end.i57:                                       ; preds = %piix4_io_quirk.exit52
  %and2.i56 = shl i32 %14, 16
  %shl.i = and i32 %and2.i56, 4128768
  br label %for.cond.i60

for.cond.i60:                                     ; preds = %for.cond.i60.for.cond.i60_crit_edge, %if.end.i57
  %size.0.i58 = phi i32 [ 8388608, %if.end.i57 ], [ %shr.i59, %for.cond.i60.for.cond.i60_crit_edge ]
  %shr.i59 = lshr i32 %size.0.i58, 1
  %and3.i = and i32 %shl.i, %shr.i59
  %cmp4.i = icmp eq i32 %and3.i, %shr.i59
  br i1 %cmp4.i, label %for.end.i63, label %for.cond.i60.for.cond.i60_crit_edge

for.cond.i60.for.cond.i60_crit_edge:              ; preds = %for.cond.i60
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i60

for.end.i63:                                      ; preds = %for.cond.i60
  call void @__sanitizer_cov_trace_pc() #16
  %and1.i = and i32 %14, -65536
  %sub.i61 = sub nsw i32 0, %size.0.i58
  %and7.i = and i32 %and1.i, %sub.i61
  %dev8.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i62 = add nsw i32 %size.0.i58, -1
  %sub9.i = add i32 %add.i62, %and7.i
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev8.i, ptr noundef nonnull @.str.62, ptr noundef nonnull @.str.55, i32 noundef %and7.i, i32 noundef %sub9.i) #17
  br label %piix4_mem_quirk.exit

piix4_mem_quirk.exit:                             ; preds = %for.end.i63, %piix4_io_quirk.exit52.piix4_mem_quirk.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devres.i53) #14
  br label %if.end

if.end:                                           ; preds = %piix4_mem_quirk.exit, %piix4_io_quirk.exit33.if.end_crit_edge
  %15 = ptrtoint ptr %res_a to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %res_a, align 4
  %and1 = and i32 %16, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %if.end.if.end4_crit_edge, label %if.then3

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devres.i64) #14
  %17 = ptrtoint ptr %devres.i64 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -1, ptr %devres.i64, align 4, !annotation !1882
  %call.i65 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 112, ptr noundef nonnull %devres.i64) #14
  %18 = ptrtoint ptr %devres.i64 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %devres.i64, align 4
  %and.i66 = and i32 %19, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i66)
  %cmp.not.i67.not = icmp eq i32 %and.i66, 0
  br i1 %cmp.not.i67.not, label %if.then3.piix4_io_quirk.exit82_crit_edge, label %if.end.i69

if.then3.piix4_io_quirk.exit82_crit_edge:         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %piix4_io_quirk.exit82

if.end.i69:                                       ; preds = %if.then3
  %shr.i68 = lshr i32 %19, 16
  br label %for.cond.i74

for.cond.i74:                                     ; preds = %for.cond.i74.for.cond.i74_crit_edge, %if.end.i69
  %size.0.i70 = phi i32 [ 16, %if.end.i69 ], [ %shr3.i71, %for.cond.i74.for.cond.i74_crit_edge ]
  %shr3.i71 = lshr i32 %size.0.i70, 1
  %and4.i72 = and i32 %shr3.i71, %shr.i68
  %cmp5.i73 = icmp eq i32 %and4.i72, %shr3.i71
  br i1 %cmp5.i73, label %for.end.i81, label %for.cond.i74.for.cond.i74_crit_edge

for.cond.i74.for.cond.i74_crit_edge:              ; preds = %for.cond.i74
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i74

for.end.i81:                                      ; preds = %for.cond.i74
  call void @__sanitizer_cov_trace_pc() #16
  %and2.i75 = and i32 %19, 65535
  %sub.i76 = sub nsw i32 0, %size.0.i70
  %and8.i77 = and i32 %and2.i75, %sub.i76
  %dev9.i78 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i79 = add nsw i32 %size.0.i70, -1
  %sub10.i80 = add nsw i32 %add.i79, %and8.i77
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev9.i78, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.56, i32 noundef %and8.i77, i32 noundef %sub10.i80) #17
  br label %piix4_io_quirk.exit82

piix4_io_quirk.exit82:                            ; preds = %for.end.i81, %if.then3.piix4_io_quirk.exit82_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devres.i64) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devres.i83) #14
  %20 = ptrtoint ptr %devres.i83 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 -1, ptr %devres.i83, align 4, !annotation !1882
  %call.i84 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 116, ptr noundef nonnull %devres.i83) #14
  %21 = ptrtoint ptr %devres.i83 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %devres.i83, align 4
  %and.i85 = and i32 %22, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i85)
  %cmp.not.not.i86 = icmp eq i32 %and.i85, 0
  br i1 %cmp.not.not.i86, label %piix4_io_quirk.exit82.piix4_mem_quirk.exit102_crit_edge, label %if.end.i89

piix4_io_quirk.exit82.piix4_mem_quirk.exit102_crit_edge: ; preds = %piix4_io_quirk.exit82
  call void @__sanitizer_cov_trace_pc() #16
  br label %piix4_mem_quirk.exit102

if.end.i89:                                       ; preds = %piix4_io_quirk.exit82
  %and2.i87 = shl i32 %22, 16
  %shl.i88 = and i32 %and2.i87, 4128768
  br label %for.cond.i94

for.cond.i94:                                     ; preds = %for.cond.i94.for.cond.i94_crit_edge, %if.end.i89
  %size.0.i90 = phi i32 [ 8388608, %if.end.i89 ], [ %shr.i91, %for.cond.i94.for.cond.i94_crit_edge ]
  %shr.i91 = lshr i32 %size.0.i90, 1
  %and3.i92 = and i32 %shl.i88, %shr.i91
  %cmp4.i93 = icmp eq i32 %and3.i92, %shr.i91
  br i1 %cmp4.i93, label %for.end.i101, label %for.cond.i94.for.cond.i94_crit_edge

for.cond.i94.for.cond.i94_crit_edge:              ; preds = %for.cond.i94
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i94

for.end.i101:                                     ; preds = %for.cond.i94
  call void @__sanitizer_cov_trace_pc() #16
  %and1.i95 = and i32 %22, -65536
  %sub.i96 = sub nsw i32 0, %size.0.i90
  %and7.i97 = and i32 %and1.i95, %sub.i96
  %dev8.i98 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i99 = add nsw i32 %size.0.i90, -1
  %sub9.i100 = add i32 %add.i99, %and7.i97
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev8.i98, ptr noundef nonnull @.str.62, ptr noundef nonnull @.str.57, i32 noundef %and7.i97, i32 noundef %sub9.i100) #17
  br label %piix4_mem_quirk.exit102

piix4_mem_quirk.exit102:                          ; preds = %for.end.i101, %piix4_io_quirk.exit82.piix4_mem_quirk.exit102_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devres.i83) #14
  br label %if.end4

if.end4:                                          ; preds = %piix4_mem_quirk.exit102, %if.end.if.end4_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devres.i103) #14
  %23 = ptrtoint ptr %devres.i103 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -1, ptr %devres.i103, align 4, !annotation !1882
  %call.i104 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 120, ptr noundef nonnull %devres.i103) #14
  %24 = ptrtoint ptr %devres.i103 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %devres.i103, align 4
  %and.i105 = and i32 %25, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i105)
  %cmp.not.i106.not = icmp eq i32 %and.i105, 0
  br i1 %cmp.not.i106.not, label %if.end4.piix4_io_quirk.exit121_crit_edge, label %if.end.i108

if.end4.piix4_io_quirk.exit121_crit_edge:         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %piix4_io_quirk.exit121

if.end.i108:                                      ; preds = %if.end4
  %shr.i107 = lshr i32 %25, 16
  br label %for.cond.i113

for.cond.i113:                                    ; preds = %for.cond.i113.for.cond.i113_crit_edge, %if.end.i108
  %size.0.i109 = phi i32 [ 16, %if.end.i108 ], [ %shr3.i110, %for.cond.i113.for.cond.i113_crit_edge ]
  %shr3.i110 = lshr i32 %size.0.i109, 1
  %and4.i111 = and i32 %shr3.i110, %shr.i107
  %cmp5.i112 = icmp eq i32 %and4.i111, %shr3.i110
  br i1 %cmp5.i112, label %for.end.i120, label %for.cond.i113.for.cond.i113_crit_edge

for.cond.i113.for.cond.i113_crit_edge:            ; preds = %for.cond.i113
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i113

for.end.i120:                                     ; preds = %for.cond.i113
  call void @__sanitizer_cov_trace_pc() #16
  %and2.i114 = and i32 %25, 65535
  %sub.i115 = sub nsw i32 0, %size.0.i109
  %and8.i116 = and i32 %and2.i114, %sub.i115
  %dev9.i117 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i118 = add nsw i32 %size.0.i109, -1
  %sub10.i119 = add nsw i32 %add.i118, %and8.i116
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev9.i117, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.58, i32 noundef %and8.i116, i32 noundef %sub10.i119) #17
  br label %piix4_io_quirk.exit121

piix4_io_quirk.exit121:                           ; preds = %for.end.i120, %if.end4.piix4_io_quirk.exit121_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devres.i103) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %devres.i122) #14
  %26 = ptrtoint ptr %devres.i122 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 -1, ptr %devres.i122, align 4, !annotation !1882
  %call.i123 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 124, ptr noundef nonnull %devres.i122) #14
  %27 = ptrtoint ptr %devres.i122 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %devres.i122, align 4
  %and.i124 = and i32 %28, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i124)
  %cmp.not.i125.not = icmp eq i32 %and.i124, 0
  br i1 %cmp.not.i125.not, label %piix4_io_quirk.exit121.piix4_io_quirk.exit140_crit_edge, label %if.end.i127

piix4_io_quirk.exit121.piix4_io_quirk.exit140_crit_edge: ; preds = %piix4_io_quirk.exit121
  call void @__sanitizer_cov_trace_pc() #16
  br label %piix4_io_quirk.exit140

if.end.i127:                                      ; preds = %piix4_io_quirk.exit121
  %shr.i126 = lshr i32 %28, 16
  br label %for.cond.i132

for.cond.i132:                                    ; preds = %for.cond.i132.for.cond.i132_crit_edge, %if.end.i127
  %size.0.i128 = phi i32 [ 16, %if.end.i127 ], [ %shr3.i129, %for.cond.i132.for.cond.i132_crit_edge ]
  %shr3.i129 = lshr i32 %size.0.i128, 1
  %and4.i130 = and i32 %shr3.i129, %shr.i126
  %cmp5.i131 = icmp eq i32 %and4.i130, %shr3.i129
  br i1 %cmp5.i131, label %for.end.i139, label %for.cond.i132.for.cond.i132_crit_edge

for.cond.i132.for.cond.i132_crit_edge:            ; preds = %for.cond.i132
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.i132

for.end.i139:                                     ; preds = %for.cond.i132
  call void @__sanitizer_cov_trace_pc() #16
  %and2.i133 = and i32 %28, 65535
  %sub.i134 = sub nsw i32 0, %size.0.i128
  %and8.i135 = and i32 %and2.i133, %sub.i134
  %dev9.i136 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %add.i137 = add nsw i32 %size.0.i128, -1
  %sub10.i138 = add nsw i32 %add.i137, %and8.i135
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev9.i136, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.59, i32 noundef %and8.i135, i32 noundef %sub10.i138) #17
  br label %piix4_io_quirk.exit140

piix4_io_quirk.exit140:                           ; preds = %for.end.i139, %piix4_io_quirk.exit121.piix4_io_quirk.exit140_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %devres.i122) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %res_a) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_ich4_lpc_acpi(ptr noundef %dev) #0 align 64 {
entry:
  %enable = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %enable) #14
  %0 = ptrtoint ptr %enable to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %enable, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 68, ptr noundef nonnull %enable) #14
  %1 = ptrtoint ptr %enable to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %enable, align 1
  %3 = and i8 %2, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 64, i32 noundef 128, i32 noundef 13, ptr noundef nonnull @.str.64)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %call1 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 92, ptr noundef nonnull %enable) #14
  %4 = ptrtoint ptr %enable to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %enable, align 1
  %6 = and i8 %5, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool4.not = icmp eq i8 %6, 0
  br i1 %tobool4.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 88, i32 noundef 64, i32 noundef 14, ptr noundef nonnull @.str.65)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %enable) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_ich6_lpc(ptr noundef %dev) #0 align 64 {
entry:
  %val.i6 = alloca i32, align 4
  %val.i = alloca i32, align 4
  %enable.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %enable.i) #14
  %0 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %enable.i, align 1, !annotation !1882
  %call.i = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 68, ptr noundef nonnull %enable.i) #14
  %1 = ptrtoint ptr %enable.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %enable.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %2)
  %tobool.not.i = icmp sgt i8 %2, -1
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %if.then.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 64, i32 noundef 128, i32 noundef 13, ptr noundef nonnull @.str.68) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry.if.end.i_crit_edge
  %call1.i = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 76, ptr noundef nonnull %enable.i) #14
  %3 = ptrtoint ptr %enable.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %enable.i, align 1
  %5 = and i8 %4, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool4.not.i = icmp eq i8 %5, 0
  br i1 %tobool4.not.i, label %if.end.i.ich6_lpc_acpi_gpio.exit_crit_edge, label %if.then5.i

if.end.i.ich6_lpc_acpi_gpio.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ich6_lpc_acpi_gpio.exit

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 72, i32 noundef 64, i32 noundef 14, ptr noundef nonnull @.str.69) #14
  br label %ich6_lpc_acpi_gpio.exit

ich6_lpc_acpi_gpio.exit:                          ; preds = %if.then5.i, %if.end.i.ich6_lpc_acpi_gpio.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %enable.i) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #14
  %6 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %val.i, align 4, !annotation !1882
  %call.i3 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 132, ptr noundef nonnull %val.i) #14
  %7 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val.i, align 4
  %and.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i4 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i4, label %ich6_lpc_acpi_gpio.exit.ich6_lpc_generic_decode.exit_crit_edge, label %if.end.i5

ich6_lpc_acpi_gpio.exit.ich6_lpc_generic_decode.exit_crit_edge: ; preds = %ich6_lpc_acpi_gpio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ich6_lpc_generic_decode.exit

if.end.i5:                                        ; preds = %ich6_lpc_acpi_gpio.exit
  call void @__sanitizer_cov_trace_pc() #16
  %and5.i = and i32 %8, 65408
  %dev6.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %sub7.i = or i32 %and5.i, 127
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev6.i, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.66, i32 noundef %and5.i, i32 noundef %sub7.i) #17
  br label %ich6_lpc_generic_decode.exit

ich6_lpc_generic_decode.exit:                     ; preds = %if.end.i5, %ich6_lpc_acpi_gpio.exit.ich6_lpc_generic_decode.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i6) #14
  %9 = ptrtoint ptr %val.i6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %val.i6, align 4, !annotation !1882
  %call.i7 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 136, ptr noundef nonnull %val.i6) #14
  %10 = ptrtoint ptr %val.i6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %val.i6, align 4
  %and.i8 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8)
  %tobool.not.i9 = icmp eq i32 %and.i8, 0
  br i1 %tobool.not.i9, label %ich6_lpc_generic_decode.exit.ich6_lpc_generic_decode.exit14_crit_edge, label %if.end.i13

ich6_lpc_generic_decode.exit.ich6_lpc_generic_decode.exit14_crit_edge: ; preds = %ich6_lpc_generic_decode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ich6_lpc_generic_decode.exit14

if.end.i13:                                       ; preds = %ich6_lpc_generic_decode.exit
  call void @__sanitizer_cov_trace_pc() #16
  %and5.i10 = and i32 %11, 65520
  %dev6.i11 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %sub7.i12 = or i32 %and5.i10, 15
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev6.i11, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.67, i32 noundef %and5.i10, i32 noundef %sub7.i12) #17
  br label %ich6_lpc_generic_decode.exit14

ich6_lpc_generic_decode.exit14:                   ; preds = %if.end.i13, %ich6_lpc_generic_decode.exit.ich6_lpc_generic_decode.exit14_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i6) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_ich7_lpc(ptr noundef %dev) #0 align 64 {
entry:
  %val.i30 = alloca i32, align 4
  %val.i19 = alloca i32, align 4
  %val.i8 = alloca i32, align 4
  %val.i = alloca i32, align 4
  %enable.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %enable.i) #14
  %0 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %enable.i, align 1, !annotation !1882
  %call.i = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 68, ptr noundef nonnull %enable.i) #14
  %1 = ptrtoint ptr %enable.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %enable.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %2)
  %tobool.not.i = icmp sgt i8 %2, -1
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %if.then.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 64, i32 noundef 128, i32 noundef 13, ptr noundef nonnull @.str.68) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry.if.end.i_crit_edge
  %call1.i = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 76, ptr noundef nonnull %enable.i) #14
  %3 = ptrtoint ptr %enable.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %enable.i, align 1
  %5 = and i8 %4, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool4.not.i = icmp eq i8 %5, 0
  br i1 %tobool4.not.i, label %if.end.i.ich6_lpc_acpi_gpio.exit_crit_edge, label %if.then5.i

if.end.i.ich6_lpc_acpi_gpio.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ich6_lpc_acpi_gpio.exit

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 72, i32 noundef 64, i32 noundef 14, ptr noundef nonnull @.str.69) #14
  br label %ich6_lpc_acpi_gpio.exit

ich6_lpc_acpi_gpio.exit:                          ; preds = %if.then5.i, %if.end.i.ich6_lpc_acpi_gpio.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %enable.i) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #14
  %6 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %val.i, align 4, !annotation !1882
  %call.i5 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 132, ptr noundef nonnull %val.i) #14
  %7 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val.i, align 4
  %and.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i6 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i6, label %ich6_lpc_acpi_gpio.exit.ich7_lpc_generic_decode.exit_crit_edge, label %if.end.i7

ich6_lpc_acpi_gpio.exit.ich7_lpc_generic_decode.exit_crit_edge: ; preds = %ich6_lpc_acpi_gpio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ich7_lpc_generic_decode.exit

if.end.i7:                                        ; preds = %ich6_lpc_acpi_gpio.exit
  call void @__sanitizer_cov_trace_pc() #16
  %and1.i = and i32 %8, 65532
  %shr.i = lshr i32 %8, 16
  %and2.i = and i32 %shr.i, 252
  %or.i = or i32 %and2.i, 3
  %dev3.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3.i, ptr noundef nonnull @.str.75, ptr noundef nonnull @.str.71, i32 noundef %and1.i, i32 noundef %or.i) #17
  br label %ich7_lpc_generic_decode.exit

ich7_lpc_generic_decode.exit:                     ; preds = %if.end.i7, %ich6_lpc_acpi_gpio.exit.ich7_lpc_generic_decode.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i8) #14
  %9 = ptrtoint ptr %val.i8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %val.i8, align 4, !annotation !1882
  %call.i9 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 136, ptr noundef nonnull %val.i8) #14
  %10 = ptrtoint ptr %val.i8 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %val.i8, align 4
  %and.i10 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i10)
  %tobool.not.i11 = icmp eq i32 %and.i10, 0
  br i1 %tobool.not.i11, label %ich7_lpc_generic_decode.exit.ich7_lpc_generic_decode.exit18_crit_edge, label %if.end.i17

ich7_lpc_generic_decode.exit.ich7_lpc_generic_decode.exit18_crit_edge: ; preds = %ich7_lpc_generic_decode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %ich7_lpc_generic_decode.exit18

if.end.i17:                                       ; preds = %ich7_lpc_generic_decode.exit
  call void @__sanitizer_cov_trace_pc() #16
  %and1.i12 = and i32 %11, 65532
  %shr.i13 = lshr i32 %11, 16
  %and2.i14 = and i32 %shr.i13, 252
  %or.i15 = or i32 %and2.i14, 3
  %dev3.i16 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3.i16, ptr noundef nonnull @.str.75, ptr noundef nonnull @.str.72, i32 noundef %and1.i12, i32 noundef %or.i15) #17
  br label %ich7_lpc_generic_decode.exit18

ich7_lpc_generic_decode.exit18:                   ; preds = %if.end.i17, %ich7_lpc_generic_decode.exit.ich7_lpc_generic_decode.exit18_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i8) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i19) #14
  %12 = ptrtoint ptr %val.i19 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %val.i19, align 4, !annotation !1882
  %call.i20 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 140, ptr noundef nonnull %val.i19) #14
  %13 = ptrtoint ptr %val.i19 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %val.i19, align 4
  %and.i21 = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i21)
  %tobool.not.i22 = icmp eq i32 %and.i21, 0
  br i1 %tobool.not.i22, label %ich7_lpc_generic_decode.exit18.ich7_lpc_generic_decode.exit29_crit_edge, label %if.end.i28

ich7_lpc_generic_decode.exit18.ich7_lpc_generic_decode.exit29_crit_edge: ; preds = %ich7_lpc_generic_decode.exit18
  call void @__sanitizer_cov_trace_pc() #16
  br label %ich7_lpc_generic_decode.exit29

if.end.i28:                                       ; preds = %ich7_lpc_generic_decode.exit18
  call void @__sanitizer_cov_trace_pc() #16
  %and1.i23 = and i32 %14, 65532
  %shr.i24 = lshr i32 %14, 16
  %and2.i25 = and i32 %shr.i24, 252
  %or.i26 = or i32 %and2.i25, 3
  %dev3.i27 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3.i27, ptr noundef nonnull @.str.75, ptr noundef nonnull @.str.73, i32 noundef %and1.i23, i32 noundef %or.i26) #17
  br label %ich7_lpc_generic_decode.exit29

ich7_lpc_generic_decode.exit29:                   ; preds = %if.end.i28, %ich7_lpc_generic_decode.exit18.ich7_lpc_generic_decode.exit29_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i19) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i30) #14
  %15 = ptrtoint ptr %val.i30 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -1, ptr %val.i30, align 4, !annotation !1882
  %call.i31 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 144, ptr noundef nonnull %val.i30) #14
  %16 = ptrtoint ptr %val.i30 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %val.i30, align 4
  %and.i32 = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32)
  %tobool.not.i33 = icmp eq i32 %and.i32, 0
  br i1 %tobool.not.i33, label %ich7_lpc_generic_decode.exit29.ich7_lpc_generic_decode.exit40_crit_edge, label %if.end.i39

ich7_lpc_generic_decode.exit29.ich7_lpc_generic_decode.exit40_crit_edge: ; preds = %ich7_lpc_generic_decode.exit29
  call void @__sanitizer_cov_trace_pc() #16
  br label %ich7_lpc_generic_decode.exit40

if.end.i39:                                       ; preds = %ich7_lpc_generic_decode.exit29
  call void @__sanitizer_cov_trace_pc() #16
  %and1.i34 = and i32 %17, 65532
  %shr.i35 = lshr i32 %17, 16
  %and2.i36 = and i32 %shr.i35, 252
  %or.i37 = or i32 %and2.i36, 3
  %dev3.i38 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3.i38, ptr noundef nonnull @.str.75, ptr noundef nonnull @.str.74, i32 noundef %and1.i34, i32 noundef %or.i37) #17
  br label %ich7_lpc_generic_decode.exit40

ich7_lpc_generic_decode.exit40:                   ; preds = %if.end.i39, %ich7_lpc_generic_decode.exit29.ich7_lpc_generic_decode.exit40_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i30) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_vt82c586_acpi(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %revision = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %revision, align 4
  %2 = and i8 %1, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 72, i32 noundef 256, i32 noundef 13, ptr noundef nonnull @.str.77)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_vt82c686_acpi(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %revision.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %revision.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %revision.i, align 4
  %2 = and i8 %1, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not.i = icmp eq i8 %2, 0
  br i1 %tobool.not.i, label %entry.quirk_vt82c586_acpi.exit_crit_edge, label %if.then.i

entry.quirk_vt82c586_acpi.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %quirk_vt82c586_acpi.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 72, i32 noundef 256, i32 noundef 13, ptr noundef nonnull @.str.77) #14
  br label %quirk_vt82c586_acpi.exit

quirk_vt82c586_acpi.exit:                         ; preds = %if.then.i, %entry.quirk_vt82c586_acpi.exit_crit_edge
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 112, i32 noundef 128, i32 noundef 14, ptr noundef nonnull @.str.78)
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 144, i32 noundef 16, i32 noundef 15, ptr noundef nonnull @.str.79)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_vt8235_acpi(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 136, i32 noundef 128, i32 noundef 13, ptr noundef nonnull @.str.80)
  tail call fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef 208, i32 noundef 16, i32 noundef 14, ptr noundef nonnull @.str.81)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_xio2000a(ptr noundef %dev) #0 align 64 {
entry:
  %command = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %command) #14
  %0 = ptrtoint ptr %command to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %command, align 2, !annotation !1882
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1, ptr noundef nonnull @.str.82) #17
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %1 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %subordinate, align 4
  %devices = getelementptr inbounds %struct.pci_bus, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %pdev.018 = load ptr, ptr %devices, align 4
  %cmp.not20 = icmp eq ptr %pdev.018, %devices
  br i1 %cmp.not20, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %pdev.021 = phi ptr [ %pdev.0, %for.inc.for.body_crit_edge ], [ %pdev.018, %entry.for.body_crit_edge ]
  %call = call i32 @pci_read_config_word(ptr noundef %pdev.021, i32 noundef 4, ptr noundef nonnull %command) #14
  %4 = ptrtoint ptr %command to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %command, align 2
  %6 = and i16 %5, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %tobool.not = icmp eq i16 %6, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %and5 = and i16 %5, -513
  %call7 = call i32 @pci_write_config_word(ptr noundef %pdev.021, i32 noundef 4, i16 noundef zeroext %and5) #14
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %7 = ptrtoint ptr %pdev.021 to i32
  call void @__asan_load4_noabort(i32 %7)
  %pdev.0 = load ptr, ptr %pdev.021, align 4
  %8 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %subordinate, align 4
  %devices3 = getelementptr inbounds %struct.pci_bus, ptr %9, i32 0, i32 3
  %cmp.not = icmp eq ptr %pdev.0, %devices3
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %command) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_amd_8131_mmrbc(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %0 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %subordinate, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %revision = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 12
  %2 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %revision, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 19, i8 %3)
  %cmp = icmp ult i8 %3, 19
  br i1 %cmp, label %do.end, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i8 %3 to i32
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev2, ptr noundef nonnull @.str.85, i32 noundef %conv) #17
  %4 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %subordinate, align 4
  %bus_flags = getelementptr inbounds %struct.pci_bus, ptr %5, i32 0, i32 19
  %6 = ptrtoint ptr %bus_flags to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %bus_flags, align 2
  %8 = or i16 %7, 2
  store i16 %8, ptr %bus_flags, align 2
  br label %if.end

if.end:                                           ; preds = %do.end, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_via_acpi(ptr noundef %d) #0 align 64 {
entry:
  %irq = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %irq) #14
  %0 = ptrtoint ptr %irq to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %irq, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %d, i32 noundef 66, ptr noundef nonnull %irq) #14
  %1 = ptrtoint ptr %irq to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %irq, align 1
  %trunc = trunc i8 %2 to i4
  %3 = zext i4 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.288)
  switch i4 %trunc, label %if.then [
    i4 0, label %entry.if.end_crit_edge
    i4 2, label %entry.if.end_crit_edge8
  ]

entry.if.end_crit_edge8:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %4 = and i8 %2, 15
  %conv2 = zext i8 %4 to i32
  %irq6 = getelementptr inbounds %struct.pci_dev, ptr %d, i32 0, i32 46
  %5 = ptrtoint ptr %irq6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv2, ptr %irq6, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge, %entry.if.end_crit_edge8
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %irq) #14
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_via_bridge(ptr nocapture noundef readonly %dev) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %device, align 2
  %2 = zext i16 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.289)
  switch i16 %1, label %entry.sw.epilog_crit_edge [
    i16 1670, label %sw.bb
    i16 12839, label %entry.sw.bb4_crit_edge
    i16 13111, label %entry.sw.bb4_crit_edge9
    i16 12663, label %sw.bb5
    i16 -32207, label %entry.sw.bb6_crit_edge
    i16 12404, label %entry.sw.bb6_crit_edge10
    i16 12615, label %entry.sw.bb6_crit_edge11
    i16 12553, label %entry.sw.bb6_crit_edge12
  ]

entry.sw.bb6_crit_edge12:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb6

entry.sw.bb6_crit_edge11:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb6

entry.sw.bb6_crit_edge10:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb6

entry.sw.bb6_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb6

entry.sw.bb4_crit_edge9:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb4

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb4

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %3 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %devfn, align 4
  %shr = lshr i32 %4, 3
  %and = and i32 %shr, 31
  store i32 %and, ptr @via_vlink_dev_lo, align 4
  store i32 %and, ptr @via_vlink_dev_hi, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry.sw.bb4_crit_edge, %entry.sw.bb4_crit_edge9
  store i32 15, ptr @via_vlink_dev_lo, align 4
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  store i32 16, ptr @via_vlink_dev_lo, align 4
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry.sw.bb6_crit_edge, %entry.sw.bb6_crit_edge10, %entry.sw.bb6_crit_edge11, %entry.sw.bb6_crit_edge12
  store i32 17, ptr @via_vlink_dev_lo, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_via_vlink(ptr noundef %dev) #0 align 64 {
entry:
  %irq = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %irq) #14
  %0 = ptrtoint ptr %irq to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %irq, align 1, !annotation !1882
  %1 = load i32, ptr @via_vlink_dev_lo, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %irq1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 46
  %2 = ptrtoint ptr %irq1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %irq1, align 4
  %conv = trunc i32 %3 to i8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %conv)
  %tobool.not = icmp eq i8 %conv, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %lor.lhs.false

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %conv2 = and i32 %3, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %conv2)
  %cmp3 = icmp ugt i32 %conv2, 15
  br i1 %cmp3, label %lor.lhs.false.cleanup_crit_edge, label %if.end6

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %lor.lhs.false
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %4 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus, align 8
  %number = getelementptr inbounds %struct.pci_bus, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %number to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %number, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp8.not = icmp eq i8 %7, 0
  br i1 %cmp8.not, label %lor.lhs.false10, label %if.end6.cleanup_crit_edge

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false10:                                  ; preds = %if.end6
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %8 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %devfn, align 4
  %shr = lshr i32 %9, 3
  %and = and i32 %shr, 31
  %10 = load i32, ptr @via_vlink_dev_hi, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %10)
  %cmp11 = icmp ugt i32 %and, %10
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %1)
  %cmp17 = icmp ult i32 %and, %1
  %or.cond = select i1 %cmp11, i1 true, i1 %cmp17
  br i1 %or.cond, label %lor.lhs.false10.cleanup_crit_edge, label %if.end20

lor.lhs.false10.cleanup_crit_edge:                ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end20:                                         ; preds = %lor.lhs.false10
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 60, ptr noundef nonnull %irq) #14
  %11 = ptrtoint ptr %irq to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %irq, align 1
  %conv22 = zext i8 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv2, i32 %conv22)
  %cmp23.not = icmp eq i32 %conv2, %conv22
  br i1 %cmp23.not, label %if.end20.cleanup_crit_edge, label %do.end

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  %dev26 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev26, ptr noundef nonnull @.str.87, i32 noundef %conv22, i32 noundef %conv2) #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %13 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %13(i32 noundef 3221220) #14
  %call29 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 60, i8 noundef zeroext %conv) #14
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end20.cleanup_crit_edge, %lor.lhs.false10.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %irq) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_vt82c598_id(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 252, i8 noundef zeroext 0) #14
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %call1 = tail call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 2, ptr noundef %device) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_cardbus_legacy(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pci_write_config_dword(ptr noundef %dev, i32 noundef 68, i32 noundef 0) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_amd_ordering(ptr noundef %dev) #0 align 64 {
entry:
  %pcic = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pcic) #14
  %0 = ptrtoint ptr %pcic to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pcic, align 4, !annotation !1882
  %call = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 76, ptr noundef nonnull %pcic) #14
  %1 = ptrtoint ptr %pcic to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pcic, align 4
  %and = and i32 %2, 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %and)
  %cmp.not = icmp eq i32 %and, 6
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %or = or i32 %2, 6
  %3 = ptrtoint ptr %pcic to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or, ptr %pcic, align 4
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1, ptr noundef nonnull @.str.89) #17
  %4 = ptrtoint ptr %pcic to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pcic, align 4
  %call2 = call i32 @pci_write_config_dword(ptr noundef %dev, i32 noundef 76, i32 noundef %5) #14
  %call3 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 132, ptr noundef nonnull %pcic) #14
  %6 = ptrtoint ptr %pcic to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pcic, align 4
  %or4 = or i32 %7, 8388608
  store i32 %or4, ptr %pcic, align 4
  %call5 = call i32 @pci_write_config_dword(ptr noundef %dev, i32 noundef 132, i32 noundef %or4) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pcic) #14
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_dunord(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1
  %flags = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 3
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %or = or i32 %1, 536870912
  store i32 %or, ptr %flags, align 4
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %arrayidx, align 4
  %end = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 1
  %3 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 16777215, ptr %end, align 4
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_transparent_bridge(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %transparent = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %transparent to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %transparent, align 1
  %bf.set = or i40 %bf.load, -549755813888
  store i40 %bf.set, ptr %transparent, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_mediagx_master(ptr noundef %dev) #0 align 64 {
entry:
  %reg = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %reg) #14
  %0 = ptrtoint ptr %reg to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %reg, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 65, ptr noundef nonnull %reg) #14
  %1 = ptrtoint ptr %reg to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %reg, align 1
  %3 = and i8 %2, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %and2 = and i8 %2, -3
  %4 = ptrtoint ptr %reg to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %and2, ptr %reg, align 1
  %dev4 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %conv5 = zext i8 %and2 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev4, ptr noundef nonnull @.str.91, i32 noundef %conv5) #17
  %5 = ptrtoint ptr %reg to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %reg, align 1
  %call6 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 65, i8 noundef zeroext %6) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %reg) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_disable_pxb(ptr noundef %pdev) #0 align 64 {
entry:
  %config = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %config) #14
  %0 = ptrtoint ptr %config to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %config, align 2, !annotation !1882
  %revision = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 12
  %1 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %revision, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %2)
  %cmp.not = icmp eq i8 %2, 4
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef 64, ptr noundef nonnull %config) #14
  %3 = ptrtoint ptr %config to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %config, align 2
  %5 = and i16 %4, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not = icmp eq i16 %5, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.then3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %and5 = and i16 %4, -65
  %6 = ptrtoint ptr %config to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %and5, ptr %config, align 2
  %call7 = call i32 @pci_write_config_word(ptr noundef %pdev, i32 noundef 64, i16 noundef zeroext %and5) #14
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.93) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %config) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_amd_ide_mode(ptr noundef %pdev) #0 align 64 {
entry:
  %tmp = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tmp) #14
  %0 = ptrtoint ptr %tmp to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %tmp, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %pdev, i32 noundef 10, ptr noundef nonnull %tmp) #14
  %1 = ptrtoint ptr %tmp to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %tmp, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %2)
  %cmp = icmp eq i8 %2, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call2 = call i32 @pci_read_config_byte(ptr noundef %pdev, i32 noundef 64, ptr noundef nonnull %tmp) #14
  %3 = ptrtoint ptr %tmp to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %tmp, align 1
  %5 = or i8 %4, 1
  %call5 = call i32 @pci_write_config_byte(ptr noundef %pdev, i32 noundef 64, i8 noundef zeroext %5) #14
  %call6 = call i32 @pci_write_config_byte(ptr noundef %pdev, i32 noundef 9, i8 noundef zeroext 1) #14
  %call7 = call i32 @pci_write_config_byte(ptr noundef %pdev, i32 noundef 10, i8 noundef zeroext 6) #14
  %6 = ptrtoint ptr %tmp to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %tmp, align 1
  %call8 = call i32 @pci_write_config_byte(ptr noundef %pdev, i32 noundef 64, i8 noundef zeroext %7) #14
  %class = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 11
  %8 = ptrtoint ptr %class to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 67073, ptr %class, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.95) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tmp) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_svwks_csb5ide(ptr noundef %pdev) #0 align 64 {
entry:
  %prog = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %prog) #14
  %0 = ptrtoint ptr %prog to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %prog, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %pdev, i32 noundef 9, ptr noundef nonnull %prog) #14
  %1 = ptrtoint ptr %prog to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %prog, align 1
  %3 = and i8 %2, 5
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %and2 = and i8 %2, -6
  %4 = ptrtoint ptr %prog to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %and2, ptr %prog, align 1
  %class = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 11
  %5 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %class, align 8
  %and4 = and i32 %6, -6
  store i32 %and4, ptr %class, align 8
  %call5 = call i32 @pci_write_config_byte(ptr noundef %pdev, i32 noundef 9, i8 noundef zeroext %and2) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %prog) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_ide_samemode(ptr noundef %pdev) #0 align 64 {
entry:
  %prog = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %prog) #14
  %0 = ptrtoint ptr %prog to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %prog, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %pdev, i32 noundef 9, ptr noundef nonnull %prog) #14
  %1 = ptrtoint ptr %prog to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %prog, align 1
  %3 = trunc i8 %2 to i3
  %trunc = and i3 %3, -3
  %4 = zext i3 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.290)
  switch i3 %trunc, label %entry.if.end_crit_edge [
    i3 -4, label %entry.do.end_crit_edge
    i3 1, label %entry.do.end_crit_edge21
  ]

entry.do.end_crit_edge21:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry.do.end_crit_edge, %entry.do.end_crit_edge21
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.97) #17
  %5 = ptrtoint ptr %prog to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %prog, align 1
  %7 = and i8 %6, -6
  store i8 %7, ptr %prog, align 1
  %class = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 11
  %8 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %class, align 8
  %and14 = and i32 %9, -6
  store i32 %and14, ptr %class, align 8
  %call15 = call i32 @pci_write_config_byte(ptr noundef %pdev, i32 noundef 9, i8 noundef zeroext %7) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %prog) #14
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_no_ata_d3(ptr nocapture noundef %pdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 50
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dev_flags, align 2
  %2 = or i16 %1, 2
  store i16 %2, ptr %dev_flags, align 2
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal void @quirk_eisa_bridge(ptr nocapture noundef writeonly %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %class = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 11
  %0 = ptrtoint ptr %class to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 393728, ptr %class, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @asus_hides_smbus_hostbridge(ptr noundef readonly %dev) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 9
  %0 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %subsystem_vendor, align 4
  %2 = zext i16 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.291)
  switch i16 %1, label %entry.if.end219_crit_edge [
    i16 4163, label %if.then
    i16 4156, label %if.then106
    i16 5197, label %if.then150
    i16 3601, label %if.then172
  ], !prof !1887

entry.if.end219_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then:                                          ; preds = %entry
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %3 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %device, align 2
  %5 = zext i16 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.292)
  switch i16 %4, label %if.then.if.end219_crit_edge [
    i16 6704, label %if.then6
    i16 9568, label %if.then12
    i16 9520, label %if.then22
    i16 9565, label %if.then32
    i16 9548, label %if.then42
    i16 13696, label %if.then52
    i16 13120, label %if.then62
    i16 9584, label %if.then72
    i16 9616, label %if.then82
  ]

if.then.if.end219_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then6:                                         ; preds = %if.then
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %6 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %subsystem_device, align 2
  %8 = zext i16 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.293)
  switch i16 %7, label %if.then6.if.end219_crit_edge [
    i16 -32731, label %if.then6.if.end219.sink.split_crit_edge
    i16 -32656, label %if.then6.if.end219.sink.split_crit_edge265
    i16 -32632, label %if.then6.if.end219.sink.split_crit_edge266
    i16 5670, label %if.then6.if.end219.sink.split_crit_edge267
  ]

if.then6.if.end219.sink.split_crit_edge267:       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then6.if.end219.sink.split_crit_edge266:       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then6.if.end219.sink.split_crit_edge265:       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then6.if.end219.sink.split_crit_edge:          ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then6.if.end219_crit_edge:                     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then12:                                        ; preds = %if.then
  %subsystem_device13 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %9 = ptrtoint ptr %subsystem_device13 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %subsystem_device13, align 2
  %11 = zext i16 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.294)
  switch i16 %10, label %if.then12.if.end219_crit_edge [
    i16 -32591, label %if.then12.if.end219.sink.split_crit_edge
    i16 -32590, label %if.then12.if.end219.sink.split_crit_edge268
    i16 -32621, label %if.then12.if.end219.sink.split_crit_edge269
  ]

if.then12.if.end219.sink.split_crit_edge269:      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then12.if.end219.sink.split_crit_edge268:      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then12.if.end219.sink.split_crit_edge:         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then12.if.end219_crit_edge:                    ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then22:                                        ; preds = %if.then
  %subsystem_device23 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %12 = ptrtoint ptr %subsystem_device23 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %subsystem_device23, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32720, i16 %13)
  %cond227 = icmp eq i16 %13, -32720
  br i1 %cond227, label %if.then22.if.end219.sink.split_crit_edge, label %if.then22.if.end219_crit_edge

if.then22.if.end219_crit_edge:                    ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then22.if.end219.sink.split_crit_edge:         ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then32:                                        ; preds = %if.then
  %subsystem_device33 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %14 = ptrtoint ptr %subsystem_device33 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %subsystem_device33, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32656, i16 %15)
  %cond226 = icmp eq i16 %15, -32656
  br i1 %cond226, label %if.then32.if.end219.sink.split_crit_edge, label %if.then32.if.end219_crit_edge

if.then32.if.end219_crit_edge:                    ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then32.if.end219.sink.split_crit_edge:         ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then42:                                        ; preds = %if.then
  %subsystem_device43 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %16 = ptrtoint ptr %subsystem_device43 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %subsystem_device43, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32567, i16 %17)
  %cond225 = icmp eq i16 %17, -32567
  br i1 %cond225, label %if.then42.if.end219.sink.split_crit_edge, label %if.then42.if.end219_crit_edge

if.then42.if.end219_crit_edge:                    ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then42.if.end219.sink.split_crit_edge:         ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then52:                                        ; preds = %if.then
  %subsystem_device53 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %18 = ptrtoint ptr %subsystem_device53 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %subsystem_device53, align 2
  %20 = zext i16 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.295)
  switch i16 %19, label %if.then52.if.end219_crit_edge [
    i16 5969, label %if.then52.if.end219.sink.split_crit_edge
    i16 6177, label %if.then52.if.end219.sink.split_crit_edge270
    i16 6295, label %if.then52.if.end219.sink.split_crit_edge271
  ]

if.then52.if.end219.sink.split_crit_edge271:      ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then52.if.end219.sink.split_crit_edge270:      ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then52.if.end219.sink.split_crit_edge:         ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then52.if.end219_crit_edge:                    ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then62:                                        ; preds = %if.then
  %subsystem_device63 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %21 = ptrtoint ptr %subsystem_device63 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %subsystem_device63, align 2
  %23 = zext i16 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.296)
  switch i16 %22, label %if.then62.if.end219_crit_edge [
    i16 6219, label %if.then62.if.end219.sink.split_crit_edge
    i16 6250, label %if.then62.if.end219.sink.split_crit_edge272
  ]

if.then62.if.end219.sink.split_crit_edge272:      ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then62.if.end219.sink.split_crit_edge:         ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then62.if.end219_crit_edge:                    ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then72:                                        ; preds = %if.then
  %subsystem_device73 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %24 = ptrtoint ptr %subsystem_device73 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %subsystem_device73, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32526, i16 %25)
  %cond224 = icmp eq i16 %25, -32526
  br i1 %cond224, label %if.then72.if.end219.sink.split_crit_edge, label %if.then72.if.end219_crit_edge

if.then72.if.end219_crit_edge:                    ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then72.if.end219.sink.split_crit_edge:         ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then82:                                        ; preds = %if.then
  %subsystem_device83 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %26 = ptrtoint ptr %subsystem_device83 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %subsystem_device83, align 2
  %28 = zext i16 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.297)
  switch i16 %27, label %if.then82.if.end219_crit_edge [
    i16 6274, label %if.then82.if.end219.sink.split_crit_edge
    i16 6519, label %if.then82.if.end219.sink.split_crit_edge273
  ]

if.then82.if.end219.sink.split_crit_edge273:      ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then82.if.end219.sink.split_crit_edge:         ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then82.if.end219_crit_edge:                    ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then106:                                       ; preds = %entry
  %device107 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %29 = ptrtoint ptr %device107 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %device107, align 2
  %31 = zext i16 %30 to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.298)
  switch i16 %30, label %if.then106.if.end219_crit_edge [
    i16 13120, label %if.then111
    i16 9584, label %if.then121
    i16 9592, label %if.then131
  ]

if.then106.if.end219_crit_edge:                   ; preds = %if.then106
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then111:                                       ; preds = %if.then106
  %subsystem_device112 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %32 = ptrtoint ptr %subsystem_device112 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %subsystem_device112, align 2
  %34 = zext i16 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.299)
  switch i16 %33, label %if.then111.if.end219_crit_edge [
    i16 2188, label %if.then111.if.end219.sink.split_crit_edge
    i16 2192, label %if.then111.if.end219.sink.split_crit_edge274
  ]

if.then111.if.end219.sink.split_crit_edge274:     ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then111.if.end219.sink.split_crit_edge:        ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then111.if.end219_crit_edge:                   ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then121:                                       ; preds = %if.then106
  %subsystem_device122 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %35 = ptrtoint ptr %subsystem_device122 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %subsystem_device122, align 2
  %37 = zext i16 %36 to i64
  call void @__sanitizer_cov_trace_switch(i64 %37, ptr @__sancov_gen_cov_switch_values.300)
  switch i16 %36, label %if.then121.if.end219_crit_edge [
    i16 4796, label %if.then121.if.end219.sink.split_crit_edge
    i16 4797, label %if.then121.if.end219.sink.split_crit_edge275
    i16 106, label %if.then121.if.end219.sink.split_crit_edge276
  ]

if.then121.if.end219.sink.split_crit_edge276:     ; preds = %if.then121
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then121.if.end219.sink.split_crit_edge275:     ; preds = %if.then121
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then121.if.end219.sink.split_crit_edge:        ; preds = %if.then121
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then121.if.end219_crit_edge:                   ; preds = %if.then121
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then131:                                       ; preds = %if.then106
  %subsystem_device132 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %38 = ptrtoint ptr %subsystem_device132 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %subsystem_device132, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4799, i16 %39)
  %cond223 = icmp eq i16 %39, 4799
  br i1 %cond223, label %if.then131.if.end219.sink.split_crit_edge, label %if.then131.if.end219_crit_edge

if.then131.if.end219_crit_edge:                   ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then131.if.end219.sink.split_crit_edge:        ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then150:                                       ; preds = %entry
  %device151 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %40 = ptrtoint ptr %device151 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %device151, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 13120, i16 %41)
  %cmp153 = icmp eq i16 %41, 13120
  br i1 %cmp153, label %if.then155, label %if.then150.if.end219_crit_edge

if.then150.if.end219_crit_edge:                   ; preds = %if.then150
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then155:                                       ; preds = %if.then150
  %subsystem_device156 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %42 = ptrtoint ptr %subsystem_device156 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %subsystem_device156, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -16372, i16 %43)
  %cond222 = icmp eq i16 %43, -16372
  br i1 %cond222, label %if.then155.if.end219.sink.split_crit_edge, label %if.then155.if.end219_crit_edge

if.then155.if.end219_crit_edge:                   ; preds = %if.then155
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then155.if.end219.sink.split_crit_edge:        ; preds = %if.then155
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then172:                                       ; preds = %entry
  %device173 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %44 = ptrtoint ptr %device173 to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %device173, align 2
  %46 = zext i16 %45 to i64
  call void @__sanitizer_cov_trace_switch(i64 %46, ptr @__sancov_gen_cov_switch_values.301)
  switch i16 %45, label %if.then172.if.end219_crit_edge [
    i16 13120, label %if.then177
    i16 28963, label %if.then187
    i16 9410, label %if.then197
    i16 4402, label %if.then207
  ]

if.then172.if.end219_crit_edge:                   ; preds = %if.then172
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then177:                                       ; preds = %if.then172
  %subsystem_device178 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %47 = ptrtoint ptr %subsystem_device178 to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %subsystem_device178, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 88, i16 %48)
  %cond221 = icmp eq i16 %48, 88
  br i1 %cond221, label %if.then177.if.end219.sink.split_crit_edge, label %if.then177.if.end219_crit_edge

if.then177.if.end219_crit_edge:                   ; preds = %if.then177
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then177.if.end219.sink.split_crit_edge:        ; preds = %if.then177
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then187:                                       ; preds = %if.then172
  %subsystem_device188 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %49 = ptrtoint ptr %subsystem_device188 to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %subsystem_device188, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -20116, i16 %50)
  %cond220 = icmp eq i16 %50, -20116
  br i1 %cond220, label %if.then187.if.end219.sink.split_crit_edge, label %if.then187.if.end219_crit_edge

if.then187.if.end219_crit_edge:                   ; preds = %if.then187
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then187.if.end219.sink.split_crit_edge:        ; preds = %if.then187
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then197:                                       ; preds = %if.then172
  %subsystem_device198 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %51 = ptrtoint ptr %subsystem_device198 to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %subsystem_device198, align 2
  %.off = add i16 %52, -184
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %.off)
  %switch = icmp ult i16 %.off, 3
  br i1 %switch, label %if.then197.if.end219.sink.split_crit_edge, label %if.then197.if.end219_crit_edge

if.then197.if.end219_crit_edge:                   ; preds = %if.then197
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then197.if.end219.sink.split_crit_edge:        ; preds = %if.then197
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.then207:                                       ; preds = %if.then172
  %subsystem_device208 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %53 = ptrtoint ptr %subsystem_device208 to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %subsystem_device208, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26, i16 %54)
  %cond = icmp eq i16 %54, 26
  br i1 %cond, label %if.then207.if.end219.sink.split_crit_edge, label %if.then207.if.end219_crit_edge

if.then207.if.end219_crit_edge:                   ; preds = %if.then207
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219

if.then207.if.end219.sink.split_crit_edge:        ; preds = %if.then207
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.sink.split

if.end219.sink.split:                             ; preds = %if.then207.if.end219.sink.split_crit_edge, %if.then197.if.end219.sink.split_crit_edge, %if.then187.if.end219.sink.split_crit_edge, %if.then177.if.end219.sink.split_crit_edge, %if.then155.if.end219.sink.split_crit_edge, %if.then131.if.end219.sink.split_crit_edge, %if.then121.if.end219.sink.split_crit_edge, %if.then121.if.end219.sink.split_crit_edge275, %if.then121.if.end219.sink.split_crit_edge276, %if.then111.if.end219.sink.split_crit_edge, %if.then111.if.end219.sink.split_crit_edge274, %if.then82.if.end219.sink.split_crit_edge, %if.then82.if.end219.sink.split_crit_edge273, %if.then72.if.end219.sink.split_crit_edge, %if.then62.if.end219.sink.split_crit_edge, %if.then62.if.end219.sink.split_crit_edge272, %if.then52.if.end219.sink.split_crit_edge, %if.then52.if.end219.sink.split_crit_edge270, %if.then52.if.end219.sink.split_crit_edge271, %if.then42.if.end219.sink.split_crit_edge, %if.then32.if.end219.sink.split_crit_edge, %if.then22.if.end219.sink.split_crit_edge, %if.then12.if.end219.sink.split_crit_edge, %if.then12.if.end219.sink.split_crit_edge268, %if.then12.if.end219.sink.split_crit_edge269, %if.then6.if.end219.sink.split_crit_edge, %if.then6.if.end219.sink.split_crit_edge265, %if.then6.if.end219.sink.split_crit_edge266, %if.then6.if.end219.sink.split_crit_edge267
  store i1 true, ptr @asus_hides_smbus, align 4
  br label %if.end219

if.end219:                                        ; preds = %if.end219.sink.split, %if.then207.if.end219_crit_edge, %if.then197.if.end219_crit_edge, %if.then187.if.end219_crit_edge, %if.then177.if.end219_crit_edge, %if.then172.if.end219_crit_edge, %if.then155.if.end219_crit_edge, %if.then150.if.end219_crit_edge, %if.then131.if.end219_crit_edge, %if.then121.if.end219_crit_edge, %if.then111.if.end219_crit_edge, %if.then106.if.end219_crit_edge, %if.then82.if.end219_crit_edge, %if.then72.if.end219_crit_edge, %if.then62.if.end219_crit_edge, %if.then52.if.end219_crit_edge, %if.then42.if.end219_crit_edge, %if.then32.if.end219_crit_edge, %if.then22.if.end219_crit_edge, %if.then12.if.end219_crit_edge, %if.then6.if.end219_crit_edge, %if.then.if.end219_crit_edge, %entry.if.end219_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @asus_hides_smbus_lpc(ptr noundef %dev) #0 align 64 {
entry:
  %val = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %val) #14
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %val, align 2, !annotation !1882
  %.b = load i1, ptr @asus_hides_smbus, align 4
  br i1 %.b, label %if.end, label %entry.cleanup_crit_edge, !prof !1888

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 242, ptr noundef nonnull %val) #14
  %1 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %val, align 2
  %3 = and i16 %2, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool4.not = icmp eq i16 %3, 0
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.then5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then5:                                         ; preds = %if.end
  %and7 = and i16 %2, -9
  %call9 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 242, i16 noundef zeroext %and7) #14
  %call10 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 242, ptr noundef nonnull %val) #14
  %4 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %val, align 2
  %conv11 = zext i16 %5 to i32
  %and12 = and i32 %conv11, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  %dev20 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  br i1 %tobool13.not, label %do.end19, label %do.end

do.end:                                           ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev20, ptr noundef nonnull @.str.99, i32 noundef %conv11) #17
  br label %cleanup

do.end19:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev20, ptr noundef nonnull @.str.102) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end19, %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %val) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @asus_hides_smbus_lpc_ich6(ptr noundef %dev) #0 align 64 {
entry:
  %rcba.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rcba.i) #14
  %0 = ptrtoint ptr %rcba.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %rcba.i, align 4, !annotation !1882
  %.b.i = load i1, ptr @asus_hides_smbus, align 4
  br i1 %.b.i, label %if.end.i, label %asus_hides_smbus_lpc_ich6_suspend.exit.thread, !prof !1888

asus_hides_smbus_lpc_ich6_suspend.exit.thread:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rcba.i) #14
  br label %asus_hides_smbus_lpc_ich6_resume.exit

if.end.i:                                         ; preds = %entry
  %1 = load ptr, ptr @asus_rcba_base, align 4
  %tobool4.not.i = icmp eq ptr %1, null
  br i1 %tobool4.not.i, label %if.end.i.asus_hides_smbus_lpc_ich6_suspend.exit_crit_edge, label %do.end.i, !prof !1889

if.end.i.asus_hides_smbus_lpc_ich6_suspend.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %asus_hides_smbus_lpc_ich6_suspend.exit

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1566, i32 noundef 9, ptr noundef null) #14
  br label %asus_hides_smbus_lpc_ich6_suspend.exit

asus_hides_smbus_lpc_ich6_suspend.exit:           ; preds = %do.end.i, %if.end.i.asus_hides_smbus_lpc_ich6_suspend.exit_crit_edge
  %call.i = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 240, ptr noundef nonnull %rcba.i) #14
  %2 = ptrtoint ptr %rcba.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rcba.i, align 4
  %and.i = and i32 %3, -16384
  %call30.i = call ptr @ioremap(i32 noundef %and.i, i32 noundef 16384) #14
  store ptr %call30.i, ptr @asus_rcba_base, align 4
  %.b.i3.pr = load i1, ptr @asus_hides_smbus, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rcba.i) #14
  br i1 %.b.i3.pr, label %lor.rhs.i, label %asus_hides_smbus_lpc_ich6_suspend.exit.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge

asus_hides_smbus_lpc_ich6_suspend.exit.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge: ; preds = %asus_hides_smbus_lpc_ich6_suspend.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %asus_hides_smbus_lpc_ich6_resume.exit

lor.rhs.i:                                        ; preds = %asus_hides_smbus_lpc_ich6_suspend.exit
  %4 = load ptr, ptr @asus_rcba_base, align 4
  %tobool1.not.i = icmp eq ptr %4, null
  br i1 %tobool1.not.i, label %lor.rhs.i.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge, label %asus_hides_smbus_lpc_ich6_resume_early.exit, !prof !1889

lor.rhs.i.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge: ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %asus_hides_smbus_lpc_ich6_resume.exit

asus_hides_smbus_lpc_ich6_resume_early.exit:      ; preds = %lor.rhs.i
  %add.ptr.i = getelementptr i8, ptr %4, i32 13336
  %5 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !1890
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1891
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1892
  call void @arm_heavy_mb() #14
  %6 = and i32 %5, -134217729
  %7 = load ptr, ptr @asus_rcba_base, align 4
  %add.ptr6.i = getelementptr i8, ptr %7, i32 13336
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr6.i, i32 %6) #14, !srcloc !1893
  %.b.i5.pr = load i1, ptr @asus_hides_smbus, align 4
  br i1 %.b.i5.pr, label %lor.rhs.i7, label %asus_hides_smbus_lpc_ich6_resume_early.exit.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge

asus_hides_smbus_lpc_ich6_resume_early.exit.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge: ; preds = %asus_hides_smbus_lpc_ich6_resume_early.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %asus_hides_smbus_lpc_ich6_resume.exit

lor.rhs.i7:                                       ; preds = %asus_hides_smbus_lpc_ich6_resume_early.exit
  %.pr = load ptr, ptr @asus_rcba_base, align 4
  %tobool1.not.i6 = icmp eq ptr %.pr, null
  br i1 %tobool1.not.i6, label %lor.rhs.i7.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge, label %if.end.i8, !prof !1889

lor.rhs.i7.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge: ; preds = %lor.rhs.i7
  call void @__sanitizer_cov_trace_pc() #16
  br label %asus_hides_smbus_lpc_ich6_resume.exit

if.end.i8:                                        ; preds = %lor.rhs.i7
  call void @__sanitizer_cov_trace_pc() #16
  call void @iounmap(ptr noundef nonnull %.pr) #14
  store ptr null, ptr @asus_rcba_base, align 4
  %dev5.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev5.i, ptr noundef nonnull @.str.104) #17
  br label %asus_hides_smbus_lpc_ich6_resume.exit

asus_hides_smbus_lpc_ich6_resume.exit:            ; preds = %if.end.i8, %lor.rhs.i7.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge, %asus_hides_smbus_lpc_ich6_resume_early.exit.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge, %lor.rhs.i.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge, %asus_hides_smbus_lpc_ich6_suspend.exit.asus_hides_smbus_lpc_ich6_resume.exit_crit_edge, %asus_hides_smbus_lpc_ich6_suspend.exit.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @asus_hides_smbus_lpc_ich6_suspend(ptr noundef %dev) #0 align 64 {
entry:
  %rcba = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rcba) #14
  %0 = ptrtoint ptr %rcba to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %rcba, align 4, !annotation !1882
  %.b = load i1, ptr @asus_hides_smbus, align 4
  br i1 %.b, label %if.end, label %entry.cleanup_crit_edge, !prof !1888

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr @asus_rcba_base, align 4
  %tobool4.not = icmp eq ptr %1, null
  br i1 %tobool4.not, label %if.end.if.end23_crit_edge, label %do.end, !prof !1889

if.end.if.end23_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1566, i32 noundef 9, ptr noundef null) #14
  br label %if.end23

if.end23:                                         ; preds = %do.end, %if.end.if.end23_crit_edge
  %call = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 240, ptr noundef nonnull %rcba) #14
  %2 = ptrtoint ptr %rcba to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rcba, align 4
  %and = and i32 %3, -16384
  %call30 = call ptr @ioremap(i32 noundef %and, i32 noundef 16384) #14
  store ptr %call30, ptr @asus_rcba_base, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rcba) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @asus_hides_smbus_lpc_ich6_resume(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %.b = load i1, ptr @asus_hides_smbus, align 4
  br i1 %.b, label %lor.rhs, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

lor.rhs:                                          ; preds = %entry
  %0 = load ptr, ptr @asus_rcba_base, align 4
  %tobool1.not = icmp eq ptr %0, null
  br i1 %tobool1.not, label %lor.rhs.return_crit_edge, label %if.end, !prof !1889

lor.rhs.return_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @iounmap(ptr noundef nonnull %0) #14
  store ptr null, ptr @asus_rcba_base, align 4
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev5, ptr noundef nonnull @.str.104) #17
  br label %return

return:                                           ; preds = %if.end, %lor.rhs.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @asus_hides_smbus_lpc_ich6_resume_early(ptr nocapture noundef readnone %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %.b = load i1, ptr @asus_hides_smbus, align 4
  br i1 %.b, label %lor.rhs, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.rhs:                                          ; preds = %entry
  %0 = load ptr, ptr @asus_rcba_base, align 4
  %tobool1.not = icmp eq ptr %0, null
  br i1 %tobool1.not, label %lor.rhs.cleanup_crit_edge, label %if.end, !prof !1889

lor.rhs.cleanup_crit_edge:                        ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr = getelementptr i8, ptr %0, i32 13336
  %1 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1891
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1892
  tail call void @arm_heavy_mb() #14
  %2 = and i32 %1, -134217729
  %3 = load ptr, ptr @asus_rcba_base, align 4
  %add.ptr6 = getelementptr i8, ptr %3, i32 13336
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr6, i32 %2) #14, !srcloc !1893
  br label %cleanup

cleanup:                                          ; preds = %if.end, %lor.rhs.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_sis_96x_smbus(ptr noundef %dev) #0 align 64 {
entry:
  %val = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %val) #14
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %val, align 1
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 119, ptr noundef nonnull %val) #14
  %1 = ptrtoint ptr %val to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %val, align 1
  %3 = and i8 %2, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.106) #17
  %4 = ptrtoint ptr %val to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %val, align 1
  %6 = and i8 %5, -17
  %call5 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 119, i8 noundef zeroext %6) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %val) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_sis_503(ptr noundef %dev) #0 align 64 {
entry:
  %val.i = alloca i8, align 1
  %reg = alloca i8, align 1
  %devid = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %reg) #14
  %0 = ptrtoint ptr %reg to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %reg, align 1, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %devid) #14
  %1 = ptrtoint ptr %devid to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %devid, align 2, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 64, ptr noundef nonnull %reg) #14
  %2 = ptrtoint ptr %reg to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %reg, align 1
  %4 = or i8 %3, 64
  %call2 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 64, i8 noundef zeroext %4) #14
  %call3 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 2, ptr noundef nonnull %devid) #14
  %5 = ptrtoint ptr %devid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %devid, align 2
  %7 = and i16 %6, -16
  call void @__sanitizer_cov_trace_const_cmp2(i16 2400, i16 %7)
  %cmp.not = icmp eq i16 %7, 2400
  call void @__sanitizer_cov_trace_const_cmp2(i16 24, i16 %6)
  %cmp7.not = icmp eq i16 %6, 24
  %or.cond = or i1 %cmp7.not, %cmp.not
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %8 = ptrtoint ptr %reg to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %reg, align 1
  %call9 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 64, i8 noundef zeroext %9) #14
  br label %cleanup

if.end:                                           ; preds = %entry
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %10 = ptrtoint ptr %device to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %6, ptr %device, align 2
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %val.i) #14
  %11 = ptrtoint ptr %val.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %val.i, align 1
  %call.i = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 119, ptr noundef nonnull %val.i) #14
  %12 = ptrtoint ptr %val.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %val.i, align 1
  %14 = and i8 %13, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not.i = icmp eq i8 %14, 0
  br i1 %tobool.not.i, label %if.end.quirk_sis_96x_smbus.exit_crit_edge, label %do.end.i

if.end.quirk_sis_96x_smbus.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %quirk_sis_96x_smbus.exit

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i, ptr noundef nonnull @.str.106) #17
  %15 = ptrtoint ptr %val.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %val.i, align 1
  %17 = and i8 %16, -17
  %call5.i = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 119, i8 noundef zeroext %17) #14
  br label %quirk_sis_96x_smbus.exit

quirk_sis_96x_smbus.exit:                         ; preds = %do.end.i, %if.end.quirk_sis_96x_smbus.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %val.i) #14
  br label %cleanup

cleanup:                                          ; preds = %quirk_sis_96x_smbus.exit, %if.then
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %devid) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %reg) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @asus_hides_ac97_lpc(ptr noundef %dev) #0 align 64 {
entry:
  %val = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %val) #14
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %val, align 1, !annotation !1882
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 9
  %1 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %subsystem_vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 4163, i16 %2)
  %cmp = icmp eq i16 %2, 4163
  br i1 %cmp, label %if.then, label %entry.cleanup_crit_edge, !prof !1889

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then:                                          ; preds = %entry
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %3 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 12839, i16 %4)
  %cmp4.not = icmp eq i16 %4, 12839
  br i1 %cmp4.not, label %if.end10, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10:                                         ; preds = %if.then
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 80, ptr noundef nonnull %val) #14
  %5 = ptrtoint ptr %val to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %val, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %6)
  %tobool12.not = icmp ult i8 %6, 64
  br i1 %tobool12.not, label %if.end10.cleanup_crit_edge, label %if.then13

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then13:                                        ; preds = %if.end10
  %and15 = and i8 %6, 63
  %call17 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 80, i8 noundef zeroext %and15) #14
  %call18 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 80, ptr noundef nonnull %val) #14
  %7 = ptrtoint ptr %val to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %val, align 1
  %conv19 = zext i8 %8 to i32
  %and20 = and i32 %conv19, 192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  %dev28 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  br i1 %tobool21.not, label %do.end27, label %do.end

do.end:                                           ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev28, ptr noundef nonnull @.str.108, i32 noundef %conv19) #17
  br label %cleanup

do.end27:                                         ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev28, ptr noundef nonnull @.str.111) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end27, %do.end, %if.end10.cleanup_crit_edge, %if.then.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %val) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_jmicron_ata(ptr noundef %pdev) #0 align 64 {
entry:
  %conf1 = alloca i32, align 4
  %conf5 = alloca i32, align 4
  %class = alloca i32, align 4
  %hdr = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %conf1) #14
  %0 = ptrtoint ptr %conf1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %conf1, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %conf5) #14
  %1 = ptrtoint ptr %conf5 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %conf5, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %class) #14
  %2 = ptrtoint ptr %class to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %class, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %hdr) #14
  %3 = ptrtoint ptr %hdr to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 -1, ptr %hdr, align 1, !annotation !1882
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 6
  %4 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %devfn, align 4
  %and = and i32 %5, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef 64, ptr noundef nonnull %conf1) #14
  %call1 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef 128, ptr noundef nonnull %conf5) #14
  %6 = ptrtoint ptr %conf1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %conf1, align 4
  %and2 = and i32 %7, -13628163
  store i32 %and2, ptr %conf1, align 4
  %8 = ptrtoint ptr %conf5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %conf5, align 4
  %and3 = and i32 %9, -16777217
  store i32 %and3, ptr %conf5, align 4
  %device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 8
  %10 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %device, align 2
  %12 = zext i16 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.302)
  switch i16 %11, label %if.end.sw.epilog_crit_edge [
    i16 9056, label %if.end.sw.bb_crit_edge
    i16 9058, label %if.end.sw.bb_crit_edge35
    i16 9060, label %if.end.sw.bb_crit_edge36
    i16 9061, label %if.end.sw.bb4_crit_edge
    i16 9062, label %if.end.sw.bb4_crit_edge37
    i16 9057, label %if.end.sw.bb6_crit_edge
    i16 9059, label %if.end.sw.bb6_crit_edge38
    i16 9065, label %if.end.sw.bb6_crit_edge39
    i16 9064, label %sw.bb8
  ]

if.end.sw.bb6_crit_edge39:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb6

if.end.sw.bb6_crit_edge38:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb6

if.end.sw.bb6_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb6

if.end.sw.bb4_crit_edge37:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb4

if.end.sw.bb4_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb4

if.end.sw.bb_crit_edge36:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

if.end.sw.bb_crit_edge35:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end.sw.bb_crit_edge, %if.end.sw.bb_crit_edge35, %if.end.sw.bb_crit_edge36
  %or = or i32 %and2, 172288
  %13 = ptrtoint ptr %conf1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %or, ptr %conf1, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end.sw.bb4_crit_edge, %if.end.sw.bb4_crit_edge37
  %or5 = or i32 %9, 16777216
  %14 = ptrtoint ptr %conf5 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %or5, ptr %conf5, align 4
  br label %sw.bb6

sw.bb6:                                           ; preds = %sw.bb4, %if.end.sw.bb6_crit_edge, %if.end.sw.bb6_crit_edge38, %if.end.sw.bb6_crit_edge39
  %or7 = or i32 %and2, 12755379
  %15 = ptrtoint ptr %conf1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %or7, ptr %conf1, align 4
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %or9 = or i32 %and2, 12582912
  %16 = ptrtoint ptr %conf1 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %or9, ptr %conf1, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb6, %sw.bb, %if.end.sw.epilog_crit_edge
  %17 = ptrtoint ptr %conf1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %conf1, align 4
  %call10 = call i32 @pci_write_config_dword(ptr noundef %pdev, i32 noundef 64, i32 noundef %18) #14
  %19 = ptrtoint ptr %conf5 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %conf5, align 4
  %call11 = call i32 @pci_write_config_dword(ptr noundef %pdev, i32 noundef 128, i32 noundef %20) #14
  %call12 = call i32 @pci_read_config_byte(ptr noundef %pdev, i32 noundef 14, ptr noundef nonnull %hdr) #14
  %21 = ptrtoint ptr %hdr to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %hdr, align 1
  %23 = and i8 %22, 127
  %hdr_type = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 13
  %24 = ptrtoint ptr %hdr_type to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %hdr_type, align 1
  %.lobit = lshr i8 %22, 7
  %multifunction = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %25 = zext i8 %.lobit to i40
  %26 = ptrtoint ptr %multifunction to i32
  call void @__asan_loadN_noabort(i32 %26, i32 5)
  %bf.load = load i40, ptr %multifunction, align 1
  %bf.shl = shl nuw nsw i40 %25, 35
  %bf.clear = and i40 %bf.load, -34359738369
  %bf.set = or i40 %bf.clear, %bf.shl
  store i40 %bf.set, ptr %multifunction, align 1
  %call20 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef 8, ptr noundef nonnull %class) #14
  %27 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %class, align 4
  %shr = lshr i32 %28, 8
  %class21 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 11
  %29 = ptrtoint ptr %class21 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %shr, ptr %class21, align 8
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %hdr) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %class) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %conf5) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %conf1) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_jmicron_async_suspend(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %multifunction = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %multifunction to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %multifunction, align 1
  %1 = and i40 %bf.load, 34359738368
  %tobool.not = icmp eq i40 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %is_prepared.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 12, i32 1
  %2 = ptrtoint ptr %is_prepared.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %is_prepared.i, align 4
  %3 = and i16 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %bf.cast.not.i = icmp eq i16 %3, 0
  br i1 %bf.cast.not.i, label %if.then.i, label %if.then.device_disable_async_suspend.exit_crit_edge

if.then.device_disable_async_suspend.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %device_disable_async_suspend.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %bf.clear3.i = and i16 %bf.load.i, -16385
  %4 = ptrtoint ptr %is_prepared.i to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %bf.clear3.i, ptr %is_prepared.i, align 4
  br label %device_disable_async_suspend.exit

device_disable_async_suspend.exit:                ; preds = %if.then.i, %if.then.device_disable_async_suspend.exit_crit_edge
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.113) #17
  br label %if.end

if.end:                                           ; preds = %device_disable_async_suspend.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_pcie_mch(ptr nocapture noundef %pdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %no_msi = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %0 = ptrtoint ptr %no_msi to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %no_msi, align 1
  %bf.set = or i40 %bf.load, 8589934592
  store i40 %bf.set, ptr %no_msi, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_huawei_pcie_sva(ptr noundef %pdev) #0 align 64 {
entry:
  %properties = alloca [2 x %struct.property_entry], align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %properties) #14
  %0 = call ptr @memcpy(ptr %properties, ptr @__const.quirk_huawei_pcie_sva.properties, i32 48)
  %revision = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 12
  %1 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %revision, align 4
  %3 = zext i8 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.303)
  switch i8 %2, label %entry.cleanup_crit_edge [
    i8 33, label %entry.if.end_crit_edge
    i8 48, label %entry.if.end_crit_edge17
  ]

entry.if.end_crit_edge17:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry.if.end_crit_edge, %entry.if.end_crit_edge17
  %pasid_no_tlp = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 41
  %4 = ptrtoint ptr %pasid_no_tlp to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %pasid_no_tlp, align 8
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %pasid_no_tlp, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %of_node = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 27
  %5 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %of_node, align 8
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %land.lhs.true6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true6:                                   ; preds = %if.end
  %call = call i32 @device_create_managed_software_node(ptr noundef %dev, ptr noundef nonnull %properties, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool8.not = icmp eq i32 %call, 0
  br i1 %tobool8.not, label %land.lhs.true6.cleanup_crit_edge, label %do.end

land.lhs.true6.cleanup_crit_edge:                 ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.116) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end, %land.lhs.true6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %properties) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_pcie_pxh(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %no_msi = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %no_msi to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %no_msi, align 1
  %bf.set = or i40 %bf.load, 8589934592
  store i40 %bf.set, ptr %no_msi, align 1
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1, ptr noundef nonnull @.str.118) #17
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_intel_pcie_pm(ptr nocapture noundef %dev) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @pci_pm_d3hot_delay to i32))
  store i32 120, ptr @pci_pm_d3hot_delay, align 4
  %no_d1d2 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %no_d1d2 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %no_d1d2, align 2
  %bf.set = or i32 %bf.load, 8388608
  store i32 %bf.set, ptr %no_d1d2, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_radeon_pm(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 9
  %0 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %subsystem_vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 4203, i16 %1)
  %cmp = icmp eq i16 %1, 4203
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %2 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %subsystem_device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 226, i16 %3)
  %cmp3 = icmp eq i16 %3, 226
  br i1 %cmp3, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %d3hot_delay.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 35
  %4 = ptrtoint ptr %d3hot_delay.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %d3hot_delay.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 19, i32 %5)
  %cmp.i = icmp ugt i32 %5, 19
  br i1 %cmp.i, label %if.then.if.end_crit_edge, label %if.end.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %d3hot_delay.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 20, ptr %d3hot_delay.i, align 8
  %dev2.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev2.i, ptr noundef nonnull @.str.120, i32 noundef 20) #17
  br label %if.end

if.end:                                           ; preds = %if.end.i, %if.then.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_ryzen_xhci_d3hot(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %d3hot_delay.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 35
  %0 = ptrtoint ptr %d3hot_delay.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %d3hot_delay.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 19, i32 %1)
  %cmp.i = icmp ugt i32 %1, 19
  br i1 %cmp.i, label %entry.quirk_d3hot_delay.exit_crit_edge, label %if.end.i

entry.quirk_d3hot_delay.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %quirk_d3hot_delay.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %2 = ptrtoint ptr %d3hot_delay.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 20, ptr %d3hot_delay.i, align 8
  %dev2.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev2.i, ptr noundef nonnull @.str.120, i32 noundef 20) #17
  br label %quirk_d3hot_delay.exit

quirk_d3hot_delay.exit:                           ; preds = %if.end.i, %entry.quirk_d3hot_delay.exit_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_tc86c001_ide(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %resource = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47
  %0 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %resource, align 4
  %and = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 3
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %or = or i32 %3, 536870912
  store i32 %or, ptr %flags, align 4
  %4 = ptrtoint ptr %resource to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %resource, align 4
  %end = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 1
  %5 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 15, ptr %end, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_plx_pci9050(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %revision = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %revision, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %1)
  %cmp = icmp ugt i8 %1, 1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %arrayidx = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0
  %end = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 1
  %2 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp4 = icmp eq i32 %3, 0
  br i1 %cmp4, label %for.cond.preheader.for.inc_crit_edge, label %cond.end

for.cond.preheader.for.inc_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

cond.end:                                         ; preds = %for.cond.preheader
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 8
  %sub = sub i32 %3, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %sub)
  %cmp11 = icmp eq i32 %sub, 127
  br i1 %cmp11, label %land.lhs.true, label %cond.end.for.inc_crit_edge

cond.end.for.inc_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

land.lhs.true:                                    ; preds = %cond.end
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 8
  %and = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true.for.inc_crit_edge, label %if.then16

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then16:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev19, ptr noundef nonnull @.str.122, i32 noundef 0) #17
  %flags = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 0, i32 3
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %or = or i32 %9, 536870912
  store i32 %or, ptr %flags, align 4
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %arrayidx, align 4
  %11 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 255, ptr %end, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then16, %land.lhs.true.for.inc_crit_edge, %cond.end.for.inc_crit_edge, %for.cond.preheader.for.inc_crit_edge
  %arrayidx.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1
  %end.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 1
  %12 = ptrtoint ptr %end.1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %end.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp4.1 = icmp eq i32 %13, 0
  br i1 %cmp4.1, label %for.inc.cleanup_crit_edge, label %cond.end.1

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cond.end.1:                                       ; preds = %for.inc
  %14 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.1, align 8
  %sub.1 = sub i32 %13, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %sub.1)
  %cmp11.1 = icmp eq i32 %sub.1, 127
  br i1 %cmp11.1, label %land.lhs.true.1, label %cond.end.1.cleanup_crit_edge

cond.end.1.cleanup_crit_edge:                     ; preds = %cond.end.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.1:                                  ; preds = %cond.end.1
  %16 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.1, align 8
  %and.1 = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool.not.1, label %land.lhs.true.1.cleanup_crit_edge, label %if.then16.1

land.lhs.true.1.cleanup_crit_edge:                ; preds = %land.lhs.true.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then16.1:                                      ; preds = %land.lhs.true.1
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev19, ptr noundef nonnull @.str.122, i32 noundef 1) #17
  %flags.1 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 1, i32 3
  %18 = ptrtoint ptr %flags.1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.1, align 4
  %or.1 = or i32 %19, 536870912
  store i32 %or.1, ptr %flags.1, align 4
  %20 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %arrayidx.1, align 4
  %21 = ptrtoint ptr %end.1 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 255, ptr %end.1, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then16.1, %land.lhs.true.1.cleanup_crit_edge, %cond.end.1.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_netmos(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 10
  %0 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %subsystem_device, align 2
  %conv = zext i16 %1 to i32
  %and = lshr i32 %conv, 4
  %2 = and i32 %and, 15
  %and3 = and i32 %conv, 15
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %3 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %device, align 2
  %5 = zext i16 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.304)
  switch i16 %4, label %entry.cleanup_crit_edge [
    i16 -26571, label %sw.bb
    i16 -26827, label %entry.sw.bb11_crit_edge
    i16 -26811, label %entry.sw.bb11_crit_edge30
    i16 -26555, label %entry.sw.bb11_crit_edge31
    i16 -26539, label %entry.sw.bb11_crit_edge32
  ]

entry.sw.bb11_crit_edge32:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb11

entry.sw.bb11_crit_edge31:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb11

entry.sw.bb11_crit_edge30:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb11

entry.sw.bb11_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb11

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 9
  %6 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %subsystem_vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 4116, i16 %7)
  %cmp = icmp eq i16 %7, 4116
  call void @__sanitizer_cov_trace_const_cmp2(i16 665, i16 %1)
  %cmp9 = icmp eq i16 %1, 665
  %or.cond = select i1 %cmp, i1 %cmp9, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  %or.cond29 = select i1 %or.cond, i1 true, i1 %tobool.not
  br i1 %or.cond29, label %sw.bb.cleanup_crit_edge, label %sw.bb.do.end_crit_edge

sw.bb.do.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb11:                                          ; preds = %entry.sw.bb11_crit_edge, %entry.sw.bb11_crit_edge30, %entry.sw.bb11_crit_edge31, %entry.sw.bb11_crit_edge32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.old = icmp eq i32 %2, 0
  br i1 %tobool.not.old, label %sw.bb11.cleanup_crit_edge, label %sw.bb11.do.end_crit_edge

sw.bb11.do.end_crit_edge:                         ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

sw.bb11.cleanup_crit_edge:                        ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %sw.bb11.do.end_crit_edge, %sw.bb.do.end_crit_edge
  %dev13 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %conv15 = zext i16 %4 to i32
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev13, ptr noundef nonnull @.str.124, i32 noundef %conv15, i32 noundef %2, i32 noundef %and3) #17
  %class = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 11
  %8 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %class, align 8
  %and16 = and i32 %9, 255
  %or = or i32 %and16, 491520
  store i32 %or, ptr %class, align 8
  br label %cleanup

cleanup:                                          ; preds = %do.end, %sw.bb11.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_e100_interrupt(ptr noundef %dev) #0 align 64 {
entry:
  %command = alloca i16, align 2
  %pmcsr = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %command) #14
  %0 = ptrtoint ptr %command to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %command, align 2, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pmcsr) #14
  %1 = ptrtoint ptr %pmcsr to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %pmcsr, align 2, !annotation !1882
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %2 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %device, align 2
  %4 = zext i16 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.305)
  switch i16 %3, label %entry.cleanup_crit_edge [
    i16 4137, label %entry.sw.epilog_crit_edge
    i16 4185, label %entry.sw.epilog_crit_edge58
    i16 4617, label %entry.sw.epilog_crit_edge59
    i16 4649, label %entry.sw.epilog_crit_edge60
    i16 9289, label %entry.sw.epilog_crit_edge61
    i16 9305, label %entry.sw.epilog_crit_edge62
    i16 9309, label %entry.sw.epilog_crit_edge63
    i16 10204, label %entry.sw.epilog_crit_edge64
    i16 4241, label %entry.sw.epilog_crit_edge65
    i16 4242, label %entry.sw.epilog_crit_edge66
    i16 4243, label %entry.sw.epilog_crit_edge67
    i16 4244, label %entry.sw.epilog_crit_edge68
    i16 4245, label %entry.sw.epilog_crit_edge69
    i16 4196, label %entry.sw.epilog_crit_edge70
    i16 4197, label %entry.sw.epilog_crit_edge71
    i16 4198, label %entry.sw.epilog_crit_edge72
    i16 4199, label %entry.sw.epilog_crit_edge73
    i16 4200, label %entry.sw.epilog_crit_edge74
    i16 4201, label %entry.sw.epilog_crit_edge75
    i16 4202, label %entry.sw.epilog_crit_edge76
    i16 4203, label %entry.sw.epilog_crit_edge77
    i16 4176, label %entry.sw.epilog_crit_edge78
    i16 4177, label %entry.sw.epilog_crit_edge79
    i16 4178, label %entry.sw.epilog_crit_edge80
    i16 4179, label %entry.sw.epilog_crit_edge81
    i16 4180, label %entry.sw.epilog_crit_edge82
    i16 4181, label %entry.sw.epilog_crit_edge83
    i16 4182, label %entry.sw.epilog_crit_edge84
    i16 4183, label %entry.sw.epilog_crit_edge85
    i16 4152, label %entry.sw.epilog_crit_edge86
    i16 4153, label %entry.sw.epilog_crit_edge87
    i16 4154, label %entry.sw.epilog_crit_edge88
    i16 4155, label %entry.sw.epilog_crit_edge89
    i16 4156, label %entry.sw.epilog_crit_edge90
    i16 4157, label %entry.sw.epilog_crit_edge91
    i16 4158, label %entry.sw.epilog_crit_edge92
    i16 4144, label %entry.sw.epilog_crit_edge93
    i16 4145, label %entry.sw.epilog_crit_edge94
    i16 4146, label %entry.sw.epilog_crit_edge95
    i16 4147, label %entry.sw.epilog_crit_edge96
    i16 4148, label %entry.sw.epilog_crit_edge97
  ]

entry.sw.epilog_crit_edge97:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge96:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge95:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge94:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge93:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge92:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge91:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge90:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge89:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge88:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge87:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge86:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge85:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge84:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge83:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge82:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge81:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge80:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge79:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge78:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge77:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge76:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge75:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge74:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge73:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge72:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge71:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge70:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge69:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge68:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge67:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge66:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge65:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge64:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge63:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge62:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge61:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge60:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge59:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge58:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.epilog:                                        ; preds = %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge58, %entry.sw.epilog_crit_edge59, %entry.sw.epilog_crit_edge60, %entry.sw.epilog_crit_edge61, %entry.sw.epilog_crit_edge62, %entry.sw.epilog_crit_edge63, %entry.sw.epilog_crit_edge64, %entry.sw.epilog_crit_edge65, %entry.sw.epilog_crit_edge66, %entry.sw.epilog_crit_edge67, %entry.sw.epilog_crit_edge68, %entry.sw.epilog_crit_edge69, %entry.sw.epilog_crit_edge70, %entry.sw.epilog_crit_edge71, %entry.sw.epilog_crit_edge72, %entry.sw.epilog_crit_edge73, %entry.sw.epilog_crit_edge74, %entry.sw.epilog_crit_edge75, %entry.sw.epilog_crit_edge76, %entry.sw.epilog_crit_edge77, %entry.sw.epilog_crit_edge78, %entry.sw.epilog_crit_edge79, %entry.sw.epilog_crit_edge80, %entry.sw.epilog_crit_edge81, %entry.sw.epilog_crit_edge82, %entry.sw.epilog_crit_edge83, %entry.sw.epilog_crit_edge84, %entry.sw.epilog_crit_edge85, %entry.sw.epilog_crit_edge86, %entry.sw.epilog_crit_edge87, %entry.sw.epilog_crit_edge88, %entry.sw.epilog_crit_edge89, %entry.sw.epilog_crit_edge90, %entry.sw.epilog_crit_edge91, %entry.sw.epilog_crit_edge92, %entry.sw.epilog_crit_edge93, %entry.sw.epilog_crit_edge94, %entry.sw.epilog_crit_edge95, %entry.sw.epilog_crit_edge96, %entry.sw.epilog_crit_edge97
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %command) #14
  %5 = ptrtoint ptr %command to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %command, align 2
  %7 = and i16 %6, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %sw.epilog.cleanup_crit_edge, label %lor.lhs.false

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %sw.epilog
  %resource = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47
  %8 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %resource, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool9.not = icmp eq i32 %9, 0
  br i1 %tobool9.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %pm_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 32
  %10 = ptrtoint ptr %pm_cap to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %pm_cap, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool10.not = icmp eq i8 %11, 0
  br i1 %tobool10.not, label %if.end.if.end20_crit_edge, label %if.then11

if.end.if.end20_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

if.then11:                                        ; preds = %if.end
  %conv13 = zext i8 %11 to i32
  %add = add nuw nsw i32 %conv13, 4
  %call14 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %pmcsr) #14
  %12 = ptrtoint ptr %pmcsr to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %pmcsr, align 2
  %14 = and i16 %13, 3
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %cmp.not = icmp eq i16 %14, 0
  br i1 %cmp.not, label %if.then11.if.end20_crit_edge, label %if.then11.cleanup_crit_edge

if.then11.cleanup_crit_edge:                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then11.if.end20_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

if.end20:                                         ; preds = %if.then11.if.end20_crit_edge, %if.end.if.end20_crit_edge
  %15 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %resource, align 8
  %call24 = call ptr @ioremap(i32 noundef %16, i32 noundef 8) #14
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %do.end, label %if.end28

do.end:                                           ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  %dev27 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev27, ptr noundef nonnull @.str.126) #17
  br label %cleanup

if.end28:                                         ; preds = %if.end20
  %add.ptr = getelementptr i8, ptr %call24, i32 3
  %17 = call i8 asm sideeffect "ldrb $0, $1", "=r,*Qo"(ptr elementtype(i8) %add.ptr) #14, !srcloc !1894
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1895
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %cmp32 = icmp eq i8 %17, 0
  br i1 %cmp32, label %do.end37, label %if.end28.if.end43_crit_edge

if.end28.if.end43_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43

do.end37:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %dev38 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev38, ptr noundef nonnull @.str.129) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1896
  call void @arm_heavy_mb() #14
  call void asm sideeffect "strb $1, $0", "*Qo,r"(ptr elementtype(i8) %add.ptr, i8 1) #14, !srcloc !1897
  br label %if.end43

if.end43:                                         ; preds = %do.end37, %if.end28.if.end43_crit_edge
  call void @iounmap(ptr noundef nonnull %call24) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %do.end, %if.then11.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pmcsr) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %command) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_disable_aspm_l0s(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.131) #17
  %call = tail call i32 @pci_disable_link_state(ptr noundef %dev, i32 noundef 1) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_disable_aspm_l0s_l1(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.133) #17
  %call = tail call i32 @pci_disable_link_state(ptr noundef %dev, i32 noundef 3) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_enable_clear_retrain_link(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %clear_retrain_link = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %clear_retrain_link to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %clear_retrain_link, align 2
  %bf.set = or i32 %bf.load, 8192
  store i32 %bf.set, ptr %clear_retrain_link, align 2
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.135) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @fixup_rev1_53c810(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %class1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 11
  %0 = ptrtoint ptr %class1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %class1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %2 = ptrtoint ptr %class1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 65536, ptr %class1, align 8
  %dev3 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.137, i32 noundef 0, i32 noundef 65536) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_p64h2_1k_io(ptr noundef %dev) #0 align 64 {
entry:
  %en1k = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %en1k) #14
  %0 = ptrtoint ptr %en1k to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %en1k, align 2, !annotation !1882
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 64, ptr noundef nonnull %en1k) #14
  %1 = ptrtoint ptr %en1k to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %en1k, align 2
  %3 = and i16 %2, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.139) #17
  %io_window_1k = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %4 = ptrtoint ptr %io_window_1k to i32
  call void @__asan_loadN_noabort(i32 %4, i32 5)
  %bf.load = load i40, ptr %io_window_1k, align 1
  %bf.set = or i40 %bf.load, 512
  store i40 %bf.set, ptr %io_window_1k, align 1
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %en1k) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_nvidia_ck804_pcie_aer_ext_cap(ptr noundef %dev) #0 align 64 {
entry:
  %b = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %b) #14
  %0 = ptrtoint ptr %b to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %b, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 3905, ptr noundef nonnull %b) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then:                                          ; preds = %entry
  %1 = ptrtoint ptr %b to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %b, align 1
  %3 = and i8 %2, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.then1, label %if.then.if.end6_crit_edge

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then1:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %or = or i8 %2, 32
  %call4 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 3905, i8 noundef zeroext %or) #14
  %dev5 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev5, ptr noundef nonnull @.str.141) #17
  br label %if.end6

if.end6:                                          ; preds = %if.then1, %if.then.if.end6_crit_edge, %entry.if.end6_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %b) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_via_cx700_pci_parking_caching(ptr noundef %dev) #0 align 64 {
entry:
  %b = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @pci_get_device(i32 noundef 4358, i32 noundef 12548, ptr noundef null) #14
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %b) #14
  %0 = ptrtoint ptr %b to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %b, align 1, !annotation !1882
  %call1 = tail call ptr @pci_get_device(i32 noundef 4358, i32 noundef 12548, ptr noundef %call) #14
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @pci_dev_put(ptr noundef nonnull %call1) #14
  %call2 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 118, ptr noundef nonnull %b) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %if.then3, label %if.end.if.end11_crit_edge

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then3:                                         ; preds = %if.end
  %1 = ptrtoint ptr %b to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %b, align 1
  %3 = and i8 %2, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.then3.if.end11_crit_edge, label %if.then5

if.then3.if.end11_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then5:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  %xor = xor i8 %2, 64
  %call8 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 118, i8 noundef zeroext %xor) #14
  %dev9 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev9, ptr noundef nonnull @.str.143) #17
  br label %if.end11

if.end11:                                         ; preds = %if.then5, %if.then3.if.end11_crit_edge, %if.end.if.end11_crit_edge
  %call12 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 114, ptr noundef nonnull %b) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp13 = icmp eq i32 %call12, 0
  br i1 %cmp13, label %if.then15, label %if.end11.cleanup_crit_edge

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then15:                                        ; preds = %if.end11
  %4 = ptrtoint ptr %b to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %b, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp17.not = icmp eq i8 %5, 0
  br i1 %cmp17.not, label %if.then15.cleanup_crit_edge, label %if.then19

if.then15.cleanup_crit_edge:                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then19:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  %call20 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 114, i8 noundef zeroext 0) #14
  %call21 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 117, i8 noundef zeroext 1) #14
  %call22 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 119, i8 noundef zeroext 0) #14
  %dev26 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev26, ptr noundef nonnull @.str.146) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then19, %if.then15.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %b) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_brcm_5719_limit_mrrs(ptr noundef %dev) #0 align 64 {
entry:
  %rev = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rev) #14
  %0 = ptrtoint ptr %rev to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %rev, align 4, !annotation !1882
  %call = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 244, ptr noundef nonnull %rev) #14
  %1 = ptrtoint ptr %rev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %rev, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 91328512, i32 %2)
  %cmp = icmp eq i32 %2, 91328512
  br i1 %cmp, label %if.then, label %entry.if.end5_crit_edge

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.then:                                          ; preds = %entry
  %call1 = call i32 @pcie_get_readrq(ptr noundef %dev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %call1)
  %cmp2 = icmp sgt i32 %call1, 2048
  br i1 %cmp2, label %if.then3, label %if.then.if.end5_crit_edge

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = call i32 @pcie_set_readrq(ptr noundef %dev, i32 noundef 2048) #14
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.then.if.end5_crit_edge, %entry.if.end5_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rev) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_unhide_mch_dev6(ptr noundef %dev) #0 align 64 {
entry:
  %reg = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %reg) #14
  %0 = ptrtoint ptr %reg to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %reg, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 244, ptr noundef nonnull %reg) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = ptrtoint ptr %reg to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %reg, align 1
  %3 = and i8 %2, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %do.end, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.148) #17
  %4 = ptrtoint ptr %reg to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %reg, align 1
  %6 = or i8 %5, 2
  %call4 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 244, i8 noundef zeroext %6) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %reg) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_disable_all_msi(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @pci_no_msi() #14
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1, ptr noundef nonnull @.str.150) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_disable_msi(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %subordinate = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %0 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %subordinate, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1, ptr noundef nonnull @.str.152) #17
  %2 = ptrtoint ptr %subordinate to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %subordinate, align 4
  %bus_flags = getelementptr inbounds %struct.pci_bus, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %bus_flags to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %bus_flags, align 2
  %6 = or i16 %5, 1
  store i16 %6, ptr %bus_flags, align 2
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_amd_780_apc_msi(ptr nocapture noundef readonly %host_bridge) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %host_bridge, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %call = tail call ptr @pci_get_slot(ptr noundef %1, i32 noundef 8) #14
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %if.then

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.then:                                          ; preds = %entry
  %device = getelementptr inbounds %struct.pci_dev, ptr %call, i32 0, i32 8
  %2 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -27134, i16 %3)
  %cmp = icmp eq i16 %3, -27134
  br i1 %cmp, label %if.then2, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then2:                                         ; preds = %if.then
  %subordinate.i = getelementptr inbounds %struct.pci_dev, ptr %call, i32 0, i32 2
  %4 = ptrtoint ptr %subordinate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %subordinate.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.then2.if.end_crit_edge, label %do.end.i

if.then2.if.end_crit_edge:                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end.i:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %call, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1.i, ptr noundef nonnull @.str.152) #17
  %6 = ptrtoint ptr %subordinate.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %subordinate.i, align 4
  %bus_flags.i = getelementptr inbounds %struct.pci_bus, ptr %7, i32 0, i32 19
  %8 = ptrtoint ptr %bus_flags.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %bus_flags.i, align 2
  %10 = or i16 %9, 1
  store i16 %10, ptr %bus_flags.i, align 2
  br label %if.end

if.end:                                           ; preds = %do.end.i, %if.then2.if.end_crit_edge, %if.then.if.end_crit_edge
  tail call void @pci_dev_put(ptr noundef nonnull %call) #14
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry.if.end3_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_msi_ht_cap(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @msi_ht_cap_enabled(ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %subordinate.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %0 = ptrtoint ptr %subordinate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %subordinate.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %do.end.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1.i, ptr noundef nonnull @.str.152) #17
  %2 = ptrtoint ptr %subordinate.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %subordinate.i, align 4
  %bus_flags.i = getelementptr inbounds %struct.pci_bus, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %bus_flags.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %bus_flags.i, align 2
  %6 = or i16 %5, 1
  store i16 %6, ptr %bus_flags.i, align 2
  br label %if.end

if.end:                                           ; preds = %do.end.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_nvidia_ck804_msi_ht_cap(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %call = tail call ptr @pci_get_slot(ptr noundef %1, i32 noundef 0) #14
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @msi_ht_cap_enabled(ptr noundef nonnull %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.then3, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then3:                                         ; preds = %if.end
  %call.i = tail call fastcc i32 @msi_ht_cap_enabled(ptr noundef %dev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then3.if.end4_crit_edge

if.then3.if.end4_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then.i:                                        ; preds = %if.then3
  %subordinate.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 2
  %2 = ptrtoint ptr %subordinate.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %subordinate.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i.i, label %if.then.i.if.end4_crit_edge, label %do.end.i.i

if.then.i.if.end4_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

do.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev1.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1.i.i, ptr noundef nonnull @.str.152) #17
  %4 = ptrtoint ptr %subordinate.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %subordinate.i.i, align 4
  %bus_flags.i.i = getelementptr inbounds %struct.pci_bus, ptr %5, i32 0, i32 19
  %6 = ptrtoint ptr %bus_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %bus_flags.i.i, align 2
  %8 = or i16 %7, 1
  store i16 %8, ptr %bus_flags.i.i, align 2
  br label %if.end4

if.end4:                                          ; preds = %do.end.i.i, %if.then.i.if.end4_crit_edge, %if.then3.if.end4_crit_edge, %if.end.if.end4_crit_edge
  tail call void @pci_dev_put(ptr noundef nonnull %call) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ht_enable_msi_mapping(ptr noundef %dev) #0 align 64 {
entry:
  %flags = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i8 @pci_find_ht_capability(ptr noundef %dev, i32 noundef 168) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call)
  %tobool.not20 = icmp eq i8 %call, 0
  br i1 %tobool.not20, label %entry.while.end_crit_edge, label %land.rhs.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

land.rhs.lr.ph:                                   ; preds = %entry
  %dev4 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  br label %land.rhs

land.rhs:                                         ; preds = %if.end.land.rhs_crit_edge, %land.rhs.lr.ph
  %ttl.022 = phi i32 [ 48, %land.rhs.lr.ph ], [ %dec, %if.end.land.rhs_crit_edge ]
  %pos.0.in21 = phi i8 [ %call, %land.rhs.lr.ph ], [ %call10, %if.end.land.rhs_crit_edge ]
  %dec = add nsw i32 %ttl.022, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ttl.022)
  %tobool1.not = icmp eq i32 %ttl.022, 0
  br i1 %tobool1.not, label %land.rhs.while.end_crit_edge, label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %land.rhs
  %pos.023 = zext i8 %pos.0.in21 to i32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %flags) #14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %flags, align 1, !annotation !1882
  %add = add nuw nsw i32 %pos.023, 2
  %call2 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %flags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %do.end, label %while.body.if.end_crit_edge

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev4, ptr noundef nonnull @.str.158) #17
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %flags, align 1
  %3 = or i8 %2, 1
  %call8 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef %add, i8 noundef zeroext %3) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %while.body.if.end_crit_edge
  %call10 = call zeroext i8 @pci_find_next_ht_capability(ptr noundef %dev, i8 noundef zeroext %pos.0.in21, i32 noundef 168) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags) #14
  %tobool.not = icmp eq i8 %call10, 0
  br i1 %tobool.not, label %if.end.while.end_crit_edge, label %if.end.land.rhs_crit_edge

if.end.land.rhs_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %land.rhs.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @nvenet_msi_disable(ptr nocapture noundef %dev) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @pci_quirk_nvidia_tegra_disable_rp_msi(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %no_msi = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %no_msi to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %no_msi, align 1
  %bf.set = or i40 %bf.load, 8589934592
  store i40 %bf.set, ptr %no_msi, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @nvbridge_check_legacy_irq_routing(ptr noundef %dev) #0 align 64 {
entry:
  %cfg = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cfg) #14
  %0 = ptrtoint ptr %cfg to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cfg, align 4, !annotation !1882
  %call = tail call zeroext i8 @pci_find_capability(ptr noundef %dev, i32 noundef 8) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call)
  %tobool.not = icmp eq i8 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 116, ptr noundef nonnull %cfg) #14
  %1 = ptrtoint ptr %cfg to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cfg, align 4
  %and = and i32 %2, 32772
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %do.end

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.164) #17
  %3 = ptrtoint ptr %cfg to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cfg, align 4
  %and5 = and i32 %4, -32773
  store i32 %and5, ptr %cfg, align 4
  %call6 = call i32 @pci_write_config_dword(ptr noundef %dev, i32 noundef 116, i32 noundef %and5) #14
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cfg) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @nv_msi_ht_cap_quirk_all(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__nv_msi_ht_cap_quirk(ptr noundef %dev, i32 noundef 1)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @nv_msi_ht_cap_quirk_leaf(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__nv_msi_ht_cap_quirk(ptr noundef %dev, i32 noundef 0)
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_msi_intx_disable_bug(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dev_flags, align 2
  %2 = or i16 %1, 1
  store i16 %2, ptr %dev_flags, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_msi_intx_disable_ati_bug(ptr nocapture noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @pci_get_device(i32 noundef 4098, i32 noundef 17285, ptr noundef null) #14
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %revision = getelementptr inbounds %struct.pci_dev, ptr %call, i32 0, i32 12
  %0 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %revision, align 4
  %2 = add i8 %1, -48
  call void @__sanitizer_cov_trace_const_cmp1(i8 11, i8 %2)
  %3 = icmp ult i8 %2, 11
  br i1 %3, label %if.then6, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %4 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %dev_flags, align 2
  %6 = or i16 %5, 1
  store i16 %6, ptr %dev_flags, align 2
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.end.if.end9_crit_edge
  tail call void @pci_dev_put(ptr noundef nonnull %call) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_msi_intx_disable_qca_bug(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %revision = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %revision, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 24, i8 %1)
  %cmp = icmp ult i8 %1, 24
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev2, ptr noundef nonnull @.str.170) #17
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %dev_flags, align 2
  %4 = or i16 %3, 1
  store i16 %4, ptr %dev_flags, align 2
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_al_msi_disable(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %no_msi = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %no_msi to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %no_msi, align 1
  %bf.set = or i40 %bf.load, 8589934592
  store i40 %bf.set, ptr %no_msi, align 1
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1, ptr noundef nonnull @.str.172) #17
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_hotplug_bridge(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %is_hotplug_bridge to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %is_hotplug_bridge, align 1
  %bf.set = or i40 %bf.load, 32768
  store i40 %bf.set, ptr %is_hotplug_bridge, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ricoh_mmc_fixup_rl5c476(ptr noundef %dev) #0 align 64 {
entry:
  %write_enable = alloca i8, align 1
  %write_target = alloca i8, align 1
  %disable = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %write_enable) #14
  %0 = ptrtoint ptr %write_enable to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %write_enable, align 1, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %write_target) #14
  %1 = ptrtoint ptr %write_target to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 -1, ptr %write_target, align 1, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %disable) #14
  %2 = ptrtoint ptr %disable to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 -1, ptr %disable, align 1, !annotation !1882
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %3 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %devfn, align 4
  %and = and i32 %4, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 183, ptr noundef nonnull %disable) #14
  %5 = ptrtoint ptr %disable to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %disable, align 1
  %7 = and i8 %6, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool2.not = icmp eq i8 %7, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call5 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 142, ptr noundef nonnull %write_enable) #14
  %call6 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 142, i8 noundef zeroext -86) #14
  %call7 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 141, ptr noundef nonnull %write_target) #14
  %call8 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 141, i8 noundef zeroext -73) #14
  %8 = ptrtoint ptr %disable to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %disable, align 1
  %10 = or i8 %9, 2
  %call11 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 183, i8 noundef zeroext %10) #14
  %11 = ptrtoint ptr %write_enable to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %write_enable, align 1
  %call12 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 142, i8 noundef zeroext %12) #14
  %13 = ptrtoint ptr %write_target to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %write_target, align 1
  %call13 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 141, i8 noundef zeroext %14) #14
  %dev14 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_notice(ptr noundef %dev14, ptr noundef nonnull @.str.174) #17
  call void (ptr, ptr, ...) @_dev_notice(ptr noundef %dev14, ptr noundef nonnull @.str.178) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %disable) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %write_target) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %write_enable) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @ricoh_mmc_fixup_r5c832(ptr noundef %dev) #0 align 64 {
entry:
  %write_enable = alloca i8, align 1
  %disable = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %write_enable) #14
  %0 = ptrtoint ptr %write_enable to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %write_enable, align 1, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %disable) #14
  %1 = ptrtoint ptr %disable to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 -1, ptr %disable, align 1, !annotation !1882
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %2 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %devfn, align 4
  %and = and i32 %3, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %4 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %device, align 2
  %6 = and i16 %5, -2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -6110, i16 %6)
  %switch = icmp eq i16 %6, -6110
  br i1 %switch, label %if.then6, label %if.end.if.end13_crit_edge

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 249, i8 noundef zeroext -4) #14
  %call7 = tail call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 336, i8 noundef zeroext 16) #14
  %call8 = tail call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 249, i8 noundef zeroext 0) #14
  %call9 = tail call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 252, i8 noundef zeroext 1) #14
  %call10 = tail call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 225, i8 noundef zeroext 50) #14
  %call11 = tail call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 252, i8 noundef zeroext 0) #14
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_notice(ptr noundef %dev12, ptr noundef nonnull @.str.180) #17
  br label %if.end13

if.end13:                                         ; preds = %if.then6, %if.end.if.end13_crit_edge
  %call14 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 203, ptr noundef nonnull %disable) #14
  %7 = ptrtoint ptr %disable to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %disable, align 1
  %9 = and i8 %8, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool17.not = icmp eq i8 %9, 0
  br i1 %tobool17.not, label %if.end19, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end19:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  %call20 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 202, ptr noundef nonnull %write_enable) #14
  %call21 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 202, i8 noundef zeroext 87) #14
  %10 = ptrtoint ptr %disable to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %disable, align 1
  %12 = or i8 %11, 2
  %call24 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 203, i8 noundef zeroext %12) #14
  %13 = ptrtoint ptr %write_enable to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %write_enable, align 1
  %call25 = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef 202, i8 noundef zeroext %14) #14
  %dev29 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_notice(ptr noundef %dev29, ptr noundef nonnull @.str.183) #17
  call void (ptr, ptr, ...) @_dev_notice(ptr noundef %dev29, ptr noundef nonnull @.str.178) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.end13.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %disable) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %write_enable) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @fixup_ti816x_class(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %class1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 11
  %0 = ptrtoint ptr %class1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %class1, align 8
  store i32 262144, ptr %class1, align 8
  %dev3 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev3, ptr noundef nonnull @.str.187, i32 noundef %1, i32 noundef 262144) #17
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @fixup_mpss_256(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 22
  %0 = ptrtoint ptr %pcie_mpss to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %pcie_mpss, align 1
  %bf.clear = and i8 %bf.load, 31
  %bf.set = or i8 %bf.clear, 32
  store i8 %bf.set, ptr %pcie_mpss, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_intel_mc_errata(ptr noundef %dev) #0 align 64 {
entry:
  %rcc = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %rcc) #14
  %0 = ptrtoint ptr %rcc to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %rcc, align 2, !annotation !1882
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pcie_bus_config to i32))
  %1 = load i32, ptr @pcie_bus_config, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %switch = icmp ult i32 %1, 2
  br i1 %switch, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 72, ptr noundef nonnull %rcc) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end4, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %dev3 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev3, ptr noundef nonnull @.str.189) #17
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %2 = ptrtoint ptr %rcc to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %rcc, align 2
  %4 = and i16 %3, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool5.not = icmp eq i16 %4, 0
  br i1 %tobool5.not, label %if.end4.cleanup_crit_edge, label %if.end7

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %and9 = and i16 %3, -1025
  %5 = ptrtoint ptr %rcc to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %and9, ptr %rcc, align 2
  %call11 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 72, i16 noundef zeroext %and9) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %land.end, label %do.end16

do.end16:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %dev17 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev17, ptr noundef nonnull @.str.193) #17
  br label %cleanup

land.end:                                         ; preds = %if.end7
  %.b44 = load i1, ptr @quirk_intel_mc_errata.__already_done, align 1
  br i1 %.b44, label %land.end.cleanup_crit_edge, label %if.then25, !prof !1889

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then25:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @quirk_intel_mc_errata.__already_done, align 1
  %call29 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.196) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then25, %land.end.cleanup_crit_edge, %do.end16, %if.end4.cleanup_crit_edge, %do.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %rcc) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_intel_ntb(ptr noundef %dev) #0 align 64 {
entry:
  %val = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %val) #14
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %val, align 1, !annotation !1882
  %call = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 208, ptr noundef nonnull %val) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 8
  %3 = ptrtoint ptr %val to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %val, align 1
  %sh_prom = zext i8 %4 to i64
  %shl = shl nuw i64 1, %sh_prom
  %5 = trunc i64 %shl to i32
  %6 = add i32 %2, -1
  %conv2 = add i32 %6, %5
  %end = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 2, i32 1
  %7 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv2, ptr %end, align 4
  %call5 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef 209, ptr noundef nonnull %val) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx10 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4
  %8 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx10, align 8
  %10 = ptrtoint ptr %val to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %val, align 1
  %sh_prom14 = zext i8 %11 to i64
  %shl15 = shl nuw i64 1, %sh_prom14
  %12 = trunc i64 %shl15 to i32
  %13 = add i32 %9, -1
  %conv18 = add i32 %13, %12
  %end21 = getelementptr %struct.pci_dev, ptr %dev, i32 0, i32 47, i32 4, i32 1
  %14 = ptrtoint ptr %end21 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %conv18, ptr %end21, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %val) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @disable_igfx_irq(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @pci_iomap(ptr noundef %dev, i32 noundef 0, i32 noundef 0) #14
  %cmp = icmp eq ptr %call, null
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev1, ptr noundef nonnull @.str.198) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.ptr = getelementptr i8, ptr %call, i32 278540
  %0 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1898
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp4.not = icmp eq i32 %0, 0
  br i1 %cmp4.not, label %if.end.if.end14_crit_edge, label %do.end8

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

do.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %dev9 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev9, ptr noundef nonnull @.str.201) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1899
  tail call void @arm_heavy_mb() #14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 0) #14, !srcloc !1893
  br label %if.end14

if.end14:                                         ; preds = %do.end8, %if.end.if.end14_crit_edge
  tail call void @pci_iounmap(ptr noundef %dev, ptr noundef nonnull %call) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %do.end
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal void @quirk_remove_d3hot_delay(ptr nocapture noundef writeonly %dev) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %d3hot_delay = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 35
  %0 = ptrtoint ptr %d3hot_delay to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %d3hot_delay, align 8
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_broken_intx_masking(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %broken_intx_masking = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %broken_intx_masking to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %broken_intx_masking, align 1
  %bf.set = or i40 %bf.load, 1024
  store i40 %bf.set, ptr %broken_intx_masking, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mellanox_check_broken_intx_masking(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 8
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %device, align 2
  %2 = zext i16 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.306)
  switch i16 %1, label %for.cond.13 [
    i16 25408, label %entry.if.then_crit_edge
    i16 25418, label %entry.if.then_crit_edge89
    i16 25428, label %entry.if.then_crit_edge90
    i16 26418, label %entry.if.then_crit_edge91
    i16 26428, label %entry.if.then_crit_edge92
    i16 25448, label %entry.if.then_crit_edge93
    i16 26448, label %entry.if.then_crit_edge94
    i16 25458, label %entry.if.then_crit_edge95
    i16 26458, label %entry.if.then_crit_edge96
    i16 26468, label %entry.if.then_crit_edge97
    i16 26438, label %entry.if.then_crit_edge98
    i16 26478, label %entry.if.then_crit_edge99
    i16 4099, label %entry.if.then_crit_edge100
    i16 4103, label %entry.if.then_crit_edge101
  ]

entry.if.then_crit_edge101:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge100:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge99:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge98:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge97:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge96:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge95:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge94:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge93:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge92:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge91:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge90:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge89:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

for.cond.13:                                      ; preds = %entry
  %3 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %device, align 2
  %5 = zext i16 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.307)
  switch i16 %4, label %for.cond.13.cleanup_crit_edge [
    i16 4117, label %for.cond.13.if.end19_crit_edge
    i16 4115, label %for.cond.13.if.end19_crit_edge102
  ]

for.cond.13.if.end19_crit_edge102:                ; preds = %for.cond.13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

for.cond.13.if.end19_crit_edge:                   ; preds = %for.cond.13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

for.cond.13.cleanup_crit_edge:                    ; preds = %for.cond.13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then:                                          ; preds = %entry.if.then_crit_edge, %entry.if.then_crit_edge89, %entry.if.then_crit_edge90, %entry.if.then_crit_edge91, %entry.if.then_crit_edge92, %entry.if.then_crit_edge93, %entry.if.then_crit_edge94, %entry.if.then_crit_edge95, %entry.if.then_crit_edge96, %entry.if.then_crit_edge97, %entry.if.then_crit_edge98, %entry.if.then_crit_edge99, %entry.if.then_crit_edge100, %entry.if.then_crit_edge101
  %broken_intx_masking = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %6 = ptrtoint ptr %broken_intx_masking to i32
  call void @__asan_loadN_noabort(i32 %6, i32 5)
  %bf.load = load i40, ptr %broken_intx_masking, align 1
  %bf.set = or i40 %bf.load, 1024
  store i40 %bf.set, ptr %broken_intx_masking, align 1
  br label %cleanup

if.end19:                                         ; preds = %for.cond.13.if.end19_crit_edge, %for.cond.13.if.end19_crit_edge102
  %call = tail call i32 @pci_enable_device_mem(ptr noundef %pdev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end21, label %do.end

do.end:                                           ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.203) #17
  br label %cleanup

if.end21:                                         ; preds = %if.end19
  %resource = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 47
  %7 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %resource, align 8
  %call23 = tail call ptr @ioremap(i32 noundef %8, i32 noundef 4) #14
  %tobool24.not = icmp eq ptr %call23, null
  br i1 %tobool24.not, label %do.end28, label %if.end30

do.end28:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  %dev29 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev29, ptr noundef nonnull @.str.206) #17
  br label %out

if.end30:                                         ; preds = %if.end21
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %call23) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1900
  %add.ptr = getelementptr i32, ptr %call23, i32 1
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1901
  %11 = add i32 %9, -6553600
  call void @__sanitizer_cov_trace_const_cmp4(i32 -5636096, i32 %11)
  %12 = icmp ult i32 %11, -5636096
  br i1 %12, label %do.end48, label %if.end30.if.end61_crit_edge

if.end30.if.end61_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end61

do.end48:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %shr = lshr i32 %9, 16
  %dev49 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %conv50 = and i32 %9, 65535
  %conv52 = and i32 %10, 65535
  %13 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4115, i16 %14)
  %cmp55 = icmp eq i16 %14, 4115
  %cond = select i1 %cmp55, i32 12, i32 14
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev49, ptr noundef nonnull @.str.209, i32 noundef %conv50, i32 noundef %shr, i32 noundef %conv52, i32 noundef %cond) #17
  %broken_intx_masking57 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %15 = ptrtoint ptr %broken_intx_masking57 to i32
  call void @__asan_loadN_noabort(i32 %15, i32 5)
  %bf.load58 = load i40, ptr %broken_intx_masking57, align 1
  %bf.set60 = or i40 %bf.load58, 1024
  store i40 %bf.set60, ptr %broken_intx_masking57, align 1
  br label %if.end61

if.end61:                                         ; preds = %do.end48, %if.end30.if.end61_crit_edge
  tail call void @iounmap(ptr noundef nonnull %call23) #14
  br label %out

out:                                              ; preds = %if.end61, %do.end28
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  br label %cleanup

cleanup:                                          ; preds = %out, %do.end, %if.then, %for.cond.13.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_nvidia_no_bus_reset(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %device, align 2
  %2 = and i16 %1, -64
  call void @__sanitizer_cov_trace_const_cmp2(i16 9024, i16 %2)
  %cmp = icmp eq i16 %2, 9024
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev_flags.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %3 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %dev_flags.i, align 2
  %5 = or i16 %4, 64
  store i16 %5, ptr %dev_flags.i, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_no_bus_reset(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dev_flags, align 2
  %2 = or i16 %1, 64
  store i16 %2, ptr %dev_flags, align 2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_no_pm_reset(ptr nocapture noundef %dev) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %parent.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %4 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %dev_flags, align 2
  %6 = or i16 %5, 128
  store i16 %6, ptr %dev_flags, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_thunderbolt_hotplug_msi(ptr nocapture noundef %pdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %0 = ptrtoint ptr %is_hotplug_bridge to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %is_hotplug_bridge, align 1
  %1 = and i40 %bf.load, 32768
  %tobool.not = icmp eq i40 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 8
  %2 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 5447, i16 %3)
  %cmp.not = icmp eq i16 %3, 5447
  br i1 %cmp.not, label %lor.lhs.false, label %land.lhs.true.if.then_crit_edge

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %revision = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 12
  %4 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %revision, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %5)
  %cmp3 = icmp ult i8 %5, 2
  br i1 %cmp3, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  %bf.set = or i40 %bf.load, 8589934592
  %6 = ptrtoint ptr %is_hotplug_bridge to i32
  call void @__asan_storeN_noabort(i32 %6, i32 5)
  store i40 %bf.set, ptr %is_hotplug_bridge, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_dev_specific_reset(ptr noundef %dev, i1 noundef zeroext %probe) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 7
  %0 = ptrtoint ptr %vendor1 to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %vendor1, align 8
  %device9 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %2 = zext i16 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.308)
  switch i16 %1, label %entry.cleanup_crit_edge [
    i16 -32634, label %land.lhs.true
    i16 5197, label %land.lhs.true.3
    i16 5157, label %entry.if.then_crit_edge
    i16 6629, label %land.lhs.true.7
  ]

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true:                                    ; preds = %entry
  %3 = ptrtoint ptr %device9 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %device9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4333, i16 %4)
  %cmp11 = icmp eq i16 %4, 4333
  br i1 %cmp11, label %land.lhs.true.if.then_crit_edge, label %land.lhs.true.1

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then:                                          ; preds = %land.lhs.true.7.if.then_crit_edge, %land.lhs.true.5.if.then_crit_edge, %land.lhs.true.4.if.then_crit_edge, %land.lhs.true.3.if.then_crit_edge, %land.lhs.true.2.if.then_crit_edge, %land.lhs.true.1.if.then_crit_edge, %land.lhs.true.if.then_crit_edge, %entry.if.then_crit_edge
  %.lcssa = phi ptr [ @reset_intel_82599_sfp_virtfn, %land.lhs.true.if.then_crit_edge ], [ @reset_ivb_igd, %land.lhs.true.1.if.then_crit_edge ], [ @reset_ivb_igd, %land.lhs.true.2.if.then_crit_edge ], [ @nvme_disable_and_flr, %land.lhs.true.3.if.then_crit_edge ], [ @delay_250ms_after_flr, %land.lhs.true.4.if.then_crit_edge ], [ @delay_250ms_after_flr, %land.lhs.true.5.if.then_crit_edge ], [ @reset_hinic_vf_dev, %land.lhs.true.7.if.then_crit_edge ], [ @reset_chelsio_generic_dev, %entry.if.then_crit_edge ]
  %call = tail call i32 %.lcssa(ptr noundef %dev, i1 noundef zeroext %probe) #14
  br label %cleanup

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %5 = ptrtoint ptr %device9 to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %device9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 342, i16 %6)
  %cmp11.1 = icmp eq i16 %6, 342
  br i1 %cmp11.1, label %land.lhs.true.1.if.then_crit_edge, label %land.lhs.true.2

land.lhs.true.1.if.then_crit_edge:                ; preds = %land.lhs.true.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.2:                                  ; preds = %land.lhs.true.1
  %7 = ptrtoint ptr %device9 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %device9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 358, i16 %8)
  %cmp11.2 = icmp eq i16 %8, 358
  br i1 %cmp11.2, label %land.lhs.true.2.if.then_crit_edge, label %land.lhs.true.4

land.lhs.true.2.if.then_crit_edge:                ; preds = %land.lhs.true.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.3:                                  ; preds = %entry
  %9 = ptrtoint ptr %device9 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %device9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -22524, i16 %10)
  %cmp11.3 = icmp eq i16 %10, -22524
  br i1 %cmp11.3, label %land.lhs.true.3.if.then_crit_edge, label %land.lhs.true.3.cleanup_crit_edge

land.lhs.true.3.cleanup_crit_edge:                ; preds = %land.lhs.true.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.3.if.then_crit_edge:                ; preds = %land.lhs.true.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.4:                                  ; preds = %land.lhs.true.2
  %11 = ptrtoint ptr %device9 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %device9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2387, i16 %12)
  %cmp11.4 = icmp eq i16 %12, 2387
  br i1 %cmp11.4, label %land.lhs.true.4.if.then_crit_edge, label %land.lhs.true.5

land.lhs.true.4.if.then_crit_edge:                ; preds = %land.lhs.true.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.5:                                  ; preds = %land.lhs.true.4
  %13 = ptrtoint ptr %device9 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %device9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2644, i16 %14)
  %cmp11.5 = icmp eq i16 %14, 2644
  br i1 %cmp11.5, label %land.lhs.true.5.if.then_crit_edge, label %land.lhs.true.5.cleanup_crit_edge

land.lhs.true.5.cleanup_crit_edge:                ; preds = %land.lhs.true.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.5.if.then_crit_edge:                ; preds = %land.lhs.true.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.7:                                  ; preds = %entry
  %15 = ptrtoint ptr %device9 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %device9, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 14174, i16 %16)
  %cmp11.7 = icmp eq i16 %16, 14174
  br i1 %cmp11.7, label %land.lhs.true.7.if.then_crit_edge, label %land.lhs.true.7.cleanup_crit_edge

land.lhs.true.7.cleanup_crit_edge:                ; preds = %land.lhs.true.7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.7.if.then_crit_edge:                ; preds = %land.lhs.true.7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

cleanup:                                          ; preds = %land.lhs.true.7.cleanup_crit_edge, %land.lhs.true.5.cleanup_crit_edge, %land.lhs.true.3.cleanup_crit_edge, %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then ], [ -25, %land.lhs.true.7.cleanup_crit_edge ], [ -25, %land.lhs.true.5.cleanup_crit_edge ], [ -25, %land.lhs.true.3.cleanup_crit_edge ], [ -25, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_dma_func0_alias(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %devfn, align 4
  %and = and i32 %1, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp.not = icmp eq i32 %and, 0
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %2 = trunc i32 %1 to i8
  %conv = and i8 %2, -8
  tail call void @pci_add_dma_alias(ptr noundef %dev, i8 noundef zeroext %conv, i32 noundef 1) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_dma_func1_alias(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %devfn, align 4
  %and = and i32 %1, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and)
  %cmp.not = icmp eq i32 %and, 1
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %2 = trunc i32 %1 to i8
  %3 = and i8 %2, -8
  %conv = or i8 %3, 1
  tail call void @pci_add_dma_alias(ptr noundef %dev, i8 noundef zeroext %conv, i32 noundef 1) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_fixed_dma_alias(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @pci_match_id(ptr noundef nonnull @fixed_dma_alias_tbl, ptr noundef %dev) #14
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %driver_data = getelementptr inbounds %struct.pci_device_id, ptr %call, i32 0, i32 6
  %0 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %driver_data, align 4
  %conv = trunc i32 %1 to i8
  tail call void @pci_add_dma_alias(ptr noundef %dev, i8 noundef zeroext %conv, i32 noundef 1) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_use_pcie_bridge_dma_alias(ptr nocapture noundef %pdev) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %parent.i = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %hdr_type = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 13
  %4 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %hdr_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp = icmp eq i8 %5, 1
  br i1 %cmp, label %land.lhs.true2, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 19
  %6 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.i.not = icmp eq i8 %7, 0
  br i1 %tobool.i.not, label %land.lhs.true4, label %land.lhs.true2.if.end_crit_edge

land.lhs.true2.if.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %self = getelementptr inbounds %struct.pci_bus, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %self, align 4
  %pcie_cap.i.i21 = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 19
  %10 = ptrtoint ptr %pcie_cap.i.i21 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %pcie_cap.i.i21, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.i22.not = icmp eq i8 %11, 0
  br i1 %tobool.i22.not, label %land.lhs.true4.if.end_crit_edge, label %land.lhs.true8

land.lhs.true4.if.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 25
  %12 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %14 = and i16 %13, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 112, i16 %14)
  %cmp12.not = icmp eq i16 %14, 112
  br i1 %cmp12.not, label %land.lhs.true8.if.end_crit_edge, label %if.then

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 50
  %15 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %dev_flags, align 2
  %17 = or i16 %16, 32
  store i16 %17, ptr %dev_flags, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true8.if.end_crit_edge, %land.lhs.true4.if.end_crit_edge, %land.lhs.true2.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_mic_x200_dma_alias(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @pci_add_dma_alias(ptr noundef %pdev, i8 noundef zeroext -128, i32 noundef 1) #14
  tail call void @pci_add_dma_alias(ptr noundef %pdev, i8 noundef zeroext -120, i32 noundef 1) #14
  tail call void @pci_add_dma_alias(ptr noundef %pdev, i8 noundef zeroext -109, i32 noundef 1) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_pex_vca_alias(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %slot.03 = phi i32 [ 0, %entry ], [ %inc, %for.body.for.body_crit_edge ]
  %slot.0.tr = trunc i32 %slot.03 to i8
  %conv = shl nuw i8 %slot.0.tr, 3
  tail call void @pci_add_dma_alias(ptr noundef %pdev, i8 noundef zeroext %conv, i32 noundef 5) #14
  %inc = add nuw nsw i32 %slot.03, 1
  %exitcond.not = icmp eq i32 %inc, 32
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_bridge_cavm_thrx2_pcie_root(ptr nocapture noundef %pdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 50
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dev_flags, align 2
  %2 = or i16 %1, 512
  store i16 %2, ptr %dev_flags, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_tw686x_class(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %class1 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 11
  %0 = ptrtoint ptr %class1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %class1, align 8
  store i32 294913, ptr %class1, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.217, i32 noundef %1, i32 noundef 294913) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_relaxedordering_disable(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dev_flags, align 2
  %2 = or i16 %1, 2048
  store i16 %2, ptr %dev_flags, align 2
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev2, ptr noundef nonnull @.str.219) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_chelsio_T5_disable_root_port_attributes(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 8
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %device, align 2
  %2 = and i16 %1, -256
  call void @__sanitizer_cov_trace_const_cmp2(i16 21504, i16 %2)
  %cmp = icmp eq i16 %2, 21504
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %tobool.not7.i.i = icmp eq ptr %pdev, null
  br i1 %tobool.not7.i.i, label %if.then.do.end.i_crit_edge, label %if.then.while.body.i.i_crit_edge

if.then.while.body.i.i_crit_edge:                 ; preds = %if.then
  br label %while.body.i.i

if.then.do.end.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

while.body.i.i:                                   ; preds = %pci_upstream_bridge.exit.i.i.while.body.i.i_crit_edge, %if.then.while.body.i.i_crit_edge
  %dev.addr.08.i.i = phi ptr [ %18, %pci_upstream_bridge.exit.i.i.while.body.i.i_crit_edge ], [ %pdev, %if.then.while.body.i.i_crit_edge ]
  %pcie_cap.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 19
  %3 = ptrtoint ptr %pcie_cap.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %pcie_cap.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.i.not.i.i = icmp eq i8 %4, 0
  br i1 %tobool.i.not.i.i, label %while.body.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

while.body.i.i.if.end.i.i_crit_edge:              ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %while.body.i.i
  %pcie_flags_reg.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 25
  %5 = ptrtoint ptr %pcie_flags_reg.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %pcie_flags_reg.i.i.i.i, align 2
  %7 = and i16 %6, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %7)
  %cmp.i.i = icmp eq i16 %7, 64
  br i1 %cmp.i.i, label %do.end3.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i.if.end.i.i_crit_edge, %while.body.i.i.if.end.i.i_crit_edge
  %is_virtfn.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 49
  %8 = ptrtoint ptr %is_virtfn.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 5)
  %bf.load.i.i.i.i = load i40, ptr %is_virtfn.i.i.i.i, align 1
  %9 = and i40 %bf.load.i.i.i.i, 65536
  %tobool.not.i.i.i.i = icmp eq i40 %9, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.pci_physfn.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

if.end.i.i.pci_physfn.exit.i.i.i_crit_edge:       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_physfn.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %10 = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 66
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 8
  br label %pci_physfn.exit.i.i.i

pci_physfn.exit.i.i.i:                            ; preds = %if.then.i.i.i.i, %if.end.i.i.pci_physfn.exit.i.i.i_crit_edge
  %dev.addr.0.i.i.i.i = phi ptr [ %12, %if.then.i.i.i.i ], [ %dev.addr.08.i.i, %if.end.i.i.pci_physfn.exit.i.i.i_crit_edge ]
  %bus.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %bus.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %bus.i.i.i, align 8
  %parent.i.i.i.i = getelementptr inbounds %struct.pci_bus, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %parent.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %parent.i.i.i.i, align 8
  %tobool.not.i5.i.i.i = icmp eq ptr %16, null
  br i1 %tobool.not.i5.i.i.i, label %pci_physfn.exit.i.i.i.do.end.i_crit_edge, label %pci_upstream_bridge.exit.i.i

pci_physfn.exit.i.i.i.do.end.i_crit_edge:         ; preds = %pci_physfn.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

pci_upstream_bridge.exit.i.i:                     ; preds = %pci_physfn.exit.i.i.i
  %self.i.i.i = getelementptr inbounds %struct.pci_bus, ptr %14, i32 0, i32 4
  %17 = ptrtoint ptr %self.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %self.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %pci_upstream_bridge.exit.i.i.do.end.i_crit_edge, label %pci_upstream_bridge.exit.i.i.while.body.i.i_crit_edge

pci_upstream_bridge.exit.i.i.while.body.i.i_crit_edge: ; preds = %pci_upstream_bridge.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

pci_upstream_bridge.exit.i.i.do.end.i_crit_edge:  ; preds = %pci_upstream_bridge.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

do.end.i:                                         ; preds = %pci_upstream_bridge.exit.i.i.do.end.i_crit_edge, %pci_physfn.exit.i.i.i.do.end.i_crit_edge, %if.then.do.end.i_crit_edge
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i, ptr noundef nonnull @.str.221) #17
  br label %if.end

do.end3.i:                                        ; preds = %land.lhs.true.i.i
  %dev4.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 44
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44, i32 3
  %19 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i12.i = icmp eq ptr %20, null
  br i1 %tobool.not.i12.i, label %if.end.i13.i, label %do.end3.i.dev_name.exit.i_crit_edge

do.end3.i.dev_name.exit.i_crit_edge:              ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dev_name.exit.i

if.end.i13.i:                                     ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev5.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %21 = ptrtoint ptr %dev5.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev5.i, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i13.i, %do.end3.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %22, %if.end.i13.i ], [ %20, %do.end3.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev4.i, ptr noundef nonnull @.str.224, ptr noundef %retval.0.i.i) #17
  %call7.i = tail call i32 @pcie_capability_clear_and_set_word(ptr noundef nonnull %dev.addr.08.i.i, i32 noundef 8, i16 noundef zeroext 2064, i16 noundef zeroext 0) #14
  br label %if.end

if.end:                                           ; preds = %dev_name.exit.i, %do.end.i, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_dev_specific_acs_enabled(ptr noundef %dev, i16 noundef zeroext %acs_flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 7
  %device9 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %0 = phi ptr [ @pci_quirk_amd_sb_acs, %entry ], [ %10, %for.inc.for.body_crit_edge ]
  %i.034 = phi ptr [ @pci_dev_acs_enabled, %entry ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %1 = ptrtoint ptr %i.034 to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %i.034, align 4
  %3 = ptrtoint ptr %vendor1 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %vendor1, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %2, i16 %4)
  %cmp = icmp eq i16 %2, %4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %2)
  %cmp6 = icmp eq i16 %2, -1
  %or.cond = or i1 %cmp6, %cmp
  br i1 %or.cond, label %land.lhs.true, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %device = getelementptr inbounds %struct.pci_dev_acs_enabled, ptr %i.034, i32 0, i32 1
  %5 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %device, align 2
  %7 = ptrtoint ptr %device9 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %device9, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %6, i16 %8)
  %cmp11 = icmp eq i16 %6, %8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %6)
  %cmp16 = icmp eq i16 %6, -1
  %or.cond33 = or i1 %cmp16, %cmp11
  br i1 %or.cond33, label %if.then, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 %0(ptr noundef %dev, i16 noundef zeroext %acs_flags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)
  %cmp19 = icmp sgt i32 %call, -1
  br i1 %cmp19, label %if.then.cleanup_crit_edge, label %if.then.for.inc_crit_edge

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc:                                          ; preds = %if.then.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %incdec.ptr = getelementptr %struct.pci_dev_acs_enabled, ptr %i.034, i32 1
  %acs_enabled = getelementptr %struct.pci_dev_acs_enabled, ptr %i.034, i32 1, i32 2
  %9 = ptrtoint ptr %acs_enabled to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %acs_enabled, align 4
  %tobool.not = icmp eq ptr %10, null
  br i1 %tobool.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then.cleanup_crit_edge ], [ -25, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_dev_specific_enable_acs(ptr noundef %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 7
  %0 = ptrtoint ptr %vendor1 to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %vendor1, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %1)
  %cmp3 = icmp eq i16 %1, -32634
  br i1 %cmp3, label %if.then, label %entry.for.inc.1_crit_edge

entry.for.inc.1_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @pci_quirk_enable_intel_pch_acs(ptr noundef %dev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)
  %cmp21 = icmp sgt i32 %call, -1
  br i1 %cmp21, label %if.then.cleanup_crit_edge, label %for.inc

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc:                                          ; preds = %if.then
  %2 = ptrtoint ptr %vendor1 to i32
  call void @__asan_load2_noabort(i32 %2)
  %.pr = load i16, ptr %vendor1, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %.pr)
  %cmp3.1 = icmp eq i16 %.pr, -32634
  br i1 %cmp3.1, label %if.then.1, label %for.inc.for.inc.1_crit_edge

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1

if.then.1:                                        ; preds = %for.inc
  %call.1 = tail call fastcc i32 @pci_quirk_enable_intel_spt_pch_acs(ptr noundef %dev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.1)
  %cmp21.1 = icmp sgt i32 %call.1, -1
  br i1 %cmp21.1, label %if.then.1.cleanup_crit_edge, label %if.then.1.for.inc.1_crit_edge

if.then.1.for.inc.1_crit_edge:                    ; preds = %if.then.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1

if.then.1.cleanup_crit_edge:                      ; preds = %if.then.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.1:                                        ; preds = %if.then.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge, %entry.for.inc.1_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %for.inc.1, %if.then.1.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then.cleanup_crit_edge ], [ %call.1, %if.then.1.cleanup_crit_edge ], [ -25, %for.inc.1 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_dev_specific_disable_acs_redir(ptr noundef %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %vendor1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 7
  %0 = ptrtoint ptr %vendor1 to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %vendor1, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %1)
  %cmp3.1 = icmp eq i16 %1, -32634
  br i1 %cmp3.1, label %if.then.1, label %entry.for.inc.1_crit_edge

entry.for.inc.1_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1

if.then.1:                                        ; preds = %entry
  %call.1 = tail call fastcc i32 @pci_quirk_disable_intel_spt_pch_acs_redir(ptr noundef %dev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.1)
  %cmp21.1 = icmp sgt i32 %call.1, -1
  br i1 %cmp21.1, label %if.then.1.cleanup_crit_edge, label %if.then.1.for.inc.1_crit_edge

if.then.1.for.inc.1_crit_edge:                    ; preds = %if.then.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1

if.then.1.cleanup_crit_edge:                      ; preds = %if.then.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.1:                                        ; preds = %if.then.1.for.inc.1_crit_edge, %entry.for.inc.1_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %for.inc.1, %if.then.1.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.1, %if.then.1.cleanup_crit_edge ], [ -25, %for.inc.1 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_intel_qat_vf_cap(ptr noundef %pdev) #0 align 64 {
entry:
  %next_cap = alloca i8, align 1
  %reg16 = alloca i16, align 2
  %status = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %next_cap) #14
  %0 = ptrtoint ptr %next_cap to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %next_cap, align 1, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg16) #14
  %1 = ptrtoint ptr %reg16 to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %reg16, align 2, !annotation !1882
  %pcie_cap = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 19
  %2 = ptrtoint ptr %pcie_cap to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %pcie_cap, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup69_crit_edge

entry.cleanup69_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup69

lor.lhs.false:                                    ; preds = %entry
  %call = tail call zeroext i8 @pci_find_capability(ptr noundef %pdev, i32 noundef 16) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call)
  %tobool2.not = icmp eq i8 %call, 0
  br i1 %tobool2.not, label %if.end, label %lor.lhs.false.cleanup69_crit_edge

lor.lhs.false.cleanup69_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup69

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call zeroext i8 @pci_find_capability(ptr noundef %pdev, i32 noundef 5) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call3)
  %tobool5.not = icmp eq i8 %call3, 0
  br i1 %tobool5.not, label %if.end.cleanup69_crit_edge, label %if.end7

if.end.cleanup69_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup69

if.end7:                                          ; preds = %if.end
  %conv4 = zext i8 %call3 to i32
  %add = add nuw nsw i32 %conv4, 1
  %call8 = call i32 @pci_read_config_byte(ptr noundef %pdev, i32 noundef %add, ptr noundef nonnull %next_cap) #14
  %4 = ptrtoint ptr %next_cap to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %next_cap, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool9.not = icmp eq i8 %5, 0
  br i1 %tobool9.not, label %if.end11, label %if.end7.cleanup69_crit_edge

if.end7.cleanup69_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup69

if.end11:                                         ; preds = %if.end7
  %call12 = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef 80, ptr noundef nonnull %reg16) #14
  %6 = ptrtoint ptr %reg16 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %reg16, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %7)
  %cmp = icmp eq i16 %7, 16
  br i1 %cmp, label %if.then15, label %if.end11.cleanup69_crit_edge

if.end11.cleanup69_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup69

if.then15:                                        ; preds = %if.end11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status) #14
  %8 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %status, align 4, !annotation !1882
  %9 = ptrtoint ptr %pcie_cap to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 80, ptr %pcie_cap, align 8
  %call19 = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef 82, ptr noundef nonnull %reg16) #14
  %10 = ptrtoint ptr %reg16 to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %reg16, align 2
  %pcie_flags_reg = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 25
  %12 = ptrtoint ptr %pcie_flags_reg to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %11, ptr %pcie_flags_reg, align 2
  %call21 = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef 84, ptr noundef nonnull %reg16) #14
  %13 = ptrtoint ptr %reg16 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %reg16, align 2
  %15 = trunc i16 %14 to i8
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 22
  %16 = ptrtoint ptr %pcie_mpss to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load = load i8, ptr %pcie_mpss, align 1
  %bf.shl = shl i8 %15, 5
  %bf.clear = and i8 %bf.load, 31
  %bf.set = or i8 %bf.clear, %bf.shl
  store i8 %bf.set, ptr %pcie_mpss, align 1
  %cfg_size = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 45
  %17 = ptrtoint ptr %cfg_size to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 4096, ptr %cfg_size, align 8
  %call24 = call i32 @pci_read_config_dword(ptr noundef %pdev, i32 noundef 256, ptr noundef nonnull %status) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %cmp25.not = icmp eq i32 %call24, 0
  br i1 %cmp25.not, label %lor.lhs.false27, label %if.then15.if.then30_crit_edge

if.then15.if.then30_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then30

lor.lhs.false27:                                  ; preds = %if.then15
  %18 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %cmp28 = icmp eq i32 %19, -1
  br i1 %cmp28, label %lor.lhs.false27.if.then30_crit_edge, label %lor.lhs.false27.if.end32_crit_edge

lor.lhs.false27.if.end32_crit_edge:               ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

lor.lhs.false27.if.then30_crit_edge:              ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then30

if.then30:                                        ; preds = %lor.lhs.false27.if.then30_crit_edge, %if.then15.if.then30_crit_edge
  %20 = ptrtoint ptr %cfg_size to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 256, ptr %cfg_size, align 8
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %lor.lhs.false27.if.end32_crit_edge
  %call33 = call ptr @pci_find_saved_cap(ptr noundef %pdev, i8 noundef zeroext 16) #14
  %tobool34.not = icmp eq ptr %call33, null
  br i1 %tobool34.not, label %if.end36, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end36:                                         ; preds = %if.end32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %21 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %21, i32 noundef 3520, i32 noundef 30) #18
  %tobool39.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool39.not, label %if.end36.cleanup_crit_edge, label %if.end41

if.end36.cleanup_crit_edge:                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end41:                                         ; preds = %if.end36
  %cap42 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %cap42 to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 16, ptr %cap42, align 8
  %cap_extended = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i, i32 0, i32 1, i32 1
  %23 = ptrtoint ptr %cap_extended to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 0, ptr %cap_extended, align 2
  %size45 = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i, i32 0, i32 1, i32 2
  %24 = ptrtoint ptr %size45 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 14, ptr %size45, align 4
  %data = getelementptr inbounds %struct.pci_cap_saved_state, ptr %call7.i.i, i32 1
  %call48 = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 8, ptr noundef %data) #14
  %arrayidx50 = getelementptr i16, ptr %data, i32 1
  %call51 = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 16, ptr noundef %arrayidx50) #14
  %arrayidx53 = getelementptr %struct.pci_cap_saved_state, ptr %call7.i.i, i32 1, i32 0, i32 1
  %call54 = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 24, ptr noundef %arrayidx53) #14
  %arrayidx56 = getelementptr i16, ptr %data, i32 3
  %call57 = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 28, ptr noundef %arrayidx56) #14
  %arrayidx59 = getelementptr %struct.pci_cap_saved_state, ptr %call7.i.i, i32 1, i32 1
  %call60 = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 40, ptr noundef %arrayidx59) #14
  %arrayidx62 = getelementptr %struct.pci_cap_saved_state, ptr %call7.i.i, i32 1, i32 1, i32 1
  %call63 = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 48, ptr noundef %arrayidx62) #14
  %arrayidx65 = getelementptr %struct.pci_cap_saved_state, ptr %call7.i.i, i32 1, i32 1, i32 2
  %call66 = call i32 @pcie_capability_read_word(ptr noundef %pdev, i32 noundef 56, ptr noundef %arrayidx65) #14
  %saved_cap_space = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 53
  %25 = ptrtoint ptr %saved_cap_space to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %saved_cap_space, align 4
  %27 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %26, ptr %call7.i.i, align 8
  %tobool.not.i = icmp eq ptr %26, null
  br i1 %tobool.not.i, label %if.end41.hlist_add_head.exit_crit_edge, label %do.body12.i

if.end41.hlist_add_head.exit_crit_edge:           ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %26, i32 0, i32 1
  %28 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %call7.i.i, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %if.end41.hlist_add_head.exit_crit_edge
  %29 = ptrtoint ptr %saved_cap_space to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %call7.i.i, ptr %saved_cap_space, align 4
  %pprev34.i = getelementptr inbounds %struct.hlist_node, ptr %call7.i.i, i32 0, i32 1
  %30 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %saved_cap_space, ptr %pprev34.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status) #14
  br label %cleanup69

cleanup:                                          ; preds = %if.end36.cleanup_crit_edge, %if.end32.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status) #14
  br label %cleanup69

cleanup69:                                        ; preds = %cleanup, %hlist_add_head.exit, %if.end11.cleanup69_crit_edge, %if.end7.cleanup69_crit_edge, %if.end.cleanup69_crit_edge, %lor.lhs.false.cleanup69_crit_edge, %entry.cleanup69_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg16) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %next_cap) #14
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_no_flr(ptr nocapture noundef %dev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dev_flags, align 2
  %2 = or i16 %1, 1024
  store i16 %2, ptr %dev_flags, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_no_ext_tags(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bus = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 1
  %0 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bus, align 8
  %call = tail call ptr @pci_find_host_bridge(ptr noundef %1) #14
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %no_ext_tags = getelementptr inbounds %struct.pci_host_bridge, ptr %call, i32 0, i32 13
  %2 = ptrtoint ptr %no_ext_tags to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load = load i16, ptr %no_ext_tags, align 8
  %bf.set = or i16 %bf.load, 16384
  store i16 %bf.set, ptr %no_ext_tags, align 8
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.239) #17
  %bus1 = getelementptr inbounds %struct.pci_host_bridge, ptr %call, i32 0, i32 1
  %3 = ptrtoint ptr %bus1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bus1, align 32
  tail call void @pci_walk_bus(ptr noundef %4, ptr noundef nonnull @pci_configure_extended_tags, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_amd_harvest_no_ats(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 8
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 5592, i16 %1)
  %cmp = icmp eq i16 %1, 5592
  br i1 %cmp, label %if.then, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then:                                          ; preds = %entry
  %revision = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 12
  %2 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %revision, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -49, i8 %3)
  %cmp3 = icmp eq i8 %3, -49
  br i1 %cmp3, label %land.lhs.true, label %if.then.return_crit_edge

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

land.lhs.true:                                    ; preds = %if.then
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 9
  %4 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %subsystem_vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -5552, i16 %5)
  %cmp6 = icmp eq i16 %5, -5552
  br i1 %cmp6, label %land.lhs.true8, label %land.lhs.true.return_crit_edge

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

land.lhs.true8:                                   ; preds = %land.lhs.true
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 10
  %6 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %subsystem_device, align 2
  %8 = zext i16 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.309)
  switch i16 %7, label %land.lhs.true8.return_crit_edge [
    i16 -12775, label %land.lhs.true8.do.end_crit_edge
    i16 -13296, label %land.lhs.true8.do.end_crit_edge29
    i16 -13304, label %land.lhs.true8.do.end_crit_edge30
  ]

land.lhs.true8.do.end_crit_edge30:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

land.lhs.true8.do.end_crit_edge29:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

land.lhs.true8.do.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

land.lhs.true8.return_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

do.end:                                           ; preds = %land.lhs.true8.do.end_crit_edge, %land.lhs.true8.do.end_crit_edge29, %land.lhs.true8.do.end_crit_edge30, %entry.do.end_crit_edge
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.241) #17
  %ats_cap = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 67
  %9 = ptrtoint ptr %ats_cap to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 0, ptr %ats_cap, align 4
  br label %return

return:                                           ; preds = %do.end, %land.lhs.true8.return_crit_edge, %land.lhs.true.return_crit_edge, %if.then.return_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @quirk_fsl_no_msi(ptr nocapture noundef %pdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 25
  %0 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %2 = and i16 %1, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %2)
  %cmp = icmp eq i16 %2, 64
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %no_msi = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %3 = ptrtoint ptr %no_msi to i32
  call void @__asan_loadN_noabort(i32 %3, i32 5)
  %bf.load = load i40, ptr %no_msi, align 1
  %bf.set = or i40 %bf.load, 8589934592
  store i40 %bf.set, ptr %no_msi, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_gpu_hda(ptr noundef %hda) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @pci_create_device_link(ptr noundef %hda, i32 noundef 1)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_gpu_usb(ptr noundef %usb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @pci_create_device_link(ptr noundef %usb, i32 noundef 2)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_gpu_usb_typec_ucsi(ptr noundef %ucsi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @pci_create_device_link(ptr noundef %ucsi, i32 noundef 3)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_nvidia_hda(ptr noundef %gpu) #0 align 64 {
entry:
  %hdr_type = alloca i8, align 1
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %hdr_type) #14
  %0 = ptrtoint ptr %hdr_type to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %hdr_type, align 1, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #14
  %1 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %val, align 4, !annotation !1882
  %device = getelementptr inbounds %struct.pci_dev, ptr %gpu, i32 0, i32 8
  %2 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2208, i16 %3)
  %cmp = icmp ult i16 %3, 2208
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call i32 @pci_read_config_dword(ptr noundef %gpu, i32 noundef 1160, ptr noundef nonnull %val) #14
  %4 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %val, align 4
  %and = and i32 %5, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.pci_dev, ptr %gpu, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.248) #17
  %6 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %val, align 4
  %or = or i32 %7, 33554432
  %call4 = call i32 @pci_write_config_dword(ptr noundef %gpu, i32 noundef 1160, i32 noundef %or) #14
  %call5 = call i32 @pci_read_config_byte(ptr noundef %gpu, i32 noundef 14, ptr noundef nonnull %hdr_type) #14
  %8 = ptrtoint ptr %hdr_type to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %hdr_type, align 1
  %.lobit = lshr i8 %9, 7
  %multifunction = getelementptr inbounds %struct.pci_dev, ptr %gpu, i32 0, i32 49
  %10 = zext i8 %.lobit to i40
  %11 = ptrtoint ptr %multifunction to i32
  call void @__asan_loadN_noabort(i32 %11, i32 5)
  %bf.load = load i40, ptr %multifunction, align 1
  %bf.shl = shl nuw nsw i40 %10, 35
  %bf.clear = and i40 %bf.load, -34359738369
  %bf.set = or i40 %bf.shl, %bf.clear
  store i40 %bf.set, ptr %multifunction, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %hdr_type) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pci_idt_bus_quirk(ptr noundef %bus, i32 noundef %devfn, ptr noundef %l, i32 noundef %timeout) local_unnamed_addr #0 align 64 {
entry:
  %ctrl = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl) #14
  %0 = ptrtoint ptr %ctrl to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 0, ptr %ctrl, align 2
  %self = getelementptr inbounds %struct.pci_bus, ptr %bus, i32 0, i32 4
  %1 = ptrtoint ptr %self to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %self, align 4
  %acs_cap = getelementptr inbounds %struct.pci_dev, ptr %2, i32 0, i32 77
  %3 = ptrtoint ptr %acs_cap to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %acs_cap, align 2
  %conv = zext i16 %4 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool.not = icmp eq i16 %4, 0
  br i1 %tobool.not, label %entry.if.end9_crit_edge, label %if.then

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then:                                          ; preds = %entry
  %add = add nuw nsw i32 %conv, 6
  %call = call i32 @pci_read_config_word(ptr noundef %2, i32 noundef %add, ptr noundef nonnull %ctrl) #14
  %5 = ptrtoint ptr %ctrl to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %ctrl, align 2
  %7 = and i16 %6, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool2.not = icmp eq i16 %7, 0
  br i1 %tobool2.not, label %if.then.if.end9_crit_edge, label %if.then3

if.then.if.end9_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %and6 = and i16 %6, -2
  %call8 = call i32 @pci_write_config_word(ptr noundef %2, i32 noundef %add, i16 noundef zeroext %and6) #14
  br label %if.end9

if.end9:                                          ; preds = %if.then3, %if.then.if.end9_crit_edge, %entry.if.end9_crit_edge
  %call10 = call zeroext i1 @pci_bus_generic_read_dev_vendor_id(ptr noundef %bus, i32 noundef %devfn, ptr noundef %l, i32 noundef %timeout) #14
  br i1 %call10, label %if.then12, label %if.end9.if.end14_crit_edge

if.end9.if.end14_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %call13 = call i32 @pci_bus_write_config_word(ptr noundef %bus, i32 noundef %devfn, i32 noundef 0, i16 noundef zeroext 0) #14
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end9.if.end14_crit_edge
  %8 = ptrtoint ptr %ctrl to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %ctrl, align 2
  %10 = and i16 %9, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool17.not = icmp eq i16 %10, 0
  br i1 %tobool17.not, label %if.end14.if.end21_crit_edge, label %if.then18

if.end14.if.end21_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21

if.then18:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  %add19 = add nuw nsw i32 %conv, 6
  %call20 = call i32 @pci_write_config_word(ptr noundef %2, i32 noundef %add19, i16 noundef zeroext %9) #14
  br label %if.end21

if.end21:                                         ; preds = %if.then18, %if.end14.if.end21_crit_edge
  %conv23 = zext i1 %call10 to i32
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl) #14
  ret i32 %conv23
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_config_word(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @pci_bus_generic_read_dev_vendor_id(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_bus_write_config_word(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_switchtec_ntb_dma_alias(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pci_enable_device(ptr noundef %pdev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.250) #17
  br label %cleanup94

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @pci_iomap(ptr noundef %pdev, i32 noundef 0, i32 noundef 0) #14
  %cmp = icmp eq ptr %call1, null
  br i1 %cmp, label %if.then2, label %do.end10

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  %dev6 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev6, ptr noundef nonnull @.str.253) #17
  br label %cleanup94

do.end10:                                         ; preds = %if.end
  %dev11 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev11, ptr noundef nonnull @.str.256) #17
  %add.ptr12 = getelementptr i8, ptr %call1, i32 81920
  %partition_id = getelementptr i8, ptr %call1, i32 65537
  %0 = tail call i8 asm sideeffect "ldrb $0, $1", "=r,*Qo"(ptr elementtype(i8) %partition_id) #14, !srcloc !1894
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1902
  %ep_map = getelementptr i8, ptr %call1, i32 65540
  %1 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %ep_map) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1903
  %add.ptr16 = getelementptr i8, ptr %call1, i32 65572
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr16) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1903
  %3 = zext i32 %2 to i64
  %4 = zext i32 %1 to i64
  %5 = shl nuw i64 %4, 32
  %6 = or i64 %5, %3
  %7 = tail call i64 @llvm.bswap.i64(i64 %6)
  %sh_prom = zext i8 %0 to i64
  %shl20 = shl nuw i64 1, %sh_prom
  %neg = xor i64 %shl20, -1
  %and = and i64 %7, %neg
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %do.end10
  %pp.0143 = phi i32 [ 0, %do.end10 ], [ %inc92, %cleanup.for.body_crit_edge ]
  %sh_prom23 = zext i32 %pp.0143 to i64
  %shl24 = shl nuw i64 1, %sh_prom23
  %and25 = and i64 %and, %shl24
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25)
  %tobool26.not = icmp eq i64 %and25, 0
  br i1 %tobool26.not, label %for.body.cleanup_crit_edge, label %do.body29

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body29:                                        ; preds = %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @quirk_switchtec_ntb_dma_alias.__UNIQUE_ID_ddebug294, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@quirk_switchtec_ntb_dma_alias, %do.end39)) #14
          to label %if.then35 [label %do.end39], !srcloc !1904

if.then35:                                        ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @quirk_switchtec_ntb_dma_alias.__UNIQUE_ID_ddebug294, ptr noundef %dev11, ptr noundef nonnull @.str.259, i32 noundef %pp.0143) #14
  br label %do.end39

do.end39:                                         ; preds = %if.then35, %do.body29
  %arrayidx = getelementptr %struct.ntb_ctrl_regs, ptr %add.ptr12, i32 %pp.0143
  %req_id_table_size = getelementptr inbounds %struct.ntb_ctrl_regs, ptr %arrayidx, i32 0, i32 8
  %8 = tail call i16 asm sideeffect "ldrh $0, $1", "=r,*Q"(ptr elementtype(i16) %req_id_table_size) #14, !srcloc !1883
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1905
  %conv41 = zext i16 %9 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool42.not = icmp eq i16 %8, 0
  br i1 %tobool42.not, label %do.end46, label %if.end48

do.end46:                                         ; preds = %do.end39
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev11, ptr noundef nonnull @.str.261, i32 noundef %pp.0143) #17
  br label %cleanup

if.end48:                                         ; preds = %do.end39
  call void @__sanitizer_cov_trace_const_cmp2(i16 512, i16 %9)
  %cmp49 = icmp ugt i16 %9, 512
  br i1 %cmp49, label %do.end54, label %for.body60.lr.ph

for.body60.lr.ph:                                 ; preds = %if.end48
  %req_id_table = getelementptr inbounds %struct.ntb_ctrl_regs, ptr %arrayidx, i32 0, i32 15
  %umax = call i32 @llvm.umax.i32(i32 %conv41, i32 1)
  br label %for.body60

do.end54:                                         ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev11, ptr noundef nonnull @.str.264, i32 noundef %pp.0143, i32 noundef %conv41) #17
  br label %cleanup

for.body60:                                       ; preds = %do.end88.for.body60_crit_edge, %for.body60.lr.ph
  %te.0142 = phi i32 [ 0, %for.body60.lr.ph ], [ %inc, %do.end88.for.body60_crit_edge ]
  %arrayidx61 = getelementptr [512 x i32], ptr %req_id_table, i32 0, i32 %te.0142
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %arrayidx61) #14, !srcloc !1890
  %11 = tail call i32 @llvm.bswap.i32(i32 %10) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1903
  %shr = lshr i32 %11, 1
  %conv64 = trunc i32 %shr to i8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @quirk_switchtec_ntb_dma_alias.__UNIQUE_ID_ddebug295, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@quirk_switchtec_ntb_dma_alias, %do.end88)) #14
          to label %if.then79 [label %do.end88], !srcloc !1904

if.then79:                                        ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #16
  %12 = lshr i32 %11, 4
  %and83 = and i32 %12, 31
  %and85 = and i32 %shr, 7
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @quirk_switchtec_ntb_dma_alias.__UNIQUE_ID_ddebug295, ptr noundef %dev11, ptr noundef nonnull @.str.266, i32 noundef %pp.0143, i32 noundef %and83, i32 noundef %and85) #14
  br label %do.end88

do.end88:                                         ; preds = %if.then79, %for.body60
  tail call void @pci_add_dma_alias(ptr noundef %pdev, i8 noundef zeroext %conv64, i32 noundef 1) #14
  %inc = add nuw nsw i32 %te.0142, 1
  %exitcond.not = icmp eq i32 %inc, %umax
  br i1 %exitcond.not, label %do.end88.cleanup_crit_edge, label %do.end88.for.body60_crit_edge

do.end88.for.body60_crit_edge:                    ; preds = %do.end88
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body60

do.end88.cleanup_crit_edge:                       ; preds = %do.end88
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %do.end88.cleanup_crit_edge, %do.end54, %do.end46, %for.body.cleanup_crit_edge
  %inc92 = add nuw nsw i32 %pp.0143, 1
  %exitcond147.not = icmp eq i32 %inc92, 64
  br i1 %exitcond147.not, label %for.end93, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end93:                                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @pci_iounmap(ptr noundef %pdev, ptr noundef nonnull %call1) #14
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  br label %cleanup94

cleanup94:                                        ; preds = %for.end93, %if.then2, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_plx_ntb_dma_alias(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.267) #17
  tail call void @pci_add_dma_alias(ptr noundef %pdev, i8 noundef zeroext 0, i32 noundef 256) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @quirk_reset_lenovo_thinkpad_p50_nvgpu(ptr noundef %pdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 9
  %0 = ptrtoint ptr %subsystem_vendor to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %subsystem_vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6058, i16 %1)
  %cmp.not = icmp eq i16 %1, 6058
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %subsystem_device = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 10
  %2 = ptrtoint ptr %subsystem_device to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %subsystem_device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 8750, i16 %3)
  %cmp3.not = icmp eq i16 %3, 8750
  br i1 %cmp3.not, label %lor.lhs.false5, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %call = tail call zeroext i1 @pci_reset_supported(ptr noundef %pdev) #14
  br i1 %call, label %if.end, label %lor.lhs.false5.cleanup_crit_edge

lor.lhs.false5.cleanup_crit_edge:                 ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false5
  %call6 = tail call i32 @pci_enable_device_mem(ptr noundef %pdev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %call9 = tail call ptr @pci_iomap(ptr noundef %pdev, i32 noundef 0, i32 noundef 143360) #14
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %do.end, label %if.end12

do.end:                                           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.269) #17
  br label %out_disable

if.end12:                                         ; preds = %if.end8
  %add.ptr = getelementptr i8, ptr %call9, i32 140300
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1903
  %5 = and i32 %4, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool14.not = icmp eq i32 %5, 0
  br i1 %tobool14.not, label %if.end12.if.end29_crit_edge, label %do.end18

if.end12.if.end29_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

do.end18:                                         ; preds = %if.end12
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev19, ptr noundef nonnull @.str.272) #17
  %call20 = tail call i32 @pci_reset_bus(ptr noundef %pdev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %cmp21 = icmp slt i32 %call20, 0
  br i1 %cmp21, label %do.end26, label %do.end18.if.end29_crit_edge

do.end18.if.end29_crit_edge:                      ; preds = %do.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

do.end26:                                         ; preds = %do.end18
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev19, ptr noundef nonnull @.str.275, i32 noundef %call20) #17
  br label %if.end29

if.end29:                                         ; preds = %do.end26, %do.end18.if.end29_crit_edge, %if.end12.if.end29_crit_edge
  tail call void @iounmap(ptr noundef nonnull %call9) #14
  br label %out_disable

out_disable:                                      ; preds = %if.end29, %do.end
  tail call void @pci_disable_device(ptr noundef %pdev) #14
  br label %cleanup

cleanup:                                          ; preds = %out_disable, %if.end.cleanup_crit_edge, %lor.lhs.false5.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pci_fixup_no_d0_pme(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.277) #17
  %pme_support = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %0 = ptrtoint ptr %pme_support to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %pme_support, align 2
  %bf.set = and i32 %bf.load, -134217729
  store i32 %bf.set, ptr %pme_support, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pci_fixup_no_msi_no_pme(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.279) #17
  %no_msi = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %no_msi to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %no_msi, align 1
  %bf.set = or i40 %bf.load, 8589934592
  store i40 %bf.set, ptr %no_msi, align 1
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.282) #17
  %pme_support = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 33
  %1 = ptrtoint ptr %pme_support to i32
  call void @__asan_loadN_noabort(i32 %1, i32 4)
  %bf.load5 = load i32, ptr %pme_support, align 2
  %bf.clear6 = and i32 %bf.load5, 134217727
  store i32 %bf.clear6, ptr %pme_support, align 2
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @apex_pci_fixup_class(ptr nocapture noundef %pdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %class = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 11
  %0 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %class, align 8
  %or = or i32 %1, 557056
  store i32 %or, ptr %class, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pci_fixup_pericom_acs_store_forward(ptr noundef %pdev) #0 align 64 {
entry:
  %val = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %val) #14
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %val, align 2, !annotation !1882
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 25
  %1 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %3 = and i16 %2, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 96, i16 %3)
  %cmp.not = icmp eq i16 %3, 96
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %acs_cap = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 77
  %4 = ptrtoint ptr %acs_cap to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %acs_cap, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not = icmp eq i16 %5, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %conv = zext i16 %5 to i32
  %add = add nuw nsw i32 %conv, 6
  %call4 = call i32 @pci_read_config_word(ptr noundef %pdev, i32 noundef %add, ptr noundef nonnull %val) #14
  %6 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %val, align 2
  %8 = and i16 %7, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool6.not = icmp eq i16 %8, 0
  br i1 %tobool6.not, label %if.end2.cleanup_crit_edge, label %if.end8

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end2
  %is_virtfn.i.i = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 49
  %9 = ptrtoint ptr %is_virtfn.i.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 5)
  %bf.load.i.i = load i40, ptr %is_virtfn.i.i, align 1
  %10 = and i40 %bf.load.i.i, 65536
  %tobool.not.i.i = icmp eq i40 %10, 0
  br i1 %tobool.not.i.i, label %if.end8.pci_physfn.exit.i_crit_edge, label %if.then.i.i

if.end8.pci_physfn.exit.i_crit_edge:              ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_physfn.exit.i

if.then.i.i:                                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %11 = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 66
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 8
  br label %pci_physfn.exit.i

pci_physfn.exit.i:                                ; preds = %if.then.i.i, %if.end8.pci_physfn.exit.i_crit_edge
  %dev.addr.0.i.i = phi ptr [ %13, %if.then.i.i ], [ %pdev, %if.end8.pci_physfn.exit.i_crit_edge ]
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bus.i, align 8
  %parent.i.i = getelementptr inbounds %struct.pci_bus, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i5.i = icmp eq ptr %17, null
  br i1 %tobool.not.i5.i, label %pci_physfn.exit.i.cleanup_crit_edge, label %pci_upstream_bridge.exit

pci_physfn.exit.i.cleanup_crit_edge:              ; preds = %pci_physfn.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

pci_upstream_bridge.exit:                         ; preds = %pci_physfn.exit.i
  %self.i = getelementptr inbounds %struct.pci_bus, ptr %15, i32 0, i32 4
  %18 = ptrtoint ptr %self.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %self.i, align 4
  %tobool10.not = icmp eq ptr %19, null
  br i1 %tobool10.not, label %pci_upstream_bridge.exit.cleanup_crit_edge, label %if.end12

pci_upstream_bridge.exit.cleanup_crit_edge:       ; preds = %pci_upstream_bridge.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end12:                                         ; preds = %pci_upstream_bridge.exit
  %call13 = call i32 @pci_read_config_word(ptr noundef nonnull %19, i32 noundef 116, ptr noundef nonnull %val) #14
  %20 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %val, align 2
  %22 = and i16 %21, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool16.not = icmp eq i16 %22, 0
  br i1 %tobool16.not, label %do.end, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.284) #17
  %23 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %val, align 2
  %25 = or i16 %24, 1
  %call20 = call i32 @pci_write_config_word(ptr noundef nonnull %19, i32 noundef 116, i16 noundef zeroext %25) #14
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end12.cleanup_crit_edge, %pci_upstream_bridge.exit.cleanup_crit_edge, %pci_physfn.exit.i.cleanup_crit_edge, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %val) #14
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @nvidia_ion_ahci_fixup(ptr nocapture noundef %pdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 50
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %dev_flags, align 2
  %2 = or i16 %1, 4096
  store i16 %2, ptr %dev_flags, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rom_bar_overlap_defect(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1, ptr noundef nonnull @.str.286) #17
  %rom_bar_overlap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %0 = ptrtoint ptr %rom_bar_overlap to i32
  call void @__asan_loadN_noabort(i32 %0, i32 5)
  %bf.load = load i40, ptr %rom_bar_overlap, align 1
  %bf.set = or i40 %bf.load, 4
  store i40 %bf.set, ptr %rom_bar_overlap, align 1
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #9

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_get_device(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_byte(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_config_byte(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_dword(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_dev_put(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pcibios_bus_to_resource(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__request_region(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @quirk_io_region(ptr noundef %dev, i32 noundef %port, i32 noundef %size, i32 noundef %nr, ptr noundef %name) unnamed_addr #0 align 64 {
entry:
  %region = alloca i16, align 2
  %bus_region = alloca %struct.pci_bus_region, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %region) #14
  %0 = ptrtoint ptr %region to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %region, align 2, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bus_region) #14
  %1 = getelementptr inbounds %struct.pci_bus_region, ptr %bus_region, i32 0, i32 1
  %resource = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47
  %add.ptr = getelementptr %struct.resource, ptr %resource, i32 %nr
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %port, ptr noundef nonnull %region) #14
  %2 = ptrtoint ptr %region to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %region, align 2
  %4 = trunc i32 %size to i16
  %5 = sub i16 0, %4
  %conv1 = and i16 %3, %5
  store i16 %conv1, ptr %region, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv1)
  %tobool.not = icmp eq i16 %conv1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %init_name.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44, i32 3
  %6 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.end.pci_name.exit_crit_edge

if.end.pci_name.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_name.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %8 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev.i, align 4
  br label %pci_name.exit

pci_name.exit:                                    ; preds = %if.end.i.i, %if.end.pci_name.exit_crit_edge
  %retval.0.i.i = phi ptr [ %9, %if.end.i.i ], [ %7, %if.end.pci_name.exit_crit_edge ]
  %name3 = getelementptr %struct.resource, ptr %resource, i32 %nr, i32 2
  %10 = ptrtoint ptr %name3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %retval.0.i.i, ptr %name3, align 4
  %flags = getelementptr %struct.resource, ptr %resource, i32 %nr, i32 3
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 256, ptr %flags, align 4
  %conv4 = zext i16 %conv1 to i32
  %12 = ptrtoint ptr %bus_region to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %conv4, ptr %bus_region, align 4
  %add = add i32 %size, -1
  %sub6 = add i32 %add, %conv4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub6, ptr %1, align 4
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %14 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bus, align 8
  call void @pcibios_bus_to_resource(ptr noundef %15, ptr noundef %add.ptr, ptr noundef nonnull %bus_region) #14
  %call7 = call i32 @pci_claim_resource(ptr noundef %dev, i32 noundef %nr) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %do.end, label %pci_name.exit.cleanup_crit_edge

pci_name.exit.cleanup_crit_edge:                  ; preds = %pci_name.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %pci_name.exit
  call void @__sanitizer_cov_trace_pc() #16
  %dev10 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev10, ptr noundef nonnull @.str.48, ptr noundef %add.ptr, ptr noundef %name) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end, %pci_name.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bus_region) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %region) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_claim_resource(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_config_dword(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap(i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @iounmap(ptr noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_create_managed_software_node(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_disable_link_state(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_get_readrq(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_set_readrq(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_no_msi() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_get_slot(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @msi_ht_cap_enabled(ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  %flags = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i8 @pci_find_ht_capability(ptr noundef %dev, i32 noundef 168) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call)
  %tobool.not25 = icmp eq i8 %call, 0
  br i1 %tobool.not25, label %entry.cleanup14_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.cleanup14_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup14

land.rhs:                                         ; preds = %cleanup.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %ttl.027 = phi i32 [ %dec, %cleanup.land.rhs_crit_edge ], [ 48, %entry.land.rhs_crit_edge ]
  %pos.0.in26 = phi i8 [ %call12, %cleanup.land.rhs_crit_edge ], [ %call, %entry.land.rhs_crit_edge ]
  %dec = add nsw i32 %ttl.027, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ttl.027)
  %tobool1.not = icmp eq i32 %ttl.027, 0
  br i1 %tobool1.not, label %land.rhs.cleanup14_crit_edge, label %while.body

land.rhs.cleanup14_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup14

while.body:                                       ; preds = %land.rhs
  %pos.028 = zext i8 %pos.0.in26 to i32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %flags) #14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %flags, align 1, !annotation !1882
  %add = add nuw nsw i32 %pos.028, 2
  %call2 = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %flags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %dev4 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %flags, align 1
  %3 = and i8 %2, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool6.not = icmp eq i8 %3, 0
  %cond = select i1 %tobool6.not, ptr @.str.157, ptr @.str.156
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev4, ptr noundef nonnull @.str.154, ptr noundef nonnull %cond) #17
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %flags, align 1
  %6 = and i8 %5, 1
  %7 = zext i8 %6 to i32
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags) #14
  br label %cleanup14

cleanup:                                          ; preds = %while.body
  %call12 = call zeroext i8 @pci_find_next_ht_capability(ptr noundef %dev, i8 noundef zeroext %pos.0.in26, i32 noundef 168) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags) #14
  %tobool.not = icmp eq i8 %call12, 0
  br i1 %tobool.not, label %cleanup.cleanup14_crit_edge, label %cleanup.land.rhs_crit_edge

cleanup.land.rhs_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs

cleanup.cleanup14_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup14

cleanup14:                                        ; preds = %cleanup.cleanup14_crit_edge, %cleanup.thread, %land.rhs.cleanup14_crit_edge, %entry.cleanup14_crit_edge
  %retval.2 = phi i32 [ %7, %cleanup.thread ], [ 0, %entry.cleanup14_crit_edge ], [ 0, %land.rhs.cleanup14_crit_edge ], [ 0, %cleanup.cleanup14_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @pci_find_ht_capability(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @pci_find_next_ht_capability(ptr noundef, i8 noundef zeroext, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @pci_find_capability(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__nv_msi_ht_cap_quirk(ptr noundef %dev, i32 noundef %all) unnamed_addr #0 align 64 {
entry:
  %flags.i41 = alloca i8, align 1
  %flags.i.i.i = alloca i8, align 1
  %flags.i.i = alloca i16, align 2
  %ctrl.i.i = alloca i16, align 2
  %flags.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pci_msi_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call zeroext i8 @pci_find_ht_capability(ptr noundef %dev, i32 noundef 168) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call.i)
  %tobool.not34.i = icmp eq i8 %call.i, 0
  br i1 %tobool.not34.i, label %if.end.cleanup_crit_edge, label %if.end.while.body.i_crit_edge

if.end.while.body.i_crit_edge:                    ; preds = %if.end
  br label %while.body.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %if.end.while.body.i_crit_edge
  %dec.i64 = phi i32 [ %dec.i, %cleanup.i.while.body.i_crit_edge ], [ 47, %if.end.while.body.i_crit_edge ]
  %pos.0.in35.i63 = phi i8 [ %call17.i, %cleanup.i.while.body.i_crit_edge ], [ %call.i, %if.end.while.body.i_crit_edge ]
  %pos.038.i = zext i8 %pos.0.in35.i63 to i32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %flags.i) #14
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %flags.i, align 1, !annotation !1882
  %add.i = add nuw nsw i32 %pos.038.i, 2
  %call3.i = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef %add.i, ptr noundef nonnull %flags.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %cmp4.i = icmp eq i32 %call3.i, 0
  br i1 %cmp4.i, label %if.then6.i, label %while.body.i.cleanup.i_crit_edge

while.body.i.cleanup.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

if.then6.i:                                       ; preds = %while.body.i
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %flags.i, align 1
  %3 = and i8 %2, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool8.not.not.i = icmp eq i8 %3, 0
  br i1 %tobool8.not.not.i, label %if.then6.i.cleanup.i_crit_edge, label %cleanup.thread.i

if.then6.i.cleanup.i_crit_edge:                   ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i

cleanup.thread.i:                                 ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags.i) #14
  br label %if.end3

cleanup.i:                                        ; preds = %if.then6.i.cleanup.i_crit_edge, %while.body.i.cleanup.i_crit_edge
  %call17.i = call zeroext i8 @pci_find_next_ht_capability(ptr noundef %dev, i8 noundef zeroext %pos.0.in35.i63, i32 noundef 168) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags.i) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call17.i)
  %tobool.not.i = icmp eq i8 %call17.i, 0
  %dec.i = add nsw i32 %dec.i64, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i64)
  %tobool1.not.i = icmp eq i32 %dec.i64, 0
  %or.cond = select i1 %tobool.not.i, i1 true, i1 %tobool1.not.i
  br i1 %or.cond, label %cleanup.i.if.end3_crit_edge, label %cleanup.i.while.body.i_crit_edge

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

cleanup.i.if.end3_crit_edge:                      ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.end3:                                          ; preds = %cleanup.i.if.end3_crit_edge, %cleanup.thread.i
  %cmp14 = phi i1 [ false, %cleanup.thread.i ], [ true, %cleanup.i.if.end3_crit_edge ]
  %bus = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %4 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bus, align 8
  %domain_nr.i = getelementptr inbounds %struct.pci_bus, ptr %5, i32 0, i32 16
  %6 = ptrtoint ptr %domain_nr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %domain_nr.i, align 8
  %call5 = call ptr @pci_get_domain_bus_and_slot(i32 noundef %7, i32 noundef 0, i32 noundef 0) #14
  %cmp6 = icmp eq ptr %call5, null
  br i1 %cmp6, label %do.end, label %if.end9

do.end:                                           ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev8, ptr noundef nonnull @.str.166) #17
  br label %cleanup

if.end9:                                          ; preds = %if.end3
  %call10 = call zeroext i8 @pci_find_ht_capability(ptr noundef nonnull %call5, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call10)
  %cmp11.not = icmp eq i8 %call10, 0
  br i1 %cmp11.not, label %if.end21, label %if.then13

if.then13:                                        ; preds = %if.end9
  br i1 %cmp14, label %if.then16, label %if.then13.out_crit_edge

if.then13.out_crit_edge:                          ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.then16:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %all)
  %tobool17.not = icmp eq i32 %all, 0
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #16
  call void @ht_enable_msi_mapping(ptr noundef %dev)
  br label %out

if.else:                                          ; preds = %if.then16
  %devfn.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 6
  %8 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %devfn.i, align 4
  %shr.i = lshr i32 %9, 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.else
  %i.054.i = phi i32 [ %shr.i, %if.else ], [ %dec.i39, %for.inc.i.for.body.i_crit_edge ]
  %10 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bus, align 8
  %and.i = shl i32 %i.054.i, 3
  %shl.i = and i32 %and.i, 248
  %call.i37 = call ptr @pci_get_slot(ptr noundef %11, i32 noundef %shl.i) #14
  %tobool.not.i38 = icmp eq ptr %call.i37, null
  br i1 %tobool.not.i38, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %call1.i = call zeroext i8 @pci_find_ht_capability(ptr noundef nonnull %call.i37, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call1.i)
  %cmp2.not.i = icmp eq i8 %call1.i, 0
  br i1 %cmp2.not.i, label %if.end5.i, label %if.end8.i

if.end5.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @pci_dev_put(ptr noundef nonnull %call.i37) #14
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end5.i, %for.body.i.for.inc.i_crit_edge
  %dec.i39 = add nsw i32 %i.054.i, -1
  %cmp.i = icmp sgt i32 %i.054.i, 0
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.out_crit_edge

for.inc.i.out_crit_edge:                          ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

if.end8.i:                                        ; preds = %if.end.i
  %cmp9.i = icmp eq ptr %call.i37, %dev
  br i1 %cmp9.i, label %land.lhs.true.i, label %if.end8.i.if.end17.i_crit_edge

if.end8.i.if.end17.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

land.lhs.true.i:                                  ; preds = %if.end8.i
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %flags.i.i) #14
  %12 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 -1, ptr %flags.i.i, align 2, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctrl.i.i) #14
  %13 = ptrtoint ptr %ctrl.i.i to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 -1, ptr %ctrl.i.i, align 2, !annotation !1882
  %call.i.i = call zeroext i8 @pci_find_ht_capability(ptr noundef nonnull %dev, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call.i.i)
  %tobool.not.i.i = icmp eq i8 %call.i.i, 0
  br i1 %tobool.not.i.i, label %is_end_of_ht_chain.exit.thread.i, label %is_end_of_ht_chain.exit.i

is_end_of_ht_chain.exit.thread.i:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl.i.i) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %flags.i.i) #14
  br label %if.end17.i

is_end_of_ht_chain.exit.i:                        ; preds = %land.lhs.true.i
  %conv.i.i = zext i8 %call.i.i to i32
  %add.i.i = add nuw nsw i32 %conv.i.i, 2
  %call1.i.i = call i32 @pci_read_config_word(ptr noundef nonnull %dev, i32 noundef %add.i.i, ptr noundef nonnull %flags.i.i) #14
  %14 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %flags.i.i, align 2
  %16 = and i16 %15, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %tobool3.not.i.i = icmp eq i16 %16, 0
  %cond.i.i = select i1 %tobool3.not.i.i, i32 8, i32 4
  %add4.i.i = add nuw nsw i32 %cond.i.i, %conv.i.i
  %call5.i.i = call i32 @pci_read_config_word(ptr noundef nonnull %dev, i32 noundef %add4.i.i, ptr noundef nonnull %ctrl.i.i) #14
  %17 = ptrtoint ptr %ctrl.i.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %ctrl.i.i, align 2
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctrl.i.i) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %flags.i.i) #14
  %19 = and i16 %18, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool12.not.i = icmp eq i16 %19, 0
  br i1 %tobool12.not.i, label %is_end_of_ht_chain.exit.i.if.end17.i_crit_edge, label %land.lhs.true13.i

is_end_of_ht_chain.exit.i.if.end17.i_crit_edge:   ; preds = %is_end_of_ht_chain.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

land.lhs.true13.i:                                ; preds = %is_end_of_ht_chain.exit.i
  %20 = ptrtoint ptr %devfn.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %devfn.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 248, i32 %21)
  %cmp33.i.i = icmp ult i32 %21, 248
  br i1 %cmp33.i.i, label %for.body.lr.ph.i.i, label %land.lhs.true13.i.if.end17.i_crit_edge

land.lhs.true13.i.if.end17.i_crit_edge:           ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

for.body.lr.ph.i.i:                               ; preds = %land.lhs.true13.i
  %shr.i.i = lshr i32 %21, 3
  %umax.i = call i32 @llvm.umax.i32(i32 %shr.i.i, i32 30) #14
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.034.in.i.i = phi i32 [ %shr.i.i, %for.body.lr.ph.i.i ], [ %i.034.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %i.034.i.i = add nuw nsw i32 %i.034.in.i.i, 1
  %22 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %bus, align 8
  %and.i.i = shl i32 %i.034.i.i, 3
  %shl.i.i = and i32 %and.i.i, 248
  %call.i38.i = call ptr @pci_get_slot(ptr noundef %23, i32 noundef %shl.i.i) #14
  %tobool.not.i39.i = icmp eq ptr %call.i38.i, null
  br i1 %tobool.not.i39.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.end.i41.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

if.end.i41.i:                                     ; preds = %for.body.i.i
  %call1.i40.i = call zeroext i8 @pci_find_ht_capability(ptr noundef nonnull %call.i38.i, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call1.i40.i)
  %cmp2.not.i.i = icmp eq i8 %call1.i40.i, 0
  br i1 %cmp2.not.i.i, label %if.end5.i.i, label %host_bridge_with_leaf.exit.i

if.end5.i.i:                                      ; preds = %if.end.i41.i
  %call.i.i.i = call zeroext i8 @pci_find_ht_capability(ptr noundef nonnull %call.i38.i, i32 noundef 168) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call.i.i.i)
  %tobool.not34.i.i.i = icmp eq i8 %call.i.i.i, 0
  br i1 %tobool.not34.i.i.i, label %if.end9.i.i, label %if.end5.i.i.while.body.i.i.i_crit_edge

if.end5.i.i.while.body.i.i.i_crit_edge:           ; preds = %if.end5.i.i
  br label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %cleanup.i.i.i.while.body.i.i.i_crit_edge, %if.end5.i.i.while.body.i.i.i_crit_edge
  %dec.i31.i.i = phi i32 [ %dec.i.i.i, %cleanup.i.i.i.while.body.i.i.i_crit_edge ], [ 47, %if.end5.i.i.while.body.i.i.i_crit_edge ]
  %pos.0.in35.i30.i.i = phi i8 [ %call17.i.i.i, %cleanup.i.i.i.while.body.i.i.i_crit_edge ], [ %call.i.i.i, %if.end5.i.i.while.body.i.i.i_crit_edge ]
  %pos.038.i.i.i = zext i8 %pos.0.in35.i30.i.i to i32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %flags.i.i.i) #14
  %24 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 -1, ptr %flags.i.i.i, align 1, !annotation !1882
  %add.i.i.i = add nuw nsw i32 %pos.038.i.i.i, 2
  %call3.i.i.i = call i32 @pci_read_config_byte(ptr noundef nonnull %call.i38.i, i32 noundef %add.i.i.i, ptr noundef nonnull %flags.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i.i)
  %cmp4.i.i.i = icmp eq i32 %call3.i.i.i, 0
  br i1 %cmp4.i.i.i, label %if.then6.i.i.i, label %while.body.i.i.i.cleanup.i.i.i_crit_edge

while.body.i.i.i.cleanup.i.i.i_crit_edge:         ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i.i.i

if.then6.i.i.i:                                   ; preds = %while.body.i.i.i
  %25 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %flags.i.i.i, align 1
  %27 = and i8 %26, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool8.not.not.i.i.i = icmp eq i8 %27, 0
  br i1 %tobool8.not.not.i.i.i, label %if.then6.i.i.i.cleanup.i.i.i_crit_edge, label %cleanup.thread.i.i.i

if.then6.i.i.i.cleanup.i.i.i_crit_edge:           ; preds = %if.then6.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i.i.i

cleanup.thread.i.i.i:                             ; preds = %if.then6.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags.i.i.i) #14
  br label %host_bridge_with_leaf.exit.thread49.i

cleanup.i.i.i:                                    ; preds = %if.then6.i.i.i.cleanup.i.i.i_crit_edge, %while.body.i.i.i.cleanup.i.i.i_crit_edge
  %call17.i.i.i = call zeroext i8 @pci_find_next_ht_capability(ptr noundef nonnull %call.i38.i, i8 noundef zeroext %pos.0.in35.i30.i.i, i32 noundef 168) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call17.i.i.i)
  %tobool.not.i.i.i = icmp eq i8 %call17.i.i.i, 0
  %dec.i.i.i = add nsw i32 %dec.i31.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i31.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %dec.i31.i.i, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool1.not.i.i.i
  br i1 %or.cond.i.i, label %cleanup.i.i.i.host_bridge_with_leaf.exit.thread49.i_crit_edge, label %cleanup.i.i.i.while.body.i.i.i_crit_edge

cleanup.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %cleanup.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

cleanup.i.i.i.host_bridge_with_leaf.exit.thread49.i_crit_edge: ; preds = %cleanup.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %host_bridge_with_leaf.exit.thread49.i

if.end9.i.i:                                      ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @pci_dev_put(ptr noundef nonnull %call.i38.i) #14
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end9.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %exitcond.not.i = icmp eq i32 %i.034.in.i.i, %umax.i
  br i1 %exitcond.not.i, label %for.inc.i.i.if.end17.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.inc.i.i.if.end17.i_crit_edge:                 ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

host_bridge_with_leaf.exit.thread49.i:            ; preds = %cleanup.i.i.i.host_bridge_with_leaf.exit.thread49.i_crit_edge, %cleanup.thread.i.i.i
  call void @pci_dev_put(ptr noundef nonnull %call.i38.i) #14
  br label %out.i

host_bridge_with_leaf.exit.i:                     ; preds = %if.end.i41.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @pci_dev_put(ptr noundef nonnull %call.i38.i) #14
  br label %if.end17.i

if.end17.i:                                       ; preds = %host_bridge_with_leaf.exit.i, %for.inc.i.i.if.end17.i_crit_edge, %land.lhs.true13.i.if.end17.i_crit_edge, %is_end_of_ht_chain.exit.i.if.end17.i_crit_edge, %is_end_of_ht_chain.exit.thread.i, %if.end8.i.if.end17.i_crit_edge
  %call18.i = call fastcc i32 @msi_ht_cap_enabled(ptr noundef nonnull %call.i37) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i)
  %tobool19.not.i = icmp eq i32 %call18.i, 0
  br i1 %tobool19.not.i, label %if.end21.i, label %if.end17.i.out.i_crit_edge

if.end17.i.out.i_crit_edge:                       ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.i

if.end21.i:                                       ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @ht_enable_msi_mapping(ptr noundef %dev) #14
  br label %out.i

out.i:                                            ; preds = %if.end21.i, %if.end17.i.out.i_crit_edge, %host_bridge_with_leaf.exit.thread49.i
  call void @pci_dev_put(ptr noundef nonnull %call.i37) #14
  br label %out

if.end21:                                         ; preds = %if.end9
  br i1 %cmp14, label %if.end21.out_crit_edge, label %if.end25

if.end21.out_crit_edge:                           ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end25:                                         ; preds = %if.end21
  %call.i42 = call zeroext i8 @pci_find_ht_capability(ptr noundef %dev, i32 noundef 168) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call.i42)
  %tobool.not20.i = icmp eq i8 %call.i42, 0
  br i1 %tobool.not20.i, label %if.end25.out_crit_edge, label %land.rhs.lr.ph.i

if.end25.out_crit_edge:                           ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

land.rhs.lr.ph.i:                                 ; preds = %if.end25
  %dev4.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  br label %land.rhs.i45

land.rhs.i45:                                     ; preds = %if.end.i50.land.rhs.i45_crit_edge, %land.rhs.lr.ph.i
  %ttl.022.i = phi i32 [ 48, %land.rhs.lr.ph.i ], [ %dec.i43, %if.end.i50.land.rhs.i45_crit_edge ]
  %pos.0.in21.i = phi i8 [ %call.i42, %land.rhs.lr.ph.i ], [ %call10.i, %if.end.i50.land.rhs.i45_crit_edge ]
  %dec.i43 = add nsw i32 %ttl.022.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ttl.022.i)
  %tobool1.not.i44 = icmp eq i32 %ttl.022.i, 0
  br i1 %tobool1.not.i44, label %land.rhs.i45.out_crit_edge, label %while.body.i48

land.rhs.i45.out_crit_edge:                       ; preds = %land.rhs.i45
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.body.i48:                                   ; preds = %land.rhs.i45
  %pos.023.i = zext i8 %pos.0.in21.i to i32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %flags.i41) #14
  %28 = ptrtoint ptr %flags.i41 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 -1, ptr %flags.i41, align 1, !annotation !1882
  %add.i46 = add nuw nsw i32 %pos.023.i, 2
  %call2.i = call i32 @pci_read_config_byte(ptr noundef %dev, i32 noundef %add.i46, ptr noundef nonnull %flags.i41) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp.i47 = icmp eq i32 %call2.i, 0
  br i1 %cmp.i47, label %do.end.i, label %while.body.i48.if.end.i50_crit_edge

while.body.i48.if.end.i50_crit_edge:              ; preds = %while.body.i48
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i50

do.end.i:                                         ; preds = %while.body.i48
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev4.i, ptr noundef nonnull @.str.168) #17
  %29 = ptrtoint ptr %flags.i41 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %flags.i41, align 1
  %31 = and i8 %30, -2
  %call8.i = call i32 @pci_write_config_byte(ptr noundef %dev, i32 noundef %add.i46, i8 noundef zeroext %31) #14
  br label %if.end.i50

if.end.i50:                                       ; preds = %do.end.i, %while.body.i48.if.end.i50_crit_edge
  %call10.i = call zeroext i8 @pci_find_next_ht_capability(ptr noundef %dev, i8 noundef zeroext %pos.0.in21.i, i32 noundef 168) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags.i41) #14
  %tobool.not.i49 = icmp eq i8 %call10.i, 0
  br i1 %tobool.not.i49, label %if.end.i50.out_crit_edge, label %if.end.i50.land.rhs.i45_crit_edge

if.end.i50.land.rhs.i45_crit_edge:                ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i45

if.end.i50.out_crit_edge:                         ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

out:                                              ; preds = %if.end.i50.out_crit_edge, %land.rhs.i45.out_crit_edge, %if.end25.out_crit_edge, %if.end21.out_crit_edge, %out.i, %for.inc.i.out_crit_edge, %if.then18, %if.then13.out_crit_edge
  call void @pci_dev_put(ptr noundef nonnull %call5) #14
  br label %cleanup

cleanup:                                          ; preds = %out, %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_msi_enabled() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_get_domain_bus_and_slot(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_notice(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_iomap(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_iounmap(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device_mem(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_device(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @reset_intel_82599_sfp_virtfn(ptr noundef %dev, i1 noundef zeroext %probe) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %probe, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @pcie_flr(ptr noundef %dev) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @reset_ivb_igd(ptr noundef %dev, i1 noundef zeroext %probe) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %probe, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @pci_iomap(ptr noundef %dev, i32 noundef 0, i32 noundef 0) #14
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %add.ptr = getelementptr i8, ptr %call, i32 282640
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1906
  tail call void @arm_heavy_mb() #14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 33554432) #14, !srcloc !1893
  %add.ptr4 = getelementptr i8, ptr %call, i32 794628
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1906
  tail call void @arm_heavy_mb() #14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr4, i32 83886080) #14, !srcloc !1893
  %add.ptr5 = getelementptr i8, ptr %call, i32 815620
  %0 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1903
  %1 = and i32 %0, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1906
  tail call void @arm_heavy_mb() #14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr5, i32 %1) #14, !srcloc !1893
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  %add.ptr9 = getelementptr i8, ptr %call, i32 815616
  %add.neg = sub i32 -1000, %2
  br label %do.body

do.body:                                          ; preds = %if.end13.do.body_crit_edge, %if.end3
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr9) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1903
  %4 = and i32 %3, 176
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %do.body.reset_complete_crit_edge, label %if.end13

do.body.reset_complete_crit_edge:                 ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %reset_complete

if.end13:                                         ; preds = %do.body
  tail call void @msleep(i32 noundef 10) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %5 = load volatile i32, ptr @jiffies, align 128
  %sub = add i32 %add.neg, %5
  %cmp14 = icmp slt i32 %sub, 0
  br i1 %cmp14, label %if.end13.do.body_crit_edge, label %do.end17

if.end13.do.body_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

do.end17:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  %dev18 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev18, ptr noundef nonnull @.str.211) #17
  br label %reset_complete

reset_complete:                                   ; preds = %do.end17, %do.body.reset_complete_crit_edge
  %add.ptr19 = getelementptr i8, ptr %call, i32 852224
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1906
  tail call void @arm_heavy_mb() #14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr19, i32 33554432) #14, !srcloc !1893
  tail call void @pci_iounmap(ptr noundef %dev, ptr noundef nonnull %call) #14
  br label %cleanup

cleanup:                                          ; preds = %reset_complete, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %reset_complete ], [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nvme_disable_and_flr(ptr noundef %dev, i1 noundef zeroext %probe) unnamed_addr #0 align 64 {
entry:
  %cmd = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cmd) #14
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %cmd, align 2, !annotation !1882
  %class = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 11
  %1 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %class, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 67586, i32 %2)
  %cmp.not = icmp eq i32 %2, 67586
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup47_crit_edge

entry.cleanup47_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup47

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @pcie_reset_flr(ptr noundef %dev, i1 noundef zeroext true) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false1, label %lor.lhs.false.cleanup47_crit_edge

lor.lhs.false.cleanup47_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup47

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %resource = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 47
  %3 = ptrtoint ptr %resource to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %resource, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not = icmp eq i32 %4, 0
  %brmerge = or i1 %tobool2.not, %probe
  %.mux = select i1 %tobool2.not, i32 -25, i32 0
  br i1 %brmerge, label %lor.lhs.false1.cleanup47_crit_edge, label %if.end5

lor.lhs.false1.cleanup47_crit_edge:               ; preds = %lor.lhs.false1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup47

if.end5:                                          ; preds = %lor.lhs.false1
  %call6 = tail call ptr @pci_iomap(ptr noundef %dev, i32 noundef 0, i32 noundef 24) #14
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup47_crit_edge, label %if.end9

if.end5.cleanup47_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup47

if.end9:                                          ; preds = %if.end5
  %call10 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %cmd) #14
  %5 = ptrtoint ptr %cmd to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %cmd, align 2
  %7 = or i16 %6, 2
  %call12 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %7) #14
  %add.ptr = getelementptr i8, ptr %call6, i32 20
  %8 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !1890
  %9 = call i32 @llvm.bswap.i32(i32 %8)
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1907
  %and = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %if.end9.if.end45_crit_edge, label %if.then16

if.end9.if.end45_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end45

if.then16:                                        ; preds = %if.end9
  %10 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %call6) #14, !srcloc !1890
  %11 = and i32 %10, 255
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1908
  %and23 = and i32 %9, -49154
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1909
  call void @arm_heavy_mb() #14
  %12 = call i32 @llvm.bswap.i32(i32 %and23)
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %12) #14, !srcloc !1893
  %13 = mul nuw nsw i32 %11, 100
  %mul = add nuw nsw i32 %13, 100
  %div65 = lshr exact i32 %mul, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %14 = load volatile i32, ptr @jiffies, align 128
  %add26 = add i32 %14, %div65
  %add.ptr29 = getelementptr i8, ptr %call6, i32 28
  br label %for.cond

for.cond:                                         ; preds = %if.end36.for.cond_crit_edge, %if.then16
  %15 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr29) #14, !srcloc !1890
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1910
  %16 = and i32 %15, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool34.not = icmp eq i32 %16, 0
  br i1 %tobool34.not, label %for.cond.if.end45_crit_edge, label %if.end36

for.cond.if.end45_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end45

if.end36:                                         ; preds = %for.cond
  call void @msleep(i32 noundef 100) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %17 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add26, %17
  %cmp37 = icmp slt i32 %sub, 0
  br i1 %cmp37, label %do.end42, label %if.end36.for.cond_crit_edge

if.end36.for.cond_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond

do.end42:                                         ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  %dev43 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev43, ptr noundef nonnull @.str.213) #17
  br label %if.end45

if.end45:                                         ; preds = %do.end42, %for.cond.if.end45_crit_edge, %if.end9.if.end45_crit_edge
  call void @pci_iounmap(ptr noundef %dev, ptr noundef nonnull %call6) #14
  %call46 = call i32 @pcie_flr(ptr noundef %dev) #14
  br label %cleanup47

cleanup47:                                        ; preds = %if.end45, %if.end5.cleanup47_crit_edge, %lor.lhs.false1.cleanup47_crit_edge, %lor.lhs.false.cleanup47_crit_edge, %entry.cleanup47_crit_edge
  %retval.0 = phi i32 [ 0, %if.end45 ], [ %.mux, %lor.lhs.false1.cleanup47_crit_edge ], [ -25, %lor.lhs.false.cleanup47_crit_edge ], [ -25, %entry.cleanup47_crit_edge ], [ -25, %if.end5.cleanup47_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cmd) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @delay_250ms_after_flr(ptr noundef %dev, i1 noundef zeroext %probe) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %probe, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @pcie_reset_flr(ptr noundef %dev, i1 noundef zeroext true) #14
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1 = tail call i32 @pcie_reset_flr(ptr noundef %dev, i1 noundef zeroext false) #14
  tail call void @msleep(i32 noundef 250) #14
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @reset_chelsio_generic_dev(ptr noundef %dev, i1 noundef zeroext %probe) unnamed_addr #0 align 64 {
entry:
  %old_command = alloca i16, align 2
  %msix_flags = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %old_command) #14
  %0 = ptrtoint ptr %old_command to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %old_command, align 2, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %msix_flags) #14
  %1 = ptrtoint ptr %msix_flags to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %msix_flags, align 2, !annotation !1882
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %2 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %device, align 2
  %4 = and i16 %3, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %4)
  %cmp.not = icmp ne i16 %4, 16384
  %brmerge = or i1 %cmp.not, %probe
  %.mux = select i1 %cmp.not, i32 -25, i32 0
  br i1 %brmerge, label %entry.cleanup_crit_edge, label %if.end3

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %entry
  %call = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef 4, ptr noundef nonnull %old_command) #14
  %5 = ptrtoint ptr %old_command to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %old_command, align 2
  %7 = or i16 %6, 4
  %call6 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %7) #14
  %call7 = call i32 @pci_save_state(ptr noundef %dev) #14
  %msix_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 21
  %8 = ptrtoint ptr %msix_cap to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %msix_cap, align 2
  %conv8 = zext i8 %9 to i32
  %add = add nuw nsw i32 %conv8, 2
  %call9 = call i32 @pci_read_config_word(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %msix_flags) #14
  %10 = ptrtoint ptr %msix_flags to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %msix_flags, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %11)
  %cmp12 = icmp sgt i16 %11, -1
  br i1 %cmp12, label %if.then14, label %if.end3.if.end23_crit_edge

if.end3.if.end23_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then14:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %msix_cap to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %msix_cap, align 2
  %conv16 = zext i8 %13 to i32
  %add17 = add nuw nsw i32 %conv16, 2
  %or20 = or i16 %11, -16384
  %call22 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef %add17, i16 noundef zeroext %or20) #14
  br label %if.end23

if.end23:                                         ; preds = %if.then14, %if.end3.if.end23_crit_edge
  %call24 = call i32 @pcie_flr(ptr noundef %dev) #14
  call void @pci_restore_state(ptr noundef %dev) #14
  %14 = ptrtoint ptr %old_command to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %old_command, align 2
  %call25 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 4, i16 noundef zeroext %15) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end23 ], [ %.mux, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %msix_flags) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %old_command) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @reset_hinic_vf_dev(ptr noundef %pdev, i1 noundef zeroext %probe) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %probe, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @pci_iomap(ptr noundef %pdev, i32 noundef 0, i32 noundef 0) #14
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %add.ptr = getelementptr i8, ptr %call, i32 4096
  %0 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1911
  %and = and i32 %0, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %if.end3.cleanup.sink.split_crit_edge, label %if.end7

if.end3.cleanup.sink.split_crit_edge:             ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end7:                                          ; preds = %if.end3
  %add.ptr9 = getelementptr i8, ptr %call, i32 3712
  %1 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr9) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1912
  %or = or i32 %1, 262144
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1913
  tail call void @arm_heavy_mb() #14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr9, i32 %or) #14, !srcloc !1893
  %call13 = tail call i32 @pcie_flr(ptr noundef %pdev) #14
  %call14 = tail call i32 @pci_write_config_word(ptr noundef %pdev, i32 noundef 0, i16 noundef zeroext 0) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  %add.neg = sub i32 -1500, %2
  br label %do.body16

do.body16:                                        ; preds = %if.end24.do.body16_crit_edge, %if.end7
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr9) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1914
  %and21 = and i32 %3, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %do.body16.cleanup.sink.split_crit_edge, label %if.end24

do.body16.cleanup.sink.split_crit_edge:           ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end24:                                         ; preds = %do.body16
  tail call void @msleep(i32 noundef 20) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %sub = add i32 %add.neg, %4
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %if.end24.do.body16_crit_edge, label %do.end26

if.end24.do.body16_crit_edge:                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body16

do.end26:                                         ; preds = %if.end24
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr9) #14, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1915
  %and31 = and i32 %5, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %do.end26.cleanup.sink.split_crit_edge, label %do.end37

do.end26.cleanup.sink.split_crit_edge:            ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

do.end37:                                         ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #16
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.215, i32 noundef %5) #17
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %do.end37, %do.end26.cleanup.sink.split_crit_edge, %do.body16.cleanup.sink.split_crit_edge, %if.end3.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ -25, %if.end3.cleanup.sink.split_crit_edge ], [ 0, %do.end26.cleanup.sink.split_crit_edge ], [ 0, %do.end37 ], [ 0, %do.body16.cleanup.sink.split_crit_edge ]
  tail call void @pci_iounmap(ptr noundef %pdev, ptr noundef nonnull %call) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -25, %if.end.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_flr(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_reset_flr(ptr noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_save_state(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_state(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_add_dma_alias(ptr noundef, i8 noundef zeroext, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_match_id(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_clear_and_set_word(ptr noundef, i32 noundef, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #4

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_amd_sb_acs(ptr nocapture noundef readnone %dev, i16 noundef zeroext %acs_flags) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -19
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_mf_endpoint_acs(ptr nocapture noundef readnone %dev, i16 noundef zeroext %acs_flags) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and5.i = and i16 %acs_flags, 95
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  ret i32 %..i
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_rciep_acs(ptr nocapture noundef readonly %dev, i16 noundef zeroext %acs_flags) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %0 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %2 = and i16 %1, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 144, i16 %2)
  %cmp.not = icmp eq i16 %2, 144
  %and5.i = and i16 %acs_flags, 29
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  %retval.0 = select i1 %cmp.not, i32 %..i, i32 -25
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_qcom_rp_acs(ptr nocapture noundef readnone %dev, i16 noundef zeroext %acs_flags) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and5.i = and i16 %acs_flags, 29
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  ret i32 %..i
}

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_quirk_intel_pch_acs(ptr nocapture noundef readonly %dev, i16 noundef zeroext %acs_flags) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not.i = icmp eq i8 %1, 0
  br i1 %tobool.i.not.i, label %entry.return_crit_edge, label %lor.lhs.false.i

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

lor.lhs.false.i:                                  ; preds = %entry
  %pcie_flags_reg.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %2 = ptrtoint ptr %pcie_flags_reg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %pcie_flags_reg.i.i.i, align 2
  %4 = and i16 %3, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %4)
  %cmp.not.i = icmp eq i16 %4, 64
  br i1 %cmp.not.i, label %for.cond.preheader.i, label %lor.lhs.false.i.return_crit_edge

lor.lhs.false.i.return_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

for.cond.preheader.i:                             ; preds = %lor.lhs.false.i
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %5 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %device.i, align 2
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 119
  br i1 %exitcond.not.i, label %for.cond.i.return_crit_edge, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.cond.i.return_crit_edge:                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.cond.preheader.i
  %i.012.i = phi i32 [ 0, %for.cond.preheader.i ], [ %inc.i, %for.cond.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [119 x i16], ptr @pci_quirk_intel_pch_acs_ids, i32 0, i32 %i.012.i
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %arrayidx.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %6)
  %cmp4.i = icmp eq i16 %8, %6
  br i1 %cmp4.i, label %if.end, label %for.cond.i

if.end:                                           ; preds = %for.body.i
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %9 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %dev_flags, align 2
  %11 = and i16 %10, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not = icmp eq i16 %11, 0
  br i1 %tobool.not, label %if.end3, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %and5.i = and i16 %acs_flags, 29
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  br label %return

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %acs_flags)
  %cmp.i7 = icmp eq i16 %acs_flags, 0
  %..i8 = zext i1 %cmp.i7 to i32
  br label %return

return:                                           ; preds = %if.end3, %if.then1, %for.cond.i.return_crit_edge, %lor.lhs.false.i.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %..i, %if.then1 ], [ %..i8, %if.end3 ], [ -25, %lor.lhs.false.i.return_crit_edge ], [ -25, %entry.return_crit_edge ], [ -25, %for.cond.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pci_quirk_intel_spt_pch_acs(ptr noundef %dev, i16 noundef zeroext %acs_flags) #0 align 64 {
entry:
  %cap = alloca i32, align 4
  %ctrl = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cap) #14
  %0 = ptrtoint ptr %cap to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cap, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctrl) #14
  %1 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %ctrl, align 4, !annotation !1882
  %call = tail call fastcc zeroext i1 @pci_quirk_intel_spt_pch_acs_match(ptr noundef %dev)
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %acs_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 77
  %2 = ptrtoint ptr %acs_cap to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %acs_cap, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end2:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i16 %3 to i32
  %add = add nuw nsw i32 %conv, 4
  %call3 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %cap) #14
  %4 = ptrtoint ptr %cap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cap, align 4
  %6 = trunc i32 %5 to i16
  %7 = or i16 %6, 32
  %conv5 = and i16 %7, %acs_flags
  %add6 = add nuw nsw i32 %conv, 8
  %call7 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add6, ptr noundef nonnull %ctrl) #14
  %8 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ctrl, align 4
  %conv8 = trunc i32 %9 to i16
  %and5.i = and i16 %conv5, %conv8
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %conv5)
  %cmp.i = icmp eq i16 %and5.i, %conv5
  %..i = zext i1 %cmp.i to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end2, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %..i, %if.end2 ], [ -25, %entry.cleanup_crit_edge ], [ -25, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctrl) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cap) #14
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_cavium_acs(ptr nocapture noundef readonly %dev, i16 noundef zeroext %acs_flags) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not.i = icmp eq i8 %1, 0
  br i1 %tobool.i.not.i, label %entry.return_crit_edge, label %lor.lhs.false.i

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

lor.lhs.false.i:                                  ; preds = %entry
  %pcie_flags_reg.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %2 = ptrtoint ptr %pcie_flags_reg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %pcie_flags_reg.i.i.i, align 2
  %4 = and i16 %3, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %4)
  %cmp.not.i = icmp eq i16 %4, 64
  br i1 %cmp.not.i, label %if.end.i, label %lor.lhs.false.i.return_crit_edge

lor.lhs.false.i.return_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.i:                                         ; preds = %lor.lhs.false.i
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %5 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %device.i, align 2
  %7 = zext i16 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.310)
  switch i16 %6, label %pci_quirk_cavium_acs_match.exit [
    i16 -20604, label %if.end.i.if.end_crit_edge
    i16 -18300, label %if.end.i.if.end_crit_edge6
  ]

if.end.i.if.end_crit_edge6:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

pci_quirk_cavium_acs_match.exit:                  ; preds = %if.end.i
  %8 = and i16 %6, -2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 -24576, i16 %8)
  %inbounds.i = icmp eq i16 %8, -24576
  br i1 %inbounds.i, label %pci_quirk_cavium_acs_match.exit.if.end_crit_edge, label %pci_quirk_cavium_acs_match.exit.return_crit_edge

pci_quirk_cavium_acs_match.exit.return_crit_edge: ; preds = %pci_quirk_cavium_acs_match.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

pci_quirk_cavium_acs_match.exit.if.end_crit_edge: ; preds = %pci_quirk_cavium_acs_match.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %pci_quirk_cavium_acs_match.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %if.end.i.if.end_crit_edge6
  %and5.i = and i16 %acs_flags, 29
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  br label %return

return:                                           ; preds = %if.end, %pci_quirk_cavium_acs_match.exit.return_crit_edge, %lor.lhs.false.i.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %..i, %if.end ], [ -25, %pci_quirk_cavium_acs_match.exit.return_crit_edge ], [ -25, %lor.lhs.false.i.return_crit_edge ], [ -25, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_xgene_acs(ptr nocapture noundef readnone %dev, i16 noundef zeroext %acs_flags) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and5.i = and i16 %acs_flags, 29
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  ret i32 %..i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_brcm_acs(ptr nocapture noundef readnone %dev, i16 noundef zeroext %acs_flags) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and5.i = and i16 %acs_flags, 29
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  ret i32 %..i
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_al_acs(ptr nocapture noundef readonly %dev, i16 noundef zeroext %acs_flags) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %0 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %2 = and i16 %1, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %2)
  %cmp.not = icmp eq i16 %2, 64
  %3 = and i16 %acs_flags, -30
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  %cond = zext i1 %tobool.not to i32
  %retval.0 = select i1 %cmp.not, i32 %cond, i32 -25
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_nxp_rp_acs(ptr nocapture noundef readnone %dev, i16 noundef zeroext %acs_flags) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and5.i = and i16 %acs_flags, 29
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  ret i32 %..i
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @pci_quirk_zhaoxin_pcie_ports_acs(ptr nocapture noundef readonly %dev, i16 noundef zeroext %acs_flags) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not = icmp eq i8 %1, 0
  br i1 %tobool.i.not, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %2 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %4 = lshr i16 %3, 4
  %5 = and i16 %4, 15
  %6 = zext i16 %5 to i32
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.311)
  switch i32 %6, label %lor.lhs.false.return_crit_edge [
    i32 4, label %lor.lhs.false.if.end_crit_edge
    i32 6, label %lor.lhs.false.if.end_crit_edge11
  ]

lor.lhs.false.if.end_crit_edge11:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %lor.lhs.false.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge11
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %8 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %device, align 2
  %10 = zext i16 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.312)
  switch i16 %9, label %if.end.return_crit_edge [
    i16 1825, label %if.end.sw.bb5_crit_edge
    i16 1827, label %if.end.sw.bb5_crit_edge12
    i16 1828, label %if.end.sw.bb5_crit_edge13
    i16 1829, label %if.end.sw.bb5_crit_edge14
    i16 1830, label %if.end.sw.bb5_crit_edge15
    i16 1831, label %if.end.sw.bb5_crit_edge16
    i16 1832, label %if.end.sw.bb5_crit_edge17
    i16 1833, label %if.end.sw.bb5_crit_edge18
    i16 1834, label %if.end.sw.bb5_crit_edge19
    i16 1835, label %if.end.sw.bb5_crit_edge20
    i16 1836, label %if.end.sw.bb5_crit_edge21
    i16 1837, label %if.end.sw.bb5_crit_edge22
    i16 1838, label %if.end.sw.bb5_crit_edge23
    i16 1839, label %if.end.sw.bb5_crit_edge24
    i16 1840, label %if.end.sw.bb5_crit_edge25
    i16 1841, label %if.end.sw.bb5_crit_edge26
    i16 1842, label %if.end.sw.bb5_crit_edge27
    i16 1808, label %if.end.sw.bb5_crit_edge28
    i16 1809, label %if.end.sw.bb5_crit_edge29
    i16 1810, label %if.end.sw.bb5_crit_edge30
    i16 1811, label %if.end.sw.bb5_crit_edge31
    i16 1812, label %if.end.sw.bb5_crit_edge32
    i16 1813, label %if.end.sw.bb5_crit_edge33
    i16 1814, label %if.end.sw.bb5_crit_edge34
    i16 1815, label %if.end.sw.bb5_crit_edge35
    i16 1816, label %if.end.sw.bb5_crit_edge36
    i16 1817, label %if.end.sw.bb5_crit_edge37
    i16 1818, label %if.end.sw.bb5_crit_edge38
    i16 1819, label %if.end.sw.bb5_crit_edge39
    i16 1820, label %if.end.sw.bb5_crit_edge40
    i16 1821, label %if.end.sw.bb5_crit_edge41
    i16 1822, label %if.end.sw.bb5_crit_edge42
  ]

if.end.sw.bb5_crit_edge42:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge41:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge40:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge39:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge38:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge37:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge36:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge35:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge34:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge33:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge32:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge31:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge30:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge29:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge28:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge27:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge26:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge25:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge24:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge23:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge22:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge21:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge20:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge19:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge18:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge17:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge16:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge15:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge14:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge13:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge12:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.sw.bb5_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

sw.bb5:                                           ; preds = %if.end.sw.bb5_crit_edge, %if.end.sw.bb5_crit_edge12, %if.end.sw.bb5_crit_edge13, %if.end.sw.bb5_crit_edge14, %if.end.sw.bb5_crit_edge15, %if.end.sw.bb5_crit_edge16, %if.end.sw.bb5_crit_edge17, %if.end.sw.bb5_crit_edge18, %if.end.sw.bb5_crit_edge19, %if.end.sw.bb5_crit_edge20, %if.end.sw.bb5_crit_edge21, %if.end.sw.bb5_crit_edge22, %if.end.sw.bb5_crit_edge23, %if.end.sw.bb5_crit_edge24, %if.end.sw.bb5_crit_edge25, %if.end.sw.bb5_crit_edge26, %if.end.sw.bb5_crit_edge27, %if.end.sw.bb5_crit_edge28, %if.end.sw.bb5_crit_edge29, %if.end.sw.bb5_crit_edge30, %if.end.sw.bb5_crit_edge31, %if.end.sw.bb5_crit_edge32, %if.end.sw.bb5_crit_edge33, %if.end.sw.bb5_crit_edge34, %if.end.sw.bb5_crit_edge35, %if.end.sw.bb5_crit_edge36, %if.end.sw.bb5_crit_edge37, %if.end.sw.bb5_crit_edge38, %if.end.sw.bb5_crit_edge39, %if.end.sw.bb5_crit_edge40, %if.end.sw.bb5_crit_edge41, %if.end.sw.bb5_crit_edge42
  %and5.i = and i16 %acs_flags, 29
  call void @__sanitizer_cov_trace_cmp2(i16 %and5.i, i16 %acs_flags)
  %cmp.i = icmp eq i16 %and5.i, %acs_flags
  %..i = zext i1 %cmp.i to i32
  br label %return

return:                                           ; preds = %sw.bb5, %if.end.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %..i, %sw.bb5 ], [ -25, %entry.return_crit_edge ], [ 0, %if.end.return_crit_edge ], [ -25, %lor.lhs.false.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @pci_quirk_intel_spt_pch_acs_match(ptr nocapture noundef readonly %dev) unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not = icmp eq i8 %1, 0
  br i1 %tobool.i.not, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %pcie_flags_reg.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %2 = ptrtoint ptr %pcie_flags_reg.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %pcie_flags_reg.i.i, align 2
  %4 = and i16 %3, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %4)
  %cmp.not = icmp eq i16 %4, 64
  br i1 %cmp.not, label %if.end, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %device = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %5 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %device, align 2
  %7 = zext i16 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.313)
  switch i16 %6, label %sw.epilog [
    i16 -25328, label %if.end.return_crit_edge
    i16 -25327, label %if.end.return_crit_edge8
    i16 -25326, label %if.end.return_crit_edge9
    i16 -25325, label %if.end.return_crit_edge10
    i16 -25324, label %if.end.return_crit_edge11
    i16 -25323, label %if.end.return_crit_edge12
    i16 -25322, label %if.end.return_crit_edge13
    i16 -25321, label %if.end.return_crit_edge14
    i16 -25320, label %if.end.return_crit_edge15
    i16 -25319, label %if.end.return_crit_edge16
    i16 -25318, label %if.end.return_crit_edge17
    i16 -25317, label %if.end.return_crit_edge18
    i16 -23833, label %if.end.return_crit_edge19
    i16 -23832, label %if.end.return_crit_edge20
    i16 -23831, label %if.end.return_crit_edge21
    i16 -23830, label %if.end.return_crit_edge22
    i16 -23829, label %if.end.return_crit_edge23
    i16 -23828, label %if.end.return_crit_edge24
    i16 -23827, label %if.end.return_crit_edge25
    i16 -23826, label %if.end.return_crit_edge26
    i16 -23920, label %if.end.return_crit_edge27
    i16 -23919, label %if.end.return_crit_edge28
    i16 -23918, label %if.end.return_crit_edge29
    i16 -23917, label %if.end.return_crit_edge30
    i16 -23916, label %if.end.return_crit_edge31
    i16 -23915, label %if.end.return_crit_edge32
    i16 -23914, label %if.end.return_crit_edge33
    i16 -23913, label %if.end.return_crit_edge34
    i16 -23912, label %if.end.return_crit_edge35
    i16 -23911, label %if.end.return_crit_edge36
    i16 -23910, label %if.end.return_crit_edge37
    i16 -23909, label %if.end.return_crit_edge38
    i16 -23908, label %if.end.return_crit_edge39
    i16 -23907, label %if.end.return_crit_edge40
    i16 -23906, label %if.end.return_crit_edge41
    i16 -23905, label %if.end.return_crit_edge42
    i16 -24217, label %if.end.return_crit_edge43
    i16 -24216, label %if.end.return_crit_edge44
    i16 -24215, label %if.end.return_crit_edge45
    i16 -24214, label %if.end.return_crit_edge46
    i16 -24304, label %if.end.return_crit_edge47
    i16 -24303, label %if.end.return_crit_edge48
    i16 -24302, label %if.end.return_crit_edge49
    i16 -24301, label %if.end.return_crit_edge50
    i16 -24300, label %if.end.return_crit_edge51
    i16 -24299, label %if.end.return_crit_edge52
    i16 -24298, label %if.end.return_crit_edge53
    i16 -24297, label %if.end.return_crit_edge54
    i16 -24296, label %if.end.return_crit_edge55
    i16 -24295, label %if.end.return_crit_edge56
    i16 -24294, label %if.end.return_crit_edge57
    i16 -24293, label %if.end.return_crit_edge58
    i16 -24292, label %if.end.return_crit_edge59
    i16 -24291, label %if.end.return_crit_edge60
    i16 -24290, label %if.end.return_crit_edge61
    i16 -24289, label %if.end.return_crit_edge62
  ]

if.end.return_crit_edge62:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge61:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge60:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge59:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge58:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge57:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge56:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge55:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge54:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge53:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge52:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge51:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge50:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge49:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge48:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge47:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge46:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge45:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge44:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge43:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge42:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge41:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge40:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge39:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge38:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge37:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge36:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge35:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge34:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge33:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge32:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge31:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge30:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge29:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge28:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge27:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge26:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge25:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge24:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge23:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge22:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge21:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge20:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge19:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge18:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge17:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge16:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge15:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge14:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge13:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge12:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge11:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge10:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge9:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge8:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

sw.epilog:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

return:                                           ; preds = %sw.epilog, %if.end.return_crit_edge, %if.end.return_crit_edge8, %if.end.return_crit_edge9, %if.end.return_crit_edge10, %if.end.return_crit_edge11, %if.end.return_crit_edge12, %if.end.return_crit_edge13, %if.end.return_crit_edge14, %if.end.return_crit_edge15, %if.end.return_crit_edge16, %if.end.return_crit_edge17, %if.end.return_crit_edge18, %if.end.return_crit_edge19, %if.end.return_crit_edge20, %if.end.return_crit_edge21, %if.end.return_crit_edge22, %if.end.return_crit_edge23, %if.end.return_crit_edge24, %if.end.return_crit_edge25, %if.end.return_crit_edge26, %if.end.return_crit_edge27, %if.end.return_crit_edge28, %if.end.return_crit_edge29, %if.end.return_crit_edge30, %if.end.return_crit_edge31, %if.end.return_crit_edge32, %if.end.return_crit_edge33, %if.end.return_crit_edge34, %if.end.return_crit_edge35, %if.end.return_crit_edge36, %if.end.return_crit_edge37, %if.end.return_crit_edge38, %if.end.return_crit_edge39, %if.end.return_crit_edge40, %if.end.return_crit_edge41, %if.end.return_crit_edge42, %if.end.return_crit_edge43, %if.end.return_crit_edge44, %if.end.return_crit_edge45, %if.end.return_crit_edge46, %if.end.return_crit_edge47, %if.end.return_crit_edge48, %if.end.return_crit_edge49, %if.end.return_crit_edge50, %if.end.return_crit_edge51, %if.end.return_crit_edge52, %if.end.return_crit_edge53, %if.end.return_crit_edge54, %if.end.return_crit_edge55, %if.end.return_crit_edge56, %if.end.return_crit_edge57, %if.end.return_crit_edge58, %if.end.return_crit_edge59, %if.end.return_crit_edge60, %if.end.return_crit_edge61, %if.end.return_crit_edge62, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %sw.epilog ], [ false, %lor.lhs.false.return_crit_edge ], [ false, %entry.return_crit_edge ], [ true, %if.end.return_crit_edge ], [ true, %if.end.return_crit_edge8 ], [ true, %if.end.return_crit_edge9 ], [ true, %if.end.return_crit_edge10 ], [ true, %if.end.return_crit_edge11 ], [ true, %if.end.return_crit_edge12 ], [ true, %if.end.return_crit_edge13 ], [ true, %if.end.return_crit_edge14 ], [ true, %if.end.return_crit_edge15 ], [ true, %if.end.return_crit_edge16 ], [ true, %if.end.return_crit_edge17 ], [ true, %if.end.return_crit_edge18 ], [ true, %if.end.return_crit_edge19 ], [ true, %if.end.return_crit_edge20 ], [ true, %if.end.return_crit_edge21 ], [ true, %if.end.return_crit_edge22 ], [ true, %if.end.return_crit_edge23 ], [ true, %if.end.return_crit_edge24 ], [ true, %if.end.return_crit_edge25 ], [ true, %if.end.return_crit_edge26 ], [ true, %if.end.return_crit_edge27 ], [ true, %if.end.return_crit_edge28 ], [ true, %if.end.return_crit_edge29 ], [ true, %if.end.return_crit_edge30 ], [ true, %if.end.return_crit_edge31 ], [ true, %if.end.return_crit_edge32 ], [ true, %if.end.return_crit_edge33 ], [ true, %if.end.return_crit_edge34 ], [ true, %if.end.return_crit_edge35 ], [ true, %if.end.return_crit_edge36 ], [ true, %if.end.return_crit_edge37 ], [ true, %if.end.return_crit_edge38 ], [ true, %if.end.return_crit_edge39 ], [ true, %if.end.return_crit_edge40 ], [ true, %if.end.return_crit_edge41 ], [ true, %if.end.return_crit_edge42 ], [ true, %if.end.return_crit_edge43 ], [ true, %if.end.return_crit_edge44 ], [ true, %if.end.return_crit_edge45 ], [ true, %if.end.return_crit_edge46 ], [ true, %if.end.return_crit_edge47 ], [ true, %if.end.return_crit_edge48 ], [ true, %if.end.return_crit_edge49 ], [ true, %if.end.return_crit_edge50 ], [ true, %if.end.return_crit_edge51 ], [ true, %if.end.return_crit_edge52 ], [ true, %if.end.return_crit_edge53 ], [ true, %if.end.return_crit_edge54 ], [ true, %if.end.return_crit_edge55 ], [ true, %if.end.return_crit_edge56 ], [ true, %if.end.return_crit_edge57 ], [ true, %if.end.return_crit_edge58 ], [ true, %if.end.return_crit_edge59 ], [ true, %if.end.return_crit_edge60 ], [ true, %if.end.return_crit_edge61 ], [ true, %if.end.return_crit_edge62 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_quirk_enable_intel_pch_acs(ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  %mpc.i = alloca i32, align 4
  %rcba.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 19
  %0 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not.i = icmp eq i8 %1, 0
  br i1 %tobool.i.not.i, label %entry.return_crit_edge, label %lor.lhs.false.i

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

lor.lhs.false.i:                                  ; preds = %entry
  %pcie_flags_reg.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 25
  %2 = ptrtoint ptr %pcie_flags_reg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %pcie_flags_reg.i.i.i, align 2
  %4 = and i16 %3, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %4)
  %cmp.not.i = icmp eq i16 %4, 64
  br i1 %cmp.not.i, label %for.cond.preheader.i, label %lor.lhs.false.i.return_crit_edge

lor.lhs.false.i.return_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

for.cond.preheader.i:                             ; preds = %lor.lhs.false.i
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 8
  %5 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %device.i, align 2
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 119
  br i1 %exitcond.not.i, label %for.cond.i.return_crit_edge, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.cond.i.return_crit_edge:                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.cond.preheader.i
  %i.012.i = phi i32 [ 0, %for.cond.preheader.i ], [ %inc.i, %for.cond.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [119 x i16], ptr @pci_quirk_intel_pch_acs_ids, i32 0, i32 %i.012.i
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %arrayidx.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %6)
  %cmp4.i = icmp eq i16 %8, %6
  br i1 %cmp4.i, label %if.end, label %for.cond.i

if.end:                                           ; preds = %for.body.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rcba.i) #14
  %9 = ptrtoint ptr %rcba.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %rcba.i, align 4, !annotation !1882
  %bus.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 1
  %10 = ptrtoint ptr %bus.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bus.i, align 8
  %call.i = call i32 @pci_bus_read_config_dword(ptr noundef %11, i32 noundef 248, i32 noundef 240, ptr noundef nonnull %rcba.i) #14
  %12 = ptrtoint ptr %rcba.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rcba.i, align 4
  %and.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.do.end_crit_edge, label %if.end.i

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.end.i:                                         ; preds = %if.end
  %and1.i = and i32 %13, -16384
  %call2.i = call ptr @ioremap(i32 noundef %and1.i, i32 noundef 8192) #14
  %tobool3.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool3.not.i, label %if.end.i.do.end_crit_edge, label %if.end5.i

if.end.i.do.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.end5.i:                                        ; preds = %if.end.i
  %add.ptr.i = getelementptr i8, ptr %call2.i, i32 4356
  %14 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !1890
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1916
  %15 = and i32 %14, 196608
  call void @__sanitizer_cov_trace_const_cmp4(i32 196608, i32 %15)
  %cmp.not.i14 = icmp eq i32 %15, 196608
  br i1 %cmp.not.i14, label %if.end5.i.if.end4_crit_edge, label %if.then9.i

if.end5.i.if.end4_crit_edge:                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then9.i:                                       ; preds = %if.end5.i
  %add.ptr12.i = getelementptr i8, ptr %call2.i, i32 4116
  %16 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr12.i) #14, !srcloc !1890
  %17 = call i32 @llvm.bswap.i32(i32 %16) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1917
  %and16.i = and i32 %17, 63
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16.i)
  %tobool17.not.i = icmp eq i32 %and16.i, 0
  br i1 %tobool17.not.i, label %if.then9.i.if.end4_crit_edge, label %do.end.i

if.then9.i.if.end4_crit_edge:                     ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

do.end.i:                                         ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #16
  %dev19.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev19.i, ptr noundef nonnull @.str.231) #17
  %and20.i = and i32 %17, -64
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1918
  call void @arm_heavy_mb() #14
  %18 = call i32 @llvm.bswap.i32(i32 %and20.i) #14
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr12.i, i32 %18) #14, !srcloc !1893
  br label %if.end4

do.end:                                           ; preds = %if.end.i.do.end_crit_edge, %if.end.do.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rcba.i) #14
  %dev3 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev3, ptr noundef nonnull @.str.226) #17
  br label %return

if.end4:                                          ; preds = %do.end.i, %if.then9.i.if.end4_crit_edge, %if.end5.i.if.end4_crit_edge
  call void @iounmap(ptr noundef nonnull %call2.i) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rcba.i) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mpc.i) #14
  %19 = ptrtoint ptr %mpc.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -1, ptr %mpc.i, align 4, !annotation !1882
  %call.i16 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef 216, ptr noundef nonnull %mpc.i) #14
  %20 = ptrtoint ptr %mpc.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mpc.i, align 4
  %and.i17 = and i32 %21, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i17)
  %tobool.not.i18 = icmp eq i32 %and.i17, 0
  br i1 %tobool.not.i18, label %do.end.i20, label %if.end4.pci_quirk_enable_intel_rp_mpc_acs.exit_crit_edge

if.end4.pci_quirk_enable_intel_rp_mpc_acs.exit_crit_edge: ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_quirk_enable_intel_rp_mpc_acs.exit

do.end.i20:                                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  %dev1.i = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev1.i, ptr noundef nonnull @.str.233) #17
  %22 = ptrtoint ptr %mpc.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %mpc.i, align 4
  %or.i = or i32 %23, 67108864
  store i32 %or.i, ptr %mpc.i, align 4
  %conv.i = trunc i32 %23 to i16
  %call2.i19 = call i32 @pci_write_config_word(ptr noundef %dev, i32 noundef 216, i16 noundef zeroext %conv.i) #14
  br label %pci_quirk_enable_intel_rp_mpc_acs.exit

pci_quirk_enable_intel_rp_mpc_acs.exit:           ; preds = %do.end.i20, %if.end4.pci_quirk_enable_intel_rp_mpc_acs.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mpc.i) #14
  %dev_flags = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 50
  %24 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %dev_flags, align 2
  %26 = or i16 %25, 8
  store i16 %26, ptr %dev_flags, align 2
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev8, ptr noundef nonnull @.str.229) #17
  br label %return

return:                                           ; preds = %pci_quirk_enable_intel_rp_mpc_acs.exit, %do.end, %for.cond.i.return_crit_edge, %lor.lhs.false.i.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ 0, %pci_quirk_enable_intel_rp_mpc_acs.exit ], [ -25, %lor.lhs.false.i.return_crit_edge ], [ -25, %entry.return_crit_edge ], [ -25, %for.cond.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_quirk_enable_intel_spt_pch_acs(ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  %cap = alloca i32, align 4
  %ctrl = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cap) #14
  %0 = ptrtoint ptr %cap to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cap, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctrl) #14
  %1 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %ctrl, align 4, !annotation !1882
  %call = tail call fastcc zeroext i1 @pci_quirk_intel_spt_pch_acs_match(ptr noundef %dev)
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %acs_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 77
  %2 = ptrtoint ptr %acs_cap to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %acs_cap, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %conv = zext i16 %3 to i32
  %add = add nuw nsw i32 %conv, 4
  %call3 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %cap) #14
  %add4 = add nuw nsw i32 %conv, 8
  %call5 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add4, ptr noundef nonnull %ctrl) #14
  %4 = ptrtoint ptr %cap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cap, align 4
  %and = and i32 %5, 1
  %6 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ctrl, align 4
  %or = or i32 %7, %and
  %and6 = and i32 %5, 4
  %or7 = or i32 %or, %and6
  %and8 = and i32 %5, 8
  %or9 = or i32 %or7, %and8
  %and10 = and i32 %5, 16
  %or11 = or i32 %or9, %and10
  store i32 %or11, ptr %ctrl, align 4
  %call12 = call zeroext i1 @pci_ats_disabled() #14
  br i1 %call12, label %if.end2.if.then21_crit_edge, label %lor.lhs.false

if.end2.if.then21_crit_edge:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then21

lor.lhs.false:                                    ; preds = %if.end2
  %external_facing = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 49
  %8 = ptrtoint ptr %external_facing to i32
  call void @__asan_loadN_noabort(i32 %8, i32 5)
  %bf.load = load i40, ptr %external_facing, align 1
  %9 = and i40 %bf.load, 6144
  %10 = icmp eq i40 %9, 0
  br i1 %10, label %lor.lhs.false.if.end24_crit_edge, label %lor.lhs.false.if.then21_crit_edge

lor.lhs.false.if.then21_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then21

lor.lhs.false.if.end24_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then21:                                        ; preds = %lor.lhs.false.if.then21_crit_edge, %if.end2.if.then21_crit_edge
  %11 = ptrtoint ptr %cap to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cap, align 4
  %and22 = and i32 %12, 2
  %13 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %ctrl, align 4
  %or23 = or i32 %14, %and22
  store i32 %or23, ptr %ctrl, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %lor.lhs.false.if.end24_crit_edge
  %15 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ctrl, align 4
  %call26 = call i32 @pci_write_config_dword(ptr noundef %dev, i32 noundef %add4, i32 noundef %16) #14
  %dev27 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev27, ptr noundef nonnull @.str.235) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end24 ], [ -25, %entry.cleanup_crit_edge ], [ -25, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctrl) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cap) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pci_quirk_disable_intel_spt_pch_acs_redir(ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  %cap = alloca i32, align 4
  %ctrl = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cap) #14
  %0 = ptrtoint ptr %cap to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cap, align 4, !annotation !1882
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ctrl) #14
  %1 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %ctrl, align 4, !annotation !1882
  %call = tail call fastcc zeroext i1 @pci_quirk_intel_spt_pch_acs_match(ptr noundef %dev)
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %acs_cap = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 77
  %2 = ptrtoint ptr %acs_cap to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %acs_cap, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool.not = icmp eq i16 %3, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end2:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i16 %3 to i32
  %add = add nuw nsw i32 %conv, 4
  %call3 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %cap) #14
  %add4 = add nuw nsw i32 %conv, 8
  %call5 = call i32 @pci_read_config_dword(ptr noundef %dev, i32 noundef %add4, ptr noundef nonnull %ctrl) #14
  %4 = ptrtoint ptr %ctrl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ctrl, align 4
  %and = and i32 %5, -45
  store i32 %and, ptr %ctrl, align 4
  %call7 = call i32 @pci_write_config_dword(ptr noundef %dev, i32 noundef %add4, i32 noundef %and) #14
  %dev8 = getelementptr inbounds %struct.pci_dev, ptr %dev, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev8, ptr noundef nonnull @.str.237) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end2, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end2 ], [ -25, %entry.cleanup_crit_edge ], [ -25, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ctrl) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cap) #14
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_bus_read_config_dword(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @pci_ats_disabled() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_find_saved_cap(ptr noundef, i8 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_read_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_find_host_bridge(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_walk_bus(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_configure_extended_tags(ptr noundef, ptr noundef) #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pci_create_device_link(ptr noundef %pdev, i32 noundef %consumer) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %devfn = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 6
  %0 = ptrtoint ptr %devfn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %devfn, align 4
  %and = and i32 %1, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %consumer)
  %cmp.not = icmp eq i32 %and, %consumer
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %bus = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 1
  %2 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bus, align 8
  %domain_nr.i = getelementptr inbounds %struct.pci_bus, ptr %3, i32 0, i32 16
  %4 = ptrtoint ptr %domain_nr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %domain_nr.i, align 8
  %number = getelementptr inbounds %struct.pci_bus, ptr %3, i32 0, i32 12
  %6 = ptrtoint ptr %number to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %number, align 4
  %conv = zext i8 %7 to i32
  %and3 = and i32 %1, 248
  %call6 = tail call ptr @pci_get_domain_bus_and_slot(i32 noundef %5, i32 noundef %conv, i32 noundef %and3) #14
  %tobool.not = icmp eq ptr %call6, null
  br i1 %tobool.not, label %if.end.if.then11_crit_edge, label %lor.lhs.false

if.end.if.then11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11

lor.lhs.false:                                    ; preds = %if.end
  %class7 = getelementptr inbounds %struct.pci_dev, ptr %call6, i32 0, i32 11
  %8 = ptrtoint ptr %class7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %class7, align 8
  %shr8.mask = and i32 %9, -65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 196608, i32 %shr8.mask)
  %cmp9.not = icmp eq i32 %shr8.mask, 196608
  br i1 %cmp9.not, label %if.end12, label %lor.lhs.false.if.then11_crit_edge

lor.lhs.false.if.then11_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11

if.then11:                                        ; preds = %lor.lhs.false.if.then11_crit_edge, %if.end.if.then11_crit_edge
  tail call void @pci_dev_put(ptr noundef %call6) #14
  br label %cleanup

if.end12:                                         ; preds = %lor.lhs.false
  %dev = getelementptr inbounds %struct.pci_dev, ptr %pdev, i32 0, i32 44
  %dev13 = getelementptr inbounds %struct.pci_dev, ptr %call6, i32 0, i32 44
  %call14 = tail call ptr @device_link_add(ptr noundef %dev, ptr noundef %dev13, i32 noundef 5) #14
  %tobool15.not = icmp eq ptr %call14, null
  %init_name.i.i1 = getelementptr inbounds %struct.pci_dev, ptr %call6, i32 0, i32 44, i32 3
  %10 = ptrtoint ptr %init_name.i.i1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %init_name.i.i1, align 8
  %tobool.not.i.i2 = icmp eq ptr %11, null
  br i1 %tobool15.not, label %do.end21, label %do.end

do.end:                                           ; preds = %if.end12
  br i1 %tobool.not.i.i2, label %if.end.i.i, label %do.end.pci_name.exit_crit_edge

do.end.pci_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_name.exit

if.end.i.i:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %dev13 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev13, align 4
  br label %pci_name.exit

pci_name.exit:                                    ; preds = %if.end.i.i, %do.end.pci_name.exit_crit_edge
  %retval.0.i.i = phi ptr [ %13, %if.end.i.i ], [ %11, %do.end.pci_name.exit_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.243, ptr noundef %retval.0.i.i) #17
  br label %if.end24

do.end21:                                         ; preds = %if.end12
  br i1 %tobool.not.i.i2, label %if.end.i.i4, label %do.end21.pci_name.exit6_crit_edge

do.end21.pci_name.exit6_crit_edge:                ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %pci_name.exit6

if.end.i.i4:                                      ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #16
  %14 = ptrtoint ptr %dev13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dev13, align 4
  br label %pci_name.exit6

pci_name.exit6:                                   ; preds = %if.end.i.i4, %do.end21.pci_name.exit6_crit_edge
  %retval.0.i.i5 = phi ptr [ %15, %if.end.i.i4 ], [ %11, %do.end21.pci_name.exit6_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.246, ptr noundef %retval.0.i.i5) #17
  br label %if.end24

if.end24:                                         ; preds = %pci_name.exit6, %pci_name.exit
  tail call void @pm_runtime_allow(ptr noundef %dev) #14
  tail call void @pci_dev_put(ptr noundef nonnull %call6) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.then11, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @device_link_add(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_allow(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @pci_reset_supported(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_reset_bus(ptr noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #10

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 359)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 359)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind readonly }
attributes #10 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { cold nounwind }
attributes #18 = { nounwind allocsize(2) }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !178, !180, !182, !184, !186, !188, !190, !192, !194, !196, !198, !200, !202, !204, !206, !208, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !264, !266, !268, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !292, !294, !296, !298, !300, !302, !304, !306, !308, !310, !312, !314, !316, !318, !320, !322, !324, !326, !328, !330, !332, !334, !336, !338, !340, !342, !344, !346, !348, !350, !352, !354, !356, !358, !360, !362, !364, !366, !368, !370, !372, !374, !376, !378, !380, !382, !384, !386, !388, !390, !392, !394, !396, !398, !400, !402, !404, !406, !408, !410, !412, !414, !416, !418, !420, !422, !424, !426, !428, !430, !432, !434, !436, !438, !440, !442, !444, !446, !448, !450, !452, !454, !456, !458, !460, !462, !464, !466, !468, !470, !472, !474, !476, !478, !480, !482, !484, !486, !488, !490, !492, !494, !496, !498, !500, !502, !504, !506, !508, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !530, !532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !568, !570, !572, !574, !576, !578, !580, !582, !584, !586, !588, !590, !592, !594, !596, !598, !600, !602, !604, !606, !608, !610, !612, !614, !616, !618, !620, !622, !624, !626, !628, !630, !632, !634, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !664, !666, !668, !670, !672, !674, !676, !678, !680, !682, !684, !686, !688, !690, !692, !694, !696, !698, !700, !702, !704, !706, !708, !710, !712, !714, !716, !718, !720, !722, !724, !726, !728, !730, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758, !760, !762, !764, !766, !768, !770, !772, !774, !776, !778, !780, !782, !784, !786, !788, !790, !792, !794, !796, !798, !800, !802, !804, !806, !808, !810, !812, !814, !816, !818, !820, !822, !824, !826, !828, !830, !832, !834, !836, !838, !840, !842, !844, !846, !848, !850, !852, !854, !856, !858, !860, !862, !864, !866, !868, !870, !872, !874, !876, !878, !880, !882, !884, !886, !888, !890, !892, !894, !896, !898, !900, !902, !904, !906, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964, !966, !968, !970, !972, !974, !976, !978, !980, !982, !984, !986, !988, !990, !992, !994, !996, !998, !1000, !1002, !1004, !1006, !1008, !1010, !1012, !1014, !1016, !1018, !1020, !1022, !1024, !1026, !1028, !1030, !1032, !1034, !1036, !1038, !1040, !1042, !1044, !1046, !1048, !1050, !1052, !1054, !1056, !1058, !1060, !1062, !1064, !1066, !1068, !1070, !1072, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !1106, !1108, !1110, !1112, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !1130, !1132, !1134, !1136, !1138, !1140, !1142, !1144, !1146, !1148, !1150, !1152, !1154, !1156, !1158, !1160, !1162, !1164, !1166, !1168, !1170, !1172, !1174, !1176, !1178, !1180, !1182, !1184, !1186, !1188, !1190, !1192, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1240, !1241, !1242, !1243, !1245, !1246, !1247, !1248, !1250, !1251, !1252, !1254, !1255, !1256, !1258, !1259, !1260, !1261, !1263, !1264, !1265, !1266, !1268, !1269, !1270, !1271, !1273, !1274, !1275, !1276, !1278, !1279, !1280, !1281, !1283, !1284, !1285, !1286, !1288, !1289, !1290, !1291, !1293, !1294, !1295, !1297, !1298, !1299, !1301, !1302, !1303, !1305, !1306, !1307, !1309, !1310, !1311, !1312, !1314, !1316, !1318, !1319, !1320, !1321, !1323, !1324, !1325, !1326, !1328, !1329, !1330, !1331, !1333, !1335, !1336, !1337, !1338, !1340, !1341, !1342, !1344, !1346, !1348, !1349, !1350, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1374, !1375, !1376, !1378, !1379, !1380, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1395, !1396, !1397, !1399, !1401, !1403, !1405, !1407, !1408, !1409, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1423, !1424, !1425, !1426, !1428, !1429, !1430, !1431, !1433, !1435, !1437, !1438, !1439, !1440, !1442, !1443, !1444, !1445, !1447, !1448, !1449, !1450, !1452, !1453, !1454, !1455, !1457, !1458, !1459, !1460, !1462, !1463, !1464, !1465, !1467, !1469, !1470, !1471, !1472, !1474, !1475, !1476, !1478, !1480, !1481, !1482, !1483, !1485, !1486, !1487, !1488, !1490, !1491, !1492, !1493, !1495, !1496, !1497, !1499, !1500, !1501, !1502, !1504, !1506, !1507, !1508, !1509, !1511, !1512, !1513, !1514, !1516, !1517, !1518, !1519, !1521, !1522, !1523, !1524, !1526, !1527, !1528, !1529, !1531, !1532, !1533, !1534, !1536, !1537, !1538, !1540, !1541, !1542, !1543, !1545, !1546, !1547, !1548, !1550, !1551, !1552, !1553, !1555, !1556, !1557, !1558, !1560, !1561, !1562, !1563, !1565, !1566, !1567, !1568, !1570, !1571, !1572, !1573, !1575, !1576, !1577, !1579, !1580, !1581, !1582, !1584, !1585, !1586, !1587, !1589, !1590, !1591, !1592, !1594, !1595, !1596, !1597, !1598, !1599, !1601, !1602, !1603, !1604, !1606, !1608, !1610, !1611, !1612, !1613, !1615, !1616, !1617, !1618, !1620, !1621, !1622, !1623, !1625, !1626, !1627, !1628, !1630, !1631, !1632, !1633, !1635, !1636, !1637, !1638, !1640, !1641, !1642, !1643, !1644, !1646, !1647, !1648, !1650, !1651, !1652, !1653, !1655, !1656, !1657, !1659, !1660, !1662, !1663, !1664, !1665, !1667, !1668, !1669, !1670, !1671, !1673, !1674, !1675, !1677, !1678, !1679, !1680, !1682, !1683, !1684, !1685, !1687, !1688, !1689, !1691, !1692, !1693, !1694, !1696, !1697, !1698, !1700, !1701, !1702, !1704, !1706, !1708, !1709, !1710, !1711, !1713, !1714, !1715, !1716, !1718, !1719, !1720, !1721, !1723, !1725, !1726, !1727, !1728, !1730, !1731, !1732, !1733, !1735, !1736, !1737, !1738, !1740, !1741, !1742, !1744, !1746, !1748, !1750, !1751, !1752, !1753, !1755, !1756, !1757, !1759, !1760, !1761, !1762, !1764, !1765, !1766, !1767, !1769, !1770, !1771, !1772, !1774, !1775, !1776, !1777, !1779, !1780, !1781, !1782, !1784, !1785, !1786, !1787, !1789, !1790, !1791, !1792, !1794, !1795, !1796, !1798, !1799, !1800, !1801, !1803, !1804, !1805, !1806, !1808, !1809, !1810, !1812, !1813, !1814, !1816, !1817, !1818, !1820, !1821, !1822, !1824, !1825, !1826, !1828, !1829, !1831, !1832, !1833, !1834, !1836, !1837, !1838, !1839, !1841, !1842, !1843, !1845, !1846, !1847, !1849, !1850, !1851, !1852, !1854, !1855, !1856, !1857, !1859, !1860, !1861, !1863, !1864, !1865, !1866, !1868, !1869, !1870}
!llvm.named.register.sp = !{!1871}
!llvm.module.flags = !{!1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879}
!llvm.ident = !{!1880}

!0 = !{ptr @__ksymtab_pci_fixup_device, !1, !"__ksymtab_pci_fixup_device", i1 false, i1 false}
!1 = !{!"../drivers/pci/quirks.c", i32 153, i32 1}
!2 = !{ptr @__initcall__kmod_quirks__293_194_pci_apply_final_quirks5s, !3, !"__initcall__kmod_quirks__293_194_pci_apply_final_quirks5s", i1 false, i1 false}
!3 = !{!"../drivers/pci/quirks.c", i32 194, i32 1}
!4 = !{ptr @__pci_fixup_quirk_mmio_always_on207, !5, !"__pci_fixup_quirk_mmio_always_on207", i1 false, i1 false}
!5 = !{!"../drivers/pci/quirks.c", i32 206, i32 1}
!6 = !{ptr @__pci_fixup_pci_disable_parity213, !7, !"__pci_fixup_pci_disable_parity213", i1 false, i1 false}
!7 = !{!"../drivers/pci/quirks.c", i32 213, i32 1}
!8 = !{ptr @__pci_fixup_pci_disable_parity214, !9, !"__pci_fixup_pci_disable_parity214", i1 false, i1 false}
!9 = !{!"../drivers/pci/quirks.c", i32 214, i32 1}
!10 = !{ptr @__pci_fixup_quirk_passive_release238, !11, !"__pci_fixup_quirk_passive_release238", i1 false, i1 false}
!11 = !{!"../drivers/pci/quirks.c", i32 238, i32 1}
!12 = !{ptr @__pci_fixup_resumequirk_passive_release239, !13, !"__pci_fixup_resumequirk_passive_release239", i1 false, i1 false}
!13 = !{!"../drivers/pci/quirks.c", i32 239, i32 1}
!14 = !{ptr @__pci_fixup_quirk_isa_dma_hangs260, !15, !"__pci_fixup_quirk_isa_dma_hangs260", i1 false, i1 false}
!15 = !{!"../drivers/pci/quirks.c", i32 260, i32 1}
!16 = !{ptr @__pci_fixup_quirk_isa_dma_hangs261, !17, !"__pci_fixup_quirk_isa_dma_hangs261", i1 false, i1 false}
!17 = !{!"../drivers/pci/quirks.c", i32 261, i32 1}
!18 = !{ptr @__pci_fixup_quirk_isa_dma_hangs262, !19, !"__pci_fixup_quirk_isa_dma_hangs262", i1 false, i1 false}
!19 = !{!"../drivers/pci/quirks.c", i32 262, i32 1}
!20 = !{ptr @__pci_fixup_quirk_isa_dma_hangs263, !21, !"__pci_fixup_quirk_isa_dma_hangs263", i1 false, i1 false}
!21 = !{!"../drivers/pci/quirks.c", i32 263, i32 1}
!22 = !{ptr @__pci_fixup_quirk_isa_dma_hangs264, !23, !"__pci_fixup_quirk_isa_dma_hangs264", i1 false, i1 false}
!23 = !{!"../drivers/pci/quirks.c", i32 264, i32 1}
!24 = !{ptr @__pci_fixup_quirk_isa_dma_hangs265, !25, !"__pci_fixup_quirk_isa_dma_hangs265", i1 false, i1 false}
!25 = !{!"../drivers/pci/quirks.c", i32 265, i32 1}
!26 = !{ptr @__pci_fixup_quirk_isa_dma_hangs266, !27, !"__pci_fixup_quirk_isa_dma_hangs266", i1 false, i1 false}
!27 = !{!"../drivers/pci/quirks.c", i32 266, i32 1}
!28 = !{ptr @__pci_fixup_quirk_tigerpoint_bm_sts286, !29, !"__pci_fixup_quirk_tigerpoint_bm_sts286", i1 false, i1 false}
!29 = !{!"../drivers/pci/quirks.c", i32 286, i32 1}
!30 = !{ptr @__pci_fixup_quirk_nopcipci296, !31, !"__pci_fixup_quirk_nopcipci296", i1 false, i1 false}
!31 = !{!"../drivers/pci/quirks.c", i32 296, i32 1}
!32 = !{ptr @__pci_fixup_quirk_nopcipci297, !33, !"__pci_fixup_quirk_nopcipci297", i1 false, i1 false}
!33 = !{!"../drivers/pci/quirks.c", i32 297, i32 1}
!34 = !{ptr @__pci_fixup_quirk_nopciamd309, !35, !"__pci_fixup_quirk_nopciamd309", i1 false, i1 false}
!35 = !{!"../drivers/pci/quirks.c", i32 309, i32 1}
!36 = !{ptr @__pci_fixup_quirk_triton319, !37, !"__pci_fixup_quirk_triton319", i1 false, i1 false}
!37 = !{!"../drivers/pci/quirks.c", i32 319, i32 1}
!38 = !{ptr @__pci_fixup_quirk_triton320, !39, !"__pci_fixup_quirk_triton320", i1 false, i1 false}
!39 = !{!"../drivers/pci/quirks.c", i32 320, i32 1}
!40 = !{ptr @__pci_fixup_quirk_triton321, !41, !"__pci_fixup_quirk_triton321", i1 false, i1 false}
!41 = !{!"../drivers/pci/quirks.c", i32 321, i32 1}
!42 = !{ptr @__pci_fixup_quirk_triton322, !43, !"__pci_fixup_quirk_triton322", i1 false, i1 false}
!43 = !{!"../drivers/pci/quirks.c", i32 322, i32 1}
!44 = !{ptr @__pci_fixup_quirk_vialatency388, !45, !"__pci_fixup_quirk_vialatency388", i1 false, i1 false}
!45 = !{!"../drivers/pci/quirks.c", i32 388, i32 1}
!46 = !{ptr @__pci_fixup_quirk_vialatency389, !47, !"__pci_fixup_quirk_vialatency389", i1 false, i1 false}
!47 = !{!"../drivers/pci/quirks.c", i32 389, i32 1}
!48 = !{ptr @__pci_fixup_quirk_vialatency390, !49, !"__pci_fixup_quirk_vialatency390", i1 false, i1 false}
!49 = !{!"../drivers/pci/quirks.c", i32 390, i32 1}
!50 = !{ptr @__pci_fixup_resumequirk_vialatency392, !51, !"__pci_fixup_resumequirk_vialatency392", i1 false, i1 false}
!51 = !{!"../drivers/pci/quirks.c", i32 392, i32 1}
!52 = !{ptr @__pci_fixup_resumequirk_vialatency393, !53, !"__pci_fixup_resumequirk_vialatency393", i1 false, i1 false}
!53 = !{!"../drivers/pci/quirks.c", i32 393, i32 1}
!54 = !{ptr @__pci_fixup_resumequirk_vialatency394, !55, !"__pci_fixup_resumequirk_vialatency394", i1 false, i1 false}
!55 = !{!"../drivers/pci/quirks.c", i32 394, i32 1}
!56 = !{ptr @__pci_fixup_quirk_viaetbf404, !57, !"__pci_fixup_quirk_viaetbf404", i1 false, i1 false}
!57 = !{!"../drivers/pci/quirks.c", i32 404, i32 1}
!58 = !{ptr @__pci_fixup_quirk_vsfx413, !59, !"__pci_fixup_quirk_vsfx413", i1 false, i1 false}
!59 = !{!"../drivers/pci/quirks.c", i32 413, i32 1}
!60 = !{ptr @__pci_fixup_quirk_alimagik427, !61, !"__pci_fixup_quirk_alimagik427", i1 false, i1 false}
!61 = !{!"../drivers/pci/quirks.c", i32 427, i32 1}
!62 = !{ptr @__pci_fixup_quirk_alimagik428, !63, !"__pci_fixup_quirk_alimagik428", i1 false, i1 false}
!63 = !{!"../drivers/pci/quirks.c", i32 428, i32 1}
!64 = !{ptr @__pci_fixup_quirk_natoma438, !65, !"__pci_fixup_quirk_natoma438", i1 false, i1 false}
!65 = !{!"../drivers/pci/quirks.c", i32 438, i32 1}
!66 = !{ptr @__pci_fixup_quirk_natoma439, !67, !"__pci_fixup_quirk_natoma439", i1 false, i1 false}
!67 = !{!"../drivers/pci/quirks.c", i32 439, i32 1}
!68 = !{ptr @__pci_fixup_quirk_natoma440, !69, !"__pci_fixup_quirk_natoma440", i1 false, i1 false}
!69 = !{!"../drivers/pci/quirks.c", i32 440, i32 1}
!70 = !{ptr @__pci_fixup_quirk_natoma441, !71, !"__pci_fixup_quirk_natoma441", i1 false, i1 false}
!71 = !{!"../drivers/pci/quirks.c", i32 441, i32 1}
!72 = !{ptr @__pci_fixup_quirk_natoma442, !73, !"__pci_fixup_quirk_natoma442", i1 false, i1 false}
!73 = !{!"../drivers/pci/quirks.c", i32 442, i32 1}
!74 = !{ptr @__pci_fixup_quirk_natoma443, !75, !"__pci_fixup_quirk_natoma443", i1 false, i1 false}
!75 = !{!"../drivers/pci/quirks.c", i32 443, i32 1}
!76 = !{ptr @__pci_fixup_quirk_citrine453, !77, !"__pci_fixup_quirk_citrine453", i1 false, i1 false}
!77 = !{!"../drivers/pci/quirks.c", i32 453, i32 1}
!78 = !{ptr @__pci_fixup_quirk_nfp6000463, !79, !"__pci_fixup_quirk_nfp6000463", i1 false, i1 false}
!79 = !{!"../drivers/pci/quirks.c", i32 463, i32 1}
!80 = !{ptr @__pci_fixup_quirk_nfp6000464, !81, !"__pci_fixup_quirk_nfp6000464", i1 false, i1 false}
!81 = !{!"../drivers/pci/quirks.c", i32 464, i32 1}
!82 = !{ptr @__pci_fixup_quirk_nfp6000465, !83, !"__pci_fixup_quirk_nfp6000465", i1 false, i1 false}
!83 = !{!"../drivers/pci/quirks.c", i32 465, i32 1}
!84 = !{ptr @__pci_fixup_quirk_nfp6000466, !85, !"__pci_fixup_quirk_nfp6000466", i1 false, i1 false}
!85 = !{!"../drivers/pci/quirks.c", i32 466, i32 1}
!86 = !{ptr @__pci_fixup_quirk_extend_bar_to_page485, !87, !"__pci_fixup_quirk_extend_bar_to_page485", i1 false, i1 false}
!87 = !{!"../drivers/pci/quirks.c", i32 485, i32 1}
!88 = !{ptr @__pci_fixup_quirk_s3_64M501, !89, !"__pci_fixup_quirk_s3_64M501", i1 false, i1 false}
!89 = !{!"../drivers/pci/quirks.c", i32 501, i32 1}
!90 = !{ptr @__pci_fixup_quirk_s3_64M502, !91, !"__pci_fixup_quirk_s3_64M502", i1 false, i1 false}
!91 = !{!"../drivers/pci/quirks.c", i32 502, i32 1}
!92 = !{ptr @__pci_fixup_quirk_cs5536_vsa552, !93, !"__pci_fixup_quirk_cs5536_vsa552", i1 false, i1 false}
!93 = !{!"../drivers/pci/quirks.c", i32 552, i32 1}
!94 = !{ptr @__pci_fixup_quirk_ati_exploding_mce590, !95, !"__pci_fixup_quirk_ati_exploding_mce590", i1 false, i1 false}
!95 = !{!"../drivers/pci/quirks.c", i32 590, i32 1}
!96 = !{ptr @__pci_fixup_quirk_amd_nl_class613, !97, !"__pci_fixup_quirk_amd_nl_class613", i1 false, i1 false}
!97 = !{!"../drivers/pci/quirks.c", i32 612, i32 1}
!98 = !{ptr @__pci_fixup_quirk_synopsys_haps638, !99, !"__pci_fixup_quirk_synopsys_haps638", i1 false, i1 false}
!99 = !{!"../drivers/pci/quirks.c", i32 636, i32 1}
!100 = !{ptr @__pci_fixup_quirk_ali7101_acpi655, !101, !"__pci_fixup_quirk_ali7101_acpi655", i1 false, i1 false}
!101 = !{!"../drivers/pci/quirks.c", i32 655, i32 1}
!102 = !{ptr @__pci_fixup_quirk_piix4_acpi743, !103, !"__pci_fixup_quirk_piix4_acpi743", i1 false, i1 false}
!103 = !{!"../drivers/pci/quirks.c", i32 743, i32 1}
!104 = !{ptr @__pci_fixup_quirk_piix4_acpi744, !105, !"__pci_fixup_quirk_piix4_acpi744", i1 false, i1 false}
!105 = !{!"../drivers/pci/quirks.c", i32 744, i32 1}
!106 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi783, !107, !"__pci_fixup_quirk_ich4_lpc_acpi783", i1 false, i1 false}
!107 = !{!"../drivers/pci/quirks.c", i32 783, i32 1}
!108 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi784, !109, !"__pci_fixup_quirk_ich4_lpc_acpi784", i1 false, i1 false}
!109 = !{!"../drivers/pci/quirks.c", i32 784, i32 1}
!110 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi785, !111, !"__pci_fixup_quirk_ich4_lpc_acpi785", i1 false, i1 false}
!111 = !{!"../drivers/pci/quirks.c", i32 785, i32 1}
!112 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi786, !113, !"__pci_fixup_quirk_ich4_lpc_acpi786", i1 false, i1 false}
!113 = !{!"../drivers/pci/quirks.c", i32 786, i32 1}
!114 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi787, !115, !"__pci_fixup_quirk_ich4_lpc_acpi787", i1 false, i1 false}
!115 = !{!"../drivers/pci/quirks.c", i32 787, i32 1}
!116 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi788, !117, !"__pci_fixup_quirk_ich4_lpc_acpi788", i1 false, i1 false}
!117 = !{!"../drivers/pci/quirks.c", i32 788, i32 1}
!118 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi789, !119, !"__pci_fixup_quirk_ich4_lpc_acpi789", i1 false, i1 false}
!119 = !{!"../drivers/pci/quirks.c", i32 789, i32 1}
!120 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi790, !121, !"__pci_fixup_quirk_ich4_lpc_acpi790", i1 false, i1 false}
!121 = !{!"../drivers/pci/quirks.c", i32 790, i32 1}
!122 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi791, !123, !"__pci_fixup_quirk_ich4_lpc_acpi791", i1 false, i1 false}
!123 = !{!"../drivers/pci/quirks.c", i32 791, i32 1}
!124 = !{ptr @__pci_fixup_quirk_ich4_lpc_acpi792, !125, !"__pci_fixup_quirk_ich4_lpc_acpi792", i1 false, i1 false}
!125 = !{!"../drivers/pci/quirks.c", i32 792, i32 1}
!126 = !{ptr @__pci_fixup_quirk_ich6_lpc850, !127, !"__pci_fixup_quirk_ich6_lpc850", i1 false, i1 false}
!127 = !{!"../drivers/pci/quirks.c", i32 850, i32 1}
!128 = !{ptr @__pci_fixup_quirk_ich6_lpc851, !129, !"__pci_fixup_quirk_ich6_lpc851", i1 false, i1 false}
!129 = !{!"../drivers/pci/quirks.c", i32 851, i32 1}
!130 = !{ptr @__pci_fixup_quirk_ich7_lpc889, !131, !"__pci_fixup_quirk_ich7_lpc889", i1 false, i1 false}
!131 = !{!"../drivers/pci/quirks.c", i32 889, i32 1}
!132 = !{ptr @__pci_fixup_quirk_ich7_lpc890, !133, !"__pci_fixup_quirk_ich7_lpc890", i1 false, i1 false}
!133 = !{!"../drivers/pci/quirks.c", i32 890, i32 1}
!134 = !{ptr @__pci_fixup_quirk_ich7_lpc891, !135, !"__pci_fixup_quirk_ich7_lpc891", i1 false, i1 false}
!135 = !{!"../drivers/pci/quirks.c", i32 891, i32 1}
!136 = !{ptr @__pci_fixup_quirk_ich7_lpc892, !137, !"__pci_fixup_quirk_ich7_lpc892", i1 false, i1 false}
!137 = !{!"../drivers/pci/quirks.c", i32 892, i32 1}
!138 = !{ptr @__pci_fixup_quirk_ich7_lpc893, !139, !"__pci_fixup_quirk_ich7_lpc893", i1 false, i1 false}
!139 = !{!"../drivers/pci/quirks.c", i32 893, i32 1}
!140 = !{ptr @__pci_fixup_quirk_ich7_lpc894, !141, !"__pci_fixup_quirk_ich7_lpc894", i1 false, i1 false}
!141 = !{!"../drivers/pci/quirks.c", i32 894, i32 1}
!142 = !{ptr @__pci_fixup_quirk_ich7_lpc895, !143, !"__pci_fixup_quirk_ich7_lpc895", i1 false, i1 false}
!143 = !{!"../drivers/pci/quirks.c", i32 895, i32 1}
!144 = !{ptr @__pci_fixup_quirk_ich7_lpc896, !145, !"__pci_fixup_quirk_ich7_lpc896", i1 false, i1 false}
!145 = !{!"../drivers/pci/quirks.c", i32 896, i32 1}
!146 = !{ptr @__pci_fixup_quirk_ich7_lpc897, !147, !"__pci_fixup_quirk_ich7_lpc897", i1 false, i1 false}
!147 = !{!"../drivers/pci/quirks.c", i32 897, i32 1}
!148 = !{ptr @__pci_fixup_quirk_ich7_lpc898, !149, !"__pci_fixup_quirk_ich7_lpc898", i1 false, i1 false}
!149 = !{!"../drivers/pci/quirks.c", i32 898, i32 1}
!150 = !{ptr @__pci_fixup_quirk_ich7_lpc899, !151, !"__pci_fixup_quirk_ich7_lpc899", i1 false, i1 false}
!151 = !{!"../drivers/pci/quirks.c", i32 899, i32 1}
!152 = !{ptr @__pci_fixup_quirk_ich7_lpc900, !153, !"__pci_fixup_quirk_ich7_lpc900", i1 false, i1 false}
!153 = !{!"../drivers/pci/quirks.c", i32 900, i32 1}
!154 = !{ptr @__pci_fixup_quirk_ich7_lpc901, !155, !"__pci_fixup_quirk_ich7_lpc901", i1 false, i1 false}
!155 = !{!"../drivers/pci/quirks.c", i32 901, i32 1}
!156 = !{ptr @__pci_fixup_quirk_vt82c586_acpi913, !157, !"__pci_fixup_quirk_vt82c586_acpi913", i1 false, i1 false}
!157 = !{!"../drivers/pci/quirks.c", i32 913, i32 1}
!158 = !{ptr @__pci_fixup_quirk_vt82c686_acpi930, !159, !"__pci_fixup_quirk_vt82c686_acpi930", i1 false, i1 false}
!159 = !{!"../drivers/pci/quirks.c", i32 930, i32 1}
!160 = !{ptr @__pci_fixup_quirk_vt8235_acpi942, !161, !"__pci_fixup_quirk_vt8235_acpi942", i1 false, i1 false}
!161 = !{!"../drivers/pci/quirks.c", i32 942, i32 1}
!162 = !{ptr @__pci_fixup_quirk_xio2000a961, !163, !"__pci_fixup_quirk_xio2000a961", i1 false, i1 false}
!163 = !{!"../drivers/pci/quirks.c", i32 960, i32 1}
!164 = !{ptr @__pci_fixup_quirk_amd_8131_mmrbc1054, !165, !"__pci_fixup_quirk_amd_8131_mmrbc1054", i1 false, i1 false}
!165 = !{!"../drivers/pci/quirks.c", i32 1054, i32 1}
!166 = !{ptr @__pci_fixup_quirk_via_acpi1073, !167, !"__pci_fixup_quirk_via_acpi1073", i1 false, i1 false}
!167 = !{!"../drivers/pci/quirks.c", i32 1073, i32 1}
!168 = !{ptr @__pci_fixup_quirk_via_acpi1074, !169, !"__pci_fixup_quirk_via_acpi1074", i1 false, i1 false}
!169 = !{!"../drivers/pci/quirks.c", i32 1074, i32 1}
!170 = !{ptr @__pci_fixup_quirk_via_bridge1107, !171, !"__pci_fixup_quirk_via_bridge1107", i1 false, i1 false}
!171 = !{!"../drivers/pci/quirks.c", i32 1107, i32 1}
!172 = !{ptr @__pci_fixup_quirk_via_bridge1108, !173, !"__pci_fixup_quirk_via_bridge1108", i1 false, i1 false}
!173 = !{!"../drivers/pci/quirks.c", i32 1108, i32 1}
!174 = !{ptr @__pci_fixup_quirk_via_bridge1109, !175, !"__pci_fixup_quirk_via_bridge1109", i1 false, i1 false}
!175 = !{!"../drivers/pci/quirks.c", i32 1109, i32 1}
!176 = !{ptr @__pci_fixup_quirk_via_bridge1110, !177, !"__pci_fixup_quirk_via_bridge1110", i1 false, i1 false}
!177 = !{!"../drivers/pci/quirks.c", i32 1110, i32 1}
!178 = !{ptr @__pci_fixup_quirk_via_bridge1111, !179, !"__pci_fixup_quirk_via_bridge1111", i1 false, i1 false}
!179 = !{!"../drivers/pci/quirks.c", i32 1111, i32 1}
!180 = !{ptr @__pci_fixup_quirk_via_bridge1112, !181, !"__pci_fixup_quirk_via_bridge1112", i1 false, i1 false}
!181 = !{!"../drivers/pci/quirks.c", i32 1112, i32 1}
!182 = !{ptr @__pci_fixup_quirk_via_bridge1113, !183, !"__pci_fixup_quirk_via_bridge1113", i1 false, i1 false}
!183 = !{!"../drivers/pci/quirks.c", i32 1113, i32 1}
!184 = !{ptr @__pci_fixup_quirk_via_bridge1114, !185, !"__pci_fixup_quirk_via_bridge1114", i1 false, i1 false}
!185 = !{!"../drivers/pci/quirks.c", i32 1114, i32 1}
!186 = !{ptr @__pci_fixup_quirk_via_vlink1158, !187, !"__pci_fixup_quirk_via_vlink1158", i1 false, i1 false}
!187 = !{!"../drivers/pci/quirks.c", i32 1158, i32 1}
!188 = !{ptr @__pci_fixup_quirk_vt82c598_id1170, !189, !"__pci_fixup_quirk_vt82c598_id1170", i1 false, i1 false}
!189 = !{!"../drivers/pci/quirks.c", i32 1170, i32 1}
!190 = !{ptr @__pci_fixup_quirk_cardbus_legacy1183, !191, !"__pci_fixup_quirk_cardbus_legacy1183", i1 false, i1 false}
!191 = !{!"../drivers/pci/quirks.c", i32 1182, i32 1}
!192 = !{ptr @__pci_fixup_resume_earlyquirk_cardbus_legacy1185, !193, !"__pci_fixup_resume_earlyquirk_cardbus_legacy1185", i1 false, i1 false}
!193 = !{!"../drivers/pci/quirks.c", i32 1184, i32 1}
!194 = !{ptr @__pci_fixup_quirk_amd_ordering1207, !195, !"__pci_fixup_quirk_amd_ordering1207", i1 false, i1 false}
!195 = !{!"../drivers/pci/quirks.c", i32 1207, i32 1}
!196 = !{ptr @__pci_fixup_resume_earlyquirk_amd_ordering1208, !197, !"__pci_fixup_resume_earlyquirk_amd_ordering1208", i1 false, i1 false}
!197 = !{!"../drivers/pci/quirks.c", i32 1208, i32 1}
!198 = !{ptr @__pci_fixup_quirk_dunord1225, !199, !"__pci_fixup_quirk_dunord1225", i1 false, i1 false}
!199 = !{!"../drivers/pci/quirks.c", i32 1225, i32 1}
!200 = !{ptr @__pci_fixup_quirk_transparent_bridge1236, !201, !"__pci_fixup_quirk_transparent_bridge1236", i1 false, i1 false}
!201 = !{!"../drivers/pci/quirks.c", i32 1236, i32 1}
!202 = !{ptr @__pci_fixup_quirk_transparent_bridge1237, !203, !"__pci_fixup_quirk_transparent_bridge1237", i1 false, i1 false}
!203 = !{!"../drivers/pci/quirks.c", i32 1237, i32 1}
!204 = !{ptr @__pci_fixup_quirk_mediagx_master1257, !205, !"__pci_fixup_quirk_mediagx_master1257", i1 false, i1 false}
!205 = !{!"../drivers/pci/quirks.c", i32 1257, i32 1}
!206 = !{ptr @__pci_fixup_resumequirk_mediagx_master1258, !207, !"__pci_fixup_resumequirk_mediagx_master1258", i1 false, i1 false}
!207 = !{!"../drivers/pci/quirks.c", i32 1258, i32 1}
!208 = !{ptr @__pci_fixup_quirk_disable_pxb1278, !209, !"__pci_fixup_quirk_disable_pxb1278", i1 false, i1 false}
!209 = !{!"../drivers/pci/quirks.c", i32 1278, i32 1}
!210 = !{ptr @__pci_fixup_resume_earlyquirk_disable_pxb1279, !211, !"__pci_fixup_resume_earlyquirk_disable_pxb1279", i1 false, i1 false}
!211 = !{!"../drivers/pci/quirks.c", i32 1279, i32 1}
!212 = !{ptr @__pci_fixup_quirk_amd_ide_mode1298, !213, !"__pci_fixup_quirk_amd_ide_mode1298", i1 false, i1 false}
!213 = !{!"../drivers/pci/quirks.c", i32 1298, i32 1}
!214 = !{ptr @__pci_fixup_resume_earlyquirk_amd_ide_mode1299, !215, !"__pci_fixup_resume_earlyquirk_amd_ide_mode1299", i1 false, i1 false}
!215 = !{!"../drivers/pci/quirks.c", i32 1299, i32 1}
!216 = !{ptr @__pci_fixup_quirk_amd_ide_mode1300, !217, !"__pci_fixup_quirk_amd_ide_mode1300", i1 false, i1 false}
!217 = !{!"../drivers/pci/quirks.c", i32 1300, i32 1}
!218 = !{ptr @__pci_fixup_resume_earlyquirk_amd_ide_mode1301, !219, !"__pci_fixup_resume_earlyquirk_amd_ide_mode1301", i1 false, i1 false}
!219 = !{!"../drivers/pci/quirks.c", i32 1301, i32 1}
!220 = !{ptr @__pci_fixup_quirk_amd_ide_mode1302, !221, !"__pci_fixup_quirk_amd_ide_mode1302", i1 false, i1 false}
!221 = !{!"../drivers/pci/quirks.c", i32 1302, i32 1}
!222 = !{ptr @__pci_fixup_resume_earlyquirk_amd_ide_mode1303, !223, !"__pci_fixup_resume_earlyquirk_amd_ide_mode1303", i1 false, i1 false}
!223 = !{!"../drivers/pci/quirks.c", i32 1303, i32 1}
!224 = !{ptr @__pci_fixup_quirk_amd_ide_mode1304, !225, !"__pci_fixup_quirk_amd_ide_mode1304", i1 false, i1 false}
!225 = !{!"../drivers/pci/quirks.c", i32 1304, i32 1}
!226 = !{ptr @__pci_fixup_resume_earlyquirk_amd_ide_mode1305, !227, !"__pci_fixup_resume_earlyquirk_amd_ide_mode1305", i1 false, i1 false}
!227 = !{!"../drivers/pci/quirks.c", i32 1305, i32 1}
!228 = !{ptr @__pci_fixup_quirk_svwks_csb5ide1319, !229, !"__pci_fixup_quirk_svwks_csb5ide1319", i1 false, i1 false}
!229 = !{!"../drivers/pci/quirks.c", i32 1319, i32 1}
!230 = !{ptr @__pci_fixup_quirk_ide_samemode1335, !231, !"__pci_fixup_quirk_ide_samemode1335", i1 false, i1 false}
!231 = !{!"../drivers/pci/quirks.c", i32 1335, i32 1}
!232 = !{ptr @__pci_fixup_quirk_no_ata_d31344, !233, !"__pci_fixup_quirk_no_ata_d31344", i1 false, i1 false}
!233 = !{!"../drivers/pci/quirks.c", i32 1343, i32 1}
!234 = !{ptr @__pci_fixup_quirk_no_ata_d31346, !235, !"__pci_fixup_quirk_no_ata_d31346", i1 false, i1 false}
!235 = !{!"../drivers/pci/quirks.c", i32 1345, i32 1}
!236 = !{ptr @__pci_fixup_quirk_no_ata_d31349, !237, !"__pci_fixup_quirk_no_ata_d31349", i1 false, i1 false}
!237 = !{!"../drivers/pci/quirks.c", i32 1348, i32 1}
!238 = !{ptr @__pci_fixup_quirk_no_ata_d31353, !239, !"__pci_fixup_quirk_no_ata_d31353", i1 false, i1 false}
!239 = !{!"../drivers/pci/quirks.c", i32 1352, i32 1}
!240 = !{ptr @__pci_fixup_quirk_eisa_bridge1363, !241, !"__pci_fixup_quirk_eisa_bridge1363", i1 false, i1 false}
!241 = !{!"../drivers/pci/quirks.c", i32 1363, i32 1}
!242 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1510, !243, !"__pci_fixup_asus_hides_smbus_hostbridge1510", i1 false, i1 false}
!243 = !{!"../drivers/pci/quirks.c", i32 1510, i32 1}
!244 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1511, !245, !"__pci_fixup_asus_hides_smbus_hostbridge1511", i1 false, i1 false}
!245 = !{!"../drivers/pci/quirks.c", i32 1511, i32 1}
!246 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1512, !247, !"__pci_fixup_asus_hides_smbus_hostbridge1512", i1 false, i1 false}
!247 = !{!"../drivers/pci/quirks.c", i32 1512, i32 1}
!248 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1513, !249, !"__pci_fixup_asus_hides_smbus_hostbridge1513", i1 false, i1 false}
!249 = !{!"../drivers/pci/quirks.c", i32 1513, i32 1}
!250 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1514, !251, !"__pci_fixup_asus_hides_smbus_hostbridge1514", i1 false, i1 false}
!251 = !{!"../drivers/pci/quirks.c", i32 1514, i32 1}
!252 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1515, !253, !"__pci_fixup_asus_hides_smbus_hostbridge1515", i1 false, i1 false}
!253 = !{!"../drivers/pci/quirks.c", i32 1515, i32 1}
!254 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1516, !255, !"__pci_fixup_asus_hides_smbus_hostbridge1516", i1 false, i1 false}
!255 = !{!"../drivers/pci/quirks.c", i32 1516, i32 1}
!256 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1517, !257, !"__pci_fixup_asus_hides_smbus_hostbridge1517", i1 false, i1 false}
!257 = !{!"../drivers/pci/quirks.c", i32 1517, i32 1}
!258 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1518, !259, !"__pci_fixup_asus_hides_smbus_hostbridge1518", i1 false, i1 false}
!259 = !{!"../drivers/pci/quirks.c", i32 1518, i32 1}
!260 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1519, !261, !"__pci_fixup_asus_hides_smbus_hostbridge1519", i1 false, i1 false}
!261 = !{!"../drivers/pci/quirks.c", i32 1519, i32 1}
!262 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1521, !263, !"__pci_fixup_asus_hides_smbus_hostbridge1521", i1 false, i1 false}
!263 = !{!"../drivers/pci/quirks.c", i32 1521, i32 1}
!264 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1522, !265, !"__pci_fixup_asus_hides_smbus_hostbridge1522", i1 false, i1 false}
!265 = !{!"../drivers/pci/quirks.c", i32 1522, i32 1}
!266 = !{ptr @__pci_fixup_asus_hides_smbus_hostbridge1523, !267, !"__pci_fixup_asus_hides_smbus_hostbridge1523", i1 false, i1 false}
!267 = !{!"../drivers/pci/quirks.c", i32 1523, i32 1}
!268 = !{ptr @__pci_fixup_asus_hides_smbus_lpc1543, !269, !"__pci_fixup_asus_hides_smbus_lpc1543", i1 false, i1 false}
!269 = !{!"../drivers/pci/quirks.c", i32 1543, i32 1}
!270 = !{ptr @__pci_fixup_asus_hides_smbus_lpc1544, !271, !"__pci_fixup_asus_hides_smbus_lpc1544", i1 false, i1 false}
!271 = !{!"../drivers/pci/quirks.c", i32 1544, i32 1}
!272 = !{ptr @__pci_fixup_asus_hides_smbus_lpc1545, !273, !"__pci_fixup_asus_hides_smbus_lpc1545", i1 false, i1 false}
!273 = !{!"../drivers/pci/quirks.c", i32 1545, i32 1}
!274 = !{ptr @__pci_fixup_asus_hides_smbus_lpc1546, !275, !"__pci_fixup_asus_hides_smbus_lpc1546", i1 false, i1 false}
!275 = !{!"../drivers/pci/quirks.c", i32 1546, i32 1}
!276 = !{ptr @__pci_fixup_asus_hides_smbus_lpc1547, !277, !"__pci_fixup_asus_hides_smbus_lpc1547", i1 false, i1 false}
!277 = !{!"../drivers/pci/quirks.c", i32 1547, i32 1}
!278 = !{ptr @__pci_fixup_asus_hides_smbus_lpc1548, !279, !"__pci_fixup_asus_hides_smbus_lpc1548", i1 false, i1 false}
!279 = !{!"../drivers/pci/quirks.c", i32 1548, i32 1}
!280 = !{ptr @__pci_fixup_asus_hides_smbus_lpc1549, !281, !"__pci_fixup_asus_hides_smbus_lpc1549", i1 false, i1 false}
!281 = !{!"../drivers/pci/quirks.c", i32 1549, i32 1}
!282 = !{ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1550, !283, !"__pci_fixup_resume_earlyasus_hides_smbus_lpc1550", i1 false, i1 false}
!283 = !{!"../drivers/pci/quirks.c", i32 1550, i32 1}
!284 = !{ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1551, !285, !"__pci_fixup_resume_earlyasus_hides_smbus_lpc1551", i1 false, i1 false}
!285 = !{!"../drivers/pci/quirks.c", i32 1551, i32 1}
!286 = !{ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1552, !287, !"__pci_fixup_resume_earlyasus_hides_smbus_lpc1552", i1 false, i1 false}
!287 = !{!"../drivers/pci/quirks.c", i32 1552, i32 1}
!288 = !{ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1553, !289, !"__pci_fixup_resume_earlyasus_hides_smbus_lpc1553", i1 false, i1 false}
!289 = !{!"../drivers/pci/quirks.c", i32 1553, i32 1}
!290 = !{ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1554, !291, !"__pci_fixup_resume_earlyasus_hides_smbus_lpc1554", i1 false, i1 false}
!291 = !{!"../drivers/pci/quirks.c", i32 1554, i32 1}
!292 = !{ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1555, !293, !"__pci_fixup_resume_earlyasus_hides_smbus_lpc1555", i1 false, i1 false}
!293 = !{!"../drivers/pci/quirks.c", i32 1555, i32 1}
!294 = !{ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc1556, !295, !"__pci_fixup_resume_earlyasus_hides_smbus_lpc1556", i1 false, i1 false}
!295 = !{!"../drivers/pci/quirks.c", i32 1556, i32 1}
!296 = !{ptr @__pci_fixup_asus_hides_smbus_lpc_ich61605, !297, !"__pci_fixup_asus_hides_smbus_lpc_ich61605", i1 false, i1 false}
!297 = !{!"../drivers/pci/quirks.c", i32 1605, i32 1}
!298 = !{ptr @__pci_fixup_suspendasus_hides_smbus_lpc_ich6_suspend1606, !299, !"__pci_fixup_suspendasus_hides_smbus_lpc_ich6_suspend1606", i1 false, i1 false}
!299 = !{!"../drivers/pci/quirks.c", i32 1606, i32 1}
!300 = !{ptr @__pci_fixup_resumeasus_hides_smbus_lpc_ich6_resume1607, !301, !"__pci_fixup_resumeasus_hides_smbus_lpc_ich6_resume1607", i1 false, i1 false}
!301 = !{!"../drivers/pci/quirks.c", i32 1607, i32 1}
!302 = !{ptr @__pci_fixup_resume_earlyasus_hides_smbus_lpc_ich6_resume_early1608, !303, !"__pci_fixup_resume_earlyasus_hides_smbus_lpc_ich6_resume_early1608", i1 false, i1 false}
!303 = !{!"../drivers/pci/quirks.c", i32 1608, i32 1}
!304 = !{ptr @__pci_fixup_quirk_sis_96x_smbus1620, !305, !"__pci_fixup_quirk_sis_96x_smbus1620", i1 false, i1 false}
!305 = !{!"../drivers/pci/quirks.c", i32 1620, i32 1}
!306 = !{ptr @__pci_fixup_quirk_sis_96x_smbus1621, !307, !"__pci_fixup_quirk_sis_96x_smbus1621", i1 false, i1 false}
!307 = !{!"../drivers/pci/quirks.c", i32 1621, i32 1}
!308 = !{ptr @__pci_fixup_quirk_sis_96x_smbus1622, !309, !"__pci_fixup_quirk_sis_96x_smbus1622", i1 false, i1 false}
!309 = !{!"../drivers/pci/quirks.c", i32 1622, i32 1}
!310 = !{ptr @__pci_fixup_quirk_sis_96x_smbus1623, !311, !"__pci_fixup_quirk_sis_96x_smbus1623", i1 false, i1 false}
!311 = !{!"../drivers/pci/quirks.c", i32 1623, i32 1}
!312 = !{ptr @__pci_fixup_resume_earlyquirk_sis_96x_smbus1624, !313, !"__pci_fixup_resume_earlyquirk_sis_96x_smbus1624", i1 false, i1 false}
!313 = !{!"../drivers/pci/quirks.c", i32 1624, i32 1}
!314 = !{ptr @__pci_fixup_resume_earlyquirk_sis_96x_smbus1625, !315, !"__pci_fixup_resume_earlyquirk_sis_96x_smbus1625", i1 false, i1 false}
!315 = !{!"../drivers/pci/quirks.c", i32 1625, i32 1}
!316 = !{ptr @__pci_fixup_resume_earlyquirk_sis_96x_smbus1626, !317, !"__pci_fixup_resume_earlyquirk_sis_96x_smbus1626", i1 false, i1 false}
!317 = !{!"../drivers/pci/quirks.c", i32 1626, i32 1}
!318 = !{ptr @__pci_fixup_resume_earlyquirk_sis_96x_smbus1627, !319, !"__pci_fixup_resume_earlyquirk_sis_96x_smbus1627", i1 false, i1 false}
!319 = !{!"../drivers/pci/quirks.c", i32 1627, i32 1}
!320 = !{ptr @__pci_fixup_quirk_sis_5031660, !321, !"__pci_fixup_quirk_sis_5031660", i1 false, i1 false}
!321 = !{!"../drivers/pci/quirks.c", i32 1660, i32 1}
!322 = !{ptr @__pci_fixup_resume_earlyquirk_sis_5031661, !323, !"__pci_fixup_resume_earlyquirk_sis_5031661", i1 false, i1 false}
!323 = !{!"../drivers/pci/quirks.c", i32 1661, i32 1}
!324 = !{ptr @__pci_fixup_asus_hides_ac97_lpc1693, !325, !"__pci_fixup_asus_hides_ac97_lpc1693", i1 false, i1 false}
!325 = !{!"../drivers/pci/quirks.c", i32 1693, i32 1}
!326 = !{ptr @__pci_fixup_resume_earlyasus_hides_ac97_lpc1694, !327, !"__pci_fixup_resume_earlyasus_hides_ac97_lpc1694", i1 false, i1 false}
!327 = !{!"../drivers/pci/quirks.c", i32 1694, i32 1}
!328 = !{ptr @__pci_fixup_quirk_jmicron_ata1755, !329, !"__pci_fixup_quirk_jmicron_ata1755", i1 false, i1 false}
!329 = !{!"../drivers/pci/quirks.c", i32 1755, i32 1}
!330 = !{ptr @__pci_fixup_quirk_jmicron_ata1756, !331, !"__pci_fixup_quirk_jmicron_ata1756", i1 false, i1 false}
!331 = !{!"../drivers/pci/quirks.c", i32 1756, i32 1}
!332 = !{ptr @__pci_fixup_quirk_jmicron_ata1757, !333, !"__pci_fixup_quirk_jmicron_ata1757", i1 false, i1 false}
!333 = !{!"../drivers/pci/quirks.c", i32 1757, i32 1}
!334 = !{ptr @__pci_fixup_quirk_jmicron_ata1758, !335, !"__pci_fixup_quirk_jmicron_ata1758", i1 false, i1 false}
!335 = !{!"../drivers/pci/quirks.c", i32 1758, i32 1}
!336 = !{ptr @__pci_fixup_quirk_jmicron_ata1759, !337, !"__pci_fixup_quirk_jmicron_ata1759", i1 false, i1 false}
!337 = !{!"../drivers/pci/quirks.c", i32 1759, i32 1}
!338 = !{ptr @__pci_fixup_quirk_jmicron_ata1760, !339, !"__pci_fixup_quirk_jmicron_ata1760", i1 false, i1 false}
!339 = !{!"../drivers/pci/quirks.c", i32 1760, i32 1}
!340 = !{ptr @__pci_fixup_quirk_jmicron_ata1761, !341, !"__pci_fixup_quirk_jmicron_ata1761", i1 false, i1 false}
!341 = !{!"../drivers/pci/quirks.c", i32 1761, i32 1}
!342 = !{ptr @__pci_fixup_quirk_jmicron_ata1762, !343, !"__pci_fixup_quirk_jmicron_ata1762", i1 false, i1 false}
!343 = !{!"../drivers/pci/quirks.c", i32 1762, i32 1}
!344 = !{ptr @__pci_fixup_quirk_jmicron_ata1763, !345, !"__pci_fixup_quirk_jmicron_ata1763", i1 false, i1 false}
!345 = !{!"../drivers/pci/quirks.c", i32 1763, i32 1}
!346 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1764, !347, !"__pci_fixup_resume_earlyquirk_jmicron_ata1764", i1 false, i1 false}
!347 = !{!"../drivers/pci/quirks.c", i32 1764, i32 1}
!348 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1765, !349, !"__pci_fixup_resume_earlyquirk_jmicron_ata1765", i1 false, i1 false}
!349 = !{!"../drivers/pci/quirks.c", i32 1765, i32 1}
!350 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1766, !351, !"__pci_fixup_resume_earlyquirk_jmicron_ata1766", i1 false, i1 false}
!351 = !{!"../drivers/pci/quirks.c", i32 1766, i32 1}
!352 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1767, !353, !"__pci_fixup_resume_earlyquirk_jmicron_ata1767", i1 false, i1 false}
!353 = !{!"../drivers/pci/quirks.c", i32 1767, i32 1}
!354 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1768, !355, !"__pci_fixup_resume_earlyquirk_jmicron_ata1768", i1 false, i1 false}
!355 = !{!"../drivers/pci/quirks.c", i32 1768, i32 1}
!356 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1769, !357, !"__pci_fixup_resume_earlyquirk_jmicron_ata1769", i1 false, i1 false}
!357 = !{!"../drivers/pci/quirks.c", i32 1769, i32 1}
!358 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1770, !359, !"__pci_fixup_resume_earlyquirk_jmicron_ata1770", i1 false, i1 false}
!359 = !{!"../drivers/pci/quirks.c", i32 1770, i32 1}
!360 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1771, !361, !"__pci_fixup_resume_earlyquirk_jmicron_ata1771", i1 false, i1 false}
!361 = !{!"../drivers/pci/quirks.c", i32 1771, i32 1}
!362 = !{ptr @__pci_fixup_resume_earlyquirk_jmicron_ata1772, !363, !"__pci_fixup_resume_earlyquirk_jmicron_ata1772", i1 false, i1 false}
!363 = !{!"../drivers/pci/quirks.c", i32 1772, i32 1}
!364 = !{ptr @__pci_fixup_quirk_jmicron_async_suspend1783, !365, !"__pci_fixup_quirk_jmicron_async_suspend1783", i1 false, i1 false}
!365 = !{!"../drivers/pci/quirks.c", i32 1783, i32 1}
!366 = !{ptr @__pci_fixup_quirk_jmicron_async_suspend1784, !367, !"__pci_fixup_quirk_jmicron_async_suspend1784", i1 false, i1 false}
!367 = !{!"../drivers/pci/quirks.c", i32 1784, i32 1}
!368 = !{ptr @__pci_fixup_quirk_jmicron_async_suspend1785, !369, !"__pci_fixup_quirk_jmicron_async_suspend1785", i1 false, i1 false}
!369 = !{!"../drivers/pci/quirks.c", i32 1785, i32 1}
!370 = !{ptr @__pci_fixup_quirk_jmicron_async_suspend1786, !371, !"__pci_fixup_quirk_jmicron_async_suspend1786", i1 false, i1 false}
!371 = !{!"../drivers/pci/quirks.c", i32 1786, i32 1}
!372 = !{ptr @__pci_fixup_quirk_pcie_mch1818, !373, !"__pci_fixup_quirk_pcie_mch1818", i1 false, i1 false}
!373 = !{!"../drivers/pci/quirks.c", i32 1818, i32 1}
!374 = !{ptr @__pci_fixup_quirk_pcie_mch1819, !375, !"__pci_fixup_quirk_pcie_mch1819", i1 false, i1 false}
!375 = !{!"../drivers/pci/quirks.c", i32 1819, i32 1}
!376 = !{ptr @__pci_fixup_quirk_pcie_mch1820, !377, !"__pci_fixup_quirk_pcie_mch1820", i1 false, i1 false}
!377 = !{!"../drivers/pci/quirks.c", i32 1820, i32 1}
!378 = !{ptr @__pci_fixup_quirk_pcie_mch1822, !379, !"__pci_fixup_quirk_pcie_mch1822", i1 false, i1 false}
!379 = !{!"../drivers/pci/quirks.c", i32 1822, i32 1}
!380 = !{ptr @__pci_fixup_quirk_huawei_pcie_sva1856, !381, !"__pci_fixup_quirk_huawei_pcie_sva1856", i1 false, i1 false}
!381 = !{!"../drivers/pci/quirks.c", i32 1856, i32 1}
!382 = !{ptr @__pci_fixup_quirk_huawei_pcie_sva1857, !383, !"__pci_fixup_quirk_huawei_pcie_sva1857", i1 false, i1 false}
!383 = !{!"../drivers/pci/quirks.c", i32 1857, i32 1}
!384 = !{ptr @__pci_fixup_quirk_huawei_pcie_sva1858, !385, !"__pci_fixup_quirk_huawei_pcie_sva1858", i1 false, i1 false}
!385 = !{!"../drivers/pci/quirks.c", i32 1858, i32 1}
!386 = !{ptr @__pci_fixup_quirk_huawei_pcie_sva1859, !387, !"__pci_fixup_quirk_huawei_pcie_sva1859", i1 false, i1 false}
!387 = !{!"../drivers/pci/quirks.c", i32 1859, i32 1}
!388 = !{ptr @__pci_fixup_quirk_huawei_pcie_sva1860, !389, !"__pci_fixup_quirk_huawei_pcie_sva1860", i1 false, i1 false}
!389 = !{!"../drivers/pci/quirks.c", i32 1860, i32 1}
!390 = !{ptr @__pci_fixup_quirk_huawei_pcie_sva1861, !391, !"__pci_fixup_quirk_huawei_pcie_sva1861", i1 false, i1 false}
!391 = !{!"../drivers/pci/quirks.c", i32 1861, i32 1}
!392 = !{ptr @__pci_fixup_quirk_pcie_pxh1872, !393, !"__pci_fixup_quirk_pcie_pxh1872", i1 false, i1 false}
!393 = !{!"../drivers/pci/quirks.c", i32 1872, i32 1}
!394 = !{ptr @__pci_fixup_quirk_pcie_pxh1873, !395, !"__pci_fixup_quirk_pcie_pxh1873", i1 false, i1 false}
!395 = !{!"../drivers/pci/quirks.c", i32 1873, i32 1}
!396 = !{ptr @__pci_fixup_quirk_pcie_pxh1874, !397, !"__pci_fixup_quirk_pcie_pxh1874", i1 false, i1 false}
!397 = !{!"../drivers/pci/quirks.c", i32 1874, i32 1}
!398 = !{ptr @__pci_fixup_quirk_pcie_pxh1875, !399, !"__pci_fixup_quirk_pcie_pxh1875", i1 false, i1 false}
!399 = !{!"../drivers/pci/quirks.c", i32 1875, i32 1}
!400 = !{ptr @__pci_fixup_quirk_pcie_pxh1876, !401, !"__pci_fixup_quirk_pcie_pxh1876", i1 false, i1 false}
!401 = !{!"../drivers/pci/quirks.c", i32 1876, i32 1}
!402 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1887, !403, !"__pci_fixup_quirk_intel_pcie_pm1887", i1 false, i1 false}
!403 = !{!"../drivers/pci/quirks.c", i32 1887, i32 1}
!404 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1888, !405, !"__pci_fixup_quirk_intel_pcie_pm1888", i1 false, i1 false}
!405 = !{!"../drivers/pci/quirks.c", i32 1888, i32 1}
!406 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1889, !407, !"__pci_fixup_quirk_intel_pcie_pm1889", i1 false, i1 false}
!407 = !{!"../drivers/pci/quirks.c", i32 1889, i32 1}
!408 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1890, !409, !"__pci_fixup_quirk_intel_pcie_pm1890", i1 false, i1 false}
!409 = !{!"../drivers/pci/quirks.c", i32 1890, i32 1}
!410 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1891, !411, !"__pci_fixup_quirk_intel_pcie_pm1891", i1 false, i1 false}
!411 = !{!"../drivers/pci/quirks.c", i32 1891, i32 1}
!412 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1892, !413, !"__pci_fixup_quirk_intel_pcie_pm1892", i1 false, i1 false}
!413 = !{!"../drivers/pci/quirks.c", i32 1892, i32 1}
!414 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1893, !415, !"__pci_fixup_quirk_intel_pcie_pm1893", i1 false, i1 false}
!415 = !{!"../drivers/pci/quirks.c", i32 1893, i32 1}
!416 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1894, !417, !"__pci_fixup_quirk_intel_pcie_pm1894", i1 false, i1 false}
!417 = !{!"../drivers/pci/quirks.c", i32 1894, i32 1}
!418 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1895, !419, !"__pci_fixup_quirk_intel_pcie_pm1895", i1 false, i1 false}
!419 = !{!"../drivers/pci/quirks.c", i32 1895, i32 1}
!420 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1896, !421, !"__pci_fixup_quirk_intel_pcie_pm1896", i1 false, i1 false}
!421 = !{!"../drivers/pci/quirks.c", i32 1896, i32 1}
!422 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1897, !423, !"__pci_fixup_quirk_intel_pcie_pm1897", i1 false, i1 false}
!423 = !{!"../drivers/pci/quirks.c", i32 1897, i32 1}
!424 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1898, !425, !"__pci_fixup_quirk_intel_pcie_pm1898", i1 false, i1 false}
!425 = !{!"../drivers/pci/quirks.c", i32 1898, i32 1}
!426 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1899, !427, !"__pci_fixup_quirk_intel_pcie_pm1899", i1 false, i1 false}
!427 = !{!"../drivers/pci/quirks.c", i32 1899, i32 1}
!428 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1900, !429, !"__pci_fixup_quirk_intel_pcie_pm1900", i1 false, i1 false}
!429 = !{!"../drivers/pci/quirks.c", i32 1900, i32 1}
!430 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1901, !431, !"__pci_fixup_quirk_intel_pcie_pm1901", i1 false, i1 false}
!431 = !{!"../drivers/pci/quirks.c", i32 1901, i32 1}
!432 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1902, !433, !"__pci_fixup_quirk_intel_pcie_pm1902", i1 false, i1 false}
!433 = !{!"../drivers/pci/quirks.c", i32 1902, i32 1}
!434 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1903, !435, !"__pci_fixup_quirk_intel_pcie_pm1903", i1 false, i1 false}
!435 = !{!"../drivers/pci/quirks.c", i32 1903, i32 1}
!436 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1904, !437, !"__pci_fixup_quirk_intel_pcie_pm1904", i1 false, i1 false}
!437 = !{!"../drivers/pci/quirks.c", i32 1904, i32 1}
!438 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1905, !439, !"__pci_fixup_quirk_intel_pcie_pm1905", i1 false, i1 false}
!439 = !{!"../drivers/pci/quirks.c", i32 1905, i32 1}
!440 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1906, !441, !"__pci_fixup_quirk_intel_pcie_pm1906", i1 false, i1 false}
!441 = !{!"../drivers/pci/quirks.c", i32 1906, i32 1}
!442 = !{ptr @__pci_fixup_quirk_intel_pcie_pm1907, !443, !"__pci_fixup_quirk_intel_pcie_pm1907", i1 false, i1 false}
!443 = !{!"../drivers/pci/quirks.c", i32 1907, i32 1}
!444 = !{ptr @__pci_fixup_quirk_radeon_pm1925, !445, !"__pci_fixup_quirk_radeon_pm1925", i1 false, i1 false}
!445 = !{!"../drivers/pci/quirks.c", i32 1925, i32 1}
!446 = !{ptr @__pci_fixup_quirk_ryzen_xhci_d3hot1940, !447, !"__pci_fixup_quirk_ryzen_xhci_d3hot1940", i1 false, i1 false}
!447 = !{!"../drivers/pci/quirks.c", i32 1940, i32 1}
!448 = !{ptr @__pci_fixup_quirk_ryzen_xhci_d3hot1941, !449, !"__pci_fixup_quirk_ryzen_xhci_d3hot1941", i1 false, i1 false}
!449 = !{!"../drivers/pci/quirks.c", i32 1941, i32 1}
!450 = !{ptr @__pci_fixup_quirk_ryzen_xhci_d3hot1942, !451, !"__pci_fixup_quirk_ryzen_xhci_d3hot1942", i1 false, i1 false}
!451 = !{!"../drivers/pci/quirks.c", i32 1942, i32 1}
!452 = !{ptr @__pci_fixup_quirk_tc86c001_ide2201, !453, !"__pci_fixup_quirk_tc86c001_ide2201", i1 false, i1 false}
!453 = !{!"../drivers/pci/quirks.c", i32 2199, i32 1}
!454 = !{ptr @__pci_fixup_quirk_plx_pci90502229, !455, !"__pci_fixup_quirk_plx_pci90502229", i1 false, i1 false}
!455 = !{!"../drivers/pci/quirks.c", i32 2228, i32 1}
!456 = !{ptr @__pci_fixup_quirk_plx_pci90502239, !457, !"__pci_fixup_quirk_plx_pci90502239", i1 false, i1 false}
!457 = !{!"../drivers/pci/quirks.c", i32 2239, i32 1}
!458 = !{ptr @__pci_fixup_quirk_plx_pci90502240, !459, !"__pci_fixup_quirk_plx_pci90502240", i1 false, i1 false}
!459 = !{!"../drivers/pci/quirks.c", i32 2240, i32 1}
!460 = !{ptr @__pci_fixup_quirk_netmos2277, !461, !"__pci_fixup_quirk_netmos2277", i1 false, i1 false}
!461 = !{!"../drivers/pci/quirks.c", i32 2276, i32 1}
!462 = !{ptr @__pci_fixup_quirk_e100_interrupt2343, !463, !"__pci_fixup_quirk_e100_interrupt2343", i1 false, i1 false}
!463 = !{!"../drivers/pci/quirks.c", i32 2342, i32 1}
!464 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2354, !465, !"__pci_fixup_quirk_disable_aspm_l0s2354", i1 false, i1 false}
!465 = !{!"../drivers/pci/quirks.c", i32 2354, i32 1}
!466 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2355, !467, !"__pci_fixup_quirk_disable_aspm_l0s2355", i1 false, i1 false}
!467 = !{!"../drivers/pci/quirks.c", i32 2355, i32 1}
!468 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2356, !469, !"__pci_fixup_quirk_disable_aspm_l0s2356", i1 false, i1 false}
!469 = !{!"../drivers/pci/quirks.c", i32 2356, i32 1}
!470 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2357, !471, !"__pci_fixup_quirk_disable_aspm_l0s2357", i1 false, i1 false}
!471 = !{!"../drivers/pci/quirks.c", i32 2357, i32 1}
!472 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2358, !473, !"__pci_fixup_quirk_disable_aspm_l0s2358", i1 false, i1 false}
!473 = !{!"../drivers/pci/quirks.c", i32 2358, i32 1}
!474 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2359, !475, !"__pci_fixup_quirk_disable_aspm_l0s2359", i1 false, i1 false}
!475 = !{!"../drivers/pci/quirks.c", i32 2359, i32 1}
!476 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2360, !477, !"__pci_fixup_quirk_disable_aspm_l0s2360", i1 false, i1 false}
!477 = !{!"../drivers/pci/quirks.c", i32 2360, i32 1}
!478 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2361, !479, !"__pci_fixup_quirk_disable_aspm_l0s2361", i1 false, i1 false}
!479 = !{!"../drivers/pci/quirks.c", i32 2361, i32 1}
!480 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2362, !481, !"__pci_fixup_quirk_disable_aspm_l0s2362", i1 false, i1 false}
!481 = !{!"../drivers/pci/quirks.c", i32 2362, i32 1}
!482 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2363, !483, !"__pci_fixup_quirk_disable_aspm_l0s2363", i1 false, i1 false}
!483 = !{!"../drivers/pci/quirks.c", i32 2363, i32 1}
!484 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2364, !485, !"__pci_fixup_quirk_disable_aspm_l0s2364", i1 false, i1 false}
!485 = !{!"../drivers/pci/quirks.c", i32 2364, i32 1}
!486 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2365, !487, !"__pci_fixup_quirk_disable_aspm_l0s2365", i1 false, i1 false}
!487 = !{!"../drivers/pci/quirks.c", i32 2365, i32 1}
!488 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2366, !489, !"__pci_fixup_quirk_disable_aspm_l0s2366", i1 false, i1 false}
!489 = !{!"../drivers/pci/quirks.c", i32 2366, i32 1}
!490 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s2367, !491, !"__pci_fixup_quirk_disable_aspm_l0s2367", i1 false, i1 false}
!491 = !{!"../drivers/pci/quirks.c", i32 2367, i32 1}
!492 = !{ptr @__pci_fixup_quirk_disable_aspm_l0s_l12380, !493, !"__pci_fixup_quirk_disable_aspm_l0s_l12380", i1 false, i1 false}
!493 = !{!"../drivers/pci/quirks.c", i32 2380, i32 1}
!494 = !{ptr @__pci_fixup_quirk_enable_clear_retrain_link2395, !495, !"__pci_fixup_quirk_enable_clear_retrain_link2395", i1 false, i1 false}
!495 = !{!"../drivers/pci/quirks.c", i32 2395, i32 1}
!496 = !{ptr @__pci_fixup_quirk_enable_clear_retrain_link2396, !497, !"__pci_fixup_quirk_enable_clear_retrain_link2396", i1 false, i1 false}
!497 = !{!"../drivers/pci/quirks.c", i32 2396, i32 1}
!498 = !{ptr @__pci_fixup_quirk_enable_clear_retrain_link2397, !499, !"__pci_fixup_quirk_enable_clear_retrain_link2397", i1 false, i1 false}
!499 = !{!"../drivers/pci/quirks.c", i32 2397, i32 1}
!500 = !{ptr @__pci_fixup_fixup_rev1_53c8102414, !501, !"__pci_fixup_fixup_rev1_53c8102414", i1 false, i1 false}
!501 = !{!"../drivers/pci/quirks.c", i32 2414, i32 1}
!502 = !{ptr @__pci_fixup_quirk_p64h2_1k_io2428, !503, !"__pci_fixup_quirk_p64h2_1k_io2428", i1 false, i1 false}
!503 = !{!"../drivers/pci/quirks.c", i32 2428, i32 1}
!504 = !{ptr @__pci_fixup_quirk_nvidia_ck804_pcie_aer_ext_cap2447, !505, !"__pci_fixup_quirk_nvidia_ck804_pcie_aer_ext_cap2447", i1 false, i1 false}
!505 = !{!"../drivers/pci/quirks.c", i32 2446, i32 1}
!506 = !{ptr @__pci_fixup_resume_earlyquirk_nvidia_ck804_pcie_aer_ext_cap2449, !507, !"__pci_fixup_resume_earlyquirk_nvidia_ck804_pcie_aer_ext_cap2449", i1 false, i1 false}
!507 = !{!"../drivers/pci/quirks.c", i32 2448, i32 1}
!508 = !{ptr @__pci_fixup_quirk_via_cx700_pci_parking_caching2501, !509, !"__pci_fixup_quirk_via_cx700_pci_parking_caching2501", i1 false, i1 false}
!509 = !{!"../drivers/pci/quirks.c", i32 2501, i32 1}
!510 = !{ptr @__pci_fixup_quirk_brcm_5719_limit_mrrs2518, !511, !"__pci_fixup_quirk_brcm_5719_limit_mrrs2518", i1 false, i1 false}
!511 = !{!"../drivers/pci/quirks.c", i32 2516, i32 1}
!512 = !{ptr @__pci_fixup_quirk_unhide_mch_dev62536, !513, !"__pci_fixup_quirk_unhide_mch_dev62536", i1 false, i1 false}
!513 = !{!"../drivers/pci/quirks.c", i32 2535, i32 1}
!514 = !{ptr @__pci_fixup_quirk_unhide_mch_dev62538, !515, !"__pci_fixup_quirk_unhide_mch_dev62538", i1 false, i1 false}
!515 = !{!"../drivers/pci/quirks.c", i32 2537, i32 1}
!516 = !{ptr @__pci_fixup_quirk_disable_all_msi2553, !517, !"__pci_fixup_quirk_disable_all_msi2553", i1 false, i1 false}
!517 = !{!"../drivers/pci/quirks.c", i32 2553, i32 1}
!518 = !{ptr @__pci_fixup_quirk_disable_all_msi2554, !519, !"__pci_fixup_quirk_disable_all_msi2554", i1 false, i1 false}
!519 = !{!"../drivers/pci/quirks.c", i32 2554, i32 1}
!520 = !{ptr @__pci_fixup_quirk_disable_all_msi2555, !521, !"__pci_fixup_quirk_disable_all_msi2555", i1 false, i1 false}
!521 = !{!"../drivers/pci/quirks.c", i32 2555, i32 1}
!522 = !{ptr @__pci_fixup_quirk_disable_all_msi2556, !523, !"__pci_fixup_quirk_disable_all_msi2556", i1 false, i1 false}
!523 = !{!"../drivers/pci/quirks.c", i32 2556, i32 1}
!524 = !{ptr @__pci_fixup_quirk_disable_all_msi2557, !525, !"__pci_fixup_quirk_disable_all_msi2557", i1 false, i1 false}
!525 = !{!"../drivers/pci/quirks.c", i32 2557, i32 1}
!526 = !{ptr @__pci_fixup_quirk_disable_all_msi2558, !527, !"__pci_fixup_quirk_disable_all_msi2558", i1 false, i1 false}
!527 = !{!"../drivers/pci/quirks.c", i32 2558, i32 1}
!528 = !{ptr @__pci_fixup_quirk_disable_all_msi2559, !529, !"__pci_fixup_quirk_disable_all_msi2559", i1 false, i1 false}
!529 = !{!"../drivers/pci/quirks.c", i32 2559, i32 1}
!530 = !{ptr @__pci_fixup_quirk_disable_all_msi2560, !531, !"__pci_fixup_quirk_disable_all_msi2560", i1 false, i1 false}
!531 = !{!"../drivers/pci/quirks.c", i32 2560, i32 1}
!532 = !{ptr @__pci_fixup_quirk_disable_all_msi2561, !533, !"__pci_fixup_quirk_disable_all_msi2561", i1 false, i1 false}
!533 = !{!"../drivers/pci/quirks.c", i32 2561, i32 1}
!534 = !{ptr @__pci_fixup_quirk_disable_msi2571, !535, !"__pci_fixup_quirk_disable_msi2571", i1 false, i1 false}
!535 = !{!"../drivers/pci/quirks.c", i32 2571, i32 1}
!536 = !{ptr @__pci_fixup_quirk_disable_msi2572, !537, !"__pci_fixup_quirk_disable_msi2572", i1 false, i1 false}
!537 = !{!"../drivers/pci/quirks.c", i32 2572, i32 1}
!538 = !{ptr @__pci_fixup_quirk_disable_msi2573, !539, !"__pci_fixup_quirk_disable_msi2573", i1 false, i1 false}
!539 = !{!"../drivers/pci/quirks.c", i32 2573, i32 1}
!540 = !{ptr @__pci_fixup_quirk_amd_780_apc_msi2592, !541, !"__pci_fixup_quirk_amd_780_apc_msi2592", i1 false, i1 false}
!541 = !{!"../drivers/pci/quirks.c", i32 2592, i32 1}
!542 = !{ptr @__pci_fixup_quirk_amd_780_apc_msi2593, !543, !"__pci_fixup_quirk_amd_780_apc_msi2593", i1 false, i1 false}
!543 = !{!"../drivers/pci/quirks.c", i32 2593, i32 1}
!544 = !{ptr @__pci_fixup_quirk_msi_ht_cap2628, !545, !"__pci_fixup_quirk_msi_ht_cap2628", i1 false, i1 false}
!545 = !{!"../drivers/pci/quirks.c", i32 2627, i32 1}
!546 = !{ptr @__pci_fixup_quirk_nvidia_ck804_msi_ht_cap2650, !547, !"__pci_fixup_quirk_nvidia_ck804_msi_ht_cap2650", i1 false, i1 false}
!547 = !{!"../drivers/pci/quirks.c", i32 2649, i32 1}
!548 = !{ptr @__pci_fixup_ht_enable_msi_mapping2674, !549, !"__pci_fixup_ht_enable_msi_mapping2674", i1 false, i1 false}
!549 = !{!"../drivers/pci/quirks.c", i32 2672, i32 1}
!550 = !{ptr @__pci_fixup_ht_enable_msi_mapping2676, !551, !"__pci_fixup_ht_enable_msi_mapping2676", i1 false, i1 false}
!551 = !{!"../drivers/pci/quirks.c", i32 2675, i32 1}
!552 = !{ptr @__pci_fixup_nvenet_msi_disable2696, !553, !"__pci_fixup_nvenet_msi_disable2696", i1 false, i1 false}
!553 = !{!"../drivers/pci/quirks.c", i32 2694, i32 1}
!554 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2713, !555, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2713", i1 false, i1 false}
!555 = !{!"../drivers/pci/quirks.c", i32 2711, i32 1}
!556 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2716, !557, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2716", i1 false, i1 false}
!557 = !{!"../drivers/pci/quirks.c", i32 2714, i32 1}
!558 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2719, !559, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2719", i1 false, i1 false}
!559 = !{!"../drivers/pci/quirks.c", i32 2717, i32 1}
!560 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2722, !561, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2722", i1 false, i1 false}
!561 = !{!"../drivers/pci/quirks.c", i32 2720, i32 1}
!562 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2725, !563, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2725", i1 false, i1 false}
!563 = !{!"../drivers/pci/quirks.c", i32 2723, i32 1}
!564 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2728, !565, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2728", i1 false, i1 false}
!565 = !{!"../drivers/pci/quirks.c", i32 2726, i32 1}
!566 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2731, !567, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2731", i1 false, i1 false}
!567 = !{!"../drivers/pci/quirks.c", i32 2729, i32 1}
!568 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2734, !569, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2734", i1 false, i1 false}
!569 = !{!"../drivers/pci/quirks.c", i32 2732, i32 1}
!570 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2737, !571, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2737", i1 false, i1 false}
!571 = !{!"../drivers/pci/quirks.c", i32 2735, i32 1}
!572 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2740, !573, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2740", i1 false, i1 false}
!573 = !{!"../drivers/pci/quirks.c", i32 2738, i32 1}
!574 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2743, !575, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2743", i1 false, i1 false}
!575 = !{!"../drivers/pci/quirks.c", i32 2741, i32 1}
!576 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2746, !577, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2746", i1 false, i1 false}
!577 = !{!"../drivers/pci/quirks.c", i32 2744, i32 1}
!578 = !{ptr @__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2749, !579, !"__pci_fixup_pci_quirk_nvidia_tegra_disable_rp_msi2749", i1 false, i1 false}
!579 = !{!"../drivers/pci/quirks.c", i32 2747, i32 1}
!580 = !{ptr @__pci_fixup_nvbridge_check_legacy_irq_routing2778, !581, !"__pci_fixup_nvbridge_check_legacy_irq_routing2778", i1 false, i1 false}
!581 = !{!"../drivers/pci/quirks.c", i32 2776, i32 1}
!582 = !{ptr @__pci_fixup_nvbridge_check_legacy_irq_routing2781, !583, !"__pci_fixup_nvbridge_check_legacy_irq_routing2781", i1 false, i1 false}
!583 = !{!"../drivers/pci/quirks.c", i32 2779, i32 1}
!584 = !{ptr @__pci_fixup_nv_msi_ht_cap_quirk_all2983, !585, !"__pci_fixup_nv_msi_ht_cap_quirk_all2983", i1 false, i1 false}
!585 = !{!"../drivers/pci/quirks.c", i32 2983, i32 1}
!586 = !{ptr @__pci_fixup_resume_earlynv_msi_ht_cap_quirk_all2984, !587, !"__pci_fixup_resume_earlynv_msi_ht_cap_quirk_all2984", i1 false, i1 false}
!587 = !{!"../drivers/pci/quirks.c", i32 2984, i32 1}
!588 = !{ptr @__pci_fixup_nv_msi_ht_cap_quirk_leaf2990, !589, !"__pci_fixup_nv_msi_ht_cap_quirk_leaf2990", i1 false, i1 false}
!589 = !{!"../drivers/pci/quirks.c", i32 2990, i32 1}
!590 = !{ptr @__pci_fixup_resume_earlynv_msi_ht_cap_quirk_leaf2991, !591, !"__pci_fixup_resume_earlynv_msi_ht_cap_quirk_leaf2991", i1 false, i1 false}
!591 = !{!"../drivers/pci/quirks.c", i32 2991, i32 1}
!592 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3027, !593, !"__pci_fixup_quirk_msi_intx_disable_bug3027", i1 false, i1 false}
!593 = !{!"../drivers/pci/quirks.c", i32 3025, i32 1}
!594 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3030, !595, !"__pci_fixup_quirk_msi_intx_disable_bug3030", i1 false, i1 false}
!595 = !{!"../drivers/pci/quirks.c", i32 3028, i32 1}
!596 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3033, !597, !"__pci_fixup_quirk_msi_intx_disable_bug3033", i1 false, i1 false}
!597 = !{!"../drivers/pci/quirks.c", i32 3031, i32 1}
!598 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3036, !599, !"__pci_fixup_quirk_msi_intx_disable_bug3036", i1 false, i1 false}
!599 = !{!"../drivers/pci/quirks.c", i32 3034, i32 1}
!600 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3039, !601, !"__pci_fixup_quirk_msi_intx_disable_bug3039", i1 false, i1 false}
!601 = !{!"../drivers/pci/quirks.c", i32 3037, i32 1}
!602 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3042, !603, !"__pci_fixup_quirk_msi_intx_disable_bug3042", i1 false, i1 false}
!603 = !{!"../drivers/pci/quirks.c", i32 3040, i32 1}
!604 = !{ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3045, !605, !"__pci_fixup_quirk_msi_intx_disable_ati_bug3045", i1 false, i1 false}
!605 = !{!"../drivers/pci/quirks.c", i32 3044, i32 1}
!606 = !{ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3047, !607, !"__pci_fixup_quirk_msi_intx_disable_ati_bug3047", i1 false, i1 false}
!607 = !{!"../drivers/pci/quirks.c", i32 3046, i32 1}
!608 = !{ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3049, !609, !"__pci_fixup_quirk_msi_intx_disable_ati_bug3049", i1 false, i1 false}
!609 = !{!"../drivers/pci/quirks.c", i32 3048, i32 1}
!610 = !{ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3051, !611, !"__pci_fixup_quirk_msi_intx_disable_ati_bug3051", i1 false, i1 false}
!611 = !{!"../drivers/pci/quirks.c", i32 3050, i32 1}
!612 = !{ptr @__pci_fixup_quirk_msi_intx_disable_ati_bug3053, !613, !"__pci_fixup_quirk_msi_intx_disable_ati_bug3053", i1 false, i1 false}
!613 = !{!"../drivers/pci/quirks.c", i32 3052, i32 1}
!614 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3056, !615, !"__pci_fixup_quirk_msi_intx_disable_bug3056", i1 false, i1 false}
!615 = !{!"../drivers/pci/quirks.c", i32 3055, i32 1}
!616 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3058, !617, !"__pci_fixup_quirk_msi_intx_disable_bug3058", i1 false, i1 false}
!617 = !{!"../drivers/pci/quirks.c", i32 3057, i32 1}
!618 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3060, !619, !"__pci_fixup_quirk_msi_intx_disable_bug3060", i1 false, i1 false}
!619 = !{!"../drivers/pci/quirks.c", i32 3059, i32 1}
!620 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3063, !621, !"__pci_fixup_quirk_msi_intx_disable_bug3063", i1 false, i1 false}
!621 = !{!"../drivers/pci/quirks.c", i32 3062, i32 1}
!622 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3065, !623, !"__pci_fixup_quirk_msi_intx_disable_bug3065", i1 false, i1 false}
!623 = !{!"../drivers/pci/quirks.c", i32 3064, i32 1}
!624 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3067, !625, !"__pci_fixup_quirk_msi_intx_disable_bug3067", i1 false, i1 false}
!625 = !{!"../drivers/pci/quirks.c", i32 3066, i32 1}
!626 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3069, !627, !"__pci_fixup_quirk_msi_intx_disable_bug3069", i1 false, i1 false}
!627 = !{!"../drivers/pci/quirks.c", i32 3068, i32 1}
!628 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3071, !629, !"__pci_fixup_quirk_msi_intx_disable_bug3071", i1 false, i1 false}
!629 = !{!"../drivers/pci/quirks.c", i32 3070, i32 1}
!630 = !{ptr @__pci_fixup_quirk_msi_intx_disable_bug3073, !631, !"__pci_fixup_quirk_msi_intx_disable_bug3073", i1 false, i1 false}
!631 = !{!"../drivers/pci/quirks.c", i32 3072, i32 1}
!632 = !{ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3075, !633, !"__pci_fixup_quirk_msi_intx_disable_qca_bug3075", i1 false, i1 false}
!633 = !{!"../drivers/pci/quirks.c", i32 3074, i32 1}
!634 = !{ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3077, !635, !"__pci_fixup_quirk_msi_intx_disable_qca_bug3077", i1 false, i1 false}
!635 = !{!"../drivers/pci/quirks.c", i32 3076, i32 1}
!636 = !{ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3079, !637, !"__pci_fixup_quirk_msi_intx_disable_qca_bug3079", i1 false, i1 false}
!637 = !{!"../drivers/pci/quirks.c", i32 3078, i32 1}
!638 = !{ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3081, !639, !"__pci_fixup_quirk_msi_intx_disable_qca_bug3081", i1 false, i1 false}
!639 = !{!"../drivers/pci/quirks.c", i32 3080, i32 1}
!640 = !{ptr @__pci_fixup_quirk_msi_intx_disable_qca_bug3083, !641, !"__pci_fixup_quirk_msi_intx_disable_qca_bug3083", i1 false, i1 false}
!641 = !{!"../drivers/pci/quirks.c", i32 3082, i32 1}
!642 = !{ptr @__pci_fixup_quirk_al_msi_disable3101, !643, !"__pci_fixup_quirk_al_msi_disable3101", i1 false, i1 false}
!643 = !{!"../drivers/pci/quirks.c", i32 3100, i32 1}
!644 = !{ptr @__pci_fixup_quirk_hotplug_bridge3115, !645, !"__pci_fixup_quirk_hotplug_bridge3115", i1 false, i1 false}
!645 = !{!"../drivers/pci/quirks.c", i32 3115, i32 1}
!646 = !{ptr @__pci_fixup_ricoh_mmc_fixup_rl5c4763172, !647, !"__pci_fixup_ricoh_mmc_fixup_rl5c4763172", i1 false, i1 false}
!647 = !{!"../drivers/pci/quirks.c", i32 3172, i32 1}
!648 = !{ptr @__pci_fixup_resume_earlyricoh_mmc_fixup_rl5c4763173, !649, !"__pci_fixup_resume_earlyricoh_mmc_fixup_rl5c4763173", i1 false, i1 false}
!649 = !{!"../drivers/pci/quirks.c", i32 3173, i32 1}
!650 = !{ptr @__pci_fixup_ricoh_mmc_fixup_r5c8323225, !651, !"__pci_fixup_ricoh_mmc_fixup_r5c8323225", i1 false, i1 false}
!651 = !{!"../drivers/pci/quirks.c", i32 3225, i32 1}
!652 = !{ptr @__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323226, !653, !"__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323226", i1 false, i1 false}
!653 = !{!"../drivers/pci/quirks.c", i32 3226, i32 1}
!654 = !{ptr @__pci_fixup_ricoh_mmc_fixup_r5c8323227, !655, !"__pci_fixup_ricoh_mmc_fixup_r5c8323227", i1 false, i1 false}
!655 = !{!"../drivers/pci/quirks.c", i32 3227, i32 1}
!656 = !{ptr @__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323228, !657, !"__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323228", i1 false, i1 false}
!657 = !{!"../drivers/pci/quirks.c", i32 3228, i32 1}
!658 = !{ptr @__pci_fixup_ricoh_mmc_fixup_r5c8323229, !659, !"__pci_fixup_ricoh_mmc_fixup_r5c8323229", i1 false, i1 false}
!659 = !{!"../drivers/pci/quirks.c", i32 3229, i32 1}
!660 = !{ptr @__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323230, !661, !"__pci_fixup_resume_earlyricoh_mmc_fixup_r5c8323230", i1 false, i1 false}
!661 = !{!"../drivers/pci/quirks.c", i32 3230, i32 1}
!662 = !{ptr @__pci_fixup_fixup_ti816x_class3267, !663, !"__pci_fixup_fixup_ti816x_class3267", i1 false, i1 false}
!663 = !{!"../drivers/pci/quirks.c", i32 3266, i32 1}
!664 = !{ptr @__pci_fixup_fixup_mpss_2563278, !665, !"__pci_fixup_fixup_mpss_2563278", i1 false, i1 false}
!665 = !{!"../drivers/pci/quirks.c", i32 3277, i32 1}
!666 = !{ptr @__pci_fixup_fixup_mpss_2563280, !667, !"__pci_fixup_fixup_mpss_2563280", i1 false, i1 false}
!667 = !{!"../drivers/pci/quirks.c", i32 3279, i32 1}
!668 = !{ptr @__pci_fixup_fixup_mpss_2563282, !669, !"__pci_fixup_fixup_mpss_2563282", i1 false, i1 false}
!669 = !{!"../drivers/pci/quirks.c", i32 3281, i32 1}
!670 = !{ptr @__pci_fixup_fixup_mpss_2563283, !671, !"__pci_fixup_fixup_mpss_2563283", i1 false, i1 false}
!671 = !{!"../drivers/pci/quirks.c", i32 3283, i32 1}
!672 = !{ptr @__pci_fixup_quirk_intel_mc_errata3327, !673, !"__pci_fixup_quirk_intel_mc_errata3327", i1 false, i1 false}
!673 = !{!"../drivers/pci/quirks.c", i32 3327, i32 1}
!674 = !{ptr @__pci_fixup_quirk_intel_mc_errata3328, !675, !"__pci_fixup_quirk_intel_mc_errata3328", i1 false, i1 false}
!675 = !{!"../drivers/pci/quirks.c", i32 3328, i32 1}
!676 = !{ptr @__pci_fixup_quirk_intel_mc_errata3329, !677, !"__pci_fixup_quirk_intel_mc_errata3329", i1 false, i1 false}
!677 = !{!"../drivers/pci/quirks.c", i32 3329, i32 1}
!678 = !{ptr @__pci_fixup_quirk_intel_mc_errata3330, !679, !"__pci_fixup_quirk_intel_mc_errata3330", i1 false, i1 false}
!679 = !{!"../drivers/pci/quirks.c", i32 3330, i32 1}
!680 = !{ptr @__pci_fixup_quirk_intel_mc_errata3331, !681, !"__pci_fixup_quirk_intel_mc_errata3331", i1 false, i1 false}
!681 = !{!"../drivers/pci/quirks.c", i32 3331, i32 1}
!682 = !{ptr @__pci_fixup_quirk_intel_mc_errata3332, !683, !"__pci_fixup_quirk_intel_mc_errata3332", i1 false, i1 false}
!683 = !{!"../drivers/pci/quirks.c", i32 3332, i32 1}
!684 = !{ptr @__pci_fixup_quirk_intel_mc_errata3333, !685, !"__pci_fixup_quirk_intel_mc_errata3333", i1 false, i1 false}
!685 = !{!"../drivers/pci/quirks.c", i32 3333, i32 1}
!686 = !{ptr @__pci_fixup_quirk_intel_mc_errata3334, !687, !"__pci_fixup_quirk_intel_mc_errata3334", i1 false, i1 false}
!687 = !{!"../drivers/pci/quirks.c", i32 3334, i32 1}
!688 = !{ptr @__pci_fixup_quirk_intel_mc_errata3335, !689, !"__pci_fixup_quirk_intel_mc_errata3335", i1 false, i1 false}
!689 = !{!"../drivers/pci/quirks.c", i32 3335, i32 1}
!690 = !{ptr @__pci_fixup_quirk_intel_mc_errata3336, !691, !"__pci_fixup_quirk_intel_mc_errata3336", i1 false, i1 false}
!691 = !{!"../drivers/pci/quirks.c", i32 3336, i32 1}
!692 = !{ptr @__pci_fixup_quirk_intel_mc_errata3337, !693, !"__pci_fixup_quirk_intel_mc_errata3337", i1 false, i1 false}
!693 = !{!"../drivers/pci/quirks.c", i32 3337, i32 1}
!694 = !{ptr @__pci_fixup_quirk_intel_mc_errata3338, !695, !"__pci_fixup_quirk_intel_mc_errata3338", i1 false, i1 false}
!695 = !{!"../drivers/pci/quirks.c", i32 3338, i32 1}
!696 = !{ptr @__pci_fixup_quirk_intel_mc_errata3339, !697, !"__pci_fixup_quirk_intel_mc_errata3339", i1 false, i1 false}
!697 = !{!"../drivers/pci/quirks.c", i32 3339, i32 1}
!698 = !{ptr @__pci_fixup_quirk_intel_mc_errata3340, !699, !"__pci_fixup_quirk_intel_mc_errata3340", i1 false, i1 false}
!699 = !{!"../drivers/pci/quirks.c", i32 3340, i32 1}
!700 = !{ptr @__pci_fixup_quirk_intel_mc_errata3342, !701, !"__pci_fixup_quirk_intel_mc_errata3342", i1 false, i1 false}
!701 = !{!"../drivers/pci/quirks.c", i32 3342, i32 1}
!702 = !{ptr @__pci_fixup_quirk_intel_mc_errata3343, !703, !"__pci_fixup_quirk_intel_mc_errata3343", i1 false, i1 false}
!703 = !{!"../drivers/pci/quirks.c", i32 3343, i32 1}
!704 = !{ptr @__pci_fixup_quirk_intel_mc_errata3344, !705, !"__pci_fixup_quirk_intel_mc_errata3344", i1 false, i1 false}
!705 = !{!"../drivers/pci/quirks.c", i32 3344, i32 1}
!706 = !{ptr @__pci_fixup_quirk_intel_mc_errata3345, !707, !"__pci_fixup_quirk_intel_mc_errata3345", i1 false, i1 false}
!707 = !{!"../drivers/pci/quirks.c", i32 3345, i32 1}
!708 = !{ptr @__pci_fixup_quirk_intel_mc_errata3346, !709, !"__pci_fixup_quirk_intel_mc_errata3346", i1 false, i1 false}
!709 = !{!"../drivers/pci/quirks.c", i32 3346, i32 1}
!710 = !{ptr @__pci_fixup_quirk_intel_mc_errata3347, !711, !"__pci_fixup_quirk_intel_mc_errata3347", i1 false, i1 false}
!711 = !{!"../drivers/pci/quirks.c", i32 3347, i32 1}
!712 = !{ptr @__pci_fixup_quirk_intel_mc_errata3348, !713, !"__pci_fixup_quirk_intel_mc_errata3348", i1 false, i1 false}
!713 = !{!"../drivers/pci/quirks.c", i32 3348, i32 1}
!714 = !{ptr @__pci_fixup_quirk_intel_mc_errata3349, !715, !"__pci_fixup_quirk_intel_mc_errata3349", i1 false, i1 false}
!715 = !{!"../drivers/pci/quirks.c", i32 3349, i32 1}
!716 = !{ptr @__pci_fixup_quirk_intel_mc_errata3350, !717, !"__pci_fixup_quirk_intel_mc_errata3350", i1 false, i1 false}
!717 = !{!"../drivers/pci/quirks.c", i32 3350, i32 1}
!718 = !{ptr @__pci_fixup_quirk_intel_mc_errata3351, !719, !"__pci_fixup_quirk_intel_mc_errata3351", i1 false, i1 false}
!719 = !{!"../drivers/pci/quirks.c", i32 3351, i32 1}
!720 = !{ptr @__pci_fixup_quirk_intel_mc_errata3352, !721, !"__pci_fixup_quirk_intel_mc_errata3352", i1 false, i1 false}
!721 = !{!"../drivers/pci/quirks.c", i32 3352, i32 1}
!722 = !{ptr @__pci_fixup_quirk_intel_ntb3376, !723, !"__pci_fixup_quirk_intel_ntb3376", i1 false, i1 false}
!723 = !{!"../drivers/pci/quirks.c", i32 3376, i32 1}
!724 = !{ptr @__pci_fixup_quirk_intel_ntb3377, !725, !"__pci_fixup_quirk_intel_ntb3377", i1 false, i1 false}
!725 = !{!"../drivers/pci/quirks.c", i32 3377, i32 1}
!726 = !{ptr @__pci_fixup_disable_igfx_irq3409, !727, !"__pci_fixup_disable_igfx_irq3409", i1 false, i1 false}
!727 = !{!"../drivers/pci/quirks.c", i32 3409, i32 1}
!728 = !{ptr @__pci_fixup_disable_igfx_irq3410, !729, !"__pci_fixup_disable_igfx_irq3410", i1 false, i1 false}
!729 = !{!"../drivers/pci/quirks.c", i32 3410, i32 1}
!730 = !{ptr @__pci_fixup_disable_igfx_irq3411, !731, !"__pci_fixup_disable_igfx_irq3411", i1 false, i1 false}
!731 = !{!"../drivers/pci/quirks.c", i32 3411, i32 1}
!732 = !{ptr @__pci_fixup_disable_igfx_irq3412, !733, !"__pci_fixup_disable_igfx_irq3412", i1 false, i1 false}
!733 = !{!"../drivers/pci/quirks.c", i32 3412, i32 1}
!734 = !{ptr @__pci_fixup_disable_igfx_irq3413, !735, !"__pci_fixup_disable_igfx_irq3413", i1 false, i1 false}
!735 = !{!"../drivers/pci/quirks.c", i32 3413, i32 1}
!736 = !{ptr @__pci_fixup_disable_igfx_irq3414, !737, !"__pci_fixup_disable_igfx_irq3414", i1 false, i1 false}
!737 = !{!"../drivers/pci/quirks.c", i32 3414, i32 1}
!738 = !{ptr @__pci_fixup_disable_igfx_irq3415, !739, !"__pci_fixup_disable_igfx_irq3415", i1 false, i1 false}
!739 = !{!"../drivers/pci/quirks.c", i32 3415, i32 1}
!740 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3426, !741, !"__pci_fixup_quirk_remove_d3hot_delay3426", i1 false, i1 false}
!741 = !{!"../drivers/pci/quirks.c", i32 3426, i32 1}
!742 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3427, !743, !"__pci_fixup_quirk_remove_d3hot_delay3427", i1 false, i1 false}
!743 = !{!"../drivers/pci/quirks.c", i32 3427, i32 1}
!744 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3428, !745, !"__pci_fixup_quirk_remove_d3hot_delay3428", i1 false, i1 false}
!745 = !{!"../drivers/pci/quirks.c", i32 3428, i32 1}
!746 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3430, !747, !"__pci_fixup_quirk_remove_d3hot_delay3430", i1 false, i1 false}
!747 = !{!"../drivers/pci/quirks.c", i32 3430, i32 1}
!748 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3431, !749, !"__pci_fixup_quirk_remove_d3hot_delay3431", i1 false, i1 false}
!749 = !{!"../drivers/pci/quirks.c", i32 3431, i32 1}
!750 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3432, !751, !"__pci_fixup_quirk_remove_d3hot_delay3432", i1 false, i1 false}
!751 = !{!"../drivers/pci/quirks.c", i32 3432, i32 1}
!752 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3433, !753, !"__pci_fixup_quirk_remove_d3hot_delay3433", i1 false, i1 false}
!753 = !{!"../drivers/pci/quirks.c", i32 3433, i32 1}
!754 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3434, !755, !"__pci_fixup_quirk_remove_d3hot_delay3434", i1 false, i1 false}
!755 = !{!"../drivers/pci/quirks.c", i32 3434, i32 1}
!756 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3435, !757, !"__pci_fixup_quirk_remove_d3hot_delay3435", i1 false, i1 false}
!757 = !{!"../drivers/pci/quirks.c", i32 3435, i32 1}
!758 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3436, !759, !"__pci_fixup_quirk_remove_d3hot_delay3436", i1 false, i1 false}
!759 = !{!"../drivers/pci/quirks.c", i32 3436, i32 1}
!760 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3437, !761, !"__pci_fixup_quirk_remove_d3hot_delay3437", i1 false, i1 false}
!761 = !{!"../drivers/pci/quirks.c", i32 3437, i32 1}
!762 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3438, !763, !"__pci_fixup_quirk_remove_d3hot_delay3438", i1 false, i1 false}
!763 = !{!"../drivers/pci/quirks.c", i32 3438, i32 1}
!764 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3439, !765, !"__pci_fixup_quirk_remove_d3hot_delay3439", i1 false, i1 false}
!765 = !{!"../drivers/pci/quirks.c", i32 3439, i32 1}
!766 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3440, !767, !"__pci_fixup_quirk_remove_d3hot_delay3440", i1 false, i1 false}
!767 = !{!"../drivers/pci/quirks.c", i32 3440, i32 1}
!768 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3442, !769, !"__pci_fixup_quirk_remove_d3hot_delay3442", i1 false, i1 false}
!769 = !{!"../drivers/pci/quirks.c", i32 3442, i32 1}
!770 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3443, !771, !"__pci_fixup_quirk_remove_d3hot_delay3443", i1 false, i1 false}
!771 = !{!"../drivers/pci/quirks.c", i32 3443, i32 1}
!772 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3444, !773, !"__pci_fixup_quirk_remove_d3hot_delay3444", i1 false, i1 false}
!773 = !{!"../drivers/pci/quirks.c", i32 3444, i32 1}
!774 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3445, !775, !"__pci_fixup_quirk_remove_d3hot_delay3445", i1 false, i1 false}
!775 = !{!"../drivers/pci/quirks.c", i32 3445, i32 1}
!776 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3446, !777, !"__pci_fixup_quirk_remove_d3hot_delay3446", i1 false, i1 false}
!777 = !{!"../drivers/pci/quirks.c", i32 3446, i32 1}
!778 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3447, !779, !"__pci_fixup_quirk_remove_d3hot_delay3447", i1 false, i1 false}
!779 = !{!"../drivers/pci/quirks.c", i32 3447, i32 1}
!780 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3448, !781, !"__pci_fixup_quirk_remove_d3hot_delay3448", i1 false, i1 false}
!781 = !{!"../drivers/pci/quirks.c", i32 3448, i32 1}
!782 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3449, !783, !"__pci_fixup_quirk_remove_d3hot_delay3449", i1 false, i1 false}
!783 = !{!"../drivers/pci/quirks.c", i32 3449, i32 1}
!784 = !{ptr @__pci_fixup_quirk_remove_d3hot_delay3450, !785, !"__pci_fixup_quirk_remove_d3hot_delay3450", i1 false, i1 false}
!785 = !{!"../drivers/pci/quirks.c", i32 3450, i32 1}
!786 = !{ptr @__pci_fixup_quirk_broken_intx_masking3462, !787, !"__pci_fixup_quirk_broken_intx_masking3462", i1 false, i1 false}
!787 = !{!"../drivers/pci/quirks.c", i32 3461, i32 1}
!788 = !{ptr @__pci_fixup_quirk_broken_intx_masking3464, !789, !"__pci_fixup_quirk_broken_intx_masking3464", i1 false, i1 false}
!789 = !{!"../drivers/pci/quirks.c", i32 3463, i32 1}
!790 = !{ptr @__pci_fixup_quirk_broken_intx_masking3466, !791, !"__pci_fixup_quirk_broken_intx_masking3466", i1 false, i1 false}
!791 = !{!"../drivers/pci/quirks.c", i32 3465, i32 1}
!792 = !{ptr @__pci_fixup_quirk_broken_intx_masking3475, !793, !"__pci_fixup_quirk_broken_intx_masking3475", i1 false, i1 false}
!793 = !{!"../drivers/pci/quirks.c", i32 3474, i32 1}
!794 = !{ptr @__pci_fixup_quirk_broken_intx_masking3481, !795, !"__pci_fixup_quirk_broken_intx_masking3481", i1 false, i1 false}
!795 = !{!"../drivers/pci/quirks.c", i32 3481, i32 1}
!796 = !{ptr @__pci_fixup_quirk_broken_intx_masking3482, !797, !"__pci_fixup_quirk_broken_intx_masking3482", i1 false, i1 false}
!797 = !{!"../drivers/pci/quirks.c", i32 3482, i32 1}
!798 = !{ptr @__pci_fixup_quirk_broken_intx_masking3483, !799, !"__pci_fixup_quirk_broken_intx_masking3483", i1 false, i1 false}
!799 = !{!"../drivers/pci/quirks.c", i32 3483, i32 1}
!800 = !{ptr @__pci_fixup_quirk_broken_intx_masking3484, !801, !"__pci_fixup_quirk_broken_intx_masking3484", i1 false, i1 false}
!801 = !{!"../drivers/pci/quirks.c", i32 3484, i32 1}
!802 = !{ptr @__pci_fixup_quirk_broken_intx_masking3485, !803, !"__pci_fixup_quirk_broken_intx_masking3485", i1 false, i1 false}
!803 = !{!"../drivers/pci/quirks.c", i32 3485, i32 1}
!804 = !{ptr @__pci_fixup_quirk_broken_intx_masking3486, !805, !"__pci_fixup_quirk_broken_intx_masking3486", i1 false, i1 false}
!805 = !{!"../drivers/pci/quirks.c", i32 3486, i32 1}
!806 = !{ptr @__pci_fixup_quirk_broken_intx_masking3487, !807, !"__pci_fixup_quirk_broken_intx_masking3487", i1 false, i1 false}
!807 = !{!"../drivers/pci/quirks.c", i32 3487, i32 1}
!808 = !{ptr @__pci_fixup_quirk_broken_intx_masking3488, !809, !"__pci_fixup_quirk_broken_intx_masking3488", i1 false, i1 false}
!809 = !{!"../drivers/pci/quirks.c", i32 3488, i32 1}
!810 = !{ptr @__pci_fixup_quirk_broken_intx_masking3489, !811, !"__pci_fixup_quirk_broken_intx_masking3489", i1 false, i1 false}
!811 = !{!"../drivers/pci/quirks.c", i32 3489, i32 1}
!812 = !{ptr @__pci_fixup_quirk_broken_intx_masking3490, !813, !"__pci_fixup_quirk_broken_intx_masking3490", i1 false, i1 false}
!813 = !{!"../drivers/pci/quirks.c", i32 3490, i32 1}
!814 = !{ptr @__pci_fixup_quirk_broken_intx_masking3491, !815, !"__pci_fixup_quirk_broken_intx_masking3491", i1 false, i1 false}
!815 = !{!"../drivers/pci/quirks.c", i32 3491, i32 1}
!816 = !{ptr @__pci_fixup_quirk_broken_intx_masking3492, !817, !"__pci_fixup_quirk_broken_intx_masking3492", i1 false, i1 false}
!817 = !{!"../drivers/pci/quirks.c", i32 3492, i32 1}
!818 = !{ptr @__pci_fixup_quirk_broken_intx_masking3493, !819, !"__pci_fixup_quirk_broken_intx_masking3493", i1 false, i1 false}
!819 = !{!"../drivers/pci/quirks.c", i32 3493, i32 1}
!820 = !{ptr @__pci_fixup_quirk_broken_intx_masking3494, !821, !"__pci_fixup_quirk_broken_intx_masking3494", i1 false, i1 false}
!821 = !{!"../drivers/pci/quirks.c", i32 3494, i32 1}
!822 = !{ptr @__pci_fixup_quirk_broken_intx_masking3495, !823, !"__pci_fixup_quirk_broken_intx_masking3495", i1 false, i1 false}
!823 = !{!"../drivers/pci/quirks.c", i32 3495, i32 1}
!824 = !{ptr @__pci_fixup_quirk_broken_intx_masking3496, !825, !"__pci_fixup_quirk_broken_intx_masking3496", i1 false, i1 false}
!825 = !{!"../drivers/pci/quirks.c", i32 3496, i32 1}
!826 = !{ptr @__pci_fixup_mellanox_check_broken_intx_masking3584, !827, !"__pci_fixup_mellanox_check_broken_intx_masking3584", i1 false, i1 false}
!827 = !{!"../drivers/pci/quirks.c", i32 3583, i32 1}
!828 = !{ptr @__pci_fixup_quirk_nvidia_no_bus_reset3601, !829, !"__pci_fixup_quirk_nvidia_no_bus_reset3601", i1 false, i1 false}
!829 = !{!"../drivers/pci/quirks.c", i32 3600, i32 1}
!830 = !{ptr @__pci_fixup_quirk_no_bus_reset3610, !831, !"__pci_fixup_quirk_no_bus_reset3610", i1 false, i1 false}
!831 = !{!"../drivers/pci/quirks.c", i32 3610, i32 1}
!832 = !{ptr @__pci_fixup_quirk_no_bus_reset3611, !833, !"__pci_fixup_quirk_no_bus_reset3611", i1 false, i1 false}
!833 = !{!"../drivers/pci/quirks.c", i32 3611, i32 1}
!834 = !{ptr @__pci_fixup_quirk_no_bus_reset3612, !835, !"__pci_fixup_quirk_no_bus_reset3612", i1 false, i1 false}
!835 = !{!"../drivers/pci/quirks.c", i32 3612, i32 1}
!836 = !{ptr @__pci_fixup_quirk_no_bus_reset3613, !837, !"__pci_fixup_quirk_no_bus_reset3613", i1 false, i1 false}
!837 = !{!"../drivers/pci/quirks.c", i32 3613, i32 1}
!838 = !{ptr @__pci_fixup_quirk_no_bus_reset3614, !839, !"__pci_fixup_quirk_no_bus_reset3614", i1 false, i1 false}
!839 = !{!"../drivers/pci/quirks.c", i32 3614, i32 1}
!840 = !{ptr @__pci_fixup_quirk_no_bus_reset3615, !841, !"__pci_fixup_quirk_no_bus_reset3615", i1 false, i1 false}
!841 = !{!"../drivers/pci/quirks.c", i32 3615, i32 1}
!842 = !{ptr @__pci_fixup_quirk_no_bus_reset3622, !843, !"__pci_fixup_quirk_no_bus_reset3622", i1 false, i1 false}
!843 = !{!"../drivers/pci/quirks.c", i32 3622, i32 1}
!844 = !{ptr @__pci_fixup_quirk_no_bus_reset3632, !845, !"__pci_fixup_quirk_no_bus_reset3632", i1 false, i1 false}
!845 = !{!"../drivers/pci/quirks.c", i32 3632, i32 1}
!846 = !{ptr @__pci_fixup_quirk_no_pm_reset3653, !847, !"__pci_fixup_quirk_no_pm_reset3653", i1 false, i1 false}
!847 = !{!"../drivers/pci/quirks.c", i32 3652, i32 1}
!848 = !{ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3668, !849, !"__pci_fixup_quirk_thunderbolt_hotplug_msi3668", i1 false, i1 false}
!849 = !{!"../drivers/pci/quirks.c", i32 3667, i32 1}
!850 = !{ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3670, !851, !"__pci_fixup_quirk_thunderbolt_hotplug_msi3670", i1 false, i1 false}
!851 = !{!"../drivers/pci/quirks.c", i32 3669, i32 1}
!852 = !{ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3672, !853, !"__pci_fixup_quirk_thunderbolt_hotplug_msi3672", i1 false, i1 false}
!853 = !{!"../drivers/pci/quirks.c", i32 3671, i32 1}
!854 = !{ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3674, !855, !"__pci_fixup_quirk_thunderbolt_hotplug_msi3674", i1 false, i1 false}
!855 = !{!"../drivers/pci/quirks.c", i32 3673, i32 1}
!856 = !{ptr @__pci_fixup_quirk_thunderbolt_hotplug_msi3676, !857, !"__pci_fixup_quirk_thunderbolt_hotplug_msi3676", i1 false, i1 false}
!857 = !{!"../drivers/pci/quirks.c", i32 3675, i32 1}
!858 = !{ptr @__pci_fixup_quirk_dma_func0_alias4087, !859, !"__pci_fixup_quirk_dma_func0_alias4087", i1 false, i1 false}
!859 = !{!"../drivers/pci/quirks.c", i32 4087, i32 1}
!860 = !{ptr @__pci_fixup_quirk_dma_func0_alias4088, !861, !"__pci_fixup_quirk_dma_func0_alias4088", i1 false, i1 false}
!861 = !{!"../drivers/pci/quirks.c", i32 4088, i32 1}
!862 = !{ptr @__pci_fixup_quirk_dma_func1_alias4103, !863, !"__pci_fixup_quirk_dma_func1_alias4103", i1 false, i1 false}
!863 = !{!"../drivers/pci/quirks.c", i32 4102, i32 1}
!864 = !{ptr @__pci_fixup_quirk_dma_func1_alias4105, !865, !"__pci_fixup_quirk_dma_func1_alias4105", i1 false, i1 false}
!865 = !{!"../drivers/pci/quirks.c", i32 4104, i32 1}
!866 = !{ptr @__pci_fixup_quirk_dma_func1_alias4108, !867, !"__pci_fixup_quirk_dma_func1_alias4108", i1 false, i1 false}
!867 = !{!"../drivers/pci/quirks.c", i32 4107, i32 1}
!868 = !{ptr @__pci_fixup_quirk_dma_func1_alias4110, !869, !"__pci_fixup_quirk_dma_func1_alias4110", i1 false, i1 false}
!869 = !{!"../drivers/pci/quirks.c", i32 4109, i32 1}
!870 = !{ptr @__pci_fixup_quirk_dma_func1_alias4113, !871, !"__pci_fixup_quirk_dma_func1_alias4113", i1 false, i1 false}
!871 = !{!"../drivers/pci/quirks.c", i32 4112, i32 1}
!872 = !{ptr @__pci_fixup_quirk_dma_func1_alias4115, !873, !"__pci_fixup_quirk_dma_func1_alias4115", i1 false, i1 false}
!873 = !{!"../drivers/pci/quirks.c", i32 4114, i32 1}
!874 = !{ptr @__pci_fixup_quirk_dma_func1_alias4118, !875, !"__pci_fixup_quirk_dma_func1_alias4118", i1 false, i1 false}
!875 = !{!"../drivers/pci/quirks.c", i32 4117, i32 1}
!876 = !{ptr @__pci_fixup_quirk_dma_func1_alias4121, !877, !"__pci_fixup_quirk_dma_func1_alias4121", i1 false, i1 false}
!877 = !{!"../drivers/pci/quirks.c", i32 4120, i32 1}
!878 = !{ptr @__pci_fixup_quirk_dma_func1_alias4124, !879, !"__pci_fixup_quirk_dma_func1_alias4124", i1 false, i1 false}
!879 = !{!"../drivers/pci/quirks.c", i32 4123, i32 1}
!880 = !{ptr @__pci_fixup_quirk_dma_func1_alias4127, !881, !"__pci_fixup_quirk_dma_func1_alias4127", i1 false, i1 false}
!881 = !{!"../drivers/pci/quirks.c", i32 4126, i32 1}
!882 = !{ptr @__pci_fixup_quirk_dma_func1_alias4130, !883, !"__pci_fixup_quirk_dma_func1_alias4130", i1 false, i1 false}
!883 = !{!"../drivers/pci/quirks.c", i32 4129, i32 1}
!884 = !{ptr @__pci_fixup_quirk_dma_func1_alias4133, !885, !"__pci_fixup_quirk_dma_func1_alias4133", i1 false, i1 false}
!885 = !{!"../drivers/pci/quirks.c", i32 4132, i32 1}
!886 = !{ptr @__pci_fixup_quirk_dma_func1_alias4136, !887, !"__pci_fixup_quirk_dma_func1_alias4136", i1 false, i1 false}
!887 = !{!"../drivers/pci/quirks.c", i32 4135, i32 1}
!888 = !{ptr @__pci_fixup_quirk_dma_func1_alias4139, !889, !"__pci_fixup_quirk_dma_func1_alias4139", i1 false, i1 false}
!889 = !{!"../drivers/pci/quirks.c", i32 4138, i32 1}
!890 = !{ptr @__pci_fixup_quirk_dma_func1_alias4141, !891, !"__pci_fixup_quirk_dma_func1_alias4141", i1 false, i1 false}
!891 = !{!"../drivers/pci/quirks.c", i32 4140, i32 1}
!892 = !{ptr @__pci_fixup_quirk_dma_func1_alias4143, !893, !"__pci_fixup_quirk_dma_func1_alias4143", i1 false, i1 false}
!893 = !{!"../drivers/pci/quirks.c", i32 4142, i32 1}
!894 = !{ptr @__pci_fixup_quirk_dma_func1_alias4147, !895, !"__pci_fixup_quirk_dma_func1_alias4147", i1 false, i1 false}
!895 = !{!"../drivers/pci/quirks.c", i32 4145, i32 1}
!896 = !{ptr @__pci_fixup_quirk_dma_func1_alias4151, !897, !"__pci_fixup_quirk_dma_func1_alias4151", i1 false, i1 false}
!897 = !{!"../drivers/pci/quirks.c", i32 4149, i32 1}
!898 = !{ptr @__pci_fixup_quirk_fixed_dma_alias4186, !899, !"__pci_fixup_quirk_fixed_dma_alias4186", i1 false, i1 false}
!899 = !{!"../drivers/pci/quirks.c", i32 4186, i32 1}
!900 = !{ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4207, !901, !"__pci_fixup_quirk_use_pcie_bridge_dma_alias4207", i1 false, i1 false}
!901 = !{!"../drivers/pci/quirks.c", i32 4206, i32 1}
!902 = !{ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4209, !903, !"__pci_fixup_quirk_use_pcie_bridge_dma_alias4209", i1 false, i1 false}
!903 = !{!"../drivers/pci/quirks.c", i32 4209, i32 1}
!904 = !{ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4211, !905, !"__pci_fixup_quirk_use_pcie_bridge_dma_alias4211", i1 false, i1 false}
!905 = !{!"../drivers/pci/quirks.c", i32 4211, i32 1}
!906 = !{ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4213, !907, !"__pci_fixup_quirk_use_pcie_bridge_dma_alias4213", i1 false, i1 false}
!907 = !{!"../drivers/pci/quirks.c", i32 4213, i32 1}
!908 = !{ptr @__pci_fixup_quirk_use_pcie_bridge_dma_alias4215, !909, !"__pci_fixup_quirk_use_pcie_bridge_dma_alias4215", i1 false, i1 false}
!909 = !{!"../drivers/pci/quirks.c", i32 4215, i32 1}
!910 = !{ptr @__pci_fixup_quirk_mic_x200_dma_alias4229, !911, !"__pci_fixup_quirk_mic_x200_dma_alias4229", i1 false, i1 false}
!911 = !{!"../drivers/pci/quirks.c", i32 4229, i32 1}
!912 = !{ptr @__pci_fixup_quirk_mic_x200_dma_alias4230, !913, !"__pci_fixup_quirk_mic_x200_dma_alias4230", i1 false, i1 false}
!913 = !{!"../drivers/pci/quirks.c", i32 4230, i32 1}
!914 = !{ptr @__pci_fixup_quirk_pex_vca_alias4254, !915, !"__pci_fixup_quirk_pex_vca_alias4254", i1 false, i1 false}
!915 = !{!"../drivers/pci/quirks.c", i32 4254, i32 1}
!916 = !{ptr @__pci_fixup_quirk_pex_vca_alias4255, !917, !"__pci_fixup_quirk_pex_vca_alias4255", i1 false, i1 false}
!917 = !{!"../drivers/pci/quirks.c", i32 4255, i32 1}
!918 = !{ptr @__pci_fixup_quirk_pex_vca_alias4256, !919, !"__pci_fixup_quirk_pex_vca_alias4256", i1 false, i1 false}
!919 = !{!"../drivers/pci/quirks.c", i32 4256, i32 1}
!920 = !{ptr @__pci_fixup_quirk_pex_vca_alias4257, !921, !"__pci_fixup_quirk_pex_vca_alias4257", i1 false, i1 false}
!921 = !{!"../drivers/pci/quirks.c", i32 4257, i32 1}
!922 = !{ptr @__pci_fixup_quirk_pex_vca_alias4258, !923, !"__pci_fixup_quirk_pex_vca_alias4258", i1 false, i1 false}
!923 = !{!"../drivers/pci/quirks.c", i32 4258, i32 1}
!924 = !{ptr @__pci_fixup_quirk_pex_vca_alias4259, !925, !"__pci_fixup_quirk_pex_vca_alias4259", i1 false, i1 false}
!925 = !{!"../drivers/pci/quirks.c", i32 4259, i32 1}
!926 = !{ptr @__pci_fixup_quirk_bridge_cavm_thrx2_pcie_root4271, !927, !"__pci_fixup_quirk_bridge_cavm_thrx2_pcie_root4271", i1 false, i1 false}
!927 = !{!"../drivers/pci/quirks.c", i32 4270, i32 1}
!928 = !{ptr @__pci_fixup_quirk_bridge_cavm_thrx2_pcie_root4273, !929, !"__pci_fixup_quirk_bridge_cavm_thrx2_pcie_root4273", i1 false, i1 false}
!929 = !{!"../drivers/pci/quirks.c", i32 4272, i32 1}
!930 = !{ptr @__pci_fixup_quirk_tw686x_class4289, !931, !"__pci_fixup_quirk_tw686x_class4289", i1 false, i1 false}
!931 = !{!"../drivers/pci/quirks.c", i32 4288, i32 1}
!932 = !{ptr @__pci_fixup_quirk_tw686x_class4291, !933, !"__pci_fixup_quirk_tw686x_class4291", i1 false, i1 false}
!933 = !{!"../drivers/pci/quirks.c", i32 4290, i32 1}
!934 = !{ptr @__pci_fixup_quirk_tw686x_class4293, !935, !"__pci_fixup_quirk_tw686x_class4293", i1 false, i1 false}
!935 = !{!"../drivers/pci/quirks.c", i32 4292, i32 1}
!936 = !{ptr @__pci_fixup_quirk_tw686x_class4295, !937, !"__pci_fixup_quirk_tw686x_class4295", i1 false, i1 false}
!937 = !{!"../drivers/pci/quirks.c", i32 4294, i32 1}
!938 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4314, !939, !"__pci_fixup_quirk_relaxedordering_disable4314", i1 false, i1 false}
!939 = !{!"../drivers/pci/quirks.c", i32 4313, i32 1}
!940 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4316, !941, !"__pci_fixup_quirk_relaxedordering_disable4316", i1 false, i1 false}
!941 = !{!"../drivers/pci/quirks.c", i32 4315, i32 1}
!942 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4318, !943, !"__pci_fixup_quirk_relaxedordering_disable4318", i1 false, i1 false}
!943 = !{!"../drivers/pci/quirks.c", i32 4317, i32 1}
!944 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4320, !945, !"__pci_fixup_quirk_relaxedordering_disable4320", i1 false, i1 false}
!945 = !{!"../drivers/pci/quirks.c", i32 4319, i32 1}
!946 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4322, !947, !"__pci_fixup_quirk_relaxedordering_disable4322", i1 false, i1 false}
!947 = !{!"../drivers/pci/quirks.c", i32 4321, i32 1}
!948 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4324, !949, !"__pci_fixup_quirk_relaxedordering_disable4324", i1 false, i1 false}
!949 = !{!"../drivers/pci/quirks.c", i32 4323, i32 1}
!950 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4326, !951, !"__pci_fixup_quirk_relaxedordering_disable4326", i1 false, i1 false}
!951 = !{!"../drivers/pci/quirks.c", i32 4325, i32 1}
!952 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4328, !953, !"__pci_fixup_quirk_relaxedordering_disable4328", i1 false, i1 false}
!953 = !{!"../drivers/pci/quirks.c", i32 4327, i32 1}
!954 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4330, !955, !"__pci_fixup_quirk_relaxedordering_disable4330", i1 false, i1 false}
!955 = !{!"../drivers/pci/quirks.c", i32 4329, i32 1}
!956 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4332, !957, !"__pci_fixup_quirk_relaxedordering_disable4332", i1 false, i1 false}
!957 = !{!"../drivers/pci/quirks.c", i32 4331, i32 1}
!958 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4334, !959, !"__pci_fixup_quirk_relaxedordering_disable4334", i1 false, i1 false}
!959 = !{!"../drivers/pci/quirks.c", i32 4333, i32 1}
!960 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4336, !961, !"__pci_fixup_quirk_relaxedordering_disable4336", i1 false, i1 false}
!961 = !{!"../drivers/pci/quirks.c", i32 4335, i32 1}
!962 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4338, !963, !"__pci_fixup_quirk_relaxedordering_disable4338", i1 false, i1 false}
!963 = !{!"../drivers/pci/quirks.c", i32 4337, i32 1}
!964 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4340, !965, !"__pci_fixup_quirk_relaxedordering_disable4340", i1 false, i1 false}
!965 = !{!"../drivers/pci/quirks.c", i32 4339, i32 1}
!966 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4342, !967, !"__pci_fixup_quirk_relaxedordering_disable4342", i1 false, i1 false}
!967 = !{!"../drivers/pci/quirks.c", i32 4341, i32 1}
!968 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4344, !969, !"__pci_fixup_quirk_relaxedordering_disable4344", i1 false, i1 false}
!969 = !{!"../drivers/pci/quirks.c", i32 4343, i32 1}
!970 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4346, !971, !"__pci_fixup_quirk_relaxedordering_disable4346", i1 false, i1 false}
!971 = !{!"../drivers/pci/quirks.c", i32 4345, i32 1}
!972 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4348, !973, !"__pci_fixup_quirk_relaxedordering_disable4348", i1 false, i1 false}
!973 = !{!"../drivers/pci/quirks.c", i32 4347, i32 1}
!974 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4350, !975, !"__pci_fixup_quirk_relaxedordering_disable4350", i1 false, i1 false}
!975 = !{!"../drivers/pci/quirks.c", i32 4349, i32 1}
!976 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4352, !977, !"__pci_fixup_quirk_relaxedordering_disable4352", i1 false, i1 false}
!977 = !{!"../drivers/pci/quirks.c", i32 4351, i32 1}
!978 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4354, !979, !"__pci_fixup_quirk_relaxedordering_disable4354", i1 false, i1 false}
!979 = !{!"../drivers/pci/quirks.c", i32 4353, i32 1}
!980 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4356, !981, !"__pci_fixup_quirk_relaxedordering_disable4356", i1 false, i1 false}
!981 = !{!"../drivers/pci/quirks.c", i32 4355, i32 1}
!982 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4358, !983, !"__pci_fixup_quirk_relaxedordering_disable4358", i1 false, i1 false}
!983 = !{!"../drivers/pci/quirks.c", i32 4357, i32 1}
!984 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4360, !985, !"__pci_fixup_quirk_relaxedordering_disable4360", i1 false, i1 false}
!985 = !{!"../drivers/pci/quirks.c", i32 4359, i32 1}
!986 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4362, !987, !"__pci_fixup_quirk_relaxedordering_disable4362", i1 false, i1 false}
!987 = !{!"../drivers/pci/quirks.c", i32 4361, i32 1}
!988 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4364, !989, !"__pci_fixup_quirk_relaxedordering_disable4364", i1 false, i1 false}
!989 = !{!"../drivers/pci/quirks.c", i32 4363, i32 1}
!990 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4366, !991, !"__pci_fixup_quirk_relaxedordering_disable4366", i1 false, i1 false}
!991 = !{!"../drivers/pci/quirks.c", i32 4365, i32 1}
!992 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4368, !993, !"__pci_fixup_quirk_relaxedordering_disable4368", i1 false, i1 false}
!993 = !{!"../drivers/pci/quirks.c", i32 4367, i32 1}
!994 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4380, !995, !"__pci_fixup_quirk_relaxedordering_disable4380", i1 false, i1 false}
!995 = !{!"../drivers/pci/quirks.c", i32 4379, i32 1}
!996 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4382, !997, !"__pci_fixup_quirk_relaxedordering_disable4382", i1 false, i1 false}
!997 = !{!"../drivers/pci/quirks.c", i32 4381, i32 1}
!998 = !{ptr @__pci_fixup_quirk_relaxedordering_disable4384, !999, !"__pci_fixup_quirk_relaxedordering_disable4384", i1 false, i1 false}
!999 = !{!"../drivers/pci/quirks.c", i32 4383, i32 1}
!1000 = !{ptr @__pci_fixup_quirk_chelsio_T5_disable_root_port_attributes4441, !1001, !"__pci_fixup_quirk_chelsio_T5_disable_root_port_attributes4441", i1 false, i1 false}
!1001 = !{!"../drivers/pci/quirks.c", i32 4440, i32 1}
!1002 = !{ptr @__pci_fixup_quirk_intel_qat_vf_cap5297, !1003, !"__pci_fixup_quirk_intel_qat_vf_cap5297", i1 false, i1 false}
!1003 = !{!"../drivers/pci/quirks.c", i32 5297, i32 1}
!1004 = !{ptr @__pci_fixup_quirk_no_flr5313, !1005, !"__pci_fixup_quirk_no_flr5313", i1 false, i1 false}
!1005 = !{!"../drivers/pci/quirks.c", i32 5313, i32 1}
!1006 = !{ptr @__pci_fixup_quirk_no_flr5314, !1007, !"__pci_fixup_quirk_no_flr5314", i1 false, i1 false}
!1007 = !{!"../drivers/pci/quirks.c", i32 5314, i32 1}
!1008 = !{ptr @__pci_fixup_quirk_no_flr5315, !1009, !"__pci_fixup_quirk_no_flr5315", i1 false, i1 false}
!1009 = !{!"../drivers/pci/quirks.c", i32 5315, i32 1}
!1010 = !{ptr @__pci_fixup_quirk_no_flr5316, !1011, !"__pci_fixup_quirk_no_flr5316", i1 false, i1 false}
!1011 = !{!"../drivers/pci/quirks.c", i32 5316, i32 1}
!1012 = !{ptr @__pci_fixup_quirk_no_flr5317, !1013, !"__pci_fixup_quirk_no_flr5317", i1 false, i1 false}
!1013 = !{!"../drivers/pci/quirks.c", i32 5317, i32 1}
!1014 = !{ptr @__pci_fixup_quirk_no_ext_tags5331, !1015, !"__pci_fixup_quirk_no_ext_tags5331", i1 false, i1 false}
!1015 = !{!"../drivers/pci/quirks.c", i32 5331, i32 1}
!1016 = !{ptr @__pci_fixup_quirk_no_ext_tags5332, !1017, !"__pci_fixup_quirk_no_ext_tags5332", i1 false, i1 false}
!1017 = !{!"../drivers/pci/quirks.c", i32 5332, i32 1}
!1018 = !{ptr @__pci_fixup_quirk_no_ext_tags5333, !1019, !"__pci_fixup_quirk_no_ext_tags5333", i1 false, i1 false}
!1019 = !{!"../drivers/pci/quirks.c", i32 5333, i32 1}
!1020 = !{ptr @__pci_fixup_quirk_no_ext_tags5334, !1021, !"__pci_fixup_quirk_no_ext_tags5334", i1 false, i1 false}
!1021 = !{!"../drivers/pci/quirks.c", i32 5334, i32 1}
!1022 = !{ptr @__pci_fixup_quirk_no_ext_tags5335, !1023, !"__pci_fixup_quirk_no_ext_tags5335", i1 false, i1 false}
!1023 = !{!"../drivers/pci/quirks.c", i32 5335, i32 1}
!1024 = !{ptr @__pci_fixup_quirk_no_ext_tags5336, !1025, !"__pci_fixup_quirk_no_ext_tags5336", i1 false, i1 false}
!1025 = !{!"../drivers/pci/quirks.c", i32 5336, i32 1}
!1026 = !{ptr @__pci_fixup_quirk_no_ext_tags5337, !1027, !"__pci_fixup_quirk_no_ext_tags5337", i1 false, i1 false}
!1027 = !{!"../drivers/pci/quirks.c", i32 5337, i32 1}
!1028 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5364, !1029, !"__pci_fixup_quirk_amd_harvest_no_ats5364", i1 false, i1 false}
!1029 = !{!"../drivers/pci/quirks.c", i32 5364, i32 1}
!1030 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5366, !1031, !"__pci_fixup_quirk_amd_harvest_no_ats5366", i1 false, i1 false}
!1031 = !{!"../drivers/pci/quirks.c", i32 5366, i32 1}
!1032 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5368, !1033, !"__pci_fixup_quirk_amd_harvest_no_ats5368", i1 false, i1 false}
!1033 = !{!"../drivers/pci/quirks.c", i32 5368, i32 1}
!1034 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5369, !1035, !"__pci_fixup_quirk_amd_harvest_no_ats5369", i1 false, i1 false}
!1035 = !{!"../drivers/pci/quirks.c", i32 5369, i32 1}
!1036 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5370, !1037, !"__pci_fixup_quirk_amd_harvest_no_ats5370", i1 false, i1 false}
!1037 = !{!"../drivers/pci/quirks.c", i32 5370, i32 1}
!1038 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5371, !1039, !"__pci_fixup_quirk_amd_harvest_no_ats5371", i1 false, i1 false}
!1039 = !{!"../drivers/pci/quirks.c", i32 5371, i32 1}
!1040 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5372, !1041, !"__pci_fixup_quirk_amd_harvest_no_ats5372", i1 false, i1 false}
!1041 = !{!"../drivers/pci/quirks.c", i32 5372, i32 1}
!1042 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5373, !1043, !"__pci_fixup_quirk_amd_harvest_no_ats5373", i1 false, i1 false}
!1043 = !{!"../drivers/pci/quirks.c", i32 5373, i32 1}
!1044 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5374, !1045, !"__pci_fixup_quirk_amd_harvest_no_ats5374", i1 false, i1 false}
!1045 = !{!"../drivers/pci/quirks.c", i32 5374, i32 1}
!1046 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5375, !1047, !"__pci_fixup_quirk_amd_harvest_no_ats5375", i1 false, i1 false}
!1047 = !{!"../drivers/pci/quirks.c", i32 5375, i32 1}
!1048 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5377, !1049, !"__pci_fixup_quirk_amd_harvest_no_ats5377", i1 false, i1 false}
!1049 = !{!"../drivers/pci/quirks.c", i32 5377, i32 1}
!1050 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5378, !1051, !"__pci_fixup_quirk_amd_harvest_no_ats5378", i1 false, i1 false}
!1051 = !{!"../drivers/pci/quirks.c", i32 5378, i32 1}
!1052 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5379, !1053, !"__pci_fixup_quirk_amd_harvest_no_ats5379", i1 false, i1 false}
!1053 = !{!"../drivers/pci/quirks.c", i32 5379, i32 1}
!1054 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5380, !1055, !"__pci_fixup_quirk_amd_harvest_no_ats5380", i1 false, i1 false}
!1055 = !{!"../drivers/pci/quirks.c", i32 5380, i32 1}
!1056 = !{ptr @__pci_fixup_quirk_amd_harvest_no_ats5382, !1057, !"__pci_fixup_quirk_amd_harvest_no_ats5382", i1 false, i1 false}
!1057 = !{!"../drivers/pci/quirks.c", i32 5382, i32 1}
!1058 = !{ptr @__pci_fixup_quirk_fsl_no_msi5391, !1059, !"__pci_fixup_quirk_fsl_no_msi5391", i1 false, i1 false}
!1059 = !{!"../drivers/pci/quirks.c", i32 5391, i32 1}
!1060 = !{ptr @__pci_fixup_quirk_gpu_hda5439, !1061, !"__pci_fixup_quirk_gpu_hda5439", i1 false, i1 false}
!1061 = !{!"../drivers/pci/quirks.c", i32 5438, i32 1}
!1062 = !{ptr @__pci_fixup_quirk_gpu_hda5441, !1063, !"__pci_fixup_quirk_gpu_hda5441", i1 false, i1 false}
!1063 = !{!"../drivers/pci/quirks.c", i32 5440, i32 1}
!1064 = !{ptr @__pci_fixup_quirk_gpu_hda5443, !1065, !"__pci_fixup_quirk_gpu_hda5443", i1 false, i1 false}
!1065 = !{!"../drivers/pci/quirks.c", i32 5442, i32 1}
!1066 = !{ptr @__pci_fixup_quirk_gpu_usb5454, !1067, !"__pci_fixup_quirk_gpu_usb5454", i1 false, i1 false}
!1067 = !{!"../drivers/pci/quirks.c", i32 5453, i32 1}
!1068 = !{ptr @__pci_fixup_quirk_gpu_usb5456, !1069, !"__pci_fixup_quirk_gpu_usb5456", i1 false, i1 false}
!1069 = !{!"../drivers/pci/quirks.c", i32 5455, i32 1}
!1070 = !{ptr @__pci_fixup_quirk_gpu_usb_typec_ucsi5471, !1071, !"__pci_fixup_quirk_gpu_usb_typec_ucsi5471", i1 false, i1 false}
!1071 = !{!"../drivers/pci/quirks.c", i32 5469, i32 1}
!1072 = !{ptr @__pci_fixup_quirk_gpu_usb_typec_ucsi5474, !1073, !"__pci_fixup_quirk_gpu_usb_typec_ucsi5474", i1 false, i1 false}
!1073 = !{!"../drivers/pci/quirks.c", i32 5472, i32 1}
!1074 = !{ptr @__pci_fixup_quirk_nvidia_hda5502, !1075, !"__pci_fixup_quirk_nvidia_hda5502", i1 false, i1 false}
!1075 = !{!"../drivers/pci/quirks.c", i32 5501, i32 1}
!1076 = !{ptr @__pci_fixup_resume_earlyquirk_nvidia_hda5504, !1077, !"__pci_fixup_resume_earlyquirk_nvidia_hda5504", i1 false, i1 false}
!1077 = !{!"../drivers/pci/quirks.c", i32 5503, i32 1}
!1078 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5645, !1079, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5645", i1 false, i1 false}
!1079 = !{!"../drivers/pci/quirks.c", i32 5645, i32 1}
!1080 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5646, !1081, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5646", i1 false, i1 false}
!1081 = !{!"../drivers/pci/quirks.c", i32 5646, i32 1}
!1082 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5647, !1083, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5647", i1 false, i1 false}
!1083 = !{!"../drivers/pci/quirks.c", i32 5647, i32 1}
!1084 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5648, !1085, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5648", i1 false, i1 false}
!1085 = !{!"../drivers/pci/quirks.c", i32 5648, i32 1}
!1086 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5649, !1087, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5649", i1 false, i1 false}
!1087 = !{!"../drivers/pci/quirks.c", i32 5649, i32 1}
!1088 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5650, !1089, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5650", i1 false, i1 false}
!1089 = !{!"../drivers/pci/quirks.c", i32 5650, i32 1}
!1090 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5651, !1091, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5651", i1 false, i1 false}
!1091 = !{!"../drivers/pci/quirks.c", i32 5651, i32 1}
!1092 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5652, !1093, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5652", i1 false, i1 false}
!1093 = !{!"../drivers/pci/quirks.c", i32 5652, i32 1}
!1094 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5653, !1095, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5653", i1 false, i1 false}
!1095 = !{!"../drivers/pci/quirks.c", i32 5653, i32 1}
!1096 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5654, !1097, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5654", i1 false, i1 false}
!1097 = !{!"../drivers/pci/quirks.c", i32 5654, i32 1}
!1098 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5655, !1099, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5655", i1 false, i1 false}
!1099 = !{!"../drivers/pci/quirks.c", i32 5655, i32 1}
!1100 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5656, !1101, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5656", i1 false, i1 false}
!1101 = !{!"../drivers/pci/quirks.c", i32 5656, i32 1}
!1102 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5657, !1103, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5657", i1 false, i1 false}
!1103 = !{!"../drivers/pci/quirks.c", i32 5657, i32 1}
!1104 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5658, !1105, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5658", i1 false, i1 false}
!1105 = !{!"../drivers/pci/quirks.c", i32 5658, i32 1}
!1106 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5659, !1107, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5659", i1 false, i1 false}
!1107 = !{!"../drivers/pci/quirks.c", i32 5659, i32 1}
!1108 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5660, !1109, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5660", i1 false, i1 false}
!1109 = !{!"../drivers/pci/quirks.c", i32 5660, i32 1}
!1110 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5661, !1111, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5661", i1 false, i1 false}
!1111 = !{!"../drivers/pci/quirks.c", i32 5661, i32 1}
!1112 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5662, !1113, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5662", i1 false, i1 false}
!1113 = !{!"../drivers/pci/quirks.c", i32 5662, i32 1}
!1114 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5663, !1115, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5663", i1 false, i1 false}
!1115 = !{!"../drivers/pci/quirks.c", i32 5663, i32 1}
!1116 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5664, !1117, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5664", i1 false, i1 false}
!1117 = !{!"../drivers/pci/quirks.c", i32 5664, i32 1}
!1118 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5665, !1119, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5665", i1 false, i1 false}
!1119 = !{!"../drivers/pci/quirks.c", i32 5665, i32 1}
!1120 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5666, !1121, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5666", i1 false, i1 false}
!1121 = !{!"../drivers/pci/quirks.c", i32 5666, i32 1}
!1122 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5667, !1123, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5667", i1 false, i1 false}
!1123 = !{!"../drivers/pci/quirks.c", i32 5667, i32 1}
!1124 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5668, !1125, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5668", i1 false, i1 false}
!1125 = !{!"../drivers/pci/quirks.c", i32 5668, i32 1}
!1126 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5669, !1127, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5669", i1 false, i1 false}
!1127 = !{!"../drivers/pci/quirks.c", i32 5669, i32 1}
!1128 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5670, !1129, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5670", i1 false, i1 false}
!1129 = !{!"../drivers/pci/quirks.c", i32 5670, i32 1}
!1130 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5671, !1131, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5671", i1 false, i1 false}
!1131 = !{!"../drivers/pci/quirks.c", i32 5671, i32 1}
!1132 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5672, !1133, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5672", i1 false, i1 false}
!1133 = !{!"../drivers/pci/quirks.c", i32 5672, i32 1}
!1134 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5673, !1135, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5673", i1 false, i1 false}
!1135 = !{!"../drivers/pci/quirks.c", i32 5673, i32 1}
!1136 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5674, !1137, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5674", i1 false, i1 false}
!1137 = !{!"../drivers/pci/quirks.c", i32 5674, i32 1}
!1138 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5675, !1139, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5675", i1 false, i1 false}
!1139 = !{!"../drivers/pci/quirks.c", i32 5675, i32 1}
!1140 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5676, !1141, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5676", i1 false, i1 false}
!1141 = !{!"../drivers/pci/quirks.c", i32 5676, i32 1}
!1142 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5677, !1143, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5677", i1 false, i1 false}
!1143 = !{!"../drivers/pci/quirks.c", i32 5677, i32 1}
!1144 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5678, !1145, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5678", i1 false, i1 false}
!1145 = !{!"../drivers/pci/quirks.c", i32 5678, i32 1}
!1146 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5679, !1147, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5679", i1 false, i1 false}
!1147 = !{!"../drivers/pci/quirks.c", i32 5679, i32 1}
!1148 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5680, !1149, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5680", i1 false, i1 false}
!1149 = !{!"../drivers/pci/quirks.c", i32 5680, i32 1}
!1150 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5681, !1151, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5681", i1 false, i1 false}
!1151 = !{!"../drivers/pci/quirks.c", i32 5681, i32 1}
!1152 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5682, !1153, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5682", i1 false, i1 false}
!1153 = !{!"../drivers/pci/quirks.c", i32 5682, i32 1}
!1154 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5683, !1155, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5683", i1 false, i1 false}
!1155 = !{!"../drivers/pci/quirks.c", i32 5683, i32 1}
!1156 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5684, !1157, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5684", i1 false, i1 false}
!1157 = !{!"../drivers/pci/quirks.c", i32 5684, i32 1}
!1158 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5685, !1159, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5685", i1 false, i1 false}
!1159 = !{!"../drivers/pci/quirks.c", i32 5685, i32 1}
!1160 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5686, !1161, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5686", i1 false, i1 false}
!1161 = !{!"../drivers/pci/quirks.c", i32 5686, i32 1}
!1162 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5687, !1163, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5687", i1 false, i1 false}
!1163 = !{!"../drivers/pci/quirks.c", i32 5687, i32 1}
!1164 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5688, !1165, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5688", i1 false, i1 false}
!1165 = !{!"../drivers/pci/quirks.c", i32 5688, i32 1}
!1166 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5689, !1167, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5689", i1 false, i1 false}
!1167 = !{!"../drivers/pci/quirks.c", i32 5689, i32 1}
!1168 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5690, !1169, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5690", i1 false, i1 false}
!1169 = !{!"../drivers/pci/quirks.c", i32 5690, i32 1}
!1170 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5691, !1171, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5691", i1 false, i1 false}
!1171 = !{!"../drivers/pci/quirks.c", i32 5691, i32 1}
!1172 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5692, !1173, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5692", i1 false, i1 false}
!1173 = !{!"../drivers/pci/quirks.c", i32 5692, i32 1}
!1174 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5693, !1175, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5693", i1 false, i1 false}
!1175 = !{!"../drivers/pci/quirks.c", i32 5693, i32 1}
!1176 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5694, !1177, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5694", i1 false, i1 false}
!1177 = !{!"../drivers/pci/quirks.c", i32 5694, i32 1}
!1178 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5695, !1179, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5695", i1 false, i1 false}
!1179 = !{!"../drivers/pci/quirks.c", i32 5695, i32 1}
!1180 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5696, !1181, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5696", i1 false, i1 false}
!1181 = !{!"../drivers/pci/quirks.c", i32 5696, i32 1}
!1182 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5697, !1183, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5697", i1 false, i1 false}
!1183 = !{!"../drivers/pci/quirks.c", i32 5697, i32 1}
!1184 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5698, !1185, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5698", i1 false, i1 false}
!1185 = !{!"../drivers/pci/quirks.c", i32 5698, i32 1}
!1186 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5699, !1187, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5699", i1 false, i1 false}
!1187 = !{!"../drivers/pci/quirks.c", i32 5699, i32 1}
!1188 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5700, !1189, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5700", i1 false, i1 false}
!1189 = !{!"../drivers/pci/quirks.c", i32 5700, i32 1}
!1190 = !{ptr @__pci_fixup_quirk_switchtec_ntb_dma_alias5701, !1191, !"__pci_fixup_quirk_switchtec_ntb_dma_alias5701", i1 false, i1 false}
!1191 = !{!"../drivers/pci/quirks.c", i32 5701, i32 1}
!1192 = !{ptr @__pci_fixup_quirk_plx_ntb_dma_alias5715, !1193, !"__pci_fixup_quirk_plx_ntb_dma_alias5715", i1 false, i1 false}
!1193 = !{!"../drivers/pci/quirks.c", i32 5715, i32 1}
!1194 = !{ptr @__pci_fixup_quirk_plx_ntb_dma_alias5716, !1195, !"__pci_fixup_quirk_plx_ntb_dma_alias5716", i1 false, i1 false}
!1195 = !{!"../drivers/pci/quirks.c", i32 5716, i32 1}
!1196 = !{ptr @__pci_fixup_quirk_reset_lenovo_thinkpad_p50_nvgpu5774, !1197, !"__pci_fixup_quirk_reset_lenovo_thinkpad_p50_nvgpu5774", i1 false, i1 false}
!1197 = !{!"../drivers/pci/quirks.c", i32 5772, i32 1}
!1198 = !{ptr @__pci_fixup_pci_fixup_no_d0_pme5785, !1199, !"__pci_fixup_pci_fixup_no_d0_pme5785", i1 false, i1 false}
!1199 = !{!"../drivers/pci/quirks.c", i32 5785, i32 1}
!1200 = !{ptr @__pci_fixup_pci_fixup_no_msi_no_pme5806, !1201, !"__pci_fixup_pci_fixup_no_msi_no_pme5806", i1 false, i1 false}
!1201 = !{!"../drivers/pci/quirks.c", i32 5806, i32 1}
!1202 = !{ptr @__pci_fixup_pci_fixup_no_msi_no_pme5807, !1203, !"__pci_fixup_pci_fixup_no_msi_no_pme5807", i1 false, i1 false}
!1203 = !{!"../drivers/pci/quirks.c", i32 5807, i32 1}
!1204 = !{ptr @__pci_fixup_apex_pci_fixup_class5814, !1205, !"__pci_fixup_apex_pci_fixup_class5814", i1 false, i1 false}
!1205 = !{!"../drivers/pci/quirks.c", i32 5813, i32 1}
!1206 = !{ptr @__pci_fixup_pci_fixup_pericom_acs_store_forward5859, !1207, !"__pci_fixup_pci_fixup_pericom_acs_store_forward5859", i1 false, i1 false}
!1207 = !{!"../drivers/pci/quirks.c", i32 5858, i32 1}
!1208 = !{ptr @__pci_fixup_resumepci_fixup_pericom_acs_store_forward5861, !1209, !"__pci_fixup_resumepci_fixup_pericom_acs_store_forward5861", i1 false, i1 false}
!1209 = !{!"../drivers/pci/quirks.c", i32 5860, i32 1}
!1210 = !{ptr @__pci_fixup_pci_fixup_pericom_acs_store_forward5863, !1211, !"__pci_fixup_pci_fixup_pericom_acs_store_forward5863", i1 false, i1 false}
!1211 = !{!"../drivers/pci/quirks.c", i32 5862, i32 1}
!1212 = !{ptr @__pci_fixup_resumepci_fixup_pericom_acs_store_forward5865, !1213, !"__pci_fixup_resumepci_fixup_pericom_acs_store_forward5865", i1 false, i1 false}
!1213 = !{!"../drivers/pci/quirks.c", i32 5864, i32 1}
!1214 = !{ptr @__pci_fixup_pci_fixup_pericom_acs_store_forward5867, !1215, !"__pci_fixup_pci_fixup_pericom_acs_store_forward5867", i1 false, i1 false}
!1215 = !{!"../drivers/pci/quirks.c", i32 5866, i32 1}
!1216 = !{ptr @__pci_fixup_resumepci_fixup_pericom_acs_store_forward5869, !1217, !"__pci_fixup_resumepci_fixup_pericom_acs_store_forward5869", i1 false, i1 false}
!1217 = !{!"../drivers/pci/quirks.c", i32 5868, i32 1}
!1218 = !{ptr @__pci_fixup_nvidia_ion_ahci_fixup5875, !1219, !"__pci_fixup_nvidia_ion_ahci_fixup5875", i1 false, i1 false}
!1219 = !{!"../drivers/pci/quirks.c", i32 5875, i32 1}
!1220 = !{ptr @__pci_fixup_rom_bar_overlap_defect5882, !1221, !"__pci_fixup_rom_bar_overlap_defect5882", i1 false, i1 false}
!1221 = !{!"../drivers/pci/quirks.c", i32 5882, i32 1}
!1222 = !{ptr @__pci_fixup_rom_bar_overlap_defect5883, !1223, !"__pci_fixup_rom_bar_overlap_defect5883", i1 false, i1 false}
!1223 = !{!"../drivers/pci/quirks.c", i32 5883, i32 1}
!1224 = !{ptr @__pci_fixup_rom_bar_overlap_defect5884, !1225, !"__pci_fixup_rom_bar_overlap_defect5884", i1 false, i1 false}
!1225 = !{!"../drivers/pci/quirks.c", i32 5884, i32 1}
!1226 = !{ptr @__pci_fixup_rom_bar_overlap_defect5885, !1227, !"__pci_fixup_rom_bar_overlap_defect5885", i1 false, i1 false}
!1227 = !{!"../drivers/pci/quirks.c", i32 5885, i32 1}
!1228 = distinct !{null, !1229, !"pci_apply_fixup_final_quirks", i1 false, i1 false}
!1229 = !{!"../drivers/pci/quirks.c", i32 98, i32 13}
!1230 = !{ptr @.str, !1231, !"<string literal>", i1 false, i1 false}
!1231 = !{!"../drivers/pci/quirks.c", i32 39, i32 3}
!1232 = !{ptr @.str.1, !1231, !"<string literal>", i1 false, i1 false}
!1233 = !{ptr @.str.2, !1231, !"<string literal>", i1 false, i1 false}
!1234 = !{ptr @.str.3, !1231, !"<string literal>", i1 false, i1 false}
!1235 = !{ptr @.str.4, !1231, !"<string literal>", i1 false, i1 false}
!1236 = !{ptr @fixup_debug_start._entry, !1231, !"_entry", i1 false, i1 false}
!1237 = !{ptr @fixup_debug_start._entry_ptr, !1231, !"_entry_ptr", i1 false, i1 false}
!1238 = !{ptr @.str.5, !1239, !"<string literal>", i1 false, i1 false}
!1239 = !{!"../drivers/pci/quirks.c", i32 54, i32 3}
!1240 = !{ptr @.str.6, !1239, !"<string literal>", i1 false, i1 false}
!1241 = !{ptr @fixup_debug_report._entry, !1239, !"_entry", i1 false, i1 false}
!1242 = !{ptr @fixup_debug_report._entry_ptr, !1239, !"_entry_ptr", i1 false, i1 false}
!1243 = !{ptr @.str.7, !1244, !"<string literal>", i1 false, i1 false}
!1244 = !{!"../drivers/pci/quirks.c", i32 162, i32 3}
!1245 = !{ptr @.str.8, !1244, !"<string literal>", i1 false, i1 false}
!1246 = !{ptr @pci_apply_final_quirks._entry, !1244, !"_entry", i1 false, i1 false}
!1247 = !{ptr @pci_apply_final_quirks._entry_ptr, !1244, !"_entry_ptr", i1 false, i1 false}
!1248 = !{ptr @.str.10, !1249, !"<string literal>", i1 false, i1 false}
!1249 = !{!"../drivers/pci/quirks.c", i32 179, i32 4}
!1250 = !{ptr @pci_apply_final_quirks._entry.9, !1249, !"_entry", i1 false, i1 false}
!1251 = !{ptr @pci_apply_final_quirks._entry_ptr.11, !1249, !"_entry_ptr", i1 false, i1 false}
!1252 = !{ptr @.str.13, !1253, !"<string literal>", i1 false, i1 false}
!1253 = !{!"../drivers/pci/quirks.c", i32 187, i32 3}
!1254 = !{ptr @pci_apply_final_quirks._entry.12, !1253, !"_entry", i1 false, i1 false}
!1255 = !{ptr @pci_apply_final_quirks._entry_ptr.14, !1253, !"_entry_ptr", i1 false, i1 false}
!1256 = !{ptr @.str.15, !1257, !"<string literal>", i1 false, i1 false}
!1257 = !{!"../drivers/pci/quirks.c", i32 232, i32 4}
!1258 = !{ptr @.str.16, !1257, !"<string literal>", i1 false, i1 false}
!1259 = !{ptr @quirk_passive_release._entry, !1257, !"_entry", i1 false, i1 false}
!1260 = !{ptr @quirk_passive_release._entry_ptr, !1257, !"_entry_ptr", i1 false, i1 false}
!1261 = !{ptr @.str.17, !1262, !"<string literal>", i1 false, i1 false}
!1262 = !{!"../drivers/pci/quirks.c", i32 253, i32 3}
!1263 = !{ptr @.str.18, !1262, !"<string literal>", i1 false, i1 false}
!1264 = !{ptr @quirk_isa_dma_hangs._entry, !1262, !"_entry", i1 false, i1 false}
!1265 = !{ptr @quirk_isa_dma_hangs._entry_ptr, !1262, !"_entry_ptr", i1 false, i1 false}
!1266 = !{ptr @.str.19, !1267, !"<string literal>", i1 false, i1 false}
!1267 = !{!"../drivers/pci/quirks.c", i32 282, i32 3}
!1268 = !{ptr @.str.20, !1267, !"<string literal>", i1 false, i1 false}
!1269 = !{ptr @quirk_tigerpoint_bm_sts._entry, !1267, !"_entry", i1 false, i1 false}
!1270 = !{ptr @quirk_tigerpoint_bm_sts._entry_ptr, !1267, !"_entry_ptr", i1 false, i1 false}
!1271 = !{ptr @.str.21, !1272, !"<string literal>", i1 false, i1 false}
!1272 = !{!"../drivers/pci/quirks.c", i32 292, i32 3}
!1273 = !{ptr @.str.22, !1272, !"<string literal>", i1 false, i1 false}
!1274 = !{ptr @quirk_nopcipci._entry, !1272, !"_entry", i1 false, i1 false}
!1275 = !{ptr @quirk_nopcipci._entry_ptr, !1272, !"_entry_ptr", i1 false, i1 false}
!1276 = !{ptr @.str.23, !1277, !"<string literal>", i1 false, i1 false}
!1277 = !{!"../drivers/pci/quirks.c", i32 305, i32 3}
!1278 = !{ptr @.str.24, !1277, !"<string literal>", i1 false, i1 false}
!1279 = !{ptr @quirk_nopciamd._entry, !1277, !"_entry", i1 false, i1 false}
!1280 = !{ptr @quirk_nopciamd._entry_ptr, !1277, !"_entry_ptr", i1 false, i1 false}
!1281 = !{ptr @.str.25, !1282, !"<string literal>", i1 false, i1 false}
!1282 = !{!"../drivers/pci/quirks.c", i32 315, i32 3}
!1283 = !{ptr @.str.26, !1282, !"<string literal>", i1 false, i1 false}
!1284 = !{ptr @quirk_triton._entry, !1282, !"_entry", i1 false, i1 false}
!1285 = !{ptr @quirk_triton._entry_ptr, !1282, !"_entry_ptr", i1 false, i1 false}
!1286 = !{ptr @.str.27, !1287, !"<string literal>", i1 false, i1 false}
!1287 = !{!"../drivers/pci/quirks.c", i32 384, i32 2}
!1288 = !{ptr @.str.28, !1287, !"<string literal>", i1 false, i1 false}
!1289 = !{ptr @quirk_vialatency._entry, !1287, !"_entry", i1 false, i1 false}
!1290 = !{ptr @quirk_vialatency._entry_ptr, !1287, !"_entry_ptr", i1 false, i1 false}
!1291 = !{ptr @.str.29, !1292, !"<string literal>", i1 false, i1 false}
!1292 = !{!"../drivers/pci/quirks.c", i32 400, i32 3}
!1293 = !{ptr @quirk_viaetbf._entry, !1292, !"_entry", i1 false, i1 false}
!1294 = !{ptr @quirk_viaetbf._entry_ptr, !1292, !"_entry_ptr", i1 false, i1 false}
!1295 = !{ptr @.str.30, !1296, !"<string literal>", i1 false, i1 false}
!1296 = !{!"../drivers/pci/quirks.c", i32 409, i32 3}
!1297 = !{ptr @quirk_vsfx._entry, !1296, !"_entry", i1 false, i1 false}
!1298 = !{ptr @quirk_vsfx._entry_ptr, !1296, !"_entry_ptr", i1 false, i1 false}
!1299 = !{ptr @.str.31, !1300, !"<string literal>", i1 false, i1 false}
!1300 = !{!"../drivers/pci/quirks.c", i32 423, i32 3}
!1301 = !{ptr @quirk_alimagik._entry, !1300, !"_entry", i1 false, i1 false}
!1302 = !{ptr @quirk_alimagik._entry_ptr, !1300, !"_entry_ptr", i1 false, i1 false}
!1303 = !{ptr @.str.32, !1304, !"<string literal>", i1 false, i1 false}
!1304 = !{!"../drivers/pci/quirks.c", i32 434, i32 3}
!1305 = !{ptr @quirk_natoma._entry, !1304, !"_entry", i1 false, i1 false}
!1306 = !{ptr @quirk_natoma._entry_ptr, !1304, !"_entry_ptr", i1 false, i1 false}
!1307 = !{ptr @.str.33, !1308, !"<string literal>", i1 false, i1 false}
!1308 = !{!"../drivers/pci/quirks.c", i32 480, i32 4}
!1309 = !{ptr @.str.34, !1308, !"<string literal>", i1 false, i1 false}
!1310 = !{ptr @quirk_extend_bar_to_page._entry, !1308, !"_entry", i1 false, i1 false}
!1311 = !{ptr @quirk_extend_bar_to_page._entry_ptr, !1308, !"_entry_ptr", i1 false, i1 false}
!1312 = !{ptr @.str.35, !1313, !"<string literal>", i1 false, i1 false}
!1313 = !{!"../drivers/pci/quirks.c", i32 542, i32 22}
!1314 = distinct !{null, !1315, !"name", i1 false, i1 false}
!1315 = !{!"../drivers/pci/quirks.c", i32 542, i32 15}
!1316 = !{ptr @.str.36, !1317, !"<string literal>", i1 false, i1 false}
!1317 = !{!"../drivers/pci/quirks.c", i32 548, i32 3}
!1318 = !{ptr @.str.37, !1317, !"<string literal>", i1 false, i1 false}
!1319 = !{ptr @quirk_cs5536_vsa._entry, !1317, !"_entry", i1 false, i1 false}
!1320 = !{ptr @quirk_cs5536_vsa._entry_ptr, !1317, !"_entry_ptr", i1 false, i1 false}
!1321 = !{ptr @.str.38, !1322, !"<string literal>", i1 false, i1 false}
!1322 = !{!"../drivers/pci/quirks.c", i32 527, i32 2}
!1323 = !{ptr @.str.39, !1322, !"<string literal>", i1 false, i1 false}
!1324 = !{ptr @quirk_io._entry, !1322, !"_entry", i1 false, i1 false}
!1325 = !{ptr @quirk_io._entry_ptr, !1322, !"_entry_ptr", i1 false, i1 false}
!1326 = !{ptr @.str.40, !1327, !"<string literal>", i1 false, i1 false}
!1327 = !{!"../drivers/pci/quirks.c", i32 585, i32 2}
!1328 = !{ptr @.str.41, !1327, !"<string literal>", i1 false, i1 false}
!1329 = !{ptr @quirk_ati_exploding_mce._entry, !1327, !"_entry", i1 false, i1 false}
!1330 = !{ptr @quirk_ati_exploding_mce._entry_ptr, !1327, !"_entry_ptr", i1 false, i1 false}
!1331 = !{ptr @.str.42, !1332, !"<string literal>", i1 false, i1 false}
!1332 = !{!"../drivers/pci/quirks.c", i32 587, i32 2}
!1333 = !{ptr @.str.43, !1334, !"<string literal>", i1 false, i1 false}
!1334 = !{!"../drivers/pci/quirks.c", i32 609, i32 2}
!1335 = !{ptr @.str.44, !1334, !"<string literal>", i1 false, i1 false}
!1336 = !{ptr @quirk_amd_nl_class._entry, !1334, !"_entry", i1 false, i1 false}
!1337 = !{ptr @quirk_amd_nl_class._entry_ptr, !1334, !"_entry_ptr", i1 false, i1 false}
!1338 = !{ptr @.str.45, !1339, !"<string literal>", i1 false, i1 false}
!1339 = !{!"../drivers/pci/quirks.c", i32 631, i32 3}
!1340 = !{ptr @quirk_synopsys_haps._entry, !1339, !"_entry", i1 false, i1 false}
!1341 = !{ptr @quirk_synopsys_haps._entry_ptr, !1339, !"_entry_ptr", i1 false, i1 false}
!1342 = !{ptr @.str.46, !1343, !"<string literal>", i1 false, i1 false}
!1343 = !{!"../drivers/pci/quirks.c", i32 652, i32 55}
!1344 = !{ptr @.str.47, !1345, !"<string literal>", i1 false, i1 false}
!1345 = !{!"../drivers/pci/quirks.c", i32 653, i32 57}
!1346 = !{ptr @.str.48, !1347, !"<string literal>", i1 false, i1 false}
!1347 = !{!"../drivers/pci/quirks.c", i32 576, i32 3}
!1348 = !{ptr @.str.49, !1347, !"<string literal>", i1 false, i1 false}
!1349 = !{ptr @quirk_io_region._entry, !1347, !"_entry", i1 false, i1 false}
!1350 = !{ptr @quirk_io_region._entry_ptr, !1347, !"_entry_ptr", i1 false, i1 false}
!1351 = !{ptr @.str.50, !1352, !"<string literal>", i1 false, i1 false}
!1352 = !{!"../drivers/pci/quirks.c", i32 719, i32 55}
!1353 = !{ptr @.str.51, !1354, !"<string literal>", i1 false, i1 false}
!1354 = !{!"../drivers/pci/quirks.c", i32 720, i32 57}
!1355 = !{ptr @.str.52, !1356, !"<string literal>", i1 false, i1 false}
!1356 = !{!"../drivers/pci/quirks.c", i32 725, i32 22}
!1357 = !{ptr @.str.53, !1358, !"<string literal>", i1 false, i1 false}
!1358 = !{!"../drivers/pci/quirks.c", i32 726, i32 22}
!1359 = !{ptr @.str.54, !1360, !"<string literal>", i1 false, i1 false}
!1360 = !{!"../drivers/pci/quirks.c", i32 732, i32 23}
!1361 = !{ptr @.str.55, !1362, !"<string literal>", i1 false, i1 false}
!1362 = !{!"../drivers/pci/quirks.c", i32 733, i32 24}
!1363 = !{ptr @.str.56, !1364, !"<string literal>", i1 false, i1 false}
!1364 = !{!"../drivers/pci/quirks.c", i32 737, i32 23}
!1365 = !{ptr @.str.57, !1366, !"<string literal>", i1 false, i1 false}
!1366 = !{!"../drivers/pci/quirks.c", i32 738, i32 24}
!1367 = !{ptr @.str.58, !1368, !"<string literal>", i1 false, i1 false}
!1368 = !{!"../drivers/pci/quirks.c", i32 740, i32 22}
!1369 = !{ptr @.str.59, !1370, !"<string literal>", i1 false, i1 false}
!1370 = !{!"../drivers/pci/quirks.c", i32 741, i32 22}
!1371 = !{ptr @.str.60, !1372, !"<string literal>", i1 false, i1 false}
!1372 = !{!"../drivers/pci/quirks.c", i32 680, i32 2}
!1373 = !{ptr @.str.61, !1372, !"<string literal>", i1 false, i1 false}
!1374 = !{ptr @piix4_io_quirk._entry, !1372, !"_entry", i1 false, i1 false}
!1375 = !{ptr @piix4_io_quirk._entry_ptr, !1372, !"_entry_ptr", i1 false, i1 false}
!1376 = !{ptr @.str.62, !1377, !"<string literal>", i1 false, i1 false}
!1377 = !{!"../drivers/pci/quirks.c", i32 706, i32 2}
!1378 = !{ptr @.str.63, !1377, !"<string literal>", i1 false, i1 false}
!1379 = !{ptr @piix4_mem_quirk._entry, !1377, !"_entry", i1 false, i1 false}
!1380 = !{ptr @piix4_mem_quirk._entry_ptr, !1377, !"_entry_ptr", i1 false, i1 false}
!1381 = !{ptr @.str.64, !1382, !"<string literal>", i1 false, i1 false}
!1382 = !{!"../drivers/pci/quirks.c", i32 776, i32 6}
!1383 = !{ptr @.str.65, !1384, !"<string literal>", i1 false, i1 false}
!1384 = !{!"../drivers/pci/quirks.c", i32 781, i32 5}
!1385 = !{ptr @.str.66, !1386, !"<string literal>", i1 false, i1 false}
!1386 = !{!"../drivers/pci/quirks.c", i32 847, i32 37}
!1387 = !{ptr @.str.67, !1388, !"<string literal>", i1 false, i1 false}
!1388 = !{!"../drivers/pci/quirks.c", i32 848, i32 37}
!1389 = !{ptr @.str.68, !1390, !"<string literal>", i1 false, i1 false}
!1390 = !{!"../drivers/pci/quirks.c", i32 801, i32 6}
!1391 = !{ptr @.str.69, !1392, !"<string literal>", i1 false, i1 false}
!1392 = !{!"../drivers/pci/quirks.c", i32 806, i32 5}
!1393 = !{ptr @.str.70, !1394, !"<string literal>", i1 false, i1 false}
!1394 = !{!"../drivers/pci/quirks.c", i32 838, i32 2}
!1395 = !{ptr @ich6_lpc_generic_decode._entry, !1394, !"_entry", i1 false, i1 false}
!1396 = !{ptr @ich6_lpc_generic_decode._entry_ptr, !1394, !"_entry_ptr", i1 false, i1 false}
!1397 = !{ptr @.str.71, !1398, !"<string literal>", i1 false, i1 false}
!1398 = !{!"../drivers/pci/quirks.c", i32 884, i32 37}
!1399 = !{ptr @.str.72, !1400, !"<string literal>", i1 false, i1 false}
!1400 = !{!"../drivers/pci/quirks.c", i32 885, i32 37}
!1401 = !{ptr @.str.73, !1402, !"<string literal>", i1 false, i1 false}
!1402 = !{!"../drivers/pci/quirks.c", i32 886, i32 37}
!1403 = !{ptr @.str.74, !1404, !"<string literal>", i1 false, i1 false}
!1404 = !{!"../drivers/pci/quirks.c", i32 887, i32 37}
!1405 = !{ptr @.str.75, !1406, !"<string literal>", i1 false, i1 false}
!1406 = !{!"../drivers/pci/quirks.c", i32 874, i32 2}
!1407 = !{ptr @.str.76, !1406, !"<string literal>", i1 false, i1 false}
!1408 = !{ptr @ich7_lpc_generic_decode._entry, !1406, !"_entry", i1 false, i1 false}
!1409 = !{ptr @ich7_lpc_generic_decode._entry_ptr, !1406, !"_entry_ptr", i1 false, i1 false}
!1410 = !{ptr @.str.77, !1411, !"<string literal>", i1 false, i1 false}
!1411 = !{!"../drivers/pci/quirks.c", i32 911, i32 5}
!1412 = !{ptr @.str.78, !1413, !"<string literal>", i1 false, i1 false}
!1413 = !{!"../drivers/pci/quirks.c", i32 926, i32 6}
!1414 = !{ptr @.str.79, !1415, !"<string literal>", i1 false, i1 false}
!1415 = !{!"../drivers/pci/quirks.c", i32 928, i32 57}
!1416 = !{ptr @.str.80, !1417, !"<string literal>", i1 false, i1 false}
!1417 = !{!"../drivers/pci/quirks.c", i32 939, i32 56}
!1418 = !{ptr @.str.81, !1419, !"<string literal>", i1 false, i1 false}
!1419 = !{!"../drivers/pci/quirks.c", i32 940, i32 57}
!1420 = !{ptr @.str.82, !1421, !"<string literal>", i1 false, i1 false}
!1421 = !{!"../drivers/pci/quirks.c", i32 953, i32 2}
!1422 = !{ptr @.str.83, !1421, !"<string literal>", i1 false, i1 false}
!1423 = !{ptr @.str.84, !1421, !"<string literal>", i1 false, i1 false}
!1424 = !{ptr @quirk_xio2000a._entry, !1421, !"_entry", i1 false, i1 false}
!1425 = !{ptr @quirk_xio2000a._entry_ptr, !1421, !"_entry_ptr", i1 false, i1 false}
!1426 = !{ptr @.str.85, !1427, !"<string literal>", i1 false, i1 false}
!1427 = !{!"../drivers/pci/quirks.c", i32 1049, i32 3}
!1428 = !{ptr @.str.86, !1427, !"<string literal>", i1 false, i1 false}
!1429 = !{ptr @quirk_amd_8131_mmrbc._entry, !1427, !"_entry", i1 false, i1 false}
!1430 = !{ptr @quirk_amd_8131_mmrbc._entry_ptr, !1427, !"_entry_ptr", i1 false, i1 false}
!1431 = !{ptr @via_vlink_dev_lo, !1432, !"via_vlink_dev_lo", i1 false, i1 false}
!1432 = !{!"../drivers/pci/quirks.c", i32 1077, i32 12}
!1433 = !{ptr @via_vlink_dev_hi, !1434, !"via_vlink_dev_hi", i1 false, i1 false}
!1434 = !{!"../drivers/pci/quirks.c", i32 1077, i32 35}
!1435 = !{ptr @.str.87, !1436, !"<string literal>", i1 false, i1 false}
!1436 = !{!"../drivers/pci/quirks.c", i32 1152, i32 3}
!1437 = !{ptr @.str.88, !1436, !"<string literal>", i1 false, i1 false}
!1438 = !{ptr @quirk_via_vlink._entry, !1436, !"_entry", i1 false, i1 false}
!1439 = !{ptr @quirk_via_vlink._entry_ptr, !1436, !"_entry_ptr", i1 false, i1 false}
!1440 = !{ptr @.str.89, !1441, !"<string literal>", i1 false, i1 false}
!1441 = !{!"../drivers/pci/quirks.c", i32 1200, i32 3}
!1442 = !{ptr @.str.90, !1441, !"<string literal>", i1 false, i1 false}
!1443 = !{ptr @quirk_amd_ordering._entry, !1441, !"_entry", i1 false, i1 false}
!1444 = !{ptr @quirk_amd_ordering._entry_ptr, !1441, !"_entry_ptr", i1 false, i1 false}
!1445 = !{ptr @.str.91, !1446, !"<string literal>", i1 false, i1 false}
!1446 = !{!"../drivers/pci/quirks.c", i32 1252, i32 3}
!1447 = !{ptr @.str.92, !1446, !"<string literal>", i1 false, i1 false}
!1448 = !{ptr @quirk_mediagx_master._entry, !1446, !"_entry", i1 false, i1 false}
!1449 = !{ptr @quirk_mediagx_master._entry_ptr, !1446, !"_entry_ptr", i1 false, i1 false}
!1450 = !{ptr @.str.93, !1451, !"<string literal>", i1 false, i1 false}
!1451 = !{!"../drivers/pci/quirks.c", i32 1275, i32 3}
!1452 = !{ptr @.str.94, !1451, !"<string literal>", i1 false, i1 false}
!1453 = !{ptr @quirk_disable_pxb._entry, !1451, !"_entry", i1 false, i1 false}
!1454 = !{ptr @quirk_disable_pxb._entry_ptr, !1451, !"_entry_ptr", i1 false, i1 false}
!1455 = !{ptr @.str.95, !1456, !"<string literal>", i1 false, i1 false}
!1456 = !{!"../drivers/pci/quirks.c", i32 1295, i32 3}
!1457 = !{ptr @.str.96, !1456, !"<string literal>", i1 false, i1 false}
!1458 = !{ptr @quirk_amd_ide_mode._entry, !1456, !"_entry", i1 false, i1 false}
!1459 = !{ptr @quirk_amd_ide_mode._entry_ptr, !1456, !"_entry_ptr", i1 false, i1 false}
!1460 = !{ptr @.str.97, !1461, !"<string literal>", i1 false, i1 false}
!1461 = !{!"../drivers/pci/quirks.c", i32 1329, i32 3}
!1462 = !{ptr @.str.98, !1461, !"<string literal>", i1 false, i1 false}
!1463 = !{ptr @quirk_ide_samemode._entry, !1461, !"_entry", i1 false, i1 false}
!1464 = !{ptr @quirk_ide_samemode._entry_ptr, !1461, !"_entry_ptr", i1 false, i1 false}
!1465 = distinct !{null, !1466, !"asus_hides_smbus", i1 false, i1 false}
!1466 = !{!"../drivers/pci/quirks.c", i32 1390, i32 12}
!1467 = !{ptr @.str.99, !1468, !"<string literal>", i1 false, i1 false}
!1468 = !{!"../drivers/pci/quirks.c", i32 1537, i32 4}
!1469 = !{ptr @.str.100, !1468, !"<string literal>", i1 false, i1 false}
!1470 = !{ptr @asus_hides_smbus_lpc._entry, !1468, !"_entry", i1 false, i1 false}
!1471 = !{ptr @asus_hides_smbus_lpc._entry_ptr, !1468, !"_entry_ptr", i1 false, i1 false}
!1472 = !{ptr @.str.102, !1473, !"<string literal>", i1 false, i1 false}
!1473 = !{!"../drivers/pci/quirks.c", i32 1540, i32 4}
!1474 = !{ptr @asus_hides_smbus_lpc._entry.101, !1473, !"_entry", i1 false, i1 false}
!1475 = !{ptr @asus_hides_smbus_lpc._entry_ptr.103, !1473, !"_entry_ptr", i1 false, i1 false}
!1476 = !{ptr @asus_rcba_base, !1477, !"asus_rcba_base", i1 false, i1 false}
!1477 = !{!"../drivers/pci/quirks.c", i32 1559, i32 22}
!1478 = !{ptr @.str.104, !1479, !"<string literal>", i1 false, i1 false}
!1479 = !{!"../drivers/pci/quirks.c", i32 1596, i32 2}
!1480 = !{ptr @.str.105, !1479, !"<string literal>", i1 false, i1 false}
!1481 = !{ptr @asus_hides_smbus_lpc_ich6_resume._entry, !1479, !"_entry", i1 false, i1 false}
!1482 = !{ptr @asus_hides_smbus_lpc_ich6_resume._entry_ptr, !1479, !"_entry_ptr", i1 false, i1 false}
!1483 = !{ptr @.str.106, !1484, !"<string literal>", i1 false, i1 false}
!1484 = !{!"../drivers/pci/quirks.c", i32 1616, i32 3}
!1485 = !{ptr @.str.107, !1484, !"<string literal>", i1 false, i1 false}
!1486 = !{ptr @quirk_sis_96x_smbus._entry, !1484, !"_entry", i1 false, i1 false}
!1487 = !{ptr @quirk_sis_96x_smbus._entry_ptr, !1484, !"_entry_ptr", i1 false, i1 false}
!1488 = !{ptr @.str.108, !1489, !"<string literal>", i1 false, i1 false}
!1489 = !{!"../drivers/pci/quirks.c", i32 1687, i32 4}
!1490 = !{ptr @.str.109, !1489, !"<string literal>", i1 false, i1 false}
!1491 = !{ptr @asus_hides_ac97_lpc._entry, !1489, !"_entry", i1 false, i1 false}
!1492 = !{ptr @asus_hides_ac97_lpc._entry_ptr, !1489, !"_entry_ptr", i1 false, i1 false}
!1493 = !{ptr @.str.111, !1494, !"<string literal>", i1 false, i1 false}
!1494 = !{!"../drivers/pci/quirks.c", i32 1690, i32 4}
!1495 = !{ptr @asus_hides_ac97_lpc._entry.110, !1494, !"_entry", i1 false, i1 false}
!1496 = !{ptr @asus_hides_ac97_lpc._entry_ptr.112, !1494, !"_entry_ptr", i1 false, i1 false}
!1497 = !{ptr @.str.113, !1498, !"<string literal>", i1 false, i1 false}
!1498 = !{!"../drivers/pci/quirks.c", i32 1780, i32 3}
!1499 = !{ptr @.str.114, !1498, !"<string literal>", i1 false, i1 false}
!1500 = !{ptr @quirk_jmicron_async_suspend._entry, !1498, !"_entry", i1 false, i1 false}
!1501 = !{ptr @quirk_jmicron_async_suspend._entry_ptr, !1498, !"_entry_ptr", i1 false, i1 false}
!1502 = !{ptr @.str.115, !1503, !"<string literal>", i1 false, i1 false}
!1503 = !{!"../drivers/pci/quirks.c", i32 1839, i32 3}
!1504 = !{ptr @.str.116, !1505, !"<string literal>", i1 false, i1 false}
!1505 = !{!"../drivers/pci/quirks.c", i32 1854, i32 3}
!1506 = !{ptr @.str.117, !1505, !"<string literal>", i1 false, i1 false}
!1507 = !{ptr @quirk_huawei_pcie_sva._entry, !1505, !"_entry", i1 false, i1 false}
!1508 = !{ptr @quirk_huawei_pcie_sva._entry_ptr, !1505, !"_entry_ptr", i1 false, i1 false}
!1509 = !{ptr @.str.118, !1510, !"<string literal>", i1 false, i1 false}
!1510 = !{!"../drivers/pci/quirks.c", i32 1870, i32 2}
!1511 = !{ptr @.str.119, !1510, !"<string literal>", i1 false, i1 false}
!1512 = !{ptr @quirk_pcie_pxh._entry, !1510, !"_entry", i1 false, i1 false}
!1513 = !{ptr @quirk_pcie_pxh._entry_ptr, !1510, !"_entry_ptr", i1 false, i1 false}
!1514 = !{ptr @.str.120, !1515, !"<string literal>", i1 false, i1 false}
!1515 = !{!"../drivers/pci/quirks.c", i32 1915, i32 2}
!1516 = !{ptr @.str.121, !1515, !"<string literal>", i1 false, i1 false}
!1517 = !{ptr @quirk_d3hot_delay._entry, !1515, !"_entry", i1 false, i1 false}
!1518 = !{ptr @quirk_d3hot_delay._entry_ptr, !1515, !"_entry_ptr", i1 false, i1 false}
!1519 = !{ptr @.str.122, !1520, !"<string literal>", i1 false, i1 false}
!1520 = !{!"../drivers/pci/quirks.c", i32 2221, i32 4}
!1521 = !{ptr @.str.123, !1520, !"<string literal>", i1 false, i1 false}
!1522 = !{ptr @quirk_plx_pci9050._entry, !1520, !"_entry", i1 false, i1 false}
!1523 = !{ptr @quirk_plx_pci9050._entry_ptr, !1520, !"_entry_ptr", i1 false, i1 false}
!1524 = !{ptr @.str.124, !1525, !"<string literal>", i1 false, i1 false}
!1525 = !{!"../drivers/pci/quirks.c", i32 2269, i32 4}
!1526 = !{ptr @.str.125, !1525, !"<string literal>", i1 false, i1 false}
!1527 = !{ptr @quirk_netmos._entry, !1525, !"_entry", i1 false, i1 false}
!1528 = !{ptr @quirk_netmos._entry_ptr, !1525, !"_entry_ptr", i1 false, i1 false}
!1529 = !{ptr @.str.126, !1530, !"<string literal>", i1 false, i1 false}
!1530 = !{!"../drivers/pci/quirks.c", i32 2330, i32 3}
!1531 = !{ptr @.str.127, !1530, !"<string literal>", i1 false, i1 false}
!1532 = !{ptr @quirk_e100_interrupt._entry, !1530, !"_entry", i1 false, i1 false}
!1533 = !{ptr @quirk_e100_interrupt._entry_ptr, !1530, !"_entry_ptr", i1 false, i1 false}
!1534 = !{ptr @.str.129, !1535, !"<string literal>", i1 false, i1 false}
!1535 = !{!"../drivers/pci/quirks.c", i32 2336, i32 3}
!1536 = !{ptr @quirk_e100_interrupt._entry.128, !1535, !"_entry", i1 false, i1 false}
!1537 = !{ptr @quirk_e100_interrupt._entry_ptr.130, !1535, !"_entry_ptr", i1 false, i1 false}
!1538 = !{ptr @.str.131, !1539, !"<string literal>", i1 false, i1 false}
!1539 = !{!"../drivers/pci/quirks.c", i32 2351, i32 2}
!1540 = !{ptr @.str.132, !1539, !"<string literal>", i1 false, i1 false}
!1541 = !{ptr @quirk_disable_aspm_l0s._entry, !1539, !"_entry", i1 false, i1 false}
!1542 = !{ptr @quirk_disable_aspm_l0s._entry_ptr, !1539, !"_entry_ptr", i1 false, i1 false}
!1543 = !{ptr @.str.133, !1544, !"<string literal>", i1 false, i1 false}
!1544 = !{!"../drivers/pci/quirks.c", i32 2371, i32 2}
!1545 = !{ptr @.str.134, !1544, !"<string literal>", i1 false, i1 false}
!1546 = !{ptr @quirk_disable_aspm_l0s_l1._entry, !1544, !"_entry", i1 false, i1 false}
!1547 = !{ptr @quirk_disable_aspm_l0s_l1._entry_ptr, !1544, !"_entry_ptr", i1 false, i1 false}
!1548 = !{ptr @.str.135, !1549, !"<string literal>", i1 false, i1 false}
!1549 = !{!"../drivers/pci/quirks.c", i32 2393, i32 2}
!1550 = !{ptr @.str.136, !1549, !"<string literal>", i1 false, i1 false}
!1551 = !{ptr @quirk_enable_clear_retrain_link._entry, !1549, !"_entry", i1 false, i1 false}
!1552 = !{ptr @quirk_enable_clear_retrain_link._entry_ptr, !1549, !"_entry_ptr", i1 false, i1 false}
!1553 = !{ptr @.str.137, !1554, !"<string literal>", i1 false, i1 false}
!1554 = !{!"../drivers/pci/quirks.c", i32 2411, i32 2}
!1555 = !{ptr @.str.138, !1554, !"<string literal>", i1 false, i1 false}
!1556 = !{ptr @fixup_rev1_53c810._entry, !1554, !"_entry", i1 false, i1 false}
!1557 = !{ptr @fixup_rev1_53c810._entry_ptr, !1554, !"_entry_ptr", i1 false, i1 false}
!1558 = !{ptr @.str.139, !1559, !"<string literal>", i1 false, i1 false}
!1559 = !{!"../drivers/pci/quirks.c", i32 2424, i32 3}
!1560 = !{ptr @.str.140, !1559, !"<string literal>", i1 false, i1 false}
!1561 = !{ptr @quirk_p64h2_1k_io._entry, !1559, !"_entry", i1 false, i1 false}
!1562 = !{ptr @quirk_p64h2_1k_io._entry_ptr, !1559, !"_entry_ptr", i1 false, i1 false}
!1563 = !{ptr @.str.141, !1564, !"<string literal>", i1 false, i1 false}
!1564 = !{!"../drivers/pci/quirks.c", i32 2442, i32 4}
!1565 = !{ptr @.str.142, !1564, !"<string literal>", i1 false, i1 false}
!1566 = !{ptr @quirk_nvidia_ck804_pcie_aer_ext_cap._entry, !1564, !"_entry", i1 false, i1 false}
!1567 = !{ptr @quirk_nvidia_ck804_pcie_aer_ext_cap._entry_ptr, !1564, !"_entry_ptr", i1 false, i1 false}
!1568 = !{ptr @.str.143, !1569, !"<string literal>", i1 false, i1 false}
!1569 = !{!"../drivers/pci/quirks.c", i32 2482, i32 4}
!1570 = !{ptr @.str.144, !1569, !"<string literal>", i1 false, i1 false}
!1571 = !{ptr @quirk_via_cx700_pci_parking_caching._entry, !1569, !"_entry", i1 false, i1 false}
!1572 = !{ptr @quirk_via_cx700_pci_parking_caching._entry_ptr, !1569, !"_entry_ptr", i1 false, i1 false}
!1573 = !{ptr @.str.146, !1574, !"<string literal>", i1 false, i1 false}
!1574 = !{!"../drivers/pci/quirks.c", i32 2497, i32 4}
!1575 = !{ptr @quirk_via_cx700_pci_parking_caching._entry.145, !1574, !"_entry", i1 false, i1 false}
!1576 = !{ptr @quirk_via_cx700_pci_parking_caching._entry_ptr.147, !1574, !"_entry_ptr", i1 false, i1 false}
!1577 = !{ptr @.str.148, !1578, !"<string literal>", i1 false, i1 false}
!1578 = !{!"../drivers/pci/quirks.c", i32 2531, i32 3}
!1579 = !{ptr @.str.149, !1578, !"<string literal>", i1 false, i1 false}
!1580 = !{ptr @quirk_unhide_mch_dev6._entry, !1578, !"_entry", i1 false, i1 false}
!1581 = !{ptr @quirk_unhide_mch_dev6._entry_ptr, !1578, !"_entry_ptr", i1 false, i1 false}
!1582 = !{ptr @.str.150, !1583, !"<string literal>", i1 false, i1 false}
!1583 = !{!"../drivers/pci/quirks.c", i32 2551, i32 2}
!1584 = !{ptr @.str.151, !1583, !"<string literal>", i1 false, i1 false}
!1585 = !{ptr @quirk_disable_all_msi._entry, !1583, !"_entry", i1 false, i1 false}
!1586 = !{ptr @quirk_disable_all_msi._entry_ptr, !1583, !"_entry_ptr", i1 false, i1 false}
!1587 = !{ptr @.str.152, !1588, !"<string literal>", i1 false, i1 false}
!1588 = !{!"../drivers/pci/quirks.c", i32 2567, i32 3}
!1589 = !{ptr @.str.153, !1588, !"<string literal>", i1 false, i1 false}
!1590 = !{ptr @quirk_disable_msi._entry, !1588, !"_entry", i1 false, i1 false}
!1591 = !{ptr @quirk_disable_msi._entry_ptr, !1588, !"_entry_ptr", i1 false, i1 false}
!1592 = !{ptr @.str.154, !1593, !"<string literal>", i1 false, i1 false}
!1593 = !{!"../drivers/pci/quirks.c", i32 2609, i32 4}
!1594 = !{ptr @.str.155, !1593, !"<string literal>", i1 false, i1 false}
!1595 = !{ptr @msi_ht_cap_enabled._entry, !1593, !"_entry", i1 false, i1 false}
!1596 = !{ptr @msi_ht_cap_enabled._entry_ptr, !1593, !"_entry_ptr", i1 false, i1 false}
!1597 = !{ptr @.str.156, !1593, !"<string literal>", i1 false, i1 false}
!1598 = !{ptr @.str.157, !1593, !"<string literal>", i1 false, i1 false}
!1599 = !{ptr @.str.158, !1600, !"<string literal>", i1 false, i1 false}
!1600 = !{!"../drivers/pci/quirks.c", i32 2663, i32 4}
!1601 = !{ptr @.str.159, !1600, !"<string literal>", i1 false, i1 false}
!1602 = !{ptr @ht_enable_msi_mapping._entry, !1600, !"_entry", i1 false, i1 false}
!1603 = !{ptr @ht_enable_msi_mapping._entry_ptr, !1600, !"_entry_ptr", i1 false, i1 false}
!1604 = distinct !{null, !1605, !"<string literal>", i1 false, i1 false}
!1605 = !{!"../drivers/pci/quirks.c", i32 2688, i32 26}
!1606 = distinct !{null, !1607, !"<string literal>", i1 false, i1 false}
!1607 = !{!"../drivers/pci/quirks.c", i32 2689, i32 26}
!1608 = !{ptr @.str.162, !1609, !"<string literal>", i1 false, i1 false}
!1609 = !{!"../drivers/pci/quirks.c", i32 2690, i32 3}
!1610 = !{ptr @.str.163, !1609, !"<string literal>", i1 false, i1 false}
!1611 = !{ptr @nvenet_msi_disable._entry, !1609, !"_entry", i1 false, i1 false}
!1612 = !{ptr @nvenet_msi_disable._entry_ptr, !1609, !"_entry_ptr", i1 false, i1 false}
!1613 = !{ptr @.str.164, !1614, !"<string literal>", i1 false, i1 false}
!1614 = !{!"../drivers/pci/quirks.c", i32 2771, i32 3}
!1615 = !{ptr @.str.165, !1614, !"<string literal>", i1 false, i1 false}
!1616 = !{ptr @nvbridge_check_legacy_irq_routing._entry, !1614, !"_entry", i1 false, i1 false}
!1617 = !{ptr @nvbridge_check_legacy_irq_routing._entry_ptr, !1614, !"_entry_ptr", i1 false, i1 false}
!1618 = !{ptr @.str.166, !1619, !"<string literal>", i1 false, i1 false}
!1619 = !{!"../drivers/pci/quirks.c", i32 2951, i32 3}
!1620 = !{ptr @.str.167, !1619, !"<string literal>", i1 false, i1 false}
!1621 = !{ptr @__nv_msi_ht_cap_quirk._entry, !1619, !"_entry", i1 false, i1 false}
!1622 = !{ptr @__nv_msi_ht_cap_quirk._entry_ptr, !1619, !"_entry_ptr", i1 false, i1 false}
!1623 = !{ptr @.str.168, !1624, !"<string literal>", i1 false, i1 false}
!1624 = !{!"../drivers/pci/quirks.c", i32 2918, i32 4}
!1625 = !{ptr @.str.169, !1624, !"<string literal>", i1 false, i1 false}
!1626 = !{ptr @ht_disable_msi_mapping._entry, !1624, !"_entry", i1 false, i1 false}
!1627 = !{ptr @ht_disable_msi_mapping._entry_ptr, !1624, !"_entry_ptr", i1 false, i1 false}
!1628 = !{ptr @.str.170, !1629, !"<string literal>", i1 false, i1 false}
!1629 = !{!"../drivers/pci/quirks.c", i32 3021, i32 3}
!1630 = !{ptr @.str.171, !1629, !"<string literal>", i1 false, i1 false}
!1631 = !{ptr @quirk_msi_intx_disable_qca_bug._entry, !1629, !"_entry", i1 false, i1 false}
!1632 = !{ptr @quirk_msi_intx_disable_qca_bug._entry_ptr, !1629, !"_entry_ptr", i1 false, i1 false}
!1633 = !{ptr @.str.172, !1634, !"<string literal>", i1 false, i1 false}
!1634 = !{!"../drivers/pci/quirks.c", i32 3098, i32 2}
!1635 = !{ptr @.str.173, !1634, !"<string literal>", i1 false, i1 false}
!1636 = !{ptr @quirk_al_msi_disable._entry, !1634, !"_entry", i1 false, i1 false}
!1637 = !{ptr @quirk_al_msi_disable._entry_ptr, !1634, !"_entry_ptr", i1 false, i1 false}
!1638 = !{ptr @.str.174, !1639, !"<string literal>", i1 false, i1 false}
!1639 = !{!"../drivers/pci/quirks.c", i32 3169, i32 2}
!1640 = !{ptr @.str.175, !1639, !"<string literal>", i1 false, i1 false}
!1641 = !{ptr @.str.176, !1639, !"<string literal>", i1 false, i1 false}
!1642 = !{ptr @ricoh_mmc_fixup_rl5c476._entry, !1639, !"_entry", i1 false, i1 false}
!1643 = !{ptr @ricoh_mmc_fixup_rl5c476._entry_ptr, !1639, !"_entry_ptr", i1 false, i1 false}
!1644 = !{ptr @.str.178, !1645, !"<string literal>", i1 false, i1 false}
!1645 = !{!"../drivers/pci/quirks.c", i32 3170, i32 2}
!1646 = !{ptr @ricoh_mmc_fixup_rl5c476._entry.177, !1645, !"_entry", i1 false, i1 false}
!1647 = !{ptr @ricoh_mmc_fixup_rl5c476._entry_ptr.179, !1645, !"_entry_ptr", i1 false, i1 false}
!1648 = !{ptr @.str.180, !1649, !"<string literal>", i1 false, i1 false}
!1649 = !{!"../drivers/pci/quirks.c", i32 3208, i32 3}
!1650 = !{ptr @.str.181, !1649, !"<string literal>", i1 false, i1 false}
!1651 = !{ptr @ricoh_mmc_fixup_r5c832._entry, !1649, !"_entry", i1 false, i1 false}
!1652 = !{ptr @ricoh_mmc_fixup_r5c832._entry_ptr, !1649, !"_entry_ptr", i1 false, i1 false}
!1653 = !{ptr @.str.183, !1654, !"<string literal>", i1 false, i1 false}
!1654 = !{!"../drivers/pci/quirks.c", i32 3221, i32 2}
!1655 = !{ptr @ricoh_mmc_fixup_r5c832._entry.182, !1654, !"_entry", i1 false, i1 false}
!1656 = !{ptr @ricoh_mmc_fixup_r5c832._entry_ptr.184, !1654, !"_entry_ptr", i1 false, i1 false}
!1657 = !{ptr @ricoh_mmc_fixup_r5c832._entry.185, !1658, !"_entry", i1 false, i1 false}
!1658 = !{!"../drivers/pci/quirks.c", i32 3222, i32 2}
!1659 = !{ptr @ricoh_mmc_fixup_r5c832._entry_ptr.186, !1658, !"_entry_ptr", i1 false, i1 false}
!1660 = !{ptr @.str.187, !1661, !"<string literal>", i1 false, i1 false}
!1661 = !{!"../drivers/pci/quirks.c", i32 3263, i32 2}
!1662 = !{ptr @.str.188, !1661, !"<string literal>", i1 false, i1 false}
!1663 = !{ptr @fixup_ti816x_class._entry, !1661, !"_entry", i1 false, i1 false}
!1664 = !{ptr @fixup_ti816x_class._entry_ptr, !1661, !"_entry_ptr", i1 false, i1 false}
!1665 = !{ptr @.str.189, !1666, !"<string literal>", i1 false, i1 false}
!1666 = !{!"../drivers/pci/quirks.c", i32 3309, i32 3}
!1667 = !{ptr @.str.190, !1666, !"<string literal>", i1 false, i1 false}
!1668 = !{ptr @.str.191, !1666, !"<string literal>", i1 false, i1 false}
!1669 = !{ptr @quirk_intel_mc_errata._entry, !1666, !"_entry", i1 false, i1 false}
!1670 = !{ptr @quirk_intel_mc_errata._entry_ptr, !1666, !"_entry_ptr", i1 false, i1 false}
!1671 = !{ptr @.str.193, !1672, !"<string literal>", i1 false, i1 false}
!1672 = !{!"../drivers/pci/quirks.c", i32 3320, i32 3}
!1673 = !{ptr @quirk_intel_mc_errata._entry.192, !1672, !"_entry", i1 false, i1 false}
!1674 = !{ptr @quirk_intel_mc_errata._entry_ptr.194, !1672, !"_entry_ptr", i1 false, i1 false}
!1675 = distinct !{null, !1676, !"__already_done", i1 false, i1 false}
!1676 = !{!"../drivers/pci/quirks.c", i32 3324, i32 2}
!1677 = !{ptr @.str.196, !1676, !"<string literal>", i1 false, i1 false}
!1678 = !{ptr @quirk_intel_mc_errata._entry.195, !1676, !"_entry", i1 false, i1 false}
!1679 = !{ptr @quirk_intel_mc_errata._entry_ptr.197, !1676, !"_entry_ptr", i1 false, i1 false}
!1680 = !{ptr @.str.198, !1681, !"<string literal>", i1 false, i1 false}
!1681 = !{!"../drivers/pci/quirks.c", i32 3396, i32 3}
!1682 = !{ptr @.str.199, !1681, !"<string literal>", i1 false, i1 false}
!1683 = !{ptr @disable_igfx_irq._entry, !1681, !"_entry", i1 false, i1 false}
!1684 = !{ptr @disable_igfx_irq._entry_ptr, !1681, !"_entry_ptr", i1 false, i1 false}
!1685 = !{ptr @.str.201, !1686, !"<string literal>", i1 false, i1 false}
!1686 = !{!"../drivers/pci/quirks.c", i32 3402, i32 3}
!1687 = !{ptr @disable_igfx_irq._entry.200, !1686, !"_entry", i1 false, i1 false}
!1688 = !{ptr @disable_igfx_irq._entry_ptr.202, !1686, !"_entry_ptr", i1 false, i1 false}
!1689 = !{ptr @.str.203, !1690, !"<string literal>", i1 false, i1 false}
!1690 = !{!"../drivers/pci/quirks.c", i32 3554, i32 3}
!1691 = !{ptr @.str.204, !1690, !"<string literal>", i1 false, i1 false}
!1692 = !{ptr @mellanox_check_broken_intx_masking._entry, !1690, !"_entry", i1 false, i1 false}
!1693 = !{ptr @mellanox_check_broken_intx_masking._entry_ptr, !1690, !"_entry_ptr", i1 false, i1 false}
!1694 = !{ptr @.str.206, !1695, !"<string literal>", i1 false, i1 false}
!1695 = !{!"../drivers/pci/quirks.c", i32 3560, i32 3}
!1696 = !{ptr @mellanox_check_broken_intx_masking._entry.205, !1695, !"_entry", i1 false, i1 false}
!1697 = !{ptr @mellanox_check_broken_intx_masking._entry_ptr.207, !1695, !"_entry_ptr", i1 false, i1 false}
!1698 = !{ptr @.str.209, !1699, !"<string literal>", i1 false, i1 false}
!1699 = !{!"../drivers/pci/quirks.c", i32 3572, i32 3}
!1700 = !{ptr @mellanox_check_broken_intx_masking._entry.208, !1699, !"_entry", i1 false, i1 false}
!1701 = !{ptr @mellanox_check_broken_intx_masking._entry_ptr.210, !1699, !"_entry_ptr", i1 false, i1 false}
!1702 = distinct !{null, !1703, !"mellanox_broken_intx_devs", i1 false, i1 false}
!1703 = !{!"../drivers/pci/quirks.c", i32 3498, i32 12}
!1704 = distinct !{null, !1705, !"pci_dev_reset_methods", i1 false, i1 false}
!1705 = !{!"../drivers/pci/quirks.c", i32 4039, i32 43}
!1706 = !{ptr @.str.211, !1707, !"<string literal>", i1 false, i1 false}
!1707 = !{!"../drivers/pci/quirks.c", i32 3802, i32 2}
!1708 = !{ptr @.str.212, !1707, !"<string literal>", i1 false, i1 false}
!1709 = !{ptr @reset_ivb_igd._entry, !1707, !"_entry", i1 false, i1 false}
!1710 = !{ptr @reset_ivb_igd._entry_ptr, !1707, !"_entry_ptr", i1 false, i1 false}
!1711 = !{ptr @.str.213, !1712, !"<string literal>", i1 false, i1 false}
!1712 = !{!"../drivers/pci/quirks.c", i32 3945, i32 5}
!1713 = !{ptr @.str.214, !1712, !"<string literal>", i1 false, i1 false}
!1714 = !{ptr @nvme_disable_and_flr._entry, !1712, !"_entry", i1 false, i1 false}
!1715 = !{ptr @nvme_disable_and_flr._entry_ptr, !1712, !"_entry_ptr", i1 false, i1 false}
!1716 = !{ptr @.str.215, !1717, !"<string literal>", i1 false, i1 false}
!1717 = !{!"../drivers/pci/quirks.c", i32 4031, i32 2}
!1718 = !{ptr @.str.216, !1717, !"<string literal>", i1 false, i1 false}
!1719 = !{ptr @reset_hinic_vf_dev._entry, !1717, !"_entry", i1 false, i1 false}
!1720 = !{ptr @reset_hinic_vf_dev._entry_ptr, !1717, !"_entry_ptr", i1 false, i1 false}
!1721 = !{ptr @fixed_dma_alias_tbl, !1722, !"fixed_dma_alias_tbl", i1 false, i1 false}
!1722 = !{!"../drivers/pci/quirks.c", i32 4168, i32 35}
!1723 = !{ptr @.str.217, !1724, !"<string literal>", i1 false, i1 false}
!1724 = !{!"../drivers/pci/quirks.c", i32 4285, i32 2}
!1725 = !{ptr @.str.218, !1724, !"<string literal>", i1 false, i1 false}
!1726 = !{ptr @quirk_tw686x_class._entry, !1724, !"_entry", i1 false, i1 false}
!1727 = !{ptr @quirk_tw686x_class._entry_ptr, !1724, !"_entry_ptr", i1 false, i1 false}
!1728 = !{ptr @.str.219, !1729, !"<string literal>", i1 false, i1 false}
!1729 = !{!"../drivers/pci/quirks.c", i32 4305, i32 2}
!1730 = !{ptr @.str.220, !1729, !"<string literal>", i1 false, i1 false}
!1731 = !{ptr @quirk_relaxedordering_disable._entry, !1729, !"_entry", i1 false, i1 false}
!1732 = !{ptr @quirk_relaxedordering_disable._entry_ptr, !1729, !"_entry_ptr", i1 false, i1 false}
!1733 = !{ptr @.str.221, !1734, !"<string literal>", i1 false, i1 false}
!1734 = !{!"../drivers/pci/quirks.c", i32 4414, i32 3}
!1735 = !{ptr @.str.222, !1734, !"<string literal>", i1 false, i1 false}
!1736 = !{ptr @quirk_disable_root_port_attributes._entry, !1734, !"_entry", i1 false, i1 false}
!1737 = !{ptr @quirk_disable_root_port_attributes._entry_ptr, !1734, !"_entry_ptr", i1 false, i1 false}
!1738 = !{ptr @.str.224, !1739, !"<string literal>", i1 false, i1 false}
!1739 = !{!"../drivers/pci/quirks.c", i32 4418, i32 2}
!1740 = !{ptr @quirk_disable_root_port_attributes._entry.223, !1739, !"_entry", i1 false, i1 false}
!1741 = !{ptr @quirk_disable_root_port_attributes._entry_ptr.225, !1739, !"_entry_ptr", i1 false, i1 false}
!1742 = !{ptr @pci_dev_acs_enabled, !1743, !"pci_dev_acs_enabled", i1 false, i1 false}
!1743 = !{!"../drivers/pci/quirks.c", i32 4818, i32 3}
!1744 = !{ptr @pci_quirk_intel_pch_acs_ids, !1745, !"pci_quirk_intel_pch_acs_ids", i1 false, i1 false}
!1745 = !{!"../drivers/pci/quirks.c", i32 4588, i32 18}
!1746 = distinct !{null, !1747, !"pci_dev_acs_ops", i1 false, i1 false}
!1747 = !{!"../drivers/pci/quirks.c", i32 5164, i32 3}
!1748 = !{ptr @.str.226, !1749, !"<string literal>", i1 false, i1 false}
!1749 = !{!"../drivers/pci/quirks.c", i32 5092, i32 3}
!1750 = !{ptr @.str.227, !1749, !"<string literal>", i1 false, i1 false}
!1751 = !{ptr @pci_quirk_enable_intel_pch_acs._entry, !1749, !"_entry", i1 false, i1 false}
!1752 = !{ptr @pci_quirk_enable_intel_pch_acs._entry_ptr, !1749, !"_entry_ptr", i1 false, i1 false}
!1753 = !{ptr @.str.229, !1754, !"<string literal>", i1 false, i1 false}
!1754 = !{!"../drivers/pci/quirks.c", i32 5100, i32 2}
!1755 = !{ptr @pci_quirk_enable_intel_pch_acs._entry.228, !1754, !"_entry", i1 false, i1 false}
!1756 = !{ptr @pci_quirk_enable_intel_pch_acs._entry_ptr.230, !1754, !"_entry_ptr", i1 false, i1 false}
!1757 = !{ptr @.str.231, !1758, !"<string literal>", i1 false, i1 false}
!1758 = !{!"../drivers/pci/quirks.c", i32 5046, i32 4}
!1759 = !{ptr @.str.232, !1758, !"<string literal>", i1 false, i1 false}
!1760 = !{ptr @pci_quirk_enable_intel_lpc_acs._entry, !1758, !"_entry", i1 false, i1 false}
!1761 = !{ptr @pci_quirk_enable_intel_lpc_acs._entry_ptr, !1758, !"_entry_ptr", i1 false, i1 false}
!1762 = !{ptr @.str.233, !1763, !"<string literal>", i1 false, i1 false}
!1763 = !{!"../drivers/pci/quirks.c", i32 5073, i32 3}
!1764 = !{ptr @.str.234, !1763, !"<string literal>", i1 false, i1 false}
!1765 = !{ptr @pci_quirk_enable_intel_rp_mpc_acs._entry, !1763, !"_entry", i1 false, i1 false}
!1766 = !{ptr @pci_quirk_enable_intel_rp_mpc_acs._entry_ptr, !1763, !"_entry_ptr", i1 false, i1 false}
!1767 = !{ptr @.str.235, !1768, !"<string literal>", i1 false, i1 false}
!1768 = !{!"../drivers/pci/quirks.c", i32 5130, i32 2}
!1769 = !{ptr @.str.236, !1768, !"<string literal>", i1 false, i1 false}
!1770 = !{ptr @pci_quirk_enable_intel_spt_pch_acs._entry, !1768, !"_entry", i1 false, i1 false}
!1771 = !{ptr @pci_quirk_enable_intel_spt_pch_acs._entry_ptr, !1768, !"_entry_ptr", i1 false, i1 false}
!1772 = !{ptr @.str.237, !1773, !"<string literal>", i1 false, i1 false}
!1773 = !{!"../drivers/pci/quirks.c", i32 5154, i32 2}
!1774 = !{ptr @.str.238, !1773, !"<string literal>", i1 false, i1 false}
!1775 = !{ptr @pci_quirk_disable_intel_spt_pch_acs_redir._entry, !1773, !"_entry", i1 false, i1 false}
!1776 = !{ptr @pci_quirk_disable_intel_spt_pch_acs_redir._entry_ptr, !1773, !"_entry_ptr", i1 false, i1 false}
!1777 = !{ptr @.str.239, !1778, !"<string literal>", i1 false, i1 false}
!1778 = !{!"../drivers/pci/quirks.c", i32 5327, i32 2}
!1779 = !{ptr @.str.240, !1778, !"<string literal>", i1 false, i1 false}
!1780 = !{ptr @quirk_no_ext_tags._entry, !1778, !"_entry", i1 false, i1 false}
!1781 = !{ptr @quirk_no_ext_tags._entry_ptr, !1778, !"_entry_ptr", i1 false, i1 false}
!1782 = !{ptr @.str.241, !1783, !"<string literal>", i1 false, i1 false}
!1783 = !{!"../drivers/pci/quirks.c", i32 5359, i32 2}
!1784 = !{ptr @.str.242, !1783, !"<string literal>", i1 false, i1 false}
!1785 = !{ptr @quirk_amd_harvest_no_ats._entry, !1783, !"_entry", i1 false, i1 false}
!1786 = !{ptr @quirk_amd_harvest_no_ats._entry_ptr, !1783, !"_entry_ptr", i1 false, i1 false}
!1787 = !{ptr @.str.243, !1788, !"<string literal>", i1 false, i1 false}
!1788 = !{!"../drivers/pci/quirks.c", i32 5420, i32 3}
!1789 = !{ptr @.str.244, !1788, !"<string literal>", i1 false, i1 false}
!1790 = !{ptr @pci_create_device_link._entry, !1788, !"_entry", i1 false, i1 false}
!1791 = !{ptr @pci_create_device_link._entry_ptr, !1788, !"_entry_ptr", i1 false, i1 false}
!1792 = !{ptr @.str.246, !1793, !"<string literal>", i1 false, i1 false}
!1793 = !{!"../drivers/pci/quirks.c", i32 5423, i32 3}
!1794 = !{ptr @pci_create_device_link._entry.245, !1793, !"_entry", i1 false, i1 false}
!1795 = !{ptr @pci_create_device_link._entry_ptr.247, !1793, !"_entry_ptr", i1 false, i1 false}
!1796 = !{ptr @.str.248, !1797, !"<string literal>", i1 false, i1 false}
!1797 = !{!"../drivers/pci/quirks.c", i32 5494, i32 2}
!1798 = !{ptr @.str.249, !1797, !"<string literal>", i1 false, i1 false}
!1799 = !{ptr @quirk_nvidia_hda._entry, !1797, !"_entry", i1 false, i1 false}
!1800 = !{ptr @quirk_nvidia_hda._entry_ptr, !1797, !"_entry_ptr", i1 false, i1 false}
!1801 = !{ptr @.str.250, !1802, !"<string literal>", i1 false, i1 false}
!1802 = !{!"../drivers/pci/quirks.c", i32 5578, i32 3}
!1803 = !{ptr @.str.251, !1802, !"<string literal>", i1 false, i1 false}
!1804 = !{ptr @quirk_switchtec_ntb_dma_alias._entry, !1802, !"_entry", i1 false, i1 false}
!1805 = !{ptr @quirk_switchtec_ntb_dma_alias._entry_ptr, !1802, !"_entry_ptr", i1 false, i1 false}
!1806 = !{ptr @.str.253, !1807, !"<string literal>", i1 false, i1 false}
!1807 = !{!"../drivers/pci/quirks.c", i32 5585, i32 3}
!1808 = !{ptr @quirk_switchtec_ntb_dma_alias._entry.252, !1807, !"_entry", i1 false, i1 false}
!1809 = !{ptr @quirk_switchtec_ntb_dma_alias._entry_ptr.254, !1807, !"_entry_ptr", i1 false, i1 false}
!1810 = !{ptr @.str.256, !1811, !"<string literal>", i1 false, i1 false}
!1811 = !{!"../drivers/pci/quirks.c", i32 5589, i32 2}
!1812 = !{ptr @quirk_switchtec_ntb_dma_alias._entry.255, !1811, !"_entry", i1 false, i1 false}
!1813 = !{ptr @quirk_switchtec_ntb_dma_alias._entry_ptr.257, !1811, !"_entry_ptr", i1 false, i1 false}
!1814 = !{ptr @.str.258, !1815, !"<string literal>", i1 false, i1 false}
!1815 = !{!"../drivers/pci/quirks.c", i32 5608, i32 3}
!1816 = !{ptr @.str.259, !1815, !"<string literal>", i1 false, i1 false}
!1817 = !{ptr @quirk_switchtec_ntb_dma_alias.__UNIQUE_ID_ddebug294, !1815, !"__UNIQUE_ID_ddebug294", i1 false, i1 false}
!1818 = !{ptr @.str.261, !1819, !"<string literal>", i1 false, i1 false}
!1819 = !{!"../drivers/pci/quirks.c", i32 5614, i32 4}
!1820 = !{ptr @quirk_switchtec_ntb_dma_alias._entry.260, !1819, !"_entry", i1 false, i1 false}
!1821 = !{ptr @quirk_switchtec_ntb_dma_alias._entry_ptr.262, !1819, !"_entry_ptr", i1 false, i1 false}
!1822 = !{ptr @.str.264, !1823, !"<string literal>", i1 false, i1 false}
!1823 = !{!"../drivers/pci/quirks.c", i32 5619, i32 4}
!1824 = !{ptr @quirk_switchtec_ntb_dma_alias._entry.263, !1823, !"_entry", i1 false, i1 false}
!1825 = !{ptr @quirk_switchtec_ntb_dma_alias._entry_ptr.265, !1823, !"_entry_ptr", i1 false, i1 false}
!1826 = !{ptr @.str.266, !1827, !"<string literal>", i1 false, i1 false}
!1827 = !{!"../drivers/pci/quirks.c", i32 5631, i32 4}
!1828 = !{ptr @quirk_switchtec_ntb_dma_alias.__UNIQUE_ID_ddebug295, !1827, !"__UNIQUE_ID_ddebug295", i1 false, i1 false}
!1829 = !{ptr @.str.267, !1830, !"<string literal>", i1 false, i1 false}
!1830 = !{!"../drivers/pci/quirks.c", i32 5711, i32 2}
!1831 = !{ptr @.str.268, !1830, !"<string literal>", i1 false, i1 false}
!1832 = !{ptr @quirk_plx_ntb_dma_alias._entry, !1830, !"_entry", i1 false, i1 false}
!1833 = !{ptr @quirk_plx_ntb_dma_alias._entry_ptr, !1830, !"_entry_ptr", i1 false, i1 false}
!1834 = !{ptr @.str.269, !1835, !"<string literal>", i1 false, i1 false}
!1835 = !{!"../drivers/pci/quirks.c", i32 5753, i32 3}
!1836 = !{ptr @.str.270, !1835, !"<string literal>", i1 false, i1 false}
!1837 = !{ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry, !1835, !"_entry", i1 false, i1 false}
!1838 = !{ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr, !1835, !"_entry_ptr", i1 false, i1 false}
!1839 = !{ptr @.str.272, !1840, !"<string literal>", i1 false, i1 false}
!1840 = !{!"../drivers/pci/quirks.c", i32 5762, i32 3}
!1841 = !{ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.271, !1840, !"_entry", i1 false, i1 false}
!1842 = !{ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr.273, !1840, !"_entry_ptr", i1 false, i1 false}
!1843 = !{ptr @.str.275, !1844, !"<string literal>", i1 false, i1 false}
!1844 = !{!"../drivers/pci/quirks.c", i32 5765, i32 4}
!1845 = !{ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry.274, !1844, !"_entry", i1 false, i1 false}
!1846 = !{ptr @quirk_reset_lenovo_thinkpad_p50_nvgpu._entry_ptr.276, !1844, !"_entry_ptr", i1 false, i1 false}
!1847 = !{ptr @.str.277, !1848, !"<string literal>", i1 false, i1 false}
!1848 = !{!"../drivers/pci/quirks.c", i32 5782, i32 2}
!1849 = !{ptr @.str.278, !1848, !"<string literal>", i1 false, i1 false}
!1850 = !{ptr @pci_fixup_no_d0_pme._entry, !1848, !"_entry", i1 false, i1 false}
!1851 = !{ptr @pci_fixup_no_d0_pme._entry_ptr, !1848, !"_entry_ptr", i1 false, i1 false}
!1852 = !{ptr @.str.279, !1853, !"<string literal>", i1 false, i1 false}
!1853 = !{!"../drivers/pci/quirks.c", i32 5800, i32 2}
!1854 = !{ptr @.str.280, !1853, !"<string literal>", i1 false, i1 false}
!1855 = !{ptr @pci_fixup_no_msi_no_pme._entry, !1853, !"_entry", i1 false, i1 false}
!1856 = !{ptr @pci_fixup_no_msi_no_pme._entry_ptr, !1853, !"_entry_ptr", i1 false, i1 false}
!1857 = !{ptr @.str.282, !1858, !"<string literal>", i1 false, i1 false}
!1858 = !{!"../drivers/pci/quirks.c", i32 5803, i32 2}
!1859 = !{ptr @pci_fixup_no_msi_no_pme._entry.281, !1858, !"_entry", i1 false, i1 false}
!1860 = !{ptr @pci_fixup_no_msi_no_pme._entry_ptr.283, !1858, !"_entry_ptr", i1 false, i1 false}
!1861 = !{ptr @.str.284, !1862, !"<string literal>", i1 false, i1 false}
!1862 = !{!"../drivers/pci/quirks.c", i32 5849, i32 3}
!1863 = !{ptr @.str.285, !1862, !"<string literal>", i1 false, i1 false}
!1864 = !{ptr @pci_fixup_pericom_acs_store_forward._entry, !1862, !"_entry", i1 false, i1 false}
!1865 = !{ptr @pci_fixup_pericom_acs_store_forward._entry_ptr, !1862, !"_entry_ptr", i1 false, i1 false}
!1866 = !{ptr @.str.286, !1867, !"<string literal>", i1 false, i1 false}
!1867 = !{!"../drivers/pci/quirks.c", i32 5879, i32 2}
!1868 = !{ptr @.str.287, !1867, !"<string literal>", i1 false, i1 false}
!1869 = !{ptr @rom_bar_overlap_defect._entry, !1867, !"_entry", i1 false, i1 false}
!1870 = !{ptr @rom_bar_overlap_defect._entry_ptr, !1867, !"_entry_ptr", i1 false, i1 false}
!1871 = !{!"sp"}
!1872 = !{i32 1, !"wchar_size", i32 2}
!1873 = !{i32 1, !"min_enum_size", i32 4}
!1874 = !{i32 8, !"branch-target-enforcement", i32 0}
!1875 = !{i32 8, !"sign-return-address", i32 0}
!1876 = !{i32 8, !"sign-return-address-all", i32 0}
!1877 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1878 = !{i32 7, !"uwtable", i32 1}
!1879 = !{i32 7, !"frame-pointer", i32 2}
!1880 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1881 = !{i8 0, i8 2}
!1882 = !{!"auto-init"}
!1883 = !{i64 5190770}
!1884 = !{i64 2156165407}
!1885 = !{i64 2156167593}
!1886 = !{i64 5190570}
!1887 = !{!"branch_weights", i32 -388717296, i32 1956055, i32 1955078, i32 1954101, i32 1953125}
!1888 = !{!"branch_weights", i32 1, i32 2000}
!1889 = !{!"branch_weights", i32 2000, i32 1}
!1890 = !{i64 5191608}
!1891 = !{i64 2156327049}
!1892 = !{i64 2156327282}
!1893 = !{i64 5191190}
!1894 = !{i64 5191388}
!1895 = !{i64 2156416801}
!1896 = !{i64 2156418930}
!1897 = !{i64 5190993}
!1898 = !{i64 2156580847}
!1899 = !{i64 2156583001}
!1900 = !{i64 2156624924}
!1901 = !{i64 2156625210}
!1902 = !{i64 2152730733}
!1903 = !{i64 2152731957}
!1904 = !{i64 2148902900, i64 2148902905, i64 2148902918, i64 2148902962, i64 2148902996, i64 2148903017}
!1905 = !{i64 2152731345}
!1906 = !{i64 2152733312}
!1907 = !{i64 2156641560}
!1908 = !{i64 2156642050}
!1909 = !{i64 2156642264}
!1910 = !{i64 2156642974}
!1911 = !{i64 2156645690}
!1912 = !{i64 2156646011}
!1913 = !{i64 2156646264}
!1914 = !{i64 2156646629}
!1915 = !{i64 2156647313}
!1916 = !{i64 2156719002}
!1917 = !{i64 2156719531}
!1918 = !{i64 2156721488}
