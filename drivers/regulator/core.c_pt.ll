; ModuleID = '/llk/IR_all_yes/drivers/regulator/core.c_pt.bc'
source_filename = "../drivers/regulator/core.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+rdev_get_name\22, \22a\22\09"
module asm "\09.weak\09__crc_rdev_get_name\09\09\09\09"
module asm "\09.long\09__crc_rdev_get_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rdev_get_name:\09\09\09\09\09"
module asm "\09.asciz \09\22rdev_get_name\22\09\09\09\09\09"
module asm "__kstrtabns_rdev_get_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get\09\09\09\09"
module asm "\09.long\09__crc_regulator_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_exclusive\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_exclusive\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_exclusive\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_exclusive:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_exclusive\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_exclusive:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_optional\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_optional\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_optional\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_optional:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_optional\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_optional:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_put\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_put\09\09\09\09"
module asm "\09.long\09__crc_regulator_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_put:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_put\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_register_supply_alias\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_register_supply_alias\09\09\09\09"
module asm "\09.long\09__crc_regulator_register_supply_alias\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_register_supply_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_register_supply_alias\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_register_supply_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_unregister_supply_alias\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_unregister_supply_alias\09\09\09\09"
module asm "\09.long\09__crc_regulator_unregister_supply_alias\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_unregister_supply_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_unregister_supply_alias\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_unregister_supply_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_bulk_register_supply_alias\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_bulk_register_supply_alias\09\09\09\09"
module asm "\09.long\09__crc_regulator_bulk_register_supply_alias\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_bulk_register_supply_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_bulk_register_supply_alias\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_bulk_register_supply_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_bulk_unregister_supply_alias\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_bulk_unregister_supply_alias\09\09\09\09"
module asm "\09.long\09__crc_regulator_bulk_unregister_supply_alias\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_bulk_unregister_supply_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_bulk_unregister_supply_alias\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_bulk_unregister_supply_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_enable\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_enable\09\09\09\09"
module asm "\09.long\09__crc_regulator_enable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_enable\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_disable\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_disable\09\09\09\09"
module asm "\09.long\09__crc_regulator_disable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_disable\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_force_disable\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_force_disable\09\09\09\09"
module asm "\09.long\09__crc_regulator_force_disable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_force_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_force_disable\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_force_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_disable_deferred\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_disable_deferred\09\09\09\09"
module asm "\09.long\09__crc_regulator_disable_deferred\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_disable_deferred:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_disable_deferred\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_disable_deferred:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_is_enabled\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_is_enabled\09\09\09\09"
module asm "\09.long\09__crc_regulator_is_enabled\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_is_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_is_enabled\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_is_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_count_voltages\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_count_voltages\09\09\09\09"
module asm "\09.long\09__crc_regulator_count_voltages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_count_voltages:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_count_voltages\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_count_voltages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_list_voltage\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_list_voltage\09\09\09\09"
module asm "\09.long\09__crc_regulator_list_voltage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_list_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_list_voltage\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_list_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_hardware_vsel_register\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_hardware_vsel_register\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_hardware_vsel_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_hardware_vsel_register:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_hardware_vsel_register\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_hardware_vsel_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_list_hardware_vsel\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_list_hardware_vsel\09\09\09\09"
module asm "\09.long\09__crc_regulator_list_hardware_vsel\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_list_hardware_vsel:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_list_hardware_vsel\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_list_hardware_vsel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_linear_step\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_linear_step\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_linear_step\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_linear_step:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_linear_step\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_linear_step:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_is_supported_voltage\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_is_supported_voltage\09\09\09\09"
module asm "\09.long\09__crc_regulator_is_supported_voltage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_is_supported_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_is_supported_voltage\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_is_supported_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_voltage_rdev\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_voltage_rdev\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_voltage_rdev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_voltage_rdev:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_voltage_rdev\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_voltage_rdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_voltage\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_voltage\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_voltage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_voltage\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_suspend_enable\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_suspend_enable\09\09\09\09"
module asm "\09.long\09__crc_regulator_suspend_enable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_suspend_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_suspend_enable\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_suspend_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_suspend_disable\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_suspend_disable\09\09\09\09"
module asm "\09.long\09__crc_regulator_suspend_disable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_suspend_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_suspend_disable\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_suspend_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_suspend_voltage\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_suspend_voltage\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_suspend_voltage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_suspend_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_suspend_voltage\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_suspend_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_voltage_time\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_voltage_time\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_voltage_time\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_voltage_time:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_voltage_time\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_voltage_time:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_voltage_time_sel\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_voltage_time_sel\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_voltage_time_sel\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_voltage_time_sel:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_voltage_time_sel\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_voltage_time_sel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_sync_voltage\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_sync_voltage\09\09\09\09"
module asm "\09.long\09__crc_regulator_sync_voltage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_sync_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_sync_voltage\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_sync_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_voltage_rdev\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_voltage_rdev\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_voltage_rdev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_voltage_rdev:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_voltage_rdev\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_voltage_rdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_voltage\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_voltage\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_voltage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_voltage\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_voltage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_current_limit\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_current_limit\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_current_limit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_current_limit:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_current_limit\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_current_limit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_current_limit\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_current_limit\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_current_limit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_current_limit:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_current_limit\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_current_limit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_mode\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_mode\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_mode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_mode:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_mode\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_mode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_mode\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_mode\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_mode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_mode:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_mode\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_mode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_error_flags\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_error_flags\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_error_flags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_error_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_error_flags\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_error_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_load\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_load\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_load\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_load:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_load\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_load:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_allow_bypass\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_allow_bypass\09\09\09\09"
module asm "\09.long\09__crc_regulator_allow_bypass\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_allow_bypass:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_allow_bypass\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_allow_bypass:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_register_notifier\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_register_notifier\09\09\09\09"
module asm "\09.long\09__crc_regulator_register_notifier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_register_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_register_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_register_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_unregister_notifier\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_unregister_notifier\09\09\09\09"
module asm "\09.long\09__crc_regulator_unregister_notifier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_unregister_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_unregister_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_unregister_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_bulk_get\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_bulk_get\09\09\09\09"
module asm "\09.long\09__crc_regulator_bulk_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_bulk_get:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_bulk_get\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_bulk_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_bulk_enable\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_bulk_enable\09\09\09\09"
module asm "\09.long\09__crc_regulator_bulk_enable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_bulk_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_bulk_enable\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_bulk_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_bulk_disable\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_bulk_disable\09\09\09\09"
module asm "\09.long\09__crc_regulator_bulk_disable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_bulk_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_bulk_disable\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_bulk_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_bulk_force_disable\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_bulk_force_disable\09\09\09\09"
module asm "\09.long\09__crc_regulator_bulk_force_disable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_bulk_force_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_bulk_force_disable\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_bulk_force_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_bulk_free\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_bulk_free\09\09\09\09"
module asm "\09.long\09__crc_regulator_bulk_free\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_bulk_free:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_bulk_free\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_bulk_free:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_notifier_call_chain\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_notifier_call_chain\09\09\09\09"
module asm "\09.long\09__crc_regulator_notifier_call_chain\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_notifier_call_chain:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_notifier_call_chain\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_notifier_call_chain:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_mode_to_status\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_mode_to_status\09\09\09\09"
module asm "\09.long\09__crc_regulator_mode_to_status\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_mode_to_status:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_mode_to_status\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_mode_to_status:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_register\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_register\09\09\09\09"
module asm "\09.long\09__crc_regulator_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_register:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_register\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_unregister\09\09\09\09"
module asm "\09.long\09__crc_regulator_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_has_full_constraints\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_has_full_constraints\09\09\09\09"
module asm "\09.long\09__crc_regulator_has_full_constraints\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_has_full_constraints:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_has_full_constraints\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_has_full_constraints:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rdev_get_drvdata\22, \22a\22\09"
module asm "\09.weak\09__crc_rdev_get_drvdata\09\09\09\09"
module asm "\09.long\09__crc_rdev_get_drvdata\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rdev_get_drvdata:\09\09\09\09\09"
module asm "\09.asciz \09\22rdev_get_drvdata\22\09\09\09\09\09"
module asm "__kstrtabns_rdev_get_drvdata:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_drvdata\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_drvdata\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_drvdata\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_drvdata:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_drvdata\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_drvdata:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_set_drvdata\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_set_drvdata\09\09\09\09"
module asm "\09.long\09__crc_regulator_set_drvdata\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_set_drvdata:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_set_drvdata\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_set_drvdata:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rdev_get_id\22, \22a\22\09"
module asm "\09.weak\09__crc_rdev_get_id\09\09\09\09"
module asm "\09.long\09__crc_rdev_get_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rdev_get_id:\09\09\09\09\09"
module asm "\09.asciz \09\22rdev_get_id\22\09\09\09\09\09"
module asm "__kstrtabns_rdev_get_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rdev_get_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_rdev_get_dev\09\09\09\09"
module asm "\09.long\09__crc_rdev_get_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rdev_get_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22rdev_get_dev\22\09\09\09\09\09"
module asm "__kstrtabns_rdev_get_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rdev_get_regmap\22, \22a\22\09"
module asm "\09.weak\09__crc_rdev_get_regmap\09\09\09\09"
module asm "\09.long\09__crc_rdev_get_regmap\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rdev_get_regmap:\09\09\09\09\09"
module asm "\09.asciz \09\22rdev_get_regmap\22\09\09\09\09\09"
module asm "__kstrtabns_rdev_get_regmap:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+regulator_get_init_drvdata\22, \22a\22\09"
module asm "\09.weak\09__crc_regulator_get_init_drvdata\09\09\09\09"
module asm "\09.long\09__crc_regulator_get_init_drvdata\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_regulator_get_init_drvdata:\09\09\09\09\09"
module asm "\09.asciz \09\22regulator_get_init_drvdata\22\09\09\09\09\09"
module asm "__kstrtabns_regulator_get_init_drvdata:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.0 }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.1, %struct.trace_event, ptr, ptr, %union.anon.4, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.1 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.4 = type { ptr }
%union.anon.108 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%union.anon.116 = type { %struct.bpf_raw_event_map }
%union.anon.117 = type { %struct.bpf_raw_event_map }
%union.anon.118 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.lock_class_key = type { %union.anon.3 }
%union.anon.3 = type { %struct.hlist_node }
%struct.ww_class = type { %struct.atomic_t, %struct.lock_class_key, %struct.lock_class_key, ptr, ptr, i32 }
%struct.class = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.regulator_coupler = type { %struct.list_head, ptr, ptr, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_regulator_basic = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_regulator_range = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_regulator_value = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.regulator_dev = type { ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.coupling_desc, %struct.blocking_notifier_head, %struct.ww_mutex, ptr, i32, ptr, %struct.device, ptr, ptr, ptr, ptr, %struct.delayed_work, ptr, ptr, ptr, i8, i64, i32, i8, %struct.spinlock }
%struct.coupling_desc = type { ptr, ptr, i32, i32 }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ww_mutex = type { %struct.mutex, ptr, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.5 }
%union.anon.5 = type { %struct.raw_spinlock }
%struct.regulation_constraints = type { ptr, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, %struct.regulator_state, %struct.regulator_state, %struct.regulator_state, %struct.notification_limit, %struct.notification_limit, %struct.notification_limit, %struct.notification_limit, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.regulator_state = type { i32, i32, i32, i32, i32, i8 }
%struct.notification_limit = type { i32, i32, i32 }
%struct.regulator_voltage = type { i32, i32 }
%struct.regulator_desc = type { ptr, ptr, ptr, i8, ptr, ptr, i32, i8, i32, i32, ptr, i32, i32, ptr, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, ptr }
%struct.regulator_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.regulator = type { ptr, %struct.list_head, i8, i32, i32, i32, [5 x %struct.regulator_voltage], ptr, %struct.device_attribute, ptr, ptr }
%struct.regulator_supply_alias = type { %struct.list_head, ptr, ptr, ptr, ptr }
%struct.regulator_map = type { %struct.list_head, ptr, ptr, ptr }
%struct.ww_acquire_ctx = type { ptr, i32, i32, i16, i16, i32, ptr, ptr, %struct.lockdep_map, i32, i32 }
%struct.pre_voltage_change_data = type { i32, i32, i32 }
%struct.regulator_bulk_data = type { ptr, ptr, i32 }
%struct.async_domain = type { %struct.list_head, i8 }
%struct.regulator_config = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.regulator_init_data = type { ptr, %struct.regulation_constraints, i32, ptr, ptr, ptr }
%struct.regulator_consumer_supply = type { ptr, ptr }
%struct.regulator_enable_gpio = type { %struct.list_head, ptr, i32, i32 }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.of_phandle_args = type { ptr, i32, [16 x i32] }
%struct.file = type { %union.anon.20, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.20 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.kuid_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.102, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.103, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.104, ptr, %struct.address_space, %struct.list_head, %union.anon.105, i32, i32, ptr, ptr, ptr, ptr }
%struct.kgid_t = type { i32 }
%union.anon.102 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%union.anon.103 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.104 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%union.anon.105 = type { ptr }
%struct.summary_lock_data = type { ptr, ptr, ptr }
%struct.summary_data = type { ptr, ptr, i32 }

@__tpstrtab_regulator_enable = internal constant [17 x i8] c"regulator_enable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_enable = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_enable }, align 4
@__tracepoint_regulator_enable = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_enable, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_enable, ptr null, ptr @__traceiter_regulator_enable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_enable = internal constant ptr @__tracepoint_regulator_enable, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_enable_delay = internal constant [23 x i8] c"regulator_enable_delay\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_enable_delay = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_enable_delay }, align 4
@__tracepoint_regulator_enable_delay = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_enable_delay, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_enable_delay, ptr null, ptr @__traceiter_regulator_enable_delay, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_enable_delay = internal constant ptr @__tracepoint_regulator_enable_delay, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_enable_complete = internal constant [26 x i8] c"regulator_enable_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_enable_complete = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_enable_complete }, align 4
@__tracepoint_regulator_enable_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_enable_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_enable_complete, ptr null, ptr @__traceiter_regulator_enable_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_enable_complete = internal constant ptr @__tracepoint_regulator_enable_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_disable = internal constant [18 x i8] c"regulator_disable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_disable = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_disable }, align 4
@__tracepoint_regulator_disable = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_disable, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_disable, ptr null, ptr @__traceiter_regulator_disable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_disable = internal constant ptr @__tracepoint_regulator_disable, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_disable_complete = internal constant [27 x i8] c"regulator_disable_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_disable_complete = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_disable_complete }, align 4
@__tracepoint_regulator_disable_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_disable_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_disable_complete, ptr null, ptr @__traceiter_regulator_disable_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_disable_complete = internal constant ptr @__tracepoint_regulator_disable_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_bypass_enable = internal constant [24 x i8] c"regulator_bypass_enable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_bypass_enable = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_bypass_enable }, align 4
@__tracepoint_regulator_bypass_enable = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_bypass_enable, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_bypass_enable, ptr null, ptr @__traceiter_regulator_bypass_enable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_bypass_enable = internal constant ptr @__tracepoint_regulator_bypass_enable, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_bypass_enable_complete = internal constant [33 x i8] c"regulator_bypass_enable_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_bypass_enable_complete = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_bypass_enable_complete }, align 4
@__tracepoint_regulator_bypass_enable_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_bypass_enable_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_bypass_enable_complete, ptr null, ptr @__traceiter_regulator_bypass_enable_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_bypass_enable_complete = internal constant ptr @__tracepoint_regulator_bypass_enable_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_bypass_disable = internal constant [25 x i8] c"regulator_bypass_disable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_bypass_disable = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_bypass_disable }, align 4
@__tracepoint_regulator_bypass_disable = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_bypass_disable, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_bypass_disable, ptr null, ptr @__traceiter_regulator_bypass_disable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_bypass_disable = internal constant ptr @__tracepoint_regulator_bypass_disable, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_bypass_disable_complete = internal constant [34 x i8] c"regulator_bypass_disable_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_bypass_disable_complete = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_bypass_disable_complete }, align 4
@__tracepoint_regulator_bypass_disable_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_bypass_disable_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_bypass_disable_complete, ptr null, ptr @__traceiter_regulator_bypass_disable_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_bypass_disable_complete = internal constant ptr @__tracepoint_regulator_bypass_disable_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_set_voltage = internal constant [22 x i8] c"regulator_set_voltage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_set_voltage = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_set_voltage }, align 4
@__tracepoint_regulator_set_voltage = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_set_voltage, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_set_voltage, ptr null, ptr @__traceiter_regulator_set_voltage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_set_voltage = internal constant ptr @__tracepoint_regulator_set_voltage, section "__tracepoints_ptrs", align 4
@__tpstrtab_regulator_set_voltage_complete = internal constant [31 x i8] c"regulator_set_voltage_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_regulator_set_voltage_complete = dso_local global %struct.static_call_key { ptr @__traceiter_regulator_set_voltage_complete }, align 4
@__tracepoint_regulator_set_voltage_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_regulator_set_voltage_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_regulator_set_voltage_complete, ptr null, ptr @__traceiter_regulator_set_voltage_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_regulator_set_voltage_complete = internal constant ptr @__tracepoint_regulator_set_voltage_complete, section "__tracepoints_ptrs", align 4
@str__regulator__trace_system_name = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"regulator\00", [22 x i8] zeroinitializer }, align 32
@trace_event_fields_regulator_basic = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.65, %union.anon.0 { %struct.anon { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_regulator_basic = internal global %struct.trace_event_class { ptr @str__regulator__trace_system_name, ptr @trace_event_raw_event_regulator_basic, ptr @perf_trace_regulator_basic, ptr @trace_event_reg, ptr @trace_event_fields_regulator_basic, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_regulator_basic, i64 24), ptr getelementptr (i8, ptr @event_class_regulator_basic, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_regulator_basic = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_regulator_basic, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_regulator_basic = internal global { [27 x i8], [37 x i8] } { [27 x i8] c"\22name=%s\22, __get_str(name)\00", [37 x i8] zeroinitializer }, align 32
@event_regulator_enable = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_enable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_enable = internal global ptr @event_regulator_enable, section "_ftrace_events", align 4
@event_regulator_enable_delay = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_enable_delay }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_enable_delay = internal global ptr @event_regulator_enable_delay, section "_ftrace_events", align 4
@event_regulator_enable_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_enable_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_enable_complete = internal global ptr @event_regulator_enable_complete, section "_ftrace_events", align 4
@event_regulator_disable = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_disable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_disable = internal global ptr @event_regulator_disable, section "_ftrace_events", align 4
@event_regulator_disable_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_disable_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_disable_complete = internal global ptr @event_regulator_disable_complete, section "_ftrace_events", align 4
@event_regulator_bypass_enable = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_bypass_enable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_bypass_enable = internal global ptr @event_regulator_bypass_enable, section "_ftrace_events", align 4
@event_regulator_bypass_enable_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_bypass_enable_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_bypass_enable_complete = internal global ptr @event_regulator_bypass_enable_complete, section "_ftrace_events", align 4
@event_regulator_bypass_disable = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_bypass_disable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_bypass_disable = internal global ptr @event_regulator_bypass_disable, section "_ftrace_events", align 4
@event_regulator_bypass_disable_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_basic, %union.anon.1 { ptr @__tracepoint_regulator_bypass_disable_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_basic }, ptr @print_fmt_regulator_basic, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_bypass_disable_complete = internal global ptr @event_regulator_bypass_disable_complete, section "_ftrace_events", align 4
@trace_event_fields_regulator_range = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.65, %union.anon.0 { %struct.anon { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.68, %union.anon.0 { %struct.anon { ptr @.str.69, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.68, %union.anon.0 { %struct.anon { ptr @.str.70, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_regulator_range = internal global %struct.trace_event_class { ptr @str__regulator__trace_system_name, ptr @trace_event_raw_event_regulator_range, ptr @perf_trace_regulator_range, ptr @trace_event_reg, ptr @trace_event_fields_regulator_range, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_regulator_range, i64 24), ptr getelementptr (i8, ptr @event_class_regulator_range, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_regulator_range = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_regulator_range, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_regulator_range = internal global { [65 x i8], [63 x i8] } { [65 x i8] c"\22name=%s (%d-%d)\22, __get_str(name), (int)REC->min, (int)REC->max\00", [63 x i8] zeroinitializer }, align 32
@event_regulator_set_voltage = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_range, %union.anon.1 { ptr @__tracepoint_regulator_set_voltage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_range }, ptr @print_fmt_regulator_range, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_set_voltage = internal global ptr @event_regulator_set_voltage, section "_ftrace_events", align 4
@trace_event_fields_regulator_value = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.65, %union.anon.0 { %struct.anon { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.72, %union.anon.0 { %struct.anon { ptr @.str.73, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_regulator_value = internal global %struct.trace_event_class { ptr @str__regulator__trace_system_name, ptr @trace_event_raw_event_regulator_value, ptr @perf_trace_regulator_value, ptr @trace_event_reg, ptr @trace_event_fields_regulator_value, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_regulator_value, i64 24), ptr getelementptr (i8, ptr @event_class_regulator_value, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_regulator_value = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_regulator_value, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_regulator_value = internal global { [50 x i8], [46 x i8] } { [50 x i8] c"\22name=%s, val=%u\22, __get_str(name), (int)REC->val\00", [46 x i8] zeroinitializer }, align 32
@event_regulator_set_voltage_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_regulator_value, %union.anon.1 { ptr @__tracepoint_regulator_set_voltage_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_regulator_value }, ptr @print_fmt_regulator_value, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_regulator_set_voltage_complete = internal global ptr @event_regulator_set_voltage_complete, section "_ftrace_events", align 4
@__bpf_trace_tp_map_regulator_enable = internal global %union.anon.108 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_enable, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_enable_delay = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_enable_delay, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_enable_complete = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_enable_complete, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_disable = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_disable, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_disable_complete = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_disable_complete, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_bypass_enable = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_bypass_enable, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_bypass_enable_complete = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_bypass_enable_complete, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_bypass_disable = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_bypass_disable, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_bypass_disable_complete = internal global %union.anon.116 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_bypass_disable_complete, ptr @__bpf_trace_regulator_basic, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_set_voltage = internal global %union.anon.117 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_set_voltage, ptr @__bpf_trace_regulator_range, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_regulator_set_voltage_complete = internal global %union.anon.118 { %struct.bpf_raw_event_map { ptr @__tracepoint_regulator_set_voltage_complete, ptr @__bpf_trace_regulator_value, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@.str = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@__kstrtab_rdev_get_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_rdev_get_name = external dso_local constant [0 x i8], align 1
@__ksymtab_rdev_get_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rdev_get_name to i32), ptr @__kstrtab_rdev_get_name, ptr @__kstrtabns_rdev_get_name }, section "___ksymtab_gpl+rdev_get_name", align 4
@regulator_check_voltage._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str.3, i32 426, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013%s: voltage operation not allowed\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"regulator_check_voltage\00", [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"drivers/regulator/core.c\00", [39 x i8] zeroinitializer }, align 32
@regulator_check_voltage._entry_ptr = internal global ptr @regulator_check_voltage._entry, section ".printk_index", align 4
@regulator_check_voltage._entry.4 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.2, ptr @.str.3, i32 437, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013%s: unsupportable voltage range: %d-%duV\0A\00", [52 x i8] zeroinitializer }, align 32
@regulator_check_voltage._entry_ptr.6 = internal global ptr @regulator_check_voltage._entry.4, section ".printk_index", align 4
@regulator_check_consumers._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.8, ptr @.str.3, i32 477, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013%s: Restricting voltage, %u-%uuV\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"regulator_check_consumers\00", [38 x i8] zeroinitializer }, align 32
@regulator_check_consumers._entry_ptr = internal global ptr @regulator_check_consumers._entry, section ".printk_index", align 4
@_regulator_get._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.10, ptr @.str.3, i32 2040, ptr @.str.11, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"invalid type %d in %s\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"_regulator_get\00", [17 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@_regulator_get._entry_ptr = internal global ptr @_regulator_get._entry, section ".printk_index", align 4
@_regulator_get._entry.13 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.10, ptr @.str.3, i32 2045, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\013get() with no identifier\0A\00", [36 x i8] zeroinitializer }, align 32
@_regulator_get._entry_ptr.15 = internal global ptr @_regulator_get._entry.13, section ".printk_index", align 4
@_regulator_get._entry.16 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.10, ptr @.str.3, i32 2062, ptr @.str.18, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"incomplete constraints, dummy supplies not allowed\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@_regulator_get._entry_ptr.19 = internal global ptr @_regulator_get._entry.16, section ".printk_index", align 4
@_regulator_get._entry.20 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.10, ptr @.str.3, i32 2073, ptr @.str.18, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"supply %s not found, using dummy regulator\0A\00", [52 x i8] zeroinitializer }, align 32
@_regulator_get._entry_ptr.22 = internal global ptr @_regulator_get._entry.20, section ".printk_index", align 4
@dummy_regulator_rdev = external dso_local local_unnamed_addr global ptr, align 4
@_regulator_get._entry.23 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.10, ptr @.str.3, i32 2080, ptr @.str.18, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"dummy supplies not allowed for exclusive requests\0A\00", [45 x i8] zeroinitializer }, align 32
@_regulator_get._entry_ptr.25 = internal global ptr @_regulator_get._entry.23, section ".printk_index", align 4
@regulator_list_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.83, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @regulator_list_mutex, i64 52), ptr getelementptr (i8, ptr @regulator_list_mutex, i64 52) }, ptr @regulator_list_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.84, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_regulator_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get to i32), ptr @__kstrtab_regulator_get, ptr @__kstrtabns_regulator_get }, section "___ksymtab_gpl+regulator_get", align 4
@__kstrtab_regulator_get_exclusive = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_exclusive = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_exclusive = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_exclusive to i32), ptr @__kstrtab_regulator_get_exclusive, ptr @__kstrtabns_regulator_get_exclusive }, section "___ksymtab_gpl+regulator_get_exclusive", align 4
@__kstrtab_regulator_get_optional = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_optional = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_optional = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_optional to i32), ptr @__kstrtab_regulator_get_optional, ptr @__kstrtabns_regulator_get_optional }, section "___ksymtab_gpl+regulator_get_optional", align 4
@__kstrtab_regulator_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_put = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_put to i32), ptr @__kstrtab_regulator_put, ptr @__kstrtabns_regulator_put }, section "___ksymtab_gpl+regulator_put", align 4
@regulator_supply_alias_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @regulator_supply_alias_list, ptr @regulator_supply_alias_list }, [24 x i8] zeroinitializer }, align 32
@regulator_register_supply_alias._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.27, ptr @.str.3, i32 2317, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\016Adding alias for supply %s,%s -> %s,%s\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"regulator_register_supply_alias\00", [32 x i8] zeroinitializer }, align 32
@regulator_register_supply_alias._entry_ptr = internal global ptr @regulator_register_supply_alias._entry, section ".printk_index", align 4
@__kstrtab_regulator_register_supply_alias = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_register_supply_alias = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_register_supply_alias = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_register_supply_alias to i32), ptr @__kstrtab_regulator_register_supply_alias, ptr @__kstrtabns_regulator_register_supply_alias }, section "___ksymtab_gpl+regulator_register_supply_alias", align 4
@__kstrtab_regulator_unregister_supply_alias = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_unregister_supply_alias = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_unregister_supply_alias = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_unregister_supply_alias to i32), ptr @__kstrtab_regulator_unregister_supply_alias, ptr @__kstrtabns_regulator_unregister_supply_alias }, section "___ksymtab_gpl+regulator_unregister_supply_alias", align 4
@regulator_bulk_register_supply_alias._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.28, ptr @.str.29, ptr @.str.3, i32 2381, ptr @.str.11, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Failed to create supply alias %s,%s -> %s,%s\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"regulator_bulk_register_supply_alias\00", [59 x i8] zeroinitializer }, align 32
@regulator_bulk_register_supply_alias._entry_ptr = internal global ptr @regulator_bulk_register_supply_alias._entry, section ".printk_index", align 4
@__kstrtab_regulator_bulk_register_supply_alias = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_bulk_register_supply_alias = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_bulk_register_supply_alias = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_bulk_register_supply_alias to i32), ptr @__kstrtab_regulator_bulk_register_supply_alias, ptr @__kstrtabns_regulator_bulk_register_supply_alias }, section "___ksymtab_gpl+regulator_bulk_register_supply_alias", align 4
@__kstrtab_regulator_bulk_unregister_supply_alias = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_bulk_unregister_supply_alias = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_bulk_unregister_supply_alias = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_bulk_unregister_supply_alias to i32), ptr @__kstrtab_regulator_bulk_unregister_supply_alias, ptr @__kstrtabns_regulator_bulk_unregister_supply_alias }, section "___ksymtab_gpl+regulator_bulk_unregister_supply_alias", align 4
@__kstrtab_regulator_enable = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_enable = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_enable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_enable to i32), ptr @__kstrtab_regulator_enable, ptr @__kstrtabns_regulator_enable }, section "___ksymtab_gpl+regulator_enable", align 4
@__kstrtab_regulator_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_disable to i32), ptr @__kstrtab_regulator_disable, ptr @__kstrtabns_regulator_disable }, section "___ksymtab_gpl+regulator_disable", align 4
@__kstrtab_regulator_force_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_force_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_force_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_force_disable to i32), ptr @__kstrtab_regulator_force_disable, ptr @__kstrtabns_regulator_force_disable }, section "___ksymtab_gpl+regulator_force_disable", align 4
@system_power_efficient_wq = external dso_local local_unnamed_addr global ptr, align 4
@__kstrtab_regulator_disable_deferred = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_disable_deferred = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_disable_deferred = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_disable_deferred to i32), ptr @__kstrtab_regulator_disable_deferred, ptr @__kstrtabns_regulator_disable_deferred }, section "___ksymtab_gpl+regulator_disable_deferred", align 4
@__kstrtab_regulator_is_enabled = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_is_enabled = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_is_enabled = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_is_enabled to i32), ptr @__kstrtab_regulator_is_enabled, ptr @__kstrtabns_regulator_is_enabled }, section "___ksymtab_gpl+regulator_is_enabled", align 4
@__kstrtab_regulator_count_voltages = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_count_voltages = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_count_voltages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_count_voltages to i32), ptr @__kstrtab_regulator_count_voltages, ptr @__kstrtabns_regulator_count_voltages }, section "___ksymtab_gpl+regulator_count_voltages", align 4
@__kstrtab_regulator_list_voltage = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_list_voltage = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_list_voltage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_list_voltage to i32), ptr @__kstrtab_regulator_list_voltage, ptr @__kstrtabns_regulator_list_voltage }, section "___ksymtab_gpl+regulator_list_voltage", align 4
@__kstrtab_regulator_get_hardware_vsel_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_hardware_vsel_register = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_hardware_vsel_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_hardware_vsel_register to i32), ptr @__kstrtab_regulator_get_hardware_vsel_register, ptr @__kstrtabns_regulator_get_hardware_vsel_register }, section "___ksymtab_gpl+regulator_get_hardware_vsel_register", align 4
@__kstrtab_regulator_list_hardware_vsel = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_list_hardware_vsel = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_list_hardware_vsel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_list_hardware_vsel to i32), ptr @__kstrtab_regulator_list_hardware_vsel, ptr @__kstrtabns_regulator_list_hardware_vsel }, section "___ksymtab_gpl+regulator_list_hardware_vsel", align 4
@__kstrtab_regulator_get_linear_step = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_linear_step = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_linear_step = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_linear_step to i32), ptr @__kstrtab_regulator_get_linear_step, ptr @__kstrtabns_regulator_get_linear_step }, section "___ksymtab_gpl+regulator_get_linear_step", align 4
@__kstrtab_regulator_is_supported_voltage = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_is_supported_voltage = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_is_supported_voltage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_is_supported_voltage to i32), ptr @__kstrtab_regulator_is_supported_voltage, ptr @__kstrtabns_regulator_is_supported_voltage }, section "___ksymtab_gpl+regulator_is_supported_voltage", align 4
@regulator_set_voltage_rdev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.31, ptr @.str.3, i32 3699, ptr @.str.11, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Failed to increase supply voltage: %pe\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"regulator_set_voltage_rdev\00", [37 x i8] zeroinitializer }, align 32
@regulator_set_voltage_rdev._entry_ptr = internal global ptr @regulator_set_voltage_rdev._entry, section ".printk_index", align 4
@regulator_set_voltage_rdev._entry.32 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.31, ptr @.str.3, i32 3717, ptr @.str.18, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Failed to decrease supply voltage: %pe\0A\00", [56 x i8] zeroinitializer }, align 32
@regulator_set_voltage_rdev._entry_ptr.34 = internal global ptr @regulator_set_voltage_rdev._entry.32, section ".printk_index", align 4
@__kstrtab_regulator_set_voltage_rdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_voltage_rdev = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_voltage_rdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_voltage_rdev to i32), ptr @__kstrtab_regulator_set_voltage_rdev, ptr @__kstrtabns_regulator_set_voltage_rdev }, section "___ksymtab_gpl+regulator_set_voltage_rdev", align 4
@__kstrtab_regulator_set_voltage = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_voltage = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_voltage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_voltage to i32), ptr @__kstrtab_regulator_set_voltage, ptr @__kstrtabns_regulator_set_voltage }, section "___ksymtab_gpl+regulator_set_voltage", align 4
@__kstrtab_regulator_suspend_enable = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_suspend_enable = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_suspend_enable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_suspend_enable to i32), ptr @__kstrtab_regulator_suspend_enable, ptr @__kstrtabns_regulator_suspend_enable }, section "___ksymtab_gpl+regulator_suspend_enable", align 4
@__kstrtab_regulator_suspend_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_suspend_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_suspend_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_suspend_disable to i32), ptr @__kstrtab_regulator_suspend_disable, ptr @__kstrtabns_regulator_suspend_disable }, section "___ksymtab_gpl+regulator_suspend_disable", align 4
@__kstrtab_regulator_set_suspend_voltage = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_suspend_voltage = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_suspend_voltage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_suspend_voltage to i32), ptr @__kstrtab_regulator_set_suspend_voltage, ptr @__kstrtabns_regulator_set_suspend_voltage }, section "___ksymtab_gpl+regulator_set_suspend_voltage", align 4
@__kstrtab_regulator_set_voltage_time = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_voltage_time = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_voltage_time = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_voltage_time to i32), ptr @__kstrtab_regulator_set_voltage_time, ptr @__kstrtabns_regulator_set_voltage_time }, section "___ksymtab_gpl+regulator_set_voltage_time", align 4
@__kstrtab_regulator_set_voltage_time_sel = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_voltage_time_sel = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_voltage_time_sel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_voltage_time_sel to i32), ptr @__kstrtab_regulator_set_voltage_time_sel, ptr @__kstrtabns_regulator_set_voltage_time_sel }, section "___ksymtab_gpl+regulator_set_voltage_time_sel", align 4
@__kstrtab_regulator_sync_voltage = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_sync_voltage = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_sync_voltage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_sync_voltage to i32), ptr @__kstrtab_regulator_sync_voltage, ptr @__kstrtabns_regulator_sync_voltage }, section "___ksymtab_gpl+regulator_sync_voltage", align 4
@regulator_get_voltage_rdev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.35, ptr @.str.36, ptr @.str.3, i32 4306, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013%s: bypassed regulator has no supply!\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"regulator_get_voltage_rdev\00", [37 x i8] zeroinitializer }, align 32
@regulator_get_voltage_rdev._entry_ptr = internal global ptr @regulator_get_voltage_rdev._entry, section ".printk_index", align 4
@__kstrtab_regulator_get_voltage_rdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_voltage_rdev = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_voltage_rdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_voltage_rdev to i32), ptr @__kstrtab_regulator_get_voltage_rdev, ptr @__kstrtabns_regulator_get_voltage_rdev }, section "___ksymtab_gpl+regulator_get_voltage_rdev", align 4
@__kstrtab_regulator_get_voltage = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_voltage = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_voltage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_voltage to i32), ptr @__kstrtab_regulator_get_voltage, ptr @__kstrtabns_regulator_get_voltage }, section "___ksymtab_gpl+regulator_get_voltage", align 4
@__kstrtab_regulator_set_current_limit = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_current_limit = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_current_limit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_current_limit to i32), ptr @__kstrtab_regulator_set_current_limit, ptr @__kstrtabns_regulator_set_current_limit }, section "___ksymtab_gpl+regulator_set_current_limit", align 4
@__kstrtab_regulator_get_current_limit = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_current_limit = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_current_limit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_current_limit to i32), ptr @__kstrtab_regulator_get_current_limit, ptr @__kstrtabns_regulator_get_current_limit }, section "___ksymtab_gpl+regulator_get_current_limit", align 4
@__kstrtab_regulator_set_mode = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_mode = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_mode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_mode to i32), ptr @__kstrtab_regulator_set_mode, ptr @__kstrtabns_regulator_set_mode }, section "___ksymtab_gpl+regulator_set_mode", align 4
@__kstrtab_regulator_get_mode = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_mode = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_mode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_mode to i32), ptr @__kstrtab_regulator_get_mode, ptr @__kstrtabns_regulator_get_mode }, section "___ksymtab_gpl+regulator_get_mode", align 4
@__kstrtab_regulator_get_error_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_error_flags = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_error_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_error_flags to i32), ptr @__kstrtab_regulator_get_error_flags, ptr @__kstrtabns_regulator_get_error_flags }, section "___ksymtab_gpl+regulator_get_error_flags", align 4
@__kstrtab_regulator_set_load = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_load = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_load = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_load to i32), ptr @__kstrtab_regulator_set_load, ptr @__kstrtabns_regulator_set_load }, section "___ksymtab_gpl+regulator_set_load", align 4
@__kstrtab_regulator_allow_bypass = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_allow_bypass = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_allow_bypass = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_allow_bypass to i32), ptr @__kstrtab_regulator_allow_bypass, ptr @__kstrtabns_regulator_allow_bypass }, section "___ksymtab_gpl+regulator_allow_bypass", align 4
@__kstrtab_regulator_register_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_register_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_register_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_register_notifier to i32), ptr @__kstrtab_regulator_register_notifier, ptr @__kstrtabns_regulator_register_notifier }, section "___ksymtab_gpl+regulator_register_notifier", align 4
@__kstrtab_regulator_unregister_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_unregister_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_unregister_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_unregister_notifier to i32), ptr @__kstrtab_regulator_unregister_notifier, ptr @__kstrtabns_regulator_unregister_notifier }, section "___ksymtab_gpl+regulator_unregister_notifier", align 4
@regulator_bulk_get._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @.str.38, ptr @.str.3, i32 4756, ptr @.str.11, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Failed to get supply '%s': %pe\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"regulator_bulk_get\00", [45 x i8] zeroinitializer }, align 32
@regulator_bulk_get._entry_ptr = internal global ptr @regulator_bulk_get._entry, section ".printk_index", align 4
@regulator_bulk_get.__UNIQUE_ID_ddebug383 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.38, ptr @.str.3, ptr @.str.40, i8 4, i8 -91, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.39 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"core\00", [27 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Failed to get supply '%s', deferring\0A\00", [58 x i8] zeroinitializer }, align 32
@__kstrtab_regulator_bulk_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_bulk_get = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_bulk_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_bulk_get to i32), ptr @__kstrtab_regulator_bulk_get, ptr @__kstrtabns_regulator_bulk_get }, section "___ksymtab_gpl+regulator_bulk_get", align 4
@regulator_bulk_enable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.42, ptr @.str.3, i32 4815, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\013Failed to enable %s: %pe\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"regulator_bulk_enable\00", [42 x i8] zeroinitializer }, align 32
@regulator_bulk_enable._entry_ptr = internal global ptr @regulator_bulk_enable._entry, section ".printk_index", align 4
@__kstrtab_regulator_bulk_enable = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_bulk_enable = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_bulk_enable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_bulk_enable to i32), ptr @__kstrtab_regulator_bulk_enable, ptr @__kstrtabns_regulator_bulk_enable }, section "___ksymtab_gpl+regulator_bulk_enable", align 4
@regulator_bulk_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.44, ptr @.str.3, i32 4851, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\013Failed to disable %s: %pe\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"regulator_bulk_disable\00", [41 x i8] zeroinitializer }, align 32
@regulator_bulk_disable._entry_ptr = internal global ptr @regulator_bulk_disable._entry, section ".printk_index", align 4
@regulator_bulk_disable._entry.45 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.46, ptr @.str.44, ptr @.str.3, i32 4856, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\013Failed to re-enable %s: %pe\0A\00", [33 x i8] zeroinitializer }, align 32
@regulator_bulk_disable._entry_ptr.47 = internal global ptr @regulator_bulk_disable._entry.45, section ".printk_index", align 4
@__kstrtab_regulator_bulk_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_bulk_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_bulk_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_bulk_disable to i32), ptr @__kstrtab_regulator_bulk_disable, ptr @__kstrtabns_regulator_bulk_disable }, section "___ksymtab_gpl+regulator_bulk_disable", align 4
@__kstrtab_regulator_bulk_force_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_bulk_force_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_bulk_force_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_bulk_force_disable to i32), ptr @__kstrtab_regulator_bulk_force_disable, ptr @__kstrtabns_regulator_bulk_force_disable }, section "___ksymtab_gpl+regulator_bulk_force_disable", align 4
@__kstrtab_regulator_bulk_free = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_bulk_free = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_bulk_free = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_bulk_free to i32), ptr @__kstrtab_regulator_bulk_free, ptr @__kstrtabns_regulator_bulk_free }, section "___ksymtab_gpl+regulator_bulk_free", align 4
@__kstrtab_regulator_notifier_call_chain = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_notifier_call_chain = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_notifier_call_chain = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_notifier_call_chain to i32), ptr @__kstrtab_regulator_notifier_call_chain, ptr @__kstrtabns_regulator_notifier_call_chain }, section "___ksymtab_gpl+regulator_notifier_call_chain", align 4
@__kstrtab_regulator_mode_to_status = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_mode_to_status = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_mode_to_status = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_mode_to_status to i32), ptr @__kstrtab_regulator_mode_to_status, ptr @__kstrtabns_regulator_mode_to_status }, section "___ksymtab_gpl+regulator_mode_to_status", align 4
@regulator_coupler_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @regulator_coupler_list, ptr @regulator_coupler_list }, [24 x i8] zeroinitializer }, align 32
@regulator_register.regulator_no = internal global { %struct.atomic_t, [28 x i8] } { %struct.atomic_t { i32 -1 }, [28 x i8] zeroinitializer }, align 32
@regulator_register.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.48 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&rdev->err_lock\00", [16 x i8] zeroinitializer }, align 32
@regulator_ww_class = internal global { %struct.ww_class, [32 x i8] } { %struct.ww_class { %struct.atomic_t zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, ptr @.str.161, ptr @.str.162, i32 0 }, [32 x i8] zeroinitializer }, align 32
@regulator_register.__key.49 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.50 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"&(&rdev->notifier)->rwsem\00", [38 x i8] zeroinitializer }, align 32
@regulator_register.__key.51 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.52 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"(work_completion)(&(&rdev->disable_work)->work)\00", [48 x i8] zeroinitializer }, align 32
@regulator_register.__key.53 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.54 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"&(&rdev->disable_work)->timer\00", [34 x i8] zeroinitializer }, align 32
@regulator_register._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.56, ptr @.str.3, i32 5444, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013%s: Failed to request enable GPIO: %pe\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"regulator_register\00", [45 x i8] zeroinitializer }, align 32
@regulator_register._entry_ptr = internal global ptr @regulator_register._entry, section ".printk_index", align 4
@regulator_class = dso_local global { %struct.class, [36 x i8] } { %struct.class { ptr @.str.63, ptr null, ptr null, ptr @regulator_dev_groups, ptr null, ptr null, ptr null, ptr null, ptr @regulator_dev_release, ptr null, ptr null, ptr null, ptr null, ptr @regulator_pm_ops, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"regulator.%lu\00", [18 x i8] zeroinitializer }, align 32
@regulator_register.__UNIQUE_ID_ddebug385 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.56, ptr @.str.3, ptr @.str.58, i8 5, i8 91, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.58 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: will resolve supply early: %s\0A\00", [61 x i8] zeroinitializer }, align 32
@regulator_register.__UNIQUE_ID_ddebug386 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.56, ptr @.str.3, ptr @.str.59, i8 5, i8 93, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.59 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%s: unable to resolve supply early: %pe\0A\00", [55 x i8] zeroinitializer }, align 32
@regulator_register._entry.60 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.56, ptr @.str.3, i32 5510, ptr @.str.11, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to set supply %s\0A\00", [39 x i8] zeroinitializer }, align 32
@regulator_register._entry_ptr.62 = internal global ptr @regulator_register._entry.60, section ".printk_index", align 4
@__kstrtab_regulator_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_register = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_register to i32), ptr @__kstrtab_regulator_register, ptr @__kstrtabns_regulator_register }, section "___ksymtab_gpl+regulator_register", align 4
@__kstrtab_regulator_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_unregister to i32), ptr @__kstrtab_regulator_unregister, ptr @__kstrtabns_regulator_unregister }, section "___ksymtab_gpl+regulator_unregister", align 4
@.str.63 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"regulator\00", [22 x i8] zeroinitializer }, align 32
@regulator_dev_groups = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @regulator_dev_group, ptr null], [24 x i8] zeroinitializer }, align 32
@regulator_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr @regulator_suspend, ptr @regulator_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@has_full_constraints = internal global { i1, [31 x i8] } zeroinitializer, align 32
@__kstrtab_regulator_has_full_constraints = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_has_full_constraints = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_has_full_constraints = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_has_full_constraints to i32), ptr @__kstrtab_regulator_has_full_constraints, ptr @__kstrtabns_regulator_has_full_constraints }, section "___ksymtab_gpl+regulator_has_full_constraints", align 4
@__kstrtab_rdev_get_drvdata = external dso_local constant [0 x i8], align 1
@__kstrtabns_rdev_get_drvdata = external dso_local constant [0 x i8], align 1
@__ksymtab_rdev_get_drvdata = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rdev_get_drvdata to i32), ptr @__kstrtab_rdev_get_drvdata, ptr @__kstrtabns_rdev_get_drvdata }, section "___ksymtab_gpl+rdev_get_drvdata", align 4
@__kstrtab_regulator_get_drvdata = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_drvdata = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_drvdata = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_drvdata to i32), ptr @__kstrtab_regulator_get_drvdata, ptr @__kstrtabns_regulator_get_drvdata }, section "___ksymtab_gpl+regulator_get_drvdata", align 4
@__kstrtab_regulator_set_drvdata = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_set_drvdata = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_set_drvdata = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_set_drvdata to i32), ptr @__kstrtab_regulator_set_drvdata, ptr @__kstrtabns_regulator_set_drvdata }, section "___ksymtab_gpl+regulator_set_drvdata", align 4
@__kstrtab_rdev_get_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_rdev_get_id = external dso_local constant [0 x i8], align 1
@__ksymtab_rdev_get_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rdev_get_id to i32), ptr @__kstrtab_rdev_get_id, ptr @__kstrtabns_rdev_get_id }, section "___ksymtab_gpl+rdev_get_id", align 4
@__kstrtab_rdev_get_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_rdev_get_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_rdev_get_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rdev_get_dev to i32), ptr @__kstrtab_rdev_get_dev, ptr @__kstrtabns_rdev_get_dev }, section "___ksymtab_gpl+rdev_get_dev", align 4
@__kstrtab_rdev_get_regmap = external dso_local constant [0 x i8], align 1
@__kstrtabns_rdev_get_regmap = external dso_local constant [0 x i8], align 1
@__ksymtab_rdev_get_regmap = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rdev_get_regmap to i32), ptr @__kstrtab_rdev_get_regmap, ptr @__kstrtabns_rdev_get_regmap }, section "___ksymtab_gpl+rdev_get_regmap", align 4
@__kstrtab_regulator_get_init_drvdata = external dso_local constant [0 x i8], align 1
@__kstrtabns_regulator_get_init_drvdata = external dso_local constant [0 x i8], align 1
@__ksymtab_regulator_get_init_drvdata = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @regulator_get_init_drvdata to i32), ptr @__kstrtab_regulator_get_init_drvdata, ptr @__kstrtabns_regulator_get_init_drvdata }, section "___ksymtab_gpl+regulator_get_init_drvdata", align 4
@__initcall__kmod_core__387_6012_regulator_init1 = internal global ptr @regulator_init, section ".initcall1.init", align 4
@__initcall__kmod_core__388_6109_regulator_init_complete7s = internal global ptr @regulator_init_complete, section ".initcall7s.init", align 4
@.str.64 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"name=%s\0A\00", [23 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"min\00", [28 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"max\00", [28 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"name=%s (%d-%d)\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"val\00", [28 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"name=%s, val=%u\0A\00", [47 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@regulator_ops_is_valid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.76, ptr @.str.3, i32 119, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\013%s: no constraints\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"regulator_ops_is_valid\00", [41 x i8] zeroinitializer }, align 32
@regulator_ops_is_valid._entry_ptr = internal global ptr @regulator_ops_is_valid._entry, section ".printk_index", align 4
@regulator_map_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @regulator_map_list, ptr @regulator_map_list }, [24 x i8] zeroinitializer }, align 32
@regulator_supply_alias.__UNIQUE_ID_ddebug364 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.77, ptr @.str.3, ptr @.str.78, i8 1, i8 -54, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.77 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"regulator_supply_alias\00", [41 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Mapping supply %s to %s,%s\0A\00", [36 x i8] zeroinitializer }, align 32
@of_get_regulator.__UNIQUE_ID_ddebug354 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.79, ptr @.str.3, ptr @.str.80, i8 0, i8 100, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.79 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"of_get_regulator\00", [47 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Looking up %s-supply from device tree\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"%s-supply\00", [22 x i8] zeroinitializer }, align 32
@of_get_regulator.__UNIQUE_ID_ddebug355 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.79, ptr @.str.3, ptr @.str.82, i8 0, i8 103, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.82 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Looking up %s property in node %pOF failed\0A\00", [52 x i8] zeroinitializer }, align 32
@of_root = external dso_local local_unnamed_addr global ptr, align 4
@.str.83 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"regulator_list_mutex.wait_lock\00", [33 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"regulator_list_mutex\00", [43 x i8] zeroinitializer }, align 32
@regulator_resolve_supply._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.85, ptr @.str.86, ptr @.str.3, i32 1951, ptr @.str.11, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Failed to resolve %s-supply for %s\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"regulator_resolve_supply\00", [39 x i8] zeroinitializer }, align 32
@regulator_resolve_supply._entry_ptr = internal global ptr @regulator_resolve_supply._entry, section ".printk_index", align 4
@regulator_resolve_supply._entry.87 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.88, ptr @.str.86, ptr @.str.3, i32 1959, ptr @.str.11, ptr @.str.12 }, [40 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Supply for %s (%s) resolved to itself\0A\00", [57 x i8] zeroinitializer }, align 32
@regulator_resolve_supply._entry_ptr.89 = internal global ptr @regulator_resolve_supply._entry.87, section ".printk_index", align 4
@set_supply.__UNIQUE_ID_ddebug360 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.90, ptr @.str.3, ptr @.str.91, i8 1, i8 -119, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.90 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"set_supply\00", [21 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: supplied by %s\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SUPPLY\00", [25 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s-%s\00", [26 x i8] zeroinitializer }, align 32
@create_regulator.__UNIQUE_ID_ddebug362 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.94, ptr @.str.3, ptr @.str.95, i8 1, i8 -69, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.94 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"create_regulator\00", [47 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s: could not add device link %s: %pe\0A\00", [57 x i8] zeroinitializer }, align 32
@create_regulator.__UNIQUE_ID_ddebug363 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.94, ptr @.str.3, ptr @.str.96, i8 1, i8 -67, i8 64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.96 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s: Failed to create debugfs directory\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"uA_load\00", [24 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"min_uV\00", [25 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"max_uV\00", [25 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"constraint_flags\00", [47 x i8] zeroinitializer }, align 32
@constraint_flags_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @default_llseek, ptr @constraint_flags_read_file, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @simple_open, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [114 x i8], [46 x i8] } { [114 x i8] c"always_on: %u\0Aboot_on: %u\0Aapply_uV: %u\0Aramp_disable: %u\0Asoft_start: %u\0Apull_down: %u\0Aover_current_protection: %u\0A\00", [46 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@_regulator_put.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@oops_in_progress = external dso_local local_unnamed_addr global i32, align 4
@debug_locks_silent = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.102 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/ww_mutex.h\00", [39 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"DEBUG_LOCKS_WARN_ON(%s)\00", [40 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"!ctx->contending_lock\00", [42 x i8] zeroinitializer }, align 32
@regulator_lock_recursive.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@regulator_nesting_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.105, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @regulator_nesting_mutex, i64 52), ptr getelementptr (i8, ptr @regulator_nesting_mutex, i64 52) }, ptr @regulator_nesting_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.106, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"regulator_nesting_mutex.wait_lock\00", [62 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"regulator_nesting_mutex\00", [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"ctx->done_acquire\00", [46 x i8] zeroinitializer }, align 32
@_regulator_enable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@_regulator_enable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.109, ptr @.str.3, i32 2771, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013%s: is_enabled() failed: %pe\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"_regulator_enable\00", [46 x i8] zeroinitializer }, align 32
@_regulator_enable._entry_ptr = internal global ptr @_regulator_enable._entry, section ".printk_index", align 4
@_regulator_handle_consumer_enable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@_regulator_do_enable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.110, ptr @.str.111, ptr @.str.3, i32 2592, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014%s: enable_time() failed: %pe\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"_regulator_do_enable\00", [43 x i8] zeroinitializer }, align 32
@_regulator_do_enable._entry_ptr = internal global ptr @_regulator_do_enable._entry, section ".printk_index", align 4
@_regulator_do_enable._entry.112 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.113, ptr @.str.111, ptr @.str.3, i32 2655, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\013%s: Enabled check timed out\0A\00", [33 x i8] zeroinitializer }, align 32
@_regulator_do_enable._entry_ptr.114 = internal global ptr @_regulator_do_enable._entry.112, section ".printk_index", align 4
@.str.115 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"include/trace/events/regulator.h\00", [63 x i8] zeroinitializer }, align 32
@trace_regulator_enable.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.116 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.117 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@trace_regulator_enable_delay.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@_regulator_check_status_enabled._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.118, ptr @.str.119, ptr @.str.3, i32 2569, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016%s: get_status returned error: %d\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"_regulator_check_status_enabled\00", [32 x i8] zeroinitializer }, align 32
@_regulator_check_status_enabled._entry_ptr = internal global ptr @_regulator_check_status_enabled._entry, section ".printk_index", align 4
@trace_regulator_enable_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@_regulator_handle_consumer_disable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@_regulator_handle_consumer_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.120, ptr @.str.121, ptr @.str.3, i32 2715, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013%s: Underflow of regulator enable count\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"_regulator_handle_consumer_disable\00", [61 x i8] zeroinitializer }, align 32
@_regulator_handle_consumer_disable._entry_ptr = internal global ptr @_regulator_handle_consumer_disable._entry, section ".printk_index", align 4
@.str.122 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ctx->acquired\00", [18 x i8] zeroinitializer }, align 32
@_regulator_disable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.123 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"unbalanced disables for %s\0A\00", [36 x i8] zeroinitializer }, align 32
@_regulator_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.124, ptr @.str.125, ptr @.str.3, i32 2870, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\013%s: failed to disable: %pe\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"_regulator_disable\00", [45 x i8] zeroinitializer }, align 32
@_regulator_disable._entry_ptr = internal global ptr @_regulator_disable._entry, section ".printk_index", align 4
@trace_regulator_disable.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_regulator_disable_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@_regulator_force_disable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@_regulator_force_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.127, ptr @.str.3, i32 2937, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013%s: failed to force disable: %pe\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"_regulator_force_disable\00", [39 x i8] zeroinitializer }, align 32
@_regulator_force_disable._entry_ptr = internal global ptr @_regulator_force_disable._entry, section ".printk_index", align 4
@drms_uA_update.__UNIQUE_ID_ddebug356 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.128, ptr @.str.3, ptr @.str.129, i8 0, i8 -24, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.128 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"drms_uA_update\00", [17 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: DRMS operation not allowed\0A\00", [32 x i8] zeroinitializer }, align 32
@drms_uA_update._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.130, ptr @.str.128, ptr @.str.3, i32 953, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013%s: failed to set load %d: %pe\0A\00", [62 x i8] zeroinitializer }, align 32
@drms_uA_update._entry_ptr = internal global ptr @drms_uA_update._entry, section ".printk_index", align 4
@drms_uA_update._entry.131 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.128, ptr @.str.3, i32 958, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013%s: invalid output voltage found\0A\00", [60 x i8] zeroinitializer }, align 32
@drms_uA_update._entry_ptr.133 = internal global ptr @drms_uA_update._entry.131, section ".printk_index", align 4
@drms_uA_update._entry.134 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.128, ptr @.str.3, i32 969, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013%s: invalid input voltage found\0A\00", [61 x i8] zeroinitializer }, align 32
@drms_uA_update._entry_ptr.136 = internal global ptr @drms_uA_update._entry.134, section ".printk_index", align 4
@drms_uA_update._entry.137 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.128, ptr @.str.3, i32 981, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013%s: failed to get optimum mode @ %d uA %d -> %d uV: %pe\0A\00", [37 x i8] zeroinitializer }, align 32
@drms_uA_update._entry_ptr.139 = internal global ptr @drms_uA_update._entry.137, section ".printk_index", align 4
@drms_uA_update._entry.140 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.128, ptr @.str.3, i32 988, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013%s: failed to set optimum mode %x: %pe\0A\00", [54 x i8] zeroinitializer }, align 32
@drms_uA_update._entry_ptr.142 = internal global ptr @drms_uA_update._entry.140, section ".printk_index", align 4
@regulator_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@_regulator_do_set_voltage._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.143, ptr @.str.144, ptr @.str.3, i32 3546, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014%s: failed to get delay: %pe\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"_regulator_do_set_voltage\00", [38 x i8] zeroinitializer }, align 32
@_regulator_do_set_voltage._entry_ptr = internal global ptr @_regulator_do_set_voltage._entry, section ".printk_index", align 4
@trace_regulator_set_voltage.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_regulator_set_voltage_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@regulator_get_optimal_voltage.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@regulator_balance_voltage._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.145, ptr @.str.146, ptr @.str.3, i32 3998, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013%s: Not all coupled regulators registered\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"regulator_balance_voltage\00", [38 x i8] zeroinitializer }, align 32
@regulator_balance_voltage._entry_ptr = internal global ptr @regulator_balance_voltage._entry, section ".printk_index", align 4
@_regulator_set_suspend_voltage._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.148, ptr @.str.3, i32 4099, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013%s: The suspend voltage can't be changed!\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"_regulator_set_suspend_voltage\00", [33 x i8] zeroinitializer }, align 32
@_regulator_set_suspend_voltage._entry_ptr = internal global ptr @_regulator_set_suspend_voltage._entry, section ".printk_index", align 4
@_regulator_set_voltage_time.__UNIQUE_ID_ddebug366 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.149, ptr @.str.3, ptr @.str.150, i8 3, i8 95, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.149 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"_regulator_set_voltage_time\00", [36 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: ramp_delay not set\0A\00", [40 x i8] zeroinitializer }, align 32
@regulator_check_current_limit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.152, ptr @.str.3, i32 491, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013%s: current operation not allowed\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"regulator_check_current_limit\00", [34 x i8] zeroinitializer }, align 32
@regulator_check_current_limit._entry_ptr = internal global ptr @regulator_check_current_limit._entry, section ".printk_index", align 4
@regulator_check_current_limit._entry.153 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.154, ptr @.str.152, ptr @.str.3, i32 502, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013%s: unsupportable current range: %d-%duA\0A\00", [52 x i8] zeroinitializer }, align 32
@regulator_check_current_limit._entry_ptr.155 = internal global ptr @regulator_check_current_limit._entry.153, section ".printk_index", align 4
@regulator_mode_constrain._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.156, ptr @.str.157, ptr @.str.3, i32 520, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\013%s: invalid mode %x specified\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"regulator_mode_constrain\00", [39 x i8] zeroinitializer }, align 32
@regulator_mode_constrain._entry_ptr = internal global ptr @regulator_mode_constrain._entry, section ".printk_index", align 4
@regulator_mode_constrain._entry.158 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.159, ptr @.str.157, ptr @.str.3, i32 525, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013%s: mode operation not allowed\0A\00", [62 x i8] zeroinitializer }, align 32
@regulator_mode_constrain._entry_ptr.160 = internal global ptr @regulator_mode_constrain._entry.158, section ".printk_index", align 4
@trace_regulator_bypass_enable.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_regulator_bypass_enable_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_regulator_bypass_disable.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_regulator_bypass_disable_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.161 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"regulator_ww_class_acquire\00", [37 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"regulator_ww_class_mutex\00", [39 x i8] zeroinitializer }, align 32
@regulator_disable_work._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.163, ptr @.str.164, ptr @.str.3, i32 3017, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013%s: Deferred disable failed: %pe\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"regulator_disable_work\00", [41 x i8] zeroinitializer }, align 32
@regulator_disable_work._entry_ptr = internal global ptr @regulator_disable_work._entry, section ".printk_index", align 4
@regulator_ena_gpio_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @regulator_ena_gpio_list, ptr @regulator_ena_gpio_list }, [24 x i8] zeroinitializer }, align 32
@regulator_ena_gpio_request.__UNIQUE_ID_ddebug365 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.165, ptr @.str.3, ptr @.str.166, i8 2, i8 94, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.165 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"regulator_ena_gpio_request\00", [37 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: GPIO is already used\0A\00", [38 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.167, ptr @.str.168, ptr @.str.3, i32 1372, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\013%s: failed to set input limit: %pe\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"set_machine_constraints\00", [40 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr = internal global ptr @set_machine_constraints._entry, section ".printk_index", align 4
@set_machine_constraints._entry.169 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.170, ptr @.str.168, ptr @.str.3, i32 1381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013%s: failed to set suspend state: %pe\0A\00", [56 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.171 = internal global ptr @set_machine_constraints._entry.169, section ".printk_index", align 4
@set_machine_constraints._entry.172 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.173, ptr @.str.168, ptr @.str.3, i32 1388, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\013%s: no set_mode operation\0A\00", [35 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.174 = internal global ptr @set_machine_constraints._entry.172, section ".printk_index", align 4
@set_machine_constraints._entry.175 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.176, ptr @.str.168, ptr @.str.3, i32 1394, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\013%s: failed to set initial mode: %pe\0A\00", [57 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.177 = internal global ptr @set_machine_constraints._entry.175, section ".printk_index", align 4
@set_machine_constraints._entry.178 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.179, ptr @.str.168, ptr @.str.3, i32 1409, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013%s: failed to set ramp_delay: %pe\0A\00", [59 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.180 = internal global ptr @set_machine_constraints._entry.178, section ".printk_index", align 4
@set_machine_constraints._entry.181 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.182, ptr @.str.168, ptr @.str.3, i32 1417, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013%s: failed to set pull down: %pe\0A\00", [60 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.183 = internal global ptr @set_machine_constraints._entry.181, section ".printk_index", align 4
@set_machine_constraints._entry.184 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.185, ptr @.str.168, ptr @.str.3, i32 1425, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013%s: failed to set soft start: %pe\0A\00", [59 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.186 = internal global ptr @set_machine_constraints._entry.184, section ".printk_index", align 4
@set_machine_constraints._entry.187 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.188, ptr @.str.168, ptr @.str.3, i32 1453, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013%s: failed to set over current protection: %pe\0A\00", [46 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.189 = internal global ptr @set_machine_constraints._entry.187, section ".printk_index", align 4
@set_machine_constraints._entry.190 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.191, ptr @.str.168, ptr @.str.3, i32 1465, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013%s: failed to set over current limits: %pe\0A\00", [50 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.192 = internal global ptr @set_machine_constraints._entry.190, section ".printk_index", align 4
@set_machine_constraints._entry.193 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.194, ptr @.str.168, ptr @.str.3, i32 1469, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014%s: IC does not support requested over-current limits\0A\00", [39 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.195 = internal global ptr @set_machine_constraints._entry.193, section ".printk_index", align 4
@set_machine_constraints._entry.196 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.197, ptr @.str.168, ptr @.str.3, i32 1479, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013%s: failed to set over voltage limits %pe\0A\00", [51 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.198 = internal global ptr @set_machine_constraints._entry.196, section ".printk_index", align 4
@set_machine_constraints._entry.199 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.200, ptr @.str.168, ptr @.str.3, i32 1483, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014%s: IC does not support requested over voltage limits\0A\00", [39 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.201 = internal global ptr @set_machine_constraints._entry.199, section ".printk_index", align 4
@set_machine_constraints._entry.202 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.203, ptr @.str.168, ptr @.str.3, i32 1493, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013%s: failed to set under voltage limits %pe\0A\00", [50 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.204 = internal global ptr @set_machine_constraints._entry.202, section ".printk_index", align 4
@set_machine_constraints._entry.205 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.206, ptr @.str.168, ptr @.str.3, i32 1497, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\014%s: IC does not support requested under voltage limits\0A\00", [38 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.207 = internal global ptr @set_machine_constraints._entry.205, section ".printk_index", align 4
@set_machine_constraints._entry.208 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.209, ptr @.str.168, ptr @.str.3, i32 1507, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013%s: failed to set temperature limits %pe\0A\00", [52 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.210 = internal global ptr @set_machine_constraints._entry.208, section ".printk_index", align 4
@set_machine_constraints._entry.211 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.212, ptr @.str.168, ptr @.str.3, i32 1511, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\014%s: IC does not support requested temperature limits\0A\00", [40 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.213 = internal global ptr @set_machine_constraints._entry.211, section ".printk_index", align 4
@set_machine_constraints._entry.214 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.215, ptr @.str.168, ptr @.str.3, i32 1520, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013%s: failed to set active discharge: %pe\0A\00", [53 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.216 = internal global ptr @set_machine_constraints._entry.214, section ".printk_index", align 4
@set_machine_constraints._entry.217 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.218, ptr @.str.168, ptr @.str.3, i32 1546, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\013%s: failed to enable: %pe\0A\00", [35 x i8] zeroinitializer }, align 32
@set_machine_constraints._entry_ptr.219 = internal global ptr @set_machine_constraints._entry.217, section ".printk_index", align 4
@machine_constraints_voltage._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.221, ptr @.str.3, i32 1146, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\016%s: Setting %d-%duV\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"machine_constraints_voltage\00", [36 x i8] zeroinitializer }, align 32
@machine_constraints_voltage._entry_ptr = internal global ptr @machine_constraints_voltage._entry, section ".printk_index", align 4
@machine_constraints_voltage._entry.222 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.223, ptr @.str.221, ptr @.str.3, i32 1157, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013%s: failed to get the current voltage: %pe\0A\00", [50 x i8] zeroinitializer }, align 32
@machine_constraints_voltage._entry_ptr.224 = internal global ptr @machine_constraints_voltage._entry.222, section ".printk_index", align 4
@machine_constraints_voltage._entry.225 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.221, ptr @.str.3, i32 1181, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016%s: Bringing %duV into %d-%duV\0A\00", [62 x i8] zeroinitializer }, align 32
@machine_constraints_voltage._entry_ptr.227 = internal global ptr @machine_constraints_voltage._entry.225, section ".printk_index", align 4
@machine_constraints_voltage._entry.228 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.221, ptr @.str.3, i32 1187, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\013%s: failed to apply %d-%duV constraint: %pe\0A\00", [49 x i8] zeroinitializer }, align 32
@machine_constraints_voltage._entry_ptr.230 = internal global ptr @machine_constraints_voltage._entry.228, section ".printk_index", align 4
@machine_constraints_voltage._entry.231 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.232, ptr @.str.221, ptr @.str.3, i32 1220, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013%s: invalid voltage constraints\0A\00", [61 x i8] zeroinitializer }, align 32
@machine_constraints_voltage._entry_ptr.233 = internal global ptr @machine_constraints_voltage._entry.231, section ".printk_index", align 4
@machine_constraints_voltage._entry.234 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.235, ptr @.str.221, ptr @.str.3, i32 1247, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013%s: unsupportable voltage constraints %u-%uuV\0A\00", [47 x i8] zeroinitializer }, align 32
@machine_constraints_voltage._entry_ptr.236 = internal global ptr @machine_constraints_voltage._entry.234, section ".printk_index", align 4
@machine_constraints_voltage.__UNIQUE_ID_ddebug358 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.221, ptr @.str.3, ptr @.str.237, i8 1, i8 57, i8 -128, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.237 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s: override min_uV, %d -> %d\0A\00", [33 x i8] zeroinitializer }, align 32
@machine_constraints_voltage.__UNIQUE_ID_ddebug359 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.221, ptr @.str.3, ptr @.str.238, i8 1, i8 58, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.238 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s: override max_uV, %d -> %d\0A\00", [33 x i8] zeroinitializer }, align 32
@machine_constraints_current._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.240, ptr @.str.3, i32 1277, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013%s: Invalid current constraints\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"machine_constraints_current\00", [36 x i8] zeroinitializer }, align 32
@machine_constraints_current._entry_ptr = internal global ptr @machine_constraints_current._entry, section ".printk_index", align 4
@machine_constraints_current._entry.241 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.240, ptr @.str.3, i32 1282, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\014%s: Operation of current configuration missing\0A\00", [46 x i8] zeroinitializer }, align 32
@machine_constraints_current._entry_ptr.243 = internal global ptr @machine_constraints_current._entry.241, section ".printk_index", align 4
@machine_constraints_current._entry.244 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.245, ptr @.str.240, ptr @.str.3, i32 1290, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013%s: Failed to set current constraint, %d\0A\00", [52 x i8] zeroinitializer }, align 32
@machine_constraints_current._entry_ptr.246 = internal global ptr @machine_constraints_current._entry.244, section ".printk_index", align 4
@regulator_get_suspend_state_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.247, ptr @.str.248, ptr @.str.3, i32 577, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\014%s: No configuration\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"regulator_get_suspend_state_check\00", [62 x i8] zeroinitializer }, align 32
@regulator_get_suspend_state_check._entry_ptr = internal global ptr @regulator_get_suspend_state_check._entry, section ".printk_index", align 4
@__suspend_set_state._entry = internal constant %struct.pi_entry { ptr @.str.249, ptr @.str.250, ptr @.str.3, i32 1009, ptr null, ptr null }, align 1
@.str.249 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\013%s: failed to enabled/disable: %pe\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__suspend_set_state\00", [44 x i8] zeroinitializer }, align 32
@__suspend_set_state._entry_ptr = internal global ptr @__suspend_set_state._entry, section ".printk_index", align 4
@__suspend_set_state._entry.251 = internal constant %struct.pi_entry { ptr @.str.252, ptr @.str.250, ptr @.str.3, i32 1016, ptr null, ptr null }, align 1
@.str.252 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013%s: failed to set voltage: %pe\0A\00", [62 x i8] zeroinitializer }, align 32
@__suspend_set_state._entry_ptr.253 = internal global ptr @__suspend_set_state._entry.251, section ".printk_index", align 4
@__suspend_set_state._entry.254 = internal constant %struct.pi_entry { ptr @.str.255, ptr @.str.250, ptr @.str.3, i32 1024, ptr null, ptr null }, align 1
@.str.255 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\013%s: failed to set mode: %pe\0A\00", [33 x i8] zeroinitializer }, align 32
@__suspend_set_state._entry_ptr.256 = internal global ptr @__suspend_set_state._entry.254, section ".printk_index", align 4
@print_constraints._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.257, ptr @.str.258, ptr @.str.3, i32 1127, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\014%s: Voltage range but no REGULATOR_CHANGE_VOLTAGE\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"print_constraints\00", [46 x i8] zeroinitializer }, align 32
@print_constraints._entry_ptr = internal global ptr @print_constraints._entry, section ".printk_index", align 4
@.str.259 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%d mV \00", [25 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%d <--> %d mV \00", [17 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"at %d mV \00", [22 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"%dmV offset \00", [19 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%d mA \00", [25 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%d <--> %d mA \00", [17 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"at %d mA \00", [22 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"fast \00", [26 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"normal \00", [24 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"idle \00", [26 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"standby \00", [23 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"no parameters\00", [18 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c", %s\00", [27 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"enabled\00", [24 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"disabled\00", [23 x i8] zeroinitializer }, align 32
@print_constraints_debug.__UNIQUE_ID_ddebug357 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.274, ptr @.str.3, ptr @.str.275, i8 1, i8 22, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.274 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"print_constraints_debug\00", [40 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s: %s\0A\00", [24 x i8] zeroinitializer }, align 32
@regulator_init_coupling._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.276, ptr @.str.277, ptr @.str.3, i32 5280, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013%s: failed to get coupler: %pe\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"regulator_init_coupling\00", [40 x i8] zeroinitializer }, align 32
@regulator_init_coupling._entry_ptr = internal global ptr @regulator_init_coupling._entry, section ".printk_index", align 4
@regulator_find_coupler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.278, ptr @.str.279, ptr @.str.3, i32 5158, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013%s: Voltage balancing for multiple regulator couples is unimplemented\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"regulator_find_coupler\00", [41 x i8] zeroinitializer }, align 32
@regulator_find_coupler._entry_ptr = internal global ptr @regulator_find_coupler._entry, section ".printk_index", align 4
@set_consumer_device_supply.__UNIQUE_ID_ddebug361 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.280, ptr @.str.3, ptr @.str.281, i8 1, i8 -101, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.280 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"set_consumer_device_supply\00", [37 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s: %s/%s is '%s' supply; fail %s/%s\0A\00", [58 x i8] zeroinitializer }, align 32
@debugfs_root = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@rdev_init_debugfs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.282, ptr @.str.283, ptr @.str.3, i32 5090, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014%s: Failed to create debugfs directory\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rdev_init_debugfs\00", [46 x i8] zeroinitializer }, align 32
@rdev_init_debugfs._entry_ptr = internal global ptr @rdev_init_debugfs._entry, section ".printk_index", align 4
@.str.284 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"use_count\00", [22 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"open_count\00", [21 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"bypass_count\00", [19 x i8] zeroinitializer }, align 32
@regulator_resolve_coupling._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.287, ptr @.str.288, ptr @.str.3, i32 5183, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013%s: coupler mismatch with %s\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"regulator_resolve_coupling\00", [37 x i8] zeroinitializer }, align 32
@regulator_resolve_coupling._entry_ptr = internal global ptr @regulator_resolve_coupling._entry, section ".printk_index", align 4
@regulator_register_resolve_supply.__UNIQUE_ID_ddebug384 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.39, ptr @.str.289, ptr @.str.3, ptr @.str.290, i8 4, i8 -4, i8 -64, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.289 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"regulator_register_resolve_supply\00", [62 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s: unable to resolve supply\0A\00", [34 x i8] zeroinitializer }, align 32
@regulator_remove_coupling._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.291, ptr @.str.292, ptr @.str.3, i32 5236, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013%s: failed to detach from coupler: %pe\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"regulator_remove_coupling\00", [38 x i8] zeroinitializer }, align 32
@regulator_remove_coupling._entry_ptr = internal global ptr @regulator_remove_coupling._entry, section ".printk_index", align 4
@regulator_dev_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr @regulator_attr_is_visible, ptr null, ptr @regulator_dev_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@regulator_dev_attrs = internal global { [24 x ptr], [32 x i8] } { [24 x ptr] [ptr @dev_attr_name, ptr @dev_attr_num_users, ptr @dev_attr_type, ptr @dev_attr_microvolts, ptr @dev_attr_microamps, ptr @dev_attr_opmode, ptr @dev_attr_state, ptr @dev_attr_status, ptr @dev_attr_bypass, ptr @dev_attr_requested_microamps, ptr @dev_attr_min_microvolts, ptr @dev_attr_max_microvolts, ptr @dev_attr_min_microamps, ptr @dev_attr_max_microamps, ptr @dev_attr_suspend_standby_state, ptr @dev_attr_suspend_mem_state, ptr @dev_attr_suspend_disk_state, ptr @dev_attr_suspend_standby_microvolts, ptr @dev_attr_suspend_mem_microvolts, ptr @dev_attr_suspend_disk_microvolts, ptr @dev_attr_suspend_standby_mode, ptr @dev_attr_suspend_mem_mode, ptr @dev_attr_suspend_disk_mode, ptr null], [32 x i8] zeroinitializer }, align 32
@dev_attr_name = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.66, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @name_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_num_users = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.294, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @num_users_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_type = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.296, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @type_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_microvolts = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.300, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @microvolts_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_microamps = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.301, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @microamps_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_opmode = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.302, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @opmode_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_state = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.308, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @state_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_status = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.311, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @status_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_bypass = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.315, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @bypass_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_min_microvolts = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.317, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @min_microvolts_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_max_microvolts = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.319, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @max_microvolts_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_min_microamps = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.320, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @min_microamps_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_max_microamps = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.321, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @max_microamps_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_standby_state = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.322, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_standby_state_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_mem_state = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.323, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_mem_state_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_disk_state = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.324, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_disk_state_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_standby_microvolts = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.325, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_standby_microvolts_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_mem_microvolts = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.326, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_mem_microvolts_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_disk_microvolts = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.327, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_disk_microvolts_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_standby_mode = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.328, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_standby_mode_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_mem_mode = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.329, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_mem_mode_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_suspend_disk_mode = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.330, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @suspend_disk_mode_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"num_users\00", [22 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%d\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"type\00", [27 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"voltage\0A\00", [23 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"current\0A\00", [23 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"unknown\0A\00", [23 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"microvolts\00", [21 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"microamps\00", [22 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"opmode\00", [25 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"fast\00", [27 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"normal\00", [25 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"idle\00", [27 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"standby\00", [24 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unknown\00", [24 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"state\00", [26 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"enabled\0A\00", [23 x i8] zeroinitializer }, align 32
@.str.310 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"disabled\0A\00", [22 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"status\00", [25 x i8] zeroinitializer }, align 32
@.str.312 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"off\00", [28 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"on\00", [29 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"bypass\00", [25 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"undefined\00", [22 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"min_microvolts\00", [17 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"constraint not defined\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"max_microvolts\00", [17 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"min_microamps\00", [18 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"max_microamps\00", [18 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"suspend_standby_state\00", [42 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"suspend_mem_state\00", [46 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"suspend_disk_state\00", [45 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"suspend_standby_microvolts\00", [37 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"suspend_mem_microvolts\00", [41 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"suspend_disk_microvolts\00", [40 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"suspend_standby_mode\00", [43 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"suspend_mem_mode\00", [47 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"suspend_disk_mode\00", [46 x i8] zeroinitializer }, align 32
@dev_attr_requested_microamps = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.331, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @requested_microamps_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"requested_microamps\00", [44 x i8] zeroinitializer }, align 32
@pm_suspend_target_state = external dso_local local_unnamed_addr global i32, align 4
@regulator_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@regulator_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.332, ptr @.str.333, ptr @.str.3, i32 5995, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\014regulator: Failed to create debugfs directory\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"regulator_init\00", [17 x i8] zeroinitializer }, align 32
@regulator_init._entry_ptr = internal global ptr @regulator_init._entry, section ".printk_index", align 4
@.str.334 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"supply_map\00", [21 x i8] zeroinitializer }, align 32
@supply_map_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @supply_map_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"regulator_summary\00", [46 x i8] zeroinitializer }, align 32
@regulator_summary_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @seq_lseek, ptr @seq_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @regulator_summary_open, ptr null, ptr @single_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@generic_regulator_coupler = internal global { %struct.regulator_coupler, [44 x i8] } { %struct.regulator_coupler { %struct.list_head zeroinitializer, ptr @generic_coupler_attach, ptr null, ptr null }, [44 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"%s -> %s.%s\0A\00", [19 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [89 x i8], [39 x i8] } { [89 x i8] c" regulator                      use open bypass  opmode voltage current     min     max\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [89 x i8], [39 x i8] } { [89 x i8] c"---------------------------------------------------------------------------------------\0A\00", [39 x i8] zeroinitializer }, align 32
@regulator_summary_lock_one.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.339 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%*s%-*s %3d %4d %6d %7s \00", [39 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%5dmV \00", [25 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%5dmA \00", [25 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"%5dmV %5dmV \00", [19 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"%5dmA %5dmA \00", [19 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"%*s%-*s \00", [23 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"deviceless\00", [21 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%3d %33dmA%c%5dmV %5dmV\00", [40 x i8] zeroinitializer }, align 32
@generic_coupler_attach._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.278, ptr @.str.348, ptr @.str.3, i32 5292, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"generic_coupler_attach\00", [41 x i8] zeroinitializer }, align 32
@generic_coupler_attach._entry_ptr = internal global ptr @generic_coupler_attach._entry, section ".printk_index", align 4
@generic_coupler_attach._entry.349 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.350, ptr @.str.348, ptr @.str.3, i32 5298, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013%s: Coupling of a non always-on regulator is unimplemented\0A\00", [34 x i8] zeroinitializer }, align 32
@generic_coupler_attach._entry_ptr.351 = internal global ptr @generic_coupler_attach._entry.349, section ".printk_index", align 4
@regulator_init_complete_work = internal global { %struct.delayed_work, [60 x i8] } { %struct.delayed_work { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @regulator_init_complete_work, i64 4), ptr getelementptr (i8, ptr @regulator_init_complete_work, i64 4) }, ptr @regulator_init_complete_work_function, %struct.lockdep_map { ptr @regulator_init_complete_work, [2 x ptr] zeroinitializer, ptr @.str.352, i8 0, i8 0, i8 0, i32 0, i32 0 } }, %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @delayed_work_timer_fn, i32 2097152, %struct.lockdep_map { ptr @.str.353, [2 x ptr] zeroinitializer, ptr @.str.353, i8 0, i8 0, i8 0, i32 0, i32 0 } }, ptr null, i32 0 }, [60 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.352 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"(regulator_init_complete_work).work\00", [60 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"drivers/regulator/core.c:6080\00", [34 x i8] zeroinitializer }, align 32
@regulator_late_cleanup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.354, ptr @.str.355, ptr @.str.3, i32 6039, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"\016%s: disabling\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"regulator_late_cleanup\00", [41 x i8] zeroinitializer }, align 32
@regulator_late_cleanup._entry_ptr = internal global ptr @regulator_late_cleanup._entry, section ".printk_index", align 4
@regulator_late_cleanup._entry.356 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.357, ptr @.str.355, ptr @.str.3, i32 6042, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\013%s: couldn't disable: %pe\0A\00", [35 x i8] zeroinitializer }, align 32
@regulator_late_cleanup._entry_ptr.358 = internal global ptr @regulator_late_cleanup._entry.356, section ".printk_index", align 4
@regulator_late_cleanup._entry.359 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.360, ptr @.str.355, ptr @.str.3, i32 6049, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.360 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014%s: incomplete constraints, leaving on\0A\00", [54 x i8] zeroinitializer }, align 32
@regulator_late_cleanup._entry_ptr.361 = internal global ptr @regulator_late_cleanup._entry.359, section ".printk_index", align 4
@switch.table.regulator_mode_to_status = internal constant { [8 x i32], [32 x i8] } { [8 x i32] [i32 3, i32 4, i32 8, i32 5, i32 8, i32 8, i32 8, i32 6], [32 x i8] zeroinitializer }, align 32
@switch.table.opmode_show = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.303, ptr @.str.304, ptr @.str.307, ptr @.str.305, ptr @.str.307, ptr @.str.307, ptr @.str.307, ptr @.str.306], [32 x i8] zeroinitializer }, align 32
@switch.table.status_show = internal constant { [9 x ptr], [60 x i8] } { [9 x ptr] [ptr @.str.312, ptr @.str.313, ptr @.str.314, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.315, ptr @.str.316], [60 x i8] zeroinitializer }, align 32
@switch.table.suspend_standby_mode_show = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.303, ptr @.str.304, ptr @.str.307, ptr @.str.305, ptr @.str.307, ptr @.str.307, ptr @.str.307, ptr @.str.306], [32 x i8] zeroinitializer }, align 32
@switch.table.suspend_mem_mode_show = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.303, ptr @.str.304, ptr @.str.307, ptr @.str.305, ptr @.str.307, ptr @.str.307, ptr @.str.307, ptr @.str.306], [32 x i8] zeroinitializer }, align 32
@switch.table.suspend_disk_mode_show = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.303, ptr @.str.304, ptr @.str.307, ptr @.str.305, ptr @.str.307, ptr @.str.307, ptr @.str.307, ptr @.str.306], [32 x i8] zeroinitializer }, align 32
@switch.table.regulator_summary_show_subtree = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.303, ptr @.str.304, ptr @.str.307, ptr @.str.305, ptr @.str.307, ptr @.str.307, ptr @.str.307, ptr @.str.306], [32 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.362 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967274]
@__sancov_gen_cov_switch_values.363 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.364 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.365 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.366 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.367 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.368 = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 2, i64 4, i64 8]
@__sancov_gen_cov_switch_values.369 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.370 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.371 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.372 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.373 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.374 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967182]
@__sancov_gen_cov_switch_values.375 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 2, i64 8]
@__sancov_gen_cov_switch_values.376 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.377 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.378 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.379 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.380 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@___asan_gen_.381 = private unnamed_addr constant [34 x i8] c"str__regulator__trace_system_name\00", align 1
@___asan_gen_.382 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.382, i32 36, i32 1 }
@___asan_gen_.384 = private unnamed_addr constant [35 x i8] c"trace_event_fields_regulator_basic\00", align 1
@___asan_gen_.387 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_regulator_basic\00", align 1
@___asan_gen_.390 = private unnamed_addr constant [26 x i8] c"print_fmt_regulator_basic\00", align 1
@___asan_gen_.393 = private unnamed_addr constant [23 x i8] c"event_regulator_enable\00", align 1
@___asan_gen_.396 = private unnamed_addr constant [29 x i8] c"event_regulator_enable_delay\00", align 1
@___asan_gen_.398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 41, i32 1 }
@___asan_gen_.399 = private unnamed_addr constant [32 x i8] c"event_regulator_enable_complete\00", align 1
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 49, i32 1 }
@___asan_gen_.402 = private unnamed_addr constant [24 x i8] c"event_regulator_disable\00", align 1
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 57, i32 1 }
@___asan_gen_.405 = private unnamed_addr constant [33 x i8] c"event_regulator_disable_complete\00", align 1
@___asan_gen_.407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 65, i32 1 }
@___asan_gen_.408 = private unnamed_addr constant [30 x i8] c"event_regulator_bypass_enable\00", align 1
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 73, i32 1 }
@___asan_gen_.411 = private unnamed_addr constant [39 x i8] c"event_regulator_bypass_enable_complete\00", align 1
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 81, i32 1 }
@___asan_gen_.414 = private unnamed_addr constant [31 x i8] c"event_regulator_bypass_disable\00", align 1
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 89, i32 1 }
@___asan_gen_.417 = private unnamed_addr constant [40 x i8] c"event_regulator_bypass_disable_complete\00", align 1
@___asan_gen_.419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 97, i32 1 }
@___asan_gen_.420 = private unnamed_addr constant [35 x i8] c"trace_event_fields_regulator_range\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_regulator_range\00", align 1
@___asan_gen_.426 = private unnamed_addr constant [26 x i8] c"print_fmt_regulator_range\00", align 1
@___asan_gen_.429 = private unnamed_addr constant [28 x i8] c"event_regulator_set_voltage\00", align 1
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 131, i32 1 }
@___asan_gen_.432 = private unnamed_addr constant [35 x i8] c"trace_event_fields_regulator_value\00", align 1
@___asan_gen_.435 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_regulator_value\00", align 1
@___asan_gen_.438 = private unnamed_addr constant [26 x i8] c"print_fmt_regulator_value\00", align 1
@___asan_gen_.441 = private unnamed_addr constant [37 x i8] c"event_regulator_set_voltage_complete\00", align 1
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 163, i32 1 }
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 107, i32 10 }
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 426, i32 3 }
@___asan_gen_.464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 436, i32 3 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 476, i32 3 }
@___asan_gen_.488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2040, i32 3 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2045, i32 3 }
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2061, i32 4 }
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2073, i32 4 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2079, i32 4 }
@___asan_gen_.516 = private unnamed_addr constant [21 x i8] c"regulator_list_mutex\00", align 1
@___asan_gen_.519 = private unnamed_addr constant [28 x i8] c"regulator_supply_alias_list\00", align 1
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 41, i32 8 }
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2316, i32 2 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2379, i32 2 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 3698, i32 4 }
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 3716, i32 4 }
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 4305, i32 5 }
@___asan_gen_.572 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 4755, i32 3 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 4758, i32 3 }
@___asan_gen_.587 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 4814, i32 4 }
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 4851, i32 2 }
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 4855, i32 4 }
@___asan_gen_.603 = private unnamed_addr constant [23 x i8] c"regulator_coupler_list\00", align 1
@___asan_gen_.605 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 42, i32 8 }
@___asan_gen_.606 = private unnamed_addr constant [13 x i8] c"regulator_no\00", align 1
@___asan_gen_.608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5324, i32 18 }
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5378, i32 2 }
@___asan_gen_.615 = private unnamed_addr constant [19 x i8] c"regulator_ww_class\00", align 1
@___asan_gen_.623 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5430, i32 2 }
@___asan_gen_.635 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5431, i32 2 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5443, i32 4 }
@___asan_gen_.645 = private unnamed_addr constant [16 x i8] c"regulator_class\00", align 1
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5657, i32 14 }
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5455, i32 27 }
@___asan_gen_.653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5486, i32 3 }
@___asan_gen_.656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5492, i32 4 }
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5509, i32 5 }
@___asan_gen_.665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5658, i32 10 }
@___asan_gen_.666 = private unnamed_addr constant [21 x i8] c"regulator_dev_groups\00", align 1
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5061, i32 38 }
@___asan_gen_.669 = private unnamed_addr constant [17 x i8] c"regulator_pm_ops\00", align 1
@___asan_gen_.671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5651, i32 47 }
@___asan_gen_.672 = private unnamed_addr constant [21 x i8] c"has_full_constraints\00", align 1
@___asan_gen_.684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 15, i32 1 }
@___asan_gen_.696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 109, i32 1 }
@___asan_gen_.705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 143, i32 1 }
@___asan_gen_.714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 119, i32 3 }
@___asan_gen_.715 = private unnamed_addr constant [19 x i8] c"regulator_map_list\00", align 1
@___asan_gen_.717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 39, i32 8 }
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1833, i32 3 }
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 402, i32 2 }
@___asan_gen_.732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 404, i32 26 }
@___asan_gen_.735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 412, i32 3 }
@___asan_gen_.741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 38, i32 8 }
@___asan_gen_.750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1950, i32 4 }
@___asan_gen_.756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1958, i32 3 }
@___asan_gen_.762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1574, i32 2 }
@___asan_gen_.765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1579, i32 59 }
@___asan_gen_.768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1738, i32 38 }
@___asan_gen_.774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1772, i32 4 }
@___asan_gen_.777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1781, i32 3 }
@___asan_gen_.780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1783, i32 22 }
@___asan_gen_.783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1785, i32 22 }
@___asan_gen_.786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1787, i32 22 }
@___asan_gen_.789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1789, i32 23 }
@___asan_gen_.790 = private unnamed_addr constant [22 x i8] c"constraint_flags_fops\00", align 1
@___asan_gen_.792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1717, i32 37 }
@___asan_gen_.795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1694, i32 4 }
@___asan_gen_.804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.869, i32 297, i32 2 }
@___asan_gen_.805 = private unnamed_addr constant [24 x i8] c"regulator_nesting_mutex\00", align 1
@___asan_gen_.813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 37, i32 8 }
@___asan_gen_.816 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.869, i32 173, i32 2 }
@___asan_gen_.825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2771, i32 4 }
@___asan_gen_.834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2592, i32 3 }
@___asan_gen_.840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2655, i32 4 }
@___asan_gen_.845 = private unnamed_addr constant [36 x i8] c"../include/trace/events/regulator.h\00", align 1
@___asan_gen_.846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.845, i32 33, i32 1 }
@___asan_gen_.848 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.848, i32 108, i32 2 }
@___asan_gen_.858 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2569, i32 3 }
@___asan_gen_.867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2715, i32 3 }
@___asan_gen_.869 = private unnamed_addr constant [28 x i8] c"../include/linux/ww_mutex.h\00", align 1
@___asan_gen_.870 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.869, i32 191, i32 2 }
@___asan_gen_.873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2852, i32 6 }
@___asan_gen_.882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2870, i32 5 }
@___asan_gen_.891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2937, i32 3 }
@___asan_gen_.897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 928, i32 3 }
@___asan_gen_.903 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 952, i32 4 }
@___asan_gen_.909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 958, i32 4 }
@___asan_gen_.915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 969, i32 4 }
@___asan_gen_.921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 980, i32 4 }
@___asan_gen_.927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 987, i32 4 }
@___asan_gen_.936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 3546, i32 3 }
@___asan_gen_.945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 3998, i32 3 }
@___asan_gen_.954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 4099, i32 3 }
@___asan_gen_.960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 3454, i32 3 }
@___asan_gen_.969 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 491, i32 3 }
@___asan_gen_.975 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 501, i32 3 }
@___asan_gen_.984 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 520, i32 3 }
@___asan_gen_.990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 525, i32 3 }
@___asan_gen_.996 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 36, i32 8 }
@___asan_gen_.1005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 3016, i32 5 }
@___asan_gen_.1006 = private unnamed_addr constant [24 x i8] c"regulator_ena_gpio_list\00", align 1
@___asan_gen_.1008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 40, i32 8 }
@___asan_gen_.1014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 2426, i32 4 }
@___asan_gen_.1023 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1372, i32 4 }
@___asan_gen_.1029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1381, i32 4 }
@___asan_gen_.1035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1388, i32 4 }
@___asan_gen_.1041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1394, i32 4 }
@___asan_gen_.1047 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1409, i32 4 }
@___asan_gen_.1053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1417, i32 4 }
@___asan_gen_.1059 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1425, i32 4 }
@___asan_gen_.1065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1452, i32 4 }
@___asan_gen_.1071 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1464, i32 4 }
@___asan_gen_.1077 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1468, i32 3 }
@___asan_gen_.1083 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1478, i32 4 }
@___asan_gen_.1089 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1482, i32 3 }
@___asan_gen_.1095 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1492, i32 4 }
@___asan_gen_.1101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1496, i32 3 }
@___asan_gen_.1107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1506, i32 4 }
@___asan_gen_.1113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1510, i32 3 }
@___asan_gen_.1119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1520, i32 4 }
@___asan_gen_.1125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1546, i32 4 }
@___asan_gen_.1134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1144, i32 4 }
@___asan_gen_.1140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1155, i32 5 }
@___asan_gen_.1146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1180, i32 4 }
@___asan_gen_.1152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1185, i32 5 }
@___asan_gen_.1158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1220, i32 4 }
@___asan_gen_.1164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1245, i32 4 }
@___asan_gen_.1167 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1253, i32 4 }
@___asan_gen_.1170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1258, i32 4 }
@___asan_gen_.1179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1277, i32 3 }
@___asan_gen_.1185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1282, i32 3 }
@___asan_gen_.1191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1290, i32 3 }
@___asan_gen_.1200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 577, i32 4 }
@___asan_gen_.1206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1009, i32 3 }
@___asan_gen_.1209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1016, i32 4 }
@___asan_gen_.1212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1024, i32 4 }
@___asan_gen_.1221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1126, i32 3 }
@___asan_gen_.1224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1055, i32 49 }
@___asan_gen_.1227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1059, i32 9 }
@___asan_gen_.1230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1069, i32 9 }
@___asan_gen_.1233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1073, i32 48 }
@___asan_gen_.1236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1078, i32 49 }
@___asan_gen_.1239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1082, i32 9 }
@___asan_gen_.1242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1092, i32 9 }
@___asan_gen_.1245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1096, i32 48 }
@___asan_gen_.1248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1098, i32 48 }
@___asan_gen_.1251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1100, i32 48 }
@___asan_gen_.1254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1102, i32 48 }
@___asan_gen_.1257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1105, i32 31 }
@___asan_gen_.1260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1109, i32 47 }
@___asan_gen_.1263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1110, i32 33 }
@___asan_gen_.1266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1110, i32 45 }
@___asan_gen_.1272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1112, i32 2 }
@___asan_gen_.1281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5280, i32 3 }
@___asan_gen_.1290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5157, i32 2 }
@___asan_gen_.1296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 1642, i32 3 }
@___asan_gen_.1297 = private unnamed_addr constant [13 x i8] c"debugfs_root\00", align 1
@___asan_gen_.1299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 45, i32 23 }
@___asan_gen_.1308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5090, i32 3 }
@___asan_gen_.1311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5094, i32 21 }
@___asan_gen_.1314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5096, i32 21 }
@___asan_gen_.1317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5098, i32 21 }
@___asan_gen_.1326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5182, i32 4 }
@___asan_gen_.1332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5107, i32 3 }
@___asan_gen_.1341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5235, i32 4 }
@___asan_gen_.1342 = private unnamed_addr constant [20 x i8] c"regulator_dev_group\00", align 1
@___asan_gen_.1344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5056, i32 37 }
@___asan_gen_.1345 = private unnamed_addr constant [20 x i8] c"regulator_dev_attrs\00", align 1
@___asan_gen_.1347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 4959, i32 26 }
@___asan_gen_.1348 = private unnamed_addr constant [14 x i8] c"dev_attr_name\00", align 1
@___asan_gen_.1350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 616, i32 8 }
@___asan_gen_.1351 = private unnamed_addr constant [19 x i8] c"dev_attr_num_users\00", align 1
@___asan_gen_.1354 = private unnamed_addr constant [14 x i8] c"dev_attr_type\00", align 1
@___asan_gen_.1357 = private unnamed_addr constant [20 x i8] c"dev_attr_microvolts\00", align 1
@___asan_gen_.1360 = private unnamed_addr constant [19 x i8] c"dev_attr_microamps\00", align 1
@___asan_gen_.1363 = private unnamed_addr constant [16 x i8] c"dev_attr_opmode\00", align 1
@___asan_gen_.1366 = private unnamed_addr constant [15 x i8] c"dev_attr_state\00", align 1
@___asan_gen_.1369 = private unnamed_addr constant [16 x i8] c"dev_attr_status\00", align 1
@___asan_gen_.1372 = private unnamed_addr constant [16 x i8] c"dev_attr_bypass\00", align 1
@___asan_gen_.1374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 912, i32 8 }
@___asan_gen_.1375 = private unnamed_addr constant [24 x i8] c"dev_attr_min_microvolts\00", align 1
@___asan_gen_.1378 = private unnamed_addr constant [24 x i8] c"dev_attr_max_microvolts\00", align 1
@___asan_gen_.1381 = private unnamed_addr constant [23 x i8] c"dev_attr_min_microamps\00", align 1
@___asan_gen_.1384 = private unnamed_addr constant [23 x i8] c"dev_attr_max_microamps\00", align 1
@___asan_gen_.1387 = private unnamed_addr constant [31 x i8] c"dev_attr_suspend_standby_state\00", align 1
@___asan_gen_.1390 = private unnamed_addr constant [27 x i8] c"dev_attr_suspend_mem_state\00", align 1
@___asan_gen_.1393 = private unnamed_addr constant [28 x i8] c"dev_attr_suspend_disk_state\00", align 1
@___asan_gen_.1396 = private unnamed_addr constant [36 x i8] c"dev_attr_suspend_standby_microvolts\00", align 1
@___asan_gen_.1399 = private unnamed_addr constant [32 x i8] c"dev_attr_suspend_mem_microvolts\00", align 1
@___asan_gen_.1402 = private unnamed_addr constant [33 x i8] c"dev_attr_suspend_disk_microvolts\00", align 1
@___asan_gen_.1405 = private unnamed_addr constant [30 x i8] c"dev_attr_suspend_standby_mode\00", align 1
@___asan_gen_.1408 = private unnamed_addr constant [26 x i8] c"dev_attr_suspend_mem_mode\00", align 1
@___asan_gen_.1411 = private unnamed_addr constant [27 x i8] c"dev_attr_suspend_disk_mode\00", align 1
@___asan_gen_.1416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 614, i32 22 }
@___asan_gen_.1419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 789, i32 8 }
@___asan_gen_.1422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 787, i32 22 }
@___asan_gen_.1425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 804, i32 8 }
@___asan_gen_.1428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 798, i32 23 }
@___asan_gen_.1431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 800, i32 23 }
@___asan_gen_.1434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 802, i32 22 }
@___asan_gen_.1437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 598, i32 8 }
@___asan_gen_.1440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 607, i32 8 }
@___asan_gen_.1443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 645, i32 8 }
@___asan_gen_.1446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 622, i32 10 }
@___asan_gen_.1449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 624, i32 10 }
@___asan_gen_.1452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 626, i32 10 }
@___asan_gen_.1455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 628, i32 10 }
@___asan_gen_.1458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 630, i32 9 }
@___asan_gen_.1461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 669, i32 8 }
@___asan_gen_.1464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 650, i32 23 }
@___asan_gen_.1467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 652, i32 23 }
@___asan_gen_.1470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 716, i32 8 }
@___asan_gen_.1473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 684, i32 11 }
@___asan_gen_.1476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 687, i32 11 }
@___asan_gen_.1479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 690, i32 11 }
@___asan_gen_.1482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 705, i32 11 }
@___asan_gen_.1485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 708, i32 11 }
@___asan_gen_.1488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 752, i32 8 }
@___asan_gen_.1491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 748, i32 23 }
@___asan_gen_.1494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 764, i32 8 }
@___asan_gen_.1497 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 728, i32 8 }
@___asan_gen_.1500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 740, i32 8 }
@___asan_gen_.1503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 891, i32 8 }
@___asan_gen_.1506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 871, i32 8 }
@___asan_gen_.1509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 881, i32 8 }
@___asan_gen_.1512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 831, i32 8 }
@___asan_gen_.1515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 813, i32 8 }
@___asan_gen_.1518 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 822, i32 8 }
@___asan_gen_.1521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 861, i32 8 }
@___asan_gen_.1524 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 841, i32 8 }
@___asan_gen_.1527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 851, i32 8 }
@___asan_gen_.1528 = private unnamed_addr constant [29 x i8] c"dev_attr_requested_microamps\00", align 1
@___asan_gen_.1533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 781, i32 8 }
@___asan_gen_.1534 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5991, i32 8 }
@___asan_gen_.1545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5995, i32 3 }
@___asan_gen_.1548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5998, i32 22 }
@___asan_gen_.1549 = private unnamed_addr constant [16 x i8] c"supply_map_fops\00", align 1
@___asan_gen_.1551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5760, i32 1 }
@___asan_gen_.1554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 6001, i32 22 }
@___asan_gen_.1555 = private unnamed_addr constant [23 x i8] c"regulator_summary_fops\00", align 1
@___asan_gen_.1557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5984, i32 1 }
@___asan_gen_.1558 = private unnamed_addr constant [26 x i8] c"generic_regulator_coupler\00", align 1
@___asan_gen_.1560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5305, i32 33 }
@___asan_gen_.1563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5753, i32 18 }
@___asan_gen_.1566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5972, i32 14 }
@___asan_gen_.1569 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5973, i32 14 }
@___asan_gen_.1572 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5797, i32 16 }
@___asan_gen_.1575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5803, i32 16 }
@___asan_gen_.1578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5804, i32 16 }
@___asan_gen_.1581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5811, i32 18 }
@___asan_gen_.1584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5815, i32 18 }
@___asan_gen_.1587 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5821, i32 14 }
@___asan_gen_.1590 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5827, i32 17 }
@___asan_gen_.1593 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5831, i32 49 }
@___asan_gen_.1596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5835, i32 18 }
@___asan_gen_.1602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5291, i32 3 }
@___asan_gen_.1608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 5297, i32 3 }
@___asan_gen_.1609 = private unnamed_addr constant [29 x i8] c"regulator_init_complete_work\00", align 1
@___asan_gen_.1617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 6079, i32 8 }
@___asan_gen_.1626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 6039, i32 3 }
@___asan_gen_.1632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 6042, i32 4 }
@___asan_gen_.1633 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1636 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1637 = private constant [28 x i8] c"../drivers/regulator/core.c\00", align 1
@___asan_gen_.1638 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1637, i32 6049, i32 3 }
@___asan_gen_.1639 = private unnamed_addr constant [38 x i8] c"switch.table.regulator_mode_to_status\00", align 1
@___asan_gen_.1640 = private unnamed_addr constant [25 x i8] c"switch.table.opmode_show\00", align 1
@___asan_gen_.1641 = private unnamed_addr constant [25 x i8] c"switch.table.status_show\00", align 1
@___asan_gen_.1642 = private unnamed_addr constant [39 x i8] c"switch.table.suspend_standby_mode_show\00", align 1
@___asan_gen_.1643 = private unnamed_addr constant [35 x i8] c"switch.table.suspend_mem_mode_show\00", align 1
@___asan_gen_.1644 = private unnamed_addr constant [36 x i8] c"switch.table.suspend_disk_mode_show\00", align 1
@___asan_gen_.1645 = private unnamed_addr constant [44 x i8] c"switch.table.regulator_summary_show_subtree\00", align 1
@llvm.compiler.used = appending global [620 x ptr] [ptr @__bpf_trace_tp_map_regulator_bypass_disable, ptr @__bpf_trace_tp_map_regulator_bypass_disable_complete, ptr @__bpf_trace_tp_map_regulator_bypass_enable, ptr @__bpf_trace_tp_map_regulator_bypass_enable_complete, ptr @__bpf_trace_tp_map_regulator_disable, ptr @__bpf_trace_tp_map_regulator_disable_complete, ptr @__bpf_trace_tp_map_regulator_enable, ptr @__bpf_trace_tp_map_regulator_enable_complete, ptr @__bpf_trace_tp_map_regulator_enable_delay, ptr @__bpf_trace_tp_map_regulator_set_voltage, ptr @__bpf_trace_tp_map_regulator_set_voltage_complete, ptr @__event_regulator_bypass_disable, ptr @__event_regulator_bypass_disable_complete, ptr @__event_regulator_bypass_enable, ptr @__event_regulator_bypass_enable_complete, ptr @__event_regulator_disable, ptr @__event_regulator_disable_complete, ptr @__event_regulator_enable, ptr @__event_regulator_enable_complete, ptr @__event_regulator_enable_delay, ptr @__event_regulator_set_voltage, ptr @__event_regulator_set_voltage_complete, ptr @__initcall__kmod_core__387_6012_regulator_init1, ptr @__initcall__kmod_core__388_6109_regulator_init_complete7s, ptr @__ksymtab_rdev_get_dev, ptr @__ksymtab_rdev_get_drvdata, ptr @__ksymtab_rdev_get_id, ptr @__ksymtab_rdev_get_name, ptr @__ksymtab_rdev_get_regmap, ptr @__ksymtab_regulator_allow_bypass, ptr @__ksymtab_regulator_bulk_disable, ptr @__ksymtab_regulator_bulk_enable, ptr @__ksymtab_regulator_bulk_force_disable, ptr @__ksymtab_regulator_bulk_free, ptr @__ksymtab_regulator_bulk_get, ptr @__ksymtab_regulator_bulk_register_supply_alias, ptr @__ksymtab_regulator_bulk_unregister_supply_alias, ptr @__ksymtab_regulator_count_voltages, ptr @__ksymtab_regulator_disable, ptr @__ksymtab_regulator_disable_deferred, ptr @__ksymtab_regulator_enable, ptr @__ksymtab_regulator_force_disable, ptr @__ksymtab_regulator_get, ptr @__ksymtab_regulator_get_current_limit, ptr @__ksymtab_regulator_get_drvdata, ptr @__ksymtab_regulator_get_error_flags, ptr @__ksymtab_regulator_get_exclusive, ptr @__ksymtab_regulator_get_hardware_vsel_register, ptr @__ksymtab_regulator_get_init_drvdata, ptr @__ksymtab_regulator_get_linear_step, ptr @__ksymtab_regulator_get_mode, ptr @__ksymtab_regulator_get_optional, ptr @__ksymtab_regulator_get_voltage, ptr @__ksymtab_regulator_get_voltage_rdev, ptr @__ksymtab_regulator_has_full_constraints, ptr @__ksymtab_regulator_is_enabled, ptr @__ksymtab_regulator_is_supported_voltage, ptr @__ksymtab_regulator_list_hardware_vsel, ptr @__ksymtab_regulator_list_voltage, ptr @__ksymtab_regulator_mode_to_status, ptr @__ksymtab_regulator_notifier_call_chain, ptr @__ksymtab_regulator_put, ptr @__ksymtab_regulator_register, ptr @__ksymtab_regulator_register_notifier, ptr @__ksymtab_regulator_register_supply_alias, ptr @__ksymtab_regulator_set_current_limit, ptr @__ksymtab_regulator_set_drvdata, ptr @__ksymtab_regulator_set_load, ptr @__ksymtab_regulator_set_mode, ptr @__ksymtab_regulator_set_suspend_voltage, ptr @__ksymtab_regulator_set_voltage, ptr @__ksymtab_regulator_set_voltage_rdev, ptr @__ksymtab_regulator_set_voltage_time, ptr @__ksymtab_regulator_set_voltage_time_sel, ptr @__ksymtab_regulator_suspend_disable, ptr @__ksymtab_regulator_suspend_enable, ptr @__ksymtab_regulator_sync_voltage, ptr @__ksymtab_regulator_unregister, ptr @__ksymtab_regulator_unregister_notifier, ptr @__ksymtab_regulator_unregister_supply_alias, ptr @__suspend_set_state._entry, ptr @__suspend_set_state._entry.251, ptr @__suspend_set_state._entry.254, ptr @__suspend_set_state._entry_ptr, ptr @__suspend_set_state._entry_ptr.253, ptr @__suspend_set_state._entry_ptr.256, ptr @__tracepoint_ptr_regulator_bypass_disable, ptr @__tracepoint_ptr_regulator_bypass_disable_complete, ptr @__tracepoint_ptr_regulator_bypass_enable, ptr @__tracepoint_ptr_regulator_bypass_enable_complete, ptr @__tracepoint_ptr_regulator_disable, ptr @__tracepoint_ptr_regulator_disable_complete, ptr @__tracepoint_ptr_regulator_enable, ptr @__tracepoint_ptr_regulator_enable_complete, ptr @__tracepoint_ptr_regulator_enable_delay, ptr @__tracepoint_ptr_regulator_set_voltage, ptr @__tracepoint_ptr_regulator_set_voltage_complete, ptr @__tracepoint_regulator_bypass_disable, ptr @__tracepoint_regulator_bypass_disable_complete, ptr @__tracepoint_regulator_bypass_enable, ptr @__tracepoint_regulator_bypass_enable_complete, ptr @__tracepoint_regulator_disable, ptr @__tracepoint_regulator_disable_complete, ptr @__tracepoint_regulator_enable, ptr @__tracepoint_regulator_enable_complete, ptr @__tracepoint_regulator_enable_delay, ptr @__tracepoint_regulator_set_voltage, ptr @__tracepoint_regulator_set_voltage_complete, ptr @_regulator_check_status_enabled._entry, ptr @_regulator_check_status_enabled._entry_ptr, ptr @_regulator_disable._entry, ptr @_regulator_disable._entry_ptr, ptr @_regulator_do_enable._entry, ptr @_regulator_do_enable._entry.112, ptr @_regulator_do_enable._entry_ptr, ptr @_regulator_do_enable._entry_ptr.114, ptr @_regulator_do_set_voltage._entry, ptr @_regulator_do_set_voltage._entry_ptr, ptr @_regulator_enable._entry, ptr @_regulator_enable._entry_ptr, ptr @_regulator_force_disable._entry, ptr @_regulator_force_disable._entry_ptr, ptr @_regulator_get._entry, ptr @_regulator_get._entry.13, ptr @_regulator_get._entry.16, ptr @_regulator_get._entry.20, ptr @_regulator_get._entry.23, ptr @_regulator_get._entry_ptr, ptr @_regulator_get._entry_ptr.15, ptr @_regulator_get._entry_ptr.19, ptr @_regulator_get._entry_ptr.22, ptr @_regulator_get._entry_ptr.25, ptr @_regulator_handle_consumer_disable._entry, ptr @_regulator_handle_consumer_disable._entry_ptr, ptr @_regulator_set_suspend_voltage._entry, ptr @_regulator_set_suspend_voltage._entry_ptr, ptr @drms_uA_update._entry, ptr @drms_uA_update._entry.131, ptr @drms_uA_update._entry.134, ptr @drms_uA_update._entry.137, ptr @drms_uA_update._entry.140, ptr @drms_uA_update._entry_ptr, ptr @drms_uA_update._entry_ptr.133, ptr @drms_uA_update._entry_ptr.136, ptr @drms_uA_update._entry_ptr.139, ptr @drms_uA_update._entry_ptr.142, ptr @event_class_regulator_basic, ptr @event_class_regulator_range, ptr @event_class_regulator_value, ptr @event_regulator_bypass_disable, ptr @event_regulator_bypass_disable_complete, ptr @event_regulator_bypass_enable, ptr @event_regulator_bypass_enable_complete, ptr @event_regulator_disable, ptr @event_regulator_disable_complete, ptr @event_regulator_enable, ptr @event_regulator_enable_complete, ptr @event_regulator_enable_delay, ptr @event_regulator_set_voltage, ptr @event_regulator_set_voltage_complete, ptr @generic_coupler_attach._entry, ptr @generic_coupler_attach._entry.349, ptr @generic_coupler_attach._entry_ptr, ptr @generic_coupler_attach._entry_ptr.351, ptr @machine_constraints_current._entry, ptr @machine_constraints_current._entry.241, ptr @machine_constraints_current._entry.244, ptr @machine_constraints_current._entry_ptr, ptr @machine_constraints_current._entry_ptr.243, ptr @machine_constraints_current._entry_ptr.246, ptr @machine_constraints_voltage._entry, ptr @machine_constraints_voltage._entry.222, ptr @machine_constraints_voltage._entry.225, ptr @machine_constraints_voltage._entry.228, ptr @machine_constraints_voltage._entry.231, ptr @machine_constraints_voltage._entry.234, ptr @machine_constraints_voltage._entry_ptr, ptr @machine_constraints_voltage._entry_ptr.224, ptr @machine_constraints_voltage._entry_ptr.227, ptr @machine_constraints_voltage._entry_ptr.230, ptr @machine_constraints_voltage._entry_ptr.233, ptr @machine_constraints_voltage._entry_ptr.236, ptr @print_constraints._entry, ptr @print_constraints._entry_ptr, ptr @rdev_init_debugfs._entry, ptr @rdev_init_debugfs._entry_ptr, ptr @regulator_balance_voltage._entry, ptr @regulator_balance_voltage._entry_ptr, ptr @regulator_bulk_disable._entry, ptr @regulator_bulk_disable._entry.45, ptr @regulator_bulk_disable._entry_ptr, ptr @regulator_bulk_disable._entry_ptr.47, ptr @regulator_bulk_enable._entry, ptr @regulator_bulk_enable._entry_ptr, ptr @regulator_bulk_get._entry, ptr @regulator_bulk_get._entry_ptr, ptr @regulator_bulk_register_supply_alias._entry, ptr @regulator_bulk_register_supply_alias._entry_ptr, ptr @regulator_check_consumers._entry, ptr @regulator_check_consumers._entry_ptr, ptr @regulator_check_current_limit._entry, ptr @regulator_check_current_limit._entry.153, ptr @regulator_check_current_limit._entry_ptr, ptr @regulator_check_current_limit._entry_ptr.155, ptr @regulator_check_voltage._entry, ptr @regulator_check_voltage._entry.4, ptr @regulator_check_voltage._entry_ptr, ptr @regulator_check_voltage._entry_ptr.6, ptr @regulator_disable_work._entry, ptr @regulator_disable_work._entry_ptr, ptr @regulator_find_coupler._entry, ptr @regulator_find_coupler._entry_ptr, ptr @regulator_get_suspend_state_check._entry, ptr @regulator_get_suspend_state_check._entry_ptr, ptr @regulator_get_voltage_rdev._entry, ptr @regulator_get_voltage_rdev._entry_ptr, ptr @regulator_init._entry, ptr @regulator_init._entry_ptr, ptr @regulator_init_coupling._entry, ptr @regulator_init_coupling._entry_ptr, ptr @regulator_late_cleanup._entry, ptr @regulator_late_cleanup._entry.356, ptr @regulator_late_cleanup._entry.359, ptr @regulator_late_cleanup._entry_ptr, ptr @regulator_late_cleanup._entry_ptr.358, ptr @regulator_late_cleanup._entry_ptr.361, ptr @regulator_mode_constrain._entry, ptr @regulator_mode_constrain._entry.158, ptr @regulator_mode_constrain._entry_ptr, ptr @regulator_mode_constrain._entry_ptr.160, ptr @regulator_ops_is_valid._entry, ptr @regulator_ops_is_valid._entry_ptr, ptr @regulator_register._entry, ptr @regulator_register._entry.60, ptr @regulator_register._entry_ptr, ptr @regulator_register._entry_ptr.62, ptr @regulator_register_supply_alias._entry, ptr @regulator_register_supply_alias._entry_ptr, ptr @regulator_remove_coupling._entry, ptr @regulator_remove_coupling._entry_ptr, ptr @regulator_resolve_coupling._entry, ptr @regulator_resolve_coupling._entry_ptr, ptr @regulator_resolve_supply._entry, ptr @regulator_resolve_supply._entry.87, ptr @regulator_resolve_supply._entry_ptr, ptr @regulator_resolve_supply._entry_ptr.89, ptr @regulator_set_voltage_rdev._entry, ptr @regulator_set_voltage_rdev._entry.32, ptr @regulator_set_voltage_rdev._entry_ptr, ptr @regulator_set_voltage_rdev._entry_ptr.34, ptr @set_machine_constraints._entry, ptr @set_machine_constraints._entry.169, ptr @set_machine_constraints._entry.172, ptr @set_machine_constraints._entry.175, ptr @set_machine_constraints._entry.178, ptr @set_machine_constraints._entry.181, ptr @set_machine_constraints._entry.184, ptr @set_machine_constraints._entry.187, ptr @set_machine_constraints._entry.190, ptr @set_machine_constraints._entry.193, ptr @set_machine_constraints._entry.196, ptr @set_machine_constraints._entry.199, ptr @set_machine_constraints._entry.202, ptr @set_machine_constraints._entry.205, ptr @set_machine_constraints._entry.208, ptr @set_machine_constraints._entry.211, ptr @set_machine_constraints._entry.214, ptr @set_machine_constraints._entry.217, ptr @set_machine_constraints._entry_ptr, ptr @set_machine_constraints._entry_ptr.171, ptr @set_machine_constraints._entry_ptr.174, ptr @set_machine_constraints._entry_ptr.177, ptr @set_machine_constraints._entry_ptr.180, ptr @set_machine_constraints._entry_ptr.183, ptr @set_machine_constraints._entry_ptr.186, ptr @set_machine_constraints._entry_ptr.189, ptr @set_machine_constraints._entry_ptr.192, ptr @set_machine_constraints._entry_ptr.195, ptr @set_machine_constraints._entry_ptr.198, ptr @set_machine_constraints._entry_ptr.201, ptr @set_machine_constraints._entry_ptr.204, ptr @set_machine_constraints._entry_ptr.207, ptr @set_machine_constraints._entry_ptr.210, ptr @set_machine_constraints._entry_ptr.213, ptr @set_machine_constraints._entry_ptr.216, ptr @set_machine_constraints._entry_ptr.219, ptr @str__regulator__trace_system_name, ptr @trace_event_fields_regulator_basic, ptr @trace_event_type_funcs_regulator_basic, ptr @print_fmt_regulator_basic, ptr @trace_event_fields_regulator_range, ptr @trace_event_type_funcs_regulator_range, ptr @print_fmt_regulator_range, ptr @trace_event_fields_regulator_value, ptr @trace_event_type_funcs_regulator_value, ptr @print_fmt_regulator_value, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.5, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.14, ptr @.str.17, ptr @.str.18, ptr @.str.21, ptr @.str.24, ptr @regulator_list_mutex, ptr @regulator_supply_alias_list, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.33, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.46, ptr @regulator_coupler_list, ptr @regulator_register.regulator_no, ptr @regulator_register.__key, ptr @.str.48, ptr @regulator_ww_class, ptr @regulator_register.__key.49, ptr @.str.50, ptr @regulator_register.__key.51, ptr @.str.52, ptr @regulator_register.__key.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @regulator_class, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.61, ptr @.str.63, ptr @regulator_dev_groups, ptr @regulator_pm_ops, ptr @has_full_constraints, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @regulator_map_list, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.88, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @constraint_flags_fops, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @regulator_nesting_mutex, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.113, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.132, ptr @.str.135, ptr @.str.138, ptr @.str.141, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.154, ptr @.str.156, ptr @.str.157, ptr @.str.159, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @regulator_ena_gpio_list, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.170, ptr @.str.173, ptr @.str.176, ptr @.str.179, ptr @.str.182, ptr @.str.185, ptr @.str.188, ptr @.str.191, ptr @.str.194, ptr @.str.197, ptr @.str.200, ptr @.str.203, ptr @.str.206, ptr @.str.209, ptr @.str.212, ptr @.str.215, ptr @.str.218, ptr @.str.220, ptr @.str.221, ptr @.str.223, ptr @.str.226, ptr @.str.229, ptr @.str.232, ptr @.str.235, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.242, ptr @.str.245, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.252, ptr @.str.255, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @debugfs_root, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @regulator_dev_group, ptr @regulator_dev_attrs, ptr @dev_attr_name, ptr @dev_attr_num_users, ptr @dev_attr_type, ptr @dev_attr_microvolts, ptr @dev_attr_microamps, ptr @dev_attr_opmode, ptr @dev_attr_state, ptr @dev_attr_status, ptr @dev_attr_bypass, ptr @dev_attr_min_microvolts, ptr @dev_attr_max_microvolts, ptr @dev_attr_min_microamps, ptr @dev_attr_max_microamps, ptr @dev_attr_suspend_standby_state, ptr @dev_attr_suspend_mem_state, ptr @dev_attr_suspend_disk_state, ptr @dev_attr_suspend_standby_microvolts, ptr @dev_attr_suspend_mem_microvolts, ptr @dev_attr_suspend_disk_microvolts, ptr @dev_attr_suspend_standby_mode, ptr @dev_attr_suspend_mem_mode, ptr @dev_attr_suspend_disk_mode, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @.str.313, ptr @.str.314, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @dev_attr_requested_microamps, ptr @.str.331, ptr @regulator_init.__key, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @supply_map_fops, ptr @.str.335, ptr @regulator_summary_fops, ptr @generic_regulator_coupler, ptr @.str.336, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.350, ptr @regulator_init_complete_work, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.357, ptr @.str.360, ptr @switch.table.regulator_mode_to_status, ptr @switch.table.opmode_show, ptr @switch.table.status_show, ptr @switch.table.suspend_standby_mode_show, ptr @switch.table.suspend_mem_mode_show, ptr @switch.table.suspend_disk_mode_show, ptr @switch.table.regulator_summary_show_subtree], section "llvm.metadata"
@0 = internal global [427 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__regulator__trace_system_name to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_regulator_basic to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_regulator_basic to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_regulator_basic to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_enable to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_enable_delay to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_enable_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_disable to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_disable_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_bypass_enable to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_bypass_enable_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_bypass_disable to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_bypass_disable_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_regulator_range to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_regulator_range to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_regulator_range to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_set_voltage to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_regulator_value to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_regulator_value to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_regulator_value to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_regulator_set_voltage_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_check_voltage._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_check_voltage._entry.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_check_consumers._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_get._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_get._entry.13 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_get._entry.16 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_get._entry.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_get._entry.23 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_list_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_supply_alias_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_register_supply_alias._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_bulk_register_supply_alias._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_set_voltage_rdev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_set_voltage_rdev._entry.32 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_get_voltage_rdev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_bulk_get._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_bulk_enable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_bulk_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_bulk_disable._entry.45 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_coupler_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_register.regulator_no to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_register.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_ww_class to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_register.__key.49 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_register.__key.51 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_register.__key.53 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_register._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_class to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_register._entry.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_dev_groups to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @has_full_constraints to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_ops_is_valid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_map_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_resolve_supply._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_resolve_supply._entry.87 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @constraint_flags_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 114, i32 160, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_nesting_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_enable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_do_enable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_do_enable._entry.112 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_check_status_enabled._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_handle_consumer_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_force_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @drms_uA_update._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @drms_uA_update._entry.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @drms_uA_update._entry.134 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @drms_uA_update._entry.137 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @drms_uA_update._entry.140 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_do_set_voltage._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_balance_voltage._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_regulator_set_suspend_voltage._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_check_current_limit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_check_current_limit._entry.153 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_mode_constrain._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_mode_constrain._entry.158 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_disable_work._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_ena_gpio_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1006 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.169 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.172 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.175 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.178 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.181 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.184 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.187 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.190 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.193 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.196 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.199 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.202 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.205 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.208 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.211 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.214 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_machine_constraints._entry.217 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_voltage._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_voltage._entry.222 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_voltage._entry.225 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_voltage._entry.228 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_voltage._entry.231 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_voltage._entry.234 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_current._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_current._entry.241 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @machine_constraints_current._entry.244 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_get_suspend_state_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_constraints._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_init_coupling._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_find_coupler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debugfs_root to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rdev_init_debugfs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_resolve_coupling._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_remove_coupling._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_dev_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1342 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_dev_attrs to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_name to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_num_users to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1351 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_type to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_microvolts to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1357 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_microamps to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1360 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_opmode to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1363 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_state to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1366 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_status to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1369 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_bypass to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_min_microvolts to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_max_microvolts to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_min_microamps to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_max_microamps to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_standby_state to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1387 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_mem_state to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1390 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_disk_state to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_standby_microvolts to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_mem_microvolts to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_disk_microvolts to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1402 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_standby_mode to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_mem_mode to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1408 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_suspend_disk_mode to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1411 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_requested_microamps to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @supply_map_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_summary_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @generic_regulator_coupler to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @generic_coupler_attach._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @generic_coupler_attach._entry.349 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_init_complete_work to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.1609 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_late_cleanup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_late_cleanup._entry.356 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @regulator_late_cleanup._entry.359 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.360 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.regulator_mode_to_status to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.opmode_show to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1640 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.status_show to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1641 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.suspend_standby_mode_show to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1642 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.suspend_mem_mode_show to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1643 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.suspend_disk_mode_show to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1644 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.regulator_summary_show_subtree to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1645 to i32), i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_enable(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_enable_delay(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable_delay, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_enable_complete(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_disable(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_disable, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_disable_complete(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_disable_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_bypass_enable(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_enable, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_bypass_enable_complete(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_enable_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_bypass_disable(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_disable, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_bypass_disable_complete(ptr nocapture readnone %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_disable_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_set_voltage(ptr nocapture readnone %__data, ptr noundef %name, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_set_voltage, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name, i32 noundef %min, i32 noundef %max) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_regulator_set_voltage_complete(ptr nocapture readnone %__data, ptr noundef %name, i32 noundef %value) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_set_voltage_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name, i32 noundef %value) #25
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_regulator_basic(ptr noundef %__data, ptr noundef readonly %name) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #25
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !993

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !994

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #25
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i20 = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i20, ptr @.str.64, ptr %name
  %call.i21 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #28
  %add = add i32 %call.i21, 13
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #25
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %add.i = shl i32 %call.i21, 16
  %or.i = add i32 %add.i, 65548
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_basic, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 12
  %call9 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #29
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_regulator_basic(ptr noundef %__data, ptr noundef readonly %name) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #25
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !995
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #25
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !995
  %tobool.not.i = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.64, ptr %name
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #28
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65548
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i44.not = icmp eq ptr %15, null
  br i1 %tobool.not.i44.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 24
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #25
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #25
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #25
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !983) #25
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_basic, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 12
  %call21 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #29
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #25
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_regulator_range(ptr noundef %__data, ptr noundef readonly %name, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #25
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !993

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !994

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #25
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i26 = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i26, ptr @.str.64, ptr %name
  %call.i27 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #28
  %add = add i32 %call.i27, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #25
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %add.i = shl i32 %call.i27, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %call9 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #29
  %min10 = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %min10 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %min, ptr %min10, align 4
  %max11 = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %max11 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %max, ptr %max11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_regulator_range(ptr noundef %__data, ptr noundef readonly %name, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #25
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !995
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #25
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !995
  %tobool.not.i = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.64, ptr %name
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #28
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i50.not = icmp eq ptr %15, null
  br i1 %tobool.not.i50.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #25
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #25
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #25
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !983) #25
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %call21 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #29
  %min22 = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %min22 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %min, ptr %min22, align 4
  %max23 = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %max23 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %max, ptr %max23, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_regulator_value(ptr noundef %__data, ptr noundef readonly %name, i32 noundef %val) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #25
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !993

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !994

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #25
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i23 = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i23, ptr @.str.64, ptr %name
  %call.i24 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #28
  %add = add i32 %call.i24, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #25
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %add.i = shl i32 %call.i24, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_value, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %call9 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #29
  %val10 = getelementptr inbounds %struct.trace_event_raw_regulator_value, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %val10 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %val, ptr %val10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_regulator_value(ptr noundef %__data, ptr noundef readonly %name, i32 noundef %val) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #25
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !995
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #25
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !995
  %tobool.not.i = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.64, ptr %name
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #28
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i47.not = icmp eq ptr %15, null
  br i1 %tobool.not.i47.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #25
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #25
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #25
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !983) #25
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_value, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %call21 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #29
  %val22 = getelementptr inbounds %struct.trace_event_raw_regulator_value, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %val22 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %val, ptr %val22, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_regulator_basic(ptr noundef %__data, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  %0 = ptrtoint ptr %name to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_regulator_range(ptr noundef %__data, ptr noundef %name, i32 noundef %min, i32 noundef %max) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  %0 = ptrtoint ptr %name to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %min to i64
  %conv8 = zext i32 %max to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_regulator_value(ptr noundef %__data, ptr noundef %name, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  %0 = ptrtoint ptr %name to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %val to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #25
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @rdev_get_name(ptr nocapture noundef readonly %rdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %0 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true.return_crit_edge

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %return

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %4 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rdev, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool6.not = icmp eq ptr %7, null
  %.str. = select i1 %tobool6.not, ptr @.str, ptr %7
  br label %return

return:                                           ; preds = %if.else, %land.lhs.true.return_crit_edge
  %retval.0 = phi ptr [ %3, %land.lhs.true.return_crit_edge ], [ %.str., %if.else ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_check_voltage(ptr nocapture noundef readonly %rdev, ptr nocapture noundef %min_uV, ptr nocapture noundef %max_uV) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %min_uV, align 4
  %2 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %max_uV, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp = icmp sgt i32 %1, %3
  br i1 %cmp, label %do.body2, label %do.end5, !prof !994

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/regulator/core.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 423, 0\0A.popsection", ""() #25, !srcloc !996
  unreachable

do.end5:                                          ; preds = %entry
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %4 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #27
  %6 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rdev, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool6.not.i.i = icmp eq ptr %9, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %9
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %do.end8

regulator_ops_is_valid.exit:                      ; preds = %do.end5
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %5, i32 0, i32 11
  %10 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.do.end8_crit_edge, label %if.end11

regulator_ops_is_valid.exit.do.end8_crit_edge:    ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end8

do.end8:                                          ; preds = %regulator_ops_is_valid.exit.do.end8_crit_edge, %regulator_ops_is_valid.exit.thread
  %12 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i49 = icmp eq ptr %13, null
  br i1 %tobool.not.i49, label %do.end8.if.else.i_crit_edge, label %land.lhs.true.i

do.end8.if.else.i_crit_edge:                      ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %tobool2.not.i = icmp eq ptr %15, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end8.if.else.i_crit_edge
  %16 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rdev, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 4
  %tobool6.not.i = icmp eq ptr %19, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %19
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i50 = phi ptr [ %15, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1, ptr noundef %retval.0.i50) #30
  br label %return

if.end11:                                         ; preds = %regulator_ops_is_valid.exit
  %20 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %max_uV, align 4
  %22 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %constraints.i, align 8
  %max_uV12 = getelementptr inbounds %struct.regulation_constraints, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %max_uV12 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %max_uV12, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %25)
  %cmp13 = icmp sgt i32 %21, %25
  br i1 %cmp13, label %if.then14, label %if.end11.if.end17_crit_edge

if.end11.if.end17_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end17

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #27
  %26 = ptrtoint ptr %max_uV to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %max_uV, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %if.end11.if.end17_crit_edge
  %27 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %min_uV, align 4
  %29 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %constraints.i, align 8
  %min_uV19 = getelementptr inbounds %struct.regulation_constraints, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %min_uV19 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %min_uV19, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %32)
  %cmp20 = icmp slt i32 %28, %32
  br i1 %cmp20, label %if.then21, label %if.end17.if.end24_crit_edge

if.end17.if.end24_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end24

if.then21:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #27
  %33 = ptrtoint ptr %min_uV to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %min_uV, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %if.end17.if.end24_crit_edge
  %34 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %min_uV, align 4
  %36 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %max_uV, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %37)
  %cmp25 = icmp sgt i32 %35, %37
  br i1 %cmp25, label %do.end28, label %if.end24.return_crit_edge

if.end24.return_crit_edge:                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #27
  br label %return

do.end28:                                         ; preds = %if.end24
  %38 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i52 = icmp eq ptr %39, null
  br i1 %tobool.not.i52, label %do.end28.if.else.i57_crit_edge, label %land.lhs.true.i54

do.end28.if.else.i57_crit_edge:                   ; preds = %do.end28
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i57

land.lhs.true.i54:                                ; preds = %do.end28
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %tobool2.not.i53 = icmp eq ptr %41, null
  br i1 %tobool2.not.i53, label %land.lhs.true.i54.if.else.i57_crit_edge, label %land.lhs.true.i54.rdev_get_name.exit59_crit_edge

land.lhs.true.i54.rdev_get_name.exit59_crit_edge: ; preds = %land.lhs.true.i54
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit59

land.lhs.true.i54.if.else.i57_crit_edge:          ; preds = %land.lhs.true.i54
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i57

if.else.i57:                                      ; preds = %land.lhs.true.i54.if.else.i57_crit_edge, %do.end28.if.else.i57_crit_edge
  %42 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %rdev, align 8
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 4
  %tobool6.not.i55 = icmp eq ptr %45, null
  %.str..i56 = select i1 %tobool6.not.i55, ptr @.str, ptr %45
  br label %rdev_get_name.exit59

rdev_get_name.exit59:                             ; preds = %if.else.i57, %land.lhs.true.i54.rdev_get_name.exit59_crit_edge
  %retval.0.i58 = phi ptr [ %41, %land.lhs.true.i54.rdev_get_name.exit59_crit_edge ], [ %.str..i56, %if.else.i57 ]
  %call31 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5, ptr noundef %retval.0.i58, i32 noundef %35, i32 noundef %37) #30
  br label %return

return:                                           ; preds = %rdev_get_name.exit59, %if.end24.return_crit_edge, %rdev_get_name.exit
  %retval.0 = phi i32 [ -22, %rdev_get_name.exit59 ], [ -1, %rdev_get_name.exit ], [ 0, %if.end24.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_check_consumers(ptr noundef readonly %rdev, ptr nocapture noundef %min_uV, ptr nocapture noundef %max_uV, i32 noundef %state) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %consumer_list = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 6
  %0 = ptrtoint ptr %consumer_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn43 = load ptr, ptr %consumer_list, align 4
  %cmp.not44 = icmp eq ptr %.pn43, %consumer_list
  br i1 %cmp.not44, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn45 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn43, %entry.for.body_crit_edge ]
  %voltage2 = getelementptr i8, ptr %.pn45, i32 24
  %arrayidx = getelementptr [5 x %struct.regulator_voltage], ptr %voltage2, i32 0, i32 %state
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %land.lhs.true, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true:                                    ; preds = %for.body
  %max_uV4 = getelementptr inbounds %struct.regulator_voltage, ptr %arrayidx, i32 0, i32 1
  %3 = ptrtoint ptr %max_uV4 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_uV4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %for.body.if.end_crit_edge
  %5 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_uV, align 4
  %max_uV6 = getelementptr inbounds %struct.regulator_voltage, ptr %arrayidx, i32 0, i32 1
  %7 = ptrtoint ptr %max_uV6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %max_uV6, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %8)
  %cmp7 = icmp sgt i32 %6, %8
  br i1 %cmp7, label %if.then8, label %if.end.if.end10_crit_edge

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %9 = ptrtoint ptr %max_uV to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %max_uV, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end.if.end10_crit_edge
  %10 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %min_uV, align 4
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %13)
  %cmp12 = icmp slt i32 %11, %13
  br i1 %cmp12, label %if.then13, label %if.end10.for.inc_crit_edge

if.end10.for.inc_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then13:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #27
  %14 = ptrtoint ptr %min_uV to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %min_uV, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then13, %if.end10.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge
  %15 = ptrtoint ptr %.pn45 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn = load ptr, ptr %.pn45, align 4
  %cmp.not = icmp eq ptr %.pn, %consumer_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %16 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %min_uV, align 4
  %18 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %max_uV, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp21 = icmp sgt i32 %17, %19
  br i1 %cmp21, label %do.end, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.end:                                           ; preds = %for.end
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %20 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %21, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %tobool2.not.i = icmp eq ptr %23, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %24 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %rdev, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 4
  %tobool6.not.i = icmp eq ptr %27, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %27
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %23, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7, ptr noundef %retval.0.i, i32 noundef %17, i32 noundef %19) #30
  br label %cleanup

cleanup:                                          ; preds = %rdev_get_name.exit, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %rdev_get_name.exit ], [ 0, %for.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @_regulator_get(ptr noundef %dev, ptr noundef %id, i32 noundef %get_type) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %get_type)
  %cmp = icmp ugt i32 %get_type, 2
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.9, i32 noundef %get_type, ptr noundef nonnull @.str.10) #30
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq ptr %id, null
  br i1 %cmp1, label %do.end5, label %if.end8

do.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.14) #30
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %call9 = tail call fastcc ptr @regulator_dev_lookup(ptr noundef %dev, ptr noundef nonnull %id)
  %cmp.i = icmp ugt ptr %call9, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then11, label %if.end34

if.then11:                                        ; preds = %if.end8
  %cmp13.not = icmp eq ptr %call9, inttoptr (i32 -19 to ptr)
  br i1 %cmp13.not, label %if.end16, label %if.then11.cleanup_crit_edge

if.then11.cleanup_crit_edge:                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end16:                                         ; preds = %if.then11
  %.b1.i = load i1, ptr @has_full_constraints, align 1
  br i1 %.b1.i, label %if.end16.if.end23_crit_edge, label %have_full_constraints.exit

if.end16.if.end23_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end23

have_full_constraints.exit:                       ; preds = %if.end16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @of_root to i32))
  %0 = load ptr, ptr @of_root, align 4
  %cmp.i.i.not = icmp eq ptr %0, null
  br i1 %cmp.i.i.not, label %do.end21, label %have_full_constraints.exit.if.end23_crit_edge

have_full_constraints.exit.if.end23_crit_edge:    ; preds = %have_full_constraints.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end23

do.end21:                                         ; preds = %have_full_constraints.exit
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.17) #30
  br label %cleanup

if.end23:                                         ; preds = %have_full_constraints.exit.if.end23_crit_edge, %if.end16.if.end23_crit_edge
  %1 = zext i32 %get_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values)
  switch i32 %get_type, label %if.end23.cleanup_crit_edge [
    i32 0, label %if.end34.thread
    i32 1, label %do.end32
  ]

if.end23.cleanup_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.end32:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.24) #30
  br label %cleanup

if.end34:                                         ; preds = %if.end8
  %exclusive = getelementptr inbounds %struct.regulator_dev, ptr %call9, i32 0, i32 1
  %2 = ptrtoint ptr %exclusive to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %exclusive, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.end38, label %if.end34.if.then35_crit_edge

if.end34.if.then35_crit_edge:                     ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then35

if.end34.thread:                                  ; preds = %if.end23
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.21, ptr noundef nonnull %id) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @dummy_regulator_rdev to i32))
  %4 = load ptr, ptr @dummy_regulator_rdev, align 4
  %dev27 = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 13
  %call28 = tail call ptr @get_device(ptr noundef %dev27) #25
  %exclusive144 = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %exclusive144 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %exclusive144, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not145 = icmp eq i32 %6, 0
  br i1 %tobool.not145, label %if.end34.thread.if.end44_crit_edge, label %if.end34.thread.if.then35_crit_edge

if.end34.thread.if.then35_crit_edge:              ; preds = %if.end34.thread
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then35

if.end34.thread.if.end44_crit_edge:               ; preds = %if.end34.thread
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end44

if.then35:                                        ; preds = %if.end34.thread.if.then35_crit_edge, %if.end34.if.then35_crit_edge
  %rdev.0146 = phi ptr [ %4, %if.end34.thread.if.then35_crit_edge ], [ %call9, %if.end34.if.then35_crit_edge ]
  %dev37 = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0146, i32 0, i32 13
  tail call void @put_device(ptr noundef %dev37) #25
  br label %cleanup

if.end38:                                         ; preds = %if.end34
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %get_type)
  %cmp39 = icmp eq i32 %get_type, 1
  br i1 %cmp39, label %land.lhs.true, label %if.end38.if.end44_crit_edge

if.end38.if.end44_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end44

land.lhs.true:                                    ; preds = %if.end38
  %open_count = getelementptr inbounds %struct.regulator_dev, ptr %call9, i32 0, i32 3
  %7 = ptrtoint ptr %open_count to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %open_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool40.not = icmp eq i32 %8, 0
  br i1 %tobool40.not, label %land.lhs.true.if.end44_crit_edge, label %if.then41

land.lhs.true.if.end44_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end44

if.then41:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  %dev43 = getelementptr inbounds %struct.regulator_dev, ptr %call9, i32 0, i32 13
  tail call void @put_device(ptr noundef %dev43) #25
  br label %cleanup

if.end44:                                         ; preds = %land.lhs.true.if.end44_crit_edge, %if.end38.if.end44_crit_edge, %if.end34.thread.if.end44_crit_edge
  %cmp39155 = phi i1 [ true, %land.lhs.true.if.end44_crit_edge ], [ false, %if.end38.if.end44_crit_edge ], [ false, %if.end34.thread.if.end44_crit_edge ]
  %exclusive150154 = phi ptr [ %exclusive, %land.lhs.true.if.end44_crit_edge ], [ %exclusive, %if.end38.if.end44_crit_edge ], [ %exclusive144, %if.end34.thread.if.end44_crit_edge ]
  %rdev.0148 = phi ptr [ %call9, %land.lhs.true.if.end44_crit_edge ], [ %call9, %if.end38.if.end44_crit_edge ], [ %4, %if.end34.thread.if.end44_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  %n_resolved = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 7, i32 2
  %9 = ptrtoint ptr %n_resolved to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %n_resolved, align 4
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 7, i32 3
  %11 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %12)
  %cmp46.not = icmp eq i32 %10, %12
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  br i1 %cmp46.not, label %if.end52, label %if.then49

if.then49:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #27
  %dev51 = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 13
  tail call void @put_device(ptr noundef %dev51) #25
  br label %cleanup

if.end52:                                         ; preds = %if.end44
  %call53 = tail call fastcc i32 @regulator_resolve_supply(ptr noundef %rdev.0148)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %cmp54 = icmp slt i32 %call53, 0
  br i1 %cmp54, label %if.then56, label %if.end59

if.then56:                                        ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #27
  %13 = inttoptr i32 %call53 to ptr
  %dev58 = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 13
  tail call void @put_device(ptr noundef %dev58) #25
  br label %cleanup

if.end59:                                         ; preds = %if.end52
  %owner = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 12
  %14 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %owner, align 4
  %call60 = tail call zeroext i1 @try_module_get(ptr noundef %15) #25
  br i1 %call60, label %if.end64, label %if.then61

if.then61:                                        ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #27
  %dev63 = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 13
  tail call void @put_device(ptr noundef %dev63) #25
  br label %cleanup

if.end64:                                         ; preds = %if.end59
  %call65 = tail call fastcc ptr @create_regulator(ptr noundef %rdev.0148, ptr noundef %dev, ptr noundef nonnull %id)
  %cmp66 = icmp eq ptr %call65, null
  br i1 %cmp66, label %if.then68, label %if.end72

if.then68:                                        ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #27
  %16 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %owner, align 4
  tail call void @module_put(ptr noundef %17) #25
  %dev71 = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 13
  tail call void @put_device(ptr noundef %dev71) #25
  br label %cleanup

if.end72:                                         ; preds = %if.end64
  %open_count73 = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 3
  %18 = ptrtoint ptr %open_count73 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %open_count73, align 4
  %inc = add i32 %19, 1
  store i32 %inc, ptr %open_count73, align 4
  br i1 %cmp39155, label %if.then76, label %if.end72.if.end84_crit_edge

if.end72.if.end84_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end84

if.then76:                                        ; preds = %if.end72
  %20 = ptrtoint ptr %exclusive150154 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 1, ptr %exclusive150154, align 4
  %ena_pin.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 21
  %21 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 22
  %23 = ptrtoint ptr %ena_gpio_state.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %bf.load.i = load i8, ptr %ena_gpio_state.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %_regulator_is_enabled.exit

if.end.i:                                         ; preds = %if.then76
  %24 = ptrtoint ptr %rdev.0148 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %rdev.0148, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %25, i32 0, i32 10
  %26 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.regulator_ops, ptr %27, i32 0, i32 16
  %28 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %is_enabled.i, align 4
  %tobool1.not.i = icmp eq ptr %29, null
  br i1 %tobool1.not.i, label %if.end.i.if.end84.sink.split_crit_edge, label %if.end3.i

if.end.i.if.end84.sink.split_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end84.sink.split

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %29(ptr noundef %rdev.0148) #25
  br label %_regulator_is_enabled.exit

_regulator_is_enabled.exit:                       ; preds = %if.end3.i, %if.then.i
  %retval.0.i = phi i32 [ %bf.cast.i, %if.then.i ], [ %call.i, %if.end3.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp79 = icmp sgt i32 %retval.0.i, 0
  %spec.select = zext i1 %cmp79 to i32
  br label %if.end84.sink.split

if.end84.sink.split:                              ; preds = %_regulator_is_enabled.exit, %if.end.i.if.end84.sink.split_crit_edge
  %.sink = phi i32 [ 1, %if.end.i.if.end84.sink.split_crit_edge ], [ %spec.select, %_regulator_is_enabled.exit ]
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 2
  %30 = ptrtoint ptr %use_count to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %.sink, ptr %use_count, align 8
  br label %if.end84

if.end84:                                         ; preds = %if.end84.sink.split, %if.end72.if.end84_crit_edge
  %dev85 = getelementptr inbounds %struct.regulator_dev, ptr %rdev.0148, i32 0, i32 13
  %call86 = tail call ptr @device_link_add(ptr noundef %dev, ptr noundef %dev85, i32 noundef 1) #25
  %tobool.not.i141 = icmp eq ptr %call86, null
  %cmp.i142 = icmp ugt ptr %call86, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i141, %cmp.i142
  br i1 %spec.select.i, label %if.end84.cleanup_crit_edge, label %if.then88

if.end84.cleanup_crit_edge:                       ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then88:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #27
  %device_link = getelementptr inbounds %struct.regulator, ptr %call65, i32 0, i32 2
  %31 = ptrtoint ptr %device_link to i32
  call void @__asan_load1_noabort(i32 %31)
  %bf.load = load i8, ptr %device_link, align 4
  %bf.set = or i8 %bf.load, 32
  store i8 %bf.set, ptr %device_link, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then88, %if.end84.cleanup_crit_edge, %if.then68, %if.then61, %if.then56, %if.then49, %if.then41, %if.then35, %do.end32, %if.end23.cleanup_crit_edge, %do.end21, %if.then11.cleanup_crit_edge, %do.end5, %do.end
  %retval.0 = phi ptr [ inttoptr (i32 -22 to ptr), %do.end ], [ inttoptr (i32 -22 to ptr), %do.end5 ], [ inttoptr (i32 -1 to ptr), %if.then35 ], [ inttoptr (i32 -16 to ptr), %if.then41 ], [ inttoptr (i32 -517 to ptr), %if.then49 ], [ %13, %if.then56 ], [ inttoptr (i32 -12 to ptr), %if.then68 ], [ inttoptr (i32 -517 to ptr), %if.then61 ], [ inttoptr (i32 -19 to ptr), %do.end21 ], [ %call65, %if.then88 ], [ %call65, %if.end84.cleanup_crit_edge ], [ %call9, %if.then11.cleanup_crit_edge ], [ inttoptr (i32 -19 to ptr), %if.end23.cleanup_crit_edge ], [ inttoptr (i32 -19 to ptr), %do.end32 ]
  ret ptr %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @regulator_dev_lookup(ptr noundef %dev, ptr noundef %supply) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %map.011.i.i = load ptr, ptr @regulator_supply_alias_list, align 4
  %cmp.not12.i.i = icmp eq ptr %map.011.i.i, @regulator_supply_alias_list
  br i1 %cmp.not12.i.i, label %entry.regulator_supply_alias.exit_crit_edge, label %entry.for.body.i.i_crit_edge

entry.for.body.i.i_crit_edge:                     ; preds = %entry
  br label %for.body.i.i

entry.regulator_supply_alias.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_supply_alias.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %entry.for.body.i.i_crit_edge
  %map.013.i.i = phi ptr [ %map.0.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %map.011.i.i, %entry.for.body.i.i_crit_edge ]
  %src_dev.i.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 1
  %0 = ptrtoint ptr %src_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %src_dev.i.i, align 4
  %cmp1.i.i = icmp eq ptr %1, %dev
  br i1 %cmp1.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %src_supply.i.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 2
  %2 = ptrtoint ptr %src_supply.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %src_supply.i.i, align 4
  %call.i.i = tail call i32 @strcmp(ptr noundef %3, ptr noundef %supply) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp2.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp2.i.i, label %regulator_find_supply_alias.exit.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %4 = ptrtoint ptr %map.013.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %map.0.i.i = load ptr, ptr %map.013.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %map.0.i.i, @regulator_supply_alias_list
  br i1 %cmp.not.i.i, label %for.inc.i.i.regulator_supply_alias.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i.i

for.inc.i.i.regulator_supply_alias.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_supply_alias.exit

regulator_find_supply_alias.exit.i:               ; preds = %land.lhs.true.i.i
  %tobool.not.i = icmp eq ptr %map.013.i.i, null
  br i1 %tobool.not.i, label %regulator_find_supply_alias.exit.i.regulator_supply_alias.exit_crit_edge, label %do.body.i

regulator_find_supply_alias.exit.i.regulator_supply_alias.exit_crit_edge: ; preds = %regulator_find_supply_alias.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_supply_alias.exit

do.body.i:                                        ; preds = %regulator_find_supply_alias.exit.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @regulator_supply_alias.__UNIQUE_ID_ddebug364, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@regulator_dev_lookup, %do.end.i)) #25
          to label %if.then6.i [label %do.end.i], !srcloc !997

if.then6.i:                                       ; preds = %do.body.i
  %alias_supply.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 4
  %5 = ptrtoint ptr %alias_supply.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %alias_supply.i, align 4
  %alias_dev.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 3
  %7 = ptrtoint ptr %alias_dev.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %alias_dev.i, align 4
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then6.i.dev_name.exit.i_crit_edge

if.then6.i.dev_name.exit.i_crit_edge:             ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #27
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %8, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then6.i.dev_name.exit.i_crit_edge
  %retval.0.i20.i = phi ptr [ %12, %if.end.i.i ], [ %10, %if.then6.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @regulator_supply_alias.__UNIQUE_ID_ddebug364, ptr noundef %dev, ptr noundef nonnull @.str.78, ptr noundef %supply, ptr noundef %6, ptr noundef %retval.0.i20.i) #25
  br label %do.end.i

do.end.i:                                         ; preds = %dev_name.exit.i, %do.body.i
  %alias_dev8.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 3
  %13 = ptrtoint ptr %alias_dev8.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %alias_dev8.i, align 4
  %alias_supply9.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 4
  %15 = ptrtoint ptr %alias_supply9.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %alias_supply9.i, align 4
  br label %regulator_supply_alias.exit

regulator_supply_alias.exit:                      ; preds = %do.end.i, %regulator_find_supply_alias.exit.i.regulator_supply_alias.exit_crit_edge, %for.inc.i.i.regulator_supply_alias.exit_crit_edge, %entry.regulator_supply_alias.exit_crit_edge
  %dev.addr.0 = phi ptr [ %dev, %entry.regulator_supply_alias.exit_crit_edge ], [ %dev, %regulator_find_supply_alias.exit.i.regulator_supply_alias.exit_crit_edge ], [ %14, %do.end.i ], [ %dev, %for.inc.i.i.regulator_supply_alias.exit_crit_edge ]
  %supply.addr.0 = phi ptr [ %supply, %entry.regulator_supply_alias.exit_crit_edge ], [ %supply, %regulator_find_supply_alias.exit.i.regulator_supply_alias.exit_crit_edge ], [ %16, %do.end.i ], [ %supply, %for.inc.i.i.regulator_supply_alias.exit_crit_edge ]
  %tobool.not = icmp eq ptr %dev.addr.0, null
  br i1 %tobool.not, label %regulator_supply_alias.exit.if.end13_crit_edge, label %land.lhs.true

regulator_supply_alias.exit.if.end13_crit_edge:   ; preds = %regulator_supply_alias.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

land.lhs.true:                                    ; preds = %regulator_supply_alias.exit
  %of_node = getelementptr inbounds %struct.device, ptr %dev.addr.0, i32 0, i32 27
  %17 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %of_node, align 8
  %tobool1.not = icmp eq ptr %18, null
  br i1 %tobool1.not, label %land.lhs.true.if.then11_crit_edge, label %if.then

land.lhs.true.if.then11_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then11

if.then:                                          ; preds = %land.lhs.true
  %call = tail call fastcc ptr @of_get_regulator(ptr noundef nonnull %dev.addr.0, ptr noundef %supply.addr.0)
  %tobool2.not = icmp eq ptr %call, null
  br i1 %tobool2.not, label %if.then.if.then11_crit_edge, label %if.then3

if.then.if.then11_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then11

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %call4 = tail call ptr @of_find_regulator_by_node(ptr noundef nonnull %call) #25
  %tobool5.not = icmp eq ptr %call4, null
  %spec.select = select i1 %tobool5.not, ptr inttoptr (i32 -517 to ptr), ptr %call4
  br label %cleanup

if.then11:                                        ; preds = %if.then.if.then11_crit_edge, %land.lhs.true.if.then11_crit_edge
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev.addr.0, i32 0, i32 3
  %19 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i62 = icmp eq ptr %20, null
  br i1 %tobool.not.i62, label %if.end.i, label %if.then11.if.end13_crit_edge

if.then11.if.end13_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

if.end.i:                                         ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #27
  %21 = ptrtoint ptr %dev.addr.0 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev.addr.0, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.end.i, %if.then11.if.end13_crit_edge, %regulator_supply_alias.exit.if.end13_crit_edge
  %devname.0 = phi ptr [ null, %regulator_supply_alias.exit.if.end13_crit_edge ], [ %22, %if.end.i ], [ %20, %if.then11.if.end13_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  %map.077 = load ptr, ptr @regulator_map_list, align 4
  %cmp.not78 = icmp eq ptr %map.077, @regulator_map_list
  br i1 %cmp.not78, label %if.end13.for.end.thread_crit_edge, label %for.body.lr.ph

if.end13.for.end.thread_crit_edge:                ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end.thread

for.body.lr.ph:                                   ; preds = %if.end13
  %tobool16.not = icmp eq ptr %devname.0, null
  br label %for.body

for.end.thread:                                   ; preds = %for.inc.for.end.thread_crit_edge, %if.end13.for.end.thread_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  br label %if.end38

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %map.079 = phi ptr [ %map.077, %for.body.lr.ph ], [ %map.0, %for.inc.for.body_crit_edge ]
  %dev_name = getelementptr inbounds %struct.regulator_map, ptr %map.079, i32 0, i32 1
  %23 = ptrtoint ptr %dev_name to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dev_name, align 4
  %tobool14.not = icmp eq ptr %24, null
  br i1 %tobool14.not, label %for.body.if.end21_crit_edge, label %land.lhs.true15

for.body.if.end21_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end21

land.lhs.true15:                                  ; preds = %for.body
  br i1 %tobool16.not, label %land.lhs.true15.for.inc_crit_edge, label %lor.lhs.false

land.lhs.true15.for.inc_crit_edge:                ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

lor.lhs.false:                                    ; preds = %land.lhs.true15
  %call18 = tail call i32 @strcmp(ptr noundef nonnull %24, ptr noundef nonnull %devname.0) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %lor.lhs.false.if.end21_crit_edge, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

lor.lhs.false.if.end21_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end21

if.end21:                                         ; preds = %lor.lhs.false.if.end21_crit_edge, %for.body.if.end21_crit_edge
  %supply22 = getelementptr inbounds %struct.regulator_map, ptr %map.079, i32 0, i32 2
  %25 = ptrtoint ptr %supply22 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %supply22, align 4
  %call23 = tail call i32 @strcmp(ptr noundef %26, ptr noundef %supply.addr.0) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %cmp24 = icmp eq i32 %call23, 0
  br i1 %cmp24, label %land.lhs.true25, label %if.end21.for.inc_crit_edge

if.end21.for.inc_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

land.lhs.true25:                                  ; preds = %if.end21
  %regulator = getelementptr inbounds %struct.regulator_map, ptr %map.079, i32 0, i32 3
  %27 = ptrtoint ptr %regulator to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %regulator, align 4
  %dev26 = getelementptr inbounds %struct.regulator_dev, ptr %28, i32 0, i32 13
  %call27 = tail call ptr @get_device(ptr noundef %dev26) #25
  %tobool28.not = icmp eq ptr %call27, null
  br i1 %tobool28.not, label %land.lhs.true25.for.inc_crit_edge, label %for.end

land.lhs.true25.for.inc_crit_edge:                ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true25.for.inc_crit_edge, %if.end21.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge, %land.lhs.true15.for.inc_crit_edge
  %29 = ptrtoint ptr %map.079 to i32
  call void @__asan_load4_noabort(i32 %29)
  %map.0 = load ptr, ptr %map.079, align 4
  %cmp.not = icmp eq ptr %map.0, @regulator_map_list
  br i1 %cmp.not, label %for.inc.for.end.thread_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.for.end.thread_crit_edge:                 ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end.thread

for.end:                                          ; preds = %land.lhs.true25
  %regulator.le = getelementptr inbounds %struct.regulator_map, ptr %map.079, i32 0, i32 3
  %30 = ptrtoint ptr %regulator.le to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %regulator.le, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  %tobool36.not = icmp eq ptr %31, null
  br i1 %tobool36.not, label %for.end.if.end38_crit_edge, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.end.if.end38_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end38

if.end38:                                         ; preds = %for.end.if.end38_crit_edge, %for.end.thread
  %call.i = tail call ptr @class_find_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef %supply.addr.0, ptr noundef nonnull @regulator_match) #25
  %tobool.not.i63 = icmp eq ptr %call.i, null
  %add.ptr.i.i = getelementptr i8, ptr %call.i, i32 -264
  %tobool40.not74 = icmp eq ptr %add.ptr.i.i, null
  %tobool40.not = or i1 %tobool.not.i63, %tobool40.not74
  %spec.select73 = select i1 %tobool40.not, ptr inttoptr (i32 -19 to ptr), ptr %add.ptr.i.i
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %for.end.cleanup_crit_edge, %if.then3
  %retval.0 = phi ptr [ %31, %for.end.cleanup_crit_edge ], [ %spec.select, %if.then3 ], [ %spec.select73, %if.end38 ]
  ret ptr %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @regulator_resolve_supply(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %parent = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13, i32 1
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 8
  %supply_name = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 16
  %2 = ptrtoint ptr %supply_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %supply_name, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %4 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %supply, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call = tail call fastcc ptr @regulator_dev_lookup(ptr noundef %1, ptr noundef nonnull %3)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then7, label %if.end4.if.end17_crit_edge

if.end4.if.end17_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end17

if.then7:                                         ; preds = %if.end4
  %cmp = icmp eq ptr %call, inttoptr (i32 -517 to ptr)
  br i1 %cmp, label %if.then7.cleanup_crit_edge, label %if.end10

if.then7.cleanup_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end10:                                         ; preds = %if.then7
  %.b1.i = load i1, ptr @has_full_constraints, align 1
  br i1 %.b1.i, label %if.end10.if.then12_crit_edge, label %have_full_constraints.exit

if.end10.if.then12_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then12

have_full_constraints.exit:                       ; preds = %if.end10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @of_root to i32))
  %6 = load ptr, ptr @of_root, align 4
  %cmp.i.i.not = icmp eq ptr %6, null
  br i1 %cmp.i.i.not, label %do.end, label %have_full_constraints.exit.if.then12_crit_edge

have_full_constraints.exit.if.then12_crit_edge:   ; preds = %have_full_constraints.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then12

if.then12:                                        ; preds = %have_full_constraints.exit.if.then12_crit_edge, %if.end10.if.then12_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @dummy_regulator_rdev to i32))
  %7 = load ptr, ptr @dummy_regulator_rdev, align 4
  %dev13 = getelementptr inbounds %struct.regulator_dev, ptr %7, i32 0, i32 13
  %call14 = tail call ptr @get_device(ptr noundef %dev13) #25
  br label %if.end17

do.end:                                           ; preds = %have_full_constraints.exit
  call void @__sanitizer_cov_trace_pc() #27
  %8 = ptrtoint ptr %supply_name to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %supply_name, align 8
  %10 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rdev, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %1, ptr noundef nonnull @.str.85, ptr noundef %9, ptr noundef %13) #30
  br label %cleanup

if.end17:                                         ; preds = %if.then12, %if.end4.if.end17_crit_edge
  %r.0 = phi ptr [ %7, %if.then12 ], [ %call, %if.end4.if.end17_crit_edge ]
  %cmp18 = icmp eq ptr %r.0, %rdev
  br i1 %cmp18, label %do.end22, label %if.end17.if.end31_crit_edge

if.end17.if.end31_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end31

do.end22:                                         ; preds = %if.end17
  %14 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rdev, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %18 = ptrtoint ptr %supply_name to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %supply_name, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %1, ptr noundef nonnull @.str.88, ptr noundef %17, ptr noundef %19) #30
  %.b1.i114 = load i1, ptr @has_full_constraints, align 1
  br i1 %.b1.i114, label %do.end22.if.end28_crit_edge, label %have_full_constraints.exit117

do.end22.if.end28_crit_edge:                      ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end28

have_full_constraints.exit117:                    ; preds = %do.end22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @of_root to i32))
  %20 = load ptr, ptr @of_root, align 4
  %cmp.i.i115.not = icmp eq ptr %20, null
  br i1 %cmp.i.i115.not, label %have_full_constraints.exit117.cleanup_crit_edge, label %have_full_constraints.exit117.if.end28_crit_edge

have_full_constraints.exit117.if.end28_crit_edge: ; preds = %have_full_constraints.exit117
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end28

have_full_constraints.exit117.cleanup_crit_edge:  ; preds = %have_full_constraints.exit117
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end28:                                         ; preds = %have_full_constraints.exit117.if.end28_crit_edge, %do.end22.if.end28_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @dummy_regulator_rdev to i32))
  %21 = load ptr, ptr @dummy_regulator_rdev, align 4
  %dev29 = getelementptr inbounds %struct.regulator_dev, ptr %21, i32 0, i32 13
  %call30 = tail call ptr @get_device(ptr noundef %dev29) #25
  br label %if.end31

if.end31:                                         ; preds = %if.end28, %if.end17.if.end31_crit_edge
  %r.1 = phi ptr [ %21, %if.end28 ], [ %r.0, %if.end17.if.end31_crit_edge ]
  %dev32 = getelementptr inbounds %struct.regulator_dev, ptr %r.1, i32 0, i32 13
  %parent33 = getelementptr inbounds %struct.regulator_dev, ptr %r.1, i32 0, i32 13, i32 1
  %22 = ptrtoint ptr %parent33 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %parent33, align 8
  %tobool34.not = icmp eq ptr %23, null
  br i1 %tobool34.not, label %if.end31.if.end47_crit_edge, label %land.lhs.true

if.end31.if.end47_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end47

land.lhs.true:                                    ; preds = %if.end31
  %24 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %parent, align 8
  %cmp39.not = icmp eq ptr %23, %25
  br i1 %cmp39.not, label %land.lhs.true.if.end47_crit_edge, label %if.then40

land.lhs.true.if.end47_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end47

if.then40:                                        ; preds = %land.lhs.true
  %call43 = tail call zeroext i1 @device_is_bound(ptr noundef nonnull %23) #25
  br i1 %call43, label %if.then40.if.end47_crit_edge, label %if.then44

if.then40.if.end47_crit_edge:                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end47

if.then44:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @put_device(ptr noundef %dev32) #25
  br label %cleanup

if.end47:                                         ; preds = %if.then40.if.end47_crit_edge, %land.lhs.true.if.end47_crit_edge, %if.end31.if.end47_crit_edge
  %call48 = tail call fastcc i32 @regulator_resolve_supply(ptr noundef %r.1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %cmp49 = icmp slt i32 %call48, 0
  br i1 %cmp49, label %if.then50, label %if.end52

if.then50:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @put_device(ptr noundef %dev32) #25
  br label %cleanup

if.end52:                                         ; preds = %if.end47
  tail call fastcc void @regulator_lock(ptr noundef %rdev)
  %26 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %supply, align 4
  %tobool54.not = icmp eq ptr %27, null
  br i1 %tobool54.not, label %if.end57, label %if.then55

if.then55:                                        ; preds = %if.end52
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %28 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %29, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i118 = icmp eq i32 %dec.i, 0
  br i1 %cmp.i118, label %if.then.i, label %if.then55.if.end.i_crit_edge

if.then55.if.end.i_crit_edge:                     ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %30 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %31 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then55.if.end.i_crit_edge
  %32 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.then55.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp2.i = icmp slt i32 %32, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  tail call void @put_device(ptr noundef %dev32) #25
  br label %cleanup

if.end57:                                         ; preds = %if.end52
  %call58 = tail call fastcc i32 @set_supply(ptr noundef %rdev, ptr noundef %r.1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %cmp59 = icmp slt i32 %call58, 0
  tail call fastcc void @regulator_unlock(ptr noundef %rdev)
  br i1 %cmp59, label %if.then60, label %if.end62

if.then60:                                        ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @put_device(ptr noundef %dev32) #25
  br label %cleanup

if.end62:                                         ; preds = %if.end57
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 2
  %33 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool63.not = icmp eq i32 %34, 0
  br i1 %tobool63.not, label %if.end62.cleanup_crit_edge, label %if.then64

if.end62.cleanup_crit_edge:                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then64:                                        ; preds = %if.end62
  %35 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %supply, align 4
  %call66 = tail call i32 @regulator_enable(ptr noundef %36)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66)
  %cmp67 = icmp slt i32 %call66, 0
  br i1 %cmp67, label %if.then68, label %if.then64.cleanup_crit_edge

if.then64.cleanup_crit_edge:                      ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then68:                                        ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #27
  %37 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %supply, align 4
  tail call fastcc void @_regulator_put(ptr noundef %38)
  %39 = ptrtoint ptr %supply to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %supply, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then68, %if.then64.cleanup_crit_edge, %if.end62.cleanup_crit_edge, %if.then60, %regulator_unlock.exit, %if.then50, %if.then44, %have_full_constraints.exit117.cleanup_crit_edge, %do.end, %if.then7.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ -517, %if.then7.cleanup_crit_edge ], [ %call48, %if.then50 ], [ %call48, %regulator_unlock.exit ], [ %call58, %if.then60 ], [ %call66, %if.then68 ], [ %call66, %if.then64.cleanup_crit_edge ], [ %call58, %if.end62.cleanup_crit_edge ], [ -517, %if.then44 ], [ -517, %do.end ], [ -22, %have_full_constraints.exit117.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @create_regulator(ptr noundef %rdev, ptr noundef %dev, ptr noundef %supply_name) unnamed_addr #0 align 64 {
entry:
  %buf = alloca [64 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %buf) #25
  %0 = call ptr @memset(ptr %buf, i32 255, i32 64)
  %1 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dev, align 8
  %call = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %buf, i32 noundef 64, ptr noundef nonnull @.str.93, ptr noundef %2, ptr noundef %supply_name)
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %call)
  %cmp = icmp sgt i32 %call, 63
  br i1 %cmp, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %buf) #25
  br label %cleanup82

cleanup:                                          ; preds = %if.then
  %call3 = call noalias ptr @kstrdup(ptr noundef nonnull %buf, i32 noundef 3264) #25
  %cmp4.not = icmp eq ptr %call3, null
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %buf) #25
  br i1 %cmp4.not, label %cleanup.cleanup82_crit_edge, label %cleanup.if.end12_crit_edge

cleanup.if.end12_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end12

cleanup.cleanup82_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup82

if.else:                                          ; preds = %entry
  %call8 = tail call ptr @kstrdup_const(ptr noundef %supply_name, i32 noundef 3264) #25
  %cmp9 = icmp eq ptr %call8, null
  br i1 %cmp9, label %if.else.cleanup82_crit_edge, label %if.else.if.end12_crit_edge

if.else.if.end12_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end12

if.else.cleanup82_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup82

if.end12:                                         ; preds = %if.else.if.end12_crit_edge, %cleanup.if.end12_crit_edge
  %supply_name.addr.1 = phi ptr [ %call3, %cleanup.if.end12_crit_edge ], [ %call8, %if.else.if.end12_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 108) #31
  %cmp14 = icmp eq ptr %call7.i.i, null
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #27
  call void @kfree(ptr noundef nonnull %supply_name.addr.1) #25
  br label %cleanup82

if.end16:                                         ; preds = %if.end12
  %rdev17 = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 9
  %4 = ptrtoint ptr %rdev17 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %rdev, ptr %rdev17, align 4
  %supply_name18 = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 7
  %5 = ptrtoint ptr %supply_name18 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %supply_name.addr.1, ptr %supply_name18, align 4
  call fastcc void @regulator_lock(ptr noundef %rdev)
  %list = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 1
  %consumer_list = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 6
  %6 = ptrtoint ptr %consumer_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %consumer_list, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %consumer_list, ptr noundef %7) #25
  br i1 %call.i.i, label %if.end.i.i, label %if.end16.list_add.exit_crit_edge

if.end16.list_add.exit_crit_edge:                 ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #27
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %list, ptr %prev1.i.i, align 4
  %9 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %7, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %consumer_list, ptr %prev3.i.i, align 8
  %11 = ptrtoint ptr %consumer_list to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %list, ptr %consumer_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end16.list_add.exit_crit_edge
  call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %12 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %13, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %list_add.exit.if.end.i_crit_edge

list_add.exit.if.end.i_crit_edge:                 ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %14 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 9
  call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %15 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %list_add.exit.if.end.i_crit_edge
  %16 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %list_add.exit.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp2.i = icmp slt i32 %16, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br i1 %tobool.not, label %regulator_unlock.exit.if.then42_crit_edge, label %if.then20

regulator_unlock.exit.if.then42_crit_edge:        ; preds = %regulator_unlock.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then42

if.then20:                                        ; preds = %regulator_unlock.exit
  %17 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %dev, ptr %call7.i.i, align 8
  %dev22 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13
  %call25 = call i32 @sysfs_create_link_nowarn(ptr noundef %dev22, ptr noundef nonnull %dev, ptr noundef nonnull %supply_name.addr.1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.then20.if.then42_crit_edge, label %do.body

if.then20.if.then42_crit_edge:                    ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then42

do.body:                                          ; preds = %if.then20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_regulator.__UNIQUE_ID_ddebug362, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@create_regulator, %if.end40)) #25
          to label %if.then33 [label %if.end40], !srcloc !997

if.then33:                                        ; preds = %do.body
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %18 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %if.then33.if.else.i_crit_edge, label %land.lhs.true.i

if.then33.if.else.i_crit_edge:                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then33
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %tobool2.not.i = icmp eq ptr %21, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then33.if.else.i_crit_edge
  %22 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rdev, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %tobool6.not.i = icmp eq ptr %25, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %25
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i126 = phi ptr [ %21, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %26 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev, align 8
  %28 = inttoptr i32 %call25 to ptr
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @create_regulator.__UNIQUE_ID_ddebug362, ptr noundef nonnull @.str.95, ptr noundef %retval.0.i126, ptr noundef %27, ptr noundef nonnull %28) #25
  br label %if.end40

if.end40:                                         ; preds = %rdev_get_name.exit, %do.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call25)
  %cmp41.not = icmp eq i32 %call25, -17
  br i1 %cmp41.not, label %if.end40.if.end45_crit_edge, label %if.end40.if.then42_crit_edge

if.end40.if.then42_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then42

if.end40.if.end45_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end45

if.then42:                                        ; preds = %if.end40.if.then42_crit_edge, %if.then20.if.then42_crit_edge, %regulator_unlock.exit.if.then42_crit_edge
  %debugfs = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 20
  %29 = ptrtoint ptr %debugfs to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %debugfs, align 8
  %call43 = call ptr @debugfs_create_dir(ptr noundef nonnull %supply_name.addr.1, ptr noundef %30) #25
  %debugfs44 = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 10
  %31 = ptrtoint ptr %debugfs44 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call43, ptr %debugfs44, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.then42, %if.end40.if.end45_crit_edge
  %debugfs46 = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 10
  %32 = ptrtoint ptr %debugfs46 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %debugfs46, align 8
  %tobool47.not = icmp eq ptr %33, null
  br i1 %tobool47.not, label %do.body49, label %if.else68

do.body49:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_regulator.__UNIQUE_ID_ddebug363, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@create_regulator, %if.end76)) #25
          to label %if.then63 [label %if.end76], !srcloc !997

if.then63:                                        ; preds = %do.body49
  %constraints.i127 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %34 = ptrtoint ptr %constraints.i127 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %constraints.i127, align 8
  %tobool.not.i128 = icmp eq ptr %35, null
  br i1 %tobool.not.i128, label %if.then63.if.else.i133_crit_edge, label %land.lhs.true.i130

if.then63.if.else.i133_crit_edge:                 ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i133

land.lhs.true.i130:                               ; preds = %if.then63
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %tobool2.not.i129 = icmp eq ptr %37, null
  br i1 %tobool2.not.i129, label %land.lhs.true.i130.if.else.i133_crit_edge, label %land.lhs.true.i130.rdev_get_name.exit135_crit_edge

land.lhs.true.i130.rdev_get_name.exit135_crit_edge: ; preds = %land.lhs.true.i130
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit135

land.lhs.true.i130.if.else.i133_crit_edge:        ; preds = %land.lhs.true.i130
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i133

if.else.i133:                                     ; preds = %land.lhs.true.i130.if.else.i133_crit_edge, %if.then63.if.else.i133_crit_edge
  %38 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %rdev, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %tobool6.not.i131 = icmp eq ptr %41, null
  %.str..i132 = select i1 %tobool6.not.i131, ptr @.str, ptr %41
  br label %rdev_get_name.exit135

rdev_get_name.exit135:                            ; preds = %if.else.i133, %land.lhs.true.i130.rdev_get_name.exit135_crit_edge
  %retval.0.i134 = phi ptr [ %37, %land.lhs.true.i130.rdev_get_name.exit135_crit_edge ], [ %.str..i132, %if.else.i133 ]
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @create_regulator.__UNIQUE_ID_ddebug363, ptr noundef nonnull @.str.96, ptr noundef %retval.0.i134) #25
  br label %if.end76

if.else68:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #27
  %uA_load = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 3
  call void @debugfs_create_u32(ptr noundef nonnull @.str.97, i16 noundef zeroext 292, ptr noundef nonnull %33, ptr noundef %uA_load) #25
  %42 = ptrtoint ptr %debugfs46 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %debugfs46, align 8
  %voltage = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 6
  call void @debugfs_create_u32(ptr noundef nonnull @.str.98, i16 noundef zeroext 292, ptr noundef %43, ptr noundef %voltage) #25
  %44 = ptrtoint ptr %debugfs46 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %debugfs46, align 8
  %max_uV = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 6, i32 0, i32 1
  call void @debugfs_create_u32(ptr noundef nonnull @.str.99, i16 noundef zeroext 292, ptr noundef %45, ptr noundef %max_uV) #25
  %46 = ptrtoint ptr %debugfs46 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %debugfs46, align 8
  %call75 = call ptr @debugfs_create_file(ptr noundef nonnull @.str.100, i16 noundef zeroext 292, ptr noundef %47, ptr noundef nonnull %call7.i.i, ptr noundef nonnull @constraint_flags_fops) #25
  br label %if.end76

if.end76:                                         ; preds = %if.else68, %rdev_get_name.exit135, %do.body49
  %constraints.i136 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %48 = ptrtoint ptr %constraints.i136 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %constraints.i136, align 8
  %tobool.not.i137 = icmp eq ptr %49, null
  br i1 %tobool.not.i137, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #27
  %50 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %rdev, align 8
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %51, align 4
  %tobool6.not.i.i = icmp eq ptr %53, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %53
  %call1.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %land.lhs.true

regulator_ops_is_valid.exit:                      ; preds = %if.end76
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %49, i32 0, i32 11
  %54 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %55, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.land.lhs.true_crit_edge, label %regulator_ops_is_valid.exit.cleanup82_crit_edge

regulator_ops_is_valid.exit.cleanup82_crit_edge:  ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup82

regulator_ops_is_valid.exit.land.lhs.true_crit_edge: ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %regulator_ops_is_valid.exit.land.lhs.true_crit_edge, %regulator_ops_is_valid.exit.thread
  %ena_pin.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 21
  %56 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i140 = icmp eq ptr %57, null
  br i1 %tobool.not.i140, label %if.end.i142, label %if.then.i141

if.then.i141:                                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 22
  %58 = ptrtoint ptr %ena_gpio_state.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %bf.load.i = load i8, ptr %ena_gpio_state.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %_regulator_is_enabled.exit

if.end.i142:                                      ; preds = %land.lhs.true
  %59 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %rdev, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %60, i32 0, i32 10
  %61 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.regulator_ops, ptr %62, i32 0, i32 16
  %63 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %is_enabled.i, align 4
  %tobool1.not.i = icmp eq ptr %64, null
  br i1 %tobool1.not.i, label %if.end.i142.if.then80_crit_edge, label %if.end3.i

if.end.i142.if.then80_crit_edge:                  ; preds = %if.end.i142
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then80

if.end3.i:                                        ; preds = %if.end.i142
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = call i32 %64(ptr noundef %rdev) #25
  br label %_regulator_is_enabled.exit

_regulator_is_enabled.exit:                       ; preds = %if.end3.i, %if.then.i141
  %retval.0.i143 = phi i32 [ %bf.cast.i, %if.then.i141 ], [ %call.i, %if.end3.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i143)
  %tobool79.not = icmp eq i32 %retval.0.i143, 0
  br i1 %tobool79.not, label %_regulator_is_enabled.exit.cleanup82_crit_edge, label %_regulator_is_enabled.exit.if.then80_crit_edge

_regulator_is_enabled.exit.if.then80_crit_edge:   ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then80

_regulator_is_enabled.exit.cleanup82_crit_edge:   ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup82

if.then80:                                        ; preds = %_regulator_is_enabled.exit.if.then80_crit_edge, %if.end.i142.if.then80_crit_edge
  %always_on = getelementptr inbounds %struct.regulator, ptr %call7.i.i, i32 0, i32 2
  %65 = ptrtoint ptr %always_on to i32
  call void @__asan_load1_noabort(i32 %65)
  %bf.load = load i8, ptr %always_on, align 4
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %always_on, align 4
  br label %cleanup82

cleanup82:                                        ; preds = %if.then80, %_regulator_is_enabled.exit.cleanup82_crit_edge, %regulator_ops_is_valid.exit.cleanup82_crit_edge, %if.then15, %if.else.cleanup82_crit_edge, %cleanup.cleanup82_crit_edge, %cleanup.thread
  %retval.1 = phi ptr [ null, %if.then15 ], [ null, %cleanup.cleanup82_crit_edge ], [ null, %if.else.cleanup82_crit_edge ], [ %call7.i.i, %if.then80 ], [ %call7.i.i, %_regulator_is_enabled.exit.cleanup82_crit_edge ], [ %call7.i.i, %regulator_ops_is_valid.exit.cleanup82_crit_edge ], [ null, %cleanup.thread ]
  ret ptr %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @device_link_add(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @regulator_get(ptr noundef %dev, ptr noundef %id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @_regulator_get(ptr noundef %dev, ptr noundef %id, i32 noundef 0)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @regulator_get_exclusive(ptr noundef %dev, ptr noundef %id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @_regulator_get(ptr noundef %dev, ptr noundef %id, i32 noundef 1)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @regulator_get_optional(ptr noundef %dev, ptr noundef %id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @_regulator_get(ptr noundef %dev, ptr noundef %id, i32 noundef 2)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @regulator_put(ptr noundef %regulator) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  tail call fastcc void @_regulator_put(ptr noundef %regulator)
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @_regulator_put(ptr noundef %regulator) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %regulator, null
  %cmp.i = icmp ugt ptr %regulator, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i
  br i1 %spec.select.i, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %do.body.if.end35_crit_edge, label %land.rhs

do.body.if.end35_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

land.rhs:                                         ; preds = %do.body
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @regulator_list_mutex, i32 0, i32 5), i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %land.rhs5, label %land.rhs.if.end35_crit_edge

land.rhs.if.end35_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

land.rhs5:                                        ; preds = %land.rhs
  %.b84 = load i1, ptr @_regulator_put.__already_done, align 1
  br i1 %.b84, label %land.rhs5.if.end35_crit_edge, label %if.then12, !prof !993

land.rhs5.if.end35_crit_edge:                     ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

if.then12:                                        ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @_regulator_put.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2254, i32 noundef 9, ptr noundef null) #25
  br label %if.end35

if.end35:                                         ; preds = %if.then12, %land.rhs5.if.end35_crit_edge, %land.rhs.if.end35_crit_edge, %do.body.if.end35_crit_edge
  %enable_count = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 4
  %1 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool46.not = icmp eq i32 %2, 0
  br i1 %tobool46.not, label %if.end35.if.end68_crit_edge, label %do.end62, !prof !993

if.end35.if.end68_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end68

do.end62:                                         ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2257, i32 noundef 9, ptr noundef null) #25
  br label %if.end68

if.end68:                                         ; preds = %do.end62, %if.end35.if.end68_crit_edge
  %rdev76 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %3 = ptrtoint ptr %rdev76 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rdev76, align 4
  %debugfs.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 10
  %5 = ptrtoint ptr %debugfs.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %debugfs.i, align 4
  tail call void @debugfs_remove(ptr noundef %6) #25
  %7 = ptrtoint ptr %regulator to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %regulator, align 4
  %tobool.not.i86 = icmp eq ptr %8, null
  br i1 %tobool.not.i86, label %if.end68.if.end7.i_crit_edge, label %if.then.i

if.end68.if.end7.i_crit_edge:                     ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i

if.then.i:                                        ; preds = %if.end68
  %device_link.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 2
  %9 = ptrtoint ptr %device_link.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load.i = load i8, ptr %device_link.i, align 4
  %10 = and i8 %bf.load.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool2.not.i = icmp eq i8 %10, 0
  br i1 %tobool2.not.i, label %if.then.i.if.end.i_crit_edge, label %if.then3.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then3.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  %dev5.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 13
  tail call void @device_link_remove(ptr noundef nonnull %8, ptr noundef %dev5.i) #25
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i.if.end.i_crit_edge
  %dev6.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 13
  %supply_name.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 7
  %11 = ptrtoint ptr %supply_name.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %supply_name.i, align 4
  tail call void @sysfs_remove_link(ptr noundef %dev6.i, ptr noundef %12) #25
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.end.i, %if.end68.if.end7.i_crit_edge
  tail call fastcc void @regulator_lock(ptr noundef %4) #25
  %list.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list.i) #25
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end7.i.list_del.exit.i_crit_edge

if.end7.i.list_del.exit.i_crit_edge:              ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 1, i32 1
  %13 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i.i, align 4
  %15 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.end7.i.list_del.exit.i_crit_edge
  %19 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 256 to ptr), ptr %list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %open_count.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 3
  %21 = ptrtoint ptr %open_count.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %open_count.i, align 4
  %dec.i = add i32 %22, -1
  store i32 %dec.i, ptr %open_count.i, align 4
  %exclusive.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 1
  %23 = ptrtoint ptr %exclusive.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %exclusive.i, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 11
  %24 = ptrtoint ptr %ref_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %ref_cnt.i.i, align 8
  %dec.i.i = add i32 %25, -1
  store i32 %dec.i.i, ptr %ref_cnt.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %cmp.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %list_del.exit.i.if.end.i.i_crit_edge

list_del.exit.i.if.end.i.i_crit_edge:             ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 10
  %26 = ptrtoint ptr %mutex_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %mutex_owner.i.i, align 4
  %mutex.i.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i.i) #25
  %27 = ptrtoint ptr %ref_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pr.i.i = load i32, ptr %ref_cnt.i.i, align 8
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %list_del.exit.i.if.end.i.i_crit_edge
  %28 = phi i32 [ %.pr.i.i, %if.then.i.i ], [ %dec.i.i, %list_del.exit.i.if.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp2.i.i = icmp slt i32 %28, 0
  br i1 %cmp2.i.i, label %land.rhs.i.i, label %if.end.i.i.destroy_regulator.exit_crit_edge

if.end.i.i.destroy_regulator.exit_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %destroy_regulator.exit

land.rhs.i.i:                                     ; preds = %if.end.i.i
  %.b44.i.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i.i, label %land.rhs.i.i.destroy_regulator.exit_crit_edge, label %if.then9.i.i, !prof !993

land.rhs.i.i.destroy_regulator.exit_crit_edge:    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %destroy_regulator.exit

if.then9.i.i:                                     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %destroy_regulator.exit

destroy_regulator.exit:                           ; preds = %if.then9.i.i, %land.rhs.i.i.destroy_regulator.exit_crit_edge, %if.end.i.i.destroy_regulator.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %supply_name8.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 7
  %29 = ptrtoint ptr %supply_name8.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %supply_name8.i, align 4
  tail call void @kfree_const(ptr noundef %30) #25
  tail call void @kfree(ptr noundef nonnull %regulator) #25
  %owner = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 12
  %31 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %owner, align 4
  tail call void @module_put(ptr noundef %32) #25
  %dev = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 13
  tail call void @put_device(ptr noundef %dev) #25
  br label %cleanup

cleanup:                                          ; preds = %destroy_regulator.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_register_supply_alias(ptr noundef %dev, ptr noundef %id, ptr noundef %alias_dev, ptr noundef %alias_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %map.011.i = load ptr, ptr @regulator_supply_alias_list, align 4
  %cmp.not12.i = icmp eq ptr %map.011.i, @regulator_supply_alias_list
  br i1 %cmp.not12.i, label %entry.if.end_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %map.013.i = phi ptr [ %map.0.i, %for.inc.i.for.body.i_crit_edge ], [ %map.011.i, %entry.for.body.i_crit_edge ]
  %src_dev.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i, i32 0, i32 1
  %0 = ptrtoint ptr %src_dev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %src_dev.i, align 4
  %cmp1.i = icmp eq ptr %1, %dev
  br i1 %cmp1.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %src_supply.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i, i32 0, i32 2
  %2 = ptrtoint ptr %src_supply.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %src_supply.i, align 4
  %call.i = tail call i32 @strcmp(ptr noundef %3, ptr noundef %id) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp2.i = icmp eq i32 %call.i, 0
  br i1 %cmp2.i, label %regulator_find_supply_alias.exit, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %4 = ptrtoint ptr %map.013.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %map.0.i = load ptr, ptr %map.013.i, align 4
  %cmp.not.i = icmp eq ptr %map.0.i, @regulator_supply_alias_list
  br i1 %cmp.not.i, label %for.inc.i.if.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i

for.inc.i.if.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

regulator_find_supply_alias.exit:                 ; preds = %land.lhs.true.i
  %tobool.not = icmp eq ptr %map.013.i, null
  br i1 %tobool.not, label %regulator_find_supply_alias.exit.if.end_crit_edge, label %regulator_find_supply_alias.exit.cleanup_crit_edge

regulator_find_supply_alias.exit.cleanup_crit_edge: ; preds = %regulator_find_supply_alias.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

regulator_find_supply_alias.exit.if.end_crit_edge: ; preds = %regulator_find_supply_alias.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.end:                                           ; preds = %regulator_find_supply_alias.exit.if.end_crit_edge, %for.inc.i.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %5 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %5, i32 noundef 3520, i32 noundef 24) #31
  %tobool2.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %src_dev = getelementptr inbounds %struct.regulator_supply_alias, ptr %call7.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %src_dev to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %dev, ptr %src_dev, align 8
  %src_supply = getelementptr inbounds %struct.regulator_supply_alias, ptr %call7.i.i, i32 0, i32 2
  %7 = ptrtoint ptr %src_supply to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %id, ptr %src_supply, align 4
  %alias_dev5 = getelementptr inbounds %struct.regulator_supply_alias, ptr %call7.i.i, i32 0, i32 3
  %8 = ptrtoint ptr %alias_dev5 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %alias_dev, ptr %alias_dev5, align 8
  %alias_supply = getelementptr inbounds %struct.regulator_supply_alias, ptr %call7.i.i, i32 0, i32 4
  %9 = ptrtoint ptr %alias_supply to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %alias_id, ptr %alias_supply, align 4
  %10 = load ptr, ptr @regulator_supply_alias_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @regulator_supply_alias_list, ptr noundef %10) #25
  br i1 %call.i.i, label %if.end.i.i, label %if.end4.list_add.exit_crit_edge

if.end4.list_add.exit_crit_edge:                  ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #27
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call7.i.i, ptr %prev1.i.i, align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %10, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @regulator_supply_alias_list, ptr %prev3.i.i, align 4
  store volatile ptr %call7.i.i, ptr @regulator_supply_alias_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end4.list_add.exit_crit_edge
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %14 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %if.end.i, label %list_add.exit.dev_name.exit_crit_edge

list_add.exit.dev_name.exit_crit_edge:            ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %dev_name.exit

if.end.i:                                         ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #27
  %16 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %list_add.exit.dev_name.exit_crit_edge
  %retval.0.i21 = phi ptr [ %17, %if.end.i ], [ %15, %list_add.exit.dev_name.exit_crit_edge ]
  %init_name.i22 = getelementptr inbounds %struct.device, ptr %alias_dev, i32 0, i32 3
  %18 = ptrtoint ptr %init_name.i22 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %init_name.i22, align 8
  %tobool.not.i23 = icmp eq ptr %19, null
  br i1 %tobool.not.i23, label %if.end.i24, label %dev_name.exit.dev_name.exit26_crit_edge

dev_name.exit.dev_name.exit26_crit_edge:          ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %dev_name.exit26

if.end.i24:                                       ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  %20 = ptrtoint ptr %alias_dev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %alias_dev, align 4
  br label %dev_name.exit26

dev_name.exit26:                                  ; preds = %if.end.i24, %dev_name.exit.dev_name.exit26_crit_edge
  %retval.0.i25 = phi ptr [ %21, %if.end.i24 ], [ %19, %dev_name.exit.dev_name.exit26_crit_edge ]
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26, ptr noundef %id, ptr noundef %retval.0.i21, ptr noundef %alias_id, ptr noundef %retval.0.i25) #30
  br label %cleanup

cleanup:                                          ; preds = %dev_name.exit26, %if.end.cleanup_crit_edge, %regulator_find_supply_alias.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %dev_name.exit26 ], [ -17, %regulator_find_supply_alias.exit.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @regulator_unregister_supply_alias(ptr noundef readnone %dev, ptr nocapture noundef readonly %id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %map.011.i = load ptr, ptr @regulator_supply_alias_list, align 4
  %cmp.not12.i = icmp eq ptr %map.011.i, @regulator_supply_alias_list
  br i1 %cmp.not12.i, label %entry.if.end_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %map.013.i = phi ptr [ %map.0.i, %for.inc.i.for.body.i_crit_edge ], [ %map.011.i, %entry.for.body.i_crit_edge ]
  %src_dev.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i, i32 0, i32 1
  %0 = ptrtoint ptr %src_dev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %src_dev.i, align 4
  %cmp1.i = icmp eq ptr %1, %dev
  br i1 %cmp1.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %src_supply.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i, i32 0, i32 2
  %2 = ptrtoint ptr %src_supply.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %src_supply.i, align 4
  %call.i = tail call i32 @strcmp(ptr noundef %3, ptr noundef %id) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp2.i = icmp eq i32 %call.i, 0
  br i1 %cmp2.i, label %regulator_find_supply_alias.exit, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %4 = ptrtoint ptr %map.013.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %map.0.i = load ptr, ptr %map.013.i, align 4
  %cmp.not.i = icmp eq ptr %map.0.i, @regulator_supply_alias_list
  br i1 %cmp.not.i, label %for.inc.i.if.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i

for.inc.i.if.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

regulator_find_supply_alias.exit:                 ; preds = %land.lhs.true.i
  %tobool.not = icmp eq ptr %map.013.i, null
  br i1 %tobool.not, label %regulator_find_supply_alias.exit.if.end_crit_edge, label %if.then

regulator_find_supply_alias.exit.if.end_crit_edge: ; preds = %regulator_find_supply_alias.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.then:                                          ; preds = %regulator_find_supply_alias.exit
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %map.013.i) #25
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %map.013.i, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %map.013.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %map.013.i, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %6, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %11 = ptrtoint ptr %map.013.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 256 to ptr), ptr %map.013.i, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %map.013.i, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef nonnull %map.013.i) #25
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %regulator_find_supply_alias.exit.if.end_crit_edge, %for.inc.i.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_bulk_register_supply_alias(ptr noundef %dev, ptr nocapture noundef readonly %id, ptr noundef %alias_dev, ptr nocapture noundef readonly %alias_id, i32 noundef %num_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_id)
  %cmp37 = icmp sgt i32 %num_id, 0
  br i1 %cmp37, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.038 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr ptr, ptr %id, i32 %i.038
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %arrayidx1 = getelementptr ptr, ptr %alias_id, i32 %i.038
  %2 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx1, align 4
  %call = tail call i32 @regulator_register_supply_alias(ptr noundef %dev, ptr noundef %1, ptr noundef %alias_dev, ptr noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp2 = icmp slt i32 %call, 0
  br i1 %cmp2, label %do.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.038, 1
  %exitcond.not = icmp eq i32 %inc, %num_id
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.end:                                           ; preds = %for.body
  %arrayidx.le = getelementptr ptr, ptr %id, i32 %i.038
  %arrayidx1.le = getelementptr ptr, ptr %alias_id, i32 %i.038
  %4 = ptrtoint ptr %arrayidx.le to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.le, align 4
  %init_name.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 3
  %6 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end.i, label %do.end.dev_name.exit_crit_edge

do.end.dev_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.end.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %9, %if.end.i ], [ %7, %do.end.dev_name.exit_crit_edge ]
  %10 = ptrtoint ptr %arrayidx1.le to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx1.le, align 4
  %init_name.i25 = getelementptr inbounds %struct.device, ptr %alias_dev, i32 0, i32 3
  %12 = ptrtoint ptr %init_name.i25 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %init_name.i25, align 8
  %tobool.not.i26 = icmp eq ptr %13, null
  br i1 %tobool.not.i26, label %if.end.i27, label %dev_name.exit.dev_name.exit29_crit_edge

dev_name.exit.dev_name.exit29_crit_edge:          ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %dev_name.exit29

if.end.i27:                                       ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  %14 = ptrtoint ptr %alias_dev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %alias_dev, align 4
  br label %dev_name.exit29

dev_name.exit29:                                  ; preds = %if.end.i27, %dev_name.exit.dev_name.exit29_crit_edge
  %retval.0.i28 = phi ptr [ %15, %if.end.i27 ], [ %13, %dev_name.exit.dev_name.exit29_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.28, ptr noundef %5, ptr noundef %retval.0.i, ptr noundef %11, ptr noundef %retval.0.i28) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.038)
  %cmp740.not = icmp eq i32 %i.038, 0
  br i1 %cmp740.not, label %dev_name.exit29.cleanup_crit_edge, label %dev_name.exit29.while.body_crit_edge

dev_name.exit29.while.body_crit_edge:             ; preds = %dev_name.exit29
  br label %while.body

dev_name.exit29.cleanup_crit_edge:                ; preds = %dev_name.exit29
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

while.body:                                       ; preds = %regulator_unregister_supply_alias.exit.while.body_crit_edge, %dev_name.exit29.while.body_crit_edge
  %dec41.in = phi i32 [ %dec41, %regulator_unregister_supply_alias.exit.while.body_crit_edge ], [ %i.038, %dev_name.exit29.while.body_crit_edge ]
  %dec41 = add nsw i32 %dec41.in, -1
  %arrayidx8 = getelementptr ptr, ptr %id, i32 %dec41
  %16 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx8, align 4
  %map.011.i.i = load ptr, ptr @regulator_supply_alias_list, align 4
  %cmp.not12.i.i = icmp eq ptr %map.011.i.i, @regulator_supply_alias_list
  br i1 %cmp.not12.i.i, label %while.body.regulator_unregister_supply_alias.exit_crit_edge, label %while.body.for.body.i.i_crit_edge

while.body.for.body.i.i_crit_edge:                ; preds = %while.body
  br label %for.body.i.i

while.body.regulator_unregister_supply_alias.exit_crit_edge: ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unregister_supply_alias.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %while.body.for.body.i.i_crit_edge
  %map.013.i.i = phi ptr [ %map.0.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %map.011.i.i, %while.body.for.body.i.i_crit_edge ]
  %src_dev.i.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %src_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %src_dev.i.i, align 4
  %cmp1.i.i = icmp eq ptr %19, %dev
  br i1 %cmp1.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %src_supply.i.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 2
  %20 = ptrtoint ptr %src_supply.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %src_supply.i.i, align 4
  %call.i.i = tail call i32 @strcmp(ptr noundef %21, ptr noundef %17) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp2.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp2.i.i, label %regulator_find_supply_alias.exit.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %22 = ptrtoint ptr %map.013.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %map.0.i.i = load ptr, ptr %map.013.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %map.0.i.i, @regulator_supply_alias_list
  br i1 %cmp.not.i.i, label %for.inc.i.i.regulator_unregister_supply_alias.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i.i

for.inc.i.i.regulator_unregister_supply_alias.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unregister_supply_alias.exit

regulator_find_supply_alias.exit.i:               ; preds = %land.lhs.true.i.i
  %tobool.not.i30 = icmp eq ptr %map.013.i.i, null
  br i1 %tobool.not.i30, label %regulator_find_supply_alias.exit.i.regulator_unregister_supply_alias.exit_crit_edge, label %if.then.i

regulator_find_supply_alias.exit.i.regulator_unregister_supply_alias.exit_crit_edge: ; preds = %regulator_find_supply_alias.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unregister_supply_alias.exit

if.then.i:                                        ; preds = %regulator_find_supply_alias.exit.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %map.013.i.i) #25
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.list_del.exit.i_crit_edge

if.then.i.list_del.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %map.013.i.i, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i.i.i, align 4
  %25 = ptrtoint ptr %map.013.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %map.013.i.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %prev1.i.i.i.i, align 4
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %26, ptr %24, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then.i.list_del.exit.i_crit_edge
  %29 = ptrtoint ptr %map.013.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 256 to ptr), ptr %map.013.i.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %map.013.i.i, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef nonnull %map.013.i.i) #25
  br label %regulator_unregister_supply_alias.exit

regulator_unregister_supply_alias.exit:           ; preds = %list_del.exit.i, %regulator_find_supply_alias.exit.i.regulator_unregister_supply_alias.exit_crit_edge, %for.inc.i.i.regulator_unregister_supply_alias.exit_crit_edge, %while.body.regulator_unregister_supply_alias.exit_crit_edge
  %cmp7 = icmp sgt i32 %dec41.in, 1
  br i1 %cmp7, label %regulator_unregister_supply_alias.exit.while.body_crit_edge, label %regulator_unregister_supply_alias.exit.cleanup_crit_edge

regulator_unregister_supply_alias.exit.cleanup_crit_edge: ; preds = %regulator_unregister_supply_alias.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

regulator_unregister_supply_alias.exit.while.body_crit_edge: ; preds = %regulator_unregister_supply_alias.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %while.body

cleanup:                                          ; preds = %regulator_unregister_supply_alias.exit.cleanup_crit_edge, %dev_name.exit29.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %dev_name.exit29.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ %call, %regulator_unregister_supply_alias.exit.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @regulator_bulk_unregister_supply_alias(ptr noundef readnone %dev, ptr nocapture noundef readonly %id, i32 noundef %num_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_id)
  %cmp5 = icmp sgt i32 %num_id, 0
  br i1 %cmp5, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %regulator_unregister_supply_alias.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %i.06 = phi i32 [ %inc, %regulator_unregister_supply_alias.exit.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr ptr, ptr %id, i32 %i.06
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %map.011.i.i = load ptr, ptr @regulator_supply_alias_list, align 4
  %cmp.not12.i.i = icmp eq ptr %map.011.i.i, @regulator_supply_alias_list
  br i1 %cmp.not12.i.i, label %for.body.regulator_unregister_supply_alias.exit_crit_edge, label %for.body.for.body.i.i_crit_edge

for.body.for.body.i.i_crit_edge:                  ; preds = %for.body
  br label %for.body.i.i

for.body.regulator_unregister_supply_alias.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unregister_supply_alias.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.for.body.i.i_crit_edge
  %map.013.i.i = phi ptr [ %map.0.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %map.011.i.i, %for.body.for.body.i.i_crit_edge ]
  %src_dev.i.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 1
  %2 = ptrtoint ptr %src_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %src_dev.i.i, align 4
  %cmp1.i.i = icmp eq ptr %3, %dev
  br i1 %cmp1.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %src_supply.i.i = getelementptr inbounds %struct.regulator_supply_alias, ptr %map.013.i.i, i32 0, i32 2
  %4 = ptrtoint ptr %src_supply.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %src_supply.i.i, align 4
  %call.i.i = tail call i32 @strcmp(ptr noundef %5, ptr noundef %1) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp2.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp2.i.i, label %regulator_find_supply_alias.exit.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %6 = ptrtoint ptr %map.013.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %map.0.i.i = load ptr, ptr %map.013.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %map.0.i.i, @regulator_supply_alias_list
  br i1 %cmp.not.i.i, label %for.inc.i.i.regulator_unregister_supply_alias.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i.i

for.inc.i.i.regulator_unregister_supply_alias.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unregister_supply_alias.exit

regulator_find_supply_alias.exit.i:               ; preds = %land.lhs.true.i.i
  %tobool.not.i = icmp eq ptr %map.013.i.i, null
  br i1 %tobool.not.i, label %regulator_find_supply_alias.exit.i.regulator_unregister_supply_alias.exit_crit_edge, label %if.then.i

regulator_find_supply_alias.exit.i.regulator_unregister_supply_alias.exit_crit_edge: ; preds = %regulator_find_supply_alias.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unregister_supply_alias.exit

if.then.i:                                        ; preds = %regulator_find_supply_alias.exit.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %map.013.i.i) #25
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.list_del.exit.i_crit_edge

if.then.i.list_del.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %map.013.i.i, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i.i, align 4
  %9 = ptrtoint ptr %map.013.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %map.013.i.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then.i.list_del.exit.i_crit_edge
  %13 = ptrtoint ptr %map.013.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %map.013.i.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %map.013.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef nonnull %map.013.i.i) #25
  br label %regulator_unregister_supply_alias.exit

regulator_unregister_supply_alias.exit:           ; preds = %list_del.exit.i, %regulator_find_supply_alias.exit.i.regulator_unregister_supply_alias.exit_crit_edge, %for.inc.i.i.regulator_unregister_supply_alias.exit_crit_edge, %for.body.regulator_unregister_supply_alias.exit_crit_edge
  %inc = add nuw nsw i32 %i.06, 1
  %exitcond.not = icmp eq i32 %inc, %num_id
  br i1 %exitcond.not, label %regulator_unregister_supply_alias.exit.for.end_crit_edge, label %regulator_unregister_supply_alias.exit.for.body_crit_edge

regulator_unregister_supply_alias.exit.for.body_crit_edge: ; preds = %regulator_unregister_supply_alias.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

regulator_unregister_supply_alias.exit.for.end_crit_edge: ; preds = %regulator_unregister_supply_alias.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %regulator_unregister_supply_alias.exit.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_enable(ptr nocapture noundef %regulator) #0 align 64 {
entry:
  %ww_ctx = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx) #25
  %2 = call ptr @memset(ptr %ww_ctx, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %1, ptr noundef nonnull %ww_ctx)
  %call = call fastcc i32 @_regulator_enable(ptr noundef %regulator)
  %n_coupled.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 3
  %3 = ptrtoint ptr %n_coupled.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %n_coupled.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %1, i32 noundef %4) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx) #25
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @regulator_lock_dependent(ptr nocapture noundef readonly %rdev, ptr noundef %ww_ctx) unnamed_addr #0 align 64 {
entry:
  %new_contended_rdev = alloca ptr, align 4
  %old_contended_rdev = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new_contended_rdev) #25
  %0 = ptrtoint ptr %new_contended_rdev to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %new_contended_rdev, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old_contended_rdev) #25
  %1 = ptrtoint ptr %old_contended_rdev to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %old_contended_rdev, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  %2 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %6 = ptrtoint ptr %ww_ctx to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %ww_ctx, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @regulator_ww_class, i32 noundef 4) #25
  tail call void @llvm.prefetch.p0(ptr nonnull @regulator_ww_class, i32 1, i32 3, i32 1) #25
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @regulator_ww_class, ptr nonnull @regulator_ww_class, i32 1, ptr nonnull elementtype(i32) @regulator_ww_class) #25, !srcloc !998
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %7, 0
  %stamp3.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 1
  %8 = ptrtoint ptr %stamp3.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %asmresult.i.i.i.i.i, ptr %stamp3.i, align 4
  %acquired.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 2
  %9 = ptrtoint ptr %acquired.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %acquired.i, align 4
  %wounded.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 3
  %10 = ptrtoint ptr %wounded.i to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 0, ptr %wounded.i, align 4
  %11 = load i32, ptr getelementptr inbounds (%struct.ww_class, ptr @regulator_ww_class, i32 0, i32 5), align 4
  %conv.i = trunc i32 %11 to i16
  %is_wait_die4.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 4
  %12 = ptrtoint ptr %is_wait_die4.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv.i, ptr %is_wait_die4.i, align 2
  %ww_class5.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 6
  %13 = ptrtoint ptr %ww_class5.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @regulator_ww_class, ptr %ww_class5.i, align 4
  %done_acquire.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 5
  %14 = ptrtoint ptr %done_acquire.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %done_acquire.i, align 4
  %contending_lock.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 7
  %15 = ptrtoint ptr %contending_lock.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %contending_lock.i, align 4
  tail call void @debug_check_no_locks_freed(ptr noundef %ww_ctx, i32 noundef 64) #25
  %dep_map.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 8
  %16 = load ptr, ptr getelementptr inbounds (%struct.ww_class, ptr @regulator_ww_class, i32 0, i32 3), align 4
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef %16, ptr noundef getelementptr inbounds (%struct.ww_class, ptr @regulator_ww_class, i32 0, i32 1), i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #25
  %17 = tail call ptr @llvm.returnaddress(i32 0) #25
  %18 = ptrtoint ptr %17 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %18) #25
  %deadlock_inject_interval.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 9
  %19 = ptrtoint ptr %deadlock_inject_interval.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 1, ptr %deadlock_inject_interval.i, align 4
  %20 = ptrtoint ptr %stamp3.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %stamp3.i, align 4
  %and.i = and i32 %21, 15
  %deadlock_inject_countdown.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 10
  %22 = ptrtoint ptr %deadlock_inject_countdown.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %and.i, ptr %deadlock_inject_countdown.i, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %entry
  %23 = ptrtoint ptr %new_contended_rdev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %new_contended_rdev, align 4
  %tobool.not = icmp eq ptr %24, null
  br i1 %tobool.not, label %do.body.if.end_crit_edge, label %if.then

do.body.if.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.then:                                          ; preds = %do.body
  %mutex = getelementptr inbounds %struct.regulator_dev, ptr %24, i32 0, i32 9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %25 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.then.ww_mutex_lock_slow.exit_crit_edge

if.then.ww_mutex_lock_slow.exit_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_mutex_lock_slow.exit

land.lhs.true.i:                                  ; preds = %if.then
  %26 = ptrtoint ptr %contending_lock.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %contending_lock.i, align 4
  %tobool1.not.i = icmp eq ptr %27, null
  br i1 %tobool1.not.i, label %do.end.i, label %land.lhs.true.i.ww_mutex_lock_slow.exit_crit_edge, !prof !994

land.lhs.true.i.ww_mutex_lock_slow.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_mutex_lock_slow.exit

do.end.i:                                         ; preds = %land.lhs.true.i
  %call.i = tail call i32 @debug_locks_off() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool5.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool5.not.i, label %do.end.i.ww_mutex_lock_slow.exit_crit_edge, label %land.lhs.true6.i

do.end.i.ww_mutex_lock_slow.exit_crit_edge:       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_mutex_lock_slow.exit

land.lhs.true6.i:                                 ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %28 = load i32, ptr @debug_locks_silent, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool7.not.i = icmp eq i32 %28, 0
  br i1 %tobool7.not.i, label %do.end20.i, label %land.lhs.true6.i.ww_mutex_lock_slow.exit_crit_edge

land.lhs.true6.i.ww_mutex_lock_slow.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_mutex_lock_slow.exit

do.end20.i:                                       ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.102, i32 noundef 297, i32 noundef 9, ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.104) #25
  br label %ww_mutex_lock_slow.exit

ww_mutex_lock_slow.exit:                          ; preds = %do.end20.i, %land.lhs.true6.i.ww_mutex_lock_slow.exit_crit_edge, %do.end.i.ww_mutex_lock_slow.exit_crit_edge, %land.lhs.true.i.ww_mutex_lock_slow.exit_crit_edge, %if.then.ww_mutex_lock_slow.exit_crit_edge
  %call38.i = tail call i32 @ww_mutex_lock(ptr noundef %mutex, ptr noundef %ww_ctx) #25
  %29 = ptrtoint ptr %old_contended_rdev to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %24, ptr %old_contended_rdev, align 4
  %ref_cnt = getelementptr inbounds %struct.regulator_dev, ptr %24, i32 0, i32 11
  %30 = ptrtoint ptr %ref_cnt to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ref_cnt, align 8
  %inc = add i32 %31, 1
  store i32 %inc, ptr %ref_cnt, align 8
  br label %if.end

if.end:                                           ; preds = %ww_mutex_lock_slow.exit, %do.body.if.end_crit_edge
  %call = call fastcc i32 @regulator_lock_recursive(ptr noundef %rdev, ptr noundef nonnull %new_contended_rdev, ptr noundef nonnull %old_contended_rdev, ptr noundef %ww_ctx)
  %32 = ptrtoint ptr %old_contended_rdev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %old_contended_rdev, align 4
  %tobool1.not = icmp eq ptr %33, null
  br i1 %tobool1.not, label %if.end.do.cond_crit_edge, label %if.then2

if.end.do.cond_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.cond

if.then2:                                         ; preds = %if.end
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %33, i32 0, i32 11
  %34 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %35, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.then2.if.end.i_crit_edge

if.then2.if.end.i_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %33, i32 0, i32 10
  %36 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %33, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %37 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then2.if.end.i_crit_edge
  %38 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.then2.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %cmp2.i = icmp slt i32 %38, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %do.cond

do.cond:                                          ; preds = %regulator_unlock.exit, %if.end.do.cond_crit_edge
  %cmp = icmp eq i32 %call, -35
  br i1 %cmp, label %do.cond.do.body_crit_edge, label %do.end

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body

do.end:                                           ; preds = %do.cond
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %39 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.not.i9 = icmp eq i32 %39, 0
  br i1 %tobool.not.i9, label %do.end.if.end.i13_crit_edge, label %land.rhs.i11

do.end.if.end.i13_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i13

land.rhs.i11:                                     ; preds = %do.end
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i12, label %land.rhs.i11.if.end.i13_crit_edge, !prof !994

land.rhs.i11.if.end.i13_crit_edge:                ; preds = %land.rhs.i11
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i13

do.end.i12:                                       ; preds = %land.rhs.i11
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.102, i32 noundef 171, i32 noundef 9, ptr noundef null) #25
  br label %if.end.i13

if.end.i13:                                       ; preds = %do.end.i12, %land.rhs.i11.if.end.i13_crit_edge, %do.end.if.end.i13_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %40 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool24.not.i = icmp eq i32 %40, 0
  br i1 %tobool24.not.i, label %land.lhs.true.i15, label %if.end.i13.ww_acquire_done.exit_crit_edge

if.end.i13.ww_acquire_done.exit_crit_edge:        ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_acquire_done.exit

land.lhs.true.i15:                                ; preds = %if.end.i13
  %41 = ptrtoint ptr %done_acquire.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %done_acquire.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool25.not.i = icmp eq i32 %42, 0
  br i1 %tobool25.not.i, label %land.lhs.true.i15.ww_acquire_done.exit_crit_edge, label %do.end35.i, !prof !993

land.lhs.true.i15.ww_acquire_done.exit_crit_edge: ; preds = %land.lhs.true.i15
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_acquire_done.exit

do.end35.i:                                       ; preds = %land.lhs.true.i15
  %call36.i = tail call i32 @debug_locks_off() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36.i)
  %tobool37.not.i = icmp eq i32 %call36.i, 0
  br i1 %tobool37.not.i, label %do.end35.i.ww_acquire_done.exit_crit_edge, label %land.lhs.true38.i

do.end35.i.ww_acquire_done.exit_crit_edge:        ; preds = %do.end35.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_acquire_done.exit

land.lhs.true38.i:                                ; preds = %do.end35.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %43 = load i32, ptr @debug_locks_silent, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool39.not.i = icmp eq i32 %43, 0
  br i1 %tobool39.not.i, label %do.end53.i, label %land.lhs.true38.i.ww_acquire_done.exit_crit_edge

land.lhs.true38.i.ww_acquire_done.exit_crit_edge: ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_acquire_done.exit

do.end53.i:                                       ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.102, i32 noundef 173, i32 noundef 9, ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.107) #25
  br label %ww_acquire_done.exit

ww_acquire_done.exit:                             ; preds = %do.end53.i, %land.lhs.true38.i.ww_acquire_done.exit_crit_edge, %do.end35.i.ww_acquire_done.exit_crit_edge, %land.lhs.true.i15.ww_acquire_done.exit_crit_edge, %if.end.i13.ww_acquire_done.exit_crit_edge
  %44 = ptrtoint ptr %done_acquire.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 1, ptr %done_acquire.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old_contended_rdev) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_contended_rdev) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_enable(ptr nocapture noundef %regulator) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end33_crit_edge, label %land.rhs

entry.if.end33_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9, i32 0, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %land.rhs5, label %land.rhs.if.end33_crit_edge

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

land.rhs5:                                        ; preds = %land.rhs
  %.b131 = load i1, ptr @_regulator_enable.__already_done, align 1
  br i1 %.b131, label %land.rhs5.if.end33_crit_edge, label %if.then, !prof !993

land.rhs5.if.end33_crit_edge:                     ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

if.then:                                          ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @_regulator_enable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2732, i32 noundef 9, ptr noundef null) #25
  br label %if.end33

if.end33:                                         ; preds = %if.then, %land.rhs5.if.end33_crit_edge, %land.rhs.if.end33_crit_edge, %entry.if.end33_crit_edge
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp43 = icmp eq i32 %4, 0
  br i1 %cmp43, label %land.lhs.true, label %if.end33.if.end51_crit_edge

if.end33.if.end51_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end51

land.lhs.true:                                    ; preds = %if.end33
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 15
  %5 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %supply, align 4
  %tobool44.not = icmp eq ptr %6, null
  br i1 %tobool44.not, label %land.lhs.true.if.end51_crit_edge, label %if.then45

land.lhs.true.if.end51_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end51

if.then45:                                        ; preds = %land.lhs.true
  %call47 = tail call fastcc i32 @_regulator_enable(ptr noundef nonnull %6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %cmp48 = icmp slt i32 %call47, 0
  br i1 %cmp48, label %if.then45.cleanup_crit_edge, label %if.then45.if.end51_crit_edge

if.then45.if.end51_crit_edge:                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end51

if.then45.cleanup_crit_edge:                      ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end51:                                         ; preds = %if.then45.if.end51_crit_edge, %land.lhs.true.if.end51_crit_edge, %if.end33.if.end51_crit_edge
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 3
  %7 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp52 = icmp sgt i32 %8, 1
  br i1 %cmp52, label %if.then53, label %if.end51.if.end58_crit_edge

if.end51.if.end58_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end58

if.then53:                                        ; preds = %if.end51
  %coupler1.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 1
  %9 = ptrtoint ptr %coupler1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %coupler1.i, align 4
  %n_resolved.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 2
  %11 = ptrtoint ptr %n_resolved.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %n_resolved.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %8)
  %cmp2.i = icmp slt i32 %12, %8
  br i1 %cmp2.i, label %do.end.i, label %if.end5.i

do.end.i:                                         ; preds = %if.then53
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %13 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %constraints.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %tobool2.not.i.i = icmp eq ptr %16, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.regulator_balance_voltage.exit.thread_crit_edge

land.lhs.true.i.i.regulator_balance_voltage.exit.thread_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_balance_voltage.exit.thread

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %1, align 8
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 4
  %tobool6.not.i.i = icmp eq ptr %20, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %20
  br label %regulator_balance_voltage.exit.thread

regulator_balance_voltage.exit.thread:            ; preds = %if.else.i.i, %land.lhs.true.i.i.regulator_balance_voltage.exit.thread_crit_edge
  %retval.0.i.i = phi ptr [ %16, %land.lhs.true.i.i.regulator_balance_voltage.exit.thread_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef %retval.0.i.i) #30
  br label %err_disable_supply

if.end5.i:                                        ; preds = %if.then53
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %if.end5.i.if.end10.i_crit_edge, label %land.lhs.true.i

if.end5.i.if.end10.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

land.lhs.true.i:                                  ; preds = %if.end5.i
  %balance_voltage.i = getelementptr inbounds %struct.regulator_coupler, ptr %10, i32 0, i32 3
  %21 = ptrtoint ptr %balance_voltage.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %balance_voltage.i, align 4
  %tobool6.not.i = icmp eq ptr %22, null
  br i1 %tobool6.not.i, label %land.lhs.true.i.if.end10.i_crit_edge, label %if.then7.i

land.lhs.true.i.if.end10.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

if.then7.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  %call9.i = tail call i32 %22(ptr noundef nonnull %10, ptr noundef %1, i32 noundef 0) #25
  br label %regulator_balance_voltage.exit

if.end10.i:                                       ; preds = %land.lhs.true.i.if.end10.i_crit_edge, %if.end5.i.if.end10.i_crit_edge
  %call12.i = tail call i32 @regulator_do_balance_voltage(ptr noundef %1, i32 noundef 0, i1 noundef zeroext false) #25
  br label %regulator_balance_voltage.exit

regulator_balance_voltage.exit:                   ; preds = %if.end10.i, %if.then7.i
  %retval.0.i = phi i32 [ %call9.i, %if.then7.i ], [ %call12.i, %if.end10.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp55 = icmp slt i32 %retval.0.i, 0
  br i1 %cmp55, label %regulator_balance_voltage.exit.err_disable_supply_crit_edge, label %regulator_balance_voltage.exit.if.end58_crit_edge

regulator_balance_voltage.exit.if.end58_crit_edge: ; preds = %regulator_balance_voltage.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end58

regulator_balance_voltage.exit.err_disable_supply_crit_edge: ; preds = %regulator_balance_voltage.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %err_disable_supply

if.end58:                                         ; preds = %regulator_balance_voltage.exit.if.end58_crit_edge, %if.end51.if.end58_crit_edge
  %23 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %rdev1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %25 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i133 = icmp eq i32 %25, 0
  br i1 %tobool.not.i133, label %if.end58.if.end33.i_crit_edge, label %land.rhs.i

if.end58.if.end33.i_crit_edge:                    ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33.i

land.rhs.i:                                       ; preds = %if.end58
  %dep_map.i = getelementptr inbounds %struct.regulator_dev, ptr %24, i32 0, i32 9, i32 0, i32 5
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %land.rhs5.i, label %land.rhs.i.if.end33.i_crit_edge

land.rhs.i.if.end33.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33.i

land.rhs5.i:                                      ; preds = %land.rhs.i
  %.b55.i = load i1, ptr @_regulator_handle_consumer_enable.__already_done, align 1
  br i1 %.b55.i, label %land.rhs5.i.if.end33.i_crit_edge, label %if.then.i, !prof !993

land.rhs5.i.if.end33.i_crit_edge:                 ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33.i

if.then.i:                                        ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @_regulator_handle_consumer_enable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2691, i32 noundef 9, ptr noundef null) #25
  br label %if.end33.i

if.end33.i:                                       ; preds = %if.then.i, %land.rhs5.i.if.end33.i_crit_edge, %land.rhs.i.if.end33.i_crit_edge, %if.end58.if.end33.i_crit_edge
  %enable_count.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 4
  %26 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %enable_count.i, align 4
  %inc.i = add i32 %27, 1
  store i32 %inc.i, ptr %enable_count.i, align 4
  %uA_load.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 3
  %28 = ptrtoint ptr %uA_load.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %uA_load.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool43.not.i = icmp ne i32 %29, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp45.i = icmp eq i32 %27, 0
  %or.cond.i = select i1 %tobool43.not.i, i1 %cmp45.i, i1 false
  br i1 %or.cond.i, label %_regulator_handle_consumer_enable.exit, label %if.end33.i.if.end62_crit_edge

if.end33.i.if.end62_crit_edge:                    ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end62

_regulator_handle_consumer_enable.exit:           ; preds = %if.end33.i
  %call47.i = tail call fastcc i32 @drms_uA_update(ptr noundef %24) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47.i)
  %cmp60 = icmp slt i32 %call47.i, 0
  br i1 %cmp60, label %_regulator_handle_consumer_enable.exit.err_disable_supply_crit_edge, label %_regulator_handle_consumer_enable.exit.if.end62_crit_edge

_regulator_handle_consumer_enable.exit.if.end62_crit_edge: ; preds = %_regulator_handle_consumer_enable.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end62

_regulator_handle_consumer_enable.exit.err_disable_supply_crit_edge: ; preds = %_regulator_handle_consumer_enable.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %err_disable_supply

if.end62:                                         ; preds = %_regulator_handle_consumer_enable.exit.if.end62_crit_edge, %if.end33.i.if.end62_crit_edge
  %30 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp64 = icmp eq i32 %31, 0
  br i1 %cmp64, label %if.then65, label %if.end62.if.end89_crit_edge

if.end62.if.end89_crit_edge:                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end89

if.then65:                                        ; preds = %if.end62
  %ena_pin.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 21
  %32 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i135 = icmp eq ptr %33, null
  br i1 %tobool.not.i135, label %if.end.i, label %if.then.i136

if.then.i136:                                     ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 22
  %34 = ptrtoint ptr %ena_gpio_state.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %bf.load.i = load i8, ptr %ena_gpio_state.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %_regulator_is_enabled.exit

if.end.i:                                         ; preds = %if.then65
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %36, i32 0, i32 10
  %37 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.regulator_ops, ptr %38, i32 0, i32 16
  %39 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %is_enabled.i, align 4
  %tobool1.not.i = icmp eq ptr %40, null
  br i1 %tobool1.not.i, label %if.end.i.if.end89_crit_edge, label %if.end3.i

if.end.i.if.end89_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end89

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i137 = tail call i32 %40(ptr noundef %1) #25
  br label %_regulator_is_enabled.exit

_regulator_is_enabled.exit:                       ; preds = %if.end3.i, %if.then.i136
  %retval.0.i138 = phi i32 [ %bf.cast.i, %if.then.i136 ], [ %call.i137, %if.end3.i ]
  %41 = zext i32 %retval.0.i138 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.362)
  switch i32 %retval.0.i138, label %if.else [
    i32 -22, label %_regulator_is_enabled.exit.if.then69_crit_edge
    i32 0, label %_regulator_is_enabled.exit.if.then69_crit_edge160
  ]

_regulator_is_enabled.exit.if.then69_crit_edge160: ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then69

_regulator_is_enabled.exit.if.then69_crit_edge:   ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then69

if.then69:                                        ; preds = %_regulator_is_enabled.exit.if.then69_crit_edge, %_regulator_is_enabled.exit.if.then69_crit_edge160
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %42 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i139 = icmp eq ptr %43, null
  br i1 %tobool.not.i139, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #27
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %1, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %45, align 4
  %tobool6.not.i.i140 = icmp eq ptr %47, null
  %.str..i.i141 = select i1 %tobool6.not.i.i140, ptr @.str, ptr %47
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i141) #30
  br label %err_consumer_disable

regulator_ops_is_valid.exit:                      ; preds = %if.then69
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %43, i32 0, i32 11
  %48 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %49, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.err_consumer_disable_crit_edge, label %if.end72

regulator_ops_is_valid.exit.err_consumer_disable_crit_edge: ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %err_consumer_disable

if.end72:                                         ; preds = %regulator_ops_is_valid.exit
  %call73 = tail call fastcc i32 @_regulator_do_enable(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73)
  %cmp74 = icmp slt i32 %call73, 0
  br i1 %cmp74, label %if.end72.err_consumer_disable_crit_edge, label %if.end76

if.end72.err_consumer_disable_crit_edge:          ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #27
  br label %err_consumer_disable

if.end76:                                         ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #27
  %notifier.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 8
  %call.i145 = tail call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i, i32 noundef 4096, ptr noundef null) #25
  br label %if.end89

if.else:                                          ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i138)
  %cmp78 = icmp slt i32 %retval.0.i138, 0
  br i1 %cmp78, label %do.end82, label %if.else.if.end89_crit_edge

if.else.if.end89_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end89

do.end82:                                         ; preds = %if.else
  %constraints.i146 = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %50 = ptrtoint ptr %constraints.i146 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %constraints.i146, align 8
  %tobool.not.i147 = icmp eq ptr %51, null
  br i1 %tobool.not.i147, label %do.end82.if.else.i_crit_edge, label %land.lhs.true.i148

do.end82.if.else.i_crit_edge:                     ; preds = %do.end82
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i148:                               ; preds = %do.end82
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %51, align 4
  %tobool2.not.i = icmp eq ptr %53, null
  br i1 %tobool2.not.i, label %land.lhs.true.i148.if.else.i_crit_edge, label %land.lhs.true.i148.rdev_get_name.exit_crit_edge

land.lhs.true.i148.rdev_get_name.exit_crit_edge:  ; preds = %land.lhs.true.i148
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i148.if.else.i_crit_edge:           ; preds = %land.lhs.true.i148
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i148.if.else.i_crit_edge, %do.end82.if.else.i_crit_edge
  %54 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %1, align 8
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %55, align 4
  %tobool6.not.i149 = icmp eq ptr %57, null
  %.str..i = select i1 %tobool6.not.i149, ptr @.str, ptr %57
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i148.rdev_get_name.exit_crit_edge
  %retval.0.i150 = phi ptr [ %53, %land.lhs.true.i148.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %58 = inttoptr i32 %retval.0.i138 to ptr
  %call86 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, ptr noundef %retval.0.i150, ptr noundef nonnull %58) #30
  br label %err_consumer_disable

if.end89:                                         ; preds = %if.else.if.end89_crit_edge, %if.end76, %if.end.i.if.end89_crit_edge, %if.end62.if.end89_crit_edge
  %59 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %use_count, align 8
  %inc = add i32 %60, 1
  store i32 %inc, ptr %use_count, align 8
  br label %cleanup

err_consumer_disable:                             ; preds = %rdev_get_name.exit, %if.end72.err_consumer_disable_crit_edge, %regulator_ops_is_valid.exit.err_consumer_disable_crit_edge, %regulator_ops_is_valid.exit.thread
  %ret.0 = phi i32 [ %call73, %if.end72.err_consumer_disable_crit_edge ], [ %retval.0.i138, %rdev_get_name.exit ], [ -1, %regulator_ops_is_valid.exit.err_consumer_disable_crit_edge ], [ -1, %regulator_ops_is_valid.exit.thread ]
  %call91 = tail call fastcc i32 @_regulator_handle_consumer_disable(ptr noundef %regulator)
  br label %err_disable_supply

err_disable_supply:                               ; preds = %err_consumer_disable, %_regulator_handle_consumer_enable.exit.err_disable_supply_crit_edge, %regulator_balance_voltage.exit.err_disable_supply_crit_edge, %regulator_balance_voltage.exit.thread
  %ret.1 = phi i32 [ %retval.0.i, %regulator_balance_voltage.exit.err_disable_supply_crit_edge ], [ %call47.i, %_regulator_handle_consumer_enable.exit.err_disable_supply_crit_edge ], [ %ret.0, %err_consumer_disable ], [ -1, %regulator_balance_voltage.exit.thread ]
  %61 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %cmp93 = icmp eq i32 %62, 0
  br i1 %cmp93, label %land.lhs.true94, label %err_disable_supply.cleanup_crit_edge

err_disable_supply.cleanup_crit_edge:             ; preds = %err_disable_supply
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

land.lhs.true94:                                  ; preds = %err_disable_supply
  %supply95 = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 15
  %63 = ptrtoint ptr %supply95 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %supply95, align 4
  %tobool96.not = icmp eq ptr %64, null
  br i1 %tobool96.not, label %land.lhs.true94.cleanup_crit_edge, label %if.then97

land.lhs.true94.cleanup_crit_edge:                ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then97:                                        ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #27
  %call99 = tail call fastcc i32 @_regulator_disable(ptr noundef nonnull %64)
  br label %cleanup

cleanup:                                          ; preds = %if.then97, %land.lhs.true94.cleanup_crit_edge, %err_disable_supply.cleanup_crit_edge, %if.end89, %if.then45.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end89 ], [ %call47, %if.then45.cleanup_crit_edge ], [ %ret.1, %if.then97 ], [ %ret.1, %land.lhs.true94.cleanup_crit_edge ], [ %ret.1, %err_disable_supply.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_disable(ptr nocapture noundef %regulator) #0 align 64 {
entry:
  %ww_ctx = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx) #25
  %2 = call ptr @memset(ptr %ww_ctx, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %1, ptr noundef nonnull %ww_ctx)
  %call = call fastcc i32 @_regulator_disable(ptr noundef %regulator)
  %n_coupled.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 3
  %3 = ptrtoint ptr %n_coupled.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %n_coupled.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %1, i32 noundef %4) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx) #25
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_disable(ptr nocapture noundef %regulator) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  br label %tailrecurse

tailrecurse:                                      ; preds = %land.lhs.true126.tailrecurse_crit_edge, %entry
  %regulator.tr = phi ptr [ %regulator, %entry ], [ %49, %land.lhs.true126.tailrecurse_crit_edge ]
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator.tr, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %tailrecurse.if.end33_crit_edge, label %land.rhs

tailrecurse.if.end33_crit_edge:                   ; preds = %tailrecurse
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

land.rhs:                                         ; preds = %tailrecurse
  %dep_map = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9, i32 0, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %land.rhs5, label %land.rhs.if.end33_crit_edge

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

land.rhs5:                                        ; preds = %land.rhs
  %.b165 = load i1, ptr @_regulator_disable.__already_done, align 1
  br i1 %.b165, label %land.rhs5.if.end33_crit_edge, label %if.then, !prof !993

land.rhs5.if.end33_crit_edge:                     ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

if.then:                                          ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @_regulator_disable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2850, i32 noundef 9, ptr noundef null) #25
  br label %if.end33

if.end33:                                         ; preds = %if.then, %land.rhs5.if.end33_crit_edge, %land.rhs.if.end33_crit_edge, %tailrecurse.if.end33_crit_edge
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %use_count, align 8
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.363)
  switch i32 %4, label %if.then108 [
    i32 0, label %do.end60
    i32 1, label %land.lhs.true
  ], !prof !999

do.end60:                                         ; preds = %if.end33
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %6 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %do.end60.if.else.i_crit_edge, label %land.lhs.true.i

do.end60.if.else.i_crit_edge:                     ; preds = %do.end60
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end60
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool2.not.i = icmp eq ptr %9, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end60.if.else.i_crit_edge
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %tobool6.not.i = icmp eq ptr %13, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %13
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %9, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2853, i32 noundef 9, ptr noundef nonnull @.str.123, ptr noundef %retval.0.i) #25
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end33
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %14 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %constraints, align 8
  %tobool80.not = icmp eq ptr %15, null
  br i1 %tobool80.not, label %land.lhs.true.if.end115_crit_edge, label %land.lhs.true81

land.lhs.true.if.end115_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end115

land.lhs.true81:                                  ; preds = %land.lhs.true
  %always_on = getelementptr inbounds %struct.regulation_constraints, ptr %15, i32 0, i32 28
  %16 = ptrtoint ptr %always_on to i32
  call void @__asan_load2_noabort(i32 %16)
  %bf.load = load i16, ptr %always_on, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load)
  %tobool83.not = icmp sgt i16 %bf.load, -1
  br i1 %tobool83.not, label %regulator_ops_is_valid.exit, label %land.lhs.true81.if.end115_crit_edge

land.lhs.true81.if.end115_crit_edge:              ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end115

regulator_ops_is_valid.exit:                      ; preds = %land.lhs.true81
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %15, i32 0, i32 11
  %17 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %18, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.if.end115.sink.split_crit_edge, label %if.then86

regulator_ops_is_valid.exit.if.end115.sink.split_crit_edge: ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end115.sink.split

if.then86:                                        ; preds = %regulator_ops_is_valid.exit
  %notifier.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 8
  %call.i170 = tail call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i, i32 noundef 1024, ptr noundef null) #25
  %and = and i32 %call.i170, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool88.not = icmp eq i32 %and, 0
  br i1 %tobool88.not, label %if.end90, label %if.then86.cleanup_crit_edge

if.then86.cleanup_crit_edge:                      ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end90:                                         ; preds = %if.then86
  %call91 = tail call fastcc i32 @_regulator_do_disable(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91)
  %cmp92 = icmp slt i32 %call91, 0
  br i1 %cmp92, label %do.end96, label %if.end111

do.end96:                                         ; preds = %if.end90
  %constraints.le = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %19 = ptrtoint ptr %constraints.le to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %constraints.le, align 8
  %tobool.not.i172 = icmp eq ptr %20, null
  br i1 %tobool.not.i172, label %do.end96.if.else.i177_crit_edge, label %land.lhs.true.i174

do.end96.if.else.i177_crit_edge:                  ; preds = %do.end96
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i177

land.lhs.true.i174:                               ; preds = %do.end96
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %tobool2.not.i173 = icmp eq ptr %22, null
  br i1 %tobool2.not.i173, label %land.lhs.true.i174.if.else.i177_crit_edge, label %land.lhs.true.i174.rdev_get_name.exit179_crit_edge

land.lhs.true.i174.rdev_get_name.exit179_crit_edge: ; preds = %land.lhs.true.i174
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit179

land.lhs.true.i174.if.else.i177_crit_edge:        ; preds = %land.lhs.true.i174
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i177

if.else.i177:                                     ; preds = %land.lhs.true.i174.if.else.i177_crit_edge, %do.end96.if.else.i177_crit_edge
  %23 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %1, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 4
  %tobool6.not.i175 = icmp eq ptr %26, null
  %.str..i176 = select i1 %tobool6.not.i175, ptr @.str, ptr %26
  br label %rdev_get_name.exit179

rdev_get_name.exit179:                            ; preds = %if.else.i177, %land.lhs.true.i174.rdev_get_name.exit179_crit_edge
  %retval.0.i178 = phi ptr [ %22, %land.lhs.true.i174.rdev_get_name.exit179_crit_edge ], [ %.str..i176, %if.else.i177 ]
  %27 = inttoptr i32 %call91 to ptr
  %call100 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.124, ptr noundef %retval.0.i178, ptr noundef nonnull %27) #30
  %call.i181 = tail call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i, i32 noundef 2048, ptr noundef null) #25
  br label %cleanup

if.then108:                                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #27
  %dec = add i32 %4, -1
  br label %if.end115.sink.split

if.end111:                                        ; preds = %if.end90
  %call.i183 = tail call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i, i32 noundef 128, ptr noundef null) #25
  %28 = ptrtoint ptr %use_count to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91)
  %cmp112 = icmp eq i32 %call91, 0
  br i1 %cmp112, label %if.end111.if.end115_crit_edge, label %if.end111.cleanup_crit_edge

if.end111.cleanup_crit_edge:                      ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end111.if.end115_crit_edge:                    ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end115

if.end115.sink.split:                             ; preds = %if.then108, %regulator_ops_is_valid.exit.if.end115.sink.split_crit_edge
  %dec.sink = phi i32 [ %dec, %if.then108 ], [ 0, %regulator_ops_is_valid.exit.if.end115.sink.split_crit_edge ]
  %29 = ptrtoint ptr %use_count to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %dec.sink, ptr %use_count, align 8
  br label %if.end115

if.end115:                                        ; preds = %if.end115.sink.split, %if.end111.if.end115_crit_edge, %land.lhs.true81.if.end115_crit_edge, %land.lhs.true.if.end115_crit_edge
  %call114 = tail call fastcc i32 @_regulator_handle_consumer_disable(ptr noundef %regulator.tr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114)
  %cmp116 = icmp eq i32 %call114, 0
  br i1 %cmp116, label %land.lhs.true117, label %if.end115.cleanup_crit_edge

if.end115.cleanup_crit_edge:                      ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

land.lhs.true117:                                 ; preds = %if.end115
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 3
  %30 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %31)
  %cmp118 = icmp sgt i32 %31, 1
  br i1 %cmp118, label %if.then119, label %land.lhs.true117.land.lhs.true123_crit_edge

land.lhs.true117.land.lhs.true123_crit_edge:      ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true123

if.then119:                                       ; preds = %land.lhs.true117
  %coupler1.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 1
  %32 = ptrtoint ptr %coupler1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %coupler1.i, align 4
  %n_resolved.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 2
  %34 = ptrtoint ptr %n_resolved.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %n_resolved.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %31)
  %cmp2.i = icmp slt i32 %35, %31
  br i1 %cmp2.i, label %do.end.i, label %if.end5.i

do.end.i:                                         ; preds = %if.then119
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %36 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %constraints.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %37, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 4
  %tobool2.not.i.i = icmp eq ptr %39, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i186_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i186_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i186

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %1, align 8
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %41, align 4
  %tobool6.not.i.i184 = icmp eq ptr %43, null
  %.str..i.i185 = select i1 %tobool6.not.i.i184, ptr @.str, ptr %43
  br label %rdev_get_name.exit.i186

rdev_get_name.exit.i186:                          ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i186_crit_edge
  %retval.0.i.i = phi ptr [ %39, %land.lhs.true.i.i.rdev_get_name.exit.i186_crit_edge ], [ %.str..i.i185, %if.else.i.i ]
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef %retval.0.i.i) #30
  br label %cleanup

if.end5.i:                                        ; preds = %if.then119
  %tobool.not.i187 = icmp eq ptr %33, null
  br i1 %tobool.not.i187, label %if.end5.i.if.end10.i_crit_edge, label %land.lhs.true.i189

if.end5.i.if.end10.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

land.lhs.true.i189:                               ; preds = %if.end5.i
  %balance_voltage.i = getelementptr inbounds %struct.regulator_coupler, ptr %33, i32 0, i32 3
  %44 = ptrtoint ptr %balance_voltage.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %balance_voltage.i, align 4
  %tobool6.not.i188 = icmp eq ptr %45, null
  br i1 %tobool6.not.i188, label %land.lhs.true.i189.if.end10.i_crit_edge, label %if.then7.i

land.lhs.true.i189.if.end10.i_crit_edge:          ; preds = %land.lhs.true.i189
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

if.then7.i:                                       ; preds = %land.lhs.true.i189
  call void @__sanitizer_cov_trace_pc() #27
  %call9.i = tail call i32 %45(ptr noundef nonnull %33, ptr noundef %1, i32 noundef 0) #25
  br label %if.end121

if.end10.i:                                       ; preds = %land.lhs.true.i189.if.end10.i_crit_edge, %if.end5.i.if.end10.i_crit_edge
  %call12.i = tail call i32 @regulator_do_balance_voltage(ptr noundef %1, i32 noundef 0, i1 noundef zeroext false) #25
  br label %if.end121

if.end121:                                        ; preds = %if.end10.i, %if.then7.i
  %ret.3 = phi i32 [ %call9.i, %if.then7.i ], [ %call12.i, %if.end10.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.3)
  %cmp122 = icmp eq i32 %ret.3, 0
  br i1 %cmp122, label %if.end121.land.lhs.true123_crit_edge, label %if.end121.cleanup_crit_edge

if.end121.cleanup_crit_edge:                      ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end121.land.lhs.true123_crit_edge:             ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true123

land.lhs.true123:                                 ; preds = %if.end121.land.lhs.true123_crit_edge, %land.lhs.true117.land.lhs.true123_crit_edge
  %46 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %cmp125 = icmp eq i32 %47, 0
  br i1 %cmp125, label %land.lhs.true126, label %land.lhs.true123.cleanup_crit_edge

land.lhs.true123.cleanup_crit_edge:               ; preds = %land.lhs.true123
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

land.lhs.true126:                                 ; preds = %land.lhs.true123
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 15
  %48 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %supply, align 4
  %tobool127.not = icmp eq ptr %49, null
  br i1 %tobool127.not, label %land.lhs.true126.cleanup_crit_edge, label %land.lhs.true126.tailrecurse_crit_edge

land.lhs.true126.tailrecurse_crit_edge:           ; preds = %land.lhs.true126
  call void @__sanitizer_cov_trace_pc() #27
  br label %tailrecurse

land.lhs.true126.cleanup_crit_edge:               ; preds = %land.lhs.true126
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true126.cleanup_crit_edge, %land.lhs.true123.cleanup_crit_edge, %if.end121.cleanup_crit_edge, %rdev_get_name.exit.i186, %if.end115.cleanup_crit_edge, %if.end111.cleanup_crit_edge, %rdev_get_name.exit179, %if.then86.cleanup_crit_edge, %rdev_get_name.exit
  %retval.0 = phi i32 [ -5, %rdev_get_name.exit ], [ %call91, %rdev_get_name.exit179 ], [ -1, %rdev_get_name.exit.i186 ], [ %call91, %if.end111.cleanup_crit_edge ], [ %call114, %if.end115.cleanup_crit_edge ], [ %ret.3, %if.end121.cleanup_crit_edge ], [ 0, %land.lhs.true123.cleanup_crit_edge ], [ 0, %land.lhs.true126.cleanup_crit_edge ], [ -22, %if.then86.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_force_disable(ptr nocapture noundef %regulator) #0 align 64 {
entry:
  %ww_ctx = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx) #25
  %2 = call ptr @memset(ptr %ww_ctx, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %1, ptr noundef nonnull %ww_ctx)
  %3 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rdev1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %entry.if.end32.i_crit_edge, label %land.rhs.i

entry.if.end32.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end32.i

land.rhs.i:                                       ; preds = %entry
  %dep_map.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 9, i32 0, i32 5
  %call.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %land.rhs4.i, label %land.rhs.i.if.end32.i_crit_edge

land.rhs.i.if.end32.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end32.i

land.rhs4.i:                                      ; preds = %land.rhs.i
  %.b69.i = load i1, ptr @_regulator_force_disable.__already_done, align 1
  br i1 %.b69.i, label %land.rhs4.i.if.end32.i_crit_edge, label %if.then.i, !prof !993

land.rhs4.i.if.end32.i_crit_edge:                 ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end32.i

if.then.i:                                        ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @_regulator_force_disable.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2928, i32 noundef 9, ptr noundef null) #25
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then.i, %land.rhs4.i.if.end32.i_crit_edge, %land.rhs.i.if.end32.i_crit_edge, %entry.if.end32.i_crit_edge
  %notifier.i.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 8
  %call.i71.i = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i.i, i32 noundef 1056, ptr noundef null) #25
  %and.i = and i32 %call.i71.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool43.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool43.not.i, label %if.end45.i, label %if.end32.i._regulator_force_disable.exit_crit_edge

if.end32.i._regulator_force_disable.exit_crit_edge: ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_force_disable.exit

if.end45.i:                                       ; preds = %if.end32.i
  %call46.i = call fastcc i32 @_regulator_do_disable(ptr noundef %4) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46.i)
  %cmp47.i = icmp slt i32 %call46.i, 0
  br i1 %cmp47.i, label %do.end51.i, label %if.end45.i.cleanup.sink.split.i_crit_edge

if.end45.i.cleanup.sink.split.i_crit_edge:        ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup.sink.split.i

do.end51.i:                                       ; preds = %if.end45.i
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 14
  %6 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %constraints.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %do.end51.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end51.i.if.else.i.i_crit_edge:                 ; preds = %do.end51.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end51.i
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool2.not.i.i = icmp eq ptr %9, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end51.i.if.else.i.i_crit_edge
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %4, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %tobool6.not.i.i = icmp eq ptr %13, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %13
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %9, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %14 = inttoptr i32 %call46.i to ptr
  %call55.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.126, ptr noundef %retval.0.i.i, ptr noundef nonnull %14) #30
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %rdev_get_name.exit.i, %if.end45.i.cleanup.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 2080, %rdev_get_name.exit.i ], [ 160, %if.end45.i.cleanup.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi i32 [ %call46.i, %rdev_get_name.exit.i ], [ 0, %if.end45.i.cleanup.sink.split.i_crit_edge ]
  %call.i75.i = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i.i, i32 noundef %.sink.i, ptr noundef null) #25
  br label %_regulator_force_disable.exit

_regulator_force_disable.exit:                    ; preds = %cleanup.sink.split.i, %if.end32.i._regulator_force_disable.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %if.end32.i._regulator_force_disable.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 3
  %15 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp = icmp sgt i32 %16, 1
  br i1 %cmp, label %if.then, label %_regulator_force_disable.exit.if.end_crit_edge

_regulator_force_disable.exit.if.end_crit_edge:   ; preds = %_regulator_force_disable.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.then:                                          ; preds = %_regulator_force_disable.exit
  %coupler1.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 1
  %17 = ptrtoint ptr %coupler1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %coupler1.i, align 4
  %n_resolved.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 2
  %19 = ptrtoint ptr %n_resolved.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %n_resolved.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %16)
  %cmp2.i = icmp slt i32 %20, %16
  br i1 %cmp2.i, label %do.end.i, label %if.end5.i

do.end.i:                                         ; preds = %if.then
  %constraints.i.i24 = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %21 = ptrtoint ptr %constraints.i.i24 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %constraints.i.i24, align 8
  %tobool.not.i.i25 = icmp eq ptr %22, null
  br i1 %tobool.not.i.i25, label %do.end.i.if.else.i.i30_crit_edge, label %land.lhs.true.i.i27

do.end.i.if.else.i.i30_crit_edge:                 ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i30

land.lhs.true.i.i27:                              ; preds = %do.end.i
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %tobool2.not.i.i26 = icmp eq ptr %24, null
  br i1 %tobool2.not.i.i26, label %land.lhs.true.i.i27.if.else.i.i30_crit_edge, label %land.lhs.true.i.i27.rdev_get_name.exit.i32_crit_edge

land.lhs.true.i.i27.rdev_get_name.exit.i32_crit_edge: ; preds = %land.lhs.true.i.i27
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i32

land.lhs.true.i.i27.if.else.i.i30_crit_edge:      ; preds = %land.lhs.true.i.i27
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i30

if.else.i.i30:                                    ; preds = %land.lhs.true.i.i27.if.else.i.i30_crit_edge, %do.end.i.if.else.i.i30_crit_edge
  %25 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %1, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %tobool6.not.i.i28 = icmp eq ptr %28, null
  %.str..i.i29 = select i1 %tobool6.not.i.i28, ptr @.str, ptr %28
  br label %rdev_get_name.exit.i32

rdev_get_name.exit.i32:                           ; preds = %if.else.i.i30, %land.lhs.true.i.i27.rdev_get_name.exit.i32_crit_edge
  %retval.0.i.i31 = phi ptr [ %24, %land.lhs.true.i.i27.rdev_get_name.exit.i32_crit_edge ], [ %.str..i.i29, %if.else.i.i30 ]
  %call4.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef %retval.0.i.i31) #30
  br label %if.end

if.end5.i:                                        ; preds = %if.then
  %tobool.not.i33 = icmp eq ptr %18, null
  br i1 %tobool.not.i33, label %if.end5.i.if.end10.i_crit_edge, label %land.lhs.true.i

if.end5.i.if.end10.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

land.lhs.true.i:                                  ; preds = %if.end5.i
  %balance_voltage.i = getelementptr inbounds %struct.regulator_coupler, ptr %18, i32 0, i32 3
  %29 = ptrtoint ptr %balance_voltage.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %balance_voltage.i, align 4
  %tobool6.not.i = icmp eq ptr %30, null
  br i1 %tobool6.not.i, label %land.lhs.true.i.if.end10.i_crit_edge, label %if.then7.i

land.lhs.true.i.if.end10.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

if.then7.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  %call9.i = call i32 %30(ptr noundef nonnull %18, ptr noundef %1, i32 noundef 0) #25
  br label %if.end

if.end10.i:                                       ; preds = %land.lhs.true.i.if.end10.i_crit_edge, %if.end5.i.if.end10.i_crit_edge
  %call12.i = call i32 @regulator_do_balance_voltage(ptr noundef %1, i32 noundef 0, i1 noundef zeroext false) #25
  br label %if.end

if.end:                                           ; preds = %if.end10.i, %if.then7.i, %rdev_get_name.exit.i32, %_regulator_force_disable.exit.if.end_crit_edge
  %uA_load = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 3
  %31 = ptrtoint ptr %uA_load to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %uA_load, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not = icmp eq i32 %32, 0
  br i1 %tobool.not, label %if.end.if.end7_crit_edge, label %if.then4

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %33 = ptrtoint ptr %uA_load to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %uA_load, align 4
  %call6 = call fastcc i32 @drms_uA_update(ptr noundef %1)
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge
  %ret.0 = phi i32 [ %call6, %if.then4 ], [ %retval.0.i, %if.end.if.end7_crit_edge ]
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 2
  %34 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp8.not = icmp eq i32 %35, 0
  br i1 %cmp8.not, label %if.end7.if.end13_crit_edge, label %land.lhs.true

if.end7.if.end13_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

land.lhs.true:                                    ; preds = %if.end7
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 15
  %36 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %supply, align 4
  %tobool9.not = icmp eq ptr %37, null
  br i1 %tobool9.not, label %land.lhs.true.if.end13_crit_edge, label %if.then10

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

if.then10:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  %call12 = call fastcc i32 @_regulator_disable(ptr noundef nonnull %37)
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %land.lhs.true.if.end13_crit_edge, %if.end7.if.end13_crit_edge
  %38 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %n_coupled, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %1, i32 noundef %39) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx) #25
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @drms_uA_update(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  %ww_ctx.i = alloca %struct.ww_acquire_ctx, align 4
  %mode = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mode) #25
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %0 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %2 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rdev, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool6.not.i.i = icmp eq ptr %5, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %5
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %do.body

regulator_ops_is_valid.exit:                      ; preds = %entry
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 11
  %6 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.do.body_crit_edge, label %if.end7

regulator_ops_is_valid.exit.do.body_crit_edge:    ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body

do.body:                                          ; preds = %regulator_ops_is_valid.exit.do.body_crit_edge, %regulator_ops_is_valid.exit.thread
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @drms_uA_update.__UNIQUE_ID_ddebug356, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@drms_uA_update, %cleanup)) #25
          to label %if.then5 [label %cleanup], !srcloc !997

if.then5:                                         ; preds = %do.body
  %8 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i168 = icmp eq ptr %9, null
  br i1 %tobool.not.i168, label %if.then5.if.else.i_crit_edge, label %land.lhs.true.i

if.then5.if.else.i_crit_edge:                     ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then5
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %tobool2.not.i = icmp eq ptr %11, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then5.if.else.i_crit_edge
  %12 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rdev, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %tobool6.not.i = icmp eq ptr %15, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %15
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i169 = phi ptr [ %11, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @drms_uA_update.__UNIQUE_ID_ddebug356, ptr noundef nonnull @.str.129, ptr noundef %retval.0.i169) #25
  br label %cleanup

if.end7:                                          ; preds = %regulator_ops_is_valid.exit
  %16 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rdev, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %17, i32 0, i32 10
  %18 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ops, align 4
  %get_optimum_mode = getelementptr inbounds %struct.regulator_ops, ptr %19, i32 0, i32 26
  %20 = ptrtoint ptr %get_optimum_mode to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %get_optimum_mode, align 4
  %tobool8.not = icmp eq ptr %21, null
  br i1 %tobool8.not, label %land.lhs.true, label %if.end7.if.end13_crit_edge

if.end7.if.end13_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

land.lhs.true:                                    ; preds = %if.end7
  %set_load = getelementptr inbounds %struct.regulator_ops, ptr %19, i32 0, i32 27
  %22 = ptrtoint ptr %set_load to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %set_load, align 4
  %tobool11.not = icmp eq ptr %23, null
  br i1 %tobool11.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end13_crit_edge

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end13:                                         ; preds = %land.lhs.true.if.end13_crit_edge, %if.end7.if.end13_crit_edge
  %set_mode = getelementptr inbounds %struct.regulator_ops, ptr %19, i32 0, i32 17
  %24 = ptrtoint ptr %set_mode to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %set_mode, align 4
  %tobool16.not = icmp eq ptr %25, null
  br i1 %tobool16.not, label %land.lhs.true17, label %if.end13.if.end23_crit_edge

if.end13.if.end23_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end23

land.lhs.true17:                                  ; preds = %if.end13
  %set_load20 = getelementptr inbounds %struct.regulator_ops, ptr %19, i32 0, i32 27
  %26 = ptrtoint ptr %set_load20 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %set_load20, align 4
  %tobool21.not = icmp eq ptr %27, null
  br i1 %tobool21.not, label %land.lhs.true17.cleanup_crit_edge, label %land.lhs.true17.if.end23_crit_edge

land.lhs.true17.if.end23_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end23

land.lhs.true17.cleanup_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end23:                                         ; preds = %land.lhs.true17.if.end23_crit_edge, %if.end13.if.end23_crit_edge
  %consumer_list = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 6
  %28 = ptrtoint ptr %consumer_list to i32
  call void @__asan_load4_noabort(i32 %28)
  %.pn222 = load ptr, ptr %consumer_list, align 4
  %cmp.not223 = icmp eq ptr %.pn222, %consumer_list
  br i1 %cmp.not223, label %if.end23.for.end_crit_edge, label %if.end23.for.body_crit_edge

if.end23.for.body_crit_edge:                      ; preds = %if.end23
  br label %for.body

if.end23.for.end_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end23.for.body_crit_edge
  %.pn225 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn222, %if.end23.for.body_crit_edge ]
  %current_uA.0224 = phi i32 [ %current_uA.1, %for.inc.for.body_crit_edge ], [ 0, %if.end23.for.body_crit_edge ]
  %enable_count = getelementptr i8, ptr %.pn225, i32 16
  %29 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool28.not = icmp eq i32 %30, 0
  br i1 %tobool28.not, label %for.body.for.inc_crit_edge, label %if.then29

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then29:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  %uA_load = getelementptr i8, ptr %.pn225, i32 12
  %31 = ptrtoint ptr %uA_load to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %uA_load, align 4
  %add = add i32 %32, %current_uA.0224
  br label %for.inc

for.inc:                                          ; preds = %if.then29, %for.body.for.inc_crit_edge
  %current_uA.1 = phi i32 [ %add, %if.then29 ], [ %current_uA.0224, %for.body.for.inc_crit_edge ]
  %33 = ptrtoint ptr %.pn225 to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn = load ptr, ptr %.pn225, align 4
  %cmp.not = icmp eq ptr %.pn, %consumer_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end23.for.end_crit_edge
  %current_uA.0.lcssa = phi i32 [ 0, %if.end23.for.end_crit_edge ], [ %current_uA.1, %for.inc.for.end_crit_edge ]
  %34 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %constraints.i, align 8
  %system_load = getelementptr inbounds %struct.regulation_constraints, ptr %35, i32 0, i32 7
  %36 = ptrtoint ptr %system_load to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %system_load, align 4
  %add36 = add i32 %37, %current_uA.0.lcssa
  %set_load39 = getelementptr inbounds %struct.regulator_ops, ptr %19, i32 0, i32 27
  %38 = ptrtoint ptr %set_load39 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %set_load39, align 4
  %tobool40.not = icmp eq ptr %39, null
  br i1 %tobool40.not, label %if.else, label %if.then41

if.then41:                                        ; preds = %for.end
  %call45 = tail call i32 %39(ptr noundef %rdev, i32 noundef %add36) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %cmp46 = icmp slt i32 %call45, 0
  br i1 %cmp46, label %do.end50, label %if.then41.cleanup_crit_edge

if.then41.cleanup_crit_edge:                      ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.end50:                                         ; preds = %if.then41
  %40 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i171 = icmp eq ptr %41, null
  br i1 %tobool.not.i171, label %do.end50.if.else.i176_crit_edge, label %land.lhs.true.i173

do.end50.if.else.i176_crit_edge:                  ; preds = %do.end50
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i176

land.lhs.true.i173:                               ; preds = %do.end50
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %41, align 4
  %tobool2.not.i172 = icmp eq ptr %43, null
  br i1 %tobool2.not.i172, label %land.lhs.true.i173.if.else.i176_crit_edge, label %land.lhs.true.i173.rdev_get_name.exit178_crit_edge

land.lhs.true.i173.rdev_get_name.exit178_crit_edge: ; preds = %land.lhs.true.i173
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit178

land.lhs.true.i173.if.else.i176_crit_edge:        ; preds = %land.lhs.true.i173
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i176

if.else.i176:                                     ; preds = %land.lhs.true.i173.if.else.i176_crit_edge, %do.end50.if.else.i176_crit_edge
  %44 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %rdev, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %45, align 4
  %tobool6.not.i174 = icmp eq ptr %47, null
  %.str..i175 = select i1 %tobool6.not.i174, ptr @.str, ptr %47
  br label %rdev_get_name.exit178

rdev_get_name.exit178:                            ; preds = %if.else.i176, %land.lhs.true.i173.rdev_get_name.exit178_crit_edge
  %retval.0.i177 = phi ptr [ %43, %land.lhs.true.i173.rdev_get_name.exit178_crit_edge ], [ %.str..i175, %if.else.i176 ]
  %48 = inttoptr i32 %call45 to ptr
  %call54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.130, ptr noundef %retval.0.i177, i32 noundef %add36, ptr noundef nonnull %48) #30
  br label %cleanup

if.else:                                          ; preds = %for.end
  %call56 = tail call i32 @regulator_get_voltage_rdev(ptr noundef %rdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call56)
  %cmp57 = icmp slt i32 %call56, 1
  br i1 %cmp57, label %do.end61, label %if.end65

do.end61:                                         ; preds = %if.else
  %49 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i180 = icmp eq ptr %50, null
  br i1 %tobool.not.i180, label %do.end61.if.else.i185_crit_edge, label %land.lhs.true.i182

do.end61.if.else.i185_crit_edge:                  ; preds = %do.end61
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i185

land.lhs.true.i182:                               ; preds = %do.end61
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %50, align 4
  %tobool2.not.i181 = icmp eq ptr %52, null
  br i1 %tobool2.not.i181, label %land.lhs.true.i182.if.else.i185_crit_edge, label %land.lhs.true.i182.rdev_get_name.exit187_crit_edge

land.lhs.true.i182.rdev_get_name.exit187_crit_edge: ; preds = %land.lhs.true.i182
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit187

land.lhs.true.i182.if.else.i185_crit_edge:        ; preds = %land.lhs.true.i182
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i185

if.else.i185:                                     ; preds = %land.lhs.true.i182.if.else.i185_crit_edge, %do.end61.if.else.i185_crit_edge
  %53 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %rdev, align 8
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %54, align 4
  %tobool6.not.i183 = icmp eq ptr %56, null
  %.str..i184 = select i1 %tobool6.not.i183, ptr @.str, ptr %56
  br label %rdev_get_name.exit187

rdev_get_name.exit187:                            ; preds = %if.else.i185, %land.lhs.true.i182.rdev_get_name.exit187_crit_edge
  %retval.0.i186 = phi ptr [ %52, %land.lhs.true.i182.rdev_get_name.exit187_crit_edge ], [ %.str..i184, %if.else.i185 ]
  %call64 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132, ptr noundef %retval.0.i186) #30
  br label %cleanup

if.end65:                                         ; preds = %if.else
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %57 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %supply, align 4
  %tobool66.not = icmp eq ptr %58, null
  br i1 %tobool66.not, label %if.end65.if.end75_crit_edge, label %if.end70

if.end65.if.end75_crit_edge:                      ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end75

if.end70:                                         ; preds = %if.end65
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %59 = call ptr @memset(ptr %ww_ctx.i, i32 255, i32 64)
  %rdev.i = getelementptr inbounds %struct.regulator, ptr %58, i32 0, i32 9
  %60 = ptrtoint ptr %rdev.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %rdev.i, align 4
  call fastcc void @regulator_lock_dependent(ptr noundef %61, ptr noundef nonnull %ww_ctx.i) #25
  %62 = ptrtoint ptr %rdev.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %rdev.i, align 4
  %call.i = call i32 @regulator_get_voltage_rdev(ptr noundef %63) #25
  %64 = ptrtoint ptr %rdev.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %rdev.i, align 4
  %n_coupled.i.i = getelementptr inbounds %struct.regulator_dev, ptr %65, i32 0, i32 7, i32 3
  %66 = ptrtoint ptr %n_coupled.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %n_coupled.i.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %65, i32 noundef %67) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx.i) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp71 = icmp slt i32 %call.i, 1
  br i1 %cmp71, label %if.end70.if.end75_crit_edge, label %if.end70.if.end84_crit_edge

if.end70.if.end84_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end84

if.end70.if.end75_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end75

if.end75:                                         ; preds = %if.end70.if.end75_crit_edge, %if.end65.if.end75_crit_edge
  %68 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %constraints.i, align 8
  %input_uV74 = getelementptr inbounds %struct.regulation_constraints, ptr %69, i32 0, i32 12
  %70 = ptrtoint ptr %input_uV74 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %input_uV74, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %71)
  %cmp76 = icmp slt i32 %71, 1
  br i1 %cmp76, label %do.end80, label %if.end75.if.end84_crit_edge

if.end75.if.end84_crit_edge:                      ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end84

do.end80:                                         ; preds = %if.end75
  %72 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i189 = icmp eq ptr %73, null
  br i1 %tobool.not.i189, label %do.end80.if.else.i194_crit_edge, label %land.lhs.true.i191

do.end80.if.else.i194_crit_edge:                  ; preds = %do.end80
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i194

land.lhs.true.i191:                               ; preds = %do.end80
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %73, align 4
  %tobool2.not.i190 = icmp eq ptr %75, null
  br i1 %tobool2.not.i190, label %land.lhs.true.i191.if.else.i194_crit_edge, label %land.lhs.true.i191.rdev_get_name.exit196_crit_edge

land.lhs.true.i191.rdev_get_name.exit196_crit_edge: ; preds = %land.lhs.true.i191
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit196

land.lhs.true.i191.if.else.i194_crit_edge:        ; preds = %land.lhs.true.i191
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i194

if.else.i194:                                     ; preds = %land.lhs.true.i191.if.else.i194_crit_edge, %do.end80.if.else.i194_crit_edge
  %76 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %rdev, align 8
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %77, align 4
  %tobool6.not.i192 = icmp eq ptr %79, null
  %.str..i193 = select i1 %tobool6.not.i192, ptr @.str, ptr %79
  br label %rdev_get_name.exit196

rdev_get_name.exit196:                            ; preds = %if.else.i194, %land.lhs.true.i191.rdev_get_name.exit196_crit_edge
  %retval.0.i195 = phi ptr [ %75, %land.lhs.true.i191.rdev_get_name.exit196_crit_edge ], [ %.str..i193, %if.else.i194 ]
  %call83 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %retval.0.i195) #30
  br label %cleanup

if.end84:                                         ; preds = %if.end75.if.end84_crit_edge, %if.end70.if.end84_crit_edge
  %input_uV.1221 = phi i32 [ %71, %if.end75.if.end84_crit_edge ], [ %call.i, %if.end70.if.end84_crit_edge ]
  %80 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %rdev, align 8
  %ops86 = getelementptr inbounds %struct.regulator_desc, ptr %81, i32 0, i32 10
  %82 = ptrtoint ptr %ops86 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ops86, align 4
  %get_optimum_mode87 = getelementptr inbounds %struct.regulator_ops, ptr %83, i32 0, i32 26
  %84 = ptrtoint ptr %get_optimum_mode87 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %get_optimum_mode87, align 4
  %call88 = call i32 %85(ptr noundef %rdev, i32 noundef %input_uV.1221, i32 noundef %call56, i32 noundef %add36) #25
  %86 = ptrtoint ptr %mode to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %call88, ptr %mode, align 4
  %call89 = call fastcc i32 @regulator_mode_constrain(ptr noundef %rdev, ptr noundef nonnull %mode)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89)
  %cmp90 = icmp slt i32 %call89, 0
  br i1 %cmp90, label %do.end94, label %if.end99

do.end94:                                         ; preds = %if.end84
  %87 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i198 = icmp eq ptr %88, null
  br i1 %tobool.not.i198, label %do.end94.if.else.i203_crit_edge, label %land.lhs.true.i200

do.end94.if.else.i203_crit_edge:                  ; preds = %do.end94
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i203

land.lhs.true.i200:                               ; preds = %do.end94
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %88, align 4
  %tobool2.not.i199 = icmp eq ptr %90, null
  br i1 %tobool2.not.i199, label %land.lhs.true.i200.if.else.i203_crit_edge, label %land.lhs.true.i200.rdev_get_name.exit205_crit_edge

land.lhs.true.i200.rdev_get_name.exit205_crit_edge: ; preds = %land.lhs.true.i200
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit205

land.lhs.true.i200.if.else.i203_crit_edge:        ; preds = %land.lhs.true.i200
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i203

if.else.i203:                                     ; preds = %land.lhs.true.i200.if.else.i203_crit_edge, %do.end94.if.else.i203_crit_edge
  %91 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %rdev, align 8
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %92, align 4
  %tobool6.not.i201 = icmp eq ptr %94, null
  %.str..i202 = select i1 %tobool6.not.i201, ptr @.str, ptr %94
  br label %rdev_get_name.exit205

rdev_get_name.exit205:                            ; preds = %if.else.i203, %land.lhs.true.i200.rdev_get_name.exit205_crit_edge
  %retval.0.i204 = phi ptr [ %90, %land.lhs.true.i200.rdev_get_name.exit205_crit_edge ], [ %.str..i202, %if.else.i203 ]
  %95 = inttoptr i32 %call89 to ptr
  %call98 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.138, ptr noundef %retval.0.i204, i32 noundef %add36, i32 noundef %input_uV.1221, i32 noundef %call56, ptr noundef nonnull %95) #30
  br label %cleanup

if.end99:                                         ; preds = %if.end84
  %96 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %rdev, align 8
  %ops101 = getelementptr inbounds %struct.regulator_desc, ptr %97, i32 0, i32 10
  %98 = ptrtoint ptr %ops101 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %ops101, align 4
  %set_mode102 = getelementptr inbounds %struct.regulator_ops, ptr %99, i32 0, i32 17
  %100 = ptrtoint ptr %set_mode102 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %set_mode102, align 4
  %102 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %mode, align 4
  %call103 = call i32 %101(ptr noundef %rdev, i32 noundef %103) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call103)
  %cmp104 = icmp slt i32 %call103, 0
  br i1 %cmp104, label %do.end108, label %if.end99.cleanup_crit_edge

if.end99.cleanup_crit_edge:                       ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.end108:                                        ; preds = %if.end99
  %104 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i207 = icmp eq ptr %105, null
  br i1 %tobool.not.i207, label %do.end108.if.else.i212_crit_edge, label %land.lhs.true.i209

do.end108.if.else.i212_crit_edge:                 ; preds = %do.end108
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i212

land.lhs.true.i209:                               ; preds = %do.end108
  %106 = ptrtoint ptr %105 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %105, align 4
  %tobool2.not.i208 = icmp eq ptr %107, null
  br i1 %tobool2.not.i208, label %land.lhs.true.i209.if.else.i212_crit_edge, label %land.lhs.true.i209.rdev_get_name.exit214_crit_edge

land.lhs.true.i209.rdev_get_name.exit214_crit_edge: ; preds = %land.lhs.true.i209
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit214

land.lhs.true.i209.if.else.i212_crit_edge:        ; preds = %land.lhs.true.i209
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i212

if.else.i212:                                     ; preds = %land.lhs.true.i209.if.else.i212_crit_edge, %do.end108.if.else.i212_crit_edge
  %108 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %rdev, align 8
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %109, align 4
  %tobool6.not.i210 = icmp eq ptr %111, null
  %.str..i211 = select i1 %tobool6.not.i210, ptr @.str, ptr %111
  br label %rdev_get_name.exit214

rdev_get_name.exit214:                            ; preds = %if.else.i212, %land.lhs.true.i209.rdev_get_name.exit214_crit_edge
  %retval.0.i213 = phi ptr [ %107, %land.lhs.true.i209.rdev_get_name.exit214_crit_edge ], [ %.str..i211, %if.else.i212 ]
  %112 = inttoptr i32 %call103 to ptr
  %call112 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141, ptr noundef %retval.0.i213, i32 noundef %103, ptr noundef nonnull %112) #30
  br label %cleanup

cleanup:                                          ; preds = %rdev_get_name.exit214, %if.end99.cleanup_crit_edge, %rdev_get_name.exit205, %rdev_get_name.exit196, %rdev_get_name.exit187, %rdev_get_name.exit178, %if.then41.cleanup_crit_edge, %land.lhs.true17.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %rdev_get_name.exit, %do.body
  %retval.0 = phi i32 [ -22, %rdev_get_name.exit187 ], [ -22, %rdev_get_name.exit196 ], [ %call89, %rdev_get_name.exit205 ], [ 0, %rdev_get_name.exit ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ -22, %land.lhs.true17.cleanup_crit_edge ], [ %call45, %rdev_get_name.exit178 ], [ %call45, %if.then41.cleanup_crit_edge ], [ %call103, %rdev_get_name.exit214 ], [ %call103, %if.end99.cleanup_crit_edge ], [ 0, %do.body ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mode) #25
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_disable_deferred(ptr nocapture noundef %regulator, i32 noundef %ms) #0 align 64 {
entry:
  %ww_ctx.i = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ms)
  %tobool.not = icmp eq i32 %ms, 0
  %rdev1.i = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1.i, align 4
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %2 = call ptr @memset(ptr %ww_ctx.i, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %1, ptr noundef nonnull %ww_ctx.i) #25
  %call.i = call fastcc i32 @_regulator_disable(ptr noundef %regulator) #25
  %n_coupled.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 3
  %3 = ptrtoint ptr %n_coupled.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %n_coupled.i.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %1, i32 noundef %4) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx.i) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @regulator_lock(ptr noundef %1)
  %deferred_disables = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 5
  %5 = ptrtoint ptr %deferred_disables to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %deferred_disables, align 4
  %inc = add i32 %6, 1
  store i32 %inc, ptr %deferred_disables, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_power_efficient_wq to i32))
  %7 = load ptr, ptr @system_power_efficient_wq, align 4
  %disable_work = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 18
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %ms) #25
  %call.i9 = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %7, ptr noundef %disable_work, i32 noundef %call2.i) #25
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %9, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i10 = icmp eq i32 %dec.i, 0
  br i1 %cmp.i10, label %if.then.i11, label %if.end.if.end.i12_crit_edge

if.end.if.end.i12_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i12

if.then.i11:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %10 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %11 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i12

if.end.i12:                                       ; preds = %if.then.i11, %if.end.if.end.i12_crit_edge
  %12 = phi i32 [ %.pr.i, %if.then.i11 ], [ %dec.i, %if.end.if.end.i12_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp2.i = icmp slt i32 %12, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i12.regulator_unlock.exit_crit_edge

if.end.i12.regulator_unlock.exit_crit_edge:       ; preds = %if.end.i12
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i12
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i12.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %cleanup

cleanup:                                          ; preds = %regulator_unlock.exit, %if.then
  %retval.0 = phi i32 [ 0, %regulator_unlock.exit ], [ %call.i, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @regulator_lock(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 9
  %call.i = tail call i32 @ww_mutex_trylock(ptr noundef %mutex.i, ptr noundef null) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.if.then12.i_crit_edge

entry.if.then12.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then12.i

if.then.i:                                        ; preds = %entry
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %0 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mutex_owner.i, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %1, %5
  br i1 %cmp.i, label %if.end9.thread.i, label %if.end9.i

if.end9.thread.i:                                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %6 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ref_cnt.i, align 8
  %inc.i = add i32 %7, 1
  store i32 %inc.i, ptr %ref_cnt.i, align 8
  br label %regulator_lock_nested.exit

if.end9.i:                                        ; preds = %if.then.i
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %call6.i = tail call i32 @ww_mutex_lock(ptr noundef %mutex.i, ptr noundef null) #25
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -35, i32 %call6.i)
  %cmp11.not.i = icmp eq i32 %call6.i, -35
  br i1 %cmp11.not.i, label %if.end9.i.regulator_lock_nested.exit_crit_edge, label %if.end9.i.if.then12.i_crit_edge

if.end9.i.if.then12.i_crit_edge:                  ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then12.i

if.end9.i.regulator_lock_nested.exit_crit_edge:   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_lock_nested.exit

if.then12.i:                                      ; preds = %if.end9.i.if.then12.i_crit_edge, %entry.if.then12.i_crit_edge
  %ref_cnt13.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %8 = ptrtoint ptr %ref_cnt13.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ref_cnt13.i, align 8
  %inc14.i = add i32 %9, 1
  store i32 %inc14.i, ptr %ref_cnt13.i, align 8
  %10 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i28.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i28.i to ptr
  %task16.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task16.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task16.i, align 8
  %mutex_owner17.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %14 = ptrtoint ptr %mutex_owner17.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %mutex_owner17.i, align 4
  br label %regulator_lock_nested.exit

regulator_lock_nested.exit:                       ; preds = %if.then12.i, %if.end9.i.regulator_lock_nested.exit_crit_edge, %if.end9.thread.i
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @regulator_unlock(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %0 = ptrtoint ptr %ref_cnt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ref_cnt, align 8
  %dec = add i32 %1, -1
  store i32 %dec, ptr %ref_cnt, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp = icmp eq i32 %dec, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %2 = ptrtoint ptr %mutex_owner to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %mutex_owner, align 4
  %mutex = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex) #25
  %3 = ptrtoint ptr %ref_cnt to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pr = load i32, ptr %ref_cnt, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %4 = phi i32 [ %.pr, %if.then ], [ %dec, %entry.if.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp2 = icmp slt i32 %4, 0
  br i1 %cmp2, label %land.rhs, label %if.end.if.end31_crit_edge

if.end.if.end31_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end31

land.rhs:                                         ; preds = %if.end
  %.b44 = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44, label %land.rhs.if.end31_crit_edge, label %if.then9, !prof !993

land.rhs.if.end31_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end31

if.then9:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %if.end31

if.end31:                                         ; preds = %if.then9, %land.rhs.if.end31_crit_edge, %if.end.if.end31_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_is_enabled(ptr nocapture noundef readonly %regulator) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %always_on = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 2
  %0 = ptrtoint ptr %always_on to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %always_on, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %1 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdev, align 4
  tail call fastcc void @regulator_lock(ptr noundef %2)
  %3 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rdev, align 4
  %ena_pin.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 21
  %5 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 22
  %7 = ptrtoint ptr %ena_gpio_state.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load.i = load i8, ptr %ena_gpio_state.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %_regulator_is_enabled.exit

if.end.i:                                         ; preds = %if.end
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %4, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %9, i32 0, i32 10
  %10 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.regulator_ops, ptr %11, i32 0, i32 16
  %12 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %is_enabled.i, align 4
  %tobool1.not.i = icmp eq ptr %13, null
  br i1 %tobool1.not.i, label %if.end.i._regulator_is_enabled.exit_crit_edge, label %if.end3.i

if.end.i._regulator_is_enabled.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_is_enabled.exit

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %13(ptr noundef %4) #25
  br label %_regulator_is_enabled.exit

_regulator_is_enabled.exit:                       ; preds = %if.end3.i, %if.end.i._regulator_is_enabled.exit_crit_edge, %if.then.i
  %retval.0.i = phi i32 [ %bf.cast.i, %if.then.i ], [ %call.i, %if.end3.i ], [ 1, %if.end.i._regulator_is_enabled.exit_crit_edge ]
  %14 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rdev, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %15, i32 0, i32 11
  %16 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %17, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i6, label %_regulator_is_enabled.exit.if.end.i7_crit_edge

_regulator_is_enabled.exit.if.end.i7_crit_edge:   ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i7

if.then.i6:                                       ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %15, i32 0, i32 10
  %18 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %15, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %19 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i7

if.end.i7:                                        ; preds = %if.then.i6, %_regulator_is_enabled.exit.if.end.i7_crit_edge
  %20 = phi i32 [ %.pr.i, %if.then.i6 ], [ %dec.i, %_regulator_is_enabled.exit.if.end.i7_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp2.i = icmp slt i32 %20, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i7.regulator_unlock.exit_crit_edge

if.end.i7.regulator_unlock.exit_crit_edge:        ; preds = %if.end.i7
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i7
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i7.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %cleanup

cleanup:                                          ; preds = %regulator_unlock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %regulator_unlock.exit ], [ 1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_count_voltages(ptr nocapture noundef readonly %regulator) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  br label %tailrecurse

tailrecurse:                                      ; preds = %lor.lhs.false.tailrecurse_crit_edge, %entry
  %regulator.tr = phi ptr [ %regulator, %entry ], [ %9, %lor.lhs.false.tailrecurse_crit_edge ]
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator.tr, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %n_voltages = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %n_voltages to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %n_voltages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end, label %tailrecurse.cleanup_crit_edge

tailrecurse.cleanup_crit_edge:                    ; preds = %tailrecurse
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %tailrecurse
  %is_switch = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 22
  %6 = ptrtoint ptr %is_switch to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load = load i8, ptr %is_switch, align 8
  %7 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool4.not = icmp eq i8 %7, 0
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %lor.lhs.false

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 15
  %8 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %supply, align 4
  %tobool5.not = icmp eq ptr %9, null
  br i1 %tobool5.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false.tailrecurse_crit_edge

lor.lhs.false.tailrecurse_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %tailrecurse

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %tailrecurse.cleanup_crit_edge
  %retval.0 = phi i32 [ %5, %tailrecurse.cleanup_crit_edge ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_list_voltage(ptr nocapture noundef readonly %regulator, i32 noundef %selector) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  %call = tail call fastcc i32 @_regulator_list_voltage(ptr noundef %1, i32 noundef %selector, i32 noundef 1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_list_voltage(ptr noundef %rdev, i32 noundef %selector, i32 noundef %lock) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 8
  %ops1 = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops1, align 4
  %fixed_uV = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 17
  %4 = ptrtoint ptr %fixed_uV to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fixed_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %n_voltages = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %n_voltages to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %n_voltages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp = icmp eq i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %selector)
  %tobool5.not = icmp eq i32 %selector, 0
  %or.cond = and i1 %tobool5.not, %cmp
  br i1 %or.cond, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 4
  %tobool8.not = icmp eq ptr %9, null
  br i1 %tobool8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end
  %n_voltages11 = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 8
  %10 = ptrtoint ptr %n_voltages11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %n_voltages11, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %selector)
  %cmp12.not = icmp ugt i32 %11, %selector
  br i1 %cmp12.not, label %if.end14, label %if.then9.cleanup_crit_edge

if.then9.cleanup_crit_edge:                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end14:                                         ; preds = %if.then9
  %linear_min_sel = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 16
  %12 = ptrtoint ptr %linear_min_sel to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %linear_min_sel, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %selector)
  %cmp16 = icmp ugt i32 %13, %selector
  br i1 %cmp16, label %if.end14.cleanup_crit_edge, label %if.end18

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end18:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %lock)
  %tobool19.not = icmp eq i32 %lock, 0
  br i1 %tobool19.not, label %if.end21.thread, label %if.then24

if.end21.thread:                                  ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #27
  %14 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %3, align 4
  %call72 = tail call i32 %15(ptr noundef %rdev, i32 noundef %selector) #25
  br label %if.end35

if.then24:                                        ; preds = %if.end18
  tail call fastcc void @regulator_lock(ptr noundef %rdev)
  %16 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %3, align 4
  %call = tail call i32 %17(ptr noundef %rdev, i32 noundef %selector) #25
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %18 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %19, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.then24.if.end.i_crit_edge

if.then24.if.end.i_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %20 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %21 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then24.if.end.i_crit_edge
  %22 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.then24.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp2.i = icmp slt i32 %22, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %if.end35

if.else:                                          ; preds = %if.end
  %is_switch = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 22
  %23 = ptrtoint ptr %is_switch to i32
  call void @__asan_load1_noabort(i32 %23)
  %bf.load = load i8, ptr %is_switch, align 8
  %24 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool26.not = icmp eq i8 %24, 0
  br i1 %tobool26.not, label %if.else.cleanup_crit_edge, label %land.lhs.true27

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

land.lhs.true27:                                  ; preds = %if.else
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %25 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %supply, align 4
  %tobool28.not = icmp eq ptr %26, null
  br i1 %tobool28.not, label %land.lhs.true27.cleanup_crit_edge, label %if.then29

land.lhs.true27.cleanup_crit_edge:                ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then29:                                        ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #27
  %rdev31 = getelementptr inbounds %struct.regulator, ptr %26, i32 0, i32 9
  %27 = ptrtoint ptr %rdev31 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rdev31, align 4
  %call32 = tail call fastcc i32 @_regulator_list_voltage(ptr noundef %28, i32 noundef %selector, i32 noundef %lock)
  br label %if.end35

if.end35:                                         ; preds = %if.then29, %regulator_unlock.exit, %if.end21.thread
  %ret.0 = phi i32 [ %call, %regulator_unlock.exit ], [ %call32, %if.then29 ], [ %call72, %if.end21.thread ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %cmp36 = icmp sgt i32 %ret.0, 0
  br i1 %cmp36, label %if.then37, label %if.end35.cleanup_crit_edge

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then37:                                        ; preds = %if.end35
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %29 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %constraints, align 8
  %min_uV = getelementptr inbounds %struct.regulation_constraints, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %min_uV, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %ret.0, i32 %32)
  %cmp38 = icmp slt i32 %ret.0, %32
  br i1 %cmp38, label %if.then37.cleanup_crit_edge, label %if.else40

if.then37.cleanup_crit_edge:                      ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.else40:                                        ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #27
  %max_uV = getelementptr inbounds %struct.regulation_constraints, ptr %30, i32 0, i32 2
  %33 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %max_uV, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %ret.0, i32 %34)
  %cmp42 = icmp sgt i32 %ret.0, %34
  %spec.store.select = select i1 %cmp42, i32 0, i32 %ret.0
  br label %cleanup

cleanup:                                          ; preds = %if.else40, %if.then37.cleanup_crit_edge, %if.end35.cleanup_crit_edge, %land.lhs.true27.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %if.then9.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ %5, %land.lhs.true.cleanup_crit_edge ], [ -22, %if.then9.cleanup_crit_edge ], [ 0, %if.end14.cleanup_crit_edge ], [ -22, %land.lhs.true27.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ %spec.store.select, %if.else40 ], [ %ret.0, %if.end35.cleanup_crit_edge ], [ 0, %if.then37.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @regulator_get_regmap(ptr nocapture noundef readonly %regulator) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  %regmap = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %regmap to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %regmap, align 4
  %tobool.not = icmp eq ptr %3, null
  %spec.select = select i1 %tobool.not, ptr inttoptr (i32 -95 to ptr), ptr %3
  ret ptr %spec.select
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @regulator_get_hardware_vsel_register(ptr nocapture noundef readonly %regulator, ptr nocapture noundef writeonly %vsel_reg, ptr nocapture noundef writeonly %vsel_mask) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops2 = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %ops2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops2, align 4
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %set_voltage_sel, align 4
  %cmp.not = icmp eq ptr %7, @regulator_set_voltage_sel_regmap
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %vsel_reg4 = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 27
  %8 = ptrtoint ptr %vsel_reg4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vsel_reg4, align 4
  %10 = ptrtoint ptr %vsel_reg to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %vsel_reg, align 4
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %1, align 8
  %vsel_mask6 = getelementptr inbounds %struct.regulator_desc, ptr %12, i32 0, i32 28
  %13 = ptrtoint ptr %vsel_mask6 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vsel_mask6, align 4
  %15 = ptrtoint ptr %vsel_mask to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %vsel_mask, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -95, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regulator_set_voltage_sel_regmap(ptr noundef, i32 noundef) #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @regulator_list_hardware_vsel(ptr nocapture noundef readonly %regulator, i32 noundef %selector) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops2 = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %ops2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops2, align 4
  %n_voltages = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 8
  %6 = ptrtoint ptr %n_voltages to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %n_voltages, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %selector)
  %cmp.not = icmp ugt i32 %7, %selector
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %linear_min_sel = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 16
  %8 = ptrtoint ptr %linear_min_sel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %linear_min_sel, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %selector)
  %cmp5 = icmp ugt i32 %9, %selector
  br i1 %cmp5, label %if.end.cleanup_crit_edge, label %if.end7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %5, i32 0, i32 3
  %10 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %set_voltage_sel, align 4
  %cmp8.not = icmp eq ptr %11, @regulator_set_voltage_sel_regmap
  %selector. = select i1 %cmp8.not, i32 %selector, i32 -95
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %selector., %if.end7 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @regulator_get_linear_step(ptr nocapture noundef readonly %regulator) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %uV_step = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 15
  %4 = ptrtoint ptr %uV_step to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %uV_step, align 4
  ret i32 %5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_is_supported_voltage(ptr nocapture noundef readonly %regulator, i32 noundef %min_uV, i32 noundef %max_uV) #0 align 64 {
entry:
  %ww_ctx.i = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool6.not.i.i = icmp eq ptr %7, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %7
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %if.then

regulator_ops_is_valid.exit:                      ; preds = %entry
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 11
  %8 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.if.then_crit_edge, label %if.end

regulator_ops_is_valid.exit.if.then_crit_edge:    ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then

if.then:                                          ; preds = %regulator_ops_is_valid.exit.if.then_crit_edge, %regulator_ops_is_valid.exit.thread
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %10 = call ptr @memset(ptr %ww_ctx.i, i32 255, i32 64)
  %11 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rdev1, align 4
  call fastcc void @regulator_lock_dependent(ptr noundef %12, ptr noundef nonnull %ww_ctx.i) #25
  %13 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rdev1, align 4
  %call.i = call i32 @regulator_get_voltage_rdev(ptr noundef %14) #25
  %15 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rdev1, align 4
  %n_coupled.i.i = getelementptr inbounds %struct.regulator_dev, ptr %16, i32 0, i32 7, i32 3
  %17 = ptrtoint ptr %n_coupled.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %n_coupled.i.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %16, i32 noundef %18) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx.i) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i)
  %cmp = icmp sgt i32 %call.i, -1
  br i1 %cmp, label %if.then3, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %min_uV)
  %cmp4.not = icmp sge i32 %call.i, %min_uV
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %max_uV)
  %cmp5 = icmp sle i32 %call.i, %max_uV
  %narrow = and i1 %cmp4.not, %cmp5
  %19 = zext i1 %narrow to i32
  br label %cleanup

if.end:                                           ; preds = %regulator_ops_is_valid.exit
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %1, align 8
  %continuous_voltage_range = getelementptr inbounds %struct.regulator_desc, ptr %21, i32 0, i32 7
  %22 = ptrtoint ptr %continuous_voltage_range to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load = load i8, ptr %continuous_voltage_range, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %if.end.tailrecurse.i_crit_edge, label %if.then6

if.end.tailrecurse.i_crit_edge:                   ; preds = %if.end
  br label %tailrecurse.i

if.then6:                                         ; preds = %if.end
  %23 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %constraints.i, align 8
  %min_uV7 = getelementptr inbounds %struct.regulation_constraints, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %min_uV7 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %min_uV7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %min_uV)
  %cmp8.not = icmp sgt i32 %26, %min_uV
  br i1 %cmp8.not, label %if.then6.cleanup_crit_edge, label %land.rhs9

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

land.rhs9:                                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #27
  %max_uV11 = getelementptr inbounds %struct.regulation_constraints, ptr %24, i32 0, i32 2
  %27 = ptrtoint ptr %max_uV11 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %max_uV11, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %max_uV)
  %cmp12 = icmp sge i32 %28, %max_uV
  %phi.cast48 = zext i1 %cmp12 to i32
  br label %cleanup

tailrecurse.i:                                    ; preds = %lor.lhs.false.i.tailrecurse.i_crit_edge, %if.end.tailrecurse.i_crit_edge
  %regulator.tr.i = phi ptr [ %38, %lor.lhs.false.i.tailrecurse.i_crit_edge ], [ %regulator, %if.end.tailrecurse.i_crit_edge ]
  %rdev1.i = getelementptr inbounds %struct.regulator, ptr %regulator.tr.i, i32 0, i32 9
  %29 = ptrtoint ptr %rdev1.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %rdev1.i, align 4
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 8
  %n_voltages.i = getelementptr inbounds %struct.regulator_desc, ptr %32, i32 0, i32 8
  %33 = ptrtoint ptr %n_voltages.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %n_voltages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.not.i49 = icmp eq i32 %34, 0
  br i1 %tobool.not.i49, label %if.end.i50, label %regulator_count_voltages.exit

if.end.i50:                                       ; preds = %tailrecurse.i
  %is_switch.i = getelementptr inbounds %struct.regulator_dev, ptr %30, i32 0, i32 22
  %35 = ptrtoint ptr %is_switch.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %bf.load.i = load i8, ptr %is_switch.i, align 8
  %36 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool4.not.i = icmp eq i8 %36, 0
  br i1 %tobool4.not.i, label %if.end.i50.cleanup_crit_edge, label %lor.lhs.false.i

if.end.i50.cleanup_crit_edge:                     ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %if.end.i50
  %supply.i = getelementptr inbounds %struct.regulator_dev, ptr %30, i32 0, i32 15
  %37 = ptrtoint ptr %supply.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %supply.i, align 4
  %tobool5.not.i = icmp eq ptr %38, null
  br i1 %tobool5.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %lor.lhs.false.i.tailrecurse.i_crit_edge

lor.lhs.false.i.tailrecurse.i_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %tailrecurse.i

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

regulator_count_voltages.exit:                    ; preds = %tailrecurse.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp2059 = icmp sgt i32 %34, 0
  br i1 %cmp2059, label %regulator_count_voltages.exit.for.body_crit_edge, label %regulator_count_voltages.exit.cleanup_crit_edge

regulator_count_voltages.exit.cleanup_crit_edge:  ; preds = %regulator_count_voltages.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

regulator_count_voltages.exit.for.body_crit_edge: ; preds = %regulator_count_voltages.exit
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.060, 1
  %exitcond.not = icmp eq i32 %inc, %34
  br i1 %exitcond.not, label %for.cond.cleanup_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %regulator_count_voltages.exit.for.body_crit_edge
  %i.060 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %regulator_count_voltages.exit.for.body_crit_edge ]
  %39 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rdev1, align 4
  %call.i53 = tail call fastcc i32 @_regulator_list_voltage(ptr noundef %40, i32 noundef %i.060, i32 noundef 1) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i53, i32 %min_uV)
  %cmp22.not = icmp slt i32 %call.i53, %min_uV
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i53, i32 %max_uV)
  %cmp23.not = icmp sgt i32 %call.i53, %max_uV
  %or.cond = or i1 %cmp22.not, %cmp23.not
  br i1 %or.cond, label %for.cond, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %for.cond.cleanup_crit_edge, %regulator_count_voltages.exit.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %if.end.i50.cleanup_crit_edge, %land.rhs9, %if.then6.cleanup_crit_edge, %if.then3, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %19, %if.then3 ], [ %call.i, %if.then.cleanup_crit_edge ], [ 0, %if.then6.cleanup_crit_edge ], [ %phi.cast48, %land.rhs9 ], [ 0, %regulator_count_voltages.exit.cleanup_crit_edge ], [ 1, %for.body.cleanup_crit_edge ], [ 0, %for.cond.cleanup_crit_edge ], [ 0, %lor.lhs.false.i.cleanup_crit_edge ], [ 0, %if.end.i50.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_get_voltage(ptr nocapture noundef readonly %regulator) #0 align 64 {
entry:
  %ww_ctx = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx) #25
  %0 = call ptr @memset(ptr %ww_ctx, i32 255, i32 64)
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %1 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdev, align 4
  call fastcc void @regulator_lock_dependent(ptr noundef %2, ptr noundef nonnull %ww_ctx)
  %3 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rdev, align 4
  %call = call i32 @regulator_get_voltage_rdev(ptr noundef %4)
  %5 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %rdev, align 4
  %n_coupled.i = getelementptr inbounds %struct.regulator_dev, ptr %6, i32 0, i32 7, i32 3
  %7 = ptrtoint ptr %n_coupled.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %n_coupled.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %6, i32 noundef %8) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx) #25
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_set_voltage_rdev(ptr noundef %rdev, i32 noundef %min_uV, i32 noundef %max_uV, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %0 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %supply, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end35_crit_edge, label %land.lhs.true

entry.if.end35_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

land.lhs.true:                                    ; preds = %entry
  %rdev2 = getelementptr inbounds %struct.regulator, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %rdev2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rdev2, align 4
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %3, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool6.not.i.i = icmp eq ptr %9, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %9
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %if.end35

regulator_ops_is_valid.exit:                      ; preds = %land.lhs.true
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %5, i32 0, i32 11
  %10 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.if.end35_crit_edge, label %land.lhs.true3

regulator_ops_is_valid.exit.if.end35_crit_edge:   ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

land.lhs.true3:                                   ; preds = %regulator_ops_is_valid.exit
  %12 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rdev, align 8
  %min_dropout_uV = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 19
  %14 = ptrtoint ptr %min_dropout_uV to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %min_dropout_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool4.not = icmp eq i32 %15, 0
  br i1 %tobool4.not, label %lor.lhs.false, label %land.lhs.true3.if.then_crit_edge

land.lhs.true3.if.then_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 10
  %16 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ops, align 4
  %get_voltage = getelementptr inbounds %struct.regulator_ops, ptr %17, i32 0, i32 4
  %18 = ptrtoint ptr %get_voltage to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %get_voltage, align 4
  %tobool6.not = icmp eq ptr %19, null
  br i1 %tobool6.not, label %lor.lhs.false7, label %lor.lhs.false.if.end35_crit_edge

lor.lhs.false.if.end35_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %get_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %17, i32 0, i32 5
  %20 = ptrtoint ptr %get_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %get_voltage_sel, align 4
  %tobool10.not = icmp eq ptr %21, null
  br i1 %tobool10.not, label %lor.lhs.false7.if.then_crit_edge, label %lor.lhs.false7.if.end35_crit_edge

lor.lhs.false7.if.end35_crit_edge:                ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

lor.lhs.false7.if.then_crit_edge:                 ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false7.if.then_crit_edge, %land.lhs.true3.if.then_crit_edge
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 10
  %22 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops.i, align 4
  %map_voltage.i = getelementptr inbounds %struct.regulator_ops, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %map_voltage.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %map_voltage.i, align 4
  %tobool.not.i97 = icmp eq ptr %25, null
  br i1 %tobool.not.i97, label %if.end.i98, label %if.then.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %25(ptr noundef %rdev, i32 noundef %min_uV, i32 noundef %max_uV) #25
  br label %regulator_map_voltage.exit

if.end.i98:                                       ; preds = %if.then
  %26 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %23, align 4
  %cmp.i = icmp eq ptr %27, @regulator_list_voltage_linear
  br i1 %cmp.i, label %if.then5.i, label %if.end7.i

if.then5.i:                                       ; preds = %if.end.i98
  call void @__sanitizer_cov_trace_pc() #27
  %call6.i = tail call i32 @regulator_map_voltage_linear(ptr noundef %rdev, i32 noundef %min_uV, i32 noundef %max_uV) #25
  br label %regulator_map_voltage.exit

if.end7.i:                                        ; preds = %if.end.i98
  %cmp10.i = icmp eq ptr %27, @regulator_list_voltage_linear_range
  br i1 %cmp10.i, label %if.then11.i, label %if.end13.i

if.then11.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #27
  %call12.i = tail call i32 @regulator_map_voltage_linear_range(ptr noundef %rdev, i32 noundef %min_uV, i32 noundef %max_uV) #25
  br label %regulator_map_voltage.exit

if.end13.i:                                       ; preds = %if.end7.i
  %cmp16.i = icmp eq ptr %27, @regulator_list_voltage_pickable_linear_range
  br i1 %cmp16.i, label %if.then17.i, label %if.end19.i

if.then17.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #27
  %call18.i = tail call i32 @regulator_map_voltage_pickable_linear_range(ptr noundef %rdev, i32 noundef %min_uV, i32 noundef %max_uV) #25
  br label %regulator_map_voltage.exit

if.end19.i:                                       ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #27
  %call20.i = tail call i32 @regulator_map_voltage_iterate(ptr noundef %rdev, i32 noundef %min_uV, i32 noundef %max_uV) #25
  br label %regulator_map_voltage.exit

regulator_map_voltage.exit:                       ; preds = %if.end19.i, %if.then17.i, %if.then11.i, %if.then5.i, %if.then.i
  %retval.0.i99 = phi i32 [ %call.i, %if.then.i ], [ %call6.i, %if.then5.i ], [ %call12.i, %if.then11.i ], [ %call18.i, %if.then17.i ], [ %call20.i, %if.end19.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i99)
  %cmp = icmp slt i32 %retval.0.i99, 0
  br i1 %cmp, label %regulator_map_voltage.exit.cleanup57_crit_edge, label %if.end

regulator_map_voltage.exit.cleanup57_crit_edge:   ; preds = %regulator_map_voltage.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

if.end:                                           ; preds = %regulator_map_voltage.exit
  %call13 = tail call fastcc i32 @_regulator_list_voltage(ptr noundef %rdev, i32 noundef %retval.0.i99, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %if.end.cleanup57_crit_edge, label %if.end16

if.end.cleanup57_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

if.end16:                                         ; preds = %if.end
  %28 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %rdev, align 8
  %min_dropout_uV18 = getelementptr inbounds %struct.regulator_desc, ptr %29, i32 0, i32 19
  %30 = ptrtoint ptr %min_dropout_uV18 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %min_dropout_uV18, align 4
  %add = add i32 %31, %call13
  %32 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %supply, align 4
  %rdev20 = getelementptr inbounds %struct.regulator, ptr %33, i32 0, i32 9
  %34 = ptrtoint ptr %rdev20 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rdev20, align 4
  %call21 = tail call i32 @regulator_get_voltage_rdev(ptr noundef %35)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.end16.cleanup57_crit_edge, label %if.end26

if.end16.cleanup57_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

if.end26:                                         ; preds = %if.end16
  %sub = sub i32 %add, %call21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp27 = icmp sgt i32 %sub, 0
  br i1 %cmp27, label %if.then28, label %if.end26.if.end35_crit_edge

if.end26.if.end35_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

if.then28:                                        ; preds = %if.end26
  %36 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %supply, align 4
  %call30 = tail call fastcc i32 @regulator_set_voltage_unlocked(ptr noundef %37, i32 noundef %add, i32 noundef 2147483647, i32 noundef %state)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.then28.if.end35_crit_edge, label %do.end

if.then28.if.end35_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

do.end:                                           ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #27
  %dev = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13
  %38 = inttoptr i32 %call30 to ptr
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.30, ptr noundef nonnull %38) #30
  br label %cleanup57

if.end35:                                         ; preds = %if.then28.if.end35_crit_edge, %if.end26.if.end35_crit_edge, %lor.lhs.false7.if.end35_crit_edge, %lor.lhs.false.if.end35_crit_edge, %regulator_ops_is_valid.exit.if.end35_crit_edge, %regulator_ops_is_valid.exit.thread, %entry.if.end35_crit_edge
  %supply_change_uV.1114 = phi i32 [ %sub, %if.then28.if.end35_crit_edge ], [ %sub, %if.end26.if.end35_crit_edge ], [ 0, %lor.lhs.false.if.end35_crit_edge ], [ 0, %lor.lhs.false7.if.end35_crit_edge ], [ 0, %regulator_ops_is_valid.exit.if.end35_crit_edge ], [ 0, %entry.if.end35_crit_edge ], [ 0, %regulator_ops_is_valid.exit.thread ]
  %best_supply_uV.1113 = phi i32 [ %add, %if.then28.if.end35_crit_edge ], [ %add, %if.end26.if.end35_crit_edge ], [ 0, %lor.lhs.false.if.end35_crit_edge ], [ 0, %lor.lhs.false7.if.end35_crit_edge ], [ 0, %regulator_ops_is_valid.exit.if.end35_crit_edge ], [ 0, %entry.if.end35_crit_edge ], [ 0, %regulator_ops_is_valid.exit.thread ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp36 = icmp eq i32 %state, 0
  br i1 %cmp36, label %if.then37, label %if.else

if.then37:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #27
  %call38 = tail call fastcc i32 @_regulator_do_set_voltage(ptr noundef %rdev, i32 noundef %min_uV, i32 noundef %max_uV)
  br label %if.end40

if.else:                                          ; preds = %if.end35
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %39 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %constraints.i.i, align 8
  %cmp.i.i = icmp eq ptr %40, null
  br i1 %cmp.i.i, label %if.else.cleanup57_crit_edge, label %if.end.i.i

if.else.cleanup57_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

if.end.i.i:                                       ; preds = %if.else
  %41 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.364)
  switch i32 %state, label %if.end.i.i.cleanup57_crit_edge [
    i32 2, label %sw.bb.i.i
    i32 3, label %sw.bb2.i.i
    i32 4, label %sw.bb4.i.i
  ]

if.end.i.i.cleanup57_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

sw.bb.i.i:                                        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_standby.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %40, i32 0, i32 15
  br label %regulator_get_suspend_state.exit.i

sw.bb2.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_mem.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %40, i32 0, i32 14
  br label %regulator_get_suspend_state.exit.i

sw.bb4.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_disk.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %40, i32 0, i32 13
  br label %regulator_get_suspend_state.exit.i

regulator_get_suspend_state.exit.i:               ; preds = %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb.i.i
  %retval.0.i.i = phi ptr [ %state_disk.i.i, %sw.bb4.i.i ], [ %state_mem.i.i, %sw.bb2.i.i ], [ %state_standby.i.i, %sw.bb.i.i ]
  %cmp.i100 = icmp eq ptr %retval.0.i.i, null
  br i1 %cmp.i100, label %regulator_get_suspend_state.exit.i.cleanup57_crit_edge, label %if.end.i101

regulator_get_suspend_state.exit.i.cleanup57_crit_edge: ; preds = %regulator_get_suspend_state.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

if.end.i101:                                      ; preds = %regulator_get_suspend_state.exit.i
  %min_uV1.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 1
  %42 = ptrtoint ptr %min_uV1.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %min_uV1.i, align 4
  %44 = tail call i32 @llvm.smax.i32(i32 %43, i32 %min_uV) #25
  %max_uV6.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 2
  %45 = ptrtoint ptr %max_uV6.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %max_uV6.i, align 4
  %47 = tail call i32 @llvm.smin.i32(i32 %46, i32 %max_uV) #25
  %48 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rdev, align 8
  %ops.i.i = getelementptr inbounds %struct.regulator_desc, ptr %49, i32 0, i32 10
  %50 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ops.i.i, align 4
  %map_voltage.i.i = getelementptr inbounds %struct.regulator_ops, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %map_voltage.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %map_voltage.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %53, null
  br i1 %tobool.not.i.i, label %if.end.i41.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #27
  %call.i.i = tail call i32 %53(ptr noundef %rdev, i32 noundef %44, i32 noundef %47) #25
  br label %regulator_map_voltage.exit.i

if.end.i41.i:                                     ; preds = %if.end.i101
  %54 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %51, align 4
  %cmp.i40.i = icmp eq ptr %55, @regulator_list_voltage_linear
  br i1 %cmp.i40.i, label %if.then5.i.i, label %if.end7.i.i

if.then5.i.i:                                     ; preds = %if.end.i41.i
  call void @__sanitizer_cov_trace_pc() #27
  %call6.i.i = tail call i32 @regulator_map_voltage_linear(ptr noundef %rdev, i32 noundef %44, i32 noundef %47) #25
  br label %regulator_map_voltage.exit.i

if.end7.i.i:                                      ; preds = %if.end.i41.i
  %cmp10.i.i = icmp eq ptr %55, @regulator_list_voltage_linear_range
  br i1 %cmp10.i.i, label %if.then11.i.i, label %if.end13.i.i

if.then11.i.i:                                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %call12.i.i = tail call i32 @regulator_map_voltage_linear_range(ptr noundef %rdev, i32 noundef %44, i32 noundef %47) #25
  br label %regulator_map_voltage.exit.i

if.end13.i.i:                                     ; preds = %if.end7.i.i
  %cmp16.i.i = icmp eq ptr %55, @regulator_list_voltage_pickable_linear_range
  br i1 %cmp16.i.i, label %if.then17.i.i, label %if.end19.i.i

if.then17.i.i:                                    ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %call18.i.i = tail call i32 @regulator_map_voltage_pickable_linear_range(ptr noundef %rdev, i32 noundef %44, i32 noundef %47) #25
  br label %regulator_map_voltage.exit.i

if.end19.i.i:                                     ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %call20.i.i = tail call i32 @regulator_map_voltage_iterate(ptr noundef %rdev, i32 noundef %44, i32 noundef %47) #25
  br label %regulator_map_voltage.exit.i

regulator_map_voltage.exit.i:                     ; preds = %if.end19.i.i, %if.then17.i.i, %if.then11.i.i, %if.then5.i.i, %if.then.i.i
  %retval.0.i42.i = phi i32 [ %call.i.i, %if.then.i.i ], [ %call6.i.i, %if.then5.i.i ], [ %call12.i.i, %if.then11.i.i ], [ %call18.i.i, %if.then17.i.i ], [ %call20.i.i, %if.end19.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i42.i)
  %cmp12.i = icmp slt i32 %retval.0.i42.i, 0
  br i1 %cmp12.i, label %regulator_map_voltage.exit.i.cleanup57_crit_edge, label %if.end14.i

regulator_map_voltage.exit.i.cleanup57_crit_edge: ; preds = %regulator_map_voltage.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

if.end14.i:                                       ; preds = %regulator_map_voltage.exit.i
  %56 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %rdev, align 8
  %ops.i102 = getelementptr inbounds %struct.regulator_desc, ptr %57, i32 0, i32 10
  %58 = ptrtoint ptr %ops.i102 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %ops.i102, align 4
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %59, align 4
  %call15.i = tail call i32 %61(ptr noundef %rdev, i32 noundef %retval.0.i42.i) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call15.i, i32 %44)
  %cmp16.not.i = icmp slt i32 %call15.i, %44
  call void @__sanitizer_cov_trace_cmp4(i32 %call15.i, i32 %47)
  %cmp17.not.i = icmp sgt i32 %call15.i, %47
  %or.cond.i = select i1 %cmp16.not.i, i1 true, i1 %cmp17.not.i
  br i1 %or.cond.i, label %if.end14.i.if.end40_crit_edge, label %if.then18.i

if.end14.i.if.end40_crit_edge:                    ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end40

if.then18.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #27
  %62 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %call15.i, ptr %retval.0.i.i, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then18.i, %if.end14.i.if.end40_crit_edge, %if.then37
  %ret.1 = phi i32 [ %call38, %if.then37 ], [ 0, %if.then18.i ], [ 0, %if.end14.i.if.end40_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %ret.1)
  %cmp41 = icmp sgt i32 %ret.1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %supply_change_uV.1114)
  %cmp44 = icmp slt i32 %supply_change_uV.1114, 0
  %or.cond = select i1 %cmp41, i1 %cmp44, i1 false
  br i1 %or.cond, label %if.then45, label %if.end40.cleanup57_crit_edge

if.end40.cleanup57_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

if.then45:                                        ; preds = %if.end40
  %63 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %supply, align 4
  %call47 = tail call fastcc i32 @regulator_set_voltage_unlocked(ptr noundef %64, i32 noundef %best_supply_uV.1113, i32 noundef 2147483647, i32 noundef %state)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %if.then45.cleanup57_crit_edge, label %do.end52

if.then45.cleanup57_crit_edge:                    ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup57

do.end52:                                         ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #27
  %dev53 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13
  %65 = inttoptr i32 %call47 to ptr
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev53, ptr noundef nonnull @.str.33, ptr noundef nonnull %65) #30
  br label %cleanup57

cleanup57:                                        ; preds = %do.end52, %if.then45.cleanup57_crit_edge, %if.end40.cleanup57_crit_edge, %regulator_map_voltage.exit.i.cleanup57_crit_edge, %regulator_get_suspend_state.exit.i.cleanup57_crit_edge, %if.end.i.i.cleanup57_crit_edge, %if.else.cleanup57_crit_edge, %do.end, %if.end16.cleanup57_crit_edge, %if.end.cleanup57_crit_edge, %regulator_map_voltage.exit.cleanup57_crit_edge
  %ret.2 = phi i32 [ %call30, %do.end ], [ %ret.1, %if.end40.cleanup57_crit_edge ], [ 0, %do.end52 ], [ 0, %if.then45.cleanup57_crit_edge ], [ %call21, %if.end16.cleanup57_crit_edge ], [ %call13, %if.end.cleanup57_crit_edge ], [ %retval.0.i99, %regulator_map_voltage.exit.cleanup57_crit_edge ], [ -22, %if.end.i.i.cleanup57_crit_edge ], [ -22, %if.else.cleanup57_crit_edge ], [ %retval.0.i42.i, %regulator_map_voltage.exit.i.cleanup57_crit_edge ], [ -22, %regulator_get_suspend_state.exit.i.cleanup57_crit_edge ]
  ret i32 %ret.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_get_voltage_rdev(ptr noundef %rdev) #0 align 64 {
entry:
  %bypassed = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %bypassed) #25
  %0 = ptrtoint ptr %bypassed to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %bypassed, align 1, !annotation !995
  %1 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdev, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %2, i32 0, i32 10
  %3 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops, align 4
  %get_bypass = getelementptr inbounds %struct.regulator_ops, ptr %4, i32 0, i32 29
  %5 = ptrtoint ptr %get_bypass to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %get_bypass, align 4
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %entry.if.end16_crit_edge, label %if.then

entry.if.end16_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end16

if.then:                                          ; preds = %entry
  %call = call i32 %6(ptr noundef %rdev, ptr noundef nonnull %bypassed) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %if.then
  %7 = ptrtoint ptr %bypassed to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %bypassed, align 1, !range !1000
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool5.not = icmp eq i8 %8, 0
  br i1 %tobool5.not, label %if.end.if.end16_crit_edge, label %if.then6

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end16

if.then6:                                         ; preds = %if.end
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %9 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %supply, align 4
  %tobool7.not = icmp eq ptr %10, null
  br i1 %tobool7.not, label %do.end, label %if.end11

do.end:                                           ; preds = %if.then6
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %11 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %tobool2.not.i = icmp eq ptr %14, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %15 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rdev, align 8
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %tobool6.not.i = icmp eq ptr %18, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %18
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %14, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.35, ptr noundef %retval.0.i) #30
  br label %cleanup

if.end11:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #27
  %rdev13 = getelementptr inbounds %struct.regulator, ptr %10, i32 0, i32 9
  %19 = ptrtoint ptr %rdev13 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rdev13, align 4
  %call14 = call i32 @regulator_get_voltage_rdev(ptr noundef %20)
  br label %cleanup

if.end16:                                         ; preds = %if.end.if.end16_crit_edge, %entry.if.end16_crit_edge
  %21 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %rdev, align 8
  %ops18 = getelementptr inbounds %struct.regulator_desc, ptr %22, i32 0, i32 10
  %23 = ptrtoint ptr %ops18 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops18, align 4
  %get_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %24, i32 0, i32 5
  %25 = ptrtoint ptr %get_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %get_voltage_sel, align 4
  %tobool19.not = icmp eq ptr %26, null
  br i1 %tobool19.not, label %if.else, label %if.then20

if.then20:                                        ; preds = %if.end16
  %call24 = call i32 %26(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %cmp25 = icmp slt i32 %call24, 0
  br i1 %cmp25, label %if.then20.cleanup_crit_edge, label %if.end27

if.then20.cleanup_crit_edge:                      ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end27:                                         ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #27
  %27 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rdev, align 8
  %ops29 = getelementptr inbounds %struct.regulator_desc, ptr %28, i32 0, i32 10
  %29 = ptrtoint ptr %ops29 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ops29, align 4
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 4
  %call30 = call i32 %32(ptr noundef %rdev, i32 noundef %call24) #25
  br label %if.end72

if.else:                                          ; preds = %if.end16
  %get_voltage = getelementptr inbounds %struct.regulator_ops, ptr %24, i32 0, i32 4
  %33 = ptrtoint ptr %get_voltage to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %get_voltage, align 4
  %tobool33.not = icmp eq ptr %34, null
  br i1 %tobool33.not, label %if.else39, label %if.then34

if.then34:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  %call38 = call i32 %34(ptr noundef %rdev) #25
  br label %if.end72

if.else39:                                        ; preds = %if.else
  %35 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %24, align 4
  %tobool43.not = icmp eq ptr %36, null
  br i1 %tobool43.not, label %if.else49, label %if.then44

if.then44:                                        ; preds = %if.else39
  call void @__sanitizer_cov_trace_pc() #27
  %call48 = call i32 %36(ptr noundef %rdev, i32 noundef 0) #25
  br label %if.end72

if.else49:                                        ; preds = %if.else39
  %fixed_uV = getelementptr inbounds %struct.regulator_desc, ptr %22, i32 0, i32 17
  %37 = ptrtoint ptr %fixed_uV to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %fixed_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool51.not = icmp eq i32 %38, 0
  br i1 %tobool51.not, label %if.else49.if.else57_crit_edge, label %land.lhs.true

if.else49.if.else57_crit_edge:                    ; preds = %if.else49
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else57

land.lhs.true:                                    ; preds = %if.else49
  %n_voltages = getelementptr inbounds %struct.regulator_desc, ptr %22, i32 0, i32 8
  %39 = ptrtoint ptr %n_voltages to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %n_voltages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %40)
  %cmp53 = icmp eq i32 %40, 1
  br i1 %cmp53, label %land.lhs.true.if.end72_crit_edge, label %land.lhs.true.if.else57_crit_edge

land.lhs.true.if.else57_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else57

land.lhs.true.if.end72_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end72

if.else57:                                        ; preds = %land.lhs.true.if.else57_crit_edge, %if.else49.if.else57_crit_edge
  %supply58 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %41 = ptrtoint ptr %supply58 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %supply58, align 4
  %tobool59.not = icmp eq ptr %42, null
  br i1 %tobool59.not, label %if.else64, label %if.then60

if.then60:                                        ; preds = %if.else57
  call void @__sanitizer_cov_trace_pc() #27
  %rdev62 = getelementptr inbounds %struct.regulator, ptr %42, i32 0, i32 9
  %43 = ptrtoint ptr %rdev62 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %rdev62, align 4
  %call63 = call i32 @regulator_get_voltage_rdev(ptr noundef %44)
  br label %if.end72

if.else64:                                        ; preds = %if.else57
  call void @__sanitizer_cov_trace_pc() #27
  %supply_name = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 16
  %45 = ptrtoint ptr %supply_name to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %supply_name, align 8
  %tobool65.not = icmp eq ptr %46, null
  %. = select i1 %tobool65.not, i32 -22, i32 -517
  br label %cleanup

if.end72:                                         ; preds = %if.then60, %land.lhs.true.if.end72_crit_edge, %if.then44, %if.then34, %if.end27
  %ret.0 = phi i32 [ %call30, %if.end27 ], [ %call38, %if.then34 ], [ %call48, %if.then44 ], [ %call63, %if.then60 ], [ %38, %land.lhs.true.if.end72_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %cmp73 = icmp slt i32 %ret.0, 0
  br i1 %cmp73, label %if.end72.cleanup_crit_edge, label %if.end75

if.end72.cleanup_crit_edge:                       ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end75:                                         ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #27
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %47 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %constraints, align 8
  %uV_offset = getelementptr inbounds %struct.regulation_constraints, ptr %48, i32 0, i32 3
  %49 = ptrtoint ptr %uV_offset to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %uV_offset, align 4
  %sub = sub i32 %ret.0, %50
  br label %cleanup

cleanup:                                          ; preds = %if.end75, %if.end72.cleanup_crit_edge, %if.else64, %if.then20.cleanup_crit_edge, %if.end11, %rdev_get_name.exit, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call14, %if.end11 ], [ -517, %rdev_get_name.exit ], [ %sub, %if.end75 ], [ %call, %if.then.cleanup_crit_edge ], [ %call24, %if.then20.cleanup_crit_edge ], [ %., %if.else64 ], [ %ret.0, %if.end72.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %bypassed) #25
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @regulator_set_voltage_unlocked(ptr nocapture noundef %regulator, i32 noundef %min_uV, i32 noundef %max_uV, i32 noundef %state) unnamed_addr #0 align 64 {
entry:
  %min_uV.addr = alloca i32, align 4
  %max_uV.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %min_uV.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %min_uV, ptr %min_uV.addr, align 4
  %1 = ptrtoint ptr %max_uV.addr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %max_uV, ptr %max_uV.addr, align 4
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %2 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rdev1, align 4
  %arrayidx = getelementptr %struct.regulator, ptr %regulator, i32 0, i32 6, i32 %state
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %min_uV)
  %cmp = icmp eq i32 %5, %min_uV
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %max_uV4 = getelementptr %struct.regulator, ptr %regulator, i32 0, i32 6, i32 %state, i32 1
  %6 = ptrtoint ptr %max_uV4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max_uV4, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %max_uV)
  %cmp5 = icmp eq i32 %7, %max_uV
  br i1 %cmp5, label %land.lhs.true.out_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 14
  %8 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %3, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %tobool6.not.i.i = icmp eq ptr %13, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %13
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %if.then6

regulator_ops_is_valid.exit:                      ; preds = %if.end
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %9, i32 0, i32 11
  %14 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.if.then6_crit_edge, label %regulator_ops_is_valid.exit.if.end15_crit_edge

regulator_ops_is_valid.exit.if.end15_crit_edge:   ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15

regulator_ops_is_valid.exit.if.then6_crit_edge:   ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then6

if.then6:                                         ; preds = %regulator_ops_is_valid.exit.if.then6_crit_edge, %regulator_ops_is_valid.exit.thread
  %call7 = tail call i32 @regulator_get_voltage_rdev(ptr noundef %3)
  call void @__sanitizer_cov_trace_cmp4(i32 %call7, i32 %min_uV)
  %cmp8.not = icmp slt i32 %call7, %min_uV
  call void @__sanitizer_cov_trace_cmp4(i32 %call7, i32 %max_uV)
  %cmp10.not = icmp sgt i32 %call7, %max_uV
  %or.cond = or i1 %cmp8.not, %cmp10.not
  br i1 %or.cond, label %if.then6.if.end15_crit_edge, label %if.then11

if.then6.if.end15_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15

if.then11:                                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #27
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %min_uV, ptr %arrayidx, align 4
  %max_uV13 = getelementptr %struct.regulator, ptr %regulator, i32 0, i32 6, i32 %state, i32 1
  %17 = ptrtoint ptr %max_uV13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %max_uV, ptr %max_uV13, align 4
  br label %out

if.end15:                                         ; preds = %if.then6.if.end15_crit_edge, %regulator_ops_is_valid.exit.if.end15_crit_edge
  %18 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %3, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %19, i32 0, i32 10
  %20 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ops, align 4
  %set_voltage = getelementptr inbounds %struct.regulator_ops, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %set_voltage to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %set_voltage, align 4
  %tobool.not = icmp eq ptr %23, null
  br i1 %tobool.not, label %land.lhs.true16, label %if.end15.if.end21_crit_edge

if.end15.if.end21_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end21

land.lhs.true16:                                  ; preds = %if.end15
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %21, i32 0, i32 3
  %24 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %set_voltage_sel, align 4
  %tobool19.not = icmp eq ptr %25, null
  br i1 %tobool19.not, label %land.lhs.true16.out_crit_edge, label %land.lhs.true16.if.end21_crit_edge

land.lhs.true16.if.end21_crit_edge:               ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end21

land.lhs.true16.out_crit_edge:                    ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end21:                                         ; preds = %land.lhs.true16.if.end21_crit_edge, %if.end15.if.end21_crit_edge
  %call22 = call i32 @regulator_check_voltage(ptr noundef %3, ptr noundef nonnull %min_uV.addr, ptr noundef nonnull %max_uV.addr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %cmp23 = icmp slt i32 %call22, 0
  br i1 %cmp23, label %if.end21.out_crit_edge, label %if.end25

if.end21.out_crit_edge:                           ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end25:                                         ; preds = %if.end21
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx, align 4
  %max_uV27 = getelementptr %struct.regulator, ptr %regulator, i32 0, i32 6, i32 %state, i32 1
  %28 = ptrtoint ptr %max_uV27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %max_uV27, align 4
  %30 = ptrtoint ptr %min_uV.addr to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %min_uV.addr, align 4
  store i32 %31, ptr %arrayidx, align 4
  %32 = ptrtoint ptr %max_uV.addr to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %max_uV.addr, align 4
  store i32 %33, ptr %max_uV27, align 4
  %coupler1.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 7, i32 1
  %34 = ptrtoint ptr %coupler1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %coupler1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp.not.i = icmp ne i32 %state, 0
  %n_resolved.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 7, i32 2
  %36 = ptrtoint ptr %n_resolved.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %n_resolved.i, align 4
  %n_coupled.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 7, i32 3
  %38 = ptrtoint ptr %n_coupled.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %n_coupled.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %39)
  %cmp2.i = icmp slt i32 %37, %39
  br i1 %cmp2.i, label %do.end.i, label %if.end5.i

do.end.i:                                         ; preds = %if.end25
  %40 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i.i = icmp eq ptr %41, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %41, align 4
  %tobool2.not.i.i = icmp eq ptr %43, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.regulator_balance_voltage.exit.thread_crit_edge

land.lhs.true.i.i.regulator_balance_voltage.exit.thread_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_balance_voltage.exit.thread

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %44 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %3, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %45, align 4
  %tobool6.not.i.i55 = icmp eq ptr %47, null
  %.str..i.i56 = select i1 %tobool6.not.i.i55, ptr @.str, ptr %47
  br label %regulator_balance_voltage.exit.thread

regulator_balance_voltage.exit.thread:            ; preds = %if.else.i.i, %land.lhs.true.i.i.regulator_balance_voltage.exit.thread_crit_edge
  %retval.0.i.i = phi ptr [ %43, %land.lhs.true.i.i.regulator_balance_voltage.exit.thread_crit_edge ], [ %.str..i.i56, %if.else.i.i ]
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef %retval.0.i.i) #30
  br label %if.then32

if.end5.i:                                        ; preds = %if.end25
  %tobool.not.i58 = icmp eq ptr %35, null
  br i1 %tobool.not.i58, label %if.end5.i.if.end10.i_crit_edge, label %land.lhs.true.i

if.end5.i.if.end10.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

land.lhs.true.i:                                  ; preds = %if.end5.i
  %balance_voltage.i = getelementptr inbounds %struct.regulator_coupler, ptr %35, i32 0, i32 3
  %48 = ptrtoint ptr %balance_voltage.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %balance_voltage.i, align 4
  %tobool6.not.i = icmp eq ptr %49, null
  br i1 %tobool6.not.i, label %land.lhs.true.i.if.end10.i_crit_edge, label %if.then7.i

land.lhs.true.i.if.end10.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

if.then7.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  %call9.i = tail call i32 %49(ptr noundef nonnull %35, ptr noundef %3, i32 noundef %state) #25
  br label %regulator_balance_voltage.exit

if.end10.i:                                       ; preds = %land.lhs.true.i.if.end10.i_crit_edge, %if.end5.i.if.end10.i_crit_edge
  %call12.i = tail call i32 @regulator_do_balance_voltage(ptr noundef %3, i32 noundef %state, i1 noundef zeroext %cmp.not.i) #25
  br label %regulator_balance_voltage.exit

regulator_balance_voltage.exit:                   ; preds = %if.end10.i, %if.then7.i
  %retval.0.i59 = phi i32 [ %call9.i, %if.then7.i ], [ %call12.i, %if.end10.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i59)
  %cmp31 = icmp slt i32 %retval.0.i59, 0
  br i1 %cmp31, label %regulator_balance_voltage.exit.if.then32_crit_edge, label %regulator_balance_voltage.exit.out_crit_edge

regulator_balance_voltage.exit.out_crit_edge:     ; preds = %regulator_balance_voltage.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

regulator_balance_voltage.exit.if.then32_crit_edge: ; preds = %regulator_balance_voltage.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then32

if.then32:                                        ; preds = %regulator_balance_voltage.exit.if.then32_crit_edge, %regulator_balance_voltage.exit.thread
  %retval.0.i5963 = phi i32 [ -1, %regulator_balance_voltage.exit.thread ], [ %retval.0.i59, %regulator_balance_voltage.exit.if.then32_crit_edge ]
  %50 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %27, ptr %arrayidx, align 4
  %51 = ptrtoint ptr %max_uV27 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %29, ptr %max_uV27, align 4
  br label %out

out:                                              ; preds = %if.then32, %regulator_balance_voltage.exit.out_crit_edge, %if.end21.out_crit_edge, %land.lhs.true16.out_crit_edge, %if.then11, %land.lhs.true.out_crit_edge
  %ret.0 = phi i32 [ 0, %land.lhs.true.out_crit_edge ], [ %call22, %if.end21.out_crit_edge ], [ %retval.0.i5963, %if.then32 ], [ %retval.0.i59, %regulator_balance_voltage.exit.out_crit_edge ], [ 0, %if.then11 ], [ -22, %land.lhs.true16.out_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_do_set_voltage(ptr noundef %rdev, i32 noundef %min_uV, i32 noundef %max_uV) unnamed_addr #0 align 64 {
entry:
  %data.i.i = alloca %struct.pre_voltage_change_data, align 4
  %data.i = alloca %struct.pre_voltage_change_data, align 4
  %selector = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %selector) #25
  %0 = ptrtoint ptr %selector to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %selector, align 4, !annotation !995
  %1 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdev, align 8
  %ops1 = getelementptr inbounds %struct.regulator_desc, ptr %2, i32 0, i32 10
  %3 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops1, align 4
  %call = tail call i32 @regulator_get_voltage_rdev(ptr noundef %rdev)
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %5 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %entry.if.else.i_crit_edge, label %land.lhs.true.i

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %entry
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %9 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rdev, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %tobool6.not.i = icmp eq ptr %12, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %12
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %8, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  tail call fastcc void @trace_regulator_set_voltage(ptr noundef %retval.0.i, i32 noundef %min_uV, i32 noundef %max_uV)
  %13 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %constraints.i, align 8
  %uV_offset = getelementptr inbounds %struct.regulation_constraints, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %uV_offset to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %uV_offset, align 4
  %add = add i32 %16, %min_uV
  %add5 = add i32 %16, %max_uV
  %ena_pin.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 21
  %17 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i226 = icmp eq ptr %18, null
  br i1 %tobool.not.i226, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 22
  %19 = ptrtoint ptr %ena_gpio_state.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load.i = load i8, ptr %ena_gpio_state.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %_regulator_is_enabled.exit

if.end.i:                                         ; preds = %rdev_get_name.exit
  %20 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %rdev, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %21, i32 0, i32 10
  %22 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.regulator_ops, ptr %23, i32 0, i32 16
  %24 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %is_enabled.i, align 4
  %tobool1.not.i = icmp eq ptr %25, null
  br i1 %tobool1.not.i, label %if.end.i.land.lhs.true_crit_edge, label %if.end3.i

if.end.i.land.lhs.true_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %25(ptr noundef %rdev) #25
  br label %_regulator_is_enabled.exit

_regulator_is_enabled.exit:                       ; preds = %if.end3.i, %if.then.i
  %retval.0.i227 = phi i32 [ %bf.cast.i, %if.then.i ], [ %call.i, %if.end3.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i227)
  %tobool.not = icmp eq i32 %retval.0.i227, 0
  br i1 %tobool.not, label %_regulator_is_enabled.exit.if.end13_crit_edge, label %_regulator_is_enabled.exit.land.lhs.true_crit_edge

_regulator_is_enabled.exit.land.lhs.true_crit_edge: ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true

_regulator_is_enabled.exit.if.end13_crit_edge:    ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

land.lhs.true:                                    ; preds = %_regulator_is_enabled.exit.land.lhs.true_crit_edge, %if.end.i.land.lhs.true_crit_edge
  %set_voltage_time_sel = getelementptr inbounds %struct.regulator_ops, ptr %4, i32 0, i32 23
  %26 = ptrtoint ptr %set_voltage_time_sel to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %set_voltage_time_sel, align 4
  %tobool7.not = icmp eq ptr %27, null
  br i1 %tobool7.not, label %land.lhs.true.if.end13_crit_edge, label %land.lhs.true8

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

land.lhs.true8:                                   ; preds = %land.lhs.true
  %get_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %4, i32 0, i32 5
  %28 = ptrtoint ptr %get_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %get_voltage_sel, align 4
  %tobool9.not = icmp eq ptr %29, null
  br i1 %tobool9.not, label %land.lhs.true8.if.end13_crit_edge, label %if.then

land.lhs.true8.if.end13_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

if.then:                                          ; preds = %land.lhs.true8
  %call11 = tail call i32 %29(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %cmp = icmp slt i32 %call11, 0
  br i1 %cmp, label %if.then.cleanup_crit_edge, label %if.then.if.end13_crit_edge

if.then.if.end13_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end13

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end13:                                         ; preds = %if.then.if.end13_crit_edge, %land.lhs.true8.if.end13_crit_edge, %land.lhs.true.if.end13_crit_edge, %_regulator_is_enabled.exit.if.end13_crit_edge
  %old_selector.0 = phi i32 [ %call11, %if.then.if.end13_crit_edge ], [ -1, %land.lhs.true8.if.end13_crit_edge ], [ -1, %land.lhs.true.if.end13_crit_edge ], [ -1, %_regulator_is_enabled.exit.if.end13_crit_edge ]
  %set_voltage = getelementptr inbounds %struct.regulator_ops, ptr %4, i32 0, i32 1
  %30 = ptrtoint ptr %set_voltage to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %set_voltage, align 4
  %tobool14.not = icmp eq ptr %31, null
  br i1 %tobool14.not, label %if.else26, label %if.then15

if.then15:                                        ; preds = %if.end13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %data.i) #25
  %32 = getelementptr inbounds %struct.pre_voltage_change_data, ptr %data.i, i32 0, i32 1
  %33 = getelementptr inbounds %struct.pre_voltage_change_data, ptr %data.i, i32 0, i32 2
  %call.i228 = tail call i32 @regulator_get_voltage_rdev(ptr noundef %rdev) #25
  %34 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %call.i228, ptr %data.i, align 4
  %35 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %add, ptr %32, align 4
  %36 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %add5, ptr %33, align 4
  %notifier.i.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 8
  %call.i.i = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i.i, i32 noundef 256, ptr noundef nonnull %data.i) #25
  %and.i = and i32 %call.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i229 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i229, label %if.end.i231, label %if.then15._regulator_call_set_voltage.exit.thread_crit_edge

if.then15._regulator_call_set_voltage.exit.thread_crit_edge: ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_call_set_voltage.exit.thread

if.end.i231:                                      ; preds = %if.then15
  %37 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %rdev, align 8
  %ops.i230 = getelementptr inbounds %struct.regulator_desc, ptr %38, i32 0, i32 10
  %39 = ptrtoint ptr %ops.i230 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %ops.i230, align 4
  %set_voltage.i = getelementptr inbounds %struct.regulator_ops, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %set_voltage.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %set_voltage.i, align 4
  %call4.i = call i32 %42(ptr noundef %rdev, i32 noundef %add, i32 noundef %add5, ptr noundef nonnull %selector) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call4.i)
  %cmp.i = icmp sgt i32 %call4.i, -1
  br i1 %cmp.i, label %if.then18, label %if.end6.i

if.end6.i:                                        ; preds = %if.end.i231
  call void @__sanitizer_cov_trace_pc() #27
  %43 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %data.i, align 4
  %45 = inttoptr i32 %44 to ptr
  %call.i20.i = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i.i, i32 noundef 512, ptr noundef %45) #25
  br label %_regulator_call_set_voltage.exit.thread

_regulator_call_set_voltage.exit.thread:          ; preds = %if.end6.i, %if.then15._regulator_call_set_voltage.exit.thread_crit_edge
  %retval.0.i232.ph = phi i32 [ -22, %if.then15._regulator_call_set_voltage.exit.thread_crit_edge ], [ %call4.i, %if.end6.i ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %data.i) #25
  br label %out

if.then18:                                        ; preds = %if.end.i231
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %data.i) #25
  %46 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %4, align 4
  %tobool19.not = icmp eq ptr %47, null
  br i1 %tobool19.not, label %if.else, label %if.then20

if.then20:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #27
  %48 = ptrtoint ptr %selector to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %selector, align 4
  %call22 = call i32 %47(ptr noundef %rdev, i32 noundef %49) #25
  br label %if.end54

if.else:                                          ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #27
  %call23 = call i32 @regulator_get_voltage_rdev(ptr noundef %rdev)
  br label %if.end54

if.else26:                                        ; preds = %if.end13
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %4, i32 0, i32 3
  %50 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %set_voltage_sel, align 4
  %tobool27.not = icmp eq ptr %51, null
  br i1 %tobool27.not, label %if.else26.out_crit_edge, label %if.then28

if.else26.out_crit_edge:                          ; preds = %if.else26
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.then28:                                        ; preds = %if.else26
  %52 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %rdev, align 8
  %ops.i233 = getelementptr inbounds %struct.regulator_desc, ptr %53, i32 0, i32 10
  %54 = ptrtoint ptr %ops.i233 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ops.i233, align 4
  %map_voltage.i = getelementptr inbounds %struct.regulator_ops, ptr %55, i32 0, i32 2
  %56 = ptrtoint ptr %map_voltage.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %map_voltage.i, align 4
  %tobool.not.i234 = icmp eq ptr %57, null
  br i1 %tobool.not.i234, label %if.end.i238, label %if.then.i236

if.then.i236:                                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #27
  %call.i235 = tail call i32 %57(ptr noundef %rdev, i32 noundef %add, i32 noundef %add5) #25
  br label %regulator_map_voltage.exit

if.end.i238:                                      ; preds = %if.then28
  %58 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %55, align 4
  %cmp.i237 = icmp eq ptr %59, @regulator_list_voltage_linear
  br i1 %cmp.i237, label %if.then5.i, label %if.end7.i

if.then5.i:                                       ; preds = %if.end.i238
  call void @__sanitizer_cov_trace_pc() #27
  %call6.i = tail call i32 @regulator_map_voltage_linear(ptr noundef %rdev, i32 noundef %add, i32 noundef %add5) #25
  br label %regulator_map_voltage.exit

if.end7.i:                                        ; preds = %if.end.i238
  %cmp10.i = icmp eq ptr %59, @regulator_list_voltage_linear_range
  br i1 %cmp10.i, label %if.then11.i, label %if.end13.i

if.then11.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #27
  %call12.i = tail call i32 @regulator_map_voltage_linear_range(ptr noundef %rdev, i32 noundef %add, i32 noundef %add5) #25
  br label %regulator_map_voltage.exit

if.end13.i:                                       ; preds = %if.end7.i
  %cmp16.i = icmp eq ptr %59, @regulator_list_voltage_pickable_linear_range
  br i1 %cmp16.i, label %if.then17.i, label %if.end19.i

if.then17.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #27
  %call18.i = tail call i32 @regulator_map_voltage_pickable_linear_range(ptr noundef %rdev, i32 noundef %add, i32 noundef %add5) #25
  br label %regulator_map_voltage.exit

if.end19.i:                                       ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #27
  %call20.i = tail call i32 @regulator_map_voltage_iterate(ptr noundef %rdev, i32 noundef %add, i32 noundef %add5) #25
  br label %regulator_map_voltage.exit

regulator_map_voltage.exit:                       ; preds = %if.end19.i, %if.then17.i, %if.then11.i, %if.then5.i, %if.then.i236
  %retval.0.i239 = phi i32 [ %call.i235, %if.then.i236 ], [ %call6.i, %if.then5.i ], [ %call12.i, %if.then11.i ], [ %call18.i, %if.then17.i ], [ %call20.i, %if.end19.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i239)
  %cmp30 = icmp sgt i32 %retval.0.i239, -1
  br i1 %cmp30, label %if.then31, label %regulator_map_voltage.exit.out_crit_edge

regulator_map_voltage.exit.out_crit_edge:         ; preds = %regulator_map_voltage.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.then31:                                        ; preds = %regulator_map_voltage.exit
  %60 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %4, align 4
  %call33 = tail call i32 %61(ptr noundef %rdev, i32 noundef %retval.0.i239) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %call33)
  %cmp34.not = icmp sgt i32 %add, %call33
  call void @__sanitizer_cov_trace_cmp4(i32 %add5, i32 %call33)
  %cmp36.not = icmp slt i32 %add5, %call33
  %or.cond = or i1 %cmp34.not, %cmp36.not
  br i1 %or.cond, label %if.then31.out_crit_edge, label %if.then37

if.then31.out_crit_edge:                          ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.then37:                                        ; preds = %if.then31
  %62 = ptrtoint ptr %selector to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %retval.0.i239, ptr %selector, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %old_selector.0, i32 %retval.0.i239)
  %cmp38 = icmp eq i32 %old_selector.0, %retval.0.i239
  br i1 %cmp38, label %if.then37.if.end57_crit_edge, label %if.else40

if.then37.if.end57_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end57

if.else40:                                        ; preds = %if.then37
  %63 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %rdev, align 8
  %vsel_step = getelementptr inbounds %struct.regulator_desc, ptr %64, i32 0, i32 29
  %65 = ptrtoint ptr %vsel_step to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %vsel_step, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool42.not = icmp eq i32 %66, 0
  br i1 %tobool42.not, label %if.else45, label %if.then43

if.then43:                                        ; preds = %if.else40
  %ops1.i = getelementptr inbounds %struct.regulator_desc, ptr %64, i32 0, i32 10
  %67 = ptrtoint ptr %ops1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ops1.i, align 4
  %69 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i.i = icmp eq ptr %70, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 22
  %71 = ptrtoint ptr %ena_gpio_state.i.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %bf.load.i.i = load i8, ptr %ena_gpio_state.i.i, align 8
  %bf.lshr.i.i = lshr i8 %bf.load.i.i, 7
  %bf.cast.i.i = zext i8 %bf.lshr.i.i to i32
  br label %_regulator_is_enabled.exit.i

if.end.i.i:                                       ; preds = %if.then43
  %is_enabled.i.i = getelementptr inbounds %struct.regulator_ops, ptr %68, i32 0, i32 16
  %72 = ptrtoint ptr %is_enabled.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %is_enabled.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %73, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.if.end.i243_crit_edge, label %if.end3.i.i

if.end.i.i.if.end.i243_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i243

if.end3.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i.i240 = tail call i32 %73(ptr noundef %rdev) #25
  br label %_regulator_is_enabled.exit.i

_regulator_is_enabled.exit.i:                     ; preds = %if.end3.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %bf.cast.i.i, %if.then.i.i ], [ %call.i.i240, %if.end3.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %tobool.not.i241 = icmp eq i32 %retval.0.i.i, 0
  br i1 %tobool.not.i241, label %_regulator_is_enabled.exit.i.final_set.i_crit_edge, label %_regulator_is_enabled.exit.i.if.end.i243_crit_edge

_regulator_is_enabled.exit.i.if.end.i243_crit_edge: ; preds = %_regulator_is_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i243

_regulator_is_enabled.exit.i.final_set.i_crit_edge: ; preds = %_regulator_is_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %final_set.i

if.end.i243:                                      ; preds = %_regulator_is_enabled.exit.i.if.end.i243_crit_edge, %if.end.i.i.if.end.i243_crit_edge
  %get_voltage_sel.i = getelementptr inbounds %struct.regulator_ops, ptr %68, i32 0, i32 5
  %74 = ptrtoint ptr %get_voltage_sel.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %get_voltage_sel.i, align 4
  %tobool2.not.i242 = icmp eq ptr %75, null
  br i1 %tobool2.not.i242, label %if.end.i243.out_crit_edge, label %if.end4.i

if.end.i243.out_crit_edge:                        ; preds = %if.end.i243
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end4.i:                                        ; preds = %if.end.i243
  %call6.i244 = tail call i32 %75(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i244)
  %cmp.i245 = icmp slt i32 %call6.i244, 0
  br i1 %cmp.i245, label %if.end4.i.out_crit_edge, label %if.end8.i

if.end4.i.out_crit_edge:                          ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end8.i:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i239, i32 %call6.i244)
  %cmp9.i = icmp eq i32 %retval.0.i239, %call6.i244
  br i1 %cmp9.i, label %if.end8.i.if.end57_crit_edge, label %if.end11.i

if.end8.i.if.end57_crit_edge:                     ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end57

if.end11.i:                                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i239, i32 %call6.i244)
  %cmp12.i = icmp ugt i32 %retval.0.i239, %call6.i244
  %76 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %rdev, align 8
  %vsel_step.i = getelementptr inbounds %struct.regulator_desc, ptr %77, i32 0, i32 29
  %78 = ptrtoint ptr %vsel_step.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %vsel_step.i, align 4
  br i1 %cmp12.i, label %if.then13.i, label %if.else.i246

if.then13.i:                                      ; preds = %if.end11.i
  %add.i = add i32 %79, %call6.i244
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %retval.0.i239)
  %cmp1588.i = icmp slt i32 %add.i, %retval.0.i239
  br i1 %cmp1588.i, label %for.body.lr.ph.i, label %if.then13.i.final_set.i_crit_edge

if.then13.i.final_set.i_crit_edge:                ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %final_set.i

for.body.lr.ph.i:                                 ; preds = %if.then13.i
  %set_voltage_sel.i = getelementptr inbounds %struct.regulator_ops, ptr %68, i32 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %curr_sel.089.i = phi i32 [ %add.i, %for.body.lr.ph.i ], [ %add22.i, %for.inc.i.for.body.i_crit_edge ]
  %80 = ptrtoint ptr %set_voltage_sel.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %set_voltage_sel.i, align 4
  %call16.i = tail call i32 %81(ptr noundef %rdev, i32 noundef %curr_sel.089.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %tobool17.not.i = icmp eq i32 %call16.i, 0
  br i1 %tobool17.not.i, label %for.inc.i, label %for.body.i.try_revert.i_crit_edge

for.body.i.try_revert.i_crit_edge:                ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %try_revert.i

for.inc.i:                                        ; preds = %for.body.i
  %82 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %rdev, align 8
  %vsel_step21.i = getelementptr inbounds %struct.regulator_desc, ptr %83, i32 0, i32 29
  %84 = ptrtoint ptr %vsel_step21.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %vsel_step21.i, align 4
  %add22.i = add i32 %85, %curr_sel.089.i
  %cmp15.i = icmp slt i32 %add22.i, %retval.0.i239
  br i1 %cmp15.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.final_set.i_crit_edge

for.inc.i.final_set.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %final_set.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i

if.else.i246:                                     ; preds = %if.end11.i
  %sub25.i = sub i32 %call6.i244, %79
  call void @__sanitizer_cov_trace_cmp4(i32 %sub25.i, i32 %retval.0.i239)
  %cmp2786.i = icmp sgt i32 %sub25.i, %retval.0.i239
  br i1 %cmp2786.i, label %for.body28.lr.ph.i, label %if.else.i246.final_set.i_crit_edge

if.else.i246.final_set.i_crit_edge:               ; preds = %if.else.i246
  call void @__sanitizer_cov_trace_pc() #27
  br label %final_set.i

for.body28.lr.ph.i:                               ; preds = %if.else.i246
  %set_voltage_sel29.i = getelementptr inbounds %struct.regulator_ops, ptr %68, i32 0, i32 3
  br label %for.body28.i

for.body28.i:                                     ; preds = %for.inc34.i.for.body28.i_crit_edge, %for.body28.lr.ph.i
  %curr_sel.187.i = phi i32 [ %sub25.i, %for.body28.lr.ph.i ], [ %sub37.i, %for.inc34.i.for.body28.i_crit_edge ]
  %86 = ptrtoint ptr %set_voltage_sel29.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %set_voltage_sel29.i, align 4
  %call30.i = tail call i32 %87(ptr noundef %rdev, i32 noundef %curr_sel.187.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i)
  %tobool31.not.i = icmp eq i32 %call30.i, 0
  br i1 %tobool31.not.i, label %for.inc34.i, label %for.body28.i.try_revert.i_crit_edge

for.body28.i.try_revert.i_crit_edge:              ; preds = %for.body28.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %try_revert.i

for.inc34.i:                                      ; preds = %for.body28.i
  %88 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %rdev, align 8
  %vsel_step36.i = getelementptr inbounds %struct.regulator_desc, ptr %89, i32 0, i32 29
  %90 = ptrtoint ptr %vsel_step36.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %vsel_step36.i, align 4
  %sub37.i = sub i32 %curr_sel.187.i, %91
  %cmp27.i = icmp sgt i32 %sub37.i, %retval.0.i239
  br i1 %cmp27.i, label %for.inc34.i.for.body28.i_crit_edge, label %for.inc34.i.final_set.i_crit_edge

for.inc34.i.final_set.i_crit_edge:                ; preds = %for.inc34.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %final_set.i

for.inc34.i.for.body28.i_crit_edge:               ; preds = %for.inc34.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body28.i

final_set.i:                                      ; preds = %for.inc34.i.final_set.i_crit_edge, %if.else.i246.final_set.i_crit_edge, %for.inc.i.final_set.i_crit_edge, %if.then13.i.final_set.i_crit_edge, %_regulator_is_enabled.exit.i.final_set.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %data.i.i) #25
  %92 = getelementptr inbounds %struct.pre_voltage_change_data, ptr %data.i.i, i32 0, i32 1
  %93 = getelementptr inbounds %struct.pre_voltage_change_data, ptr %data.i.i, i32 0, i32 2
  %call.i77.i = tail call i32 @regulator_get_voltage_rdev(ptr noundef %rdev) #25
  %94 = ptrtoint ptr %data.i.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %call.i77.i, ptr %data.i.i, align 4
  %95 = ptrtoint ptr %92 to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %call33, ptr %92, align 4
  %96 = ptrtoint ptr %93 to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %call33, ptr %93, align 4
  %notifier.i.i.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 8
  %call.i.i.i = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i.i.i, i32 noundef 256, ptr noundef nonnull %data.i.i) #25
  %and.i.i = and i32 %call.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i78.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i78.i, label %if.end.i80.i, label %final_set.i._regulator_call_set_voltage_sel.exit.i_crit_edge

final_set.i._regulator_call_set_voltage_sel.exit.i_crit_edge: ; preds = %final_set.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_call_set_voltage_sel.exit.i

if.end.i80.i:                                     ; preds = %final_set.i
  %97 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %rdev, align 8
  %ops.i79.i = getelementptr inbounds %struct.regulator_desc, ptr %98, i32 0, i32 10
  %99 = ptrtoint ptr %ops.i79.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %ops.i79.i, align 4
  %set_voltage_sel.i.i = getelementptr inbounds %struct.regulator_ops, ptr %100, i32 0, i32 3
  %101 = ptrtoint ptr %set_voltage_sel.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %set_voltage_sel.i.i, align 4
  %call2.i.i = call i32 %102(ptr noundef %rdev, i32 noundef %retval.0.i239) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i.i)
  %cmp.i.i = icmp sgt i32 %call2.i.i, -1
  br i1 %cmp.i.i, label %if.end.i80.i._regulator_call_set_voltage_sel.exit.i_crit_edge, label %if.end4.i.i

if.end.i80.i._regulator_call_set_voltage_sel.exit.i_crit_edge: ; preds = %if.end.i80.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_call_set_voltage_sel.exit.i

if.end4.i.i:                                      ; preds = %if.end.i80.i
  call void @__sanitizer_cov_trace_pc() #27
  %103 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %data.i.i, align 4
  %105 = inttoptr i32 %104 to ptr
  %call.i17.i.i = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i.i.i, i32 noundef 512, ptr noundef %105) #25
  br label %_regulator_call_set_voltage_sel.exit.i

_regulator_call_set_voltage_sel.exit.i:           ; preds = %if.end4.i.i, %if.end.i80.i._regulator_call_set_voltage_sel.exit.i_crit_edge, %final_set.i._regulator_call_set_voltage_sel.exit.i_crit_edge
  %retval.0.i81.i = phi i32 [ %call2.i.i, %if.end4.i.i ], [ -22, %final_set.i._regulator_call_set_voltage_sel.exit.i_crit_edge ], [ %call2.i.i, %if.end.i80.i._regulator_call_set_voltage_sel.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %data.i.i) #25
  br label %if.end54

try_revert.i:                                     ; preds = %for.body28.i.try_revert.i_crit_edge, %for.body.i.try_revert.i_crit_edge
  %ret.0.i = phi i32 [ %call16.i, %for.body.i.try_revert.i_crit_edge ], [ %call30.i, %for.body28.i.try_revert.i_crit_edge ]
  %set_voltage_sel41.i = getelementptr inbounds %struct.regulator_ops, ptr %68, i32 0, i32 3
  %106 = ptrtoint ptr %set_voltage_sel41.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %set_voltage_sel41.i, align 4
  %call42.i = tail call i32 %107(ptr noundef %rdev, i32 noundef %call6.i244) #25
  br label %out

if.else45:                                        ; preds = %if.else40
  call void @__sanitizer_cov_trace_pc() #27
  %call46 = tail call fastcc i32 @_regulator_call_set_voltage_sel(ptr noundef %rdev, i32 noundef %call33, i32 noundef %retval.0.i239)
  br label %if.end54

if.end54:                                         ; preds = %if.else45, %_regulator_call_set_voltage_sel.exit.i, %if.else, %if.then20
  %ret.0 = phi i32 [ %call4.i, %if.then20 ], [ %call4.i, %if.else ], [ %call46, %if.else45 ], [ %retval.0.i81.i, %_regulator_call_set_voltage_sel.exit.i ]
  %best_val.0 = phi i32 [ %call22, %if.then20 ], [ %call23, %if.else ], [ %call33, %if.else45 ], [ %call33, %_regulator_call_set_voltage_sel.exit.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool55.not = icmp eq i32 %ret.0, 0
  br i1 %tobool55.not, label %if.end54.if.end57_crit_edge, label %if.end54.out_crit_edge

if.end54.out_crit_edge:                           ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end54.if.end57_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end57

if.end57:                                         ; preds = %if.end54.if.end57_crit_edge, %if.end8.i.if.end57_crit_edge, %if.then37.if.end57_crit_edge
  %best_val.0291 = phi i32 [ %best_val.0, %if.end54.if.end57_crit_edge ], [ %call33, %if.then37.if.end57_crit_edge ], [ %call33, %if.end8.i.if.end57_crit_edge ]
  %set_voltage_time_sel58 = getelementptr inbounds %struct.regulator_ops, ptr %4, i32 0, i32 23
  %108 = ptrtoint ptr %set_voltage_time_sel58 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %set_voltage_time_sel58, align 4
  %tobool59.not = icmp eq ptr %109, null
  br i1 %tobool59.not, label %if.else68, label %if.then60

if.then60:                                        ; preds = %if.end57
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %old_selector.0)
  %cmp61 = icmp sgt i32 %old_selector.0, -1
  br i1 %cmp61, label %land.lhs.true62, label %if.then60.if.end131_crit_edge

if.then60.if.end131_crit_edge:                    ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end131

land.lhs.true62:                                  ; preds = %if.then60
  %110 = ptrtoint ptr %selector to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %selector, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %old_selector.0, i32 %111)
  %cmp63.not = icmp eq i32 %old_selector.0, %111
  br i1 %cmp63.not, label %land.lhs.true62.if.end131_crit_edge, label %if.then64

land.lhs.true62.if.end131_crit_edge:              ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end131

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  %call66 = call i32 %109(ptr noundef %rdev, i32 noundef %old_selector.0, i32 noundef %111) #25
  br label %if.end79

if.else68:                                        ; preds = %if.end57
  call void @__sanitizer_cov_trace_cmp4(i32 %best_val.0291, i32 %call)
  %cmp69.not = icmp eq i32 %best_val.0291, %call
  br i1 %cmp69.not, label %if.else68.if.end131_crit_edge, label %if.then70

if.else68.if.end131_crit_edge:                    ; preds = %if.else68
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end131

if.then70:                                        ; preds = %if.else68
  %set_voltage_time = getelementptr inbounds %struct.regulator_ops, ptr %4, i32 0, i32 22
  %112 = ptrtoint ptr %set_voltage_time to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %set_voltage_time, align 4
  %tobool71.not = icmp eq ptr %113, null
  br i1 %tobool71.not, label %if.else75, label %if.then72

if.then72:                                        ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #27
  %call74 = call i32 %113(ptr noundef %rdev, i32 noundef %call, i32 noundef %best_val.0291) #25
  br label %if.end79

if.else75:                                        ; preds = %if.then70
  %114 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %constraints.i, align 8
  %ramp_delay1.i = getelementptr inbounds %struct.regulation_constraints, ptr %115, i32 0, i32 22
  %116 = ptrtoint ptr %ramp_delay1.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %ramp_delay1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %117)
  %tobool.not.i249 = icmp eq i32 %117, 0
  br i1 %tobool.not.i249, label %if.else.i250, label %if.else75.if.end42.i_crit_edge

if.else75.if.end42.i_crit_edge:                   ; preds = %if.else75
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end42.i

if.else.i250:                                     ; preds = %if.else75
  %118 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %rdev, align 8
  %ramp_delay4.i = getelementptr inbounds %struct.regulator_desc, ptr %119, i32 0, i32 18
  %120 = ptrtoint ptr %ramp_delay4.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %ramp_delay4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %121)
  %tobool5.not.i = icmp eq i32 %121, 0
  br i1 %tobool5.not.i, label %if.else9.i, label %if.else.i250.if.end42.i_crit_edge

if.else.i250.if.end42.i_crit_edge:                ; preds = %if.else.i250
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end42.i

if.else9.i:                                       ; preds = %if.else.i250
  %settling_time.i = getelementptr inbounds %struct.regulation_constraints, ptr %115, i32 0, i32 23
  %122 = ptrtoint ptr %settling_time.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %settling_time.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %tobool11.not.i = icmp eq i32 %123, 0
  br i1 %tobool11.not.i, label %if.else15.i, label %if.else9.i.if.end79_crit_edge

if.else9.i.if.end79_crit_edge:                    ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end79

if.else15.i:                                      ; preds = %if.else9.i
  %settling_time_up.i = getelementptr inbounds %struct.regulation_constraints, ptr %115, i32 0, i32 24
  %124 = ptrtoint ptr %settling_time_up.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %settling_time_up.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %125)
  %tobool17.not.i251 = icmp ne i32 %125, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %best_val.0291, i32 %call)
  %cmp.i252 = icmp sgt i32 %best_val.0291, %call
  %or.cond.i = and i1 %cmp.i252, %tobool17.not.i251
  br i1 %or.cond.i, label %if.else15.i.if.end79_crit_edge, label %if.else21.i

if.else15.i.if.end79_crit_edge:                   ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end79

if.else21.i:                                      ; preds = %if.else15.i
  %settling_time_down.i = getelementptr inbounds %struct.regulation_constraints, ptr %115, i32 0, i32 25
  %126 = ptrtoint ptr %settling_time_down.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %settling_time_down.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %127)
  %tobool23.not.i = icmp ne i32 %127, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %best_val.0291, i32 %call)
  %cmp25.i = icmp slt i32 %best_val.0291, %call
  %or.cond69.i = and i1 %cmp25.i, %tobool23.not.i
  br i1 %or.cond69.i, label %if.else21.i.if.end79_crit_edge, label %do.body.i

if.else21.i.if.end79_crit_edge:                   ; preds = %if.else21.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end79

do.body.i:                                        ; preds = %if.else21.i
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @_regulator_set_voltage_time.__UNIQUE_ID_ddebug366, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@_regulator_do_set_voltage, %if.end131)) #25
          to label %if.then39.i [label %if.end131], !srcloc !997

if.then39.i:                                      ; preds = %do.body.i
  %128 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i.i253 = icmp eq ptr %129, null
  br i1 %tobool.not.i.i253, label %if.then39.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

if.then39.i.if.else.i.i_crit_edge:                ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %if.then39.i
  %130 = ptrtoint ptr %129 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %129, align 4
  %tobool2.not.i.i = icmp eq ptr %131, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %if.then39.i.if.else.i.i_crit_edge
  %132 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %rdev, align 8
  %134 = ptrtoint ptr %133 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %133, align 4
  %tobool6.not.i.i = icmp eq ptr %135, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %135
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i70.i = phi ptr [ %131, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @_regulator_set_voltage_time.__UNIQUE_ID_ddebug366, ptr noundef nonnull @.str.150, ptr noundef %retval.0.i70.i) #25
  br label %if.end131

if.end42.i:                                       ; preds = %if.else.i250.if.end42.i_crit_edge, %if.else75.if.end42.i_crit_edge
  %ramp_delay.0.ph.i = phi i32 [ %121, %if.else.i250.if.end42.i_crit_edge ], [ %117, %if.else75.if.end42.i_crit_edge ]
  %sub.i254 = sub i32 %best_val.0291, %call
  %136 = call i32 @llvm.abs.i32(i32 %sub.i254, i1 false) #25
  %add.i255 = add i32 %136, -1
  %sub46.i = add i32 %add.i255, %ramp_delay.0.ph.i
  %div.i = udiv i32 %sub46.i, %ramp_delay.0.ph.i
  br label %if.end79

if.end79:                                         ; preds = %if.end42.i, %if.else21.i.if.end79_crit_edge, %if.else15.i.if.end79_crit_edge, %if.else9.i.if.end79_crit_edge, %if.then72, %if.then64
  %delay.0 = phi i32 [ %call66, %if.then64 ], [ %call74, %if.then72 ], [ %div.i, %if.end42.i ], [ %123, %if.else9.i.if.end79_crit_edge ], [ %125, %if.else15.i.if.end79_crit_edge ], [ %127, %if.else21.i.if.end79_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %delay.0)
  %cmp80 = icmp slt i32 %delay.0, 0
  br i1 %cmp80, label %do.end, label %if.end85

do.end:                                           ; preds = %if.end79
  %137 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i258 = icmp eq ptr %138, null
  br i1 %tobool.not.i258, label %do.end.if.else.i263_crit_edge, label %land.lhs.true.i260

do.end.if.else.i263_crit_edge:                    ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i263

land.lhs.true.i260:                               ; preds = %do.end
  %139 = ptrtoint ptr %138 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %138, align 4
  %tobool2.not.i259 = icmp eq ptr %140, null
  br i1 %tobool2.not.i259, label %land.lhs.true.i260.if.else.i263_crit_edge, label %land.lhs.true.i260.rdev_get_name.exit265_crit_edge

land.lhs.true.i260.rdev_get_name.exit265_crit_edge: ; preds = %land.lhs.true.i260
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit265

land.lhs.true.i260.if.else.i263_crit_edge:        ; preds = %land.lhs.true.i260
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i263

if.else.i263:                                     ; preds = %land.lhs.true.i260.if.else.i263_crit_edge, %do.end.if.else.i263_crit_edge
  %141 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %rdev, align 8
  %143 = ptrtoint ptr %142 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %142, align 4
  %tobool6.not.i261 = icmp eq ptr %144, null
  %.str..i262 = select i1 %tobool6.not.i261, ptr @.str, ptr %144
  br label %rdev_get_name.exit265

rdev_get_name.exit265:                            ; preds = %if.else.i263, %land.lhs.true.i260.rdev_get_name.exit265_crit_edge
  %retval.0.i264 = phi ptr [ %140, %land.lhs.true.i260.rdev_get_name.exit265_crit_edge ], [ %.str..i262, %if.else.i263 ]
  %145 = inttoptr i32 %delay.0 to ptr
  %call84 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.143, ptr noundef %retval.0.i264, ptr noundef nonnull %145) #30
  br label %if.end131

if.end85:                                         ; preds = %if.end79
  call void @__sanitizer_cov_trace_const_cmp4(i32 999, i32 %delay.0)
  %cmp86 = icmp ugt i32 %delay.0, 999
  br i1 %cmp86, label %if.then87, label %if.else119

if.then87:                                        ; preds = %if.end85
  %div299 = udiv i32 %delay.0, 1000
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.then87
  %__ms.0305 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ %div299, %if.then87 ]
  %dec = add nsw i32 %__ms.0305, -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %146 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %146(i32 noundef 214748000) #25
  %tobool106.not = icmp eq i32 %dec, 0
  br i1 %tobool106.not, label %cond.false116, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %while.body

cond.false116:                                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  %rem = srem i32 %delay.0, 1000
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %147 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  call void %147(i32 noundef %rem) #25
  br label %if.end131

if.else119:                                       ; preds = %if.end85
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %delay.0)
  %tobool120.not = icmp eq i32 %delay.0, 0
  br i1 %tobool120.not, label %if.else119.if.end131_crit_edge, label %cond.false128

if.else119.if.end131_crit_edge:                   ; preds = %if.else119
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end131

cond.false128:                                    ; preds = %if.else119
  call void @__sanitizer_cov_trace_pc() #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %148 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  call void %148(i32 noundef %delay.0) #25
  br label %if.end131

if.end131:                                        ; preds = %cond.false128, %if.else119.if.end131_crit_edge, %cond.false116, %rdev_get_name.exit265, %rdev_get_name.exit.i, %do.body.i, %if.else68.if.end131_crit_edge, %land.lhs.true62.if.end131_crit_edge, %if.then60.if.end131_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %best_val.0291)
  %cmp132 = icmp sgt i32 %best_val.0291, -1
  br i1 %cmp132, label %if.then133, label %if.end131.out_crit_edge

if.end131.out_crit_edge:                          ; preds = %if.end131
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.then133:                                       ; preds = %if.end131
  call void @__sanitizer_cov_trace_pc() #27
  %149 = inttoptr i32 %best_val.0291 to ptr
  %notifier.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 8
  %call.i266 = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i, i32 noundef 64, ptr noundef %149) #25
  br label %out

out:                                              ; preds = %if.then133, %if.end131.out_crit_edge, %if.end54.out_crit_edge, %try_revert.i, %if.end4.i.out_crit_edge, %if.end.i243.out_crit_edge, %if.then31.out_crit_edge, %regulator_map_voltage.exit.out_crit_edge, %if.else26.out_crit_edge, %_regulator_call_set_voltage.exit.thread
  %best_val.0284 = phi i32 [ %best_val.0291, %if.end131.out_crit_edge ], [ %best_val.0291, %if.then133 ], [ %best_val.0, %if.end54.out_crit_edge ], [ %call33, %try_revert.i ], [ %call33, %if.end4.i.out_crit_edge ], [ %call33, %if.end.i243.out_crit_edge ], [ 0, %_regulator_call_set_voltage.exit.thread ], [ 0, %if.else26.out_crit_edge ], [ %call33, %if.then31.out_crit_edge ], [ 0, %regulator_map_voltage.exit.out_crit_edge ]
  %ret.0283 = phi i32 [ 0, %if.end131.out_crit_edge ], [ 0, %if.then133 ], [ %ret.0, %if.end54.out_crit_edge ], [ %ret.0.i, %try_revert.i ], [ %call6.i244, %if.end4.i.out_crit_edge ], [ -22, %if.end.i243.out_crit_edge ], [ %retval.0.i232.ph, %_regulator_call_set_voltage.exit.thread ], [ -22, %if.else26.out_crit_edge ], [ -22, %if.then31.out_crit_edge ], [ %retval.0.i239, %regulator_map_voltage.exit.out_crit_edge ]
  %150 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i268 = icmp eq ptr %151, null
  br i1 %tobool.not.i268, label %out.if.else.i273_crit_edge, label %land.lhs.true.i270

out.if.else.i273_crit_edge:                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i273

land.lhs.true.i270:                               ; preds = %out
  %152 = ptrtoint ptr %151 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %151, align 4
  %tobool2.not.i269 = icmp eq ptr %153, null
  br i1 %tobool2.not.i269, label %land.lhs.true.i270.if.else.i273_crit_edge, label %land.lhs.true.i270.rdev_get_name.exit275_crit_edge

land.lhs.true.i270.rdev_get_name.exit275_crit_edge: ; preds = %land.lhs.true.i270
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit275

land.lhs.true.i270.if.else.i273_crit_edge:        ; preds = %land.lhs.true.i270
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i273

if.else.i273:                                     ; preds = %land.lhs.true.i270.if.else.i273_crit_edge, %out.if.else.i273_crit_edge
  %154 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %rdev, align 8
  %156 = ptrtoint ptr %155 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %155, align 4
  %tobool6.not.i271 = icmp eq ptr %157, null
  %.str..i272 = select i1 %tobool6.not.i271, ptr @.str, ptr %157
  br label %rdev_get_name.exit275

rdev_get_name.exit275:                            ; preds = %if.else.i273, %land.lhs.true.i270.rdev_get_name.exit275_crit_edge
  %retval.0.i274 = phi ptr [ %153, %land.lhs.true.i270.rdev_get_name.exit275_crit_edge ], [ %.str..i272, %if.else.i273 ]
  call fastcc void @trace_regulator_set_voltage_complete(ptr noundef %retval.0.i274, i32 noundef %best_val.0284)
  br label %cleanup

cleanup:                                          ; preds = %rdev_get_name.exit275, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0283, %rdev_get_name.exit275 ], [ %call11, %if.then.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %selector) #25
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_do_balance_voltage(ptr nocapture noundef readonly %rdev, i32 noundef %state, i1 noundef zeroext %skip_coupled) local_unnamed_addr #0 align 64 {
entry:
  %tmp_min.i = alloca i32, align 4
  %tmp_max.i = alloca i32, align 4
  %c_rdev_done = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %coupling_desc = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %c_rdev_done) #25
  %0 = ptrtoint ptr %c_rdev_done to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %c_rdev_done, align 4
  %1 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %coupling_desc, align 4
  br i1 %skip_coupled, label %entry.for.body.preheader.preheader_crit_edge, label %cond.end

entry.for.body.preheader.preheader_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.preheader.preheader

cond.end:                                         ; preds = %entry
  %n_coupled1 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 3
  %3 = ptrtoint ptr %n_coupled1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %n_coupled1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp146 = icmp sgt i32 %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp.i = icmp eq i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp78368.i = icmp sgt i32 %4, 1
  br i1 %cmp146, label %cond.end.for.body.preheader.preheader_crit_edge, label %cond.end.cleanup33_crit_edge

cond.end.cleanup33_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup33

cond.end.for.body.preheader.preheader_crit_edge:  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.preheader.preheader

for.body.preheader.preheader:                     ; preds = %cond.end.for.body.preheader.preheader_crit_edge, %entry.for.body.preheader.preheader_crit_edge
  %cmp78368.i286 = phi i1 [ %cmp78368.i, %cond.end.for.body.preheader.preheader_crit_edge ], [ false, %entry.for.body.preheader.preheader_crit_edge ]
  %cmp.i285 = phi i1 [ %cmp.i, %cond.end.for.body.preheader.preheader_crit_edge ], [ true, %entry.for.body.preheader.preheader_crit_edge ]
  %cond284 = phi i32 [ %4, %cond.end.for.body.preheader.preheader_crit_edge ], [ 1, %entry.for.body.preheader.preheader_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp129.i287 = icmp eq i32 %state, 0
  br label %for.body

for.body:                                         ; preds = %for.body.backedge, %for.body.preheader.preheader
  %best_c_rdev_done.0.off0154 = phi i1 [ false, %for.body.preheader.preheader ], [ %best_c_rdev_done.0.off0154.be, %for.body.backedge ]
  %best_delta.0153 = phi i32 [ 0, %for.body.preheader.preheader ], [ %best_delta.0153.be, %for.body.backedge ]
  %best_c_rdev.0152 = phi i32 [ 0, %for.body.preheader.preheader ], [ %best_c_rdev.0152.be, %for.body.backedge ]
  %best_max_uV.0151 = phi i32 [ 0, %for.body.preheader.preheader ], [ %best_max_uV.0151.be, %for.body.backedge ]
  %best_min_uV.0150 = phi i32 [ 0, %for.body.preheader.preheader ], [ %best_min_uV.0150.be, %for.body.backedge ]
  %i.0148 = phi i32 [ 0, %for.body.preheader.preheader ], [ %i.0148.be, %for.body.backedge ]
  %best_rdev.0147 = phi ptr [ null, %for.body.preheader.preheader ], [ %best_rdev.0147.be, %for.body.backedge ]
  %5 = ptrtoint ptr %c_rdev_done to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %c_rdev_done, align 4
  %and.i = and i32 %i.0148, 31
  %7 = shl nuw i32 1, %and.i
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool2.not = icmp eq i32 %8, 0
  br i1 %tobool2.not, label %if.end, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end:                                           ; preds = %for.body
  %arrayidx = getelementptr ptr, ptr %2, i32 %i.0148
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 4
  %coupling_desc.i = getelementptr inbounds %struct.regulator_dev, ptr %10, i32 0, i32 7
  %11 = ptrtoint ptr %coupling_desc.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %coupling_desc.i, align 4
  %constraints1.i = getelementptr inbounds %struct.regulator_dev, ptr %10, i32 0, i32 14
  %13 = ptrtoint ptr %constraints1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %constraints1.i, align 8
  br i1 %cmp.i285, label %if.then.i, label %if.end.for.body.i_crit_edge

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

if.then.i:                                        ; preds = %if.end
  %min_uV2.i = getelementptr inbounds %struct.regulation_constraints, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %min_uV2.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %min_uV2.i, align 4
  %max_uV3.i = getelementptr inbounds %struct.regulation_constraints, ptr %14, i32 0, i32 2
  %17 = ptrtoint ptr %max_uV3.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %max_uV3.i, align 4
  %consumer_list.i.i = getelementptr inbounds %struct.regulator_dev, ptr %10, i32 0, i32 6
  %19 = ptrtoint ptr %consumer_list.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn43.i.i = load ptr, ptr %consumer_list.i.i, align 4
  %cmp.not44.i.i = icmp eq ptr %.pn43.i.i, %consumer_list.i.i
  br i1 %cmp.not44.i.i, label %if.then.i.for.end.i.i_crit_edge, label %if.then.i.for.body.i.i_crit_edge

if.then.i.for.body.i.i_crit_edge:                 ; preds = %if.then.i
  br label %for.body.i.i

if.then.i.for.end.i.i_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.then.i.for.body.i.i_crit_edge
  %desired_min_uV.0.i = phi i32 [ %desired_min_uV.1.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %16, %if.then.i.for.body.i.i_crit_edge ]
  %desired_max_uV.0.i = phi i32 [ %desired_max_uV.2.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %18, %if.then.i.for.body.i.i_crit_edge ]
  %.pn45.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn43.i.i, %if.then.i.for.body.i.i_crit_edge ]
  %voltage2.i.i = getelementptr i8, ptr %.pn45.i.i, i32 24
  %arrayidx.i.i = getelementptr [5 x %struct.regulator_voltage], ptr %voltage2.i.i, i32 0, i32 %state
  %20 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i.i = icmp eq i32 %21, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %for.body.i.i.if.end.i.i_crit_edge

for.body.i.i.if.end.i.i_crit_edge:                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %max_uV4.i.i = getelementptr inbounds %struct.regulator_voltage, ptr %arrayidx.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %max_uV4.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %max_uV4.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool5.not.i.i = icmp eq i32 %23, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge, label %land.lhs.true.i.i.if.end.i.i_crit_edge

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i.i

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i.if.end.i.i_crit_edge, %for.body.i.i.if.end.i.i_crit_edge
  %max_uV6.i.i = getelementptr inbounds %struct.regulator_voltage, ptr %arrayidx.i.i, i32 0, i32 1
  %24 = ptrtoint ptr %max_uV6.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %max_uV6.i.i, align 4
  %26 = call i32 @llvm.smin.i32(i32 %desired_max_uV.0.i, i32 %25) #25
  %27 = call i32 @llvm.smax.i32(i32 %desired_min_uV.0.i, i32 %21) #25
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end.i.i, %land.lhs.true.i.i.for.inc.i.i_crit_edge
  %desired_min_uV.1.i = phi i32 [ %desired_min_uV.0.i, %land.lhs.true.i.i.for.inc.i.i_crit_edge ], [ %27, %if.end.i.i ]
  %desired_max_uV.2.i = phi i32 [ %desired_max_uV.0.i, %land.lhs.true.i.i.for.inc.i.i_crit_edge ], [ %26, %if.end.i.i ]
  %28 = ptrtoint ptr %.pn45.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %.pn.i.i = load ptr, ptr %.pn45.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %consumer_list.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.for.end.i.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i.i

for.inc.i.i.for.end.i.i_crit_edge:                ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i.for.end.i.i_crit_edge, %if.then.i.for.end.i.i_crit_edge
  %desired_min_uV.2.i = phi i32 [ %16, %if.then.i.for.end.i.i_crit_edge ], [ %desired_min_uV.1.i, %for.inc.i.i.for.end.i.i_crit_edge ]
  %desired_max_uV.3.i = phi i32 [ %18, %if.then.i.for.end.i.i_crit_edge ], [ %desired_max_uV.2.i, %for.inc.i.i.for.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %desired_min_uV.2.i, i32 %desired_max_uV.3.i)
  %cmp21.i.i = icmp sgt i32 %desired_min_uV.2.i, %desired_max_uV.3.i
  br i1 %cmp21.i.i, label %do.end.i.i, label %for.end.i.i.finish.i_crit_edge

for.end.i.i.finish.i_crit_edge:                   ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %finish.i

do.end.i.i:                                       ; preds = %for.end.i.i
  %tobool.not.i.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i.i, label %do.end.i.i.if.else.i.i.i_crit_edge, label %land.lhs.true.i.i.i

do.end.i.i.if.else.i.i.i_crit_edge:               ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i.i

land.lhs.true.i.i.i:                              ; preds = %do.end.i.i
  %29 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %14, align 4
  %tobool2.not.i.i.i = icmp eq ptr %30, null
  br i1 %tobool2.not.i.i.i, label %land.lhs.true.i.i.i.if.else.i.i.i_crit_edge, label %land.lhs.true.i.i.i.regulator_check_consumers.exit.thread.i_crit_edge

land.lhs.true.i.i.i.regulator_check_consumers.exit.thread.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_check_consumers.exit.thread.i

land.lhs.true.i.i.i.if.else.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i.i

if.else.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.if.else.i.i.i_crit_edge, %do.end.i.i.if.else.i.i.i_crit_edge
  %31 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %10, align 8
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 4
  %tobool6.not.i.i.i = icmp eq ptr %34, null
  %.str..i.i.i = select i1 %tobool6.not.i.i.i, ptr @.str, ptr %34
  br label %regulator_check_consumers.exit.thread.i

regulator_check_consumers.exit.thread.i:          ; preds = %if.else.i.i.i, %land.lhs.true.i.i.i.regulator_check_consumers.exit.thread.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %30, %land.lhs.true.i.i.i.regulator_check_consumers.exit.thread.i_crit_edge ], [ %.str..i.i.i, %if.else.i.i.i ]
  %call24.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7, ptr noundef %retval.0.i.i.i, i32 noundef %desired_min_uV.2.i, i32 noundef %desired_max_uV.3.i) #30
  br label %cleanup33

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %highest_min_uV.0365.i = phi i32 [ %72, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end.for.body.i_crit_edge ]
  %i.0363.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end.for.body.i_crit_edge ]
  %desired_max_uV.4362.i = phi i32 [ %desired_max_uV.5.ph.i, %for.inc.i.for.body.i_crit_edge ], [ 2147483647, %if.end.for.body.i_crit_edge ]
  %desired_min_uV.3361.i = phi i32 [ %desired_min_uV.4.ph.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end.for.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp_min.i) #25
  %35 = ptrtoint ptr %tmp_min.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %tmp_min.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp_max.i) #25
  %36 = ptrtoint ptr %tmp_max.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 2147483647, ptr %tmp_max.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %37 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.i = icmp eq i32 %37, 0
  br i1 %tobool.not.i, label %for.body.i.if.end43.i_crit_edge, label %land.rhs.i

for.body.i.if.end43.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end43.i

land.rhs.i:                                       ; preds = %for.body.i
  %arrayidx.i70 = getelementptr ptr, ptr %12, i32 %i.0363.i
  %38 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx.i70, align 4
  %dep_map.i = getelementptr inbounds %struct.regulator_dev, ptr %39, i32 0, i32 9, i32 0, i32 5
  %call.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp9.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp9.not.i, label %land.rhs13.i, label %land.rhs.i.if.end43.i_crit_edge

land.rhs.i.if.end43.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end43.i

land.rhs13.i:                                     ; preds = %land.rhs.i
  %.b240.i = load i1, ptr @regulator_get_optimal_voltage.__already_done, align 1
  br i1 %.b240.i, label %land.rhs13.i.if.end43.i_crit_edge, label %if.then20.i, !prof !993

land.rhs13.i.if.end43.i_crit_edge:                ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end43.i

if.then20.i:                                      ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_get_optimal_voltage.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3803, i32 noundef 9, ptr noundef null) #25
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.then20.i, %land.rhs13.i.if.end43.i_crit_edge, %land.rhs.i.if.end43.i_crit_edge, %for.body.i.if.end43.i_crit_edge
  %arrayidx53.i = getelementptr ptr, ptr %12, i32 %i.0363.i
  %40 = ptrtoint ptr %arrayidx53.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx53.i, align 4
  %consumer_list.i242.i = getelementptr inbounds %struct.regulator_dev, ptr %41, i32 0, i32 6
  %42 = ptrtoint ptr %consumer_list.i242.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %.pn43.i243.i = load ptr, ptr %consumer_list.i242.i, align 4
  %cmp.not44.i244.i = icmp eq ptr %.pn43.i243.i, %consumer_list.i242.i
  br i1 %cmp.not44.i244.i, label %if.end43.i.for.end.i264.i_crit_edge, label %if.end43.i.for.body.i249.i_crit_edge

if.end43.i.for.body.i249.i_crit_edge:             ; preds = %if.end43.i
  br label %for.body.i249.i

if.end43.i.for.end.i264.i_crit_edge:              ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end.i264.i

for.body.i249.i:                                  ; preds = %for.inc.i262.i.for.body.i249.i_crit_edge, %if.end43.i.for.body.i249.i_crit_edge
  %43 = phi i32 [ %53, %for.inc.i262.i.for.body.i249.i_crit_edge ], [ 0, %if.end43.i.for.body.i249.i_crit_edge ]
  %44 = phi i32 [ %54, %for.inc.i262.i.for.body.i249.i_crit_edge ], [ 2147483647, %if.end43.i.for.body.i249.i_crit_edge ]
  %.pn45.i245.i = phi ptr [ %.pn.i260.i, %for.inc.i262.i.for.body.i249.i_crit_edge ], [ %.pn43.i243.i, %if.end43.i.for.body.i249.i_crit_edge ]
  %voltage2.i246.i = getelementptr i8, ptr %.pn45.i245.i, i32 24
  %arrayidx.i247.i = getelementptr [5 x %struct.regulator_voltage], ptr %voltage2.i246.i, i32 0, i32 %state
  %45 = ptrtoint ptr %arrayidx.i247.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx.i247.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i248.i = icmp eq i32 %46, 0
  br i1 %tobool.not.i248.i, label %land.lhs.true.i252.i, label %for.body.i249.i.if.end.i255.i_crit_edge

for.body.i249.i.if.end.i255.i_crit_edge:          ; preds = %for.body.i249.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i255.i

land.lhs.true.i252.i:                             ; preds = %for.body.i249.i
  %max_uV4.i250.i = getelementptr inbounds %struct.regulator_voltage, ptr %arrayidx.i247.i, i32 0, i32 1
  %47 = ptrtoint ptr %max_uV4.i250.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %max_uV4.i250.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool5.not.i251.i = icmp eq i32 %48, 0
  br i1 %tobool5.not.i251.i, label %land.lhs.true.i252.i.for.inc.i262.i_crit_edge, label %land.lhs.true.i252.i.if.end.i255.i_crit_edge

land.lhs.true.i252.i.if.end.i255.i_crit_edge:     ; preds = %land.lhs.true.i252.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i255.i

land.lhs.true.i252.i.for.inc.i262.i_crit_edge:    ; preds = %land.lhs.true.i252.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i262.i

if.end.i255.i:                                    ; preds = %land.lhs.true.i252.i.if.end.i255.i_crit_edge, %for.body.i249.i.if.end.i255.i_crit_edge
  %max_uV6.i253.i = getelementptr inbounds %struct.regulator_voltage, ptr %arrayidx.i247.i, i32 0, i32 1
  %49 = ptrtoint ptr %max_uV6.i253.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %max_uV6.i253.i, align 4
  %51 = call i32 @llvm.smin.i32(i32 %44, i32 %50) #25
  %52 = call i32 @llvm.smax.i32(i32 %43, i32 %46) #25
  br label %for.inc.i262.i

for.inc.i262.i:                                   ; preds = %if.end.i255.i, %land.lhs.true.i252.i.for.inc.i262.i_crit_edge
  %53 = phi i32 [ %52, %if.end.i255.i ], [ %43, %land.lhs.true.i252.i.for.inc.i262.i_crit_edge ]
  %54 = phi i32 [ %51, %if.end.i255.i ], [ %44, %land.lhs.true.i252.i.for.inc.i262.i_crit_edge ]
  %55 = ptrtoint ptr %.pn45.i245.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %.pn.i260.i = load ptr, ptr %.pn45.i245.i, align 4
  %cmp.not.i261.i = icmp eq ptr %.pn.i260.i, %consumer_list.i242.i
  br i1 %cmp.not.i261.i, label %for.end.i264.loopexit.i, label %for.inc.i262.i.for.body.i249.i_crit_edge

for.inc.i262.i.for.body.i249.i_crit_edge:         ; preds = %for.inc.i262.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i249.i

for.end.i264.loopexit.i:                          ; preds = %for.inc.i262.i
  call void @__sanitizer_cov_trace_pc() #27
  %56 = ptrtoint ptr %tmp_max.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %54, ptr %tmp_max.i, align 4
  %57 = ptrtoint ptr %tmp_min.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %53, ptr %tmp_min.i, align 4
  br label %for.end.i264.i

for.end.i264.i:                                   ; preds = %for.end.i264.loopexit.i, %if.end43.i.for.end.i264.i_crit_edge
  %58 = ptrtoint ptr %tmp_min.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %tmp_min.i, align 4
  %60 = ptrtoint ptr %tmp_max.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %tmp_max.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %59, i32 %61)
  %cmp21.i263.i = icmp sgt i32 %59, %61
  br i1 %cmp21.i263.i, label %do.end.i267.i, label %if.end57.i

do.end.i267.i:                                    ; preds = %for.end.i264.i
  %constraints.i.i265.i = getelementptr inbounds %struct.regulator_dev, ptr %41, i32 0, i32 14
  %62 = ptrtoint ptr %constraints.i.i265.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %constraints.i.i265.i, align 8
  %tobool.not.i.i266.i = icmp eq ptr %63, null
  br i1 %tobool.not.i.i266.i, label %do.end.i267.i.if.else.i.i272.i_crit_edge, label %land.lhs.true.i.i269.i

do.end.i267.i.if.else.i.i272.i_crit_edge:         ; preds = %do.end.i267.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i272.i

land.lhs.true.i.i269.i:                           ; preds = %do.end.i267.i
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %63, align 4
  %tobool2.not.i.i268.i = icmp eq ptr %65, null
  br i1 %tobool2.not.i.i268.i, label %land.lhs.true.i.i269.i.if.else.i.i272.i_crit_edge, label %land.lhs.true.i.i269.i.regulator_check_consumers.exit277.thread.i_crit_edge

land.lhs.true.i.i269.i.regulator_check_consumers.exit277.thread.i_crit_edge: ; preds = %land.lhs.true.i.i269.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_check_consumers.exit277.thread.i

land.lhs.true.i.i269.i.if.else.i.i272.i_crit_edge: ; preds = %land.lhs.true.i.i269.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i272.i

if.else.i.i272.i:                                 ; preds = %land.lhs.true.i.i269.i.if.else.i.i272.i_crit_edge, %do.end.i267.i.if.else.i.i272.i_crit_edge
  %66 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %41, align 8
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %67, align 4
  %tobool6.not.i.i270.i = icmp eq ptr %69, null
  %.str..i.i271.i = select i1 %tobool6.not.i.i270.i, ptr @.str, ptr %69
  br label %regulator_check_consumers.exit277.thread.i

regulator_check_consumers.exit277.thread.i:       ; preds = %if.else.i.i272.i, %land.lhs.true.i.i269.i.regulator_check_consumers.exit277.thread.i_crit_edge
  %retval.0.i.i273.i = phi ptr [ %65, %land.lhs.true.i.i269.i.regulator_check_consumers.exit277.thread.i_crit_edge ], [ %.str..i.i271.i, %if.else.i.i272.i ]
  %call24.i274.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7, ptr noundef %retval.0.i.i273.i, i32 noundef %59, i32 noundef %61) #30
  br label %cleanup.i

if.end57.i:                                       ; preds = %for.end.i264.i
  %call59.i = call i32 @regulator_check_voltage(ptr noundef %41, ptr noundef nonnull %tmp_min.i, ptr noundef nonnull %tmp_max.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59.i)
  %cmp60.i = icmp slt i32 %call59.i, 0
  br i1 %cmp60.i, label %if.end57.i.cleanup.i_crit_edge, label %if.end62.i

if.end57.i.cleanup.i_crit_edge:                   ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup.i

if.end62.i:                                       ; preds = %if.end57.i
  %70 = ptrtoint ptr %tmp_min.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %tmp_min.i, align 4
  %72 = call i32 @llvm.smax.i32(i32 %highest_min_uV.0365.i, i32 %71) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0363.i)
  %cmp65.i = icmp eq i32 %i.0363.i, 0
  br i1 %cmp65.i, label %if.then66.i, label %if.end62.i.for.inc.i_crit_edge

if.end62.i.for.inc.i_crit_edge:                   ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i

if.then66.i:                                      ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #27
  %73 = ptrtoint ptr %tmp_max.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %tmp_max.i, align 4
  br label %for.inc.i

cleanup.i:                                        ; preds = %if.end57.i.cleanup.i_crit_edge, %regulator_check_consumers.exit277.thread.i
  %retval.1.i = phi i32 [ -22, %regulator_check_consumers.exit277.thread.i ], [ %call59.i, %if.end57.i.cleanup.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp_max.i) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp_min.i) #25
  br label %cleanup33

for.inc.i:                                        ; preds = %if.then66.i, %if.end62.i.for.inc.i_crit_edge
  %desired_min_uV.4.ph.i = phi i32 [ %desired_min_uV.3361.i, %if.end62.i.for.inc.i_crit_edge ], [ %71, %if.then66.i ]
  %desired_max_uV.5.ph.i = phi i32 [ %desired_max_uV.4362.i, %if.end62.i.for.inc.i_crit_edge ], [ %74, %if.then66.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp_max.i) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp_min.i) #25
  %inc.i = add nuw nsw i32 %i.0363.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %cond284
  br i1 %exitcond.not.i, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  %max_spread69.i = getelementptr inbounds %struct.regulation_constraints, ptr %14, i32 0, i32 8
  %75 = ptrtoint ptr %max_spread69.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %max_spread69.i, align 4
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %76, align 4
  %sub.i = sub i32 %72, %78
  %79 = call i32 @llvm.smax.i32(i32 %desired_min_uV.4.ph.i, i32 %sub.i) #25
  br i1 %cmp78368.i286, label %for.end.i.for.body79.i_crit_edge, label %for.end.i.if.end123.i_crit_edge

for.end.i.if.end123.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end123.i

for.end.i.for.body79.i_crit_edge:                 ; preds = %for.end.i
  br label %for.body79.i

for.body79.i:                                     ; preds = %for.inc105.i.for.body79.i_crit_edge, %for.end.i.for.body79.i_crit_edge
  %max_current_uV.0371.i = phi i32 [ %max_current_uV.1.ph.i, %for.inc105.i.for.body79.i_crit_edge ], [ 0, %for.end.i.for.body79.i_crit_edge ]
  %min_current_uV.0370.i = phi i32 [ %min_current_uV.1.ph.i, %for.inc105.i.for.body79.i_crit_edge ], [ 2147483647, %for.end.i.for.body79.i_crit_edge ]
  %i.1369.i = phi i32 [ %inc106.i, %for.inc105.i.for.body79.i_crit_edge ], [ 1, %for.end.i.for.body79.i_crit_edge ]
  %arrayidx80.i = getelementptr ptr, ptr %12, i32 %i.1369.i
  %80 = ptrtoint ptr %arrayidx80.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %arrayidx80.i, align 4
  %ena_pin.i.i = getelementptr inbounds %struct.regulator_dev, ptr %81, i32 0, i32 21
  %82 = ptrtoint ptr %ena_pin.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ena_pin.i.i, align 4
  %tobool.not.i278.i = icmp eq ptr %83, null
  br i1 %tobool.not.i278.i, label %if.end.i279.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body79.i
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i.i = getelementptr inbounds %struct.regulator_dev, ptr %81, i32 0, i32 22
  %84 = ptrtoint ptr %ena_gpio_state.i.i to i32
  call void @__asan_load1_noabort(i32 %84)
  %bf.load.i.i = load i8, ptr %ena_gpio_state.i.i, align 8
  %bf.lshr.i.i = lshr i8 %bf.load.i.i, 7
  %bf.cast.i.i = zext i8 %bf.lshr.i.i to i32
  br label %_regulator_is_enabled.exit.i

if.end.i279.i:                                    ; preds = %for.body79.i
  %85 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %81, align 8
  %ops.i.i = getelementptr inbounds %struct.regulator_desc, ptr %86, i32 0, i32 10
  %87 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %ops.i.i, align 4
  %is_enabled.i.i = getelementptr inbounds %struct.regulator_ops, ptr %88, i32 0, i32 16
  %89 = ptrtoint ptr %is_enabled.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %is_enabled.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %90, null
  br i1 %tobool1.not.i.i, label %if.end.i279.i.if.end84.i_crit_edge, label %if.end3.i.i

if.end.i279.i.if.end84.i_crit_edge:               ; preds = %if.end.i279.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end84.i

if.end3.i.i:                                      ; preds = %if.end.i279.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i280.i = call i32 %90(ptr noundef %81) #25
  br label %_regulator_is_enabled.exit.i

_regulator_is_enabled.exit.i:                     ; preds = %if.end3.i.i, %if.then.i.i
  %retval.0.i281.i = phi i32 [ %bf.cast.i.i, %if.then.i.i ], [ %call.i280.i, %if.end3.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i281.i)
  %tobool82.not.i = icmp eq i32 %retval.0.i281.i, 0
  br i1 %tobool82.not.i, label %_regulator_is_enabled.exit.i.for.inc105.i_crit_edge, label %_regulator_is_enabled.exit.i.if.end84.i_crit_edge

_regulator_is_enabled.exit.i.if.end84.i_crit_edge: ; preds = %_regulator_is_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end84.i

_regulator_is_enabled.exit.i.for.inc105.i_crit_edge: ; preds = %_regulator_is_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc105.i

if.end84.i:                                       ; preds = %_regulator_is_enabled.exit.i.if.end84.i_crit_edge, %if.end.i279.i.if.end84.i_crit_edge
  %91 = ptrtoint ptr %arrayidx80.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %arrayidx80.i, align 4
  %call86.i = call i32 @regulator_get_voltage_rdev(ptr noundef %92) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86.i)
  %cmp87.i = icmp slt i32 %call86.i, 0
  br i1 %cmp87.i, label %if.end84.i.cleanup33_crit_edge, label %if.end89.i

if.end84.i.cleanup33_crit_edge:                   ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup33

if.end89.i:                                       ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #27
  %93 = call i32 @llvm.smin.i32(i32 %call86.i, i32 %min_current_uV.0370.i) #25
  %94 = call i32 @llvm.smax.i32(i32 %call86.i, i32 %max_current_uV.0371.i) #25
  br label %for.inc105.i

for.inc105.i:                                     ; preds = %if.end89.i, %_regulator_is_enabled.exit.i.for.inc105.i_crit_edge
  %min_current_uV.1.ph.i = phi i32 [ %min_current_uV.0370.i, %_regulator_is_enabled.exit.i.for.inc105.i_crit_edge ], [ %93, %if.end89.i ]
  %max_current_uV.1.ph.i = phi i32 [ %max_current_uV.0371.i, %_regulator_is_enabled.exit.i.for.inc105.i_crit_edge ], [ %94, %if.end89.i ]
  %inc106.i = add nuw nsw i32 %i.1369.i, 1
  %exitcond386.not.i = icmp eq i32 %inc106.i, %cond284
  br i1 %exitcond386.not.i, label %for.end107.i, label %for.inc105.i.for.body79.i_crit_edge

for.inc105.i.for.body79.i_crit_edge:              ; preds = %for.inc105.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body79.i

for.end107.i:                                     ; preds = %for.inc105.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_current_uV.1.ph.i)
  %cmp108.i = icmp eq i32 %max_current_uV.1.ph.i, 0
  br i1 %cmp108.i, label %for.end107.i.if.end123.i_crit_edge, label %if.else.i

for.end107.i.if.end123.i_crit_edge:               ; preds = %for.end107.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end123.i

if.else.i:                                        ; preds = %for.end107.i
  call void @__sanitizer_cov_trace_pc() #27
  %sub110.i = sub i32 %max_current_uV.1.ph.i, %78
  %95 = call i32 @llvm.smax.i32(i32 %79, i32 %sub110.i) #25
  %add.i = add i32 %min_current_uV.1.ph.i, %78
  %96 = call i32 @llvm.smin.i32(i32 %95, i32 %add.i) #25
  br label %if.end123.i

if.end123.i:                                      ; preds = %if.else.i, %for.end107.i.if.end123.i_crit_edge, %for.end.i.if.end123.i_crit_edge
  %possible_uV.0.i = phi i32 [ %96, %if.else.i ], [ %79, %for.end107.i.if.end123.i_crit_edge ], [ %79, %for.end.i.if.end123.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %possible_uV.0.i, i32 %desired_max_uV.5.ph.i)
  %cmp124.i = icmp sgt i32 %possible_uV.0.i, %desired_max_uV.5.ph.i
  br i1 %cmp124.i, label %if.end123.i.cleanup33_crit_edge, label %if.end126.i

if.end123.i.cleanup33_crit_edge:                  ; preds = %if.end123.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup33

if.end126.i:                                      ; preds = %if.end123.i
  call void @__sanitizer_cov_trace_pc() #27
  call void @__sanitizer_cov_trace_cmp4(i32 %possible_uV.0.i, i32 %79)
  %cmp127.i = icmp eq i32 %possible_uV.0.i, %79
  br label %finish.i

finish.i:                                         ; preds = %if.end126.i, %for.end.i.i.finish.i_crit_edge
  %desired_min_uV.5.i = phi i32 [ %possible_uV.0.i, %if.end126.i ], [ %desired_min_uV.2.i, %for.end.i.i.finish.i_crit_edge ]
  %desired_max_uV.6.i = phi i32 [ %desired_max_uV.5.ph.i, %if.end126.i ], [ %desired_max_uV.3.i, %for.end.i.i.finish.i_crit_edge ]
  %done.0.off0.i = phi i1 [ %cmp127.i, %if.end126.i ], [ true, %for.end.i.i.finish.i_crit_edge ]
  br i1 %cmp129.i287, label %if.then130.i, label %finish.i.if.end138.i_crit_edge

finish.i.if.end138.i_crit_edge:                   ; preds = %finish.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end138.i

if.then130.i:                                     ; preds = %finish.i
  %97 = ptrtoint ptr %constraints1.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %constraints1.i, align 8
  %max_uV_step.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %98, i32 0, i32 9
  %99 = ptrtoint ptr %max_uV_step.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %max_uV_step.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %tobool.not.i282.i = icmp eq i32 %100, 0
  br i1 %tobool.not.i282.i, label %if.then130.i.if.end138.i_crit_edge, label %lor.lhs.false.i.i

if.then130.i.if.end138.i_crit_edge:               ; preds = %if.then130.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end138.i

lor.lhs.false.i.i:                                ; preds = %if.then130.i
  %ena_pin.i.i.i = getelementptr inbounds %struct.regulator_dev, ptr %10, i32 0, i32 21
  %101 = ptrtoint ptr %ena_pin.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %ena_pin.i.i.i, align 4
  %tobool.not.i.i283.i = icmp eq ptr %102, null
  br i1 %tobool.not.i.i283.i, label %if.end.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i.i.i = getelementptr inbounds %struct.regulator_dev, ptr %10, i32 0, i32 22
  %103 = ptrtoint ptr %ena_gpio_state.i.i.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %bf.load.i.i.i = load i8, ptr %ena_gpio_state.i.i.i, align 8
  %bf.lshr.i.i.i = lshr i8 %bf.load.i.i.i, 7
  %bf.cast.i.i.i = zext i8 %bf.lshr.i.i.i to i32
  br label %_regulator_is_enabled.exit.i.i

if.end.i.i.i:                                     ; preds = %lor.lhs.false.i.i
  %104 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %10, align 8
  %ops.i.i.i = getelementptr inbounds %struct.regulator_desc, ptr %105, i32 0, i32 10
  %106 = ptrtoint ptr %ops.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %ops.i.i.i, align 4
  %is_enabled.i.i.i = getelementptr inbounds %struct.regulator_ops, ptr %107, i32 0, i32 16
  %108 = ptrtoint ptr %is_enabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %is_enabled.i.i.i, align 4
  %tobool1.not.i.i.i = icmp eq ptr %109, null
  br i1 %tobool1.not.i.i.i, label %if.end.i.i.i.if.then3.i.i_crit_edge, label %if.end3.i.i.i

if.end.i.i.i.if.then3.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then3.i.i

if.end3.i.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i.i.i = call i32 %109(ptr noundef %10) #25
  br label %_regulator_is_enabled.exit.i.i

_regulator_is_enabled.exit.i.i:                   ; preds = %if.end3.i.i.i, %if.then.i.i.i
  %retval.0.i.i284.i = phi i32 [ %bf.cast.i.i.i, %if.then.i.i.i ], [ %call.i.i.i, %if.end3.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i284.i)
  %tobool2.not.i.i = icmp eq i32 %retval.0.i.i284.i, 0
  br i1 %tobool2.not.i.i, label %_regulator_is_enabled.exit.i.i.if.end138.i_crit_edge, label %_regulator_is_enabled.exit.i.i.if.then3.i.i_crit_edge

_regulator_is_enabled.exit.i.i.if.then3.i.i_crit_edge: ; preds = %_regulator_is_enabled.exit.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then3.i.i

_regulator_is_enabled.exit.i.i.if.end138.i_crit_edge: ; preds = %_regulator_is_enabled.exit.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end138.i

if.then3.i.i:                                     ; preds = %_regulator_is_enabled.exit.i.i.if.then3.i.i_crit_edge, %if.end.i.i.i.if.then3.i.i_crit_edge
  %call4.i.i = call i32 @regulator_get_voltage_rdev(ptr noundef %10) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.i.i = icmp slt i32 %call4.i.i, 0
  br i1 %cmp5.i.i, label %if.then3.i.i.cleanup33_crit_edge, label %if.end8.i.i

if.then3.i.i.cleanup33_crit_edge:                 ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup33

if.end8.i.i:                                      ; preds = %if.then3.i.i
  %sub.i.i = sub i32 %call4.i.i, %desired_min_uV.5.i
  %110 = call i32 @llvm.abs.i32(i32 %sub.i.i, i1 false) #25
  %111 = ptrtoint ptr %max_uV_step.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %max_uV_step.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %110, i32 %112)
  %cmp12.not.i.i = icmp sgt i32 %110, %112
  br i1 %cmp12.not.i.i, label %if.end14.i.i, label %if.end8.i.i.regulator_get_optimal_voltage.exit_crit_edge

if.end8.i.i.regulator_get_optimal_voltage.exit_crit_edge: ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_get_optimal_voltage.exit

if.end14.i.i:                                     ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %call4.i.i, i32 %desired_min_uV.5.i)
  %cmp15.i.i = icmp slt i32 %call4.i.i, %desired_min_uV.5.i
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.else.i.i

if.then16.i.i:                                    ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %add.i.i = add i32 %112, %call4.i.i
  %113 = call i32 @llvm.smin.i32(i32 %add.i.i, i32 %desired_min_uV.5.i) #25
  br label %regulator_get_optimal_voltage.exit

if.else.i.i:                                      ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %sub25.i.i = sub i32 %call4.i.i, %112
  %114 = call i32 @llvm.smax.i32(i32 %sub25.i.i, i32 %desired_min_uV.5.i) #25
  br label %regulator_get_optimal_voltage.exit

if.end138.i:                                      ; preds = %_regulator_is_enabled.exit.i.i.if.end138.i_crit_edge, %if.then130.i.if.end138.i_crit_edge, %finish.i.if.end138.i_crit_edge
  br i1 %cmp78368.i286, label %if.then141.i, label %if.end138.i.regulator_get_optimal_voltage.exit_crit_edge

if.end138.i.regulator_get_optimal_voltage.exit_crit_edge: ; preds = %if.end138.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_get_optimal_voltage.exit

if.then141.i:                                     ; preds = %if.end138.i
  %ena_pin.i287.i = getelementptr inbounds %struct.regulator_dev, ptr %10, i32 0, i32 21
  %115 = ptrtoint ptr %ena_pin.i287.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %ena_pin.i287.i, align 4
  %tobool.not.i288.i = icmp eq ptr %116, null
  br i1 %tobool.not.i288.i, label %if.end.i297.i, label %if.then.i293.i

if.then.i293.i:                                   ; preds = %if.then141.i
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i289.i = getelementptr inbounds %struct.regulator_dev, ptr %10, i32 0, i32 22
  %117 = ptrtoint ptr %ena_gpio_state.i289.i to i32
  call void @__asan_load1_noabort(i32 %117)
  %bf.load.i290.i = load i8, ptr %ena_gpio_state.i289.i, align 8
  %bf.lshr.i291.i = lshr i8 %bf.load.i290.i, 7
  %bf.cast.i292.i = zext i8 %bf.lshr.i291.i to i32
  br label %_regulator_is_enabled.exit301.i

if.end.i297.i:                                    ; preds = %if.then141.i
  %118 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %10, align 8
  %ops.i294.i = getelementptr inbounds %struct.regulator_desc, ptr %119, i32 0, i32 10
  %120 = ptrtoint ptr %ops.i294.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %ops.i294.i, align 4
  %is_enabled.i295.i = getelementptr inbounds %struct.regulator_ops, ptr %121, i32 0, i32 16
  %122 = ptrtoint ptr %is_enabled.i295.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %is_enabled.i295.i, align 4
  %tobool1.not.i296.i = icmp eq ptr %123, null
  br i1 %tobool1.not.i296.i, label %if.end.i297.i.if.then144.i_crit_edge, label %if.end3.i299.i

if.end.i297.i.if.then144.i_crit_edge:             ; preds = %if.end.i297.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then144.i

if.end3.i299.i:                                   ; preds = %if.end.i297.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i298.i = call i32 %123(ptr noundef %10) #25
  br label %_regulator_is_enabled.exit301.i

_regulator_is_enabled.exit301.i:                  ; preds = %if.end3.i299.i, %if.then.i293.i
  %retval.0.i300.i = phi i32 [ %bf.cast.i292.i, %if.then.i293.i ], [ %call.i298.i, %if.end3.i299.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i300.i)
  %tobool143.not.i = icmp eq i32 %retval.0.i300.i, 0
  br i1 %tobool143.not.i, label %_regulator_is_enabled.exit301.i.for.inc_crit_edge, label %_regulator_is_enabled.exit301.i.if.then144.i_crit_edge

_regulator_is_enabled.exit301.i.if.then144.i_crit_edge: ; preds = %_regulator_is_enabled.exit301.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then144.i

_regulator_is_enabled.exit301.i.for.inc_crit_edge: ; preds = %_regulator_is_enabled.exit301.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then144.i:                                     ; preds = %_regulator_is_enabled.exit301.i.if.then144.i_crit_edge, %if.end.i297.i.if.then144.i_crit_edge
  %call145.i = call i32 @regulator_get_voltage_rdev(ptr noundef %10) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call145.i)
  %cmp146.i = icmp slt i32 %call145.i, 0
  br i1 %cmp146.i, label %if.then144.i.cleanup33_crit_edge, label %if.then144.i.regulator_get_optimal_voltage.exit_crit_edge

if.then144.i.regulator_get_optimal_voltage.exit_crit_edge: ; preds = %if.then144.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_get_optimal_voltage.exit

if.then144.i.cleanup33_crit_edge:                 ; preds = %if.then144.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup33

regulator_get_optimal_voltage.exit:               ; preds = %if.then144.i.regulator_get_optimal_voltage.exit_crit_edge, %if.end138.i.regulator_get_optimal_voltage.exit_crit_edge, %if.else.i.i, %if.then16.i.i, %if.end8.i.i.regulator_get_optimal_voltage.exit_crit_edge
  %done.1.off0.i190 = phi i1 [ %done.0.off0.i, %if.end138.i.regulator_get_optimal_voltage.exit_crit_edge ], [ %done.0.off0.i, %if.then144.i.regulator_get_optimal_voltage.exit_crit_edge ], [ %done.0.off0.i, %if.end8.i.i.regulator_get_optimal_voltage.exit_crit_edge ], [ false, %if.else.i.i ], [ false, %if.then16.i.i ]
  %desired_min_uV.7.i189 = phi i32 [ %desired_min_uV.5.i, %if.end138.i.regulator_get_optimal_voltage.exit_crit_edge ], [ %desired_min_uV.5.i, %if.then144.i.regulator_get_optimal_voltage.exit_crit_edge ], [ %desired_min_uV.5.i, %if.end8.i.i.regulator_get_optimal_voltage.exit_crit_edge ], [ %114, %if.else.i.i ], [ %113, %if.then16.i.i ]
  %current_uV.2 = phi i32 [ -1, %if.end138.i.regulator_get_optimal_voltage.exit_crit_edge ], [ %call145.i, %if.then144.i.regulator_get_optimal_voltage.exit_crit_edge ], [ %call4.i.i, %if.end8.i.i.regulator_get_optimal_voltage.exit_crit_edge ], [ %call4.i.i, %if.else.i.i ], [ %call4.i.i, %if.then16.i.i ]
  %sub = sub i32 %desired_min_uV.7.i189, %current_uV.2
  %124 = call i32 @llvm.abs.i32(i32 %sub, i1 false)
  call void @__sanitizer_cov_trace_cmp4(i32 %desired_min_uV.7.i189, i32 %current_uV.2)
  %tobool13.not = icmp eq i32 %desired_min_uV.7.i189, %current_uV.2
  call void @__sanitizer_cov_trace_cmp4(i32 %best_delta.0153, i32 %124)
  %cmp14.not = icmp ugt i32 %best_delta.0153, %124
  %or.cond = select i1 %tobool13.not, i1 true, i1 %cmp14.not
  br i1 %or.cond, label %regulator_get_optimal_voltage.exit.for.inc_crit_edge, label %if.then15

regulator_get_optimal_voltage.exit.for.inc_crit_edge: ; preds = %regulator_get_optimal_voltage.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then15:                                        ; preds = %regulator_get_optimal_voltage.exit
  call void @__sanitizer_cov_trace_pc() #27
  %125 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then15, %regulator_get_optimal_voltage.exit.for.inc_crit_edge, %_regulator_is_enabled.exit301.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %best_rdev.2.ph = phi ptr [ %best_rdev.0147, %regulator_get_optimal_voltage.exit.for.inc_crit_edge ], [ %126, %if.then15 ], [ %best_rdev.0147, %for.body.for.inc_crit_edge ], [ %best_rdev.0147, %_regulator_is_enabled.exit301.i.for.inc_crit_edge ]
  %best_min_uV.2.ph = phi i32 [ %best_min_uV.0150, %regulator_get_optimal_voltage.exit.for.inc_crit_edge ], [ %desired_min_uV.7.i189, %if.then15 ], [ %best_min_uV.0150, %for.body.for.inc_crit_edge ], [ %best_min_uV.0150, %_regulator_is_enabled.exit301.i.for.inc_crit_edge ]
  %best_max_uV.2.ph = phi i32 [ %best_max_uV.0151, %regulator_get_optimal_voltage.exit.for.inc_crit_edge ], [ %desired_max_uV.6.i, %if.then15 ], [ %best_max_uV.0151, %for.body.for.inc_crit_edge ], [ %best_max_uV.0151, %_regulator_is_enabled.exit301.i.for.inc_crit_edge ]
  %best_c_rdev.2.ph = phi i32 [ %best_c_rdev.0152, %regulator_get_optimal_voltage.exit.for.inc_crit_edge ], [ %i.0148, %if.then15 ], [ %best_c_rdev.0152, %for.body.for.inc_crit_edge ], [ %best_c_rdev.0152, %_regulator_is_enabled.exit301.i.for.inc_crit_edge ]
  %best_delta.2.ph = phi i32 [ %best_delta.0153, %regulator_get_optimal_voltage.exit.for.inc_crit_edge ], [ %124, %if.then15 ], [ %best_delta.0153, %for.body.for.inc_crit_edge ], [ %best_delta.0153, %_regulator_is_enabled.exit301.i.for.inc_crit_edge ]
  %best_c_rdev_done.2.off0.ph = phi i1 [ %best_c_rdev_done.0.off0154, %regulator_get_optimal_voltage.exit.for.inc_crit_edge ], [ %done.1.off0.i190, %if.then15 ], [ %best_c_rdev_done.0.off0154, %for.body.for.inc_crit_edge ], [ %best_c_rdev_done.0.off0154, %_regulator_is_enabled.exit301.i.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.0148, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %cond284)
  %exitcond.not = icmp eq i32 %inc, %cond284
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body.backedge_crit_edge

for.inc.for.body.backedge_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.backedge

for.body.backedge:                                ; preds = %do.cond.for.body.backedge_crit_edge, %for.inc.for.body.backedge_crit_edge
  %best_c_rdev_done.0.off0154.be = phi i1 [ %best_c_rdev_done.2.off0.ph, %for.inc.for.body.backedge_crit_edge ], [ false, %do.cond.for.body.backedge_crit_edge ]
  %best_delta.0153.be = phi i32 [ %best_delta.2.ph, %for.inc.for.body.backedge_crit_edge ], [ 0, %do.cond.for.body.backedge_crit_edge ]
  %best_c_rdev.0152.be = phi i32 [ %best_c_rdev.2.ph, %for.inc.for.body.backedge_crit_edge ], [ 0, %do.cond.for.body.backedge_crit_edge ]
  %best_max_uV.0151.be = phi i32 [ %best_max_uV.2.ph, %for.inc.for.body.backedge_crit_edge ], [ 0, %do.cond.for.body.backedge_crit_edge ]
  %best_min_uV.0150.be = phi i32 [ %best_min_uV.2.ph, %for.inc.for.body.backedge_crit_edge ], [ 0, %do.cond.for.body.backedge_crit_edge ]
  %i.0148.be = phi i32 [ %inc, %for.inc.for.body.backedge_crit_edge ], [ 0, %do.cond.for.body.backedge_crit_edge ]
  %best_rdev.0147.be = phi ptr [ %best_rdev.2.ph, %for.inc.for.body.backedge_crit_edge ], [ null, %do.cond.for.body.backedge_crit_edge ]
  br label %for.body

for.end:                                          ; preds = %for.inc
  %tobool22.not = icmp eq ptr %best_rdev.2.ph, null
  br i1 %tobool22.not, label %for.end.cleanup33_crit_edge, label %if.end24

for.end.cleanup33_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup33

if.end24:                                         ; preds = %for.end
  %call25 = call i32 @regulator_set_voltage_rdev(ptr noundef nonnull %best_rdev.2.ph, i32 noundef %best_min_uV.2.ph, i32 noundef %best_max_uV.2.ph, i32 noundef %state)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp26 = icmp slt i32 %call25, 0
  br i1 %cmp26, label %if.end24.cleanup33_crit_edge, label %if.end28

if.end24.cleanup33_crit_edge:                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup33

if.end28:                                         ; preds = %if.end24
  br i1 %best_c_rdev_done.2.off0.ph, label %if.then30, label %if.end28.do.cond_crit_edge

if.end28.do.cond_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.cond

if.then30:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #27
  call void @_set_bit(i32 noundef %best_c_rdev.2.ph, ptr noundef nonnull %c_rdev_done) #25
  br label %do.cond

do.cond:                                          ; preds = %if.then30, %if.end28.do.cond_crit_edge
  br i1 %cmp78368.i286, label %do.cond.for.body.backedge_crit_edge, label %do.cond.cleanup33_crit_edge

do.cond.cleanup33_crit_edge:                      ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup33

do.cond.for.body.backedge_crit_edge:              ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.backedge

cleanup33:                                        ; preds = %do.cond.cleanup33_crit_edge, %if.end24.cleanup33_crit_edge, %for.end.cleanup33_crit_edge, %if.then144.i.cleanup33_crit_edge, %if.then3.i.i.cleanup33_crit_edge, %if.end123.i.cleanup33_crit_edge, %if.end84.i.cleanup33_crit_edge, %cleanup.i, %regulator_check_consumers.exit.thread.i, %cond.end.cleanup33_crit_edge
  %retval.0 = phi i32 [ -22, %regulator_check_consumers.exit.thread.i ], [ %retval.1.i, %cleanup.i ], [ 0, %cond.end.cleanup33_crit_edge ], [ %call86.i, %if.end84.i.cleanup33_crit_edge ], [ %call25, %if.end24.cleanup33_crit_edge ], [ %call25, %do.cond.cleanup33_crit_edge ], [ 0, %for.end.cleanup33_crit_edge ], [ %call4.i.i, %if.then3.i.i.cleanup33_crit_edge ], [ %call145.i, %if.then144.i.cleanup33_crit_edge ], [ -22, %if.end123.i.cleanup33_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %c_rdev_done) #25
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_set_voltage(ptr nocapture noundef %regulator, i32 noundef %min_uV, i32 noundef %max_uV) #0 align 64 {
entry:
  %ww_ctx = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx) #25
  %0 = call ptr @memset(ptr %ww_ctx, i32 255, i32 64)
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %1 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdev, align 4
  call fastcc void @regulator_lock_dependent(ptr noundef %2, ptr noundef nonnull %ww_ctx)
  %call = call fastcc i32 @regulator_set_voltage_unlocked(ptr noundef %regulator, i32 noundef %min_uV, i32 noundef %max_uV, i32 noundef 0)
  %3 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rdev, align 4
  %n_coupled.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 7, i32 3
  %5 = ptrtoint ptr %n_coupled.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %n_coupled.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %4, i32 noundef %6) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx) #25
  ret i32 %call
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @regulator_suspend_enable(ptr nocapture noundef readonly %rdev, i32 noundef %state) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %0 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i.i, align 8
  %cmp.i.i = icmp eq ptr %1, null
  br i1 %cmp.i.i, label %entry.regulator_suspend_toggle.exit_crit_edge, label %if.end.i.i

entry.regulator_suspend_toggle.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_suspend_toggle.exit

if.end.i.i:                                       ; preds = %entry
  %2 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.365)
  switch i32 %state, label %if.end.i.i.regulator_suspend_toggle.exit_crit_edge [
    i32 2, label %sw.bb.i.i
    i32 3, label %sw.bb2.i.i
    i32 4, label %sw.bb4.i.i
  ]

if.end.i.i.regulator_suspend_toggle.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_suspend_toggle.exit

sw.bb.i.i:                                        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_standby.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 15
  br label %regulator_get_suspend_state.exit.i

sw.bb2.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_mem.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 14
  br label %regulator_get_suspend_state.exit.i

sw.bb4.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_disk.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 13
  br label %regulator_get_suspend_state.exit.i

regulator_get_suspend_state.exit.i:               ; preds = %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb.i.i
  %retval.0.i.i = phi ptr [ %state_disk.i.i, %sw.bb4.i.i ], [ %state_mem.i.i, %sw.bb2.i.i ], [ %state_standby.i.i, %sw.bb.i.i ]
  %cmp.i = icmp eq ptr %retval.0.i.i, null
  br i1 %cmp.i, label %regulator_get_suspend_state.exit.i.regulator_suspend_toggle.exit_crit_edge, label %if.end.i

regulator_get_suspend_state.exit.i.regulator_suspend_toggle.exit_crit_edge: ; preds = %regulator_get_suspend_state.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_suspend_toggle.exit

if.end.i:                                         ; preds = %regulator_get_suspend_state.exit.i
  %changeable.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 5
  %3 = ptrtoint ptr %changeable.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %changeable.i, align 4, !range !1000
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %if.end.i.regulator_suspend_toggle.exit_crit_edge, label %if.end2.i

if.end.i.regulator_suspend_toggle.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_suspend_toggle.exit

if.end2.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %enabled.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 4
  %5 = ptrtoint ptr %enabled.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 2, ptr %enabled.i, align 4
  br label %regulator_suspend_toggle.exit

regulator_suspend_toggle.exit:                    ; preds = %if.end2.i, %if.end.i.regulator_suspend_toggle.exit_crit_edge, %regulator_get_suspend_state.exit.i.regulator_suspend_toggle.exit_crit_edge, %if.end.i.i.regulator_suspend_toggle.exit_crit_edge, %entry.regulator_suspend_toggle.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end2.i ], [ -22, %regulator_get_suspend_state.exit.i.regulator_suspend_toggle.exit_crit_edge ], [ -1, %if.end.i.regulator_suspend_toggle.exit_crit_edge ], [ -22, %entry.regulator_suspend_toggle.exit_crit_edge ], [ -22, %if.end.i.i.regulator_suspend_toggle.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_suspend_disable(ptr noundef readonly %rdev, i32 noundef %state) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %consumer_list = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 6
  br label %for.cond

for.cond:                                         ; preds = %lor.lhs.false.for.cond_crit_edge, %entry
  %.pn.in = phi ptr [ %consumer_list, %entry ], [ %.pn, %lor.lhs.false.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %consumer_list
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %voltage2 = getelementptr i8, ptr %.pn, i32 24
  %arrayidx = getelementptr [5 x %struct.regulator_voltage], ptr %voltage2, i32 0, i32 %state
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %lor.lhs.false, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

lor.lhs.false:                                    ; preds = %for.body
  %max_uV = getelementptr inbounds %struct.regulator_voltage, ptr %arrayidx, i32 0, i32 1
  %3 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_uV, align 4
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %lor.lhs.false.for.cond_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

lor.lhs.false.for.cond_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %5 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %constraints.i.i, align 8
  %cmp.i.i = icmp eq ptr %6, null
  br i1 %cmp.i.i, label %for.end.cleanup_crit_edge, label %if.end.i.i

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end.i.i:                                       ; preds = %for.end
  %7 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.366)
  switch i32 %state, label %if.end.i.i.cleanup_crit_edge [
    i32 2, label %sw.bb.i.i
    i32 3, label %sw.bb2.i.i
    i32 4, label %sw.bb4.i.i
  ]

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

sw.bb.i.i:                                        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_standby.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %6, i32 0, i32 15
  br label %regulator_get_suspend_state.exit.i

sw.bb2.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_mem.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %6, i32 0, i32 14
  br label %regulator_get_suspend_state.exit.i

sw.bb4.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_disk.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %6, i32 0, i32 13
  br label %regulator_get_suspend_state.exit.i

regulator_get_suspend_state.exit.i:               ; preds = %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb.i.i
  %retval.0.i.i = phi ptr [ %state_disk.i.i, %sw.bb4.i.i ], [ %state_mem.i.i, %sw.bb2.i.i ], [ %state_standby.i.i, %sw.bb.i.i ]
  %cmp.i = icmp eq ptr %retval.0.i.i, null
  br i1 %cmp.i, label %regulator_get_suspend_state.exit.i.cleanup_crit_edge, label %if.end.i

regulator_get_suspend_state.exit.i.cleanup_crit_edge: ; preds = %regulator_get_suspend_state.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end.i:                                         ; preds = %regulator_get_suspend_state.exit.i
  %changeable.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 5
  %8 = ptrtoint ptr %changeable.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %changeable.i, align 4, !range !1000
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i, label %if.end.i.cleanup_crit_edge, label %if.end2.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end2.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %enabled.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 4
  %10 = ptrtoint ptr %enabled.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 1, ptr %enabled.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end2.i, %if.end.i.cleanup_crit_edge, %regulator_get_suspend_state.exit.i.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %for.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end2.i ], [ -22, %regulator_get_suspend_state.exit.i.cleanup_crit_edge ], [ -1, %if.end.i.cleanup_crit_edge ], [ -22, %for.end.cleanup_crit_edge ], [ -22, %if.end.i.i.cleanup_crit_edge ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_set_suspend_voltage(ptr nocapture noundef %regulator, i32 noundef %min_uV, i32 noundef %max_uV, i32 noundef %state) #0 align 64 {
entry:
  %ww_ctx = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx) #25
  %0 = call ptr @memset(ptr %ww_ctx, i32 255, i32 64)
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %state)
  %cmp.i = icmp sgt i32 %state, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %switch = icmp ult i32 %state, 2
  %or.cond = or i1 %cmp.i, %switch
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %1 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdev, align 4
  call fastcc void @regulator_lock_dependent(ptr noundef %2, ptr noundef nonnull %ww_ctx)
  %3 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rdev, align 4
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %4, i32 0, i32 14
  %5 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %constraints.i.i, align 8
  %cmp.i.i = icmp eq ptr %6, null
  br i1 %cmp.i.i, label %if.end._regulator_set_suspend_voltage.exit_crit_edge, label %if.end.i.i

if.end._regulator_set_suspend_voltage.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_set_suspend_voltage.exit

if.end.i.i:                                       ; preds = %if.end
  %7 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.367)
  switch i32 %state, label %if.end.i.i._regulator_set_suspend_voltage.exit_crit_edge [
    i32 2, label %sw.bb.i.i
    i32 3, label %sw.bb2.i.i
    i32 4, label %sw.bb4.i.i
  ]

if.end.i.i._regulator_set_suspend_voltage.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_set_suspend_voltage.exit

sw.bb.i.i:                                        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_standby.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %6, i32 0, i32 15
  br label %regulator_get_suspend_state.exit.i

sw.bb2.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_mem.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %6, i32 0, i32 14
  br label %regulator_get_suspend_state.exit.i

sw.bb4.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_disk.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %6, i32 0, i32 13
  br label %regulator_get_suspend_state.exit.i

regulator_get_suspend_state.exit.i:               ; preds = %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb.i.i
  %retval.0.i.i = phi ptr [ %state_disk.i.i, %sw.bb4.i.i ], [ %state_mem.i.i, %sw.bb2.i.i ], [ %state_standby.i.i, %sw.bb.i.i ]
  %cmp.i8 = icmp eq ptr %retval.0.i.i, null
  br i1 %cmp.i8, label %regulator_get_suspend_state.exit.i._regulator_set_suspend_voltage.exit_crit_edge, label %if.end.i

regulator_get_suspend_state.exit.i._regulator_set_suspend_voltage.exit_crit_edge: ; preds = %regulator_get_suspend_state.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_set_suspend_voltage.exit

if.end.i:                                         ; preds = %regulator_get_suspend_state.exit.i
  %min_uV2.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %min_uV2.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %min_uV2.i, align 4
  %max_uV3.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 2
  %10 = ptrtoint ptr %max_uV3.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_uV3.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp4.i = icmp eq i32 %9, %11
  br i1 %cmp4.i, label %land.lhs.true.i.i, label %if.end8.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %12 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %6, align 4
  %tobool2.not.i.i = icmp eq ptr %13, null
  br i1 %tobool2.not.i.i, label %if.else.i.i, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %14 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %4, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %tobool6.not.i.i = icmp eq ptr %17, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %17
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i17.i = phi ptr [ %13, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call7.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, ptr noundef %retval.0.i17.i) #30
  br label %_regulator_set_suspend_voltage.exit

if.end8.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call9.i = call fastcc i32 @regulator_set_voltage_unlocked(ptr noundef %regulator, i32 noundef %min_uV, i32 noundef %max_uV, i32 noundef %state) #25
  br label %_regulator_set_suspend_voltage.exit

_regulator_set_suspend_voltage.exit:              ; preds = %if.end8.i, %rdev_get_name.exit.i, %regulator_get_suspend_state.exit.i._regulator_set_suspend_voltage.exit_crit_edge, %if.end.i.i._regulator_set_suspend_voltage.exit_crit_edge, %if.end._regulator_set_suspend_voltage.exit_crit_edge
  %retval.0.i = phi i32 [ -1, %rdev_get_name.exit.i ], [ %call9.i, %if.end8.i ], [ -22, %regulator_get_suspend_state.exit.i._regulator_set_suspend_voltage.exit_crit_edge ], [ -22, %if.end._regulator_set_suspend_voltage.exit_crit_edge ], [ -22, %if.end.i.i._regulator_set_suspend_voltage.exit_crit_edge ]
  %18 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %rdev, align 4
  %n_coupled.i = getelementptr inbounds %struct.regulator_dev, ptr %19, i32 0, i32 7, i32 3
  %20 = ptrtoint ptr %n_coupled.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %n_coupled.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %19, i32 noundef %21) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx) #25
  br label %cleanup

cleanup:                                          ; preds = %_regulator_set_suspend_voltage.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %_regulator_set_suspend_voltage.exit ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx) #25
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_set_voltage_time(ptr nocapture noundef readonly %regulator, i32 noundef %old_uV, i32 noundef %new_uV) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops2 = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %ops2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops2, align 4
  %set_voltage_time = getelementptr inbounds %struct.regulator_ops, ptr %5, i32 0, i32 22
  %6 = ptrtoint ptr %set_voltage_time to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %set_voltage_time, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %call = tail call i32 %7(ptr noundef %1, i32 noundef %old_uV, i32 noundef %new_uV) #25
  br label %cleanup

if.else:                                          ; preds = %entry
  %set_voltage_time_sel = getelementptr inbounds %struct.regulator_ops, ptr %5, i32 0, i32 23
  %8 = ptrtoint ptr %set_voltage_time_sel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %set_voltage_time_sel, align 4
  %tobool4.not = icmp eq ptr %9, null
  br i1 %tobool4.not, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.else
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %10 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %constraints.i, align 8
  %ramp_delay1.i = getelementptr inbounds %struct.regulation_constraints, ptr %11, i32 0, i32 22
  %12 = ptrtoint ptr %ramp_delay1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ramp_delay1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then5.if.end42.i_crit_edge

if.then5.if.end42.i_crit_edge:                    ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end42.i

if.else.i:                                        ; preds = %if.then5
  %ramp_delay4.i = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 18
  %14 = ptrtoint ptr %ramp_delay4.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ramp_delay4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool5.not.i = icmp eq i32 %15, 0
  br i1 %tobool5.not.i, label %if.else9.i, label %if.else.i.if.end42.i_crit_edge

if.else.i.if.end42.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end42.i

if.else9.i:                                       ; preds = %if.else.i
  %settling_time.i = getelementptr inbounds %struct.regulation_constraints, ptr %11, i32 0, i32 23
  %16 = ptrtoint ptr %settling_time.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %settling_time.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool11.not.i = icmp eq i32 %17, 0
  br i1 %tobool11.not.i, label %if.else15.i, label %if.else9.i.cleanup_crit_edge

if.else9.i.cleanup_crit_edge:                     ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.else15.i:                                      ; preds = %if.else9.i
  %settling_time_up.i = getelementptr inbounds %struct.regulation_constraints, ptr %11, i32 0, i32 24
  %18 = ptrtoint ptr %settling_time_up.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %settling_time_up.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool17.not.i = icmp ne i32 %19, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %new_uV, i32 %old_uV)
  %cmp.i = icmp sgt i32 %new_uV, %old_uV
  %or.cond.i = and i1 %cmp.i, %tobool17.not.i
  br i1 %or.cond.i, label %if.else15.i.cleanup_crit_edge, label %if.else21.i

if.else15.i.cleanup_crit_edge:                    ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.else21.i:                                      ; preds = %if.else15.i
  %settling_time_down.i = getelementptr inbounds %struct.regulation_constraints, ptr %11, i32 0, i32 25
  %20 = ptrtoint ptr %settling_time_down.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %settling_time_down.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool23.not.i = icmp ne i32 %21, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %new_uV, i32 %old_uV)
  %cmp25.i = icmp slt i32 %new_uV, %old_uV
  %or.cond69.i = and i1 %cmp25.i, %tobool23.not.i
  br i1 %or.cond69.i, label %if.else21.i.cleanup_crit_edge, label %do.body.i

if.else21.i.cleanup_crit_edge:                    ; preds = %if.else21.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.body.i:                                        ; preds = %if.else21.i
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @_regulator_set_voltage_time.__UNIQUE_ID_ddebug366, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@regulator_set_voltage_time, %cleanup)) #25
          to label %if.then39.i [label %cleanup], !srcloc !997

if.then39.i:                                      ; preds = %do.body.i
  %22 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i.i = icmp eq ptr %23, null
  br i1 %tobool.not.i.i, label %if.then39.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

if.then39.i.if.else.i.i_crit_edge:                ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %if.then39.i
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %tobool2.not.i.i = icmp eq ptr %25, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %if.then39.i.if.else.i.i_crit_edge
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %1, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 4
  %tobool6.not.i.i = icmp eq ptr %29, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %29
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i70.i = phi ptr [ %25, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @_regulator_set_voltage_time.__UNIQUE_ID_ddebug366, ptr noundef nonnull @.str.150, ptr noundef %retval.0.i70.i) #25
  br label %cleanup

if.end42.i:                                       ; preds = %if.else.i.if.end42.i_crit_edge, %if.then5.if.end42.i_crit_edge
  %ramp_delay.0.ph.i = phi i32 [ %15, %if.else.i.if.end42.i_crit_edge ], [ %13, %if.then5.if.end42.i_crit_edge ]
  %sub.i = sub i32 %new_uV, %old_uV
  %30 = tail call i32 @llvm.abs.i32(i32 %sub.i, i1 false) #25
  %add.i = add i32 %30, -1
  %sub46.i = add i32 %add.i, %ramp_delay.0.ph.i
  %div.i = udiv i32 %sub46.i, %ramp_delay.0.ph.i
  br label %cleanup

if.end7:                                          ; preds = %if.else
  %31 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %5, align 4
  %tobool8.not = icmp eq ptr %32, null
  br i1 %tobool8.not, label %if.end7.cleanup_crit_edge, label %lor.lhs.false

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end7
  %n_voltages = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 8
  %33 = ptrtoint ptr %n_voltages to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %n_voltages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool10.not = icmp eq i32 %34, 0
  br i1 %tobool10.not, label %lor.lhs.false.cleanup_crit_edge, label %for.cond.preheader

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.cond.preheader:                               ; preds = %lor.lhs.false
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %1, align 8
  %n_voltages1479 = getelementptr inbounds %struct.regulator_desc, ptr %36, i32 0, i32 8
  %37 = ptrtoint ptr %n_voltages1479 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %n_voltages1479, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %cmp80.not = icmp eq i32 %38, 0
  br i1 %cmp80.not, label %for.cond.preheader.cleanup_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %39 = phi ptr [ %45, %for.inc.for.body_crit_edge ], [ %36, %for.cond.preheader.for.body_crit_edge ]
  %i.083 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %new_sel.082 = phi i32 [ %new_sel.1, %for.inc.for.body_crit_edge ], [ -1, %for.cond.preheader.for.body_crit_edge ]
  %old_sel.081 = phi i32 [ %old_sel.2, %for.inc.for.body_crit_edge ], [ -1, %for.cond.preheader.for.body_crit_edge ]
  %linear_min_sel = getelementptr inbounds %struct.regulator_desc, ptr %39, i32 0, i32 16
  %40 = ptrtoint ptr %linear_min_sel to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %linear_min_sel, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.083, i32 %41)
  %cmp16 = icmp ult i32 %i.083, %41
  br i1 %cmp16, label %for.body.for.inc_crit_edge, label %if.end18

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end18:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %old_sel.081)
  %cmp19 = icmp sgt i32 %old_sel.081, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %new_sel.082)
  %cmp20 = icmp sgt i32 %new_sel.082, -1
  %or.cond = select i1 %cmp19, i1 %cmp20, i1 false
  br i1 %or.cond, label %if.end18.for.end_crit_edge, label %if.end22

if.end18.for.end_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

if.end22:                                         ; preds = %if.end18
  %42 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %rdev1, align 4
  %call.i = tail call fastcc i32 @_regulator_list_voltage(ptr noundef %43, i32 noundef %i.083, i32 noundef 1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp24 = icmp slt i32 %call.i, 0
  br i1 %cmp24, label %if.end22.cleanup_crit_edge, label %if.end26

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end26:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp27 = icmp eq i32 %call.i, 0
  br i1 %cmp27, label %if.end26.for.inc_crit_edge, label %if.end29

if.end26.for.inc_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end29:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #27
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %old_uV)
  %cmp30 = icmp eq i32 %call.i, %old_uV
  %spec.select = select i1 %cmp30, i32 %i.083, i32 %old_sel.081
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %new_uV)
  %cmp33 = icmp eq i32 %call.i, %new_uV
  %spec.select76 = select i1 %cmp33, i32 %i.083, i32 %new_sel.082
  br label %for.inc

for.inc:                                          ; preds = %if.end29, %if.end26.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %old_sel.2 = phi i32 [ %old_sel.081, %for.body.for.inc_crit_edge ], [ %old_sel.081, %if.end26.for.inc_crit_edge ], [ %spec.select, %if.end29 ]
  %new_sel.1 = phi i32 [ %new_sel.082, %for.body.for.inc_crit_edge ], [ %new_sel.082, %if.end26.for.inc_crit_edge ], [ %spec.select76, %if.end29 ]
  %inc = add nuw i32 %i.083, 1
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %1, align 8
  %n_voltages14 = getelementptr inbounds %struct.regulator_desc, ptr %45, i32 0, i32 8
  %46 = ptrtoint ptr %n_voltages14 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %n_voltages14, align 4
  %cmp = icmp ult i32 %inc, %47
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end18.for.end_crit_edge
  %old_sel.0.lcssa = phi i32 [ %old_sel.2, %for.inc.for.end_crit_edge ], [ %old_sel.081, %if.end18.for.end_crit_edge ]
  %new_sel.0.lcssa = phi i32 [ %new_sel.1, %for.inc.for.end_crit_edge ], [ %new_sel.082, %if.end18.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %old_sel.0.lcssa)
  %cmp36 = icmp slt i32 %old_sel.0.lcssa, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %new_sel.0.lcssa)
  %cmp38 = icmp slt i32 %new_sel.0.lcssa, 0
  %or.cond75 = select i1 %cmp36, i1 true, i1 %cmp38
  br i1 %or.cond75, label %for.end.cleanup_crit_edge, label %if.end40

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end40:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  %48 = ptrtoint ptr %set_voltage_time_sel to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %set_voltage_time_sel, align 4
  %call42 = tail call i32 %49(ptr noundef %1, i32 noundef %old_sel.0.lcssa, i32 noundef %new_sel.0.lcssa) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end40, %for.end.cleanup_crit_edge, %if.end22.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end42.i, %rdev_get_name.exit.i, %do.body.i, %if.else21.i.cleanup_crit_edge, %if.else15.i.cleanup_crit_edge, %if.else9.i.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call42, %if.end40 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %if.end7.cleanup_crit_edge ], [ -22, %for.end.cleanup_crit_edge ], [ %div.i, %if.end42.i ], [ %17, %if.else9.i.cleanup_crit_edge ], [ %19, %if.else15.i.cleanup_crit_edge ], [ %21, %if.else21.i.cleanup_crit_edge ], [ 0, %rdev_get_name.exit.i ], [ 0, %do.body.i ], [ -22, %for.cond.preheader.cleanup_crit_edge ], [ -22, %if.end22.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_set_voltage_time_sel(ptr noundef %rdev, i32 noundef %old_selector, i32 noundef %new_selector) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call i32 %5(ptr noundef %rdev, i32 noundef %old_selector) #25
  %6 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rdev, align 8
  %ops5 = getelementptr inbounds %struct.regulator_desc, ptr %7, i32 0, i32 10
  %8 = ptrtoint ptr %ops5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops5, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %call7 = tail call i32 %11(ptr noundef %rdev, i32 noundef %new_selector) #25
  %12 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rdev, align 8
  %ops9 = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %ops9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops9, align 4
  %set_voltage_time = getelementptr inbounds %struct.regulator_ops, ptr %15, i32 0, i32 22
  %16 = ptrtoint ptr %set_voltage_time to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %set_voltage_time, align 4
  %tobool10.not = icmp eq ptr %17, null
  br i1 %tobool10.not, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %call15 = tail call i32 %17(ptr noundef %rdev, i32 noundef %call, i32 noundef %call7) #25
  br label %cleanup

if.else:                                          ; preds = %if.end
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %18 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %constraints.i, align 8
  %ramp_delay1.i = getelementptr inbounds %struct.regulation_constraints, ptr %19, i32 0, i32 22
  %20 = ptrtoint ptr %ramp_delay1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ramp_delay1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i = icmp eq i32 %21, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.else.if.end42.i_crit_edge

if.else.if.end42.i_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end42.i

if.else.i:                                        ; preds = %if.else
  %ramp_delay4.i = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 18
  %22 = ptrtoint ptr %ramp_delay4.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ramp_delay4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool5.not.i = icmp eq i32 %23, 0
  br i1 %tobool5.not.i, label %if.else9.i, label %if.else.i.if.end42.i_crit_edge

if.else.i.if.end42.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end42.i

if.else9.i:                                       ; preds = %if.else.i
  %settling_time.i = getelementptr inbounds %struct.regulation_constraints, ptr %19, i32 0, i32 23
  %24 = ptrtoint ptr %settling_time.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %settling_time.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool11.not.i = icmp eq i32 %25, 0
  br i1 %tobool11.not.i, label %if.else15.i, label %if.else9.i.cleanup_crit_edge

if.else9.i.cleanup_crit_edge:                     ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.else15.i:                                      ; preds = %if.else9.i
  %settling_time_up.i = getelementptr inbounds %struct.regulation_constraints, ptr %19, i32 0, i32 24
  %26 = ptrtoint ptr %settling_time_up.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %settling_time_up.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool17.not.i = icmp ne i32 %27, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %call7, i32 %call)
  %cmp.i = icmp sgt i32 %call7, %call
  %or.cond.i = and i1 %cmp.i, %tobool17.not.i
  br i1 %or.cond.i, label %if.else15.i.cleanup_crit_edge, label %if.else21.i

if.else15.i.cleanup_crit_edge:                    ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.else21.i:                                      ; preds = %if.else15.i
  %settling_time_down.i = getelementptr inbounds %struct.regulation_constraints, ptr %19, i32 0, i32 25
  %28 = ptrtoint ptr %settling_time_down.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %settling_time_down.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool23.not.i = icmp ne i32 %29, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %call7, i32 %call)
  %cmp25.i = icmp slt i32 %call7, %call
  %or.cond69.i = and i1 %cmp25.i, %tobool23.not.i
  br i1 %or.cond69.i, label %if.else21.i.cleanup_crit_edge, label %do.body.i

if.else21.i.cleanup_crit_edge:                    ; preds = %if.else21.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.body.i:                                        ; preds = %if.else21.i
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @_regulator_set_voltage_time.__UNIQUE_ID_ddebug366, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@regulator_set_voltage_time_sel, %cleanup)) #25
          to label %if.then39.i [label %cleanup], !srcloc !997

if.then39.i:                                      ; preds = %do.body.i
  %30 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i.i = icmp eq ptr %31, null
  br i1 %tobool.not.i.i, label %if.then39.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

if.then39.i.if.else.i.i_crit_edge:                ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %if.then39.i
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %tobool2.not.i.i = icmp eq ptr %33, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %if.then39.i.if.else.i.i_crit_edge
  %34 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rdev, align 8
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %tobool6.not.i.i = icmp eq ptr %37, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %37
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i70.i = phi ptr [ %33, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @_regulator_set_voltage_time.__UNIQUE_ID_ddebug366, ptr noundef nonnull @.str.150, ptr noundef %retval.0.i70.i) #25
  br label %cleanup

if.end42.i:                                       ; preds = %if.else.i.if.end42.i_crit_edge, %if.else.if.end42.i_crit_edge
  %ramp_delay.0.ph.i = phi i32 [ %23, %if.else.i.if.end42.i_crit_edge ], [ %21, %if.else.if.end42.i_crit_edge ]
  %sub.i = sub i32 %call7, %call
  %38 = tail call i32 @llvm.abs.i32(i32 %sub.i, i1 false) #25
  %add.i = add i32 %38, -1
  %sub46.i = add i32 %add.i, %ramp_delay.0.ph.i
  %div.i = udiv i32 %sub46.i, %ramp_delay.0.ph.i
  br label %cleanup

cleanup:                                          ; preds = %if.end42.i, %rdev_get_name.exit.i, %do.body.i, %if.else21.i.cleanup_crit_edge, %if.else15.i.cleanup_crit_edge, %if.else9.i.cleanup_crit_edge, %if.then11, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.then11 ], [ -22, %entry.cleanup_crit_edge ], [ %div.i, %if.end42.i ], [ %25, %if.else9.i.cleanup_crit_edge ], [ %27, %if.else15.i.cleanup_crit_edge ], [ %29, %if.else21.i.cleanup_crit_edge ], [ 0, %rdev_get_name.exit.i ], [ 0, %do.body.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_sync_voltage_rdev(ptr noundef %rdev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @regulator_lock(ptr noundef %rdev)
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %set_voltage = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %set_voltage to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %set_voltage, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 3
  %6 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %set_voltage_sel, align 4
  %tobool3.not = icmp eq ptr %7, null
  br i1 %tobool3.not, label %land.lhs.true.out_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 3
  %8 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp = icmp sgt i32 %9, 1
  br i1 %cmp, label %if.then4, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.then4:                                         ; preds = %if.end
  %coupler1.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 1
  %10 = ptrtoint ptr %coupler1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %coupler1.i, align 4
  %n_resolved.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 2
  %12 = ptrtoint ptr %n_resolved.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %n_resolved.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %9)
  %cmp2.i = icmp slt i32 %13, %9
  br i1 %cmp2.i, label %do.end.i, label %if.end5.i

do.end.i:                                         ; preds = %if.then4
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %14 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %constraints.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %tobool2.not.i.i = icmp eq ptr %17, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 4
  %tobool6.not.i.i = icmp eq ptr %19, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %19
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %17, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef %retval.0.i.i) #30
  br label %out

if.end5.i:                                        ; preds = %if.then4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %if.end5.i.if.end10.i_crit_edge, label %land.lhs.true.i

if.end5.i.if.end10.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

land.lhs.true.i:                                  ; preds = %if.end5.i
  %balance_voltage.i = getelementptr inbounds %struct.regulator_coupler, ptr %11, i32 0, i32 3
  %20 = ptrtoint ptr %balance_voltage.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %balance_voltage.i, align 4
  %tobool6.not.i = icmp eq ptr %21, null
  br i1 %tobool6.not.i, label %land.lhs.true.i.if.end10.i_crit_edge, label %if.then7.i

land.lhs.true.i.if.end10.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

if.then7.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  %call9.i = tail call i32 %21(ptr noundef nonnull %11, ptr noundef %rdev, i32 noundef 0) #25
  br label %out

if.end10.i:                                       ; preds = %land.lhs.true.i.if.end10.i_crit_edge, %if.end5.i.if.end10.i_crit_edge
  %call12.i = tail call i32 @regulator_do_balance_voltage(ptr noundef %rdev, i32 noundef 0, i1 noundef zeroext false) #25
  br label %out

out:                                              ; preds = %if.end10.i, %if.then7.i, %rdev_get_name.exit.i, %if.end.out_crit_edge, %land.lhs.true.out_crit_edge
  %ret.0 = phi i32 [ -22, %land.lhs.true.out_crit_edge ], [ -95, %if.end.out_crit_edge ], [ -1, %rdev_get_name.exit.i ], [ %call9.i, %if.then7.i ], [ %call12.i, %if.end10.i ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %22 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %23, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %out.if.end.i_crit_edge

out.if.end.i_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %24 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %25 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %out.if.end.i_crit_edge
  %26 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %out.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp2.i11 = icmp slt i32 %26, 0
  br i1 %cmp2.i11, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_sync_voltage(ptr nocapture noundef readonly %regulator) #0 align 64 {
entry:
  %min_uV = alloca i32, align 4
  %max_uV = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  %voltage2 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %min_uV) #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %max_uV) #25
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool6.not.i.i = icmp eq ptr %7, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %7
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %cleanup

regulator_ops_is_valid.exit:                      ; preds = %entry
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 11
  %8 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.cleanup_crit_edge, label %if.end

regulator_ops_is_valid.exit.cleanup_crit_edge:    ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %regulator_ops_is_valid.exit
  tail call fastcc void @regulator_lock(ptr noundef %1)
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %11, i32 0, i32 10
  %12 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops, align 4
  %set_voltage = getelementptr inbounds %struct.regulator_ops, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %set_voltage to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %set_voltage, align 4
  %tobool.not = icmp eq ptr %15, null
  br i1 %tobool.not, label %land.lhs.true, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %13, i32 0, i32 3
  %16 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %set_voltage_sel, align 4
  %tobool5.not = icmp eq ptr %17, null
  br i1 %tobool5.not, label %land.lhs.true.out_crit_edge, label %land.lhs.true.if.end7_crit_edge

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end7:                                          ; preds = %land.lhs.true.if.end7_crit_edge, %if.end.if.end7_crit_edge
  %18 = ptrtoint ptr %voltage2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %voltage2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool9.not = icmp eq i32 %19, 0
  br i1 %tobool9.not, label %land.lhs.true10, label %if.end7.if.end14_crit_edge

if.end7.if.end14_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end14

land.lhs.true10:                                  ; preds = %if.end7
  %max_uV11 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 6, i32 0, i32 1
  %20 = ptrtoint ptr %max_uV11 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %max_uV11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool12.not = icmp eq i32 %21, 0
  br i1 %tobool12.not, label %land.lhs.true10.out_crit_edge, label %land.lhs.true10.if.end14_crit_edge

land.lhs.true10.if.end14_crit_edge:               ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end14

land.lhs.true10.out_crit_edge:                    ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end14:                                         ; preds = %land.lhs.true10.if.end14_crit_edge, %if.end7.if.end14_crit_edge
  %22 = ptrtoint ptr %min_uV to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %19, ptr %min_uV, align 4
  %max_uV16 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 6, i32 0, i32 1
  %23 = ptrtoint ptr %max_uV16 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %max_uV16, align 4
  %25 = ptrtoint ptr %max_uV to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %max_uV, align 4
  %call17 = call i32 @regulator_check_voltage(ptr noundef %1, ptr noundef nonnull %min_uV, ptr noundef nonnull %max_uV)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %cmp = icmp slt i32 %call17, 0
  br i1 %cmp, label %if.end14.out_crit_edge, label %if.end19

if.end14.out_crit_edge:                           ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end19:                                         ; preds = %if.end14
  %consumer_list.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 6
  %26 = ptrtoint ptr %consumer_list.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn43.i = load ptr, ptr %consumer_list.i, align 4
  %cmp.not44.i = icmp eq ptr %.pn43.i, %consumer_list.i
  br i1 %cmp.not44.i, label %if.end19.for.end.i_crit_edge, label %for.body.i.preheader

if.end19.for.end.i_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end.i

for.body.i.preheader:                             ; preds = %if.end19
  %27 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %27)
  %max_uV.promoted = load i32, ptr %max_uV, align 4
  %28 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %28)
  %min_uV.promoted = load i32, ptr %min_uV, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.i.preheader
  %29 = phi i32 [ %41, %for.inc.i.for.body.i_crit_edge ], [ %min_uV.promoted, %for.body.i.preheader ]
  %30 = phi i32 [ %42, %for.inc.i.for.body.i_crit_edge ], [ %max_uV.promoted, %for.body.i.preheader ]
  %.pn45.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn43.i, %for.body.i.preheader ]
  %voltage2.i = getelementptr i8, ptr %.pn45.i, i32 24
  %31 = ptrtoint ptr %voltage2.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %voltage2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i48 = icmp eq i32 %32, 0
  br i1 %tobool.not.i48, label %land.lhs.true.i, label %for.body.i.if.end.i49_crit_edge

for.body.i.if.end.i49_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i49

land.lhs.true.i:                                  ; preds = %for.body.i
  %max_uV4.i = getelementptr i8, ptr %.pn45.i, i32 28
  %33 = ptrtoint ptr %max_uV4.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %max_uV4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool5.not.i = icmp eq i32 %34, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %land.lhs.true.i.if.end.i49_crit_edge

land.lhs.true.i.if.end.i49_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i49

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i

if.end.i49:                                       ; preds = %land.lhs.true.i.if.end.i49_crit_edge, %for.body.i.if.end.i49_crit_edge
  %max_uV6.i = getelementptr i8, ptr %.pn45.i, i32 28
  %35 = ptrtoint ptr %max_uV6.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %max_uV6.i, align 4
  %37 = tail call i32 @llvm.smin.i32(i32 %30, i32 %36)
  %38 = ptrtoint ptr %voltage2.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %voltage2.i, align 4
  %40 = tail call i32 @llvm.smax.i32(i32 %29, i32 %39)
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i49, %land.lhs.true.i.for.inc.i_crit_edge
  %41 = phi i32 [ %40, %if.end.i49 ], [ %29, %land.lhs.true.i.for.inc.i_crit_edge ]
  %42 = phi i32 [ %37, %if.end.i49 ], [ %30, %land.lhs.true.i.for.inc.i_crit_edge ]
  %43 = ptrtoint ptr %.pn45.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %.pn.i = load ptr, ptr %.pn45.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %consumer_list.i
  br i1 %cmp.not.i, label %for.end.i.loopexit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i

for.end.i.loopexit:                               ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  %44 = ptrtoint ptr %max_uV to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %42, ptr %max_uV, align 4
  %45 = ptrtoint ptr %min_uV to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %41, ptr %min_uV, align 4
  br label %for.end.i

for.end.i:                                        ; preds = %for.end.i.loopexit, %if.end19.for.end.i_crit_edge
  %46 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %min_uV, align 4
  %48 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %max_uV, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %47, i32 %49)
  %cmp21.i = icmp sgt i32 %47, %49
  br i1 %cmp21.i, label %do.end.i, label %if.end23

do.end.i:                                         ; preds = %for.end.i
  %50 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i.i = icmp eq ptr %51, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %51, align 4
  %tobool2.not.i.i = icmp eq ptr %53, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.regulator_check_consumers.exit.thread_crit_edge

land.lhs.true.i.i.regulator_check_consumers.exit.thread_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_check_consumers.exit.thread

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %54 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %1, align 8
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %55, align 4
  %tobool6.not.i.i50 = icmp eq ptr %57, null
  %.str..i.i51 = select i1 %tobool6.not.i.i50, ptr @.str, ptr %57
  br label %regulator_check_consumers.exit.thread

regulator_check_consumers.exit.thread:            ; preds = %if.else.i.i, %land.lhs.true.i.i.regulator_check_consumers.exit.thread_crit_edge
  %retval.0.i.i = phi ptr [ %53, %land.lhs.true.i.i.regulator_check_consumers.exit.thread_crit_edge ], [ %.str..i.i51, %if.else.i.i ]
  %call24.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7, ptr noundef %retval.0.i.i, i32 noundef %47, i32 noundef %49) #30
  br label %out

if.end23:                                         ; preds = %for.end.i
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 3
  %58 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %59)
  %cmp24 = icmp sgt i32 %59, 1
  br i1 %cmp24, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end23
  %coupler1.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 1
  %60 = ptrtoint ptr %coupler1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %coupler1.i, align 4
  %n_resolved.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 7, i32 2
  %62 = ptrtoint ptr %n_resolved.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %n_resolved.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %63, i32 %59)
  %cmp2.i = icmp slt i32 %63, %59
  br i1 %cmp2.i, label %do.end.i56, label %if.end5.i

do.end.i56:                                       ; preds = %if.then25
  %64 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i.i55 = icmp eq ptr %65, null
  br i1 %tobool.not.i.i55, label %do.end.i56.if.else.i.i61_crit_edge, label %land.lhs.true.i.i58

do.end.i56.if.else.i.i61_crit_edge:               ; preds = %do.end.i56
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i61

land.lhs.true.i.i58:                              ; preds = %do.end.i56
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %65, align 4
  %tobool2.not.i.i57 = icmp eq ptr %67, null
  br i1 %tobool2.not.i.i57, label %land.lhs.true.i.i58.if.else.i.i61_crit_edge, label %land.lhs.true.i.i58.rdev_get_name.exit.i63_crit_edge

land.lhs.true.i.i58.rdev_get_name.exit.i63_crit_edge: ; preds = %land.lhs.true.i.i58
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i63

land.lhs.true.i.i58.if.else.i.i61_crit_edge:      ; preds = %land.lhs.true.i.i58
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i61

if.else.i.i61:                                    ; preds = %land.lhs.true.i.i58.if.else.i.i61_crit_edge, %do.end.i56.if.else.i.i61_crit_edge
  %68 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %1, align 8
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %69, align 4
  %tobool6.not.i.i59 = icmp eq ptr %71, null
  %.str..i.i60 = select i1 %tobool6.not.i.i59, ptr @.str, ptr %71
  br label %rdev_get_name.exit.i63

rdev_get_name.exit.i63:                           ; preds = %if.else.i.i61, %land.lhs.true.i.i58.rdev_get_name.exit.i63_crit_edge
  %retval.0.i.i62 = phi ptr [ %67, %land.lhs.true.i.i58.rdev_get_name.exit.i63_crit_edge ], [ %.str..i.i60, %if.else.i.i61 ]
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef %retval.0.i.i62) #30
  br label %out

if.end5.i:                                        ; preds = %if.then25
  %tobool.not.i64 = icmp eq ptr %61, null
  br i1 %tobool.not.i64, label %if.end5.i.if.end10.i66_crit_edge, label %land.lhs.true.i65

if.end5.i.if.end10.i66_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i66

land.lhs.true.i65:                                ; preds = %if.end5.i
  %balance_voltage.i = getelementptr inbounds %struct.regulator_coupler, ptr %61, i32 0, i32 3
  %72 = ptrtoint ptr %balance_voltage.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %balance_voltage.i, align 4
  %tobool6.not.i = icmp eq ptr %73, null
  br i1 %tobool6.not.i, label %land.lhs.true.i65.if.end10.i66_crit_edge, label %if.then7.i

land.lhs.true.i65.if.end10.i66_crit_edge:         ; preds = %land.lhs.true.i65
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i66

if.then7.i:                                       ; preds = %land.lhs.true.i65
  call void @__sanitizer_cov_trace_pc() #27
  %call9.i = tail call i32 %73(ptr noundef nonnull %61, ptr noundef %1, i32 noundef 0) #25
  br label %out

if.end10.i66:                                     ; preds = %land.lhs.true.i65.if.end10.i66_crit_edge, %if.end5.i.if.end10.i66_crit_edge
  %call12.i = tail call i32 @regulator_do_balance_voltage(ptr noundef %1, i32 noundef 0, i1 noundef zeroext false) #25
  br label %out

if.else:                                          ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #27
  %call27 = tail call fastcc i32 @_regulator_do_set_voltage(ptr noundef %1, i32 noundef %47, i32 noundef %49)
  br label %out

out:                                              ; preds = %if.else, %if.end10.i66, %if.then7.i, %rdev_get_name.exit.i63, %regulator_check_consumers.exit.thread, %if.end14.out_crit_edge, %land.lhs.true10.out_crit_edge, %land.lhs.true.out_crit_edge
  %ret.0 = phi i32 [ %call17, %if.end14.out_crit_edge ], [ %call27, %if.else ], [ -22, %land.lhs.true.out_crit_edge ], [ -22, %land.lhs.true10.out_crit_edge ], [ -22, %regulator_check_consumers.exit.thread ], [ -1, %rdev_get_name.exit.i63 ], [ %call9.i, %if.then7.i ], [ %call12.i, %if.end10.i66 ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %74 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %75, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %out.if.end.i69_crit_edge

out.if.end.i69_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i69

if.then.i:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %76 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %77 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i69

if.end.i69:                                       ; preds = %if.then.i, %out.if.end.i69_crit_edge
  %78 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %out.if.end.i69_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %cmp2.i68 = icmp slt i32 %78, 0
  br i1 %cmp2.i68, label %land.rhs.i, label %if.end.i69.regulator_unlock.exit_crit_edge

if.end.i69.regulator_unlock.exit_crit_edge:       ; preds = %if.end.i69
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i69
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i69.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %cleanup

cleanup:                                          ; preds = %regulator_unlock.exit, %regulator_ops_is_valid.exit.cleanup_crit_edge, %regulator_ops_is_valid.exit.thread
  %retval.0 = phi i32 [ %ret.0, %regulator_unlock.exit ], [ 0, %regulator_ops_is_valid.exit.cleanup_crit_edge ], [ 0, %regulator_ops_is_valid.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %max_uV) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %min_uV) #25
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_set_current_limit(ptr nocapture noundef readonly %regulator, i32 noundef %min_uA, i32 noundef %max_uA) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  tail call fastcc void @regulator_lock(ptr noundef %1)
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %set_current_limit = getelementptr inbounds %struct.regulator_ops, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %set_current_limit to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %set_current_limit, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_cmp4(i32 %min_uA, i32 %max_uA)
  %cmp.i = icmp sgt i32 %min_uA, %max_uA
  br i1 %cmp.i, label %do.body2.i, label %do.end5.i, !prof !994

do.body2.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/regulator/core.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 488, 0\0A.popsection", ""() #25, !srcloc !1001
  unreachable

do.end5.i:                                        ; preds = %if.end
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %8 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %constraints.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %regulator_ops_is_valid.exit.thread.i, label %regulator_ops_is_valid.exit.i

regulator_ops_is_valid.exit.thread.i:             ; preds = %do.end5.i
  call void @__sanitizer_cov_trace_pc() #27
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %3, align 4
  %tobool6.not.i.i.i = icmp eq ptr %11, null
  %.str..i.i.i = select i1 %tobool6.not.i.i.i, ptr @.str, ptr %11
  %call1.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i.i) #30
  br label %do.end8.i

regulator_ops_is_valid.exit.i:                    ; preds = %do.end5.i
  %valid_ops_mask.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %9, i32 0, i32 11
  %12 = ptrtoint ptr %valid_ops_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %valid_ops_mask.i.i, align 4
  %and.i.i = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool3.not.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool3.not.i.not.i, label %regulator_ops_is_valid.exit.i.do.end8.i_crit_edge, label %if.end11.i

regulator_ops_is_valid.exit.i.do.end8.i_crit_edge: ; preds = %regulator_ops_is_valid.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end8.i

do.end8.i:                                        ; preds = %regulator_ops_is_valid.exit.i.do.end8.i_crit_edge, %regulator_ops_is_valid.exit.thread.i
  %14 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %constraints.i.i, align 8
  %tobool.not.i49.i = icmp eq ptr %15, null
  br i1 %tobool.not.i49.i, label %do.end8.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end8.i.if.else.i.i_crit_edge:                  ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end8.i
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %tobool2.not.i.i = icmp eq ptr %17, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end8.i.if.else.i.i_crit_edge
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %tobool6.not.i.i = icmp eq ptr %21, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %21
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i50.i = phi ptr [ %17, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call10.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.151, ptr noundef %retval.0.i50.i) #30
  br label %out

if.end11.i:                                       ; preds = %regulator_ops_is_valid.exit.i
  %max_uA12.i = getelementptr inbounds %struct.regulation_constraints, ptr %9, i32 0, i32 5
  %22 = ptrtoint ptr %max_uA12.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %max_uA12.i, align 4
  %24 = tail call i32 @llvm.smin.i32(i32 %23, i32 %max_uA)
  %min_uA19.i = getelementptr inbounds %struct.regulation_constraints, ptr %9, i32 0, i32 4
  %25 = ptrtoint ptr %min_uA19.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %min_uA19.i, align 4
  %27 = tail call i32 @llvm.smax.i32(i32 %26, i32 %min_uA)
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %24)
  %cmp25.i = icmp sgt i32 %27, %24
  br i1 %cmp25.i, label %land.lhs.true.i54.i, label %if.end3

land.lhs.true.i54.i:                              ; preds = %if.end11.i
  %28 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %9, align 4
  %tobool2.not.i53.i = icmp eq ptr %29, null
  br i1 %tobool2.not.i53.i, label %if.else.i57.i, label %land.lhs.true.i54.i.rdev_get_name.exit59.i_crit_edge

land.lhs.true.i54.i.rdev_get_name.exit59.i_crit_edge: ; preds = %land.lhs.true.i54.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit59.i

if.else.i57.i:                                    ; preds = %land.lhs.true.i54.i
  call void @__sanitizer_cov_trace_pc() #27
  %30 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %3, align 4
  %tobool6.not.i55.i = icmp eq ptr %31, null
  %.str..i56.i = select i1 %tobool6.not.i55.i, ptr @.str, ptr %31
  br label %rdev_get_name.exit59.i

rdev_get_name.exit59.i:                           ; preds = %if.else.i57.i, %land.lhs.true.i54.i.rdev_get_name.exit59.i_crit_edge
  %retval.0.i58.i = phi ptr [ %29, %land.lhs.true.i54.i.rdev_get_name.exit59.i_crit_edge ], [ %.str..i56.i, %if.else.i57.i ]
  %call31.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.154, ptr noundef %retval.0.i58.i, i32 noundef %27, i32 noundef %24) #30
  br label %out

if.end3:                                          ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #27
  %32 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %1, align 8
  %ops5 = getelementptr inbounds %struct.regulator_desc, ptr %33, i32 0, i32 10
  %34 = ptrtoint ptr %ops5 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ops5, align 4
  %set_current_limit6 = getelementptr inbounds %struct.regulator_ops, ptr %35, i32 0, i32 6
  %36 = ptrtoint ptr %set_current_limit6 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %set_current_limit6, align 4
  %call7 = tail call i32 %37(ptr noundef %1, i32 noundef %27, i32 noundef %24) #25
  br label %out

out:                                              ; preds = %if.end3, %rdev_get_name.exit59.i, %rdev_get_name.exit.i, %entry.out_crit_edge
  %ret.0 = phi i32 [ %call7, %if.end3 ], [ -22, %entry.out_crit_edge ], [ -1, %rdev_get_name.exit.i ], [ -22, %rdev_get_name.exit59.i ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %38 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %39, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i14 = icmp eq i32 %dec.i, 0
  br i1 %cmp.i14, label %if.then.i, label %out.if.end.i_crit_edge

out.if.end.i_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %40 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %41 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %out.if.end.i_crit_edge
  %42 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %out.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp2.i = icmp slt i32 %42, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_get_current_limit(ptr nocapture noundef readonly %regulator) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  %call = tail call fastcc i32 @_regulator_get_current_limit(ptr noundef %1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_get_current_limit(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @regulator_lock(ptr noundef %rdev)
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %get_current_limit.i = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 7
  %4 = ptrtoint ptr %get_current_limit.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %get_current_limit.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry._regulator_get_current_limit_unlocked.exit_crit_edge, label %if.end.i

entry._regulator_get_current_limit_unlocked.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_get_current_limit_unlocked.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %5(ptr noundef %rdev) #25
  br label %_regulator_get_current_limit_unlocked.exit

_regulator_get_current_limit_unlocked.exit:       ; preds = %if.end.i, %entry._regulator_get_current_limit_unlocked.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %if.end.i ], [ -22, %entry._regulator_get_current_limit_unlocked.exit_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %6 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %7, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %_regulator_get_current_limit_unlocked.exit.if.end.i3_crit_edge

_regulator_get_current_limit_unlocked.exit.if.end.i3_crit_edge: ; preds = %_regulator_get_current_limit_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i3

if.then.i:                                        ; preds = %_regulator_get_current_limit_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %8 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %9 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i3

if.end.i3:                                        ; preds = %if.then.i, %_regulator_get_current_limit_unlocked.exit.if.end.i3_crit_edge
  %10 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %_regulator_get_current_limit_unlocked.exit.if.end.i3_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp2.i = icmp slt i32 %10, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i3.regulator_unlock.exit_crit_edge

if.end.i3.regulator_unlock.exit_crit_edge:        ; preds = %if.end.i3
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i3
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i3.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_set_mode(ptr nocapture noundef readonly %regulator, i32 noundef %mode) #0 align 64 {
entry:
  %mode.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mode.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %mode, ptr %mode.addr, align 4
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %1 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rdev1, align 4
  tail call fastcc void @regulator_lock(ptr noundef %2)
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops, align 4
  %set_mode = getelementptr inbounds %struct.regulator_ops, ptr %6, i32 0, i32 17
  %7 = ptrtoint ptr %set_mode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %set_mode, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end:                                           ; preds = %entry
  %get_mode = getelementptr inbounds %struct.regulator_ops, ptr %6, i32 0, i32 18
  %9 = ptrtoint ptr %get_mode to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %get_mode, align 4
  %tobool4.not = icmp eq ptr %10, null
  br i1 %tobool4.not, label %if.end.if.end11_crit_edge, label %if.then5

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end11

if.then5:                                         ; preds = %if.end
  %call = tail call i32 %10(ptr noundef %2) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call, i32 %mode)
  %cmp = icmp eq i32 %call, %mode
  br i1 %cmp, label %if.then5.out_crit_edge, label %if.then5.if.end11_crit_edge

if.then5.if.end11_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end11

if.then5.out_crit_edge:                           ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end11:                                         ; preds = %if.then5.if.end11_crit_edge, %if.end.if.end11_crit_edge
  %call12 = call fastcc i32 @regulator_mode_constrain(ptr noundef %2, ptr noundef nonnull %mode.addr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp13 = icmp slt i32 %call12, 0
  br i1 %cmp13, label %if.end11.out_crit_edge, label %if.end15

if.end11.out_crit_edge:                           ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #27
  br label %out

if.end15:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #27
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %2, align 8
  %ops17 = getelementptr inbounds %struct.regulator_desc, ptr %12, i32 0, i32 10
  %13 = ptrtoint ptr %ops17 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops17, align 4
  %set_mode18 = getelementptr inbounds %struct.regulator_ops, ptr %14, i32 0, i32 17
  %15 = ptrtoint ptr %set_mode18 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %set_mode18, align 4
  %17 = ptrtoint ptr %mode.addr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %mode.addr, align 4
  %call19 = tail call i32 %16(ptr noundef %2, i32 noundef %18) #25
  br label %out

out:                                              ; preds = %if.end15, %if.end11.out_crit_edge, %if.then5.out_crit_edge, %entry.out_crit_edge
  %ret.0 = phi i32 [ %call12, %if.end11.out_crit_edge ], [ %call19, %if.end15 ], [ -22, %entry.out_crit_edge ], [ 0, %if.then5.out_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %2, i32 0, i32 11
  %19 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %20, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %out.if.end.i_crit_edge

out.if.end.i_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %2, i32 0, i32 10
  %21 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %2, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %22 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %out.if.end.i_crit_edge
  %23 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %out.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp2.i = icmp slt i32 %23, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @regulator_mode_constrain(ptr nocapture noundef readonly %rdev, ptr nocapture noundef %mode) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mode, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.368)
  switch i32 %1, label %do.end [
    i32 1, label %entry.sw.epilog_crit_edge
    i32 2, label %entry.sw.epilog_crit_edge34
    i32 4, label %entry.sw.epilog_crit_edge35
    i32 8, label %entry.sw.epilog_crit_edge36
  ]

entry.sw.epilog_crit_edge36:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %sw.epilog

entry.sw.epilog_crit_edge35:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %sw.epilog

entry.sw.epilog_crit_edge34:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %sw.epilog

do.end:                                           ; preds = %entry
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %3 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %tobool2.not.i = icmp eq ptr %6, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %7 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rdev, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %tobool6.not.i = icmp eq ptr %10, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %10
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %6, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.156, ptr noundef %retval.0.i, i32 noundef %1) #30
  br label %return

sw.epilog:                                        ; preds = %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge34, %entry.sw.epilog_crit_edge35, %entry.sw.epilog_crit_edge36
  %constraints.i19 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %11 = ptrtoint ptr %constraints.i19 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %constraints.i19, align 8
  %tobool.not.i20 = icmp eq ptr %12, null
  br i1 %tobool.not.i20, label %regulator_ops_is_valid.exit.thread, label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #27
  %13 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rdev, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %tobool6.not.i.i = icmp eq ptr %16, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %16
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %do.end4

regulator_ops_is_valid.exit:                      ; preds = %sw.epilog
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %12, i32 0, i32 11
  %17 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %18, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.do.end4_crit_edge, label %while.condthread-pre-split

regulator_ops_is_valid.exit.do.end4_crit_edge:    ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end4

do.end4:                                          ; preds = %regulator_ops_is_valid.exit.do.end4_crit_edge, %regulator_ops_is_valid.exit.thread
  %19 = ptrtoint ptr %constraints.i19 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %constraints.i19, align 8
  %tobool.not.i23 = icmp eq ptr %20, null
  br i1 %tobool.not.i23, label %do.end4.if.else.i28_crit_edge, label %land.lhs.true.i25

do.end4.if.else.i28_crit_edge:                    ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i28

land.lhs.true.i25:                                ; preds = %do.end4
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %tobool2.not.i24 = icmp eq ptr %22, null
  br i1 %tobool2.not.i24, label %land.lhs.true.i25.if.else.i28_crit_edge, label %land.lhs.true.i25.rdev_get_name.exit30_crit_edge

land.lhs.true.i25.rdev_get_name.exit30_crit_edge: ; preds = %land.lhs.true.i25
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit30

land.lhs.true.i25.if.else.i28_crit_edge:          ; preds = %land.lhs.true.i25
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i28

if.else.i28:                                      ; preds = %land.lhs.true.i25.if.else.i28_crit_edge, %do.end4.if.else.i28_crit_edge
  %23 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %rdev, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 4
  %tobool6.not.i26 = icmp eq ptr %26, null
  %.str..i27 = select i1 %tobool6.not.i26, ptr @.str, ptr %26
  br label %rdev_get_name.exit30

rdev_get_name.exit30:                             ; preds = %if.else.i28, %land.lhs.true.i25.rdev_get_name.exit30_crit_edge
  %retval.0.i29 = phi ptr [ %22, %land.lhs.true.i25.rdev_get_name.exit30_crit_edge ], [ %.str..i27, %if.else.i28 ]
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.159, ptr noundef %retval.0.i29) #30
  br label %return

while.condthread-pre-split:                       ; preds = %regulator_ops_is_valid.exit
  %27 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pr = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool.not32 = icmp eq i32 %.pr, 0
  br i1 %tobool.not32, label %while.condthread-pre-split.return_crit_edge, label %while.condthread-pre-split.while.body_crit_edge

while.condthread-pre-split.while.body_crit_edge:  ; preds = %while.condthread-pre-split
  br label %while.body

while.condthread-pre-split.return_crit_edge:      ; preds = %while.condthread-pre-split
  call void @__sanitizer_cov_trace_pc() #27
  br label %return

while.body:                                       ; preds = %if.end10.while.body_crit_edge, %while.condthread-pre-split.while.body_crit_edge
  %28 = phi i32 [ %div18, %if.end10.while.body_crit_edge ], [ %.pr, %while.condthread-pre-split.while.body_crit_edge ]
  %29 = ptrtoint ptr %constraints.i19 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %constraints.i19, align 8
  %valid_modes_mask = getelementptr inbounds %struct.regulation_constraints, ptr %30, i32 0, i32 10
  %31 = ptrtoint ptr %valid_modes_mask to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %valid_modes_mask, align 4
  %and = and i32 %32, %28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %if.end10, label %while.body.return_crit_edge

while.body.return_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %return

if.end10:                                         ; preds = %while.body
  %div18 = lshr i32 %28, 1
  %33 = ptrtoint ptr %mode to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %div18, ptr %mode, align 4
  %tobool.not = icmp ult i32 %28, 2
  br i1 %tobool.not, label %if.end10.return_crit_edge, label %if.end10.while.body_crit_edge

if.end10.while.body_crit_edge:                    ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #27
  br label %while.body

if.end10.return_crit_edge:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #27
  br label %return

return:                                           ; preds = %if.end10.return_crit_edge, %while.body.return_crit_edge, %while.condthread-pre-split.return_crit_edge, %rdev_get_name.exit30, %rdev_get_name.exit
  %retval.0 = phi i32 [ -22, %rdev_get_name.exit ], [ -1, %rdev_get_name.exit30 ], [ -22, %while.condthread-pre-split.return_crit_edge ], [ 0, %while.body.return_crit_edge ], [ -22, %if.end10.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_get_mode(ptr nocapture noundef readonly %regulator) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  %call = tail call fastcc i32 @_regulator_get_mode(ptr noundef %1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_get_mode(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @regulator_lock(ptr noundef %rdev)
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %get_mode.i = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 18
  %4 = ptrtoint ptr %get_mode.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %get_mode.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry._regulator_get_mode_unlocked.exit_crit_edge, label %if.end.i

entry._regulator_get_mode_unlocked.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_get_mode_unlocked.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %5(ptr noundef %rdev) #25
  br label %_regulator_get_mode_unlocked.exit

_regulator_get_mode_unlocked.exit:                ; preds = %if.end.i, %entry._regulator_get_mode_unlocked.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %if.end.i ], [ -22, %entry._regulator_get_mode_unlocked.exit_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 11
  %6 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %7, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %_regulator_get_mode_unlocked.exit.if.end.i3_crit_edge

_regulator_get_mode_unlocked.exit.if.end.i3_crit_edge: ; preds = %_regulator_get_mode_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i3

if.then.i:                                        ; preds = %_regulator_get_mode_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 10
  %8 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %9 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i3

if.end.i3:                                        ; preds = %if.then.i, %_regulator_get_mode_unlocked.exit.if.end.i3_crit_edge
  %10 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %_regulator_get_mode_unlocked.exit.if.end.i3_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp2.i = icmp slt i32 %10, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i3.regulator_unlock.exit_crit_edge

if.end.i3.regulator_unlock.exit_crit_edge:        ; preds = %if.end.i3
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i3
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i3.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_get_error_flags(ptr nocapture noundef readonly %regulator, ptr noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  tail call fastcc void @regulator_lock(ptr noundef %1) #25
  %use_cached_err.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 25
  %2 = ptrtoint ptr %use_cached_err.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %use_cached_err.i.i, align 4, !range !1000
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i.i, label %entry.rdev_get_cached_err_flags.exit.i_crit_edge, label %if.then.i.i

entry.rdev_get_cached_err_flags.exit.i_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_cached_err_flags.exit.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %err_lock.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 26
  tail call void @_raw_spin_lock(ptr noundef %err_lock.i.i) #25
  %cached_err.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 24
  %4 = ptrtoint ptr %cached_err.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cached_err.i.i, align 8
  tail call void @_raw_spin_unlock(ptr noundef %err_lock.i.i) #25
  br label %rdev_get_cached_err_flags.exit.i

rdev_get_cached_err_flags.exit.i:                 ; preds = %if.then.i.i, %entry.rdev_get_cached_err_flags.exit.i_crit_edge
  %ret.0.i.i = phi i32 [ %5, %if.then.i.i ], [ 0, %entry.rdev_get_cached_err_flags.exit.i_crit_edge ]
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %7, i32 0, i32 10
  %8 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops.i, align 4
  %get_error_flags.i = getelementptr inbounds %struct.regulator_ops, ptr %9, i32 0, i32 19
  %10 = ptrtoint ptr %get_error_flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %get_error_flags.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %rdev_get_cached_err_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  %call4.i = tail call i32 %11(ptr noundef %1, ptr noundef %flags) #25
  br label %if.end7.i

if.else.i:                                        ; preds = %rdev_get_cached_err_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  %12 = ptrtoint ptr %use_cached_err.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %use_cached_err.i.i, align 4, !range !1000
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool5.not.i = icmp eq i8 %13, 0
  %spec.select.i = select i1 %tobool5.not.i, i32 -22, i32 0
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.else.i, %if.then.i
  %ret.0.i = phi i32 [ %call4.i, %if.then.i ], [ %spec.select.i, %if.else.i ]
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags, align 4
  %or.i = or i32 %15, %ret.0.i.i
  store i32 %or.i, ptr %flags, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %16 = ptrtoint ptr %ref_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ref_cnt.i.i, align 8
  %dec.i.i = add i32 %17, -1
  store i32 %dec.i.i, ptr %ref_cnt.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %cmp.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp.i.i, label %if.then.i15.i, label %if.end7.i.if.end.i.i_crit_edge

if.end7.i.if.end.i.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i.i

if.then.i15.i:                                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %18 = ptrtoint ptr %mutex_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %mutex_owner.i.i, align 4
  %mutex.i.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i.i) #25
  %19 = ptrtoint ptr %ref_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pr.i.i = load i32, ptr %ref_cnt.i.i, align 8
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i15.i, %if.end7.i.if.end.i.i_crit_edge
  %20 = phi i32 [ %.pr.i.i, %if.then.i15.i ], [ %dec.i.i, %if.end7.i.if.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp2.i.i = icmp slt i32 %20, 0
  br i1 %cmp2.i.i, label %land.rhs.i.i, label %if.end.i.i._regulator_get_error_flags.exit_crit_edge

if.end.i.i._regulator_get_error_flags.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_get_error_flags.exit

land.rhs.i.i:                                     ; preds = %if.end.i.i
  %.b44.i.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i.i, label %land.rhs.i.i._regulator_get_error_flags.exit_crit_edge, label %if.then9.i.i, !prof !993

land.rhs.i.i._regulator_get_error_flags.exit_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_get_error_flags.exit

if.then9.i.i:                                     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %_regulator_get_error_flags.exit

_regulator_get_error_flags.exit:                  ; preds = %if.then9.i.i, %land.rhs.i.i._regulator_get_error_flags.exit_crit_edge, %if.end.i.i._regulator_get_error_flags.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret i32 %ret.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_set_load(ptr nocapture noundef %regulator, i32 noundef %uA_load) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  tail call fastcc void @regulator_lock(ptr noundef %1)
  %uA_load2 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 3
  %2 = ptrtoint ptr %uA_load2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %uA_load2, align 4
  store i32 %uA_load, ptr %uA_load2, align 4
  %enable_count = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 4
  %4 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %uA_load)
  %cmp.not = icmp eq i32 %3, %uA_load
  %or.cond = select i1 %tobool.not, i1 true, i1 %cmp.not
  br i1 %or.cond, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @drms_uA_update(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp4 = icmp slt i32 %call, 0
  br i1 %cmp4, label %if.then5, label %if.then.if.end7_crit_edge

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %6 = ptrtoint ptr %uA_load2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %3, ptr %uA_load2, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.then.if.end7_crit_edge, %entry.if.end7_crit_edge
  %ret.0 = phi i32 [ %call, %if.then5 ], [ %call, %if.then.if.end7_crit_edge ], [ 0, %entry.if.end7_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %7 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %8, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.end7.if.end.i_crit_edge

if.end7.if.end.i_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %9 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %10 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end7.if.end.i_crit_edge
  %11 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.end7.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp2.i = icmp slt i32 %11, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_allow_bypass(ptr nocapture noundef %regulator, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.rdev_get_name.exit_crit_edge, label %land.lhs.true.i

entry.rdev_get_name.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i:                                  ; preds = %entry
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.rdev_get_name.exit_crit_edge, label %rdev_get_name.exit.thread

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %land.lhs.true.i.rdev_get_name.exit_crit_edge, %entry.rdev_get_name.exit_crit_edge
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %7, i32 0, i32 10
  %8 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops, align 4
  %set_bypass = getelementptr inbounds %struct.regulator_ops, ptr %9, i32 0, i32 28
  %10 = ptrtoint ptr %set_bypass to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %set_bypass, align 4
  %tobool.not = icmp eq ptr %11, null
  br i1 %tobool.not, label %rdev_get_name.exit.cleanup_crit_edge, label %if.end

rdev_get_name.exit.cleanup_crit_edge:             ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

rdev_get_name.exit.thread:                        ; preds = %land.lhs.true.i
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 8
  %ops93 = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %ops93 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops93, align 4
  %set_bypass94 = getelementptr inbounds %struct.regulator_ops, ptr %15, i32 0, i32 28
  %16 = ptrtoint ptr %set_bypass94 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %set_bypass94, align 4
  %tobool.not95 = icmp eq ptr %17, null
  br i1 %tobool.not95, label %rdev_get_name.exit.thread.cleanup_crit_edge, label %rdev_get_name.exit.thread.regulator_ops_is_valid.exit_crit_edge

rdev_get_name.exit.thread.regulator_ops_is_valid.exit_crit_edge: ; preds = %rdev_get_name.exit.thread
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_ops_is_valid.exit

rdev_get_name.exit.thread.cleanup_crit_edge:      ; preds = %rdev_get_name.exit.thread
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %rdev_get_name.exit
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %tobool6.not.i = icmp eq ptr %21, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %21
  br i1 %tobool.not.i, label %regulator_ops_is_valid.exit.thread, label %if.end.regulator_ops_is_valid.exit_crit_edge

if.end.regulator_ops_is_valid.exit_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_ops_is_valid.exit

regulator_ops_is_valid.exit.thread:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %22 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %7, align 4
  %tobool6.not.i.i = icmp eq ptr %23, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %23
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %cleanup

regulator_ops_is_valid.exit:                      ; preds = %if.end.regulator_ops_is_valid.exit_crit_edge, %rdev_get_name.exit.thread.regulator_ops_is_valid.exit_crit_edge
  %retval.0.i9699 = phi ptr [ %.str..i, %if.end.regulator_ops_is_valid.exit_crit_edge ], [ %5, %rdev_get_name.exit.thread.regulator_ops_is_valid.exit_crit_edge ]
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 11
  %24 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %25, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.cleanup_crit_edge, label %if.end4

regulator_ops_is_valid.exit.cleanup_crit_edge:    ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end4:                                          ; preds = %regulator_ops_is_valid.exit
  tail call fastcc void @regulator_lock(ptr noundef %1)
  %bypass = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 2
  %26 = ptrtoint ptr %bypass to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load = load i8, ptr %bypass, align 4
  %27 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool6.not = icmp eq i8 %27, 0
  br i1 %enable, label %land.lhs.true, label %land.lhs.true22.critedge

land.lhs.true:                                    ; preds = %if.end4
  br i1 %tobool6.not, label %if.then7, label %land.lhs.true.if.then51_crit_edge

land.lhs.true.if.then51_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then51

if.then7:                                         ; preds = %land.lhs.true
  %bypass_count = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 4
  %28 = ptrtoint ptr %bypass_count to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %bypass_count, align 8
  %inc = add i32 %29, 1
  store i32 %inc, ptr %bypass_count, align 8
  %open_count = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 3
  %30 = ptrtoint ptr %open_count to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %open_count, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %31)
  %cmp = icmp eq i32 %inc, %31
  br i1 %cmp, label %if.then9, label %if.then7.if.then51_crit_edge

if.then7.if.then51_crit_edge:                     ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then51

if.then9:                                         ; preds = %if.then7
  tail call fastcc void @trace_regulator_bypass_enable(ptr noundef %retval.0.i9699)
  %32 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %1, align 8
  %ops11 = getelementptr inbounds %struct.regulator_desc, ptr %33, i32 0, i32 10
  %34 = ptrtoint ptr %ops11 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ops11, align 4
  %set_bypass12 = getelementptr inbounds %struct.regulator_ops, ptr %35, i32 0, i32 28
  %36 = ptrtoint ptr %set_bypass12 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %set_bypass12, align 4
  %call14 = tail call i32 %37(ptr noundef %1, i1 noundef zeroext true) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %cmp15.not = icmp eq i32 %call14, 0
  br i1 %cmp15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #27
  %38 = ptrtoint ptr %bypass_count to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %bypass_count, align 8
  %dec = add i32 %39, -1
  store i32 %dec, ptr %bypass_count, align 8
  br label %if.end56

if.else:                                          ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #27
  tail call fastcc void @trace_regulator_bypass_enable_complete(ptr noundef %retval.0.i9699)
  br label %if.then51

land.lhs.true22.critedge:                         ; preds = %if.end4
  br i1 %tobool6.not, label %land.lhs.true22.critedge.if.then51_crit_edge, label %if.then29

land.lhs.true22.critedge.if.then51_crit_edge:     ; preds = %land.lhs.true22.critedge
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then51

if.then29:                                        ; preds = %land.lhs.true22.critedge
  %bypass_count30 = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 4
  %40 = ptrtoint ptr %bypass_count30 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %bypass_count30, align 8
  %dec31 = add i32 %41, -1
  store i32 %dec31, ptr %bypass_count30, align 8
  %open_count33 = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 3
  %42 = ptrtoint ptr %open_count33 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %open_count33, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %dec31, i32 %43)
  %cmp34.not = icmp eq i32 %dec31, %43
  br i1 %cmp34.not, label %if.then29.if.then51_crit_edge, label %if.then35

if.then29.if.then51_crit_edge:                    ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then51

if.then35:                                        ; preds = %if.then29
  tail call fastcc void @trace_regulator_bypass_disable(ptr noundef %retval.0.i9699)
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %1, align 8
  %ops37 = getelementptr inbounds %struct.regulator_desc, ptr %45, i32 0, i32 10
  %46 = ptrtoint ptr %ops37 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ops37, align 4
  %set_bypass38 = getelementptr inbounds %struct.regulator_ops, ptr %47, i32 0, i32 28
  %48 = ptrtoint ptr %set_bypass38 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %set_bypass38, align 4
  %call40 = tail call i32 %49(ptr noundef %1, i1 noundef zeroext false) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %cmp41.not = icmp eq i32 %call40, 0
  br i1 %cmp41.not, label %if.else45, label %if.then42

if.then42:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #27
  %50 = ptrtoint ptr %bypass_count30 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %bypass_count30, align 8
  %inc44 = add i32 %51, 1
  store i32 %inc44, ptr %bypass_count30, align 8
  br label %if.end56

if.else45:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #27
  tail call fastcc void @trace_regulator_bypass_disable_complete(ptr noundef %retval.0.i9699)
  br label %if.then51

if.then51:                                        ; preds = %if.else45, %if.then29.if.then51_crit_edge, %land.lhs.true22.critedge.if.then51_crit_edge, %if.else, %if.then7.if.then51_crit_edge, %land.lhs.true.if.then51_crit_edge
  %bf.shl = phi i8 [ 0, %if.else45 ], [ 0, %if.then29.if.then51_crit_edge ], [ 0, %land.lhs.true22.critedge.if.then51_crit_edge ], [ 64, %if.else ], [ 64, %if.then7.if.then51_crit_edge ], [ 64, %land.lhs.true.if.then51_crit_edge ]
  %bypass53 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 2
  %52 = ptrtoint ptr %bypass53 to i32
  call void @__asan_load1_noabort(i32 %52)
  %bf.load54 = load i8, ptr %bypass53, align 4
  %bf.clear55 = and i8 %bf.load54, -65
  %bf.set = or i8 %bf.clear55, %bf.shl
  store i8 %bf.set, ptr %bypass53, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then51, %if.then42, %if.then16
  %ret.0104 = phi i32 [ 0, %if.then51 ], [ %call40, %if.then42 ], [ %call14, %if.then16 ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %53 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %54, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.end56.if.end.i91_crit_edge

if.end56.if.end.i91_crit_edge:                    ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i91

if.then.i:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %55 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %56 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i91

if.end.i91:                                       ; preds = %if.then.i, %if.end56.if.end.i91_crit_edge
  %57 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.end56.if.end.i91_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %cmp2.i = icmp slt i32 %57, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i91.regulator_unlock.exit_crit_edge

if.end.i91.regulator_unlock.exit_crit_edge:       ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i91
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i91.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %cleanup

cleanup:                                          ; preds = %regulator_unlock.exit, %regulator_ops_is_valid.exit.cleanup_crit_edge, %regulator_ops_is_valid.exit.thread, %rdev_get_name.exit.thread.cleanup_crit_edge, %rdev_get_name.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0104, %regulator_unlock.exit ], [ 0, %rdev_get_name.exit.cleanup_crit_edge ], [ 0, %regulator_ops_is_valid.exit.cleanup_crit_edge ], [ 0, %rdev_get_name.exit.thread.cleanup_crit_edge ], [ 0, %regulator_ops_is_valid.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_bypass_enable(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_enable, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_bypass_enable, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1002
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_enable, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1003
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1003
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_enable, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_bypass_enable.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_bypass_enable.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 79, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_bypass_enable_complete(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_enable_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_bypass_enable_complete, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1006
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_enable_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1007
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1007
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_enable_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_bypass_enable_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_bypass_enable_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 87, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_bypass_disable(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_disable, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_bypass_disable, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1008
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_disable, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1009
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1009
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_disable, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_bypass_disable.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_bypass_disable.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 95, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_bypass_disable_complete(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_disable_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_bypass_disable_complete, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1010
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_disable_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1011
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1011
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_bypass_disable_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_bypass_disable_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_bypass_disable_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 103, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_register_notifier(ptr nocapture noundef readonly %regulator, ptr noundef %nb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  %notifier = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 8
  %call = tail call i32 @blocking_notifier_chain_register(ptr noundef %notifier, ptr noundef %nb) #25
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blocking_notifier_chain_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_unregister_notifier(ptr nocapture noundef readonly %regulator, ptr noundef %nb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  %notifier = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 8
  %call = tail call i32 @blocking_notifier_chain_unregister(ptr noundef %notifier, ptr noundef %nb) #25
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blocking_notifier_chain_unregister(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_bulk_get(ptr noundef %dev, i32 noundef %num_consumers, ptr nocapture noundef %consumers) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_consumers)
  %cmp68 = icmp sgt i32 %num_consumers, 0
  br i1 %cmp68, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.cond1.preheader:                              ; preds = %for.body
  br i1 %cmp68, label %for.cond1.preheader.for.body3_crit_edge, label %for.cond1.preheader.cleanup_crit_edge

for.cond1.preheader.cleanup_crit_edge:            ; preds = %for.cond1.preheader
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.cond1.preheader.for.body3_crit_edge:          ; preds = %for.cond1.preheader
  br label %for.body3

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.069 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %consumer = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.069, i32 1
  %0 = ptrtoint ptr %consumer to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %consumer, align 4
  %inc = add nuw nsw i32 %i.069, 1
  %exitcond.not = icmp eq i32 %inc, %num_consumers
  br i1 %exitcond.not, label %for.cond1.preheader, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.body3:                                        ; preds = %for.inc15.for.body3_crit_edge, %for.cond1.preheader.for.body3_crit_edge
  %i.171 = phi i32 [ %inc16, %for.inc15.for.body3_crit_edge ], [ 0, %for.cond1.preheader.for.body3_crit_edge ]
  %arrayidx4 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.171
  %1 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx4, align 4
  %call.i = tail call ptr @_regulator_get(ptr noundef %dev, ptr noundef %2, i32 noundef 0) #25
  %consumer6 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.171, i32 1
  %3 = ptrtoint ptr %consumer6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call.i, ptr %consumer6, align 4
  %cmp.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %for.inc15

if.then:                                          ; preds = %for.body3
  %4 = ptrtoint ptr %call.i to i32
  %5 = ptrtoint ptr %consumer6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %consumer6, align 4
  %cmp18.not = icmp eq ptr %call.i, inttoptr (i32 -517 to ptr)
  br i1 %cmp18.not, label %do.body23, label %do.end

for.inc15:                                        ; preds = %for.body3
  %inc16 = add nuw nsw i32 %i.171, 1
  %exitcond80.not = icmp eq i32 %inc16, %num_consumers
  br i1 %exitcond80.not, label %for.inc15.cleanup_crit_edge, label %for.inc15.for.body3_crit_edge

for.inc15.for.body3_crit_edge:                    ; preds = %for.inc15
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body3

for.inc15.cleanup_crit_edge:                      ; preds = %for.inc15
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %6 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx4, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.37, ptr noundef %7, ptr noundef nonnull %call.i) #30
  br label %if.end34

do.body23:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @regulator_bulk_get.__UNIQUE_ID_ddebug383, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@regulator_bulk_get, %if.end34)) #25
          to label %if.then28 [label %if.end34], !srcloc !997

if.then28:                                        ; preds = %do.body23
  call void @__sanitizer_cov_trace_pc() #27
  %8 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx4, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @regulator_bulk_get.__UNIQUE_ID_ddebug383, ptr noundef %dev, ptr noundef nonnull @.str.40, ptr noundef %9) #25
  br label %if.end34

if.end34:                                         ; preds = %if.then28, %do.body23, %do.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.171)
  %cmp3573.not = icmp eq i32 %i.171, 0
  br i1 %cmp3573.not, label %if.end34.cleanup_crit_edge, label %if.end34.while.body_crit_edge

if.end34.while.body_crit_edge:                    ; preds = %if.end34
  br label %while.body

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.end34.while.body_crit_edge
  %dec74.in = phi i32 [ %dec74, %while.body.while.body_crit_edge ], [ %i.171, %if.end34.while.body_crit_edge ]
  %dec74 = add nsw i32 %dec74.in, -1
  %consumer37 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %dec74, i32 1
  %10 = ptrtoint ptr %consumer37 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %consumer37, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  tail call fastcc void @_regulator_put(ptr noundef %11) #25
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  %cmp35 = icmp sgt i32 %dec74.in, 1
  br i1 %cmp35, label %while.body.while.body_crit_edge, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %while.body

cleanup:                                          ; preds = %while.body.cleanup_crit_edge, %if.end34.cleanup_crit_edge, %for.inc15.cleanup_crit_edge, %for.cond1.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %4, %if.end34.cleanup_crit_edge ], [ 0, %for.cond1.preheader.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ %4, %while.body.cleanup_crit_edge ], [ 0, %for.inc15.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_bulk_enable(i32 noundef %num_consumers, ptr noundef %consumers) #0 align 64 {
entry:
  %ww_ctx.i = alloca %struct.ww_acquire_ctx, align 4
  %async_domain = alloca %struct.async_domain, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %async_domain) #25
  %0 = getelementptr inbounds i8, ptr %async_domain, i32 8
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %async_domain to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %async_domain, ptr %async_domain, align 4
  %prev = getelementptr inbounds %struct.list_head, ptr %async_domain, i32 0, i32 1
  %3 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %async_domain, ptr %prev, align 4
  %registered = getelementptr inbounds %struct.async_domain, ptr %async_domain, i32 0, i32 1
  %4 = ptrtoint ptr %registered to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 127, ptr %registered, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_consumers)
  %cmp57 = icmp sgt i32 %num_consumers, 0
  br i1 %cmp57, label %entry.for.body_crit_edge, label %for.end.thread

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.end.thread:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  call void @async_synchronize_full_domain(ptr noundef nonnull %async_domain) #25
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.058 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.058
  %call.i = call i64 @async_schedule_node_domain(ptr noundef nonnull @regulator_bulk_enable_async, ptr noundef %arrayidx, i32 noundef -1, ptr noundef nonnull %async_domain) #25
  %inc = add nuw nsw i32 %i.058, 1
  %exitcond.not = icmp eq i32 %inc, %num_consumers
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @async_synchronize_full_domain(ptr noundef nonnull %async_domain) #25
  br i1 %cmp57, label %for.end.for.body5_crit_edge, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.end.for.body5_crit_edge:                      ; preds = %for.end
  br label %for.body5

for.cond3:                                        ; preds = %for.body5
  %inc12 = add nuw nsw i32 %i.160, 1
  %exitcond66.not = icmp eq i32 %inc12, %num_consumers
  br i1 %exitcond66.not, label %for.cond3.cleanup_crit_edge, label %for.cond3.for.body5_crit_edge

for.cond3.for.body5_crit_edge:                    ; preds = %for.cond3
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body5

for.cond3.cleanup_crit_edge:                      ; preds = %for.cond3
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.body5:                                        ; preds = %for.cond3.for.body5_crit_edge, %for.end.for.body5_crit_edge
  %i.160 = phi i32 [ %inc12, %for.cond3.for.body5_crit_edge ], [ 0, %for.end.for.body5_crit_edge ]
  %ret7 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.160, i32 2
  %5 = ptrtoint ptr %ret7 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ret7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp8.not = icmp eq i32 %6, 0
  br i1 %cmp8.not, label %for.cond3, label %for.body5.for.body16_crit_edge

for.body5.for.body16_crit_edge:                   ; preds = %for.body5
  br label %for.body16

for.body16:                                       ; preds = %for.inc29.for.body16_crit_edge, %for.body5.for.body16_crit_edge
  %i.262 = phi i32 [ %inc30, %for.inc29.for.body16_crit_edge ], [ 0, %for.body5.for.body16_crit_edge ]
  %ret18 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.262, i32 2
  %7 = ptrtoint ptr %ret18 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ret18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp19 = icmp slt i32 %8, 0
  br i1 %cmp19, label %do.end, label %if.else

do.end:                                           ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #27
  %arrayidx17 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.262
  %9 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx17, align 4
  %11 = inttoptr i32 %8 to ptr
  %call25 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41, ptr noundef %10, ptr noundef nonnull %11) #30
  br label %for.inc29

if.else:                                          ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #27
  %consumer = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.262, i32 1
  %12 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %consumer, align 4
  %rdev1.i = getelementptr inbounds %struct.regulator, ptr %13, i32 0, i32 9
  %14 = ptrtoint ptr %rdev1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rdev1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %16 = call ptr @memset(ptr %ww_ctx.i, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %15, ptr noundef nonnull %ww_ctx.i) #25
  %call.i55 = call fastcc i32 @_regulator_disable(ptr noundef %13) #25
  %n_coupled.i.i = getelementptr inbounds %struct.regulator_dev, ptr %15, i32 0, i32 7, i32 3
  %17 = ptrtoint ptr %n_coupled.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %n_coupled.i.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %15, i32 noundef %18) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx.i) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  br label %for.inc29

for.inc29:                                        ; preds = %if.else, %do.end
  %inc30 = add nuw nsw i32 %i.262, 1
  %exitcond67.not = icmp eq i32 %inc30, %num_consumers
  br i1 %exitcond67.not, label %for.inc29.cleanup_crit_edge, label %for.inc29.for.body16_crit_edge

for.inc29.for.body16_crit_edge:                   ; preds = %for.inc29
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body16

for.inc29.cleanup_crit_edge:                      ; preds = %for.inc29
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

cleanup:                                          ; preds = %for.inc29.cleanup_crit_edge, %for.cond3.cleanup_crit_edge, %for.end.cleanup_crit_edge, %for.end.thread
  %retval.0 = phi i32 [ 0, %for.end.cleanup_crit_edge ], [ 0, %for.end.thread ], [ %6, %for.inc29.cleanup_crit_edge ], [ 0, %for.cond3.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %async_domain) #25
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @regulator_bulk_enable_async(ptr nocapture noundef %data, i64 noundef %cookie) #0 align 64 {
entry:
  %ww_ctx.i = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %consumer = getelementptr inbounds %struct.regulator_bulk_data, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %consumer, align 4
  %rdev1.i = getelementptr inbounds %struct.regulator, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %rdev1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rdev1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %4 = call ptr @memset(ptr %ww_ctx.i, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %3, ptr noundef nonnull %ww_ctx.i) #25
  %call.i = call fastcc i32 @_regulator_enable(ptr noundef %1) #25
  %n_coupled.i.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 7, i32 3
  %5 = ptrtoint ptr %n_coupled.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %n_coupled.i.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %3, i32 noundef %6) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx.i) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %ret = getelementptr inbounds %struct.regulator_bulk_data, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %call.i, ptr %ret, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @async_synchronize_full_domain(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_bulk_disable(i32 noundef %num_consumers, ptr nocapture noundef readonly %consumers) #0 align 64 {
entry:
  %ww_ctx.i42 = alloca %struct.ww_acquire_ctx, align 4
  %ww_ctx.i = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %i.0.in = phi i32 [ %num_consumers, %entry ], [ %i.0, %for.body.for.cond_crit_edge ]
  %i.0 = add i32 %i.0.in, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.0)
  %cmp = icmp sgt i32 %i.0, -1
  br i1 %cmp, label %for.body, label %for.cond.cleanup_crit_edge

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %consumer = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.0, i32 1
  %0 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %consumer, align 4
  %rdev1.i = getelementptr inbounds %struct.regulator, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %rdev1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rdev1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %4 = call ptr @memset(ptr %ww_ctx.i, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %3, ptr noundef nonnull %ww_ctx.i) #25
  %call.i = call fastcc i32 @_regulator_disable(ptr noundef %1) #25
  %n_coupled.i.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 7, i32 3
  %5 = ptrtoint ptr %n_coupled.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %n_coupled.i.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %3, i32 noundef %6) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx.i) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %cmp1.not = icmp eq i32 %call.i, 0
  br i1 %cmp1.not, label %for.body.for.cond_crit_edge, label %do.end

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.cond

do.end:                                           ; preds = %for.body
  %arrayidx = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.0
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %9 = inttoptr i32 %call.i to ptr
  %call4 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.43, ptr noundef %8, ptr noundef nonnull %9) #30
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.in, i32 %num_consumers)
  %cmp649 = icmp slt i32 %i.0.in, %num_consumers
  br i1 %cmp649, label %do.end.for.body7_crit_edge, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.end.for.body7_crit_edge:                       ; preds = %do.end
  br label %for.body7

for.body7:                                        ; preds = %for.inc22.for.body7_crit_edge, %do.end.for.body7_crit_edge
  %i.150 = phi i32 [ %inc23, %for.inc22.for.body7_crit_edge ], [ %i.0.in, %do.end.for.body7_crit_edge ]
  %consumer9 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.150, i32 1
  %10 = ptrtoint ptr %consumer9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %consumer9, align 4
  %rdev1.i43 = getelementptr inbounds %struct.regulator, ptr %11, i32 0, i32 9
  %12 = ptrtoint ptr %rdev1.i43 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rdev1.i43, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx.i42) #25
  %14 = call ptr @memset(ptr %ww_ctx.i42, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %13, ptr noundef nonnull %ww_ctx.i42) #25
  %call.i44 = call fastcc i32 @_regulator_enable(ptr noundef %11) #25
  %n_coupled.i.i45 = getelementptr inbounds %struct.regulator_dev, ptr %13, i32 0, i32 7, i32 3
  %15 = ptrtoint ptr %n_coupled.i.i45 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %n_coupled.i.i45, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %13, i32 noundef %16) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx.i42) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx.i42) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i44)
  %cmp11.not = icmp eq i32 %call.i44, 0
  br i1 %cmp11.not, label %for.body7.for.inc22_crit_edge, label %do.end15

for.body7.for.inc22_crit_edge:                    ; preds = %for.body7
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc22

do.end15:                                         ; preds = %for.body7
  call void @__sanitizer_cov_trace_pc() #27
  %arrayidx8 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.150
  %17 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx8, align 4
  %19 = inttoptr i32 %call.i44 to ptr
  %call20 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.46, ptr noundef %18, ptr noundef nonnull %19) #30
  br label %for.inc22

for.inc22:                                        ; preds = %do.end15, %for.body7.for.inc22_crit_edge
  %inc23 = add i32 %i.150, 1
  %exitcond.not = icmp eq i32 %inc23, %num_consumers
  br i1 %exitcond.not, label %for.inc22.cleanup_crit_edge, label %for.inc22.for.body7_crit_edge

for.inc22.for.body7_crit_edge:                    ; preds = %for.inc22
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body7

for.inc22.cleanup_crit_edge:                      ; preds = %for.inc22
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

cleanup:                                          ; preds = %for.inc22.cleanup_crit_edge, %do.end.cleanup_crit_edge, %for.cond.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %do.end.cleanup_crit_edge ], [ %call.i, %for.inc22.cleanup_crit_edge ], [ 0, %for.cond.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_bulk_force_disable(i32 noundef %num_consumers, ptr nocapture noundef %consumers) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_consumers)
  %cmp17 = icmp sgt i32 %num_consumers, 0
  br i1 %cmp17, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %ret.019 = phi i32 [ %ret.1, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.018 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %consumer = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.018, i32 1
  %0 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %consumer, align 4
  %call = tail call i32 @regulator_force_disable(ptr noundef %1)
  %ret2 = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.018, i32 2
  %2 = ptrtoint ptr %ret2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %call, ptr %ret2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp ne i32 %call, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.019)
  %tobool5.not = icmp eq i32 %ret.019, 0
  %or.cond = select i1 %tobool.not, i1 %tobool5.not, i1 false
  %ret.1 = select i1 %or.cond, i32 %call, i32 %ret.019
  %inc = add nuw nsw i32 %i.018, 1
  %exitcond.not = icmp eq i32 %inc, %num_consumers
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %ret.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %ret.1, %for.body.for.end_crit_edge ]
  ret i32 %ret.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @regulator_bulk_free(i32 noundef %num_consumers, ptr nocapture noundef %consumers) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_consumers)
  %cmp7 = icmp sgt i32 %num_consumers, 0
  br i1 %cmp7, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.08 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %consumer = getelementptr %struct.regulator_bulk_data, ptr %consumers, i32 %i.08, i32 1
  %0 = ptrtoint ptr %consumer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %consumer, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  tail call fastcc void @_regulator_put(ptr noundef %1) #25
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  %2 = ptrtoint ptr %consumer to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %consumer, align 4
  %inc = add nuw nsw i32 %i.08, 1
  %exitcond.not = icmp eq i32 %inc, %num_consumers
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_notifier_call_chain(ptr noundef %rdev, i32 noundef %event, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %notifier.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 8
  %call.i = tail call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i, i32 noundef %event, ptr noundef %data) #25
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @regulator_mode_to_status(i32 noundef %mode) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %switch.tableidx = add i32 %mode, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %switch.tableidx)
  %0 = icmp ult i32 %switch.tableidx, 8
  br i1 %0, label %switch.lookup, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %return

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.regulator_mode_to_status, i32 0, i32 %switch.tableidx
  %1 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %1)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %return

return:                                           ; preds = %switch.lookup, %entry.return_crit_edge
  %retval.0 = phi i32 [ %switch.load, %switch.lookup ], [ 8, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @regulator_coupler_register(ptr noundef %coupler) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  %0 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @regulator_coupler_list, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %coupler, ptr noundef %0, ptr noundef nonnull @regulator_coupler_list) #25
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_add_tail.exit_crit_edge

entry.list_add_tail.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  store ptr %coupler, ptr getelementptr inbounds (%struct.list_head, ptr @regulator_coupler_list, i32 0, i32 1), align 4
  %1 = ptrtoint ptr %coupler to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @regulator_coupler_list, ptr %coupler, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %coupler, i32 0, i32 1
  %2 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %0, ptr %prev3.i.i, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %coupler, ptr %0, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %entry.list_add_tail.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @regulator_register(ptr noundef %regulator_desc, ptr noundef %cfg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %cfg, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %ena_gpiod = getelementptr inbounds %struct.regulator_config, ptr %cfg, i32 0, i32 5
  %0 = ptrtoint ptr %ena_gpiod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ena_gpiod, align 4
  %tobool.not = icmp ne ptr %1, null
  %cmp3 = icmp eq ptr %regulator_desc, null
  br i1 %cmp3, label %if.end.rinse_crit_edge, label %if.end5

if.end.rinse_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %rinse

if.end5:                                          ; preds = %if.end
  %2 = ptrtoint ptr %cfg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cfg, align 4
  %tobool7.not = icmp eq ptr %3, null
  br i1 %tobool7.not, label %do.end, label %if.end5.if.end23_crit_edge, !prof !994

if.end5.if.end23_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end23

do.end:                                           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5341, i32 noundef 9, ptr noundef null) #25
  br label %if.end23

if.end23:                                         ; preds = %do.end, %if.end5.if.end23_crit_edge
  %4 = ptrtoint ptr %regulator_desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %regulator_desc, align 4
  %cmp30 = icmp eq ptr %5, null
  br i1 %cmp30, label %if.end23.rinse_crit_edge, label %lor.lhs.false

if.end23.rinse_crit_edge:                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #27
  br label %rinse

lor.lhs.false:                                    ; preds = %if.end23
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %regulator_desc, i32 0, i32 10
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %cmp31 = icmp eq ptr %7, null
  br i1 %cmp31, label %lor.lhs.false.rinse_crit_edge, label %if.end33

lor.lhs.false.rinse_crit_edge:                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %rinse

if.end33:                                         ; preds = %lor.lhs.false
  %type = getelementptr inbounds %struct.regulator_desc, ptr %regulator_desc, i32 0, i32 12
  %8 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %9)
  %switch = icmp ult i32 %9, 2
  br i1 %switch, label %if.end38, label %if.end33.rinse_crit_edge

if.end33.rinse_crit_edge:                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #27
  br label %rinse

if.end38:                                         ; preds = %if.end33
  %get_voltage = getelementptr inbounds %struct.regulator_ops, ptr %7, i32 0, i32 4
  %10 = ptrtoint ptr %get_voltage to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %get_voltage, align 4
  %tobool41.not = icmp eq ptr %11, null
  br i1 %tobool41.not, label %if.end38.if.end65_crit_edge, label %land.rhs

if.end38.if.end65_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end65

land.rhs:                                         ; preds = %if.end38
  %get_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %7, i32 0, i32 5
  %12 = ptrtoint ptr %get_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %get_voltage_sel, align 4
  %tobool43.not = icmp eq ptr %13, null
  br i1 %tobool43.not, label %land.rhs.if.end65_crit_edge, label %do.end59, !prof !993

land.rhs.if.end65_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end65

do.end59:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5356, i32 noundef 9, ptr noundef null) #25
  br label %if.end65

if.end65:                                         ; preds = %do.end59, %land.rhs.if.end65_crit_edge, %if.end38.if.end65_crit_edge
  %14 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops, align 4
  %set_voltage = getelementptr inbounds %struct.regulator_ops, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %set_voltage to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %set_voltage, align 4
  %tobool75.not = icmp eq ptr %17, null
  br i1 %tobool75.not, label %if.end65.if.end101_crit_edge, label %land.rhs76

if.end65.if.end101_crit_edge:                     ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end101

land.rhs76:                                       ; preds = %if.end65
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %15, i32 0, i32 3
  %18 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %set_voltage_sel, align 4
  %tobool78.not = icmp eq ptr %19, null
  br i1 %tobool78.not, label %land.rhs76.if.end101_crit_edge, label %do.end95, !prof !993

land.rhs76.if.end101_crit_edge:                   ; preds = %land.rhs76
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end101

do.end95:                                         ; preds = %land.rhs76
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5358, i32 noundef 9, ptr noundef null) #25
  br label %if.end101

if.end101:                                        ; preds = %do.end95, %land.rhs76.if.end101_crit_edge, %if.end65.if.end101_crit_edge
  %20 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ops, align 4
  %get_voltage_sel110 = getelementptr inbounds %struct.regulator_ops, ptr %21, i32 0, i32 5
  %22 = ptrtoint ptr %get_voltage_sel110 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %get_voltage_sel110, align 4
  %tobool111.not = icmp eq ptr %23, null
  br i1 %tobool111.not, label %if.end101.if.end116_crit_edge, label %land.lhs.true112

if.end101.if.end116_crit_edge:                    ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end116

land.lhs.true112:                                 ; preds = %if.end101
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %21, align 4
  %tobool114.not = icmp eq ptr %25, null
  br i1 %tobool114.not, label %land.lhs.true112.rinse_crit_edge, label %land.lhs.true112.if.end116_crit_edge

land.lhs.true112.if.end116_crit_edge:             ; preds = %land.lhs.true112
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end116

land.lhs.true112.rinse_crit_edge:                 ; preds = %land.lhs.true112
  call void @__sanitizer_cov_trace_pc() #27
  br label %rinse

if.end116:                                        ; preds = %land.lhs.true112.if.end116_crit_edge, %if.end101.if.end116_crit_edge
  %set_voltage_sel118 = getelementptr inbounds %struct.regulator_ops, ptr %21, i32 0, i32 3
  %26 = ptrtoint ptr %set_voltage_sel118 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %set_voltage_sel118, align 4
  %tobool119.not = icmp eq ptr %27, null
  br i1 %tobool119.not, label %if.end116.if.end125_crit_edge, label %land.lhs.true120

if.end116.if.end125_crit_edge:                    ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end125

land.lhs.true120:                                 ; preds = %if.end116
  %28 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %21, align 4
  %tobool123.not = icmp eq ptr %29, null
  br i1 %tobool123.not, label %land.lhs.true120.rinse_crit_edge, label %land.lhs.true120.if.end125_crit_edge

land.lhs.true120.if.end125_crit_edge:             ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end125

land.lhs.true120.rinse_crit_edge:                 ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #27
  br label %rinse

if.end125:                                        ; preds = %land.lhs.true120.if.end125_crit_edge, %if.end116.if.end125_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %30 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %30, i32 noundef 3520, i32 noundef 1392) #31
  %cmp127 = icmp eq ptr %call7.i.i, null
  br i1 %cmp127, label %if.end125.rinse_crit_edge, label %if.end129

if.end125.rinse_crit_edge:                        ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #27
  br label %rinse

if.end129:                                        ; preds = %if.end125
  %dev130 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 13
  tail call void @device_initialize(ptr noundef %dev130) #25
  %err_lock = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 26
  tail call void @__raw_spin_lock_init(ptr noundef %err_lock, ptr noundef nonnull @.str.48, ptr noundef nonnull @regulator_register.__key, i16 noundef signext 3) #25
  %call135 = tail call ptr @kmemdup(ptr noundef nonnull %cfg, i32 noundef 24, i32 noundef 3264) #25
  %cmp136 = icmp eq ptr %call135, null
  br i1 %cmp136, label %if.end129.if.end357_crit_edge, label %if.end138

if.end129.if.end357_crit_edge:                    ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end357

if.end138:                                        ; preds = %if.end129
  %of_node = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 13, i32 27
  %call140 = tail call ptr @regulator_of_get_init_data(ptr noundef %3, ptr noundef nonnull %regulator_desc, ptr noundef nonnull %call135, ptr noundef %of_node) #25
  %cmp142 = icmp eq ptr %call140, inttoptr (i32 -517 to ptr)
  br i1 %cmp142, label %if.end138.if.end357_crit_edge, label %if.end144

if.end138.if.end357_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end357

if.end144:                                        ; preds = %if.end138
  %31 = ptrtoint ptr %ena_gpiod to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ena_gpiod, align 4
  %tobool146.not = icmp eq ptr %32, null
  br i1 %tobool146.not, label %land.lhs.true147, label %if.end144.if.end151_crit_edge

if.end144.if.end151_crit_edge:                    ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end151

land.lhs.true147:                                 ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpiod148 = getelementptr inbounds %struct.regulator_config, ptr %call135, i32 0, i32 5
  %33 = ptrtoint ptr %ena_gpiod148 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ena_gpiod148, align 4
  %tobool149.not = icmp ne ptr %34, null
  br label %if.end151

if.end151:                                        ; preds = %land.lhs.true147, %if.end144.if.end151_crit_edge
  %dangling_of_gpiod.0.off0 = phi i1 [ false, %if.end144.if.end151_crit_edge ], [ %tobool149.not, %land.lhs.true147 ]
  %tobool152.not = icmp eq ptr %call140, null
  br i1 %tobool152.not, label %if.then153, label %if.end151.if.end159_crit_edge

if.end151.if.end159_crit_edge:                    ; preds = %if.end151
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end159

if.then153:                                       ; preds = %if.end151
  call void @__sanitizer_cov_trace_pc() #27
  %init_data154 = getelementptr inbounds %struct.regulator_config, ptr %call135, i32 0, i32 1
  %35 = ptrtoint ptr %init_data154 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %init_data154, align 4
  %of_node155 = getelementptr inbounds %struct.regulator_config, ptr %call135, i32 0, i32 3
  %37 = ptrtoint ptr %of_node155 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %of_node155, align 4
  %call156 = tail call ptr @of_node_get(ptr noundef %38) #25
  %39 = ptrtoint ptr %of_node to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %call156, ptr %of_node, align 8
  br label %if.end159

if.end159:                                        ; preds = %if.then153, %if.end151.if.end159_crit_edge
  %init_data.0 = phi ptr [ %call140, %if.end151.if.end159_crit_edge ], [ %36, %if.then153 ]
  %mutex = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 9
  %40 = load ptr, ptr getelementptr inbounds (%struct.ww_class, ptr @regulator_ww_class, i32 0, i32 4), align 4
  tail call void @__mutex_init(ptr noundef %mutex, ptr noundef %40, ptr noundef getelementptr inbounds (%struct.ww_class, ptr @regulator_ww_class, i32 0, i32 2)) #25
  %ctx.i = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 9, i32 1
  %41 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %ctx.i, align 4
  %ww_class1.i = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 9, i32 2
  %42 = ptrtoint ptr %ww_class1.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr @regulator_ww_class, ptr %ww_class1.i, align 8
  %driver_data = getelementptr inbounds %struct.regulator_config, ptr %call135, i32 0, i32 2
  %43 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %driver_data, align 4
  %reg_data = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 19
  %45 = ptrtoint ptr %reg_data to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %44, ptr %reg_data, align 4
  %owner = getelementptr inbounds %struct.regulator_desc, ptr %regulator_desc, i32 0, i32 13
  %46 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %owner, align 4
  %owner160 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 12
  %48 = ptrtoint ptr %owner160 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %47, ptr %owner160, align 4
  %49 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %regulator_desc, ptr %call7.i.i, align 8
  %regmap = getelementptr inbounds %struct.regulator_config, ptr %call135, i32 0, i32 4
  %50 = ptrtoint ptr %regmap to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %regmap, align 4
  %tobool161.not = icmp eq ptr %51, null
  br i1 %tobool161.not, label %if.else, label %if.end159.if.end178.sink.split_crit_edge

if.end159.if.end178.sink.split_crit_edge:         ; preds = %if.end159
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end178.sink.split

if.else:                                          ; preds = %if.end159
  %call165 = tail call ptr @dev_get_regmap(ptr noundef %3, ptr noundef null) #25
  %tobool166.not = icmp eq ptr %call165, null
  br i1 %tobool166.not, label %if.else170, label %if.then167

if.then167:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  %call168 = tail call ptr @dev_get_regmap(ptr noundef %3, ptr noundef null) #25
  br label %if.end178.sink.split

if.else170:                                       ; preds = %if.else
  %parent = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 1
  %52 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %parent, align 8
  %tobool171.not = icmp eq ptr %53, null
  br i1 %tobool171.not, label %if.else170.if.end178_crit_edge, label %if.then172

if.else170.if.end178_crit_edge:                   ; preds = %if.else170
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end178

if.then172:                                       ; preds = %if.else170
  call void @__sanitizer_cov_trace_pc() #27
  %call174 = tail call ptr @dev_get_regmap(ptr noundef nonnull %53, ptr noundef null) #25
  br label %if.end178.sink.split

if.end178.sink.split:                             ; preds = %if.then172, %if.then167, %if.end159.if.end178.sink.split_crit_edge
  %call168.sink = phi ptr [ %call168, %if.then167 ], [ %call174, %if.then172 ], [ %51, %if.end159.if.end178.sink.split_crit_edge ]
  %regmap169 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 17
  %54 = ptrtoint ptr %regmap169 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %call168.sink, ptr %regmap169, align 4
  br label %if.end178

if.end178:                                        ; preds = %if.end178.sink.split, %if.else170.if.end178_crit_edge
  %consumer_list = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 6
  %55 = ptrtoint ptr %consumer_list to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile ptr %consumer_list, ptr %consumer_list, align 4
  %prev.i = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 6, i32 1
  %56 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %consumer_list, ptr %prev.i, align 8
  %list = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 5
  %57 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %list, ptr %list, align 4
  %prev.i521 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 5, i32 1
  %58 = ptrtoint ptr %prev.i521 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %list, ptr %prev.i521, align 8
  %notifier = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 8
  tail call void @__init_rwsem(ptr noundef %notifier, ptr noundef nonnull @.str.50, ptr noundef nonnull @regulator_register.__key.49) #25
  %head = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 8, i32 1
  %59 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr null, ptr %head, align 4
  %disable_work = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 18
  tail call void @__init_work(ptr noundef %disable_work, i32 noundef 0) #25
  %60 = ptrtoint ptr %disable_work to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 -64, ptr %disable_work, align 8
  %lockdep_map = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 18, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.52, ptr noundef nonnull @regulator_register.__key.51, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #25
  %entry194 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 18, i32 0, i32 1
  %61 = ptrtoint ptr %entry194 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile ptr %entry194, ptr %entry194, align 4
  %prev.i522 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 18, i32 0, i32 1, i32 1
  %62 = ptrtoint ptr %prev.i522 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %entry194, ptr %prev.i522, align 8
  %func = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 18, i32 0, i32 2
  %63 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr @regulator_disable_work, ptr %func, align 4
  %timer = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 18, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.54, ptr noundef nonnull @regulator_register.__key.53) #25
  %tobool205.not = icmp eq ptr %init_data.0, null
  br i1 %tobool205.not, label %if.end178.if.end215_crit_edge, label %land.lhs.true206

if.end178.if.end215_crit_edge:                    ; preds = %if.end178
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end215

land.lhs.true206:                                 ; preds = %if.end178
  %regulator_init = getelementptr inbounds %struct.regulator_init_data, ptr %init_data.0, i32 0, i32 4
  %64 = ptrtoint ptr %regulator_init to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %regulator_init, align 4
  %tobool207.not = icmp eq ptr %65, null
  br i1 %tobool207.not, label %land.lhs.true206.if.end215_crit_edge, label %if.then208

land.lhs.true206.if.end215_crit_edge:             ; preds = %land.lhs.true206
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end215

if.then208:                                       ; preds = %land.lhs.true206
  %66 = ptrtoint ptr %reg_data to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %reg_data, align 4
  %call211 = tail call i32 %65(ptr noundef %67) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call211)
  %cmp212 = icmp slt i32 %call211, 0
  br i1 %cmp212, label %clean, label %if.then208.if.end215_crit_edge

if.then208.if.end215_crit_edge:                   ; preds = %if.then208
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end215

if.end215:                                        ; preds = %if.then208.if.end215_crit_edge, %land.lhs.true206.if.end215_crit_edge, %if.end178.if.end215_crit_edge
  %ena_gpiod216 = getelementptr inbounds %struct.regulator_config, ptr %call135, i32 0, i32 5
  %68 = ptrtoint ptr %ena_gpiod216 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %ena_gpiod216, align 4
  %tobool217.not = icmp eq ptr %69, null
  br i1 %tobool217.not, label %if.end215.if.end230_crit_edge, label %if.then218

if.end215.if.end230_crit_edge:                    ; preds = %if.end215
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end230

if.then218:                                       ; preds = %if.end215
  %call219 = tail call fastcc i32 @regulator_ena_gpio_request(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %call135)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call219)
  %cmp220.not = icmp eq i32 %call219, 0
  br i1 %cmp220.not, label %if.then218.if.end230_crit_edge, label %do.end224

if.then218.if.end230_crit_edge:                   ; preds = %if.then218
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end230

do.end224:                                        ; preds = %if.then218
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 14
  %70 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %71, null
  br i1 %tobool.not.i, label %do.end224.if.else.i_crit_edge, label %land.lhs.true.i

do.end224.if.else.i_crit_edge:                    ; preds = %do.end224
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end224
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %71, align 4
  %tobool2.not.i = icmp eq ptr %73, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end224.if.else.i_crit_edge
  %74 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %call7.i.i, align 8
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %75, align 4
  %tobool6.not.i = icmp eq ptr %77, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %77
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i523 = phi ptr [ %73, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %78 = inttoptr i32 %call219 to ptr
  %call228 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.55, ptr noundef %retval.0.i523, ptr noundef nonnull %78) #30
  br i1 %dangling_of_gpiod.0.off0, label %rdev_get_name.exit.if.then355_crit_edge, label %rdev_get_name.exit.if.end357_crit_edge

rdev_get_name.exit.if.end357_crit_edge:           ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end357

rdev_get_name.exit.if.then355_crit_edge:          ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then355

if.end230:                                        ; preds = %if.then218.if.end230_crit_edge, %if.end215.if.end230_crit_edge
  %dangling_of_gpiod.1.off0 = phi i1 [ %dangling_of_gpiod.0.off0, %if.end215.if.end230_crit_edge ], [ false, %if.then218.if.end230_crit_edge ]
  %dangling_cfg_gpiod.1.off0 = phi i1 [ %tobool.not, %if.end215.if.end230_crit_edge ], [ false, %if.then218.if.end230_crit_edge ]
  %class = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 13, i32 33
  %79 = ptrtoint ptr %class to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr @regulator_class, ptr %class, align 4
  %parent233 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 13, i32 1
  %80 = ptrtoint ptr %parent233 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %3, ptr %parent233, align 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @regulator_register.regulator_no, i32 noundef 4) #25
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #25, !srcloc !1012
  tail call void @llvm.prefetch.p0(ptr nonnull @regulator_register.regulator_no, i32 1, i32 3, i32 1) #25
  %81 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @regulator_register.regulator_no, ptr nonnull @regulator_register.regulator_no, i32 1, ptr nonnull elementtype(i32) @regulator_register.regulator_no) #25, !srcloc !998
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %81, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #25, !srcloc !1013
  %call236 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef %dev130, ptr noundef nonnull @.str.57, i32 noundef %asmresult.i.i.i.i) #25
  %driver_data.i = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 13, i32 8
  %82 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %call7.i.i, ptr %driver_data.i, align 4
  br i1 %tobool205.not, label %if.end245, label %if.end245.thread

if.end245:                                        ; preds = %if.end230
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %83 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i524 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %83, i32 noundef 3520, i32 noundef 208) #31
  %constraints244 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 14
  %84 = ptrtoint ptr %constraints244 to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %call7.i.i524, ptr %constraints244, align 8
  %tobool247.not = icmp eq ptr %call7.i.i524, null
  br i1 %tobool247.not, label %if.end245.wash_crit_edge, label %if.end245.if.else255_crit_edge

if.end245.if.else255_crit_edge:                   ; preds = %if.end245
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else255

if.end245.wash_crit_edge:                         ; preds = %if.end245
  call void @__sanitizer_cov_trace_pc() #27
  br label %wash

if.end245.thread:                                 ; preds = %if.end230
  %constraints = getelementptr inbounds %struct.regulator_init_data, ptr %init_data.0, i32 0, i32 1
  %call240 = tail call ptr @kmemdup(ptr noundef %constraints, i32 noundef 208, i32 noundef 3264) #25
  %constraints241 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 14
  %85 = ptrtoint ptr %constraints241 to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %call240, ptr %constraints241, align 8
  %tobool247.not544 = icmp eq ptr %call240, null
  br i1 %tobool247.not544, label %if.end245.thread.wash_crit_edge, label %land.lhs.true251

if.end245.thread.wash_crit_edge:                  ; preds = %if.end245.thread
  call void @__sanitizer_cov_trace_pc() #27
  br label %wash

land.lhs.true251:                                 ; preds = %if.end245.thread
  %86 = ptrtoint ptr %init_data.0 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %init_data.0, align 4
  %tobool252.not = icmp eq ptr %87, null
  br i1 %tobool252.not, label %land.lhs.true251.if.else255_crit_edge, label %land.lhs.true251.if.end262.sink.split_crit_edge

land.lhs.true251.if.end262.sink.split_crit_edge:  ; preds = %land.lhs.true251
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end262.sink.split

land.lhs.true251.if.else255_crit_edge:            ; preds = %land.lhs.true251
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else255

if.else255:                                       ; preds = %land.lhs.true251.if.else255_crit_edge, %if.end245.if.else255_crit_edge
  %constraints246545548 = phi ptr [ %constraints241, %land.lhs.true251.if.else255_crit_edge ], [ %constraints244, %if.end245.if.else255_crit_edge ]
  %supply_name256 = getelementptr inbounds %struct.regulator_desc, ptr %regulator_desc, i32 0, i32 1
  %88 = ptrtoint ptr %supply_name256 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %supply_name256, align 4
  %tobool257.not = icmp eq ptr %89, null
  br i1 %tobool257.not, label %if.else255.if.end262_crit_edge, label %if.else255.if.end262.sink.split_crit_edge

if.else255.if.end262.sink.split_crit_edge:        ; preds = %if.else255
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end262.sink.split

if.else255.if.end262_crit_edge:                   ; preds = %if.else255
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end262

if.end262.sink.split:                             ; preds = %if.else255.if.end262.sink.split_crit_edge, %land.lhs.true251.if.end262.sink.split_crit_edge
  %.sink = phi ptr [ %87, %land.lhs.true251.if.end262.sink.split_crit_edge ], [ %89, %if.else255.if.end262.sink.split_crit_edge ]
  %constraints246545547.ph = phi ptr [ %constraints241, %land.lhs.true251.if.end262.sink.split_crit_edge ], [ %constraints246545548, %if.else255.if.end262.sink.split_crit_edge ]
  %supply_name260 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 16
  %90 = ptrtoint ptr %supply_name260 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %.sink, ptr %supply_name260, align 8
  br label %if.end262

if.end262:                                        ; preds = %if.end262.sink.split, %if.else255.if.end262_crit_edge
  %constraints246545547 = phi ptr [ %constraints246545548, %if.else255.if.end262_crit_edge ], [ %constraints246545547.ph, %if.end262.sink.split ]
  %call263 = tail call fastcc i32 @set_machine_constraints(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -517, i32 %call263)
  %cmp264 = icmp eq i32 %call263, -517
  br i1 %cmp264, label %do.body266, label %if.end262.if.end310_crit_edge

if.end262.if.end310_crit_edge:                    ; preds = %if.end262
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end310

do.body266:                                       ; preds = %if.end262
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @regulator_register.__UNIQUE_ID_ddebug385, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@regulator_register, %do.end283)) #25
          to label %if.then278 [label %do.end283], !srcloc !997

if.then278:                                       ; preds = %do.body266
  %91 = ptrtoint ptr %constraints246545547 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %constraints246545547, align 8
  %tobool.not.i526 = icmp eq ptr %92, null
  br i1 %tobool.not.i526, label %if.then278.if.else.i531_crit_edge, label %land.lhs.true.i528

if.then278.if.else.i531_crit_edge:                ; preds = %if.then278
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i531

land.lhs.true.i528:                               ; preds = %if.then278
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %92, align 4
  %tobool2.not.i527 = icmp eq ptr %94, null
  br i1 %tobool2.not.i527, label %land.lhs.true.i528.if.else.i531_crit_edge, label %land.lhs.true.i528.rdev_get_name.exit533_crit_edge

land.lhs.true.i528.rdev_get_name.exit533_crit_edge: ; preds = %land.lhs.true.i528
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit533

land.lhs.true.i528.if.else.i531_crit_edge:        ; preds = %land.lhs.true.i528
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i531

if.else.i531:                                     ; preds = %land.lhs.true.i528.if.else.i531_crit_edge, %if.then278.if.else.i531_crit_edge
  %95 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %call7.i.i, align 8
  %97 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %96, align 4
  %tobool6.not.i529 = icmp eq ptr %98, null
  %.str..i530 = select i1 %tobool6.not.i529, ptr @.str, ptr %98
  br label %rdev_get_name.exit533

rdev_get_name.exit533:                            ; preds = %if.else.i531, %land.lhs.true.i528.rdev_get_name.exit533_crit_edge
  %retval.0.i532 = phi ptr [ %94, %land.lhs.true.i528.rdev_get_name.exit533_crit_edge ], [ %.str..i530, %if.else.i531 ]
  %supply_name280 = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 16
  %99 = ptrtoint ptr %supply_name280 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %supply_name280, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @regulator_register.__UNIQUE_ID_ddebug385, ptr noundef nonnull @.str.58, ptr noundef %retval.0.i532, ptr noundef %100) #25
  br label %do.end283

do.end283:                                        ; preds = %rdev_get_name.exit533, %do.body266
  %call284 = tail call fastcc i32 @regulator_resolve_supply(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call284)
  %tobool285.not = icmp eq i32 %call284, 0
  br i1 %tobool285.not, label %if.then286, label %do.body289

if.then286:                                       ; preds = %do.end283
  call void @__sanitizer_cov_trace_pc() #27
  %call287 = tail call fastcc i32 @set_machine_constraints(ptr noundef nonnull %call7.i.i)
  br label %if.end310

do.body289:                                       ; preds = %do.end283
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @regulator_register.__UNIQUE_ID_ddebug386, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@regulator_register, %if.end310)) #25
          to label %if.then303 [label %if.end310], !srcloc !997

if.then303:                                       ; preds = %do.body289
  %101 = ptrtoint ptr %constraints246545547 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %constraints246545547, align 8
  %tobool.not.i535 = icmp eq ptr %102, null
  br i1 %tobool.not.i535, label %if.then303.if.else.i540_crit_edge, label %land.lhs.true.i537

if.then303.if.else.i540_crit_edge:                ; preds = %if.then303
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i540

land.lhs.true.i537:                               ; preds = %if.then303
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %102, align 4
  %tobool2.not.i536 = icmp eq ptr %104, null
  br i1 %tobool2.not.i536, label %land.lhs.true.i537.if.else.i540_crit_edge, label %land.lhs.true.i537.rdev_get_name.exit542_crit_edge

land.lhs.true.i537.rdev_get_name.exit542_crit_edge: ; preds = %land.lhs.true.i537
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit542

land.lhs.true.i537.if.else.i540_crit_edge:        ; preds = %land.lhs.true.i537
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i540

if.else.i540:                                     ; preds = %land.lhs.true.i537.if.else.i540_crit_edge, %if.then303.if.else.i540_crit_edge
  %105 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %call7.i.i, align 8
  %107 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %106, align 4
  %tobool6.not.i538 = icmp eq ptr %108, null
  %.str..i539 = select i1 %tobool6.not.i538, ptr @.str, ptr %108
  br label %rdev_get_name.exit542

rdev_get_name.exit542:                            ; preds = %if.else.i540, %land.lhs.true.i537.rdev_get_name.exit542_crit_edge
  %retval.0.i541 = phi ptr [ %104, %land.lhs.true.i537.rdev_get_name.exit542_crit_edge ], [ %.str..i539, %if.else.i540 ]
  %109 = inttoptr i32 %call284 to ptr
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @regulator_register.__UNIQUE_ID_ddebug386, ptr noundef nonnull @.str.59, ptr noundef %retval.0.i541, ptr noundef nonnull %109) #25
  br label %if.end310

if.end310:                                        ; preds = %rdev_get_name.exit542, %do.body289, %if.then286, %if.end262.if.end310_crit_edge
  %ret.0 = phi i32 [ %call284, %rdev_get_name.exit542 ], [ %call287, %if.then286 ], [ %call263, %if.end262.if.end310_crit_edge ], [ %call284, %do.body289 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %cmp311 = icmp slt i32 %ret.0, 0
  br i1 %cmp311, label %if.end310.wash_crit_edge, label %if.end313

if.end310.wash_crit_edge:                         ; preds = %if.end310
  call void @__sanitizer_cov_trace_pc() #27
  br label %wash

if.end313:                                        ; preds = %if.end310
  %call314 = tail call fastcc i32 @regulator_init_coupling(ptr noundef nonnull %call7.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call314)
  %cmp315 = icmp slt i32 %call314, 0
  br i1 %cmp315, label %if.end313.wash_crit_edge, label %if.end317

if.end313.wash_crit_edge:                         ; preds = %if.end313
  call void @__sanitizer_cov_trace_pc() #27
  br label %wash

if.end317:                                        ; preds = %if.end313
  br i1 %tobool205.not, label %if.end317.if.end333_crit_edge, label %for.cond.preheader

if.end317.if.end333_crit_edge:                    ; preds = %if.end317
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end333

for.cond.preheader:                               ; preds = %if.end317
  %num_consumer_supplies = getelementptr inbounds %struct.regulator_init_data, ptr %init_data.0, i32 0, i32 2
  %110 = ptrtoint ptr %num_consumer_supplies to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %num_consumer_supplies, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %111)
  %cmp320562 = icmp sgt i32 %111, 0
  br i1 %cmp320562, label %for.body.lr.ph, label %for.cond.preheader.if.end333_crit_edge

for.cond.preheader.if.end333_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end333

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %consumer_supplies = getelementptr inbounds %struct.regulator_init_data, ptr %init_data.0, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0563 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %112 = ptrtoint ptr %consumer_supplies to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %consumer_supplies, align 4
  %arrayidx = getelementptr %struct.regulator_consumer_supply, ptr %113, i32 %i.0563
  %114 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %arrayidx, align 4
  %supply = getelementptr %struct.regulator_consumer_supply, ptr %113, i32 %i.0563, i32 1
  %116 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %supply, align 4
  %call323 = tail call fastcc i32 @set_consumer_device_supply(ptr noundef nonnull %call7.i.i, ptr noundef %115, ptr noundef %117)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call323)
  %cmp324 = icmp slt i32 %call323, 0
  br i1 %cmp324, label %do.end328, label %for.inc

do.end328:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  %118 = ptrtoint ptr %consumer_supplies to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %consumer_supplies, align 4
  %supply331 = getelementptr %struct.regulator_consumer_supply, ptr %119, i32 %i.0563, i32 1
  %120 = ptrtoint ptr %supply331 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %supply331, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.61, ptr noundef %121) #30
  br label %unset_supplies

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0563, 1
  %122 = ptrtoint ptr %num_consumer_supplies to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %num_consumer_supplies, align 4
  %cmp320 = icmp slt i32 %inc, %123
  br i1 %cmp320, label %for.inc.for.body_crit_edge, label %for.inc.if.end333_crit_edge

for.inc.if.end333_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end333

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

if.end333:                                        ; preds = %for.inc.if.end333_crit_edge, %for.cond.preheader.if.end333_crit_edge, %if.end317.if.end333_crit_edge
  %124 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %call7.i.i, align 8
  %ops335 = getelementptr inbounds %struct.regulator_desc, ptr %125, i32 0, i32 10
  %126 = ptrtoint ptr %ops335 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %ops335, align 4
  %get_voltage336 = getelementptr inbounds %struct.regulator_ops, ptr %127, i32 0, i32 4
  %128 = ptrtoint ptr %get_voltage336 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %get_voltage336, align 4
  %tobool337.not = icmp eq ptr %129, null
  br i1 %tobool337.not, label %land.lhs.true338, label %if.end333.if.end347_crit_edge

if.end333.if.end347_crit_edge:                    ; preds = %if.end333
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end347

land.lhs.true338:                                 ; preds = %if.end333
  %130 = ptrtoint ptr %127 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %127, align 4
  %tobool342.not = icmp eq ptr %131, null
  br i1 %tobool342.not, label %land.lhs.true343, label %land.lhs.true338.if.end347_crit_edge

land.lhs.true338.if.end347_crit_edge:             ; preds = %land.lhs.true338
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end347

land.lhs.true343:                                 ; preds = %land.lhs.true338
  %fixed_uV = getelementptr inbounds %struct.regulator_desc, ptr %125, i32 0, i32 17
  %132 = ptrtoint ptr %fixed_uV to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %fixed_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %133)
  %tobool345.not = icmp eq i32 %133, 0
  br i1 %tobool345.not, label %if.then346, label %land.lhs.true343.if.end347_crit_edge

land.lhs.true343.if.end347_crit_edge:             ; preds = %land.lhs.true343
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end347

if.then346:                                       ; preds = %land.lhs.true343
  call void @__sanitizer_cov_trace_pc() #27
  %is_switch = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 22
  %134 = ptrtoint ptr %is_switch to i32
  call void @__asan_load1_noabort(i32 %134)
  %bf.load = load i8, ptr %is_switch, align 8
  %bf.set = or i8 %bf.load, 64
  store i8 %bf.set, ptr %is_switch, align 8
  br label %if.end347

if.end347:                                        ; preds = %if.then346, %land.lhs.true343.if.end347_crit_edge, %land.lhs.true338.if.end347_crit_edge, %if.end333.if.end347_crit_edge
  %call349 = tail call i32 @device_add(ptr noundef %dev130) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call349)
  %cmp350.not = icmp eq i32 %call349, 0
  br i1 %cmp350.not, label %if.end352, label %if.end347.unset_supplies_crit_edge

if.end347.unset_supplies_crit_edge:               ; preds = %if.end347
  call void @__sanitizer_cov_trace_pc() #27
  br label %unset_supplies

if.end352:                                        ; preds = %if.end347
  call void @__sanitizer_cov_trace_pc() #27
  tail call fastcc void @rdev_init_debugfs(ptr noundef nonnull %call7.i.i)
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  tail call fastcc void @regulator_resolve_coupling(ptr noundef nonnull %call7.i.i)
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  %call353 = tail call i32 @class_for_each_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef null, ptr noundef nonnull @regulator_register_resolve_supply) #25
  tail call void @kfree(ptr noundef nonnull %call135) #25
  br label %cleanup

unset_supplies:                                   ; preds = %if.end347.unset_supplies_crit_edge, %do.end328
  %ret.1 = phi i32 [ %call323, %do.end328 ], [ %call349, %if.end347.unset_supplies_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  tail call fastcc void @unset_regulator_supplies(ptr noundef nonnull %call7.i.i)
  tail call fastcc void @regulator_remove_coupling(ptr noundef nonnull %call7.i.i)
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  br label %wash

wash:                                             ; preds = %unset_supplies, %if.end313.wash_crit_edge, %if.end310.wash_crit_edge, %if.end245.thread.wash_crit_edge, %if.end245.wash_crit_edge
  %ret.2 = phi i32 [ %ret.0, %if.end310.wash_crit_edge ], [ %call314, %if.end313.wash_crit_edge ], [ %ret.1, %unset_supplies ], [ -12, %if.end245.wash_crit_edge ], [ -12, %if.end245.thread.wash_crit_edge ]
  %coupling_desc = getelementptr inbounds %struct.regulator_dev, ptr %call7.i.i, i32 0, i32 7
  %135 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %coupling_desc, align 4
  tail call void @kfree(ptr noundef %136) #25
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  tail call fastcc void @regulator_ena_gpio_free(ptr noundef nonnull %call7.i.i)
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  br i1 %dangling_of_gpiod.1.off0, label %wash.if.then355_crit_edge, label %wash.if.end357_crit_edge

wash.if.end357_crit_edge:                         ; preds = %wash
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end357

wash.if.then355_crit_edge:                        ; preds = %wash
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then355

clean:                                            ; preds = %if.then208
  br i1 %dangling_of_gpiod.0.off0, label %clean.if.then355_crit_edge, label %clean.if.end357_crit_edge

clean.if.end357_crit_edge:                        ; preds = %clean
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end357

clean.if.then355_crit_edge:                       ; preds = %clean
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then355

if.then355:                                       ; preds = %clean.if.then355_crit_edge, %wash.if.then355_crit_edge, %rdev_get_name.exit.if.then355_crit_edge
  %dangling_cfg_gpiod.2.off0558 = phi i1 [ %tobool.not, %rdev_get_name.exit.if.then355_crit_edge ], [ %tobool.not, %clean.if.then355_crit_edge ], [ %dangling_cfg_gpiod.1.off0, %wash.if.then355_crit_edge ]
  %ret.3557 = phi i32 [ %call219, %rdev_get_name.exit.if.then355_crit_edge ], [ %call211, %clean.if.then355_crit_edge ], [ %ret.2, %wash.if.then355_crit_edge ]
  %ena_gpiod356 = getelementptr inbounds %struct.regulator_config, ptr %call135, i32 0, i32 5
  %137 = ptrtoint ptr %ena_gpiod356 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %ena_gpiod356, align 4
  tail call void @gpiod_put(ptr noundef %138) #25
  br label %if.end357

if.end357:                                        ; preds = %if.then355, %clean.if.end357_crit_edge, %wash.if.end357_crit_edge, %rdev_get_name.exit.if.end357_crit_edge, %if.end138.if.end357_crit_edge, %if.end129.if.end357_crit_edge
  %dangling_cfg_gpiod.2.off0556 = phi i1 [ %dangling_cfg_gpiod.2.off0558, %if.then355 ], [ %tobool.not, %clean.if.end357_crit_edge ], [ %tobool.not, %rdev_get_name.exit.if.end357_crit_edge ], [ %dangling_cfg_gpiod.1.off0, %wash.if.end357_crit_edge ], [ %tobool.not, %if.end129.if.end357_crit_edge ], [ %tobool.not, %if.end138.if.end357_crit_edge ]
  %ret.3555 = phi i32 [ %ret.3557, %if.then355 ], [ %call211, %clean.if.end357_crit_edge ], [ %call219, %rdev_get_name.exit.if.end357_crit_edge ], [ %ret.2, %wash.if.end357_crit_edge ], [ -12, %if.end129.if.end357_crit_edge ], [ -517, %if.end138.if.end357_crit_edge ]
  tail call void @kfree(ptr noundef %call135) #25
  tail call void @put_device(ptr noundef %dev130) #25
  br i1 %dangling_cfg_gpiod.2.off0556, label %if.end357.if.then360_crit_edge, label %if.end357.if.end362_crit_edge

if.end357.if.end362_crit_edge:                    ; preds = %if.end357
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end362

if.end357.if.then360_crit_edge:                   ; preds = %if.end357
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then360

rinse:                                            ; preds = %if.end125.rinse_crit_edge, %land.lhs.true120.rinse_crit_edge, %land.lhs.true112.rinse_crit_edge, %if.end33.rinse_crit_edge, %lor.lhs.false.rinse_crit_edge, %if.end23.rinse_crit_edge, %if.end.rinse_crit_edge
  %ret.4 = phi i32 [ -22, %if.end.rinse_crit_edge ], [ -22, %lor.lhs.false.rinse_crit_edge ], [ -22, %if.end23.rinse_crit_edge ], [ -22, %if.end33.rinse_crit_edge ], [ -22, %land.lhs.true112.rinse_crit_edge ], [ -22, %land.lhs.true120.rinse_crit_edge ], [ -12, %if.end125.rinse_crit_edge ]
  br i1 %tobool.not, label %rinse.if.then360_crit_edge, label %rinse.if.end362_crit_edge

rinse.if.end362_crit_edge:                        ; preds = %rinse
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end362

rinse.if.then360_crit_edge:                       ; preds = %rinse
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then360

if.then360:                                       ; preds = %rinse.if.then360_crit_edge, %if.end357.if.then360_crit_edge
  %ret.4560 = phi i32 [ %ret.3555, %if.end357.if.then360_crit_edge ], [ %ret.4, %rinse.if.then360_crit_edge ]
  %139 = ptrtoint ptr %ena_gpiod to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %ena_gpiod, align 4
  tail call void @gpiod_put(ptr noundef %140) #25
  br label %if.end362

if.end362:                                        ; preds = %if.then360, %rinse.if.end362_crit_edge, %if.end357.if.end362_crit_edge
  %ret.4559 = phi i32 [ %ret.3555, %if.end357.if.end362_crit_edge ], [ %ret.4560, %if.then360 ], [ %ret.4, %rinse.if.end362_crit_edge ]
  %141 = inttoptr i32 %ret.4559 to ptr
  br label %cleanup

cleanup:                                          ; preds = %if.end362, %if.end352, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %141, %if.end362 ], [ %call7.i.i, %if.end352 ], [ inttoptr (i32 -22 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_initialize(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @regulator_of_get_init_data(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_node_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_get_regmap(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_rwsem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @regulator_disable_work(ptr noundef %work) #0 align 64 {
entry:
  %ww_ctx = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -1208
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx) #25
  %0 = call ptr @memset(ptr %ww_ctx, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %add.ptr, ptr noundef nonnull %ww_ctx)
  %call = call zeroext i1 @cancel_delayed_work(ptr noundef %work) #25
  %consumer_list = getelementptr i8, ptr %work, i32 -1180
  %1 = ptrtoint ptr %consumer_list to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn80 = load ptr, ptr %consumer_list, align 4
  %cmp.not82 = icmp eq ptr %.pn80, %consumer_list
  br i1 %cmp.not82, label %entry.do.end38_crit_edge, label %for.body.lr.ph

entry.do.end38_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end38

for.body.lr.ph:                                   ; preds = %entry
  %constraints.i = getelementptr i8, ptr %work, i32 -16
  br label %for.body

for.body:                                         ; preds = %for.inc17.for.body_crit_edge, %for.body.lr.ph
  %.pn84 = phi ptr [ %.pn80, %for.body.lr.ph ], [ %.pn, %for.inc17.for.body_crit_edge ]
  %total_count.083 = phi i32 [ 0, %for.body.lr.ph ], [ %total_count.1, %for.inc17.for.body_crit_edge ]
  %regulator.085 = getelementptr i8, ptr %.pn84, i32 -4
  %deferred_disables = getelementptr i8, ptr %.pn84, i32 20
  %2 = ptrtoint ptr %deferred_disables to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %deferred_disables, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %for.body.for.inc17_crit_edge, label %if.end

for.body.for.inc17_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc17

if.end:                                           ; preds = %for.body
  %add = add i32 %3, %total_count.083
  %4 = ptrtoint ptr %deferred_disables to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %deferred_disables, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp778 = icmp sgt i32 %3, 0
  br i1 %cmp778, label %if.end.for.body8_crit_edge, label %if.end.for.inc17_crit_edge

if.end.for.inc17_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc17

if.end.for.body8_crit_edge:                       ; preds = %if.end
  br label %for.body8

for.body8:                                        ; preds = %for.inc.for.body8_crit_edge, %if.end.for.body8_crit_edge
  %i.079 = phi i32 [ %inc, %for.inc.for.body8_crit_edge ], [ 0, %if.end.for.body8_crit_edge ]
  %call9 = call fastcc i32 @_regulator_disable(ptr noundef %regulator.085)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp10.not = icmp eq i32 %call9, 0
  br i1 %cmp10.not, label %for.body8.for.inc_crit_edge, label %do.end

for.body8.for.inc_crit_edge:                      ; preds = %for.body8
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

do.end:                                           ; preds = %for.body8
  %5 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %9 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %add.ptr, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %tobool6.not.i = icmp eq ptr %12, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %12
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %8, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %13 = inttoptr i32 %call9 to ptr
  %call15 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.163, ptr noundef %retval.0.i, ptr noundef nonnull %13) #30
  br label %for.inc

for.inc:                                          ; preds = %rdev_get_name.exit, %for.body8.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.079, 1
  %exitcond.not = icmp eq i32 %inc, %3
  br i1 %exitcond.not, label %for.inc.for.inc17_crit_edge, label %for.inc.for.body8_crit_edge

for.inc.for.body8_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body8

for.inc.for.inc17_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc17

for.inc17:                                        ; preds = %for.inc.for.inc17_crit_edge, %if.end.for.inc17_crit_edge, %for.body.for.inc17_crit_edge
  %total_count.1 = phi i32 [ %total_count.083, %for.body.for.inc17_crit_edge ], [ %add, %if.end.for.inc17_crit_edge ], [ %add, %for.inc.for.inc17_crit_edge ]
  %14 = ptrtoint ptr %.pn84 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn = load ptr, ptr %.pn84, align 4
  %cmp.not = icmp eq ptr %.pn, %consumer_list
  br i1 %cmp.not, label %for.end23, label %for.inc17.for.body_crit_edge

for.inc17.for.body_crit_edge:                     ; preds = %for.inc17
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.end23:                                        ; preds = %for.inc17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %total_count.1)
  %tobool24.not = icmp eq i32 %total_count.1, 0
  br i1 %tobool24.not, label %for.end23.do.end38_crit_edge, label %for.end23.if.end44_crit_edge, !prof !994

for.end23.if.end44_crit_edge:                     ; preds = %for.end23
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end44

for.end23.do.end38_crit_edge:                     ; preds = %for.end23
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end38

do.end38:                                         ; preds = %for.end23.do.end38_crit_edge, %entry.do.end38_crit_edge
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3020, i32 noundef 9, ptr noundef null) #25
  br label %if.end44

if.end44:                                         ; preds = %do.end38, %for.end23.if.end44_crit_edge
  %n_coupled = getelementptr i8, ptr %work, i32 -1160
  %15 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp52 = icmp sgt i32 %16, 1
  br i1 %cmp52, label %if.then53, label %if.end44.if.end55_crit_edge

if.end44.if.end55_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end55

if.then53:                                        ; preds = %if.end44
  %coupler1.i = getelementptr i8, ptr %work, i32 -1168
  %17 = ptrtoint ptr %coupler1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %coupler1.i, align 4
  %n_resolved.i = getelementptr i8, ptr %work, i32 -1164
  %19 = ptrtoint ptr %n_resolved.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %n_resolved.i, align 4
  %21 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %22)
  %cmp2.i = icmp slt i32 %20, %22
  br i1 %cmp2.i, label %do.end.i, label %if.end5.i

do.end.i:                                         ; preds = %if.then53
  %constraints.i.i = getelementptr i8, ptr %work, i32 -16
  %23 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %constraints.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %24, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 4
  %tobool2.not.i.i = icmp eq ptr %26, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %27 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %add.ptr, align 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %tobool6.not.i.i = icmp eq ptr %30, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %30
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %26, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call4.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef %retval.0.i.i) #30
  br label %if.end55

if.end5.i:                                        ; preds = %if.then53
  %tobool.not.i73 = icmp eq ptr %18, null
  br i1 %tobool.not.i73, label %if.end5.i.if.end10.i_crit_edge, label %land.lhs.true.i75

if.end5.i.if.end10.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

land.lhs.true.i75:                                ; preds = %if.end5.i
  %balance_voltage.i = getelementptr inbounds %struct.regulator_coupler, ptr %18, i32 0, i32 3
  %31 = ptrtoint ptr %balance_voltage.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %balance_voltage.i, align 4
  %tobool6.not.i74 = icmp eq ptr %32, null
  br i1 %tobool6.not.i74, label %land.lhs.true.i75.if.end10.i_crit_edge, label %if.then7.i

land.lhs.true.i75.if.end10.i_crit_edge:           ; preds = %land.lhs.true.i75
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10.i

if.then7.i:                                       ; preds = %land.lhs.true.i75
  call void @__sanitizer_cov_trace_pc() #27
  %call9.i = call i32 %32(ptr noundef nonnull %18, ptr noundef %add.ptr, i32 noundef 0) #25
  br label %if.end55

if.end10.i:                                       ; preds = %land.lhs.true.i75.if.end10.i_crit_edge, %if.end5.i.if.end10.i_crit_edge
  %call12.i = call i32 @regulator_do_balance_voltage(ptr noundef %add.ptr, i32 noundef 0, i1 noundef zeroext false) #25
  br label %if.end55

if.end55:                                         ; preds = %if.end10.i, %if.then7.i, %rdev_get_name.exit.i, %if.end44.if.end55_crit_edge
  %33 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %n_coupled, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %add.ptr, i32 noundef %34) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx) #25
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @regulator_ena_gpio_request(ptr nocapture noundef %rdev, ptr nocapture noundef readonly %config) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %ena_gpiod = getelementptr inbounds %struct.regulator_config, ptr %config, i32 0, i32 5
  %0 = ptrtoint ptr %ena_gpiod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ena_gpiod, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 20) #31
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %pin.0.in = phi ptr [ @regulator_ena_gpio_list, %entry ], [ %pin.0, %for.body.for.cond_crit_edge ]
  %3 = ptrtoint ptr %pin.0.in to i32
  call void @__asan_load4_noabort(i32 %3)
  %pin.0 = load ptr, ptr %pin.0.in, align 4
  %cmp.not = icmp eq ptr %pin.0, @regulator_ena_gpio_list
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %gpiod1 = getelementptr inbounds %struct.regulator_enable_gpio, ptr %pin.0, i32 0, i32 1
  %4 = ptrtoint ptr %gpiod1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %gpiod1, align 4
  %cmp2 = icmp eq ptr %5, %1
  br i1 %cmp2, label %do.body, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.cond

do.body:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @regulator_ena_gpio_request.__UNIQUE_ID_ddebug365, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@regulator_ena_gpio_request, %update_ena_gpio_to_rdev)) #25
          to label %if.then9 [label %update_ena_gpio_to_rdev], !srcloc !997

if.then9:                                         ; preds = %do.body
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %6 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.then9.if.else.i_crit_edge, label %land.lhs.true.i

if.then9.if.else.i_crit_edge:                     ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then9
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool2.not.i = icmp eq ptr %9, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then9.if.else.i_crit_edge
  %10 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rdev, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %tobool6.not.i = icmp eq ptr %13, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %13
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i33 = phi ptr [ %9, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @regulator_ena_gpio_request.__UNIQUE_ID_ddebug365, ptr noundef nonnull @.str.166, ptr noundef %retval.0.i33) #25
  br label %update_ena_gpio_to_rdev

for.end:                                          ; preds = %for.cond
  %cmp16 = icmp eq ptr %call7.i.i, null
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  br label %cleanup

if.end18:                                         ; preds = %for.end
  %gpiod19 = getelementptr inbounds %struct.regulator_enable_gpio, ptr %call7.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %gpiod19 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %1, ptr %gpiod19, align 8
  %15 = load ptr, ptr @regulator_ena_gpio_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @regulator_ena_gpio_list, ptr noundef %15) #25
  br i1 %call.i.i, label %if.end.i.i, label %if.end18.update_ena_gpio_to_rdev_crit_edge

if.end18.update_ena_gpio_to_rdev_crit_edge:       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #27
  br label %update_ena_gpio_to_rdev

if.end.i.i:                                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #27
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call7.i.i, ptr %prev1.i.i, align 4
  %17 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %15, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @regulator_ena_gpio_list, ptr %prev3.i.i, align 4
  store volatile ptr %call7.i.i, ptr @regulator_ena_gpio_list, align 4
  br label %update_ena_gpio_to_rdev

update_ena_gpio_to_rdev:                          ; preds = %if.end.i.i, %if.end18.update_ena_gpio_to_rdev_crit_edge, %rdev_get_name.exit, %do.body
  %new_pin.0 = phi ptr [ %call7.i.i, %rdev_get_name.exit ], [ null, %if.end18.update_ena_gpio_to_rdev_crit_edge ], [ null, %if.end.i.i ], [ %call7.i.i, %do.body ]
  %pin.1 = phi ptr [ %pin.0, %rdev_get_name.exit ], [ %call7.i.i, %if.end18.update_ena_gpio_to_rdev_crit_edge ], [ %call7.i.i, %if.end.i.i ], [ %pin.0, %do.body ]
  %request_count = getelementptr inbounds %struct.regulator_enable_gpio, ptr %pin.1, i32 0, i32 3
  %19 = ptrtoint ptr %request_count to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %request_count, align 4
  %inc = add i32 %20, 1
  store i32 %inc, ptr %request_count, align 4
  %ena_pin = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 21
  %21 = ptrtoint ptr %ena_pin to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %pin.1, ptr %ena_pin, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  tail call void @kfree(ptr noundef %new_pin.0) #25
  br label %cleanup

cleanup:                                          ; preds = %update_ena_gpio_to_rdev, %if.then17
  %retval.0 = phi i32 [ 0, %update_ena_gpio_to_rdev ], [ -12, %if.then17 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_name(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @set_machine_constraints(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 8
  %ops1 = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops1, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %4 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %constraints, align 8
  %call = tail call fastcc i32 @machine_constraints_voltage(ptr noundef %rdev, ptr noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup358_crit_edge

entry.cleanup358_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup358

if.end:                                           ; preds = %entry
  %6 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %constraints, align 8
  %8 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rdev, align 8
  %ops1.i = getelementptr inbounds %struct.regulator_desc, ptr %9, i32 0, i32 10
  %10 = ptrtoint ptr %ops1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops1.i, align 4
  %min_uA.i = getelementptr inbounds %struct.regulation_constraints, ptr %7, i32 0, i32 4
  %12 = ptrtoint ptr %min_uA.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %min_uA.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end.if.end.i_crit_edge

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end
  %max_uA.i = getelementptr inbounds %struct.regulation_constraints, ptr %7, i32 0, i32 5
  %14 = ptrtoint ptr %max_uA.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %max_uA.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool2.not.i = icmp eq i32 %15, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end6_crit_edge, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

land.lhs.true.i.if.end6_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end6

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end.if.end.i_crit_edge
  %max_uA4.i = getelementptr inbounds %struct.regulation_constraints, ptr %7, i32 0, i32 5
  %16 = ptrtoint ptr %max_uA4.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %max_uA4.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %17)
  %cmp.i = icmp sgt i32 %13, %17
  br i1 %cmp.i, label %do.end.i, label %if.end7.i

do.end.i:                                         ; preds = %if.end.i
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %18 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %7, align 4
  %tobool2.not.i.i = icmp eq ptr %19, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %20 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %9, align 4
  %tobool6.not.i.i = icmp eq ptr %21, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %21
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %19, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.239, ptr noundef %retval.0.i.i) #30
  br label %cleanup358

if.end7.i:                                        ; preds = %if.end.i
  %set_current_limit.i = getelementptr inbounds %struct.regulator_ops, ptr %11, i32 0, i32 6
  %22 = ptrtoint ptr %set_current_limit.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %set_current_limit.i, align 4
  %tobool8.not.i = icmp eq ptr %23, null
  br i1 %tobool8.not.i, label %if.end7.i.do.end13.i_crit_edge, label %lor.lhs.false.i

if.end7.i.do.end13.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end13.i

lor.lhs.false.i:                                  ; preds = %if.end7.i
  %get_current_limit.i = getelementptr inbounds %struct.regulator_ops, ptr %11, i32 0, i32 7
  %24 = ptrtoint ptr %get_current_limit.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %get_current_limit.i, align 4
  %tobool9.not.i = icmp eq ptr %25, null
  br i1 %tobool9.not.i, label %lor.lhs.false.i.do.end13.i_crit_edge, label %if.end17.i

lor.lhs.false.i.do.end13.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end13.i

do.end13.i:                                       ; preds = %lor.lhs.false.i.do.end13.i_crit_edge, %if.end7.i.do.end13.i_crit_edge
  %tobool.not.i48.i = icmp eq ptr %7, null
  br i1 %tobool.not.i48.i, label %do.end13.i.if.else.i53.i_crit_edge, label %land.lhs.true.i50.i

do.end13.i.if.else.i53.i_crit_edge:               ; preds = %do.end13.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i53.i

land.lhs.true.i50.i:                              ; preds = %do.end13.i
  %26 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %7, align 4
  %tobool2.not.i49.i = icmp eq ptr %27, null
  br i1 %tobool2.not.i49.i, label %land.lhs.true.i50.i.if.else.i53.i_crit_edge, label %land.lhs.true.i50.i.rdev_get_name.exit55.i_crit_edge

land.lhs.true.i50.i.rdev_get_name.exit55.i_crit_edge: ; preds = %land.lhs.true.i50.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit55.i

land.lhs.true.i50.i.if.else.i53.i_crit_edge:      ; preds = %land.lhs.true.i50.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i53.i

if.else.i53.i:                                    ; preds = %land.lhs.true.i50.i.if.else.i53.i_crit_edge, %do.end13.i.if.else.i53.i_crit_edge
  %28 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %9, align 4
  %tobool6.not.i51.i = icmp eq ptr %29, null
  %.str..i52.i = select i1 %tobool6.not.i51.i, ptr @.str, ptr %29
  br label %rdev_get_name.exit55.i

rdev_get_name.exit55.i:                           ; preds = %if.else.i53.i, %land.lhs.true.i50.i.rdev_get_name.exit55.i_crit_edge
  %retval.0.i54.i = phi ptr [ %27, %land.lhs.true.i50.i.rdev_get_name.exit55.i_crit_edge ], [ %.str..i52.i, %if.else.i53.i ]
  %call16.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242, ptr noundef %retval.0.i54.i) #30
  br label %if.end6

if.end17.i:                                       ; preds = %lor.lhs.false.i
  %call21.i = tail call i32 %23(ptr noundef %rdev, i32 noundef %13, i32 noundef %17) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %cmp22.i = icmp slt i32 %call21.i, 0
  br i1 %cmp22.i, label %do.end26.i, label %if.end17.i.if.end6_crit_edge

if.end17.i.if.end6_crit_edge:                     ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end6

do.end26.i:                                       ; preds = %if.end17.i
  %30 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %constraints, align 8
  %tobool.not.i57.i = icmp eq ptr %31, null
  br i1 %tobool.not.i57.i, label %do.end26.i.if.else.i62.i_crit_edge, label %land.lhs.true.i59.i

do.end26.i.if.else.i62.i_crit_edge:               ; preds = %do.end26.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i62.i

land.lhs.true.i59.i:                              ; preds = %do.end26.i
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %tobool2.not.i58.i = icmp eq ptr %33, null
  br i1 %tobool2.not.i58.i, label %land.lhs.true.i59.i.if.else.i62.i_crit_edge, label %land.lhs.true.i59.i.rdev_get_name.exit64.i_crit_edge

land.lhs.true.i59.i.rdev_get_name.exit64.i_crit_edge: ; preds = %land.lhs.true.i59.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit64.i

land.lhs.true.i59.i.if.else.i62.i_crit_edge:      ; preds = %land.lhs.true.i59.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i62.i

if.else.i62.i:                                    ; preds = %land.lhs.true.i59.i.if.else.i62.i_crit_edge, %do.end26.i.if.else.i62.i_crit_edge
  %34 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rdev, align 8
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %tobool6.not.i60.i = icmp eq ptr %37, null
  %.str..i61.i = select i1 %tobool6.not.i60.i, ptr @.str, ptr %37
  br label %rdev_get_name.exit64.i

rdev_get_name.exit64.i:                           ; preds = %if.else.i62.i, %land.lhs.true.i59.i.rdev_get_name.exit64.i_crit_edge
  %retval.0.i63.i = phi ptr [ %33, %land.lhs.true.i59.i.rdev_get_name.exit64.i_crit_edge ], [ %.str..i61.i, %if.else.i62.i ]
  %call29.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef %retval.0.i63.i, i32 noundef %call21.i) #30
  br label %cleanup358

if.end6:                                          ; preds = %if.end17.i.if.end6_crit_edge, %rdev_get_name.exit55.i, %land.lhs.true.i.if.end6_crit_edge
  %38 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %constraints, align 8
  %ilim_uA = getelementptr inbounds %struct.regulation_constraints, ptr %39, i32 0, i32 6
  %40 = ptrtoint ptr %ilim_uA to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %ilim_uA, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not = icmp eq i32 %41, 0
  br i1 %tobool.not, label %if.end6.if.end20_crit_edge, label %land.lhs.true

if.end6.if.end20_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end20

land.lhs.true:                                    ; preds = %if.end6
  %set_input_current_limit = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 8
  %42 = ptrtoint ptr %set_input_current_limit to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %set_input_current_limit, align 4
  %tobool8.not = icmp eq ptr %43, null
  br i1 %tobool8.not, label %land.lhs.true.if.end20thread-pre-split_crit_edge, label %if.then9

land.lhs.true.if.end20thread-pre-split_crit_edge: ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end20thread-pre-split

if.then9:                                         ; preds = %land.lhs.true
  %call13 = tail call i32 %43(ptr noundef %rdev, i32 noundef %41) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %do.end, label %if.then9.if.end20thread-pre-split_crit_edge

if.then9.if.end20thread-pre-split_crit_edge:      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end20thread-pre-split

do.end:                                           ; preds = %if.then9
  %44 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %constraints, align 8
  %tobool.not.i512 = icmp eq ptr %45, null
  br i1 %tobool.not.i512, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i514

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i514:                               ; preds = %do.end
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %45, align 4
  %tobool2.not.i513 = icmp eq ptr %47, null
  br i1 %tobool2.not.i513, label %land.lhs.true.i514.if.else.i_crit_edge, label %land.lhs.true.i514.rdev_get_name.exit_crit_edge

land.lhs.true.i514.rdev_get_name.exit_crit_edge:  ; preds = %land.lhs.true.i514
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i514.if.else.i_crit_edge:           ; preds = %land.lhs.true.i514
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i514.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %48 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rdev, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 4
  %tobool6.not.i = icmp eq ptr %51, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %51
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i514.rdev_get_name.exit_crit_edge
  %retval.0.i515 = phi ptr [ %47, %land.lhs.true.i514.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %52 = inttoptr i32 %call13 to ptr
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.167, ptr noundef %retval.0.i515, ptr noundef nonnull %52) #30
  br label %cleanup358

if.end20thread-pre-split:                         ; preds = %if.then9.if.end20thread-pre-split_crit_edge, %land.lhs.true.if.end20thread-pre-split_crit_edge
  %ret.0.ph = phi i32 [ 0, %land.lhs.true.if.end20thread-pre-split_crit_edge ], [ %call13, %if.then9.if.end20thread-pre-split_crit_edge ]
  %53 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %53)
  %.pr = load ptr, ptr %constraints, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.end20thread-pre-split, %if.end6.if.end20_crit_edge
  %54 = phi ptr [ %.pr, %if.end20thread-pre-split ], [ %39, %if.end6.if.end20_crit_edge ]
  %ret.0 = phi i32 [ %ret.0.ph, %if.end20thread-pre-split ], [ 0, %if.end6.if.end20_crit_edge ]
  %initial_state = getelementptr inbounds %struct.regulation_constraints, ptr %54, i32 0, i32 20
  %55 = ptrtoint ptr %initial_state to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %initial_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool22.not = icmp eq i32 %56, 0
  br i1 %tobool22.not, label %if.end20.if.end35_crit_edge, label %if.then23

if.end20.if.end35_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

if.then23:                                        ; preds = %if.end20
  %cmp.i.i.i = icmp eq ptr %54, null
  br i1 %cmp.i.i.i, label %if.then23.if.end35_crit_edge, label %if.end.i.i.i

if.then23.if.end35_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

if.end.i.i.i:                                     ; preds = %if.then23
  %57 = zext i32 %56 to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.369)
  switch i32 %56, label %if.end.i.i.i.if.end35_crit_edge [
    i32 2, label %sw.bb.i.i.i
    i32 3, label %sw.bb2.i.i.i
    i32 4, label %sw.bb4.i.i.i
  ]

if.end.i.i.i.if.end35_crit_edge:                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

sw.bb.i.i.i:                                      ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_standby.i.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %54, i32 0, i32 15
  br label %regulator_get_suspend_state.exit.i.i

sw.bb2.i.i.i:                                     ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_mem.i.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %54, i32 0, i32 14
  br label %regulator_get_suspend_state.exit.i.i

sw.bb4.i.i.i:                                     ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_disk.i.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %54, i32 0, i32 13
  br label %regulator_get_suspend_state.exit.i.i

regulator_get_suspend_state.exit.i.i:             ; preds = %sw.bb4.i.i.i, %sw.bb2.i.i.i, %sw.bb.i.i.i
  %retval.0.i.i.i = phi ptr [ %state_disk.i.i.i, %sw.bb4.i.i.i ], [ %state_mem.i.i.i, %sw.bb2.i.i.i ], [ %state_standby.i.i.i, %sw.bb.i.i.i ]
  %cmp.i.i = icmp eq ptr %retval.0.i.i.i, null
  br i1 %cmp.i.i, label %regulator_get_suspend_state.exit.i.i.if.end35_crit_edge, label %if.end.i.i

regulator_get_suspend_state.exit.i.i.if.end35_crit_edge: ; preds = %regulator_get_suspend_state.exit.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

if.end.i.i:                                       ; preds = %regulator_get_suspend_state.exit.i.i
  %enabled.i.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i.i, i32 0, i32 4
  %58 = ptrtoint ptr %enabled.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %enabled.i.i, align 4
  %.off.i.i = add i32 %59, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i.i)
  %switch.i.i = icmp ult i32 %.off.i.i, 2
  br i1 %switch.i.i, label %suspend_set_initial_state.exit, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  %60 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %rdev, align 8
  %ops.i.i = getelementptr inbounds %struct.regulator_desc, ptr %61, i32 0, i32 10
  %62 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %ops.i.i, align 4
  %set_suspend_voltage.i.i = getelementptr inbounds %struct.regulator_ops, ptr %63, i32 0, i32 30
  %64 = ptrtoint ptr %set_suspend_voltage.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %set_suspend_voltage.i.i, align 4
  %tobool.not.i.i517 = icmp eq ptr %65, null
  br i1 %tobool.not.i.i517, label %lor.lhs.false.i.i, label %if.then4.i.i.land.lhs.true.i.i.i_crit_edge

if.then4.i.i.land.lhs.true.i.i.i_crit_edge:       ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true.i.i.i

lor.lhs.false.i.i:                                ; preds = %if.then4.i.i
  %set_suspend_mode.i.i = getelementptr inbounds %struct.regulator_ops, ptr %63, i32 0, i32 33
  %66 = ptrtoint ptr %set_suspend_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %set_suspend_mode.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %67, null
  br i1 %tobool7.not.i.i, label %lor.lhs.false.i.i.if.end35_crit_edge, label %lor.lhs.false.i.i.land.lhs.true.i.i.i_crit_edge

lor.lhs.false.i.i.land.lhs.true.i.i.i_crit_edge:  ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true.i.i.i

lor.lhs.false.i.i.if.end35_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

land.lhs.true.i.i.i:                              ; preds = %lor.lhs.false.i.i.land.lhs.true.i.i.i_crit_edge, %if.then4.i.i.land.lhs.true.i.i.i_crit_edge
  %68 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %54, align 4
  %tobool2.not.i.i.i = icmp eq ptr %69, null
  br i1 %tobool2.not.i.i.i, label %if.else.i.i.i, label %land.lhs.true.i.i.i.rdev_get_name.exit.i.i_crit_edge

land.lhs.true.i.i.i.rdev_get_name.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i.i

if.else.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %70 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %61, align 4
  %tobool6.not.i.i.i = icmp eq ptr %71, null
  %.str..i.i.i = select i1 %tobool6.not.i.i.i, ptr @.str, ptr %71
  br label %rdev_get_name.exit.i.i

rdev_get_name.exit.i.i:                           ; preds = %if.else.i.i.i, %land.lhs.true.i.i.i.rdev_get_name.exit.i.i_crit_edge
  %retval.0.i20.i.i = phi ptr [ %69, %land.lhs.true.i.i.i.rdev_get_name.exit.i.i_crit_edge ], [ %.str..i.i.i, %if.else.i.i.i ]
  %call10.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.247, ptr noundef %retval.0.i20.i.i) #30
  br label %if.end35

suspend_set_initial_state.exit:                   ; preds = %if.end.i.i
  %call1.i = tail call fastcc i32 @__suspend_set_state(ptr noundef %rdev, ptr noundef nonnull %retval.0.i.i.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp25 = icmp slt i32 %call1.i, 0
  br i1 %cmp25, label %do.end29, label %suspend_set_initial_state.exit.if.end35_crit_edge

suspend_set_initial_state.exit.if.end35_crit_edge: ; preds = %suspend_set_initial_state.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end35

do.end29:                                         ; preds = %suspend_set_initial_state.exit
  %72 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %constraints, align 8
  %tobool.not.i521 = icmp eq ptr %73, null
  br i1 %tobool.not.i521, label %do.end29.if.else.i526_crit_edge, label %land.lhs.true.i523

do.end29.if.else.i526_crit_edge:                  ; preds = %do.end29
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i526

land.lhs.true.i523:                               ; preds = %do.end29
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %73, align 4
  %tobool2.not.i522 = icmp eq ptr %75, null
  br i1 %tobool2.not.i522, label %land.lhs.true.i523.if.else.i526_crit_edge, label %land.lhs.true.i523.rdev_get_name.exit528_crit_edge

land.lhs.true.i523.rdev_get_name.exit528_crit_edge: ; preds = %land.lhs.true.i523
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit528

land.lhs.true.i523.if.else.i526_crit_edge:        ; preds = %land.lhs.true.i523
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i526

if.else.i526:                                     ; preds = %land.lhs.true.i523.if.else.i526_crit_edge, %do.end29.if.else.i526_crit_edge
  %76 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %rdev, align 8
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %77, align 4
  %tobool6.not.i524 = icmp eq ptr %79, null
  %.str..i525 = select i1 %tobool6.not.i524, ptr @.str, ptr %79
  br label %rdev_get_name.exit528

rdev_get_name.exit528:                            ; preds = %if.else.i526, %land.lhs.true.i523.rdev_get_name.exit528_crit_edge
  %retval.0.i527 = phi ptr [ %75, %land.lhs.true.i523.rdev_get_name.exit528_crit_edge ], [ %.str..i525, %if.else.i526 ]
  %80 = inttoptr i32 %call1.i to ptr
  %call33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.170, ptr noundef %retval.0.i527, ptr noundef nonnull %80) #30
  br label %cleanup358

if.end35:                                         ; preds = %suspend_set_initial_state.exit.if.end35_crit_edge, %rdev_get_name.exit.i.i, %lor.lhs.false.i.i.if.end35_crit_edge, %regulator_get_suspend_state.exit.i.i.if.end35_crit_edge, %if.end.i.i.i.if.end35_crit_edge, %if.then23.if.end35_crit_edge, %if.end20.if.end35_crit_edge
  %ret.1 = phi i32 [ %call1.i, %suspend_set_initial_state.exit.if.end35_crit_edge ], [ %ret.0, %if.end20.if.end35_crit_edge ], [ 0, %regulator_get_suspend_state.exit.i.i.if.end35_crit_edge ], [ 0, %rdev_get_name.exit.i.i ], [ 0, %lor.lhs.false.i.i.if.end35_crit_edge ], [ 0, %if.then23.if.end35_crit_edge ], [ 0, %if.end.i.i.i.if.end35_crit_edge ]
  %81 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %constraints, align 8
  %initial_mode = getelementptr inbounds %struct.regulation_constraints, ptr %82, i32 0, i32 21
  %83 = ptrtoint ptr %initial_mode to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %initial_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %tobool37.not = icmp eq i32 %84, 0
  br i1 %tobool37.not, label %if.else, label %if.then38

if.then38:                                        ; preds = %if.end35
  %set_mode = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 17
  %85 = ptrtoint ptr %set_mode to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %set_mode, align 4
  %tobool39.not = icmp eq ptr %86, null
  br i1 %tobool39.not, label %do.end43, label %if.end47

do.end43:                                         ; preds = %if.then38
  %tobool.not.i530 = icmp eq ptr %82, null
  br i1 %tobool.not.i530, label %do.end43.if.else.i535_crit_edge, label %land.lhs.true.i532

do.end43.if.else.i535_crit_edge:                  ; preds = %do.end43
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i535

land.lhs.true.i532:                               ; preds = %do.end43
  %87 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %82, align 4
  %tobool2.not.i531 = icmp eq ptr %88, null
  br i1 %tobool2.not.i531, label %land.lhs.true.i532.if.else.i535_crit_edge, label %land.lhs.true.i532.rdev_get_name.exit537_crit_edge

land.lhs.true.i532.rdev_get_name.exit537_crit_edge: ; preds = %land.lhs.true.i532
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit537

land.lhs.true.i532.if.else.i535_crit_edge:        ; preds = %land.lhs.true.i532
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i535

if.else.i535:                                     ; preds = %land.lhs.true.i532.if.else.i535_crit_edge, %do.end43.if.else.i535_crit_edge
  %89 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %rdev, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %90, align 4
  %tobool6.not.i533 = icmp eq ptr %92, null
  %.str..i534 = select i1 %tobool6.not.i533, ptr @.str, ptr %92
  br label %rdev_get_name.exit537

rdev_get_name.exit537:                            ; preds = %if.else.i535, %land.lhs.true.i532.rdev_get_name.exit537_crit_edge
  %retval.0.i536 = phi ptr [ %88, %land.lhs.true.i532.rdev_get_name.exit537_crit_edge ], [ %.str..i534, %if.else.i535 ]
  %call46 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.173, ptr noundef %retval.0.i536) #30
  br label %cleanup358

if.end47:                                         ; preds = %if.then38
  %call51 = tail call i32 %86(ptr noundef %rdev, i32 noundef %84) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %cmp52 = icmp slt i32 %call51, 0
  br i1 %cmp52, label %do.end56, label %if.end47.if.end67_crit_edge

if.end47.if.end67_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end67

do.end56:                                         ; preds = %if.end47
  %93 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %constraints, align 8
  %tobool.not.i539 = icmp eq ptr %94, null
  br i1 %tobool.not.i539, label %do.end56.if.else.i544_crit_edge, label %land.lhs.true.i541

do.end56.if.else.i544_crit_edge:                  ; preds = %do.end56
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i544

land.lhs.true.i541:                               ; preds = %do.end56
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %94, align 4
  %tobool2.not.i540 = icmp eq ptr %96, null
  br i1 %tobool2.not.i540, label %land.lhs.true.i541.if.else.i544_crit_edge, label %land.lhs.true.i541.rdev_get_name.exit546_crit_edge

land.lhs.true.i541.rdev_get_name.exit546_crit_edge: ; preds = %land.lhs.true.i541
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit546

land.lhs.true.i541.if.else.i544_crit_edge:        ; preds = %land.lhs.true.i541
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i544

if.else.i544:                                     ; preds = %land.lhs.true.i541.if.else.i544_crit_edge, %do.end56.if.else.i544_crit_edge
  %97 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %rdev, align 8
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %98, align 4
  %tobool6.not.i542 = icmp eq ptr %100, null
  %.str..i543 = select i1 %tobool6.not.i542, ptr @.str, ptr %100
  br label %rdev_get_name.exit546

rdev_get_name.exit546:                            ; preds = %if.else.i544, %land.lhs.true.i541.rdev_get_name.exit546_crit_edge
  %retval.0.i545 = phi ptr [ %96, %land.lhs.true.i541.rdev_get_name.exit546_crit_edge ], [ %.str..i543, %if.else.i544 ]
  %101 = inttoptr i32 %call51 to ptr
  %call60 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.176, ptr noundef %retval.0.i545, ptr noundef nonnull %101) #30
  br label %cleanup358

if.else:                                          ; preds = %if.end35
  %system_load = getelementptr inbounds %struct.regulation_constraints, ptr %82, i32 0, i32 7
  %102 = ptrtoint ptr %system_load to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %system_load, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %103)
  %tobool63.not = icmp eq i32 %103, 0
  br i1 %tobool63.not, label %if.else.if.end67_crit_edge, label %if.then64

if.else.if.end67_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end67

if.then64:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  %call65 = tail call fastcc i32 @drms_uA_update(ptr noundef %rdev)
  br label %if.end67

if.end67:                                         ; preds = %if.then64, %if.else.if.end67_crit_edge, %if.end47.if.end67_crit_edge
  %ret.2 = phi i32 [ %call51, %if.end47.if.end67_crit_edge ], [ %ret.1, %if.then64 ], [ %ret.1, %if.else.if.end67_crit_edge ]
  %104 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %constraints, align 8
  %ramp_delay = getelementptr inbounds %struct.regulation_constraints, ptr %105, i32 0, i32 22
  %106 = ptrtoint ptr %ramp_delay to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %ramp_delay, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %107)
  %tobool69.not = icmp eq i32 %107, 0
  br i1 %tobool69.not, label %lor.lhs.false, label %if.end67.land.lhs.true72_crit_edge

if.end67.land.lhs.true72_crit_edge:               ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true72

lor.lhs.false:                                    ; preds = %if.end67
  %ramp_disable = getelementptr inbounds %struct.regulation_constraints, ptr %105, i32 0, i32 28
  %108 = ptrtoint ptr %ramp_disable to i32
  call void @__asan_load2_noabort(i32 %108)
  %bf.load = load i16, ptr %ramp_disable, align 4
  %109 = and i16 %bf.load, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %109)
  %tobool71.not = icmp eq i16 %109, 0
  br i1 %tobool71.not, label %lor.lhs.false.if.end89_crit_edge, label %lor.lhs.false.land.lhs.true72_crit_edge

lor.lhs.false.land.lhs.true72_crit_edge:          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true72

lor.lhs.false.if.end89_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end89

land.lhs.true72:                                  ; preds = %lor.lhs.false.land.lhs.true72_crit_edge, %if.end67.land.lhs.true72_crit_edge
  %set_ramp_delay = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 21
  %110 = ptrtoint ptr %set_ramp_delay to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %set_ramp_delay, align 4
  %tobool73.not = icmp eq ptr %111, null
  br i1 %tobool73.not, label %land.lhs.true72.if.end89_crit_edge, label %if.then74

land.lhs.true72.if.end89_crit_edge:               ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end89

if.then74:                                        ; preds = %land.lhs.true72
  %call78 = tail call i32 %111(ptr noundef %rdev, i32 noundef %107) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %cmp79 = icmp slt i32 %call78, 0
  br i1 %cmp79, label %do.end83, label %if.then74.if.end89_crit_edge

if.then74.if.end89_crit_edge:                     ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end89

do.end83:                                         ; preds = %if.then74
  %112 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %constraints, align 8
  %tobool.not.i548 = icmp eq ptr %113, null
  br i1 %tobool.not.i548, label %do.end83.if.else.i553_crit_edge, label %land.lhs.true.i550

do.end83.if.else.i553_crit_edge:                  ; preds = %do.end83
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i553

land.lhs.true.i550:                               ; preds = %do.end83
  %114 = ptrtoint ptr %113 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %113, align 4
  %tobool2.not.i549 = icmp eq ptr %115, null
  br i1 %tobool2.not.i549, label %land.lhs.true.i550.if.else.i553_crit_edge, label %land.lhs.true.i550.rdev_get_name.exit555_crit_edge

land.lhs.true.i550.rdev_get_name.exit555_crit_edge: ; preds = %land.lhs.true.i550
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit555

land.lhs.true.i550.if.else.i553_crit_edge:        ; preds = %land.lhs.true.i550
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i553

if.else.i553:                                     ; preds = %land.lhs.true.i550.if.else.i553_crit_edge, %do.end83.if.else.i553_crit_edge
  %116 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %rdev, align 8
  %118 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %117, align 4
  %tobool6.not.i551 = icmp eq ptr %119, null
  %.str..i552 = select i1 %tobool6.not.i551, ptr @.str, ptr %119
  br label %rdev_get_name.exit555

rdev_get_name.exit555:                            ; preds = %if.else.i553, %land.lhs.true.i550.rdev_get_name.exit555_crit_edge
  %retval.0.i554 = phi ptr [ %115, %land.lhs.true.i550.rdev_get_name.exit555_crit_edge ], [ %.str..i552, %if.else.i553 ]
  %120 = inttoptr i32 %call78 to ptr
  %call87 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.179, ptr noundef %retval.0.i554, ptr noundef nonnull %120) #30
  br label %cleanup358

if.end89:                                         ; preds = %if.then74.if.end89_crit_edge, %land.lhs.true72.if.end89_crit_edge, %lor.lhs.false.if.end89_crit_edge
  %ret.3 = phi i32 [ %call78, %if.then74.if.end89_crit_edge ], [ %ret.2, %land.lhs.true72.if.end89_crit_edge ], [ %ret.2, %lor.lhs.false.if.end89_crit_edge ]
  %121 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %constraints, align 8
  %pull_down = getelementptr inbounds %struct.regulation_constraints, ptr %122, i32 0, i32 28
  %123 = ptrtoint ptr %pull_down to i32
  call void @__asan_load2_noabort(i32 %123)
  %bf.load91 = load i16, ptr %pull_down, align 4
  %124 = and i16 %bf.load91, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %124)
  %tobool95.not = icmp eq i16 %124, 0
  br i1 %tobool95.not, label %if.end89.if.end111_crit_edge, label %land.lhs.true96

if.end89.if.end111_crit_edge:                     ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end111

land.lhs.true96:                                  ; preds = %if.end89
  %set_pull_down = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 35
  %125 = ptrtoint ptr %set_pull_down to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %set_pull_down, align 4
  %tobool97.not = icmp eq ptr %126, null
  br i1 %tobool97.not, label %land.lhs.true96.if.end111_crit_edge, label %if.then98

land.lhs.true96.if.end111_crit_edge:              ; preds = %land.lhs.true96
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end111

if.then98:                                        ; preds = %land.lhs.true96
  %call100 = tail call i32 %126(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call100)
  %cmp101 = icmp slt i32 %call100, 0
  br i1 %cmp101, label %do.end105, label %if.then98.if.end111_crit_edge

if.then98.if.end111_crit_edge:                    ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end111

do.end105:                                        ; preds = %if.then98
  %127 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %constraints, align 8
  %tobool.not.i557 = icmp eq ptr %128, null
  br i1 %tobool.not.i557, label %do.end105.if.else.i562_crit_edge, label %land.lhs.true.i559

do.end105.if.else.i562_crit_edge:                 ; preds = %do.end105
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i562

land.lhs.true.i559:                               ; preds = %do.end105
  %129 = ptrtoint ptr %128 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %128, align 4
  %tobool2.not.i558 = icmp eq ptr %130, null
  br i1 %tobool2.not.i558, label %land.lhs.true.i559.if.else.i562_crit_edge, label %land.lhs.true.i559.rdev_get_name.exit564_crit_edge

land.lhs.true.i559.rdev_get_name.exit564_crit_edge: ; preds = %land.lhs.true.i559
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit564

land.lhs.true.i559.if.else.i562_crit_edge:        ; preds = %land.lhs.true.i559
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i562

if.else.i562:                                     ; preds = %land.lhs.true.i559.if.else.i562_crit_edge, %do.end105.if.else.i562_crit_edge
  %131 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %rdev, align 8
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %132, align 4
  %tobool6.not.i560 = icmp eq ptr %134, null
  %.str..i561 = select i1 %tobool6.not.i560, ptr @.str, ptr %134
  br label %rdev_get_name.exit564

rdev_get_name.exit564:                            ; preds = %if.else.i562, %land.lhs.true.i559.rdev_get_name.exit564_crit_edge
  %retval.0.i563 = phi ptr [ %130, %land.lhs.true.i559.rdev_get_name.exit564_crit_edge ], [ %.str..i561, %if.else.i562 ]
  %135 = inttoptr i32 %call100 to ptr
  %call109 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.182, ptr noundef %retval.0.i563, ptr noundef nonnull %135) #30
  br label %cleanup358

if.end111:                                        ; preds = %if.then98.if.end111_crit_edge, %land.lhs.true96.if.end111_crit_edge, %if.end89.if.end111_crit_edge
  %ret.4 = phi i32 [ %call100, %if.then98.if.end111_crit_edge ], [ %ret.3, %land.lhs.true96.if.end111_crit_edge ], [ %ret.3, %if.end89.if.end111_crit_edge ]
  %136 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %constraints, align 8
  %soft_start = getelementptr inbounds %struct.regulation_constraints, ptr %137, i32 0, i32 28
  %138 = ptrtoint ptr %soft_start to i32
  call void @__asan_load2_noabort(i32 %138)
  %bf.load113 = load i16, ptr %soft_start, align 4
  %139 = and i16 %bf.load113, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %139)
  %tobool117.not = icmp eq i16 %139, 0
  br i1 %tobool117.not, label %if.end111.if.end133_crit_edge, label %land.lhs.true118

if.end111.if.end133_crit_edge:                    ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end133

land.lhs.true118:                                 ; preds = %if.end111
  %set_soft_start = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 24
  %140 = ptrtoint ptr %set_soft_start to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %set_soft_start, align 4
  %tobool119.not = icmp eq ptr %141, null
  br i1 %tobool119.not, label %land.lhs.true118.if.end133_crit_edge, label %if.then120

land.lhs.true118.if.end133_crit_edge:             ; preds = %land.lhs.true118
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end133

if.then120:                                       ; preds = %land.lhs.true118
  %call122 = tail call i32 %141(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call122)
  %cmp123 = icmp slt i32 %call122, 0
  br i1 %cmp123, label %do.end127, label %if.then120.if.end133_crit_edge

if.then120.if.end133_crit_edge:                   ; preds = %if.then120
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end133

do.end127:                                        ; preds = %if.then120
  %142 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %constraints, align 8
  %tobool.not.i566 = icmp eq ptr %143, null
  br i1 %tobool.not.i566, label %do.end127.if.else.i571_crit_edge, label %land.lhs.true.i568

do.end127.if.else.i571_crit_edge:                 ; preds = %do.end127
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i571

land.lhs.true.i568:                               ; preds = %do.end127
  %144 = ptrtoint ptr %143 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %143, align 4
  %tobool2.not.i567 = icmp eq ptr %145, null
  br i1 %tobool2.not.i567, label %land.lhs.true.i568.if.else.i571_crit_edge, label %land.lhs.true.i568.rdev_get_name.exit573_crit_edge

land.lhs.true.i568.rdev_get_name.exit573_crit_edge: ; preds = %land.lhs.true.i568
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit573

land.lhs.true.i568.if.else.i571_crit_edge:        ; preds = %land.lhs.true.i568
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i571

if.else.i571:                                     ; preds = %land.lhs.true.i568.if.else.i571_crit_edge, %do.end127.if.else.i571_crit_edge
  %146 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %rdev, align 8
  %148 = ptrtoint ptr %147 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %147, align 4
  %tobool6.not.i569 = icmp eq ptr %149, null
  %.str..i570 = select i1 %tobool6.not.i569, ptr @.str, ptr %149
  br label %rdev_get_name.exit573

rdev_get_name.exit573:                            ; preds = %if.else.i571, %land.lhs.true.i568.rdev_get_name.exit573_crit_edge
  %retval.0.i572 = phi ptr [ %145, %land.lhs.true.i568.rdev_get_name.exit573_crit_edge ], [ %.str..i570, %if.else.i571 ]
  %150 = inttoptr i32 %call122 to ptr
  %call131 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.185, ptr noundef %retval.0.i572, ptr noundef nonnull %150) #30
  br label %cleanup358

if.end133:                                        ; preds = %if.then120.if.end133_crit_edge, %land.lhs.true118.if.end133_crit_edge, %if.end111.if.end133_crit_edge
  %ret.5 = phi i32 [ %call122, %if.then120.if.end133_crit_edge ], [ %ret.4, %land.lhs.true118.if.end133_crit_edge ], [ %ret.4, %if.end111.if.end133_crit_edge ]
  %151 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %constraints, align 8
  %over_current_protection = getelementptr inbounds %struct.regulation_constraints, ptr %152, i32 0, i32 28
  %153 = ptrtoint ptr %over_current_protection to i32
  call void @__asan_load2_noabort(i32 %153)
  %bf.load135 = load i16, ptr %over_current_protection, align 4
  %154 = and i16 %bf.load135, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %154)
  %tobool139.not = icmp eq i16 %154, 0
  br i1 %tobool139.not, label %if.end133.if.end156_crit_edge, label %land.lhs.true140

if.end133.if.end156_crit_edge:                    ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end156

land.lhs.true140:                                 ; preds = %if.end133
  %set_over_current_protection = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 9
  %155 = ptrtoint ptr %set_over_current_protection to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %set_over_current_protection, align 4
  %tobool141.not = icmp eq ptr %156, null
  br i1 %tobool141.not, label %land.lhs.true140.if.end156_crit_edge, label %if.then142

land.lhs.true140.if.end156_crit_edge:             ; preds = %land.lhs.true140
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end156

if.then142:                                       ; preds = %land.lhs.true140
  %over_curr_limits = getelementptr inbounds %struct.regulation_constraints, ptr %152, i32 0, i32 16
  %157 = ptrtoint ptr %over_curr_limits to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %over_curr_limits, align 4
  %call145 = tail call i32 %156(ptr noundef %rdev, i32 noundef %158, i32 noundef 0, i1 noundef zeroext true) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call145)
  %cmp146 = icmp slt i32 %call145, 0
  br i1 %cmp146, label %do.end150, label %if.then142.if.end156_crit_edge

if.then142.if.end156_crit_edge:                   ; preds = %if.then142
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end156

do.end150:                                        ; preds = %if.then142
  %159 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %constraints, align 8
  %tobool.not.i575 = icmp eq ptr %160, null
  br i1 %tobool.not.i575, label %do.end150.if.else.i580_crit_edge, label %land.lhs.true.i577

do.end150.if.else.i580_crit_edge:                 ; preds = %do.end150
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i580

land.lhs.true.i577:                               ; preds = %do.end150
  %161 = ptrtoint ptr %160 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %160, align 4
  %tobool2.not.i576 = icmp eq ptr %162, null
  br i1 %tobool2.not.i576, label %land.lhs.true.i577.if.else.i580_crit_edge, label %land.lhs.true.i577.rdev_get_name.exit582_crit_edge

land.lhs.true.i577.rdev_get_name.exit582_crit_edge: ; preds = %land.lhs.true.i577
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit582

land.lhs.true.i577.if.else.i580_crit_edge:        ; preds = %land.lhs.true.i577
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i580

if.else.i580:                                     ; preds = %land.lhs.true.i577.if.else.i580_crit_edge, %do.end150.if.else.i580_crit_edge
  %163 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %rdev, align 8
  %165 = ptrtoint ptr %164 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %164, align 4
  %tobool6.not.i578 = icmp eq ptr %166, null
  %.str..i579 = select i1 %tobool6.not.i578, ptr @.str, ptr %166
  br label %rdev_get_name.exit582

rdev_get_name.exit582:                            ; preds = %if.else.i580, %land.lhs.true.i577.rdev_get_name.exit582_crit_edge
  %retval.0.i581 = phi ptr [ %162, %land.lhs.true.i577.rdev_get_name.exit582_crit_edge ], [ %.str..i579, %if.else.i580 ]
  %167 = inttoptr i32 %call145 to ptr
  %call154 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.188, ptr noundef %retval.0.i581, ptr noundef nonnull %167) #30
  br label %cleanup358

if.end156:                                        ; preds = %if.then142.if.end156_crit_edge, %land.lhs.true140.if.end156_crit_edge, %if.end133.if.end156_crit_edge
  %ret.6 = phi i32 [ %ret.5, %land.lhs.true140.if.end156_crit_edge ], [ %ret.5, %if.end133.if.end156_crit_edge ], [ %call145, %if.then142.if.end156_crit_edge ]
  %168 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %constraints, align 8
  %over_current_detection = getelementptr inbounds %struct.regulation_constraints, ptr %169, i32 0, i32 28
  %170 = ptrtoint ptr %over_current_detection to i32
  call void @__asan_load2_noabort(i32 %170)
  %bf.load158 = load i16, ptr %over_current_detection, align 4
  %171 = and i16 %bf.load158, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %171)
  %tobool162.not = icmp eq i16 %171, 0
  br i1 %tobool162.not, label %if.end156.if.end168_crit_edge, label %if.then163

if.end156.if.end168_crit_edge:                    ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end168

if.then163:                                       ; preds = %if.end156
  %set_over_current_protection164 = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 9
  %172 = ptrtoint ptr %set_over_current_protection164 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %set_over_current_protection164, align 4
  %tobool.not.i583 = icmp eq ptr %173, null
  br i1 %tobool.not.i583, label %if.then163.do.end183_crit_edge, label %if.end.i584

if.then163.do.end183_crit_edge:                   ; preds = %if.then163
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end183

if.end.i584:                                      ; preds = %if.then163
  %over_curr_limits166 = getelementptr inbounds %struct.regulation_constraints, ptr %169, i32 0, i32 16
  %174 = ptrtoint ptr %over_curr_limits166 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %over_curr_limits166, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %175)
  %tobool1.not.i = icmp eq i32 %175, 0
  br i1 %tobool1.not.i, label %if.end.i584.if.end7.i587_crit_edge, label %if.end4.i

if.end.i584.if.end7.i587_crit_edge:               ; preds = %if.end.i584
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i587

if.end4.i:                                        ; preds = %if.end.i584
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %175)
  %cmp.i.i585 = icmp eq i32 %175, -1
  %.limit.i.i = select i1 %cmp.i.i585, i32 0, i32 %175
  %176 = xor i1 %cmp.i.i585, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i.i)
  %cmp1.i.i = icmp eq i32 %.limit.i.i, -2
  %spec.store.select.i.i = select i1 %cmp1.i.i, i32 0, i32 %.limit.i.i
  %call.i.i = tail call i32 %173(ptr noundef %rdev, i32 noundef %spec.store.select.i.i, i32 noundef 0, i1 noundef zeroext %176) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i, label %if.end4.i.if.end7.i587_crit_edge, label %if.end4.i.if.end168_crit_edge

if.end4.i.if.end168_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end168

if.end4.i.if.end7.i587_crit_edge:                 ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i587

if.end7.i587:                                     ; preds = %if.end4.i.if.end7.i587_crit_edge, %if.end.i584.if.end7.i587_crit_edge
  %err.i = getelementptr inbounds %struct.regulation_constraints, ptr %169, i32 0, i32 16, i32 1
  %177 = ptrtoint ptr %err.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %err.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %178)
  %tobool8.not.i586 = icmp eq i32 %178, 0
  br i1 %tobool8.not.i586, label %if.end7.i587.if.end15.i_crit_edge, label %if.end12.i

if.end7.i587.if.end15.i_crit_edge:                ; preds = %if.end7.i587
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15.i

if.end12.i:                                       ; preds = %if.end7.i587
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %178)
  %cmp.i37.i = icmp eq i32 %178, -1
  %.limit.i38.i = select i1 %cmp.i37.i, i32 0, i32 %178
  %179 = xor i1 %cmp.i37.i, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i38.i)
  %cmp1.i39.i = icmp eq i32 %.limit.i38.i, -2
  %spec.store.select.i40.i = select i1 %cmp1.i39.i, i32 0, i32 %.limit.i38.i
  %call.i41.i = tail call i32 %173(ptr noundef %rdev, i32 noundef %spec.store.select.i40.i, i32 noundef 1, i1 noundef zeroext %179) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i41.i)
  %tobool13.not.i = icmp eq i32 %call.i41.i, 0
  br i1 %tobool13.not.i, label %if.end12.i.if.end15.i_crit_edge, label %if.end12.i.if.end168_crit_edge

if.end12.i.if.end168_crit_edge:                   ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end168

if.end12.i.if.end15.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.end12.i.if.end15.i_crit_edge, %if.end7.i587.if.end15.i_crit_edge
  %warn.i = getelementptr inbounds %struct.regulation_constraints, ptr %169, i32 0, i32 16, i32 2
  %180 = ptrtoint ptr %warn.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %warn.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %181)
  %tobool16.not.i = icmp eq i32 %181, 0
  br i1 %tobool16.not.i, label %if.end15.i.if.end187_crit_edge, label %if.then17.i

if.end15.i.if.end187_crit_edge:                   ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end187

if.then17.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %181)
  %cmp.i42.i = icmp eq i32 %181, -1
  %.limit.i43.i = select i1 %cmp.i42.i, i32 0, i32 %181
  %182 = xor i1 %cmp.i42.i, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i43.i)
  %cmp1.i44.i = icmp eq i32 %.limit.i43.i, -2
  %spec.store.select.i45.i = select i1 %cmp1.i44.i, i32 0, i32 %.limit.i43.i
  %call.i46.i = tail call i32 %173(ptr noundef %rdev, i32 noundef %spec.store.select.i45.i, i32 noundef 2, i1 noundef zeroext %182) #25
  br label %if.end168

if.end168:                                        ; preds = %if.then17.i, %if.end12.i.if.end168_crit_edge, %if.end4.i.if.end168_crit_edge, %if.end156.if.end168_crit_edge
  %ret.7 = phi i32 [ %ret.6, %if.end156.if.end168_crit_edge ], [ %call.i.i, %if.end4.i.if.end168_crit_edge ], [ %call.i41.i, %if.end12.i.if.end168_crit_edge ], [ %call.i46.i, %if.then17.i ]
  %183 = zext i32 %ret.7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %183, ptr @__sancov_gen_cov_switch_values.370)
  switch i32 %ret.7, label %do.end175 [
    i32 0, label %if.end168.if.end187_crit_edge
    i32 -95, label %if.end168.do.end183_crit_edge
  ]

if.end168.do.end183_crit_edge:                    ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end183

if.end168.if.end187_crit_edge:                    ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end187

do.end175:                                        ; preds = %if.end168
  %184 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %constraints, align 8
  %tobool.not.i590 = icmp eq ptr %185, null
  br i1 %tobool.not.i590, label %do.end175.if.else.i595_crit_edge, label %land.lhs.true.i592

do.end175.if.else.i595_crit_edge:                 ; preds = %do.end175
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i595

land.lhs.true.i592:                               ; preds = %do.end175
  %186 = ptrtoint ptr %185 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %185, align 4
  %tobool2.not.i591 = icmp eq ptr %187, null
  br i1 %tobool2.not.i591, label %land.lhs.true.i592.if.else.i595_crit_edge, label %land.lhs.true.i592.rdev_get_name.exit597_crit_edge

land.lhs.true.i592.rdev_get_name.exit597_crit_edge: ; preds = %land.lhs.true.i592
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit597

land.lhs.true.i592.if.else.i595_crit_edge:        ; preds = %land.lhs.true.i592
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i595

if.else.i595:                                     ; preds = %land.lhs.true.i592.if.else.i595_crit_edge, %do.end175.if.else.i595_crit_edge
  %188 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %rdev, align 8
  %190 = ptrtoint ptr %189 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %189, align 4
  %tobool6.not.i593 = icmp eq ptr %191, null
  %.str..i594 = select i1 %tobool6.not.i593, ptr @.str, ptr %191
  br label %rdev_get_name.exit597

rdev_get_name.exit597:                            ; preds = %if.else.i595, %land.lhs.true.i592.rdev_get_name.exit597_crit_edge
  %retval.0.i596 = phi ptr [ %187, %land.lhs.true.i592.rdev_get_name.exit597_crit_edge ], [ %.str..i594, %if.else.i595 ]
  %192 = inttoptr i32 %ret.7 to ptr
  %call179 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.191, ptr noundef %retval.0.i596, ptr noundef %192) #30
  br label %cleanup358

do.end183:                                        ; preds = %if.end168.do.end183_crit_edge, %if.then163.do.end183_crit_edge
  %193 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %constraints, align 8
  %tobool.not.i599 = icmp eq ptr %194, null
  br i1 %tobool.not.i599, label %do.end183.if.else.i604_crit_edge, label %land.lhs.true.i601

do.end183.if.else.i604_crit_edge:                 ; preds = %do.end183
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i604

land.lhs.true.i601:                               ; preds = %do.end183
  %195 = ptrtoint ptr %194 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %194, align 4
  %tobool2.not.i600 = icmp eq ptr %196, null
  br i1 %tobool2.not.i600, label %land.lhs.true.i601.if.else.i604_crit_edge, label %land.lhs.true.i601.rdev_get_name.exit606_crit_edge

land.lhs.true.i601.rdev_get_name.exit606_crit_edge: ; preds = %land.lhs.true.i601
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit606

land.lhs.true.i601.if.else.i604_crit_edge:        ; preds = %land.lhs.true.i601
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i604

if.else.i604:                                     ; preds = %land.lhs.true.i601.if.else.i604_crit_edge, %do.end183.if.else.i604_crit_edge
  %197 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %rdev, align 8
  %199 = ptrtoint ptr %198 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %198, align 4
  %tobool6.not.i602 = icmp eq ptr %200, null
  %.str..i603 = select i1 %tobool6.not.i602, ptr @.str, ptr %200
  br label %rdev_get_name.exit606

rdev_get_name.exit606:                            ; preds = %if.else.i604, %land.lhs.true.i601.rdev_get_name.exit606_crit_edge
  %retval.0.i605 = phi ptr [ %196, %land.lhs.true.i601.rdev_get_name.exit606_crit_edge ], [ %.str..i603, %if.else.i604 ]
  %call186 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.194, ptr noundef %retval.0.i605) #30
  br label %if.end187

if.end187:                                        ; preds = %rdev_get_name.exit606, %if.end168.if.end187_crit_edge, %if.end15.i.if.end187_crit_edge
  %ret.7789 = phi i32 [ %ret.7, %if.end168.if.end187_crit_edge ], [ -95, %rdev_get_name.exit606 ], [ 0, %if.end15.i.if.end187_crit_edge ]
  %201 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %constraints, align 8
  %over_voltage_detection = getelementptr inbounds %struct.regulation_constraints, ptr %202, i32 0, i32 28
  %203 = ptrtoint ptr %over_voltage_detection to i32
  call void @__asan_load2_noabort(i32 %203)
  %bf.load189 = load i16, ptr %over_voltage_detection, align 4
  %204 = and i16 %bf.load189, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %204)
  %tobool193.not = icmp eq i16 %204, 0
  br i1 %tobool193.not, label %if.end187.if.end197_crit_edge, label %if.then194

if.end187.if.end197_crit_edge:                    ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end197

if.then194:                                       ; preds = %if.end187
  %set_over_voltage_protection = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 10
  %205 = ptrtoint ptr %set_over_voltage_protection to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %set_over_voltage_protection, align 4
  %tobool.not.i607 = icmp eq ptr %206, null
  br i1 %tobool.not.i607, label %if.then194.do.end212_crit_edge, label %if.end.i609

if.then194.do.end212_crit_edge:                   ; preds = %if.then194
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end212

if.end.i609:                                      ; preds = %if.then194
  %over_voltage_limits = getelementptr inbounds %struct.regulation_constraints, ptr %202, i32 0, i32 17
  %207 = ptrtoint ptr %over_voltage_limits to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %over_voltage_limits, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %208)
  %tobool1.not.i608 = icmp eq i32 %208, 0
  br i1 %tobool1.not.i608, label %if.end.i609.if.end7.i619_crit_edge, label %if.end4.i616

if.end.i609.if.end7.i619_crit_edge:               ; preds = %if.end.i609
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i619

if.end4.i616:                                     ; preds = %if.end.i609
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %208)
  %cmp.i.i610 = icmp eq i32 %208, -1
  %.limit.i.i611 = select i1 %cmp.i.i610, i32 0, i32 %208
  %209 = xor i1 %cmp.i.i610, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i.i611)
  %cmp1.i.i612 = icmp eq i32 %.limit.i.i611, -2
  %spec.store.select.i.i613 = select i1 %cmp1.i.i612, i32 0, i32 %.limit.i.i611
  %call.i.i614 = tail call i32 %206(ptr noundef %rdev, i32 noundef %spec.store.select.i.i613, i32 noundef 0, i1 noundef zeroext %209) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i614)
  %tobool5.not.i615 = icmp eq i32 %call.i.i614, 0
  br i1 %tobool5.not.i615, label %if.end4.i616.if.end7.i619_crit_edge, label %if.end4.i616.if.end197_crit_edge

if.end4.i616.if.end197_crit_edge:                 ; preds = %if.end4.i616
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end197

if.end4.i616.if.end7.i619_crit_edge:              ; preds = %if.end4.i616
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i619

if.end7.i619:                                     ; preds = %if.end4.i616.if.end7.i619_crit_edge, %if.end.i609.if.end7.i619_crit_edge
  %err.i617 = getelementptr inbounds %struct.regulation_constraints, ptr %202, i32 0, i32 17, i32 1
  %210 = ptrtoint ptr %err.i617 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %err.i617, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %211)
  %tobool8.not.i618 = icmp eq i32 %211, 0
  br i1 %tobool8.not.i618, label %if.end7.i619.if.end15.i629_crit_edge, label %if.end12.i626

if.end7.i619.if.end15.i629_crit_edge:             ; preds = %if.end7.i619
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15.i629

if.end12.i626:                                    ; preds = %if.end7.i619
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %211)
  %cmp.i37.i620 = icmp eq i32 %211, -1
  %.limit.i38.i621 = select i1 %cmp.i37.i620, i32 0, i32 %211
  %212 = xor i1 %cmp.i37.i620, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i38.i621)
  %cmp1.i39.i622 = icmp eq i32 %.limit.i38.i621, -2
  %spec.store.select.i40.i623 = select i1 %cmp1.i39.i622, i32 0, i32 %.limit.i38.i621
  %call.i41.i624 = tail call i32 %206(ptr noundef %rdev, i32 noundef %spec.store.select.i40.i623, i32 noundef 1, i1 noundef zeroext %212) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i41.i624)
  %tobool13.not.i625 = icmp eq i32 %call.i41.i624, 0
  br i1 %tobool13.not.i625, label %if.end12.i626.if.end15.i629_crit_edge, label %if.end12.i626.if.end197_crit_edge

if.end12.i626.if.end197_crit_edge:                ; preds = %if.end12.i626
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end197

if.end12.i626.if.end15.i629_crit_edge:            ; preds = %if.end12.i626
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15.i629

if.end15.i629:                                    ; preds = %if.end12.i626.if.end15.i629_crit_edge, %if.end7.i619.if.end15.i629_crit_edge
  %warn.i627 = getelementptr inbounds %struct.regulation_constraints, ptr %202, i32 0, i32 17, i32 2
  %213 = ptrtoint ptr %warn.i627 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %warn.i627, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %214)
  %tobool16.not.i628 = icmp eq i32 %214, 0
  br i1 %tobool16.not.i628, label %if.end15.i629.if.end216_crit_edge, label %if.then17.i635

if.end15.i629.if.end216_crit_edge:                ; preds = %if.end15.i629
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end216

if.then17.i635:                                   ; preds = %if.end15.i629
  call void @__sanitizer_cov_trace_pc() #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %214)
  %cmp.i42.i630 = icmp eq i32 %214, -1
  %.limit.i43.i631 = select i1 %cmp.i42.i630, i32 0, i32 %214
  %215 = xor i1 %cmp.i42.i630, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i43.i631)
  %cmp1.i44.i632 = icmp eq i32 %.limit.i43.i631, -2
  %spec.store.select.i45.i633 = select i1 %cmp1.i44.i632, i32 0, i32 %.limit.i43.i631
  %call.i46.i634 = tail call i32 %206(ptr noundef %rdev, i32 noundef %spec.store.select.i45.i633, i32 noundef 2, i1 noundef zeroext %215) #25
  br label %if.end197

if.end197:                                        ; preds = %if.then17.i635, %if.end12.i626.if.end197_crit_edge, %if.end4.i616.if.end197_crit_edge, %if.end187.if.end197_crit_edge
  %ret.8 = phi i32 [ %ret.7789, %if.end187.if.end197_crit_edge ], [ %call.i.i614, %if.end4.i616.if.end197_crit_edge ], [ %call.i41.i624, %if.end12.i626.if.end197_crit_edge ], [ %call.i46.i634, %if.then17.i635 ]
  %216 = zext i32 %ret.8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %216, ptr @__sancov_gen_cov_switch_values.371)
  switch i32 %ret.8, label %do.end204 [
    i32 0, label %if.end197.if.end216_crit_edge
    i32 -95, label %if.end197.do.end212_crit_edge
  ]

if.end197.do.end212_crit_edge:                    ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end212

if.end197.if.end216_crit_edge:                    ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end216

do.end204:                                        ; preds = %if.end197
  %217 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %constraints, align 8
  %tobool.not.i639 = icmp eq ptr %218, null
  br i1 %tobool.not.i639, label %do.end204.if.else.i644_crit_edge, label %land.lhs.true.i641

do.end204.if.else.i644_crit_edge:                 ; preds = %do.end204
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i644

land.lhs.true.i641:                               ; preds = %do.end204
  %219 = ptrtoint ptr %218 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %218, align 4
  %tobool2.not.i640 = icmp eq ptr %220, null
  br i1 %tobool2.not.i640, label %land.lhs.true.i641.if.else.i644_crit_edge, label %land.lhs.true.i641.rdev_get_name.exit646_crit_edge

land.lhs.true.i641.rdev_get_name.exit646_crit_edge: ; preds = %land.lhs.true.i641
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit646

land.lhs.true.i641.if.else.i644_crit_edge:        ; preds = %land.lhs.true.i641
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i644

if.else.i644:                                     ; preds = %land.lhs.true.i641.if.else.i644_crit_edge, %do.end204.if.else.i644_crit_edge
  %221 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %rdev, align 8
  %223 = ptrtoint ptr %222 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %222, align 4
  %tobool6.not.i642 = icmp eq ptr %224, null
  %.str..i643 = select i1 %tobool6.not.i642, ptr @.str, ptr %224
  br label %rdev_get_name.exit646

rdev_get_name.exit646:                            ; preds = %if.else.i644, %land.lhs.true.i641.rdev_get_name.exit646_crit_edge
  %retval.0.i645 = phi ptr [ %220, %land.lhs.true.i641.rdev_get_name.exit646_crit_edge ], [ %.str..i643, %if.else.i644 ]
  %225 = inttoptr i32 %ret.8 to ptr
  %call208 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.197, ptr noundef %retval.0.i645, ptr noundef %225) #30
  br label %cleanup358

do.end212:                                        ; preds = %if.end197.do.end212_crit_edge, %if.then194.do.end212_crit_edge
  %226 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %constraints, align 8
  %tobool.not.i648 = icmp eq ptr %227, null
  br i1 %tobool.not.i648, label %do.end212.if.else.i653_crit_edge, label %land.lhs.true.i650

do.end212.if.else.i653_crit_edge:                 ; preds = %do.end212
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i653

land.lhs.true.i650:                               ; preds = %do.end212
  %228 = ptrtoint ptr %227 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %227, align 4
  %tobool2.not.i649 = icmp eq ptr %229, null
  br i1 %tobool2.not.i649, label %land.lhs.true.i650.if.else.i653_crit_edge, label %land.lhs.true.i650.rdev_get_name.exit655_crit_edge

land.lhs.true.i650.rdev_get_name.exit655_crit_edge: ; preds = %land.lhs.true.i650
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit655

land.lhs.true.i650.if.else.i653_crit_edge:        ; preds = %land.lhs.true.i650
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i653

if.else.i653:                                     ; preds = %land.lhs.true.i650.if.else.i653_crit_edge, %do.end212.if.else.i653_crit_edge
  %230 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %rdev, align 8
  %232 = ptrtoint ptr %231 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %231, align 4
  %tobool6.not.i651 = icmp eq ptr %233, null
  %.str..i652 = select i1 %tobool6.not.i651, ptr @.str, ptr %233
  br label %rdev_get_name.exit655

rdev_get_name.exit655:                            ; preds = %if.else.i653, %land.lhs.true.i650.rdev_get_name.exit655_crit_edge
  %retval.0.i654 = phi ptr [ %229, %land.lhs.true.i650.rdev_get_name.exit655_crit_edge ], [ %.str..i652, %if.else.i653 ]
  %call215 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.200, ptr noundef %retval.0.i654) #30
  br label %if.end216

if.end216:                                        ; preds = %rdev_get_name.exit655, %if.end197.if.end216_crit_edge, %if.end15.i629.if.end216_crit_edge
  %ret.8794 = phi i32 [ %ret.8, %if.end197.if.end216_crit_edge ], [ -95, %rdev_get_name.exit655 ], [ 0, %if.end15.i629.if.end216_crit_edge ]
  %234 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %constraints, align 8
  %under_voltage_detection = getelementptr inbounds %struct.regulation_constraints, ptr %235, i32 0, i32 28
  %236 = ptrtoint ptr %under_voltage_detection to i32
  call void @__asan_load2_noabort(i32 %236)
  %bf.load218 = load i16, ptr %under_voltage_detection, align 4
  %237 = and i16 %bf.load218, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %237)
  %tobool222.not = icmp eq i16 %237, 0
  br i1 %tobool222.not, label %if.end216.if.end226_crit_edge, label %if.then223

if.end216.if.end226_crit_edge:                    ; preds = %if.end216
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end226

if.then223:                                       ; preds = %if.end216
  %set_under_voltage_protection = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 11
  %238 = ptrtoint ptr %set_under_voltage_protection to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %set_under_voltage_protection, align 4
  %tobool.not.i656 = icmp eq ptr %239, null
  br i1 %tobool.not.i656, label %if.then223.do.end241_crit_edge, label %if.end.i658

if.then223.do.end241_crit_edge:                   ; preds = %if.then223
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end241

if.end.i658:                                      ; preds = %if.then223
  %under_voltage_limits = getelementptr inbounds %struct.regulation_constraints, ptr %235, i32 0, i32 18
  %240 = ptrtoint ptr %under_voltage_limits to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %under_voltage_limits, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %241)
  %tobool1.not.i657 = icmp eq i32 %241, 0
  br i1 %tobool1.not.i657, label %if.end.i658.if.end7.i668_crit_edge, label %if.end4.i665

if.end.i658.if.end7.i668_crit_edge:               ; preds = %if.end.i658
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i668

if.end4.i665:                                     ; preds = %if.end.i658
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %241)
  %cmp.i.i659 = icmp eq i32 %241, -1
  %.limit.i.i660 = select i1 %cmp.i.i659, i32 0, i32 %241
  %242 = xor i1 %cmp.i.i659, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i.i660)
  %cmp1.i.i661 = icmp eq i32 %.limit.i.i660, -2
  %spec.store.select.i.i662 = select i1 %cmp1.i.i661, i32 0, i32 %.limit.i.i660
  %call.i.i663 = tail call i32 %239(ptr noundef %rdev, i32 noundef %spec.store.select.i.i662, i32 noundef 0, i1 noundef zeroext %242) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i663)
  %tobool5.not.i664 = icmp eq i32 %call.i.i663, 0
  br i1 %tobool5.not.i664, label %if.end4.i665.if.end7.i668_crit_edge, label %if.end4.i665.if.end226_crit_edge

if.end4.i665.if.end226_crit_edge:                 ; preds = %if.end4.i665
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end226

if.end4.i665.if.end7.i668_crit_edge:              ; preds = %if.end4.i665
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i668

if.end7.i668:                                     ; preds = %if.end4.i665.if.end7.i668_crit_edge, %if.end.i658.if.end7.i668_crit_edge
  %err.i666 = getelementptr inbounds %struct.regulation_constraints, ptr %235, i32 0, i32 18, i32 1
  %243 = ptrtoint ptr %err.i666 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %err.i666, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %244)
  %tobool8.not.i667 = icmp eq i32 %244, 0
  br i1 %tobool8.not.i667, label %if.end7.i668.if.end15.i678_crit_edge, label %if.end12.i675

if.end7.i668.if.end15.i678_crit_edge:             ; preds = %if.end7.i668
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15.i678

if.end12.i675:                                    ; preds = %if.end7.i668
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %244)
  %cmp.i37.i669 = icmp eq i32 %244, -1
  %.limit.i38.i670 = select i1 %cmp.i37.i669, i32 0, i32 %244
  %245 = xor i1 %cmp.i37.i669, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i38.i670)
  %cmp1.i39.i671 = icmp eq i32 %.limit.i38.i670, -2
  %spec.store.select.i40.i672 = select i1 %cmp1.i39.i671, i32 0, i32 %.limit.i38.i670
  %call.i41.i673 = tail call i32 %239(ptr noundef %rdev, i32 noundef %spec.store.select.i40.i672, i32 noundef 1, i1 noundef zeroext %245) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i41.i673)
  %tobool13.not.i674 = icmp eq i32 %call.i41.i673, 0
  br i1 %tobool13.not.i674, label %if.end12.i675.if.end15.i678_crit_edge, label %if.end12.i675.if.end226_crit_edge

if.end12.i675.if.end226_crit_edge:                ; preds = %if.end12.i675
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end226

if.end12.i675.if.end15.i678_crit_edge:            ; preds = %if.end12.i675
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15.i678

if.end15.i678:                                    ; preds = %if.end12.i675.if.end15.i678_crit_edge, %if.end7.i668.if.end15.i678_crit_edge
  %warn.i676 = getelementptr inbounds %struct.regulation_constraints, ptr %235, i32 0, i32 18, i32 2
  %246 = ptrtoint ptr %warn.i676 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %warn.i676, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %247)
  %tobool16.not.i677 = icmp eq i32 %247, 0
  br i1 %tobool16.not.i677, label %if.end15.i678.if.end245_crit_edge, label %if.then17.i684

if.end15.i678.if.end245_crit_edge:                ; preds = %if.end15.i678
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end245

if.then17.i684:                                   ; preds = %if.end15.i678
  call void @__sanitizer_cov_trace_pc() #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %247)
  %cmp.i42.i679 = icmp eq i32 %247, -1
  %.limit.i43.i680 = select i1 %cmp.i42.i679, i32 0, i32 %247
  %248 = xor i1 %cmp.i42.i679, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i43.i680)
  %cmp1.i44.i681 = icmp eq i32 %.limit.i43.i680, -2
  %spec.store.select.i45.i682 = select i1 %cmp1.i44.i681, i32 0, i32 %.limit.i43.i680
  %call.i46.i683 = tail call i32 %239(ptr noundef %rdev, i32 noundef %spec.store.select.i45.i682, i32 noundef 2, i1 noundef zeroext %248) #25
  br label %if.end226

if.end226:                                        ; preds = %if.then17.i684, %if.end12.i675.if.end226_crit_edge, %if.end4.i665.if.end226_crit_edge, %if.end216.if.end226_crit_edge
  %ret.9 = phi i32 [ %ret.8794, %if.end216.if.end226_crit_edge ], [ %call.i.i663, %if.end4.i665.if.end226_crit_edge ], [ %call.i41.i673, %if.end12.i675.if.end226_crit_edge ], [ %call.i46.i683, %if.then17.i684 ]
  %249 = zext i32 %ret.9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %249, ptr @__sancov_gen_cov_switch_values.372)
  switch i32 %ret.9, label %do.end233 [
    i32 0, label %if.end226.if.end245_crit_edge
    i32 -95, label %if.end226.do.end241_crit_edge
  ]

if.end226.do.end241_crit_edge:                    ; preds = %if.end226
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end241

if.end226.if.end245_crit_edge:                    ; preds = %if.end226
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end245

do.end233:                                        ; preds = %if.end226
  %250 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %constraints, align 8
  %tobool.not.i688 = icmp eq ptr %251, null
  br i1 %tobool.not.i688, label %do.end233.if.else.i693_crit_edge, label %land.lhs.true.i690

do.end233.if.else.i693_crit_edge:                 ; preds = %do.end233
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i693

land.lhs.true.i690:                               ; preds = %do.end233
  %252 = ptrtoint ptr %251 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %251, align 4
  %tobool2.not.i689 = icmp eq ptr %253, null
  br i1 %tobool2.not.i689, label %land.lhs.true.i690.if.else.i693_crit_edge, label %land.lhs.true.i690.rdev_get_name.exit695_crit_edge

land.lhs.true.i690.rdev_get_name.exit695_crit_edge: ; preds = %land.lhs.true.i690
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit695

land.lhs.true.i690.if.else.i693_crit_edge:        ; preds = %land.lhs.true.i690
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i693

if.else.i693:                                     ; preds = %land.lhs.true.i690.if.else.i693_crit_edge, %do.end233.if.else.i693_crit_edge
  %254 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %rdev, align 8
  %256 = ptrtoint ptr %255 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %255, align 4
  %tobool6.not.i691 = icmp eq ptr %257, null
  %.str..i692 = select i1 %tobool6.not.i691, ptr @.str, ptr %257
  br label %rdev_get_name.exit695

rdev_get_name.exit695:                            ; preds = %if.else.i693, %land.lhs.true.i690.rdev_get_name.exit695_crit_edge
  %retval.0.i694 = phi ptr [ %253, %land.lhs.true.i690.rdev_get_name.exit695_crit_edge ], [ %.str..i692, %if.else.i693 ]
  %258 = inttoptr i32 %ret.9 to ptr
  %call237 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.203, ptr noundef %retval.0.i694, ptr noundef %258) #30
  br label %cleanup358

do.end241:                                        ; preds = %if.end226.do.end241_crit_edge, %if.then223.do.end241_crit_edge
  %259 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load ptr, ptr %constraints, align 8
  %tobool.not.i697 = icmp eq ptr %260, null
  br i1 %tobool.not.i697, label %do.end241.if.else.i702_crit_edge, label %land.lhs.true.i699

do.end241.if.else.i702_crit_edge:                 ; preds = %do.end241
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i702

land.lhs.true.i699:                               ; preds = %do.end241
  %261 = ptrtoint ptr %260 to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %260, align 4
  %tobool2.not.i698 = icmp eq ptr %262, null
  br i1 %tobool2.not.i698, label %land.lhs.true.i699.if.else.i702_crit_edge, label %land.lhs.true.i699.rdev_get_name.exit704_crit_edge

land.lhs.true.i699.rdev_get_name.exit704_crit_edge: ; preds = %land.lhs.true.i699
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit704

land.lhs.true.i699.if.else.i702_crit_edge:        ; preds = %land.lhs.true.i699
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i702

if.else.i702:                                     ; preds = %land.lhs.true.i699.if.else.i702_crit_edge, %do.end241.if.else.i702_crit_edge
  %263 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %rdev, align 8
  %265 = ptrtoint ptr %264 to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %264, align 4
  %tobool6.not.i700 = icmp eq ptr %266, null
  %.str..i701 = select i1 %tobool6.not.i700, ptr @.str, ptr %266
  br label %rdev_get_name.exit704

rdev_get_name.exit704:                            ; preds = %if.else.i702, %land.lhs.true.i699.rdev_get_name.exit704_crit_edge
  %retval.0.i703 = phi ptr [ %262, %land.lhs.true.i699.rdev_get_name.exit704_crit_edge ], [ %.str..i701, %if.else.i702 ]
  %call244 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.206, ptr noundef %retval.0.i703) #30
  br label %if.end245

if.end245:                                        ; preds = %rdev_get_name.exit704, %if.end226.if.end245_crit_edge, %if.end15.i678.if.end245_crit_edge
  %ret.9799 = phi i32 [ %ret.9, %if.end226.if.end245_crit_edge ], [ -95, %rdev_get_name.exit704 ], [ 0, %if.end15.i678.if.end245_crit_edge ]
  %267 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %constraints, align 8
  %over_temp_detection = getelementptr inbounds %struct.regulation_constraints, ptr %268, i32 0, i32 28
  %269 = ptrtoint ptr %over_temp_detection to i32
  call void @__asan_load2_noabort(i32 %269)
  %bf.load247 = load i16, ptr %over_temp_detection, align 4
  %270 = and i16 %bf.load247, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %270)
  %tobool251.not = icmp eq i16 %270, 0
  br i1 %tobool251.not, label %if.end245.if.end255_crit_edge, label %if.then252

if.end245.if.end255_crit_edge:                    ; preds = %if.end245
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end255

if.then252:                                       ; preds = %if.end245
  %set_thermal_protection = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 12
  %271 = ptrtoint ptr %set_thermal_protection to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load ptr, ptr %set_thermal_protection, align 4
  %tobool.not.i705 = icmp eq ptr %272, null
  br i1 %tobool.not.i705, label %if.then252.do.end270_crit_edge, label %if.end.i707

if.then252.do.end270_crit_edge:                   ; preds = %if.then252
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end270

if.end.i707:                                      ; preds = %if.then252
  %temp_limits = getelementptr inbounds %struct.regulation_constraints, ptr %268, i32 0, i32 19
  %273 = ptrtoint ptr %temp_limits to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %temp_limits, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %274)
  %tobool1.not.i706 = icmp eq i32 %274, 0
  br i1 %tobool1.not.i706, label %if.end.i707.if.end7.i717_crit_edge, label %if.end4.i714

if.end.i707.if.end7.i717_crit_edge:               ; preds = %if.end.i707
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i717

if.end4.i714:                                     ; preds = %if.end.i707
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %274)
  %cmp.i.i708 = icmp eq i32 %274, -1
  %.limit.i.i709 = select i1 %cmp.i.i708, i32 0, i32 %274
  %275 = xor i1 %cmp.i.i708, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i.i709)
  %cmp1.i.i710 = icmp eq i32 %.limit.i.i709, -2
  %spec.store.select.i.i711 = select i1 %cmp1.i.i710, i32 0, i32 %.limit.i.i709
  %call.i.i712 = tail call i32 %272(ptr noundef %rdev, i32 noundef %spec.store.select.i.i711, i32 noundef 0, i1 noundef zeroext %275) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i712)
  %tobool5.not.i713 = icmp eq i32 %call.i.i712, 0
  br i1 %tobool5.not.i713, label %if.end4.i714.if.end7.i717_crit_edge, label %if.end4.i714.if.end255_crit_edge

if.end4.i714.if.end255_crit_edge:                 ; preds = %if.end4.i714
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end255

if.end4.i714.if.end7.i717_crit_edge:              ; preds = %if.end4.i714
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7.i717

if.end7.i717:                                     ; preds = %if.end4.i714.if.end7.i717_crit_edge, %if.end.i707.if.end7.i717_crit_edge
  %err.i715 = getelementptr inbounds %struct.regulation_constraints, ptr %268, i32 0, i32 19, i32 1
  %276 = ptrtoint ptr %err.i715 to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %err.i715, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %277)
  %tobool8.not.i716 = icmp eq i32 %277, 0
  br i1 %tobool8.not.i716, label %if.end7.i717.if.end15.i727_crit_edge, label %if.end12.i724

if.end7.i717.if.end15.i727_crit_edge:             ; preds = %if.end7.i717
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15.i727

if.end12.i724:                                    ; preds = %if.end7.i717
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %277)
  %cmp.i37.i718 = icmp eq i32 %277, -1
  %.limit.i38.i719 = select i1 %cmp.i37.i718, i32 0, i32 %277
  %278 = xor i1 %cmp.i37.i718, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i38.i719)
  %cmp1.i39.i720 = icmp eq i32 %.limit.i38.i719, -2
  %spec.store.select.i40.i721 = select i1 %cmp1.i39.i720, i32 0, i32 %.limit.i38.i719
  %call.i41.i722 = tail call i32 %272(ptr noundef %rdev, i32 noundef %spec.store.select.i40.i721, i32 noundef 1, i1 noundef zeroext %278) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i41.i722)
  %tobool13.not.i723 = icmp eq i32 %call.i41.i722, 0
  br i1 %tobool13.not.i723, label %if.end12.i724.if.end15.i727_crit_edge, label %if.end12.i724.if.end255_crit_edge

if.end12.i724.if.end255_crit_edge:                ; preds = %if.end12.i724
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end255

if.end12.i724.if.end15.i727_crit_edge:            ; preds = %if.end12.i724
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end15.i727

if.end15.i727:                                    ; preds = %if.end12.i724.if.end15.i727_crit_edge, %if.end7.i717.if.end15.i727_crit_edge
  %warn.i725 = getelementptr inbounds %struct.regulation_constraints, ptr %268, i32 0, i32 19, i32 2
  %279 = ptrtoint ptr %warn.i725 to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load i32, ptr %warn.i725, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %280)
  %tobool16.not.i726 = icmp eq i32 %280, 0
  br i1 %tobool16.not.i726, label %if.end15.i727.if.end274_crit_edge, label %if.then17.i733

if.end15.i727.if.end274_crit_edge:                ; preds = %if.end15.i727
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end274

if.then17.i733:                                   ; preds = %if.end15.i727
  call void @__sanitizer_cov_trace_pc() #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %280)
  %cmp.i42.i728 = icmp eq i32 %280, -1
  %.limit.i43.i729 = select i1 %cmp.i42.i728, i32 0, i32 %280
  %281 = xor i1 %cmp.i42.i728, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %.limit.i43.i729)
  %cmp1.i44.i730 = icmp eq i32 %.limit.i43.i729, -2
  %spec.store.select.i45.i731 = select i1 %cmp1.i44.i730, i32 0, i32 %.limit.i43.i729
  %call.i46.i732 = tail call i32 %272(ptr noundef %rdev, i32 noundef %spec.store.select.i45.i731, i32 noundef 2, i1 noundef zeroext %281) #25
  br label %if.end255

if.end255:                                        ; preds = %if.then17.i733, %if.end12.i724.if.end255_crit_edge, %if.end4.i714.if.end255_crit_edge, %if.end245.if.end255_crit_edge
  %ret.10 = phi i32 [ %ret.9799, %if.end245.if.end255_crit_edge ], [ %call.i.i712, %if.end4.i714.if.end255_crit_edge ], [ %call.i41.i722, %if.end12.i724.if.end255_crit_edge ], [ %call.i46.i732, %if.then17.i733 ]
  %282 = zext i32 %ret.10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %282, ptr @__sancov_gen_cov_switch_values.373)
  switch i32 %ret.10, label %do.end262 [
    i32 0, label %if.end255.if.end274_crit_edge
    i32 -95, label %if.end255.do.end270_crit_edge
  ]

if.end255.do.end270_crit_edge:                    ; preds = %if.end255
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end270

if.end255.if.end274_crit_edge:                    ; preds = %if.end255
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end274

do.end262:                                        ; preds = %if.end255
  %283 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %constraints, align 8
  %tobool.not.i737 = icmp eq ptr %284, null
  br i1 %tobool.not.i737, label %do.end262.if.else.i742_crit_edge, label %land.lhs.true.i739

do.end262.if.else.i742_crit_edge:                 ; preds = %do.end262
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i742

land.lhs.true.i739:                               ; preds = %do.end262
  %285 = ptrtoint ptr %284 to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load ptr, ptr %284, align 4
  %tobool2.not.i738 = icmp eq ptr %286, null
  br i1 %tobool2.not.i738, label %land.lhs.true.i739.if.else.i742_crit_edge, label %land.lhs.true.i739.rdev_get_name.exit744_crit_edge

land.lhs.true.i739.rdev_get_name.exit744_crit_edge: ; preds = %land.lhs.true.i739
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit744

land.lhs.true.i739.if.else.i742_crit_edge:        ; preds = %land.lhs.true.i739
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i742

if.else.i742:                                     ; preds = %land.lhs.true.i739.if.else.i742_crit_edge, %do.end262.if.else.i742_crit_edge
  %287 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %rdev, align 8
  %289 = ptrtoint ptr %288 to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %288, align 4
  %tobool6.not.i740 = icmp eq ptr %290, null
  %.str..i741 = select i1 %tobool6.not.i740, ptr @.str, ptr %290
  br label %rdev_get_name.exit744

rdev_get_name.exit744:                            ; preds = %if.else.i742, %land.lhs.true.i739.rdev_get_name.exit744_crit_edge
  %retval.0.i743 = phi ptr [ %286, %land.lhs.true.i739.rdev_get_name.exit744_crit_edge ], [ %.str..i741, %if.else.i742 ]
  %291 = inttoptr i32 %ret.10 to ptr
  %call266 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.209, ptr noundef %retval.0.i743, ptr noundef %291) #30
  br label %cleanup358

do.end270:                                        ; preds = %if.end255.do.end270_crit_edge, %if.then252.do.end270_crit_edge
  %292 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %constraints, align 8
  %tobool.not.i746 = icmp eq ptr %293, null
  br i1 %tobool.not.i746, label %do.end270.if.else.i751_crit_edge, label %land.lhs.true.i748

do.end270.if.else.i751_crit_edge:                 ; preds = %do.end270
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i751

land.lhs.true.i748:                               ; preds = %do.end270
  %294 = ptrtoint ptr %293 to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %293, align 4
  %tobool2.not.i747 = icmp eq ptr %295, null
  br i1 %tobool2.not.i747, label %land.lhs.true.i748.if.else.i751_crit_edge, label %land.lhs.true.i748.rdev_get_name.exit753_crit_edge

land.lhs.true.i748.rdev_get_name.exit753_crit_edge: ; preds = %land.lhs.true.i748
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit753

land.lhs.true.i748.if.else.i751_crit_edge:        ; preds = %land.lhs.true.i748
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i751

if.else.i751:                                     ; preds = %land.lhs.true.i748.if.else.i751_crit_edge, %do.end270.if.else.i751_crit_edge
  %296 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %rdev, align 8
  %298 = ptrtoint ptr %297 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %297, align 4
  %tobool6.not.i749 = icmp eq ptr %299, null
  %.str..i750 = select i1 %tobool6.not.i749, ptr @.str, ptr %299
  br label %rdev_get_name.exit753

rdev_get_name.exit753:                            ; preds = %if.else.i751, %land.lhs.true.i748.rdev_get_name.exit753_crit_edge
  %retval.0.i752 = phi ptr [ %295, %land.lhs.true.i748.rdev_get_name.exit753_crit_edge ], [ %.str..i750, %if.else.i751 ]
  %call273 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.212, ptr noundef %retval.0.i752) #30
  br label %if.end274

if.end274:                                        ; preds = %rdev_get_name.exit753, %if.end255.if.end274_crit_edge, %if.end15.i727.if.end274_crit_edge
  %300 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %constraints, align 8
  %active_discharge = getelementptr inbounds %struct.regulation_constraints, ptr %301, i32 0, i32 27
  %302 = ptrtoint ptr %active_discharge to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %active_discharge, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %303)
  %tobool276.not = icmp eq i32 %303, 0
  br i1 %tobool276.not, label %if.end274.if.end300_crit_edge, label %land.lhs.true277

if.end274.if.end300_crit_edge:                    ; preds = %if.end274
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end300

land.lhs.true277:                                 ; preds = %if.end274
  %set_active_discharge = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 13
  %304 = ptrtoint ptr %set_active_discharge to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %set_active_discharge, align 4
  %tobool278.not = icmp eq ptr %305, null
  br i1 %tobool278.not, label %land.lhs.true277.if.end300_crit_edge, label %if.then279

land.lhs.true277.if.end300_crit_edge:             ; preds = %land.lhs.true277
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end300

if.then279:                                       ; preds = %land.lhs.true277
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %303)
  %cmp282 = icmp eq i32 %303, 2
  %call286 = tail call i32 %305(ptr noundef %rdev, i1 noundef zeroext %cmp282) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call286)
  %cmp287 = icmp slt i32 %call286, 0
  br i1 %cmp287, label %do.end291, label %if.then279.if.end300_crit_edge

if.then279.if.end300_crit_edge:                   ; preds = %if.then279
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end300

do.end291:                                        ; preds = %if.then279
  %306 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load ptr, ptr %constraints, align 8
  %tobool.not.i755 = icmp eq ptr %307, null
  br i1 %tobool.not.i755, label %do.end291.if.else.i760_crit_edge, label %land.lhs.true.i757

do.end291.if.else.i760_crit_edge:                 ; preds = %do.end291
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i760

land.lhs.true.i757:                               ; preds = %do.end291
  %308 = ptrtoint ptr %307 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %307, align 4
  %tobool2.not.i756 = icmp eq ptr %309, null
  br i1 %tobool2.not.i756, label %land.lhs.true.i757.if.else.i760_crit_edge, label %land.lhs.true.i757.cleanup297.thread_crit_edge

land.lhs.true.i757.cleanup297.thread_crit_edge:   ; preds = %land.lhs.true.i757
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup297.thread

land.lhs.true.i757.if.else.i760_crit_edge:        ; preds = %land.lhs.true.i757
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i760

if.else.i760:                                     ; preds = %land.lhs.true.i757.if.else.i760_crit_edge, %do.end291.if.else.i760_crit_edge
  %310 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %rdev, align 8
  %312 = ptrtoint ptr %311 to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load ptr, ptr %311, align 4
  %tobool6.not.i758 = icmp eq ptr %313, null
  %.str..i759 = select i1 %tobool6.not.i758, ptr @.str, ptr %313
  br label %cleanup297.thread

cleanup297.thread:                                ; preds = %if.else.i760, %land.lhs.true.i757.cleanup297.thread_crit_edge
  %retval.0.i761 = phi ptr [ %309, %land.lhs.true.i757.cleanup297.thread_crit_edge ], [ %.str..i759, %if.else.i760 ]
  %314 = inttoptr i32 %call286 to ptr
  %call295 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.215, ptr noundef %retval.0.i761, ptr noundef nonnull %314) #30
  br label %cleanup358

if.end300:                                        ; preds = %if.then279.if.end300_crit_edge, %land.lhs.true277.if.end300_crit_edge, %if.end274.if.end300_crit_edge
  %315 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %constraints, align 8
  %always_on = getelementptr inbounds %struct.regulation_constraints, ptr %316, i32 0, i32 28
  %317 = ptrtoint ptr %always_on to i32
  call void @__asan_load2_noabort(i32 %317)
  %bf.load302 = load i16, ptr %always_on, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %bf.load302)
  %318 = icmp ult i16 %bf.load302, 16384
  br i1 %318, label %if.else351, label %if.then313

if.then313:                                       ; preds = %if.end300
  %supply_name = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 16
  %319 = ptrtoint ptr %supply_name to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %supply_name, align 8
  %tobool314.not = icmp eq ptr %320, null
  br i1 %tobool314.not, label %if.then313.if.end318_crit_edge, label %land.lhs.true315

if.then313.if.end318_crit_edge:                   ; preds = %if.then313
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end318

land.lhs.true315:                                 ; preds = %if.then313
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %321 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load ptr, ptr %supply, align 4
  %tobool316.not = icmp eq ptr %322, null
  br i1 %tobool316.not, label %land.lhs.true315.cleanup358_crit_edge, label %land.lhs.true315.if.end318_crit_edge

land.lhs.true315.if.end318_crit_edge:             ; preds = %land.lhs.true315
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end318

land.lhs.true315.cleanup358_crit_edge:            ; preds = %land.lhs.true315
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup358

if.end318:                                        ; preds = %land.lhs.true315.if.end318_crit_edge, %if.then313.if.end318_crit_edge
  %supply319 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %323 = ptrtoint ptr %supply319 to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load ptr, ptr %supply319, align 4
  %tobool320.not = icmp eq ptr %324, null
  br i1 %tobool320.not, label %if.end318.if.end329_crit_edge, label %if.then321

if.end318.if.end329_crit_edge:                    ; preds = %if.end318
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end329

if.then321:                                       ; preds = %if.end318
  %call323 = tail call i32 @regulator_enable(ptr noundef nonnull %324)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call323)
  %cmp324 = icmp slt i32 %call323, 0
  br i1 %cmp324, label %if.then325, label %if.then321.if.end329_crit_edge

if.then321.if.end329_crit_edge:                   ; preds = %if.then321
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end329

if.then325:                                       ; preds = %if.then321
  call void @__sanitizer_cov_trace_pc() #27
  %325 = ptrtoint ptr %supply319 to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %supply319, align 4
  tail call fastcc void @_regulator_put(ptr noundef %326)
  %327 = ptrtoint ptr %supply319 to i32
  call void @__asan_store4_noabort(i32 %327)
  store ptr null, ptr %supply319, align 4
  br label %cleanup358

if.end329:                                        ; preds = %if.then321.if.end329_crit_edge, %if.end318.if.end329_crit_edge
  %call330 = tail call fastcc i32 @_regulator_do_enable(ptr noundef %rdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call330)
  %cmp331 = icmp sgt i32 %call330, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call330)
  %cmp333.not = icmp eq i32 %call330, -22
  %or.cond511 = or i1 %cmp331, %cmp333.not
  %328 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %constraints, align 8
  br i1 %or.cond511, label %if.end342, label %do.end337

do.end337:                                        ; preds = %if.end329
  %tobool.not.i764 = icmp eq ptr %329, null
  br i1 %tobool.not.i764, label %do.end337.if.else.i769_crit_edge, label %land.lhs.true.i766

do.end337.if.else.i769_crit_edge:                 ; preds = %do.end337
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i769

land.lhs.true.i766:                               ; preds = %do.end337
  %330 = ptrtoint ptr %329 to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %329, align 4
  %tobool2.not.i765 = icmp eq ptr %331, null
  br i1 %tobool2.not.i765, label %land.lhs.true.i766.if.else.i769_crit_edge, label %land.lhs.true.i766.rdev_get_name.exit771_crit_edge

land.lhs.true.i766.rdev_get_name.exit771_crit_edge: ; preds = %land.lhs.true.i766
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit771

land.lhs.true.i766.if.else.i769_crit_edge:        ; preds = %land.lhs.true.i766
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i769

if.else.i769:                                     ; preds = %land.lhs.true.i766.if.else.i769_crit_edge, %do.end337.if.else.i769_crit_edge
  %332 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load ptr, ptr %rdev, align 8
  %334 = ptrtoint ptr %333 to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %333, align 4
  %tobool6.not.i767 = icmp eq ptr %335, null
  %.str..i768 = select i1 %tobool6.not.i767, ptr @.str, ptr %335
  br label %rdev_get_name.exit771

rdev_get_name.exit771:                            ; preds = %if.else.i769, %land.lhs.true.i766.rdev_get_name.exit771_crit_edge
  %retval.0.i770 = phi ptr [ %331, %land.lhs.true.i766.rdev_get_name.exit771_crit_edge ], [ %.str..i768, %if.else.i769 ]
  %336 = inttoptr i32 %call330 to ptr
  %call341 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.218, ptr noundef %retval.0.i770, ptr noundef %336) #30
  br label %cleanup358

if.end342:                                        ; preds = %if.end329
  %always_on344 = getelementptr inbounds %struct.regulation_constraints, ptr %329, i32 0, i32 28
  %337 = ptrtoint ptr %always_on344 to i32
  call void @__asan_load2_noabort(i32 %337)
  %bf.load345 = load i16, ptr %always_on344, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load345)
  %tobool348.not = icmp sgt i16 %bf.load345, -1
  br i1 %tobool348.not, label %if.end342.if.end357_crit_edge, label %if.then349

if.end342.if.end357_crit_edge:                    ; preds = %if.end342
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end357

if.then349:                                       ; preds = %if.end342
  call void @__sanitizer_cov_trace_pc() #27
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 2
  %338 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %use_count, align 8
  %inc = add i32 %339, 1
  store i32 %inc, ptr %use_count, align 8
  br label %if.end357

if.else351:                                       ; preds = %if.end300
  %340 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load ptr, ptr %rdev, align 8
  %off_on_delay = getelementptr inbounds %struct.regulator_desc, ptr %341, i32 0, i32 58
  %342 = ptrtoint ptr %off_on_delay to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %off_on_delay, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %343)
  %tobool353.not = icmp eq i32 %343, 0
  br i1 %tobool353.not, label %if.else351.if.end357_crit_edge, label %if.then354

if.else351.if.end357_crit_edge:                   ; preds = %if.else351
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end357

if.then354:                                       ; preds = %if.else351
  call void @__sanitizer_cov_trace_pc() #27
  %call355 = tail call i64 @ktime_get() #25
  %last_off = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 23
  %344 = ptrtoint ptr %last_off to i32
  call void @__asan_store8_noabort(i32 %344)
  store i64 %call355, ptr %last_off, align 8
  br label %if.end357

if.end357:                                        ; preds = %if.then354, %if.else351.if.end357_crit_edge, %if.then349, %if.end342.if.end357_crit_edge
  %345 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load ptr, ptr %constraints, align 8
  tail call fastcc void @print_constraints_debug(ptr noundef %rdev) #25
  %min_uV.i = getelementptr inbounds %struct.regulation_constraints, ptr %346, i32 0, i32 1
  %347 = ptrtoint ptr %min_uV.i to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load i32, ptr %min_uV.i, align 4
  %max_uV.i = getelementptr inbounds %struct.regulation_constraints, ptr %346, i32 0, i32 2
  %349 = ptrtoint ptr %max_uV.i to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load i32, ptr %max_uV.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %348, i32 %350)
  %cmp.not.i = icmp eq i32 %348, %350
  br i1 %cmp.not.i, label %if.end357.cleanup358_crit_edge, label %land.lhs.true.i773

if.end357.cleanup358_crit_edge:                   ; preds = %if.end357
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup358

land.lhs.true.i773:                               ; preds = %if.end357
  %351 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load ptr, ptr %constraints, align 8
  %tobool.not.i.i772 = icmp eq ptr %352, null
  br i1 %tobool.not.i.i772, label %regulator_ops_is_valid.exit.thread.i, label %regulator_ops_is_valid.exit.i

regulator_ops_is_valid.exit.thread.i:             ; preds = %land.lhs.true.i773
  call void @__sanitizer_cov_trace_pc() #27
  %353 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load ptr, ptr %rdev, align 8
  %355 = ptrtoint ptr %354 to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load ptr, ptr %354, align 4
  %tobool6.not.i.i.i774 = icmp eq ptr %356, null
  %.str..i.i.i775 = select i1 %tobool6.not.i.i.i774, ptr @.str, ptr %356
  %call1.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i.i775) #30
  br label %do.end.i776

regulator_ops_is_valid.exit.i:                    ; preds = %land.lhs.true.i773
  %valid_ops_mask.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %352, i32 0, i32 11
  %357 = ptrtoint ptr %valid_ops_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %valid_ops_mask.i.i, align 4
  %and.i.i = and i32 %358, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool3.not.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool3.not.i.not.i, label %regulator_ops_is_valid.exit.i.do.end.i776_crit_edge, label %regulator_ops_is_valid.exit.i.cleanup358_crit_edge

regulator_ops_is_valid.exit.i.cleanup358_crit_edge: ; preds = %regulator_ops_is_valid.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup358

regulator_ops_is_valid.exit.i.do.end.i776_crit_edge: ; preds = %regulator_ops_is_valid.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end.i776

do.end.i776:                                      ; preds = %regulator_ops_is_valid.exit.i.do.end.i776_crit_edge, %regulator_ops_is_valid.exit.thread.i
  %359 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load ptr, ptr %constraints, align 8
  %tobool.not.i9.i = icmp eq ptr %360, null
  br i1 %tobool.not.i9.i, label %do.end.i776.if.else.i.i781_crit_edge, label %land.lhs.true.i.i778

do.end.i776.if.else.i.i781_crit_edge:             ; preds = %do.end.i776
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i781

land.lhs.true.i.i778:                             ; preds = %do.end.i776
  %361 = ptrtoint ptr %360 to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load ptr, ptr %360, align 4
  %tobool2.not.i.i777 = icmp eq ptr %362, null
  br i1 %tobool2.not.i.i777, label %land.lhs.true.i.i778.if.else.i.i781_crit_edge, label %land.lhs.true.i.i778.rdev_get_name.exit.i782_crit_edge

land.lhs.true.i.i778.rdev_get_name.exit.i782_crit_edge: ; preds = %land.lhs.true.i.i778
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i782

land.lhs.true.i.i778.if.else.i.i781_crit_edge:    ; preds = %land.lhs.true.i.i778
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i781

if.else.i.i781:                                   ; preds = %land.lhs.true.i.i778.if.else.i.i781_crit_edge, %do.end.i776.if.else.i.i781_crit_edge
  %363 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load ptr, ptr %rdev, align 8
  %365 = ptrtoint ptr %364 to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load ptr, ptr %364, align 4
  %tobool6.not.i.i779 = icmp eq ptr %366, null
  %.str..i.i780 = select i1 %tobool6.not.i.i779, ptr @.str, ptr %366
  br label %rdev_get_name.exit.i782

rdev_get_name.exit.i782:                          ; preds = %if.else.i.i781, %land.lhs.true.i.i778.rdev_get_name.exit.i782_crit_edge
  %retval.0.i10.i = phi ptr [ %362, %land.lhs.true.i.i778.rdev_get_name.exit.i782_crit_edge ], [ %.str..i.i780, %if.else.i.i781 ]
  %call3.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.257, ptr noundef %retval.0.i10.i) #30
  br label %cleanup358

cleanup358:                                       ; preds = %rdev_get_name.exit.i782, %regulator_ops_is_valid.exit.i.cleanup358_crit_edge, %if.end357.cleanup358_crit_edge, %rdev_get_name.exit771, %if.then325, %land.lhs.true315.cleanup358_crit_edge, %cleanup297.thread, %rdev_get_name.exit744, %rdev_get_name.exit695, %rdev_get_name.exit646, %rdev_get_name.exit597, %rdev_get_name.exit582, %rdev_get_name.exit573, %rdev_get_name.exit564, %rdev_get_name.exit555, %rdev_get_name.exit546, %rdev_get_name.exit537, %rdev_get_name.exit528, %rdev_get_name.exit, %rdev_get_name.exit64.i, %rdev_get_name.exit.i, %entry.cleanup358_crit_edge
  %retval.3 = phi i32 [ %call13, %rdev_get_name.exit ], [ %call1.i, %rdev_get_name.exit528 ], [ %call51, %rdev_get_name.exit546 ], [ %call78, %rdev_get_name.exit555 ], [ %call100, %rdev_get_name.exit564 ], [ %call122, %rdev_get_name.exit573 ], [ %ret.7, %rdev_get_name.exit597 ], [ %ret.8, %rdev_get_name.exit646 ], [ %ret.9, %rdev_get_name.exit695 ], [ %ret.10, %rdev_get_name.exit744 ], [ %call323, %if.then325 ], [ %call330, %rdev_get_name.exit771 ], [ -22, %rdev_get_name.exit537 ], [ %call, %entry.cleanup358_crit_edge ], [ %call145, %rdev_get_name.exit582 ], [ -517, %land.lhs.true315.cleanup358_crit_edge ], [ -22, %rdev_get_name.exit.i ], [ %call21.i, %rdev_get_name.exit64.i ], [ %call286, %cleanup297.thread ], [ 0, %if.end357.cleanup358_crit_edge ], [ 0, %regulator_ops_is_valid.exit.i.cleanup358_crit_edge ], [ 0, %rdev_get_name.exit.i782 ]
  ret i32 %retval.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @regulator_init_coupling(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @of_get_n_coupled(ptr noundef %rdev) #25
  %add = add i32 %call, 1
  %0 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %add, i32 4) #25
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %entry.cleanup_crit_edge, label %if.end7.i.i, !prof !994

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end7.i.i:                                      ; preds = %entry
  %2 = extractvalue { i32, i1 } %0, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %2, i32 noundef 3520) #32
  %tobool.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not, label %if.end7.i.i.cleanup_crit_edge, label %if.end

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %if.end7.i.i
  %coupling_desc = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7
  %3 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call8.i.i, ptr %coupling_desc, align 4
  %4 = ptrtoint ptr %call8.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %rdev, ptr %call8.i.i, align 128
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 3
  %5 = ptrtoint ptr %n_coupled to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %add, ptr %n_coupled, align 4
  %n_resolved = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 2
  %6 = ptrtoint ptr %n_resolved to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %n_resolved, align 4
  %inc = add i32 %7, 1
  store i32 %inc, ptr %n_resolved, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %call9 = tail call zeroext i1 @of_check_coupling_data(ptr noundef %rdev) #25
  br i1 %call9, label %if.end11, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  %coupler.044.i = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @regulator_coupler_list, i32 0, i32 1), align 4
  %cmp.not45.i = icmp eq ptr %coupler.044.i, @regulator_coupler_list
  br i1 %cmp.not45.i, label %if.end11.regulator_find_coupler.exit_crit_edge, label %if.end11.for.body.i_crit_edge

if.end11.for.body.i_crit_edge:                    ; preds = %if.end11
  br label %for.body.i

if.end11.regulator_find_coupler.exit_crit_edge:   ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_find_coupler.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end11.for.body.i_crit_edge
  %coupler.046.i = phi ptr [ %coupler.0.i, %for.inc.i.for.body.i_crit_edge ], [ %coupler.044.i, %if.end11.for.body.i_crit_edge ]
  %attach_regulator.i = getelementptr inbounds %struct.regulator_coupler, ptr %coupler.046.i, i32 0, i32 1
  %8 = ptrtoint ptr %attach_regulator.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %attach_regulator.i, align 4
  %call.i = tail call i32 %9(ptr noundef %coupler.046.i, ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end4.i

if.then.i:                                        ; preds = %for.body.i
  %balance_voltage.i = getelementptr inbounds %struct.regulator_coupler, ptr %coupler.046.i, i32 0, i32 3
  %10 = ptrtoint ptr %balance_voltage.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %balance_voltage.i, align 4
  %tobool1.not.i = icmp eq ptr %11, null
  br i1 %tobool1.not.i, label %land.lhs.true.i, label %if.then.i.regulator_find_coupler.exit_crit_edge

if.then.i.regulator_find_coupler.exit_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_find_coupler.exit

land.lhs.true.i:                                  ; preds = %if.then.i
  %12 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %13)
  %cmp2.i = icmp sgt i32 %13, 2
  br i1 %cmp2.i, label %err_unsupported.i, label %land.lhs.true.i.regulator_find_coupler.exit_crit_edge

land.lhs.true.i.regulator_find_coupler.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_find_coupler.exit

if.end4.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp5.i = icmp slt i32 %call.i, 0
  br i1 %cmp5.i, label %if.then6.i, label %if.end8.i

if.then6.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #27
  %14 = inttoptr i32 %call.i to ptr
  br label %regulator_find_coupler.exit

if.end8.i:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp9.i = icmp eq i32 %call.i, 1
  br i1 %cmp9.i, label %for.inc.i, label %if.end8.i.regulator_find_coupler.exit_crit_edge

if.end8.i.regulator_find_coupler.exit_crit_edge:  ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_find_coupler.exit

for.inc.i:                                        ; preds = %if.end8.i
  %prev.i = getelementptr inbounds %struct.list_head, ptr %coupler.046.i, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %coupler.0.i = load ptr, ptr %prev.i, align 4
  %cmp.not.i = icmp eq ptr %coupler.0.i, @regulator_coupler_list
  br i1 %cmp.not.i, label %for.inc.i.regulator_find_coupler.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i

for.inc.i.regulator_find_coupler.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_find_coupler.exit

err_unsupported.i:                                ; preds = %land.lhs.true.i
  %detach_regulator.i = getelementptr inbounds %struct.regulator_coupler, ptr %coupler.046.i, i32 0, i32 2
  %16 = ptrtoint ptr %detach_regulator.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %detach_regulator.i, align 4
  %tobool17.not.i = icmp eq ptr %17, null
  br i1 %tobool17.not.i, label %err_unsupported.i.do.end.i_crit_edge, label %if.then18.i

err_unsupported.i.do.end.i_crit_edge:             ; preds = %err_unsupported.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end.i

if.then18.i:                                      ; preds = %err_unsupported.i
  call void @__sanitizer_cov_trace_pc() #27
  %call20.i = tail call i32 %17(ptr noundef %coupler.046.i, ptr noundef %rdev) #25
  br label %do.end.i

do.end.i:                                         ; preds = %if.then18.i, %err_unsupported.i.do.end.i_crit_edge
  %constraints.i.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %18 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %constraints.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %tobool2.not.i.i = icmp eq ptr %21, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %22 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rdev, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %tobool6.not.i.i = icmp eq ptr %25, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %25
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i.i42 = phi ptr [ %21, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call24.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.278, ptr noundef %retval.0.i.i42) #30
  br label %regulator_find_coupler.exit

regulator_find_coupler.exit:                      ; preds = %rdev_get_name.exit.i, %for.inc.i.regulator_find_coupler.exit_crit_edge, %if.end8.i.regulator_find_coupler.exit_crit_edge, %if.then6.i, %land.lhs.true.i.regulator_find_coupler.exit_crit_edge, %if.then.i.regulator_find_coupler.exit_crit_edge, %if.end11.regulator_find_coupler.exit_crit_edge
  %retval.0.i = phi ptr [ %14, %if.then6.i ], [ inttoptr (i32 -1 to ptr), %rdev_get_name.exit.i ], [ %coupler.046.i, %land.lhs.true.i.regulator_find_coupler.exit_crit_edge ], [ %coupler.046.i, %if.then.i.regulator_find_coupler.exit_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end11.regulator_find_coupler.exit_crit_edge ], [ inttoptr (i32 -22 to ptr), %for.inc.i.regulator_find_coupler.exit_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end8.i.regulator_find_coupler.exit_crit_edge ]
  %coupler = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 1
  %26 = ptrtoint ptr %coupler to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %retval.0.i, ptr %coupler, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  %27 = ptrtoint ptr %coupler to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %coupler, align 4
  %cmp.i = icmp ugt ptr %28, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then17, label %regulator_find_coupler.exit.cleanup_crit_edge

regulator_find_coupler.exit.cleanup_crit_edge:    ; preds = %regulator_find_coupler.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then17:                                        ; preds = %regulator_find_coupler.exit
  %29 = ptrtoint ptr %28 to i32
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %30 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i43 = icmp eq ptr %31, null
  br i1 %tobool.not.i43, label %if.then17.if.else.i_crit_edge, label %land.lhs.true.i44

if.then17.if.else.i_crit_edge:                    ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i44:                                ; preds = %if.then17
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %tobool2.not.i = icmp eq ptr %33, null
  br i1 %tobool2.not.i, label %land.lhs.true.i44.if.else.i_crit_edge, label %land.lhs.true.i44.rdev_get_name.exit_crit_edge

land.lhs.true.i44.rdev_get_name.exit_crit_edge:   ; preds = %land.lhs.true.i44
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i44.if.else.i_crit_edge:            ; preds = %land.lhs.true.i44
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i44.if.else.i_crit_edge, %if.then17.if.else.i_crit_edge
  %34 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rdev, align 8
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %tobool6.not.i = icmp eq ptr %37, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %37
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i44.rdev_get_name.exit_crit_edge
  %retval.0.i45 = phi ptr [ %33, %land.lhs.true.i44.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.276, ptr noundef %retval.0.i45, ptr noundef nonnull %28) #30
  br label %cleanup

cleanup:                                          ; preds = %rdev_get_name.exit, %regulator_find_coupler.exit.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.end7.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %29, %rdev_get_name.exit ], [ -12, %if.end7.i.i.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ -1, %if.end8.cleanup_crit_edge ], [ 0, %regulator_find_coupler.exit.cleanup_crit_edge ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @set_consumer_device_supply(ptr noundef %rdev, ptr noundef %consumer_dev_name, ptr noundef %supply) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %supply, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq ptr %consumer_dev_name, null
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 20) #31
  %cmp4 = icmp eq ptr %call7.i.i, null
  br i1 %cmp4, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %regulator = getelementptr inbounds %struct.regulator_map, ptr %call7.i.i, i32 0, i32 3
  %1 = ptrtoint ptr %regulator to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %rdev, ptr %regulator, align 8
  %supply7 = getelementptr inbounds %struct.regulator_map, ptr %call7.i.i, i32 0, i32 2
  %2 = ptrtoint ptr %supply7 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %supply, ptr %supply7, align 4
  br i1 %cmp1.not, label %if.end6.if.end14_crit_edge, label %if.then8

if.end6.if.end14_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end14

if.then8:                                         ; preds = %if.end6
  %call9 = tail call noalias ptr @kstrdup(ptr noundef nonnull %consumer_dev_name, i32 noundef 3264) #25
  %dev_name = getelementptr inbounds %struct.regulator_map, ptr %call7.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %dev_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call9, ptr %dev_name, align 8
  %cmp11 = icmp eq ptr %call9, null
  br i1 %cmp11, label %if.then12, label %if.then8.if.end14_crit_edge

if.then8.if.end14_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end14

if.then12:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #25
  br label %cleanup

if.end14:                                         ; preds = %if.then8.if.end14_crit_edge, %if.end6.if.end14_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  %node.096 = load ptr, ptr @regulator_map_list, align 4
  %cmp15.not97 = icmp eq ptr %node.096, @regulator_map_list
  br i1 %cmp15.not97, label %if.end14.for.end_crit_edge, label %if.end14.for.body_crit_edge

if.end14.for.body_crit_edge:                      ; preds = %if.end14
  br label %for.body

if.end14.for.end_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end14.for.body_crit_edge
  %node.098 = phi ptr [ %node.0, %for.inc.for.body_crit_edge ], [ %node.096, %if.end14.for.body_crit_edge ]
  %dev_name16 = getelementptr inbounds %struct.regulator_map, ptr %node.098, i32 0, i32 1
  %4 = ptrtoint ptr %dev_name16 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev_name16, align 4
  %tobool17.not = icmp eq ptr %5, null
  %brmerge = or i1 %cmp1.not, %tobool17.not
  br i1 %brmerge, label %if.else25, label %if.then19

if.then19:                                        ; preds = %for.body
  %call21 = tail call i32 @strcmp(ptr noundef nonnull %5, ptr noundef nonnull %consumer_dev_name) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %cmp22.not = icmp eq i32 %call21, 0
  br i1 %cmp22.not, label %if.then19.if.end31_crit_edge, label %if.then19.for.inc_crit_edge

if.then19.for.inc_crit_edge:                      ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then19.if.end31_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end31

if.else25:                                        ; preds = %for.body
  %brmerge85.demorgan = and i1 %cmp1.not, %tobool17.not
  br i1 %brmerge85.demorgan, label %if.else25.if.end31_crit_edge, label %if.else25.for.inc_crit_edge

if.else25.for.inc_crit_edge:                      ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.else25.if.end31_crit_edge:                     ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end31

if.end31:                                         ; preds = %if.else25.if.end31_crit_edge, %if.then19.if.end31_crit_edge
  %supply32 = getelementptr inbounds %struct.regulator_map, ptr %node.098, i32 0, i32 2
  %6 = ptrtoint ptr %supply32 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %supply32, align 4
  %call33 = tail call i32 @strcmp(ptr noundef %7, ptr noundef nonnull %supply) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %cmp34.not = icmp eq i32 %call33, 0
  br i1 %cmp34.not, label %do.body, label %if.end31.for.inc_crit_edge

if.end31.for.inc_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

do.body:                                          ; preds = %if.end31
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @set_consumer_device_supply.__UNIQUE_ID_ddebug361, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@set_consumer_device_supply, %fail)) #25
          to label %if.then44 [label %fail], !srcloc !997

if.then44:                                        ; preds = %do.body
  %regulator45 = getelementptr inbounds %struct.regulator_map, ptr %node.098, i32 0, i32 3
  %8 = ptrtoint ptr %regulator45 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %regulator45, align 4
  %init_name.i = getelementptr inbounds %struct.regulator_dev, ptr %9, i32 0, i32 13, i32 3
  %10 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then44.dev_name.exit_crit_edge

if.then44.dev_name.exit_crit_edge:                ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #27
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #27
  %dev = getelementptr inbounds %struct.regulator_dev, ptr %9, i32 0, i32 13
  %12 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then44.dev_name.exit_crit_edge
  %retval.0.i86 = phi ptr [ %13, %if.end.i ], [ %11, %if.then44.dev_name.exit_crit_edge ]
  %14 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %9, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %init_name.i87 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13, i32 3
  %18 = ptrtoint ptr %init_name.i87 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %init_name.i87, align 8
  %tobool.not.i88 = icmp eq ptr %19, null
  br i1 %tobool.not.i88, label %if.end.i89, label %dev_name.exit.dev_name.exit91_crit_edge

dev_name.exit.dev_name.exit91_crit_edge:          ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %dev_name.exit91

if.end.i89:                                       ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  %dev48 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13
  %20 = ptrtoint ptr %dev48 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev48, align 4
  br label %dev_name.exit91

dev_name.exit91:                                  ; preds = %if.end.i89, %dev_name.exit.dev_name.exit91_crit_edge
  %retval.0.i90 = phi ptr [ %21, %if.end.i89 ], [ %19, %dev_name.exit.dev_name.exit91_crit_edge ]
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %22 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i92 = icmp eq ptr %23, null
  br i1 %tobool.not.i92, label %dev_name.exit91.if.else.i_crit_edge, label %land.lhs.true.i

dev_name.exit91.if.else.i_crit_edge:              ; preds = %dev_name.exit91
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %dev_name.exit91
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %tobool2.not.i = icmp eq ptr %25, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %dev_name.exit91.if.else.i_crit_edge
  %26 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %rdev, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 4
  %tobool6.not.i = icmp eq ptr %29, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %29
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i93 = phi ptr [ %25, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @set_consumer_device_supply.__UNIQUE_ID_ddebug361, ptr noundef nonnull @.str.281, ptr noundef %consumer_dev_name, ptr noundef %retval.0.i86, ptr noundef %17, ptr noundef nonnull %supply, ptr noundef %retval.0.i90, ptr noundef %retval.0.i93) #25
  br label %fail

for.inc:                                          ; preds = %if.end31.for.inc_crit_edge, %if.else25.for.inc_crit_edge, %if.then19.for.inc_crit_edge
  %30 = ptrtoint ptr %node.098 to i32
  call void @__asan_load4_noabort(i32 %30)
  %node.0 = load ptr, ptr %node.098, align 4
  %cmp15.not = icmp eq ptr %node.0, @regulator_map_list
  br i1 %cmp15.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end14.for.end_crit_edge
  %31 = load ptr, ptr @regulator_map_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @regulator_map_list, ptr noundef %31) #25
  br i1 %call.i.i, label %if.end.i.i, label %for.end.list_add.exit_crit_edge

for.end.list_add.exit_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_add.exit

if.end.i.i:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %call7.i.i, ptr %prev1.i.i, align 4
  %33 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %31, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %34 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @regulator_map_list, ptr %prev3.i.i, align 4
  store volatile ptr %call7.i.i, ptr @regulator_map_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %for.end.list_add.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  br label %cleanup

fail:                                             ; preds = %rdev_get_name.exit, %do.body
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  %dev_name57 = getelementptr inbounds %struct.regulator_map, ptr %call7.i.i, i32 0, i32 1
  %35 = ptrtoint ptr %dev_name57 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev_name57, align 8
  tail call void @kfree(ptr noundef %36) #25
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #25
  br label %cleanup

cleanup:                                          ; preds = %fail, %list_add.exit, %if.then12, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then12 ], [ -16, %fail ], [ 0, %list_add.exit ], [ -22, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_add(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rdev_init_debugfs(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  %name = alloca [255 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %parent1 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13, i32 1
  %0 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent1, align 8
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %2 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.if.else.i_crit_edge, label %land.lhs.true.i

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %entry
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %6 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rdev, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool6.not.i = icmp eq ptr %9, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %9
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %5, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  call void @llvm.lifetime.start.p0(i64 255, ptr nonnull %name) #25
  %10 = call ptr @memset(ptr %name, i32 255, i32 255)
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %rdev_get_name.exit.if.end_crit_edge, label %land.lhs.true

rdev_get_name.exit.if.end_crit_edge:              ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true:                                    ; preds = %rdev_get_name.exit
  %11 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rdev, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %cmp = icmp eq ptr %retval.0.i, %14
  br i1 %cmp, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %init_name.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 3
  %15 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i32 = icmp eq ptr %16, null
  br i1 %tobool.not.i32, label %if.end.i, label %if.then.dev_name.exit_crit_edge

if.then.dev_name.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %1, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then.dev_name.exit_crit_edge
  %retval.0.i33 = phi ptr [ %18, %if.end.i ], [ %16, %if.then.dev_name.exit_crit_edge ]
  %call4 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %name, i32 noundef 255, ptr noundef nonnull @.str.93, ptr noundef %retval.0.i33, ptr noundef %retval.0.i)
  br label %if.end

if.end:                                           ; preds = %dev_name.exit, %land.lhs.true.if.end_crit_edge, %rdev_get_name.exit.if.end_crit_edge
  %rname.0 = phi ptr [ %name, %dev_name.exit ], [ %retval.0.i, %land.lhs.true.if.end_crit_edge ], [ %retval.0.i, %rdev_get_name.exit.if.end_crit_edge ]
  %19 = load ptr, ptr @debugfs_root, align 4
  %call6 = call ptr @debugfs_create_dir(ptr noundef %rname.0, ptr noundef %19) #25
  %debugfs = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 20
  %20 = ptrtoint ptr %debugfs to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call6, ptr %debugfs, align 8
  %tobool8.not = icmp eq ptr %call6, null
  br i1 %tobool8.not, label %do.end, label %if.end12

do.end:                                           ; preds = %if.end
  %21 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i35 = icmp eq ptr %22, null
  br i1 %tobool.not.i35, label %do.end.if.else.i40_crit_edge, label %land.lhs.true.i37

do.end.if.else.i40_crit_edge:                     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i40

land.lhs.true.i37:                                ; preds = %do.end
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %tobool2.not.i36 = icmp eq ptr %24, null
  br i1 %tobool2.not.i36, label %land.lhs.true.i37.if.else.i40_crit_edge, label %land.lhs.true.i37.rdev_get_name.exit42_crit_edge

land.lhs.true.i37.rdev_get_name.exit42_crit_edge: ; preds = %land.lhs.true.i37
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit42

land.lhs.true.i37.if.else.i40_crit_edge:          ; preds = %land.lhs.true.i37
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i40

if.else.i40:                                      ; preds = %land.lhs.true.i37.if.else.i40_crit_edge, %do.end.if.else.i40_crit_edge
  %25 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %rdev, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %tobool6.not.i38 = icmp eq ptr %28, null
  %.str..i39 = select i1 %tobool6.not.i38, ptr @.str, ptr %28
  br label %rdev_get_name.exit42

rdev_get_name.exit42:                             ; preds = %if.else.i40, %land.lhs.true.i37.rdev_get_name.exit42_crit_edge
  %retval.0.i41 = phi ptr [ %24, %land.lhs.true.i37.rdev_get_name.exit42_crit_edge ], [ %.str..i39, %if.else.i40 ]
  %call11 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.282, ptr noundef %retval.0.i41) #30
  br label %cleanup

if.end12:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 2
  call void @debugfs_create_u32(ptr noundef nonnull @.str.284, i16 noundef zeroext 292, ptr noundef nonnull %call6, ptr noundef %use_count) #25
  %29 = ptrtoint ptr %debugfs to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %debugfs, align 8
  %open_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 3
  call void @debugfs_create_u32(ptr noundef nonnull @.str.285, i16 noundef zeroext 292, ptr noundef %30, ptr noundef %open_count) #25
  %31 = ptrtoint ptr %debugfs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %debugfs, align 8
  %bypass_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 4
  call void @debugfs_create_u32(ptr noundef nonnull @.str.286, i16 noundef zeroext 292, ptr noundef %32, ptr noundef %bypass_count) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %rdev_get_name.exit42
  call void @llvm.lifetime.end.p0(i64 255, ptr nonnull %name) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @regulator_resolve_coupling(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %coupling_desc = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7
  %coupler1 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 1
  %0 = ptrtoint ptr %coupler1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %coupler1, align 4
  %n_coupled3 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 3
  %2 = ptrtoint ptr %n_coupled3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %n_coupled3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp45 = icmp sgt i32 %3, 1
  br i1 %cmp45, label %for.body.lr.ph, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %n_resolved = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.046 = phi i32 [ 1, %for.body.lr.ph ], [ %inc17, %for.inc.for.body_crit_edge ]
  %4 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %coupling_desc, align 4
  %arrayidx = getelementptr ptr, ptr %5, i32 %i.046
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.end, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end:                                           ; preds = %for.body
  %sub = add nsw i32 %i.046, -1
  %call = tail call ptr @of_parse_coupled_regulator(ptr noundef %rdev, i32 noundef %sub) #25
  %tobool4.not = icmp eq ptr %call, null
  br i1 %tobool4.not, label %if.end.for.inc_crit_edge, label %if.end6

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end6:                                          ; preds = %if.end
  %coupler8 = getelementptr inbounds %struct.regulator_dev, ptr %call, i32 0, i32 7, i32 1
  %8 = ptrtoint ptr %coupler8 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %coupler8, align 4
  %cmp9.not = icmp eq ptr %9, %1
  br i1 %cmp9.not, label %if.end14, label %do.end

do.end:                                           ; preds = %if.end6
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %10 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %tobool2.not.i = icmp eq ptr %13, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %14 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rdev, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %tobool6.not.i = icmp eq ptr %17, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %17
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %13, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %constraints.i36 = getelementptr inbounds %struct.regulator_dev, ptr %call, i32 0, i32 14
  %18 = ptrtoint ptr %constraints.i36 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %constraints.i36, align 8
  %tobool.not.i37 = icmp eq ptr %19, null
  br i1 %tobool.not.i37, label %rdev_get_name.exit.if.else.i42_crit_edge, label %land.lhs.true.i39

rdev_get_name.exit.if.else.i42_crit_edge:         ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i42

land.lhs.true.i39:                                ; preds = %rdev_get_name.exit
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %tobool2.not.i38 = icmp eq ptr %21, null
  br i1 %tobool2.not.i38, label %land.lhs.true.i39.if.else.i42_crit_edge, label %land.lhs.true.i39.rdev_get_name.exit44_crit_edge

land.lhs.true.i39.rdev_get_name.exit44_crit_edge: ; preds = %land.lhs.true.i39
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit44

land.lhs.true.i39.if.else.i42_crit_edge:          ; preds = %land.lhs.true.i39
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i42

if.else.i42:                                      ; preds = %land.lhs.true.i39.if.else.i42_crit_edge, %rdev_get_name.exit.if.else.i42_crit_edge
  %22 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %call, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %tobool6.not.i40 = icmp eq ptr %25, null
  %.str..i41 = select i1 %tobool6.not.i40, ptr @.str, ptr %25
  br label %rdev_get_name.exit44

rdev_get_name.exit44:                             ; preds = %if.else.i42, %land.lhs.true.i39.rdev_get_name.exit44_crit_edge
  %retval.0.i43 = phi ptr [ %21, %land.lhs.true.i39.rdev_get_name.exit44_crit_edge ], [ %.str..i41, %if.else.i42 ]
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.287, ptr noundef %retval.0.i, ptr noundef %retval.0.i43) #30
  br label %cleanup

if.end14:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #27
  %26 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %coupling_desc, align 4
  %arrayidx16 = getelementptr ptr, ptr %27, i32 %i.046
  %28 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %call, ptr %arrayidx16, align 4
  %29 = ptrtoint ptr %n_resolved to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %n_resolved, align 4
  %inc = add i32 %30, 1
  store i32 %inc, ptr %n_resolved, align 4
  tail call fastcc void @regulator_resolve_coupling(ptr noundef nonnull %call)
  br label %for.inc

for.inc:                                          ; preds = %if.end14, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc17 = add nuw nsw i32 %i.046, 1
  %exitcond.not = icmp eq i32 %inc17, %3
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %rdev_get_name.exit44, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @class_for_each_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_register_resolve_supply(ptr noundef %dev, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  %call1 = tail call fastcc i32 @regulator_resolve_supply(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %entry.if.end9_crit_edge, label %do.body

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end9

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @regulator_register_resolve_supply.__UNIQUE_ID_ddebug384, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@regulator_register_resolve_supply, %if.end9)) #25
          to label %if.then7 [label %if.end9], !srcloc !997

if.then7:                                         ; preds = %do.body
  %constraints.i = getelementptr i8, ptr %dev, i32 928
  %0 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.then7.if.else.i_crit_edge, label %land.lhs.true.i

if.then7.if.else.i_crit_edge:                     ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then7
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then7.if.else.i_crit_edge
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool6.not.i = icmp eq ptr %7, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %7
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i11 = phi ptr [ %3, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @regulator_register_resolve_supply.__UNIQUE_ID_ddebug384, ptr noundef nonnull @.str.290, ptr noundef %retval.0.i11) #25
  br label %if.end9

if.end9:                                          ; preds = %rdev_get_name.exit, %do.body, %entry.if.end9_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @unset_regulator_supplies(ptr noundef readnone %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @regulator_map_list, align 4
  %cmp.not19 = icmp eq ptr %0, @regulator_map_list
  br i1 %cmp.not19, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %node.020 = phi ptr [ %n.022, %for.inc.for.body_crit_edge ], [ %0, %entry.for.body_crit_edge ]
  %1 = ptrtoint ptr %node.020 to i32
  call void @__asan_load4_noabort(i32 %1)
  %n.022 = load ptr, ptr %node.020, align 4
  %regulator = getelementptr inbounds %struct.regulator_map, ptr %node.020, i32 0, i32 3
  %2 = ptrtoint ptr %regulator to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %regulator, align 4
  %cmp5 = icmp eq ptr %3, %rdev
  br i1 %cmp5, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then:                                          ; preds = %for.body
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %node.020) #25
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %node.020, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %node.020 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %node.020, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %10 = ptrtoint ptr %node.020 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 256 to ptr), ptr %node.020, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %node.020, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %dev_name = getelementptr inbounds %struct.regulator_map, ptr %node.020, i32 0, i32 1
  %12 = ptrtoint ptr %dev_name to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev_name, align 4
  tail call void @kfree(ptr noundef %13) #25
  tail call void @kfree(ptr noundef %node.020) #25
  br label %for.inc

for.inc:                                          ; preds = %list_del.exit, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %n.022, @regulator_map_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @regulator_remove_coupling(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %coupling_desc = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7
  %coupler1 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 1
  %0 = ptrtoint ptr %coupler1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %coupler1, align 4
  %n_coupled3 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 3
  %2 = ptrtoint ptr %n_coupled3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %n_coupled3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp67 = icmp ugt i32 %3, 1
  br i1 %cmp67, label %for.body.lr.ph, label %entry.for.end22_crit_edge

entry.for.end22_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end22

for.body.lr.ph:                                   ; preds = %entry
  %n_resolved18 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc20.for.body_crit_edge, %for.body.lr.ph
  %i.068 = phi i32 [ 1, %for.body.lr.ph ], [ %inc21, %for.inc20.for.body_crit_edge ]
  %4 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %coupling_desc, align 4
  %arrayidx = getelementptr ptr, ptr %5, i32 %i.068
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %for.body.for.inc20_crit_edge, label %if.end

for.body.for.inc20_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc20

if.end:                                           ; preds = %for.body
  tail call fastcc void @regulator_lock(ptr noundef nonnull %7)
  %n_coupled5 = getelementptr inbounds %struct.regulator_dev, ptr %7, i32 0, i32 7, i32 3
  %8 = ptrtoint ptr %n_coupled5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %n_coupled5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp765 = icmp ugt i32 %9, 1
  br i1 %cmp765, label %for.body8.lr.ph, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body8.lr.ph:                                  ; preds = %if.end
  %coupling_desc4 = getelementptr inbounds %struct.regulator_dev, ptr %7, i32 0, i32 7
  %10 = ptrtoint ptr %coupling_desc4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %coupling_desc4, align 4
  br label %for.body8

for.body8:                                        ; preds = %for.inc.for.body8_crit_edge, %for.body8.lr.ph
  %k.066 = phi i32 [ 1, %for.body8.lr.ph ], [ %inc, %for.inc.for.body8_crit_edge ]
  %arrayidx10 = getelementptr ptr, ptr %11, i32 %k.066
  %12 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx10, align 4
  %cmp11 = icmp eq ptr %13, %rdev
  br i1 %cmp11, label %if.then12, label %for.inc

if.then12:                                        ; preds = %for.body8
  call void @__sanitizer_cov_trace_pc() #27
  %arrayidx10.le = getelementptr ptr, ptr %11, i32 %k.066
  %14 = ptrtoint ptr %arrayidx10.le to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %arrayidx10.le, align 4
  %n_resolved = getelementptr inbounds %struct.regulator_dev, ptr %7, i32 0, i32 7, i32 2
  %15 = ptrtoint ptr %n_resolved to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %n_resolved, align 4
  %dec = add i32 %16, -1
  store i32 %dec, ptr %n_resolved, align 4
  br label %for.end

for.inc:                                          ; preds = %for.body8
  %inc = add nuw i32 %k.066, 1
  %exitcond.not = icmp eq i32 %inc, %9
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body8_crit_edge

for.inc.for.body8_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body8

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.then12, %if.end.for.end_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %7, i32 0, i32 11
  %17 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %18, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %for.end.if.end.i_crit_edge

for.end.if.end.i_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %7, i32 0, i32 10
  %19 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %7, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %20 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.end.if.end.i_crit_edge
  %21 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %for.end.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp2.i = icmp slt i32 %21, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %22 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %coupling_desc, align 4
  %arrayidx17 = getelementptr ptr, ptr %23, i32 %i.068
  %24 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %arrayidx17, align 4
  %25 = ptrtoint ptr %n_resolved18 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %n_resolved18, align 4
  %dec19 = add i32 %26, -1
  store i32 %dec19, ptr %n_resolved18, align 4
  br label %for.inc20

for.inc20:                                        ; preds = %regulator_unlock.exit, %for.body.for.inc20_crit_edge
  %inc21 = add nuw i32 %i.068, 1
  %exitcond71.not = icmp eq i32 %inc21, %3
  br i1 %exitcond71.not, label %for.inc20.for.end22_crit_edge, label %for.inc20.for.body_crit_edge

for.inc20.for.body_crit_edge:                     ; preds = %for.inc20
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc20.for.end22_crit_edge:                    ; preds = %for.inc20
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end22

for.end22:                                        ; preds = %for.inc20.for.end22_crit_edge, %entry.for.end22_crit_edge
  %tobool23.not = icmp eq ptr %1, null
  br i1 %tobool23.not, label %for.end22.if.end33_crit_edge, label %land.lhs.true

for.end22.if.end33_crit_edge:                     ; preds = %for.end22
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

land.lhs.true:                                    ; preds = %for.end22
  %detach_regulator = getelementptr inbounds %struct.regulator_coupler, ptr %1, i32 0, i32 2
  %27 = ptrtoint ptr %detach_regulator to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %detach_regulator, align 4
  %tobool24.not = icmp eq ptr %28, null
  br i1 %tobool24.not, label %land.lhs.true.if.end33_crit_edge, label %if.then25

land.lhs.true.if.end33_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

if.then25:                                        ; preds = %land.lhs.true
  %call = tail call i32 %28(ptr noundef nonnull %1, ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool27.not = icmp eq i32 %call, 0
  br i1 %tobool27.not, label %if.then25.if.end33_crit_edge, label %do.end

if.then25.if.end33_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

do.end:                                           ; preds = %if.then25
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %29 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %30, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 4
  %tobool2.not.i = icmp eq ptr %32, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %33 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rdev, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 4
  %tobool6.not.i = icmp eq ptr %36, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %36
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %32, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %37 = inttoptr i32 %call to ptr
  %call31 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.291, ptr noundef %retval.0.i, ptr noundef nonnull %37) #30
  br label %if.end33

if.end33:                                         ; preds = %rdev_get_name.exit, %if.then25.if.end33_crit_edge, %land.lhs.true.if.end33_crit_edge, %for.end22.if.end33_crit_edge
  %38 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %coupling_desc, align 4
  tail call void @kfree(ptr noundef %39) #25
  %40 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %coupling_desc, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @regulator_ena_gpio_free(ptr nocapture noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %ena_pin = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 21
  %0 = ptrtoint ptr %ena_pin to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ena_pin, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %entry.for.cond_crit_edge

entry.for.cond_crit_edge:                         ; preds = %entry
  br label %for.cond

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry.for.cond_crit_edge
  %pin.0.in = phi ptr [ %pin.0, %for.body.for.cond_crit_edge ], [ @regulator_ena_gpio_list, %entry.for.cond_crit_edge ]
  %2 = ptrtoint ptr %pin.0.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %pin.0 = load ptr, ptr %pin.0.in, align 4
  %cmp.not = icmp eq ptr %pin.0, @regulator_ena_gpio_list
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body:                                         ; preds = %for.cond
  %cmp6.not = icmp eq ptr %pin.0, %1
  br i1 %cmp6.not, label %if.end8, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.cond

if.end8:                                          ; preds = %for.body
  %request_count = getelementptr inbounds %struct.regulator_enable_gpio, ptr %1, i32 0, i32 3
  %3 = ptrtoint ptr %request_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %request_count, align 4
  %dec = add i32 %4, -1
  store i32 %dec, ptr %request_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool9.not = icmp eq i32 %dec, 0
  br i1 %tobool9.not, label %if.end11, label %if.end8.for.end_crit_edge

if.end8.for.end_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

if.end11:                                         ; preds = %if.end8
  %gpiod = getelementptr inbounds %struct.regulator_enable_gpio, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %gpiod to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %gpiod, align 4
  tail call void @gpiod_put(ptr noundef %6) #25
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %1) #25
  br i1 %call.i.i, label %if.end.i.i, label %if.end11.list_del.exit_crit_edge

if.end11.list_del.exit_crit_edge:                 ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %1, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end11.list_del.exit_crit_edge
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %1, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef nonnull %1) #25
  br label %for.end

for.end:                                          ; preds = %list_del.exit, %if.end8.for.end_crit_edge, %for.cond.for.end_crit_edge
  %15 = ptrtoint ptr %ena_pin to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %ena_pin, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @gpiod_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @regulator_unregister(ptr noundef %rdev) #0 align 64 {
entry:
  %ww_ctx.i = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %rdev, null
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %return

if.end:                                           ; preds = %entry
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %0 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %supply, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end.if.end5_crit_edge, label %while.cond.preheader

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end5

while.cond.preheader:                             ; preds = %if.end
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 2
  %2 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %use_count, align 8
  %dec51 = add i32 %3, -1
  store i32 %dec51, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool2.not52 = icmp eq i32 %3, 0
  br i1 %tobool2.not52, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #27
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %4 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %supply, align 4
  %rdev1.i = getelementptr inbounds %struct.regulator, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %rdev1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rdev1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %8 = call ptr @memset(ptr %ww_ctx.i, i32 255, i32 64)
  call fastcc void @regulator_lock_dependent(ptr noundef %7, ptr noundef nonnull %ww_ctx.i) #25
  %call.i = call fastcc i32 @_regulator_disable(ptr noundef %5) #25
  %n_coupled.i.i = getelementptr inbounds %struct.regulator_dev, ptr %7, i32 0, i32 7, i32 3
  %9 = ptrtoint ptr %n_coupled.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %n_coupled.i.i, align 4
  call fastcc void @regulator_unlock_recursive(ptr noundef %7, i32 noundef %10) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx.i) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx.i) #25
  %11 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %use_count, align 8
  %dec = add i32 %12, -1
  store i32 %dec, ptr %use_count, align 8
  %tobool2.not = icmp eq i32 %12, 0
  br i1 %tobool2.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %13 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %supply, align 4
  call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  call fastcc void @_regulator_put(ptr noundef %14) #25
  call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  br label %if.end5

if.end5:                                          ; preds = %while.end, %if.end.if.end5_crit_edge
  %disable_work = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 18
  %call6 = call zeroext i1 @flush_work(ptr noundef %disable_work) #25
  call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  %debugfs = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 20
  %15 = ptrtoint ptr %debugfs to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %debugfs, align 8
  call void @debugfs_remove(ptr noundef %16) #25
  %open_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 3
  %17 = ptrtoint ptr %open_count to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %open_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool7.not = icmp eq i32 %18, 0
  br i1 %tobool7.not, label %if.end5.if.end22_crit_edge, label %do.end, !prof !993

if.end5.if.end22_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end22

do.end:                                           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #27
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5582, i32 noundef 9, ptr noundef null) #25
  br label %if.end22

if.end22:                                         ; preds = %do.end, %if.end5.if.end22_crit_edge
  call fastcc void @regulator_remove_coupling(ptr noundef nonnull %rdev)
  %19 = load ptr, ptr @regulator_map_list, align 4
  %cmp.not19.i = icmp eq ptr %19, @regulator_map_list
  br i1 %cmp.not19.i, label %if.end22.unset_regulator_supplies.exit_crit_edge, label %if.end22.for.body.i_crit_edge

if.end22.for.body.i_crit_edge:                    ; preds = %if.end22
  br label %for.body.i

if.end22.unset_regulator_supplies.exit_crit_edge: ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #27
  br label %unset_regulator_supplies.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end22.for.body.i_crit_edge
  %node.020.i = phi ptr [ %n.022.i, %for.inc.i.for.body.i_crit_edge ], [ %19, %if.end22.for.body.i_crit_edge ]
  %20 = ptrtoint ptr %node.020.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %n.022.i = load ptr, ptr %node.020.i, align 4
  %regulator.i = getelementptr inbounds %struct.regulator_map, ptr %node.020.i, i32 0, i32 3
  %21 = ptrtoint ptr %regulator.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %regulator.i, align 4
  %cmp5.i = icmp eq ptr %22, %rdev
  br i1 %cmp5.i, label %if.then.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %node.020.i) #25
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.list_del.exit.i_crit_edge

if.then.i.list_del.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %node.020.i, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i.i.i, align 4
  %25 = ptrtoint ptr %node.020.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %node.020.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %prev1.i.i.i.i, align 4
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %26, ptr %24, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then.i.list_del.exit.i_crit_edge
  %29 = ptrtoint ptr %node.020.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 256 to ptr), ptr %node.020.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %node.020.i, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %dev_name.i = getelementptr inbounds %struct.regulator_map, ptr %node.020.i, i32 0, i32 1
  %31 = ptrtoint ptr %dev_name.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %dev_name.i, align 4
  call void @kfree(ptr noundef %32) #25
  call void @kfree(ptr noundef %node.020.i) #25
  br label %for.inc.i

for.inc.i:                                        ; preds = %list_del.exit.i, %for.body.i.for.inc.i_crit_edge
  %cmp.not.i = icmp eq ptr %n.022.i, @regulator_map_list
  br i1 %cmp.not.i, label %for.inc.i.unset_regulator_supplies.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body.i

for.inc.i.unset_regulator_supplies.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %unset_regulator_supplies.exit

unset_regulator_supplies.exit:                    ; preds = %for.inc.i.unset_regulator_supplies.exit_crit_edge, %if.end22.unset_regulator_supplies.exit_crit_edge
  %list = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 5
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #25
  br i1 %call.i.i, label %if.end.i.i, label %unset_regulator_supplies.exit.list_del.exit_crit_edge

unset_regulator_supplies.exit.list_del.exit_crit_edge: ; preds = %unset_regulator_supplies.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit

if.end.i.i:                                       ; preds = %unset_regulator_supplies.exit
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i42 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 5, i32 1
  %33 = ptrtoint ptr %prev.i.i42 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %prev.i.i42, align 4
  %35 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %34, ptr %prev1.i.i.i, align 4
  %38 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %36, ptr %34, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %unset_regulator_supplies.exit.list_del.exit_crit_edge
  %39 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr inttoptr (i32 256 to ptr), ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 5, i32 1
  %40 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %ena_pin.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 21
  %41 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i = icmp eq ptr %42, null
  br i1 %tobool.not.i, label %list_del.exit.regulator_ena_gpio_free.exit_crit_edge, label %list_del.exit.for.cond.i_crit_edge

list_del.exit.for.cond.i_crit_edge:               ; preds = %list_del.exit
  br label %for.cond.i

list_del.exit.regulator_ena_gpio_free.exit_crit_edge: ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_ena_gpio_free.exit

for.cond.i:                                       ; preds = %for.body.i44.for.cond.i_crit_edge, %list_del.exit.for.cond.i_crit_edge
  %pin.0.in.i = phi ptr [ %pin.0.i, %for.body.i44.for.cond.i_crit_edge ], [ @regulator_ena_gpio_list, %list_del.exit.for.cond.i_crit_edge ]
  %43 = ptrtoint ptr %pin.0.in.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %pin.0.i = load ptr, ptr %pin.0.in.i, align 4
  %cmp.not.i43 = icmp eq ptr %pin.0.i, @regulator_ena_gpio_list
  br i1 %cmp.not.i43, label %for.cond.i.for.end.i_crit_edge, label %for.body.i44

for.cond.i.for.end.i_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end.i

for.body.i44:                                     ; preds = %for.cond.i
  %cmp6.not.i = icmp eq ptr %pin.0.i, %42
  br i1 %cmp6.not.i, label %if.end8.i, label %for.body.i44.for.cond.i_crit_edge

for.body.i44.for.cond.i_crit_edge:                ; preds = %for.body.i44
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.cond.i

if.end8.i:                                        ; preds = %for.body.i44
  %request_count.i = getelementptr inbounds %struct.regulator_enable_gpio, ptr %42, i32 0, i32 3
  %44 = ptrtoint ptr %request_count.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %request_count.i, align 4
  %dec.i = add i32 %45, -1
  store i32 %dec.i, ptr %request_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool9.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool9.not.i, label %if.end11.i, label %if.end8.i.for.end.i_crit_edge

if.end8.i.for.end.i_crit_edge:                    ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end.i

if.end11.i:                                       ; preds = %if.end8.i
  %gpiod.i = getelementptr inbounds %struct.regulator_enable_gpio, ptr %42, i32 0, i32 1
  %46 = ptrtoint ptr %gpiod.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %gpiod.i, align 4
  call void @gpiod_put(ptr noundef %47) #25
  %call.i.i.i45 = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %42) #25
  br i1 %call.i.i.i45, label %if.end.i.i.i48, label %if.end11.i.list_del.exit.i50_crit_edge

if.end11.i.list_del.exit.i50_crit_edge:           ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %list_del.exit.i50

if.end.i.i.i48:                                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #27
  %prev.i.i.i46 = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  %48 = ptrtoint ptr %prev.i.i.i46 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %prev.i.i.i46, align 4
  %50 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %42, align 4
  %prev1.i.i.i.i47 = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %prev1.i.i.i.i47 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %49, ptr %prev1.i.i.i.i47, align 4
  %53 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %51, ptr %49, align 4
  br label %list_del.exit.i50

list_del.exit.i50:                                ; preds = %if.end.i.i.i48, %if.end11.i.list_del.exit.i50_crit_edge
  %54 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr inttoptr (i32 256 to ptr), ptr %42, align 4
  %prev.i.i49 = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  %55 = ptrtoint ptr %prev.i.i49 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i49, align 4
  call void @kfree(ptr noundef nonnull %42) #25
  br label %for.end.i

for.end.i:                                        ; preds = %list_del.exit.i50, %if.end8.i.for.end.i_crit_edge, %for.cond.i.for.end.i_crit_edge
  %56 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %ena_pin.i, align 4
  br label %regulator_ena_gpio_free.exit

regulator_ena_gpio_free.exit:                     ; preds = %for.end.i, %list_del.exit.regulator_ena_gpio_free.exit_crit_edge
  %dev = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13
  call void @device_unregister(ptr noundef %dev) #25
  call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  br label %return

return:                                           ; preds = %regulator_ena_gpio_free.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @regulator_dev_release(ptr nocapture noundef readonly %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  tail call void @kfree(ptr noundef %3) #25
  %of_node = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 13, i32 27
  %4 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_node, align 8
  tail call void @of_node_put(ptr noundef %5) #25
  tail call void @kfree(ptr noundef %1) #25
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @regulator_has_full_constraints() #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  store i1 true, ptr @has_full_constraints, align 1
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @rdev_get_drvdata(ptr nocapture noundef readonly %rdev) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %reg_data = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 19
  %0 = ptrtoint ptr %reg_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %reg_data, align 4
  ret ptr %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @regulator_get_drvdata(ptr nocapture noundef readonly %regulator) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  %reg_data = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 19
  %2 = ptrtoint ptr %reg_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %reg_data, align 4
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @regulator_set_drvdata(ptr nocapture noundef readonly %regulator, ptr noundef %data) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 4
  %reg_data = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 19
  %2 = ptrtoint ptr %reg_data to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %data, ptr %reg_data, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @rdev_get_id(ptr nocapture noundef readonly %rdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 8
  %id = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @rdev_get_dev(ptr noundef readnone %rdev) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13
  ret ptr %dev
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @rdev_get_regmap(ptr nocapture noundef readonly %rdev) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %regmap = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 17
  %0 = ptrtoint ptr %regmap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %regmap, align 4
  ret ptr %1
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @regulator_get_init_drvdata(ptr nocapture noundef readonly %reg_init_data) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data = getelementptr inbounds %struct.regulator_init_data, ptr %reg_init_data, i32 0, i32 5
  %0 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data, align 4
  ret ptr %1
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_init() #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__class_register(ptr noundef nonnull @regulator_class, ptr noundef nonnull @regulator_init.__key) #25
  %call1 = tail call ptr @debugfs_create_dir(ptr noundef nonnull @.str.63, ptr noundef null) #25
  store ptr %call1, ptr @debugfs_root, align 4
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %do.end, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.332) #30
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %0 = load ptr, ptr @debugfs_root, align 4
  %call4 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.334, i16 noundef zeroext 292, ptr noundef %0, ptr noundef null, ptr noundef nonnull @supply_map_fops) #25
  %1 = load ptr, ptr @debugfs_root, align 4
  %call5 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.335, i16 noundef zeroext 292, ptr noundef %1, ptr noundef null, ptr noundef nonnull @regulator_summary_fops) #25
  tail call void @regulator_dummy_init() #30
  %call6 = tail call i32 @regulator_coupler_register(ptr noundef nonnull @generic_regulator_coupler)
  ret i32 %call
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_init_complete() #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @of_root to i32))
  %0 = load ptr, ptr @of_root, align 4
  %cmp.i.not = icmp eq ptr %0, null
  br i1 %cmp.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @has_full_constraints, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %1 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %1, ptr noundef nonnull @regulator_init_complete_work, i32 noundef 3000) #25
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #14

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_regulator_basic(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_basic, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.67, ptr noundef %add.ptr) #25
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_regulator_range(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %min = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %min, align 4
  %max = getelementptr inbounds %struct.trace_event_raw_regulator_range, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.71, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %7) #25
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_regulator_value(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_regulator_value, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %val = getelementptr inbounds %struct.trace_event_raw_regulator_value, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %val, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.74, ptr noundef %add.ptr, i32 noundef %5) #25
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #15

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #16

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #16

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @of_get_regulator(ptr noundef %dev, ptr noundef %supply) unnamed_addr #0 align 64 {
entry:
  %args.i = alloca %struct.of_phandle_args, align 4
  %prop_name = alloca [64 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %prop_name) #25
  %0 = call ptr @memset(ptr %prop_name, i32 255, i32 64)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @of_get_regulator.__UNIQUE_ID_ddebug354, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@of_get_regulator, %do.end)) #25
          to label %if.then [label %do.end], !srcloc !997

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @of_get_regulator.__UNIQUE_ID_ddebug354, ptr noundef %dev, ptr noundef nonnull @.str.80, ptr noundef %supply) #25
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call4 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %prop_name, i32 noundef 64, ptr noundef nonnull @.str.81, ptr noundef %supply)
  %of_node = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %1 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %of_node, align 8
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %args.i) #25
  %3 = call ptr @memset(ptr %args.i, i32 255, i32 72)
  %call.i = call i32 @__of_parse_phandle_with_args(ptr noundef %2, ptr noundef nonnull %prop_name, ptr noundef null, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %args.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %of_parse_phandle.exit, label %of_parse_phandle.exit.thread

of_parse_phandle.exit.thread:                     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args.i) #25
  br label %if.then8

of_parse_phandle.exit:                            ; preds = %do.end
  %4 = ptrtoint ptr %args.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %args.i, align 4
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args.i) #25
  %tobool7.not = icmp eq ptr %5, null
  br i1 %tobool7.not, label %of_parse_phandle.exit.if.then8_crit_edge, label %of_parse_phandle.exit.cleanup_crit_edge

of_parse_phandle.exit.cleanup_crit_edge:          ; preds = %of_parse_phandle.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

of_parse_phandle.exit.if.then8_crit_edge:         ; preds = %of_parse_phandle.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then8

if.then8:                                         ; preds = %of_parse_phandle.exit.if.then8_crit_edge, %of_parse_phandle.exit.thread
  %6 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %of_node, align 8
  %call11 = call fastcc ptr @of_get_child_regulator(ptr noundef %7, ptr noundef nonnull %prop_name)
  %tobool12.not = icmp eq ptr %call11, null
  br i1 %tobool12.not, label %do.body15, label %if.then8.cleanup_crit_edge

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.body15:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @of_get_regulator.__UNIQUE_ID_ddebug355, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@of_get_regulator, %cleanup)) #25
          to label %if.then29 [label %cleanup], !srcloc !997

if.then29:                                        ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #27
  %8 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %of_node, align 8
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @of_get_regulator.__UNIQUE_ID_ddebug355, ptr noundef %dev, ptr noundef nonnull @.str.82, ptr noundef nonnull %prop_name, ptr noundef %9) #25
  br label %cleanup

cleanup:                                          ; preds = %if.then29, %do.body15, %if.then8.cleanup_crit_edge, %of_parse_phandle.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %call11, %if.then8.cleanup_crit_edge ], [ null, %if.then29 ], [ %5, %of_parse_phandle.exit.cleanup_crit_edge ], [ null, %do.body15 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %prop_name) #25
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_find_regulator_by_node(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #14

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #17

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @of_get_child_regulator(ptr noundef %parent, ptr noundef %prop_name) unnamed_addr #0 align 64 {
entry:
  %args.i = alloca %struct.of_phandle_args, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @of_get_next_child(ptr noundef %parent, ptr noundef null) #25
  %cmp.not19 = icmp eq ptr %call, null
  br i1 %cmp.not19, label %entry.cleanup_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %child.020 = phi ptr [ %call6, %for.inc.for.body_crit_edge ], [ %call, %entry.for.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %args.i) #25
  %0 = call ptr @memset(ptr %args.i, i32 255, i32 72)
  %call.i = call i32 @__of_parse_phandle_with_args(ptr noundef nonnull %child.020, ptr noundef %prop_name, ptr noundef null, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %args.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %of_parse_phandle.exit, label %of_parse_phandle.exit.thread

of_parse_phandle.exit.thread:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args.i) #25
  br label %if.then

of_parse_phandle.exit:                            ; preds = %for.body
  %1 = ptrtoint ptr %args.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %args.i, align 4
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args.i) #25
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %of_parse_phandle.exit.if.then_crit_edge, label %of_parse_phandle.exit.err_node_put_crit_edge

of_parse_phandle.exit.err_node_put_crit_edge:     ; preds = %of_parse_phandle.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %err_node_put

of_parse_phandle.exit.if.then_crit_edge:          ; preds = %of_parse_phandle.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then

if.then:                                          ; preds = %of_parse_phandle.exit.if.then_crit_edge, %of_parse_phandle.exit.thread
  %call2 = call fastcc ptr @of_get_child_regulator(ptr noundef nonnull %child.020, ptr noundef %prop_name)
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %for.inc, label %if.then.err_node_put_crit_edge

if.then.err_node_put_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %err_node_put

for.inc:                                          ; preds = %if.then
  %call6 = call ptr @of_get_next_child(ptr noundef %parent, ptr noundef nonnull %child.020) #25
  %cmp.not = icmp eq ptr %call6, null
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

err_node_put:                                     ; preds = %if.then.err_node_put_crit_edge, %of_parse_phandle.exit.err_node_put_crit_edge
  %regnode.0 = phi ptr [ %2, %of_parse_phandle.exit.err_node_put_crit_edge ], [ %call2, %if.then.err_node_put_crit_edge ]
  call void @of_node_put(ptr noundef nonnull %child.020) #25
  br label %cleanup

cleanup:                                          ; preds = %err_node_put, %for.inc.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %regnode.0, %err_node_put ], [ null, %entry.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__of_parse_phandle_with_args(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_next_child(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_node_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @class_find_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @regulator_match(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %data) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  %constraints.i = getelementptr i8, ptr %dev, i32 928
  %0 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.else.i_crit_edge, label %land.lhs.true.i

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool6.not.i = icmp eq ptr %7, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %7
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %3, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call2 = tail call i32 @strcmp(ptr noundef %retval.0.i, ptr noundef %data) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp eq i32 %call2, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @device_is_bound(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @set_supply(ptr noundef %rdev, ptr noundef %supply_rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @set_supply.__UNIQUE_ID_ddebug360, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@set_supply, %do.end)) #25
          to label %if.then [label %do.end], !srcloc !997

if.then:                                          ; preds = %entry
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %0 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.then.if.else.i_crit_edge, label %land.lhs.true.i

if.then.if.else.i_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then.if.else.i_crit_edge
  %4 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rdev, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool6.not.i = icmp eq ptr %7, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %7
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i19 = phi ptr [ %3, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %constraints.i20 = getelementptr inbounds %struct.regulator_dev, ptr %supply_rdev, i32 0, i32 14
  %8 = ptrtoint ptr %constraints.i20 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %constraints.i20, align 8
  %tobool.not.i21 = icmp eq ptr %9, null
  br i1 %tobool.not.i21, label %rdev_get_name.exit.if.else.i26_crit_edge, label %land.lhs.true.i23

rdev_get_name.exit.if.else.i26_crit_edge:         ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i26

land.lhs.true.i23:                                ; preds = %rdev_get_name.exit
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %tobool2.not.i22 = icmp eq ptr %11, null
  br i1 %tobool2.not.i22, label %land.lhs.true.i23.if.else.i26_crit_edge, label %land.lhs.true.i23.rdev_get_name.exit28_crit_edge

land.lhs.true.i23.rdev_get_name.exit28_crit_edge: ; preds = %land.lhs.true.i23
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit28

land.lhs.true.i23.if.else.i26_crit_edge:          ; preds = %land.lhs.true.i23
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i26

if.else.i26:                                      ; preds = %land.lhs.true.i23.if.else.i26_crit_edge, %rdev_get_name.exit.if.else.i26_crit_edge
  %12 = ptrtoint ptr %supply_rdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %supply_rdev, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %tobool6.not.i24 = icmp eq ptr %15, null
  %.str..i25 = select i1 %tobool6.not.i24, ptr @.str, ptr %15
  br label %rdev_get_name.exit28

rdev_get_name.exit28:                             ; preds = %if.else.i26, %land.lhs.true.i23.rdev_get_name.exit28_crit_edge
  %retval.0.i27 = phi ptr [ %11, %land.lhs.true.i23.rdev_get_name.exit28_crit_edge ], [ %.str..i25, %if.else.i26 ]
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @set_supply.__UNIQUE_ID_ddebug360, ptr noundef nonnull @.str.91, ptr noundef %retval.0.i19, ptr noundef %retval.0.i27) #25
  br label %do.end

do.end:                                           ; preds = %rdev_get_name.exit28, %entry
  %owner = getelementptr inbounds %struct.regulator_dev, ptr %supply_rdev, i32 0, i32 12
  %16 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %owner, align 4
  %call6 = tail call zeroext i1 @try_module_get(ptr noundef %17) #25
  br i1 %call6, label %if.end8, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end8:                                          ; preds = %do.end
  %dev = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 13
  %call9 = tail call fastcc ptr @create_regulator(ptr noundef %supply_rdev, ptr noundef %dev, ptr noundef nonnull @.str.92)
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 15
  %18 = ptrtoint ptr %supply to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call9, ptr %supply, align 4
  %cmp = icmp eq ptr %call9, null
  br i1 %cmp, label %if.end8.cleanup_crit_edge, label %if.end12

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end12:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #27
  %open_count = getelementptr inbounds %struct.regulator_dev, ptr %supply_rdev, i32 0, i32 3
  %19 = ptrtoint ptr %open_count to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %open_count, align 4
  %inc = add i32 %20, 1
  store i32 %inc, ptr %open_count, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end8.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end12 ], [ -19, %do.end.cleanup_crit_edge ], [ -12, %if.end8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kstrdup_const(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_link_nowarn(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @debugfs_create_dir(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_create_u32(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @debugfs_create_file(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @default_llseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @constraint_flags_read_file(ptr nocapture noundef readonly %file, ptr noundef %user_buf, i32 noundef %count, ptr noundef %ppos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %rdev = getelementptr inbounds %struct.regulator, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rdev, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %constraints, align 8
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %6 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3264, i32 noundef 4096) #31
  %tobool1.not = icmp eq ptr %call7.i, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %always_on = getelementptr inbounds %struct.regulation_constraints, ptr %5, i32 0, i32 28
  %7 = ptrtoint ptr %always_on to i32
  call void @__asan_load2_noabort(i32 %7)
  %bf.load = load i16, ptr %always_on, align 4
  %bf.lshr = lshr i16 %bf.load, 15
  %bf.cast = zext i16 %bf.lshr to i32
  %bf.lshr5 = lshr i16 %bf.load, 14
  %bf.clear = and i16 %bf.lshr5, 1
  %bf.cast6 = zext i16 %bf.clear to i32
  %bf.lshr8 = lshr i16 %bf.load, 13
  %bf.clear9 = and i16 %bf.lshr8, 1
  %bf.cast10 = zext i16 %bf.clear9 to i32
  %bf.lshr12 = lshr i16 %bf.load, 12
  %bf.clear13 = and i16 %bf.lshr12, 1
  %bf.cast14 = zext i16 %bf.clear13 to i32
  %bf.lshr16 = lshr i16 %bf.load, 11
  %bf.clear17 = and i16 %bf.lshr16, 1
  %bf.cast18 = zext i16 %bf.clear17 to i32
  %bf.lshr20 = lshr i16 %bf.load, 10
  %bf.clear21 = and i16 %bf.lshr20, 1
  %bf.cast22 = zext i16 %bf.clear21 to i32
  %bf.lshr24 = lshr i16 %bf.load, 9
  %bf.clear25 = and i16 %bf.lshr24, 1
  %bf.cast26 = zext i16 %bf.clear25 to i32
  %call27 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %call7.i, i32 noundef 4096, ptr noundef nonnull @.str.101, i32 noundef %bf.cast, i32 noundef %bf.cast6, i32 noundef %bf.cast10, i32 noundef %bf.cast14, i32 noundef %bf.cast18, i32 noundef %bf.cast22, i32 noundef %bf.cast26)
  %call28 = tail call i32 @simple_read_from_buffer(ptr noundef %user_buf, i32 noundef %count, ptr noundef %ppos, ptr noundef nonnull %call7.i, i32 noundef %call27) #25
  tail call void @kfree(ptr noundef nonnull %call7.i) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call28, %if.end3 ], [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_open(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_read_from_buffer(ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #20

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_link_remove(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_link(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_const(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @regulator_lock_recursive(ptr nocapture noundef readonly %rdev, ptr nocapture noundef writeonly %new_contended_rdev, ptr nocapture noundef %old_contended_rdev, ptr noundef %ww_ctx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 3
  %0 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp113 = icmp sgt i32 %1, 0
  br i1 %cmp113, label %for.body.lr.ph, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %coupling_desc = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0114 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %coupling_desc, align 4
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.0114
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end:                                           ; preds = %for.body
  %6 = ptrtoint ptr %old_contended_rdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %old_contended_rdev, align 4
  %cmp2.not = icmp eq ptr %5, %7
  br i1 %cmp2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 9
  %call.i = tail call i32 @ww_mutex_trylock(ptr noundef %mutex.i, ptr noundef %ww_ctx) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %regulator_lock_nested.exit.thread97

regulator_lock_nested.exit.thread97:              ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #27
  %ref_cnt13.i99 = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 11
  %8 = ptrtoint ptr %ref_cnt13.i99 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ref_cnt13.i99, align 8
  %inc14.i100 = add i32 %9, 1
  store i32 %inc14.i100, ptr %ref_cnt13.i99, align 8
  %10 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i28.i101 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i28.i101 to ptr
  %task16.i102 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task16.i102 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task16.i102, align 8
  %mutex_owner17.i103 = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 10
  %14 = ptrtoint ptr %mutex_owner17.i103 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %mutex_owner17.i103, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %if.end48

if.then.i:                                        ; preds = %if.then3
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 10
  %15 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mutex_owner.i, align 4
  %17 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %16, %20
  br i1 %cmp.i, label %regulator_lock_nested.exit.thread, label %if.end9.i

regulator_lock_nested.exit.thread:                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 11
  %21 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ref_cnt.i, align 8
  %inc.i = add i32 %22, 1
  store i32 %inc.i, ptr %ref_cnt.i, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %if.end48

if.end9.i:                                        ; preds = %if.then.i
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %call6.i = tail call i32 @ww_mutex_lock(ptr noundef %mutex.i, ptr noundef %ww_ctx) #25
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -35, i32 %call6.i)
  %cmp11.not.i = icmp eq i32 %call6.i, -35
  br i1 %cmp11.not.i, label %regulator_lock_nested.exit.thread95, label %regulator_lock_nested.exit

regulator_lock_nested.exit.thread95:              ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %23 = ptrtoint ptr %new_contended_rdev to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %5, ptr %new_contended_rdev, align 4
  br label %err_unlock

regulator_lock_nested.exit:                       ; preds = %if.end9.i
  %ref_cnt13.i = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 11
  %24 = ptrtoint ptr %ref_cnt13.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %ref_cnt13.i, align 8
  %inc14.i = add i32 %25, 1
  store i32 %inc14.i, ptr %ref_cnt13.i, align 8
  %26 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i28.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i28.i to ptr
  %task16.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task16.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task16.i, align 8
  %30 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %mutex_owner.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %31 = zext i32 %call6.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.374)
  switch i32 %call6.i, label %land.rhs [
    i32 0, label %regulator_lock_nested.exit.if.end48_crit_edge
    i32 -114, label %regulator_lock_nested.exit.if.end48_crit_edge141
  ]

regulator_lock_nested.exit.if.end48_crit_edge141: ; preds = %regulator_lock_nested.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end48

regulator_lock_nested.exit.if.end48_crit_edge:    ; preds = %regulator_lock_nested.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end48

land.rhs:                                         ; preds = %regulator_lock_nested.exit
  %.b83 = load i1, ptr @regulator_lock_recursive.__already_done, align 1
  br i1 %.b83, label %land.rhs.if.end48_crit_edge, label %if.then17, !prof !993

land.rhs.if.end48_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end48

if.then17:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_lock_recursive.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 271, i32 noundef 9, ptr noundef null) #25
  br label %if.end48

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %32 = ptrtoint ptr %old_contended_rdev to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %old_contended_rdev, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then17, %land.rhs.if.end48_crit_edge, %regulator_lock_nested.exit.if.end48_crit_edge, %regulator_lock_nested.exit.if.end48_crit_edge141, %regulator_lock_nested.exit.thread, %regulator_lock_nested.exit.thread97
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 15
  %33 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %supply, align 4
  %tobool49.not = icmp eq ptr %34, null
  br i1 %tobool49.not, label %if.end48.for.inc_crit_edge, label %land.lhs.true

if.end48.for.inc_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

land.lhs.true:                                    ; preds = %if.end48
  %n_coupled.i = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 7, i32 3
  %35 = ptrtoint ptr %n_coupled.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %n_coupled.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %36)
  %cmp9.i = icmp sgt i32 %36, 1
  br i1 %cmp9.i, label %for.body.lr.ph.i, label %land.lhs.true.if.then51_crit_edge

land.lhs.true.if.then51_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then51

for.body.lr.ph.i:                                 ; preds = %land.lhs.true
  %coupling_desc.i = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 7
  %37 = ptrtoint ptr %coupling_desc.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %coupling_desc.i, align 4
  %rdev2.i = getelementptr inbounds %struct.regulator, ptr %34, i32 0, i32 9
  %39 = ptrtoint ptr %rdev2.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rdev2.i, align 4
  %arrayidx.i109 = getelementptr ptr, ptr %38, i32 1
  %41 = ptrtoint ptr %arrayidx.i109 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx.i109, align 4
  %cmp3.i110 = icmp eq ptr %40, %42
  br i1 %cmp3.i110, label %for.body.lr.ph.i.for.inc_crit_edge, label %for.body.lr.ph.i.for.cond.i_crit_edge

for.body.lr.ph.i.for.cond.i_crit_edge:            ; preds = %for.body.lr.ph.i
  br label %for.cond.i

for.body.lr.ph.i.for.inc_crit_edge:               ; preds = %for.body.lr.ph.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %for.body.lr.ph.i.for.cond.i_crit_edge
  %i.010.i111 = phi i32 [ %inc.i84, %for.body.i.for.cond.i_crit_edge ], [ 1, %for.body.lr.ph.i.for.cond.i_crit_edge ]
  %inc.i84 = add nuw nsw i32 %i.010.i111, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i84, i32 %36)
  %exitcond.not.i = icmp eq i32 %inc.i84, %36
  br i1 %exitcond.not.i, label %for.cond.i.regulator_supply_is_couple.exit_crit_edge, label %for.body.i

for.cond.i.regulator_supply_is_couple.exit_crit_edge: ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_supply_is_couple.exit

for.body.i:                                       ; preds = %for.cond.i
  %arrayidx.i = getelementptr ptr, ptr %38, i32 %inc.i84
  %43 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx.i, align 4
  %cmp3.i = icmp eq ptr %40, %44
  br i1 %cmp3.i, label %for.body.i.regulator_supply_is_couple.exit_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.cond.i

for.body.i.regulator_supply_is_couple.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_supply_is_couple.exit

regulator_supply_is_couple.exit:                  ; preds = %for.body.i.regulator_supply_is_couple.exit_crit_edge, %for.cond.i.regulator_supply_is_couple.exit_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i84, i32 %36)
  %cmp.i85.le = icmp slt i32 %inc.i84, %36
  br i1 %cmp.i85.le, label %regulator_supply_is_couple.exit.for.inc_crit_edge, label %regulator_supply_is_couple.exit.if.then51_crit_edge

regulator_supply_is_couple.exit.if.then51_crit_edge: ; preds = %regulator_supply_is_couple.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then51

regulator_supply_is_couple.exit.for.inc_crit_edge: ; preds = %regulator_supply_is_couple.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then51:                                        ; preds = %regulator_supply_is_couple.exit.if.then51_crit_edge, %land.lhs.true.if.then51_crit_edge
  %rdev53 = getelementptr inbounds %struct.regulator, ptr %34, i32 0, i32 9
  %45 = ptrtoint ptr %rdev53 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %rdev53, align 4
  %call54 = tail call fastcc i32 @regulator_lock_recursive(ptr noundef %46, ptr noundef %new_contended_rdev, ptr noundef %old_contended_rdev, ptr noundef %ww_ctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %if.then51.for.inc_crit_edge, label %if.then56

if.then51.for.inc_crit_edge:                      ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then56:                                        ; preds = %if.then51
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i86 = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 11
  %47 = ptrtoint ptr %ref_cnt.i86 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %ref_cnt.i86, align 8
  %dec.i = add i32 %48, -1
  store i32 %dec.i, ptr %ref_cnt.i86, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i87 = icmp eq i32 %dec.i, 0
  br i1 %cmp.i87, label %if.then.i90, label %if.then56.if.end.i_crit_edge

if.then56.if.end.i_crit_edge:                     ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i90:                                      ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i88 = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 10
  %49 = ptrtoint ptr %mutex_owner.i88 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %mutex_owner.i88, align 4
  %mutex.i89 = getelementptr inbounds %struct.regulator_dev, ptr %5, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i89) #25
  %50 = ptrtoint ptr %ref_cnt.i86 to i32
  call void @__asan_load4_noabort(i32 %50)
  %.pr.i = load i32, ptr %ref_cnt.i86, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i90, %if.then56.if.end.i_crit_edge
  %51 = phi i32 [ %.pr.i, %if.then.i90 ], [ %dec.i, %if.then56.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %cmp2.i = icmp slt i32 %51, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %err_unlock

for.inc:                                          ; preds = %if.then51.for.inc_crit_edge, %regulator_supply_is_couple.exit.for.inc_crit_edge, %for.body.lr.ph.i.for.inc_crit_edge, %if.end48.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0114, 1
  %52 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %n_coupled, align 4
  %cmp = icmp slt i32 %inc, %53
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

err_unlock:                                       ; preds = %regulator_unlock.exit, %regulator_lock_nested.exit.thread95
  %err.0 = phi i32 [ -35, %regulator_lock_nested.exit.thread95 ], [ %call54, %regulator_unlock.exit ]
  tail call fastcc void @regulator_unlock_recursive(ptr noundef %rdev, i32 noundef %i.0114)
  br label %cleanup

cleanup:                                          ; preds = %err_unlock, %for.inc.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %err_unlock ], [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_check_no_locks_freed(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #21

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_locks_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ww_mutex_lock(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @regulator_unlock_recursive(ptr nocapture noundef readonly %rdev, i32 noundef %n_coupled) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n_coupled)
  %cmp21 = icmp sgt i32 %n_coupled, 0
  br i1 %cmp21, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %coupling_desc = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.022 = phi i32 [ %n_coupled, %for.body.lr.ph ], [ %sub, %for.inc.for.body_crit_edge ]
  %0 = ptrtoint ptr %coupling_desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %coupling_desc, align 4
  %sub = add nsw i32 %i.022, -1
  %arrayidx = getelementptr ptr, ptr %1, i32 %sub
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end:                                           ; preds = %for.body
  %supply = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 15
  %4 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %supply, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %if.end.if.end7_crit_edge, label %land.lhs.true

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %n_coupled.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 7, i32 3
  %6 = ptrtoint ptr %n_coupled.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %n_coupled.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp9.i = icmp sgt i32 %7, 1
  br i1 %cmp9.i, label %for.body.lr.ph.i, label %land.lhs.true.if.then2_crit_edge

land.lhs.true.if.then2_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then2

for.body.lr.ph.i:                                 ; preds = %land.lhs.true
  %coupling_desc.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 7
  %8 = ptrtoint ptr %coupling_desc.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %coupling_desc.i, align 4
  %rdev2.i = getelementptr inbounds %struct.regulator, ptr %5, i32 0, i32 9
  %10 = ptrtoint ptr %rdev2.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rdev2.i, align 4
  %arrayidx.i17 = getelementptr ptr, ptr %9, i32 1
  %12 = ptrtoint ptr %arrayidx.i17 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i17, align 4
  %cmp3.i18 = icmp eq ptr %11, %13
  br i1 %cmp3.i18, label %for.body.lr.ph.i.if.end7_crit_edge, label %for.body.lr.ph.i.for.cond.i_crit_edge

for.body.lr.ph.i.for.cond.i_crit_edge:            ; preds = %for.body.lr.ph.i
  br label %for.cond.i

for.body.lr.ph.i.if.end7_crit_edge:               ; preds = %for.body.lr.ph.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %for.body.lr.ph.i.for.cond.i_crit_edge
  %i.010.i19 = phi i32 [ %inc.i, %for.body.i.for.cond.i_crit_edge ], [ 1, %for.body.lr.ph.i.for.cond.i_crit_edge ]
  %inc.i = add nuw nsw i32 %i.010.i19, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %7)
  %exitcond.not.i = icmp eq i32 %inc.i, %7
  br i1 %exitcond.not.i, label %for.cond.i.regulator_supply_is_couple.exit_crit_edge, label %for.body.i

for.cond.i.regulator_supply_is_couple.exit_crit_edge: ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_supply_is_couple.exit

for.body.i:                                       ; preds = %for.cond.i
  %arrayidx.i = getelementptr ptr, ptr %9, i32 %inc.i
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.i, align 4
  %cmp3.i = icmp eq ptr %11, %15
  br i1 %cmp3.i, label %for.body.i.regulator_supply_is_couple.exit_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.cond.i

for.body.i.regulator_supply_is_couple.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_supply_is_couple.exit

regulator_supply_is_couple.exit:                  ; preds = %for.body.i.regulator_supply_is_couple.exit_crit_edge, %for.cond.i.regulator_supply_is_couple.exit_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %7)
  %cmp.i.le = icmp slt i32 %inc.i, %7
  br i1 %cmp.i.le, label %regulator_supply_is_couple.exit.if.end7_crit_edge, label %regulator_supply_is_couple.exit.if.then2_crit_edge

regulator_supply_is_couple.exit.if.then2_crit_edge: ; preds = %regulator_supply_is_couple.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then2

regulator_supply_is_couple.exit.if.end7_crit_edge: ; preds = %regulator_supply_is_couple.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end7

if.then2:                                         ; preds = %regulator_supply_is_couple.exit.if.then2_crit_edge, %land.lhs.true.if.then2_crit_edge
  %rdev4 = getelementptr inbounds %struct.regulator, ptr %5, i32 0, i32 9
  %16 = ptrtoint ptr %rdev4 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rdev4, align 4
  %n_coupled6 = getelementptr inbounds %struct.regulator_dev, ptr %17, i32 0, i32 7, i32 3
  %18 = ptrtoint ptr %n_coupled6 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %n_coupled6, align 4
  tail call fastcc void @regulator_unlock_recursive(ptr noundef %17, i32 noundef %19)
  br label %if.end7

if.end7:                                          ; preds = %if.then2, %regulator_supply_is_couple.exit.if.end7_crit_edge, %for.body.lr.ph.i.if.end7_crit_edge, %if.end.if.end7_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 11
  %20 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %21, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i15 = icmp eq i32 %dec.i, 0
  br i1 %cmp.i15, label %if.then.i, label %if.end7.if.end.i_crit_edge

if.end7.if.end.i_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 10
  %22 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %3, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %23 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end7.if.end.i_crit_edge
  %24 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.end7.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp2.i = icmp slt i32 %24, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %for.inc

for.inc:                                          ; preds = %regulator_unlock.exit, %for.body.for.inc_crit_edge
  %cmp = icmp sgt i32 %i.022, 1
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ww_mutex_trylock(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_do_enable(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %0 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.lhs.true.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %entry
  %enable_time.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 26
  %2 = ptrtoint ptr %enable_time.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %enable_time.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool2.not.i = icmp eq i32 %3, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %land.lhs.true.i._regulator_get_enable_time.exit_crit_edge

land.lhs.true.i._regulator_get_enable_time.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_get_enable_time.exit

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %4 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rdev, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops.i, align 4
  %enable_time5.i = getelementptr inbounds %struct.regulator_ops, ptr %7, i32 0, i32 20
  %8 = ptrtoint ptr %enable_time5.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %enable_time5.i, align 4
  %tobool6.not.i = icmp eq ptr %9, null
  br i1 %tobool6.not.i, label %if.end11.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %9(ptr noundef %rdev) #25
  br label %_regulator_get_enable_time.exit

if.end11.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %enable_time13.i = getelementptr inbounds %struct.regulator_desc, ptr %5, i32 0, i32 57
  %10 = ptrtoint ptr %enable_time13.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %enable_time13.i, align 4
  br label %_regulator_get_enable_time.exit

_regulator_get_enable_time.exit:                  ; preds = %if.end11.i, %if.then7.i, %land.lhs.true.i._regulator_get_enable_time.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %if.then7.i ], [ %11, %if.end11.i ], [ %3, %land.lhs.true.i._regulator_get_enable_time.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i)
  %cmp = icmp sgt i32 %retval.0.i, -1
  br i1 %cmp, label %_regulator_get_enable_time.exit.if.end_crit_edge, label %do.end

_regulator_get_enable_time.exit.if.end_crit_edge: ; preds = %_regulator_get_enable_time.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.end:                                           ; preds = %_regulator_get_enable_time.exit
  %12 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i132 = icmp eq ptr %13, null
  br i1 %tobool.not.i132, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i134

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i134:                               ; preds = %do.end
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %tobool2.not.i133 = icmp eq ptr %15, null
  br i1 %tobool2.not.i133, label %land.lhs.true.i134.if.else.i_crit_edge, label %land.lhs.true.i134.rdev_get_name.exit_crit_edge

land.lhs.true.i134.rdev_get_name.exit_crit_edge:  ; preds = %land.lhs.true.i134
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i134.if.else.i_crit_edge:           ; preds = %land.lhs.true.i134
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i134.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %16 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rdev, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 4
  %tobool6.not.i135 = icmp eq ptr %19, null
  %.str..i = select i1 %tobool6.not.i135, ptr @.str, ptr %19
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i134.rdev_get_name.exit_crit_edge
  %retval.0.i136 = phi ptr [ %15, %land.lhs.true.i134.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %20 = inttoptr i32 %retval.0.i to ptr
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.110, ptr noundef %retval.0.i136, ptr noundef nonnull %20) #30
  br label %if.end

if.end:                                           ; preds = %rdev_get_name.exit, %_regulator_get_enable_time.exit.if.end_crit_edge
  %delay.0 = phi i32 [ 0, %rdev_get_name.exit ], [ %retval.0.i, %_regulator_get_enable_time.exit.if.end_crit_edge ]
  %21 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i138 = icmp eq ptr %22, null
  br i1 %tobool.not.i138, label %if.end.if.else.i143_crit_edge, label %land.lhs.true.i140

if.end.if.else.i143_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i143

land.lhs.true.i140:                               ; preds = %if.end
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %tobool2.not.i139 = icmp eq ptr %24, null
  br i1 %tobool2.not.i139, label %land.lhs.true.i140.if.else.i143_crit_edge, label %land.lhs.true.i140.rdev_get_name.exit145_crit_edge

land.lhs.true.i140.rdev_get_name.exit145_crit_edge: ; preds = %land.lhs.true.i140
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit145

land.lhs.true.i140.if.else.i143_crit_edge:        ; preds = %land.lhs.true.i140
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i143

if.else.i143:                                     ; preds = %land.lhs.true.i140.if.else.i143_crit_edge, %if.end.if.else.i143_crit_edge
  %25 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %rdev, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %tobool6.not.i141 = icmp eq ptr %28, null
  %.str..i142 = select i1 %tobool6.not.i141, ptr @.str, ptr %28
  br label %rdev_get_name.exit145

rdev_get_name.exit145:                            ; preds = %if.else.i143, %land.lhs.true.i140.rdev_get_name.exit145_crit_edge
  %retval.0.i144 = phi ptr [ %24, %land.lhs.true.i140.rdev_get_name.exit145_crit_edge ], [ %.str..i142, %if.else.i143 ]
  tail call fastcc void @trace_regulator_enable(ptr noundef %retval.0.i144)
  %29 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %rdev, align 8
  %off_on_delay = getelementptr inbounds %struct.regulator_desc, ptr %30, i32 0, i32 58
  %31 = ptrtoint ptr %off_on_delay to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %off_on_delay, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not = icmp eq i32 %32, 0
  br i1 %tobool.not, label %rdev_get_name.exit145.if.end18_crit_edge, label %land.lhs.true

rdev_get_name.exit145.if.end18_crit_edge:         ; preds = %rdev_get_name.exit145
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end18

land.lhs.true:                                    ; preds = %rdev_get_name.exit145
  %last_off = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 23
  %33 = ptrtoint ptr %last_off to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %last_off, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %34)
  %tobool5.not = icmp eq i64 %34, 0
  br i1 %tobool5.not, label %land.lhs.true.if.end18_crit_edge, label %if.then6

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end18

if.then6:                                         ; preds = %land.lhs.true
  %conv = zext i32 %32 to i64
  %mul.i = mul nuw nsw i64 %conv, 1000
  %add.i = add i64 %34, %mul.i
  %call11 = tail call i64 @ktime_get() #25
  %sub.i = sub i64 %add.i, %call11
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i)
  %cmp8.i.i.i = icmp slt i64 %sub.i, 0
  %35 = tail call i64 @llvm.abs.i64(i64 %sub.i, i1 false) #25
  %36 = tail call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %35, i32 0) #33, !srcloc !1014
  %asmresult.i.i.i.i = extractvalue { i64, i32 } %36, 0
  %asmresult4.i.i.i.i = extractvalue { i64, i32 } %36, 1
  %37 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %35, i64 %asmresult.i.i.i.i, i32 %asmresult4.i.i.i.i) #33, !srcloc !1015
  %asmresult10.i.i.i.i = extractvalue { i64, i32 } %37, 0
  %div1811.i.i.i = lshr i64 %asmresult10.i.i.i.i, 9
  %sub210.i.i.i = sub nsw i64 0, %div1811.i.i.i
  %cond213.i.i.i = select i1 %cmp8.i.i.i, i64 %sub210.i.i.i, i64 %div1811.i.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %cond213.i.i.i)
  %cmp13 = icmp sgt i64 %cond213.i.i.i, 0
  br i1 %cmp13, label %if.then15, label %if.then6.if.end18_crit_edge

if.then6.if.end18_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end18

if.then15:                                        ; preds = %if.then6
  %conv16 = trunc i64 %cond213.i.i.i to i32
  %conv16.frozen = freeze i32 %conv16
  %div.i = udiv i32 %conv16.frozen, 1000
  %38 = mul i32 %div.i, 1000
  %rem.i.decomposed = sub i32 %conv16.frozen, %38
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %conv16)
  %39 = icmp ult i32 %conv16, 1000
  br i1 %39, label %if.then15.if.end3.i_crit_edge, label %if.then.i

if.then15.if.end3.i_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end3.i

if.then.i:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_const_cmp4(i32 20000, i32 %conv16)
  %cmp1.i = icmp ult i32 %conv16, 20000
  br i1 %cmp1.i, label %if.then2.i, label %if.else.i148

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  %mul.i146 = mul nuw i32 %div.i, 1000
  %add.i147 = add i32 %mul.i146, %rem.i.decomposed
  br label %if.end3.i

if.else.i148:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @msleep(i32 noundef %div.i) #25
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.else.i148, %if.then2.i, %if.then15.if.end3.i_crit_edge
  %us.0.i = phi i32 [ %add.i147, %if.then2.i ], [ %rem.i.decomposed, %if.else.i148 ], [ %rem.i.decomposed, %if.then15.if.end3.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %us.0.i)
  %cmp4.i = icmp ugt i32 %us.0.i, 9
  br i1 %cmp4.i, label %if.then5.i, label %cond.false11.i

if.then5.i:                                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #27
  %add6.i = add i32 %us.0.i, 100
  tail call void @usleep_range_state(i32 noundef %us.0.i, i32 noundef %add6.i, i32 noundef 2) #25
  br label %if.end18

cond.false11.i:                                   ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %40 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %40(i32 noundef %us.0.i) #25
  br label %if.end18

if.end18:                                         ; preds = %cond.false11.i, %if.then5.i, %if.then6.if.end18_crit_edge, %land.lhs.true.if.end18_crit_edge, %rdev_get_name.exit145.if.end18_crit_edge
  %ena_pin = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 21
  %41 = ptrtoint ptr %ena_pin to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ena_pin, align 4
  %tobool19.not = icmp eq ptr %42, null
  br i1 %tobool19.not, label %if.else31, label %if.then20

if.then20:                                        ; preds = %if.end18
  %ena_gpio_state = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 22
  %43 = ptrtoint ptr %ena_gpio_state to i32
  call void @__asan_load1_noabort(i32 %43)
  %bf.load = load i8, ptr %ena_gpio_state, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool21.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool21.not, label %if.end.i150, label %if.then20.if.end45_crit_edge

if.then20.if.end45_crit_edge:                     ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end45

if.end.i150:                                      ; preds = %if.then20
  %enable_count.i = getelementptr inbounds %struct.regulator_enable_gpio, ptr %42, i32 0, i32 2
  %44 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %enable_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp.i = icmp eq i32 %45, 0
  br i1 %cmp.i, label %if.then3.i, label %if.end.i150.if.end27_crit_edge

if.end.i150.if.end27_crit_edge:                   ; preds = %if.end.i150
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end27

if.then3.i:                                       ; preds = %if.end.i150
  call void @__sanitizer_cov_trace_pc() #27
  %gpiod.i = getelementptr inbounds %struct.regulator_enable_gpio, ptr %42, i32 0, i32 1
  %46 = ptrtoint ptr %gpiod.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %gpiod.i, align 4
  tail call void @gpiod_set_value_cansleep(ptr noundef %47, i32 noundef 1) #25
  br label %if.end27

if.end27:                                         ; preds = %if.then3.i, %if.end.i150.if.end27_crit_edge
  %48 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %enable_count.i, align 4
  %inc.i = add i32 %49, 1
  store i32 %inc.i, ptr %enable_count.i, align 4
  %50 = ptrtoint ptr %ena_gpio_state to i32
  call void @__asan_load1_noabort(i32 %50)
  %bf.load29 = load i8, ptr %ena_gpio_state, align 8
  %bf.set = or i8 %bf.load29, -128
  store i8 %bf.set, ptr %ena_gpio_state, align 8
  br label %if.end45

if.else31:                                        ; preds = %if.end18
  %51 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %rdev, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %52, i32 0, i32 10
  %53 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ops, align 4
  %enable = getelementptr inbounds %struct.regulator_ops, ptr %54, i32 0, i32 14
  %55 = ptrtoint ptr %enable to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %enable, align 4
  %tobool33.not = icmp eq ptr %56, null
  br i1 %tobool33.not, label %if.else31.cleanup90_crit_edge, label %if.then34

if.else31.cleanup90_crit_edge:                    ; preds = %if.else31
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup90

if.then34:                                        ; preds = %if.else31
  %call38 = tail call i32 %56(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %cmp39 = icmp slt i32 %call38, 0
  br i1 %cmp39, label %if.then34.cleanup90_crit_edge, label %if.then34.if.end45_crit_edge

if.then34.if.end45_crit_edge:                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end45

if.then34.cleanup90_crit_edge:                    ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup90

if.end45:                                         ; preds = %if.then34.if.end45_crit_edge, %if.end27, %if.then20.if.end45_crit_edge
  %57 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i154 = icmp eq ptr %58, null
  br i1 %tobool.not.i154, label %if.end45.if.else.i159_crit_edge, label %land.lhs.true.i156

if.end45.if.else.i159_crit_edge:                  ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i159

land.lhs.true.i156:                               ; preds = %if.end45
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %58, align 4
  %tobool2.not.i155 = icmp eq ptr %60, null
  br i1 %tobool2.not.i155, label %land.lhs.true.i156.if.else.i159_crit_edge, label %land.lhs.true.i156.rdev_get_name.exit161_crit_edge

land.lhs.true.i156.rdev_get_name.exit161_crit_edge: ; preds = %land.lhs.true.i156
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit161

land.lhs.true.i156.if.else.i159_crit_edge:        ; preds = %land.lhs.true.i156
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i159

if.else.i159:                                     ; preds = %land.lhs.true.i156.if.else.i159_crit_edge, %if.end45.if.else.i159_crit_edge
  %61 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %rdev, align 8
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %62, align 4
  %tobool6.not.i157 = icmp eq ptr %64, null
  %.str..i158 = select i1 %tobool6.not.i157, ptr @.str, ptr %64
  br label %rdev_get_name.exit161

rdev_get_name.exit161:                            ; preds = %if.else.i159, %land.lhs.true.i156.rdev_get_name.exit161_crit_edge
  %retval.0.i160 = phi ptr [ %60, %land.lhs.true.i156.rdev_get_name.exit161_crit_edge ], [ %.str..i158, %if.else.i159 ]
  tail call fastcc void @trace_regulator_enable_delay(ptr noundef %retval.0.i160)
  %65 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %rdev, align 8
  %poll_enabled_time = getelementptr inbounds %struct.regulator_desc, ptr %66, i32 0, i32 59
  %67 = ptrtoint ptr %poll_enabled_time to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %poll_enabled_time, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool48.not = icmp eq i32 %68, 0
  br i1 %tobool48.not, label %if.else87, label %while.cond.preheader

while.cond.preheader:                             ; preds = %rdev_get_name.exit161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %delay.0)
  %cond130228 = icmp eq i32 %delay.0, 0
  br i1 %cond130228, label %while.cond.preheader.do.end82_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.do.end82_crit_edge:          ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end82

while.body:                                       ; preds = %if.end74.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %time_remaining.0229 = phi i32 [ %sub, %if.end74.while.body_crit_edge ], [ %delay.0, %while.cond.preheader.while.body_crit_edge ]
  %69 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %rdev, align 8
  %poll_enabled_time53 = getelementptr inbounds %struct.regulator_desc, ptr %70, i32 0, i32 59
  %71 = ptrtoint ptr %poll_enabled_time53 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %poll_enabled_time53, align 4
  %.frozen = freeze i32 %72
  %div.i162 = udiv i32 %.frozen, 1000
  %73 = mul i32 %div.i162, 1000
  %rem.i163.decomposed = sub i32 %.frozen, %73
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %72)
  %74 = icmp ult i32 %72, 1000
  br i1 %74, label %while.body.if.end3.i172_crit_edge, label %if.then.i165

while.body.if.end3.i172_crit_edge:                ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end3.i172

if.then.i165:                                     ; preds = %while.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 20000, i32 %72)
  %cmp1.i164 = icmp ult i32 %72, 20000
  br i1 %cmp1.i164, label %if.then2.i168, label %if.else.i169

if.then2.i168:                                    ; preds = %if.then.i165
  call void @__sanitizer_cov_trace_pc() #27
  %mul.i166 = mul nuw i32 %div.i162, 1000
  %add.i167 = add i32 %mul.i166, %rem.i163.decomposed
  br label %if.end3.i172

if.else.i169:                                     ; preds = %if.then.i165
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @msleep(i32 noundef %div.i162) #25
  br label %if.end3.i172

if.end3.i172:                                     ; preds = %if.else.i169, %if.then2.i168, %while.body.if.end3.i172_crit_edge
  %us.0.i170 = phi i32 [ %add.i167, %if.then2.i168 ], [ %rem.i163.decomposed, %if.else.i169 ], [ %rem.i163.decomposed, %while.body.if.end3.i172_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %us.0.i170)
  %cmp4.i171 = icmp ugt i32 %us.0.i170, 9
  br i1 %cmp4.i171, label %if.then5.i174, label %cond.false11.i178

if.then5.i174:                                    ; preds = %if.end3.i172
  call void @__sanitizer_cov_trace_pc() #27
  %add6.i173 = add i32 %us.0.i170, 100
  tail call void @usleep_range_state(i32 noundef %us.0.i170, i32 noundef %add6.i173, i32 noundef 2) #25
  br label %_regulator_enable_delay.exit179

cond.false11.i178:                                ; preds = %if.end3.i172
  call void @__sanitizer_cov_trace_pc() #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %75 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %75(i32 noundef %us.0.i170) #25
  br label %_regulator_enable_delay.exit179

_regulator_enable_delay.exit179:                  ; preds = %cond.false11.i178, %if.then5.i174
  %76 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %rdev, align 8
  %ops55 = getelementptr inbounds %struct.regulator_desc, ptr %77, i32 0, i32 10
  %78 = ptrtoint ptr %ops55 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %ops55, align 4
  %get_status = getelementptr inbounds %struct.regulator_ops, ptr %79, i32 0, i32 25
  %80 = ptrtoint ptr %get_status to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %get_status, align 4
  %tobool56.not = icmp eq ptr %81, null
  br i1 %tobool56.not, label %if.else67, label %if.then57

if.then57:                                        ; preds = %_regulator_enable_delay.exit179
  %call.i181 = tail call i32 %81(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i181)
  %cmp.i182 = icmp slt i32 %call.i181, 0
  br i1 %cmp.i182, label %do.end.i, label %if.end.i183

do.end.i:                                         ; preds = %if.then57
  %82 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i.i = icmp eq ptr %83, null
  br i1 %tobool.not.i.i, label %do.end.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

do.end.i.if.else.i.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %83, align 4
  %tobool2.not.i.i = icmp eq ptr %85, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i._regulator_check_status_enabled.exit_crit_edge

land.lhs.true.i.i._regulator_check_status_enabled.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_check_status_enabled.exit

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %do.end.i.if.else.i.i_crit_edge
  %86 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %rdev, align 8
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %87, align 4
  %tobool6.not.i.i = icmp eq ptr %89, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %89
  br label %_regulator_check_status_enabled.exit

if.end.i183:                                      ; preds = %if.then57
  %90 = zext i32 %call.i181 to i64
  call void @__sanitizer_cov_trace_switch(i64 %90, ptr @__sancov_gen_cov_switch_values.375)
  switch i32 %call.i181, label %if.end.i183.if.end88_crit_edge [
    i32 0, label %if.end.i183.if.end74_crit_edge
    i32 2, label %if.end.i183.if.end74_crit_edge230
    i32 8, label %if.end.i183.if.end74_crit_edge231
  ]

if.end.i183.if.end74_crit_edge231:                ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end74

if.end.i183.if.end74_crit_edge230:                ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end74

if.end.i183.if.end74_crit_edge:                   ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end74

if.end.i183.if.end88_crit_edge:                   ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end88

_regulator_check_status_enabled.exit:             ; preds = %if.else.i.i, %land.lhs.true.i.i._regulator_check_status_enabled.exit_crit_edge
  %retval.0.i.i = phi ptr [ %85, %land.lhs.true.i.i._regulator_check_status_enabled.exit_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.118, ptr noundef %retval.0.i.i, i32 noundef %call.i181) #30
  br label %cleanup90

if.else67:                                        ; preds = %_regulator_enable_delay.exit179
  %is_enabled = getelementptr inbounds %struct.regulator_ops, ptr %79, i32 0, i32 16
  %91 = ptrtoint ptr %is_enabled to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %is_enabled, align 4
  %call70 = tail call i32 %92(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %if.else67.if.end74_crit_edge, label %if.else67.if.end88_crit_edge

if.else67.if.end88_crit_edge:                     ; preds = %if.else67
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end88

if.else67.if.end74_crit_edge:                     ; preds = %if.else67
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end74

if.end74:                                         ; preds = %if.else67.if.end74_crit_edge, %if.end.i183.if.end74_crit_edge, %if.end.i183.if.end74_crit_edge230, %if.end.i183.if.end74_crit_edge231
  %93 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %rdev, align 8
  %poll_enabled_time76 = getelementptr inbounds %struct.regulator_desc, ptr %94, i32 0, i32 59
  %95 = ptrtoint ptr %poll_enabled_time76 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %poll_enabled_time76, align 4
  %sub = sub i32 %time_remaining.0229, %96
  %cond130 = icmp eq i32 %sub, 0
  br i1 %cond130, label %if.end74.do.end82_crit_edge, label %if.end74.while.body_crit_edge

if.end74.while.body_crit_edge:                    ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #27
  br label %while.body

if.end74.do.end82_crit_edge:                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end82

do.end82:                                         ; preds = %if.end74.do.end82_crit_edge, %while.cond.preheader.do.end82_crit_edge
  %97 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i186 = icmp eq ptr %98, null
  br i1 %tobool.not.i186, label %do.end82.if.else.i191_crit_edge, label %land.lhs.true.i188

do.end82.if.else.i191_crit_edge:                  ; preds = %do.end82
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i191

land.lhs.true.i188:                               ; preds = %do.end82
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %98, align 4
  %tobool2.not.i187 = icmp eq ptr %100, null
  br i1 %tobool2.not.i187, label %land.lhs.true.i188.if.else.i191_crit_edge, label %land.lhs.true.i188.rdev_get_name.exit193_crit_edge

land.lhs.true.i188.rdev_get_name.exit193_crit_edge: ; preds = %land.lhs.true.i188
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit193

land.lhs.true.i188.if.else.i191_crit_edge:        ; preds = %land.lhs.true.i188
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i191

if.else.i191:                                     ; preds = %land.lhs.true.i188.if.else.i191_crit_edge, %do.end82.if.else.i191_crit_edge
  %101 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %rdev, align 8
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %102, align 4
  %tobool6.not.i189 = icmp eq ptr %104, null
  %.str..i190 = select i1 %tobool6.not.i189, ptr @.str, ptr %104
  br label %rdev_get_name.exit193

rdev_get_name.exit193:                            ; preds = %if.else.i191, %land.lhs.true.i188.rdev_get_name.exit193_crit_edge
  %retval.0.i192 = phi ptr [ %100, %land.lhs.true.i188.rdev_get_name.exit193_crit_edge ], [ %.str..i190, %if.else.i191 ]
  %call85 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.113, ptr noundef %retval.0.i192) #30
  br label %cleanup90

if.else87:                                        ; preds = %rdev_get_name.exit161
  %delay.0.frozen = freeze i32 %delay.0
  %div.i194 = udiv i32 %delay.0.frozen, 1000
  %105 = mul i32 %div.i194, 1000
  %rem.i195.decomposed = sub i32 %delay.0.frozen, %105
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %delay.0)
  %106 = icmp ult i32 %delay.0, 1000
  br i1 %106, label %if.else87.if.end3.i204_crit_edge, label %if.then.i197

if.else87.if.end3.i204_crit_edge:                 ; preds = %if.else87
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end3.i204

if.then.i197:                                     ; preds = %if.else87
  call void @__sanitizer_cov_trace_const_cmp4(i32 20000, i32 %delay.0)
  %cmp1.i196 = icmp ult i32 %delay.0, 20000
  br i1 %cmp1.i196, label %if.then2.i200, label %if.else.i201

if.then2.i200:                                    ; preds = %if.then.i197
  call void @__sanitizer_cov_trace_pc() #27
  %mul.i198 = mul nuw nsw i32 %div.i194, 1000
  %add.i199 = add nuw i32 %mul.i198, %rem.i195.decomposed
  br label %if.end3.i204

if.else.i201:                                     ; preds = %if.then.i197
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @msleep(i32 noundef %div.i194) #25
  br label %if.end3.i204

if.end3.i204:                                     ; preds = %if.else.i201, %if.then2.i200, %if.else87.if.end3.i204_crit_edge
  %us.0.i202 = phi i32 [ %add.i199, %if.then2.i200 ], [ %rem.i195.decomposed, %if.else.i201 ], [ %rem.i195.decomposed, %if.else87.if.end3.i204_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %us.0.i202)
  %cmp4.i203 = icmp ugt i32 %us.0.i202, 9
  br i1 %cmp4.i203, label %if.then5.i206, label %cond.false11.i210

if.then5.i206:                                    ; preds = %if.end3.i204
  call void @__sanitizer_cov_trace_pc() #27
  %add6.i205 = add nuw i32 %us.0.i202, 100
  tail call void @usleep_range_state(i32 noundef %us.0.i202, i32 noundef %add6.i205, i32 noundef 2) #25
  br label %if.end88

cond.false11.i210:                                ; preds = %if.end3.i204
  call void @__sanitizer_cov_trace_pc() #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %107 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %107(i32 noundef %us.0.i202) #25
  br label %if.end88

if.end88:                                         ; preds = %cond.false11.i210, %if.then5.i206, %if.else67.if.end88_crit_edge, %if.end.i183.if.end88_crit_edge
  %108 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i213 = icmp eq ptr %109, null
  br i1 %tobool.not.i213, label %if.end88.if.else.i218_crit_edge, label %land.lhs.true.i215

if.end88.if.else.i218_crit_edge:                  ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i218

land.lhs.true.i215:                               ; preds = %if.end88
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %109, align 4
  %tobool2.not.i214 = icmp eq ptr %111, null
  br i1 %tobool2.not.i214, label %land.lhs.true.i215.if.else.i218_crit_edge, label %land.lhs.true.i215.rdev_get_name.exit220_crit_edge

land.lhs.true.i215.rdev_get_name.exit220_crit_edge: ; preds = %land.lhs.true.i215
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit220

land.lhs.true.i215.if.else.i218_crit_edge:        ; preds = %land.lhs.true.i215
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i218

if.else.i218:                                     ; preds = %land.lhs.true.i215.if.else.i218_crit_edge, %if.end88.if.else.i218_crit_edge
  %112 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %rdev, align 8
  %114 = ptrtoint ptr %113 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %113, align 4
  %tobool6.not.i216 = icmp eq ptr %115, null
  %.str..i217 = select i1 %tobool6.not.i216, ptr @.str, ptr %115
  br label %rdev_get_name.exit220

rdev_get_name.exit220:                            ; preds = %if.else.i218, %land.lhs.true.i215.rdev_get_name.exit220_crit_edge
  %retval.0.i219 = phi ptr [ %111, %land.lhs.true.i215.rdev_get_name.exit220_crit_edge ], [ %.str..i217, %if.else.i218 ]
  tail call fastcc void @trace_regulator_enable_complete(ptr noundef %retval.0.i219)
  br label %cleanup90

cleanup90:                                        ; preds = %rdev_get_name.exit220, %rdev_get_name.exit193, %_regulator_check_status_enabled.exit, %if.then34.cleanup90_crit_edge, %if.else31.cleanup90_crit_edge
  %retval.1 = phi i32 [ 0, %rdev_get_name.exit220 ], [ %call38, %if.then34.cleanup90_crit_edge ], [ -22, %if.else31.cleanup90_crit_edge ], [ -110, %rdev_get_name.exit193 ], [ %call.i181, %_regulator_check_status_enabled.exit ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_handle_consumer_disable(ptr nocapture noundef %regulator) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %rdev1 = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 9
  %0 = ptrtoint ptr %rdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end33_crit_edge, label %land.rhs

entry.if.end33_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9, i32 0, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %land.rhs5, label %land.rhs.if.end33_crit_edge

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

land.rhs5:                                        ; preds = %land.rhs
  %.b67 = load i1, ptr @_regulator_handle_consumer_disable.__already_done, align 1
  br i1 %.b67, label %land.rhs5.if.end33_crit_edge, label %if.then, !prof !993

land.rhs5.if.end33_crit_edge:                     ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

if.then:                                          ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @_regulator_handle_consumer_disable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2712, i32 noundef 9, ptr noundef null) #25
  br label %if.end33

if.end33:                                         ; preds = %if.then, %land.rhs5.if.end33_crit_edge, %land.rhs.if.end33_crit_edge, %entry.if.end33_crit_edge
  %enable_count = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 4
  %3 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool43.not = icmp eq i32 %4, 0
  br i1 %tobool43.not, label %do.end47, label %if.end51

do.end47:                                         ; preds = %if.end33
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %5 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %do.end47.if.else.i_crit_edge, label %land.lhs.true.i

do.end47.if.else.i_crit_edge:                     ; preds = %do.end47
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end47
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end47.if.else.i_crit_edge
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %1, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %tobool6.not.i = icmp eq ptr %12, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %12
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %8, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call50 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.120, ptr noundef %retval.0.i) #30
  br label %cleanup

if.end51:                                         ; preds = %if.end33
  %dec = add i32 %4, -1
  %13 = ptrtoint ptr %enable_count to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %dec, ptr %enable_count, align 4
  %uA_load = getelementptr inbounds %struct.regulator, ptr %regulator, i32 0, i32 3
  %14 = ptrtoint ptr %uA_load to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %uA_load, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool53.not = icmp ne i32 %15, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp55 = icmp eq i32 %dec, 0
  %or.cond = select i1 %tobool53.not, i1 %cmp55, i1 false
  br i1 %or.cond, label %if.then56, label %if.end51.cleanup_crit_edge

if.end51.cleanup_crit_edge:                       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then56:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #27
  %call57 = tail call fastcc i32 @drms_uA_update(ptr noundef %1)
  br label %cleanup

cleanup:                                          ; preds = %if.then56, %if.end51.cleanup_crit_edge, %rdev_get_name.exit
  %retval.0 = phi i32 [ %call57, %if.then56 ], [ -22, %rdev_get_name.exit ], [ 0, %if.end51.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_enable(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_enable, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1016
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1017
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1017
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_enable.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_enable.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 39, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_enable_delay(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable_delay, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_enable_delay, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1018
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable_delay, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1019
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1019
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable_delay, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_enable_delay.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_enable_delay.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 47, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_enable_complete(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_enable_complete, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1020
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1021
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1021
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_enable_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_enable_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_enable_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 55, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @gpiod_set_value_cansleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ww_acquire_fini(ptr noundef %ctx) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  br label %__here

__here:                                           ; preds = %entry
  %dep_map = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ctx, i32 0, i32 8
  tail call void @lock_release(ptr noundef %dep_map, i32 noundef ptrtoint (ptr blockaddress(@ww_acquire_fini, %__here) to i32)) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %__here.if.end36_crit_edge

__here.if.end36_crit_edge:                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end36

land.lhs.true:                                    ; preds = %__here
  %acquired = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ctx, i32 0, i32 2
  %1 = ptrtoint ptr %acquired to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %acquired, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %land.lhs.true.if.end36_crit_edge, label %do.end, !prof !993

land.lhs.true.if.end36_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end36

do.end:                                           ; preds = %land.lhs.true
  %call = tail call i32 @debug_locks_off() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %do.end.if.end36_crit_edge, label %land.lhs.true5

do.end.if.end36_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end36

land.lhs.true5:                                   ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %3 = load i32, ptr @debug_locks_silent, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool6.not = icmp eq i32 %3, 0
  br i1 %tobool6.not, label %do.end19, label %land.lhs.true5.if.end36_crit_edge

land.lhs.true5.if.end36_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end36

do.end19:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #27
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.102, i32 noundef 191, i32 noundef 9, ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.122) #25
  br label %if.end36

if.end36:                                         ; preds = %do.end19, %land.lhs.true5.if.end36_crit_edge, %do.end.if.end36_crit_edge, %land.lhs.true.if.end36_crit_edge, %__here.if.end36_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_do_disable(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %0 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.else.i_crit_edge, label %land.lhs.true.i

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %4 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rdev, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool6.not.i = icmp eq ptr %7, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %7
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %3, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  tail call fastcc void @trace_regulator_disable(ptr noundef %retval.0.i)
  %ena_pin = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 21
  %8 = ptrtoint ptr %ena_pin to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ena_pin, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %rdev_get_name.exit
  %ena_gpio_state = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 22
  %10 = ptrtoint ptr %ena_gpio_state to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load = load i8, ptr %ena_gpio_state, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool1.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool1.not, label %if.then.if.end18_crit_edge, label %if.end.i

if.then.if.end18_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end18

if.end.i:                                         ; preds = %if.then
  %enable_count.i = getelementptr inbounds %struct.regulator_enable_gpio, ptr %9, i32 0, i32 2
  %11 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %enable_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp7.i = icmp ugt i32 %12, 1
  br i1 %cmp7.i, label %if.then8.i, label %if.then13.i

if.then8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %dec.i = add i32 %12, -1
  br label %if.end

if.then13.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %gpiod14.i = getelementptr inbounds %struct.regulator_enable_gpio, ptr %9, i32 0, i32 1
  %13 = ptrtoint ptr %gpiod14.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %gpiod14.i, align 4
  tail call void @gpiod_set_value_cansleep(ptr noundef %14, i32 noundef 0) #25
  br label %if.end

if.end:                                           ; preds = %if.then13.i, %if.then8.i
  %inc.sink.i = phi i32 [ 0, %if.then13.i ], [ %dec.i, %if.then8.i ]
  %15 = ptrtoint ptr %enable_count.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %inc.sink.i, ptr %enable_count.i, align 4
  %16 = ptrtoint ptr %ena_gpio_state to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load6 = load i8, ptr %ena_gpio_state, align 8
  %bf.clear = and i8 %bf.load6, 127
  store i8 %bf.clear, ptr %ena_gpio_state, align 8
  br label %if.end18

if.else:                                          ; preds = %rdev_get_name.exit
  %17 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rdev, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %18, i32 0, i32 10
  %19 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ops, align 4
  %disable = getelementptr inbounds %struct.regulator_ops, ptr %20, i32 0, i32 15
  %21 = ptrtoint ptr %disable to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %disable, align 4
  %tobool8.not = icmp eq ptr %22, null
  br i1 %tobool8.not, label %if.else.if.end18_crit_edge, label %if.then9

if.else.if.end18_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end18

if.then9:                                         ; preds = %if.else
  %call13 = tail call i32 %22(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp14.not = icmp eq i32 %call13, 0
  br i1 %cmp14.not, label %if.then9.if.end18_crit_edge, label %if.then9.cleanup_crit_edge

if.then9.cleanup_crit_edge:                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then9.if.end18_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end18

if.end18:                                         ; preds = %if.then9.if.end18_crit_edge, %if.else.if.end18_crit_edge, %if.end, %if.then.if.end18_crit_edge
  %23 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %rdev, align 8
  %off_on_delay = getelementptr inbounds %struct.regulator_desc, ptr %24, i32 0, i32 58
  %25 = ptrtoint ptr %off_on_delay to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %off_on_delay, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool20.not = icmp eq i32 %26, 0
  br i1 %tobool20.not, label %if.end18.if.end23_crit_edge, label %if.then21

if.end18.if.end23_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end23

if.then21:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #27
  %call22 = tail call i64 @ktime_get() #25
  %last_off = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 23
  %27 = ptrtoint ptr %last_off to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %call22, ptr %last_off, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end18.if.end23_crit_edge
  %28 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i42 = icmp eq ptr %29, null
  br i1 %tobool.not.i42, label %if.end23.if.else.i47_crit_edge, label %land.lhs.true.i44

if.end23.if.else.i47_crit_edge:                   ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i47

land.lhs.true.i44:                                ; preds = %if.end23
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 4
  %tobool2.not.i43 = icmp eq ptr %31, null
  br i1 %tobool2.not.i43, label %land.lhs.true.i44.if.else.i47_crit_edge, label %land.lhs.true.i44.rdev_get_name.exit49_crit_edge

land.lhs.true.i44.rdev_get_name.exit49_crit_edge: ; preds = %land.lhs.true.i44
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit49

land.lhs.true.i44.if.else.i47_crit_edge:          ; preds = %land.lhs.true.i44
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i47

if.else.i47:                                      ; preds = %land.lhs.true.i44.if.else.i47_crit_edge, %if.end23.if.else.i47_crit_edge
  %32 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %rdev, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 4
  %tobool6.not.i45 = icmp eq ptr %35, null
  %.str..i46 = select i1 %tobool6.not.i45, ptr @.str, ptr %35
  br label %rdev_get_name.exit49

rdev_get_name.exit49:                             ; preds = %if.else.i47, %land.lhs.true.i44.rdev_get_name.exit49_crit_edge
  %retval.0.i48 = phi ptr [ %31, %land.lhs.true.i44.rdev_get_name.exit49_crit_edge ], [ %.str..i46, %if.else.i47 ]
  tail call fastcc void @trace_regulator_disable_complete(ptr noundef %retval.0.i48)
  br label %cleanup

cleanup:                                          ; preds = %rdev_get_name.exit49, %if.then9.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %rdev_get_name.exit49 ], [ %call13, %if.then9.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_disable(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_disable, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_disable, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1022
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_disable, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1023
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1023
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_disable, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_disable.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_disable.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 63, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_disable_complete(ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_disable_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_disable_complete, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1024
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_disable_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1025
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1025
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_disable_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_disable_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_disable_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 71, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mod_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ww_mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regulator_list_voltage_linear(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regulator_map_voltage_linear(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regulator_list_voltage_linear_range(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regulator_map_voltage_linear_range(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regulator_list_voltage_pickable_linear_range(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regulator_map_voltage_pickable_linear_range(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regulator_map_voltage_iterate(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_set_voltage(ptr noundef %name, i32 noundef %min, i32 noundef %max) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_set_voltage, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_set_voltage, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1026
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_set_voltage, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name, i32 noundef %min, i32 noundef %max) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1027
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1027
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_set_voltage, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_set_voltage.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_set_voltage.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 137, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_regulator_call_set_voltage_sel(ptr noundef %rdev, i32 noundef %uV, i32 noundef %selector) unnamed_addr #0 align 64 {
entry:
  %data = alloca %struct.pre_voltage_change_data, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %data) #25
  %0 = getelementptr inbounds %struct.pre_voltage_change_data, ptr %data, i32 0, i32 1
  %1 = getelementptr inbounds %struct.pre_voltage_change_data, ptr %data, i32 0, i32 2
  %call = tail call i32 @regulator_get_voltage_rdev(ptr noundef %rdev)
  %2 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %call, ptr %data, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %uV, ptr %0, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %uV, ptr %1, align 4
  %notifier.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 8
  %call.i = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i, i32 noundef 256, ptr noundef nonnull %data) #25
  %and = and i32 %call.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %rdev, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %6, i32 0, i32 10
  %7 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops, align 4
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %set_voltage_sel, align 4
  %call2 = call i32 %10(ptr noundef %rdev, i32 noundef %selector) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2)
  %cmp = icmp sgt i32 %call2, -1
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %data, align 4
  %13 = inttoptr i32 %12 to ptr
  %call.i17 = call i32 @blocking_notifier_call_chain(ptr noundef %notifier.i, i32 noundef 512, ptr noundef %13) #25
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end4 ], [ -22, %entry.cleanup_crit_edge ], [ %call2, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %data) #25
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_regulator_set_voltage_complete(ptr noundef %name, i32 noundef %value) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_set_voltage_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_regulator_set_voltage_complete, %do.body)) #25
          to label %if.end48 [label %do.body], !srcloc !997

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !993

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1028
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_set_voltage_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %name, i32 noundef %value) #25
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1029
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #27
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1029
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !993

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.117, i32 noundef 108, i32 noundef 9, ptr noundef null) #25
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1004
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_regulator_set_voltage_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_regulator_set_voltage_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @trace_regulator_set_voltage_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.115, i32 noundef 169, ptr noundef nonnull @.str.116) #25
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #25, !srcloc !1005
  %38 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @async_schedule_node_domain(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blocking_notifier_call_chain(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @machine_constraints_voltage(ptr noundef %rdev, ptr nocapture noundef %constraints) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rdev, align 8
  %ops1 = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops1, align 4
  %constraints2 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %4 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %constraints2, align 8
  %apply_uV = getelementptr inbounds %struct.regulation_constraints, ptr %5, i32 0, i32 28
  %6 = ptrtoint ptr %apply_uV to i32
  call void @__asan_load2_noabort(i32 %6)
  %bf.load = load i16, ptr %apply_uV, align 4
  %7 = and i16 %bf.load, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %entry.if.end75_crit_edge, label %land.lhs.true

entry.if.end75_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end75

land.lhs.true:                                    ; preds = %entry
  %min_uV = getelementptr inbounds %struct.regulation_constraints, ptr %5, i32 0, i32 1
  %8 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %min_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool4.not = icmp eq i32 %9, 0
  br i1 %tobool4.not, label %land.lhs.true.if.end75_crit_edge, label %land.lhs.true5

land.lhs.true.if.end75_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end75

land.lhs.true5:                                   ; preds = %land.lhs.true
  %max_uV = getelementptr inbounds %struct.regulation_constraints, ptr %5, i32 0, i32 2
  %10 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool7.not = icmp eq i32 %11, 0
  br i1 %tobool7.not, label %land.lhs.true5.if.end75_crit_edge, label %if.then

land.lhs.true5.if.end75_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end75

if.then:                                          ; preds = %land.lhs.true5
  %call = tail call i32 @regulator_get_voltage_rdev(ptr noundef %rdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -131, i32 %call)
  %cmp = icmp eq i32 %call, -131
  br i1 %cmp, label %do.end, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

do.end:                                           ; preds = %if.then
  %12 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %constraints2, align 8
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %tobool2.not.i = icmp eq ptr %15, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %16 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rdev, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 4
  %tobool6.not.i = icmp eq ptr %19, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %19
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i300 = phi ptr [ %15, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %min_uV11 = getelementptr inbounds %struct.regulation_constraints, ptr %13, i32 0, i32 1
  %20 = ptrtoint ptr %min_uV11 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %min_uV11, align 4
  %max_uV13 = getelementptr inbounds %struct.regulation_constraints, ptr %13, i32 0, i32 2
  %22 = ptrtoint ptr %max_uV13 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %max_uV13, align 4
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.220, ptr noundef %retval.0.i300, i32 noundef %21, i32 noundef %23) #30
  %24 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %constraints2, align 8
  %min_uV16 = getelementptr inbounds %struct.regulation_constraints, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %min_uV16 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %min_uV16, align 4
  %max_uV18 = getelementptr inbounds %struct.regulation_constraints, ptr %25, i32 0, i32 2
  %28 = ptrtoint ptr %max_uV18 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %max_uV18, align 4
  %call19 = tail call fastcc i32 @_regulator_do_set_voltage(ptr noundef %rdev, i32 noundef %27, i32 noundef %29)
  %call20 = tail call i32 @regulator_get_voltage_rdev(ptr noundef %rdev)
  br label %if.end

if.end:                                           ; preds = %rdev_get_name.exit, %if.then.if.end_crit_edge
  %current_uV.0 = phi i32 [ %call20, %rdev_get_name.exit ], [ %call, %if.then.if.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %current_uV.0)
  %cmp21 = icmp slt i32 %current_uV.0, 0
  br i1 %cmp21, label %if.then22, label %if.end33

if.then22:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 -517, i32 %current_uV.0)
  %cmp23.not = icmp eq i32 %current_uV.0, -517
  br i1 %cmp23.not, label %if.then22.cleanup199_crit_edge, label %do.end27

if.then22.cleanup199_crit_edge:                   ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup199

do.end27:                                         ; preds = %if.then22
  %30 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %constraints2, align 8
  %tobool.not.i302 = icmp eq ptr %31, null
  br i1 %tobool.not.i302, label %do.end27.if.else.i307_crit_edge, label %land.lhs.true.i304

do.end27.if.else.i307_crit_edge:                  ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i307

land.lhs.true.i304:                               ; preds = %do.end27
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %tobool2.not.i303 = icmp eq ptr %33, null
  br i1 %tobool2.not.i303, label %land.lhs.true.i304.if.else.i307_crit_edge, label %land.lhs.true.i304.rdev_get_name.exit309_crit_edge

land.lhs.true.i304.rdev_get_name.exit309_crit_edge: ; preds = %land.lhs.true.i304
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit309

land.lhs.true.i304.if.else.i307_crit_edge:        ; preds = %land.lhs.true.i304
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i307

if.else.i307:                                     ; preds = %land.lhs.true.i304.if.else.i307_crit_edge, %do.end27.if.else.i307_crit_edge
  %34 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rdev, align 8
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %tobool6.not.i305 = icmp eq ptr %37, null
  %.str..i306 = select i1 %tobool6.not.i305, ptr @.str, ptr %37
  br label %rdev_get_name.exit309

rdev_get_name.exit309:                            ; preds = %if.else.i307, %land.lhs.true.i304.rdev_get_name.exit309_crit_edge
  %retval.0.i308 = phi ptr [ %33, %land.lhs.true.i304.rdev_get_name.exit309_crit_edge ], [ %.str..i306, %if.else.i307 ]
  %38 = inttoptr i32 %current_uV.0 to ptr
  %call31 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.223, ptr noundef %retval.0.i308, ptr noundef nonnull %38) #30
  br label %cleanup199

if.end33:                                         ; preds = %if.end
  %39 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %constraints2, align 8
  %min_uV35 = getelementptr inbounds %struct.regulation_constraints, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %min_uV35 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %min_uV35, align 4
  %43 = tail call i32 @llvm.smax.i32(i32 %current_uV.0, i32 %42)
  %max_uV44 = getelementptr inbounds %struct.regulation_constraints, ptr %40, i32 0, i32 2
  %44 = ptrtoint ptr %max_uV44 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %max_uV44, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %current_uV.0, i32 %45)
  %cmp45 = icmp sgt i32 %current_uV.0, %45
  %target_min.1 = select i1 %cmp45, i32 %45, i32 %43
  call void @__sanitizer_cov_trace_cmp4(i32 %target_min.1, i32 %current_uV.0)
  %cmp52.not = icmp eq i32 %target_min.1, %current_uV.0
  br i1 %cmp52.not, label %if.end33.if.end75_crit_edge, label %do.end57

if.end33.if.end75_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end75

do.end57:                                         ; preds = %if.end33
  %tobool.not.i311 = icmp eq ptr %40, null
  br i1 %tobool.not.i311, label %do.end57.if.else.i316_crit_edge, label %land.lhs.true.i313

do.end57.if.else.i316_crit_edge:                  ; preds = %do.end57
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i316

land.lhs.true.i313:                               ; preds = %do.end57
  %46 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %40, align 4
  %tobool2.not.i312 = icmp eq ptr %47, null
  br i1 %tobool2.not.i312, label %land.lhs.true.i313.if.else.i316_crit_edge, label %land.lhs.true.i313.rdev_get_name.exit318_crit_edge

land.lhs.true.i313.rdev_get_name.exit318_crit_edge: ; preds = %land.lhs.true.i313
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit318

land.lhs.true.i313.if.else.i316_crit_edge:        ; preds = %land.lhs.true.i313
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i316

if.else.i316:                                     ; preds = %land.lhs.true.i313.if.else.i316_crit_edge, %do.end57.if.else.i316_crit_edge
  %48 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rdev, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 4
  %tobool6.not.i314 = icmp eq ptr %51, null
  %.str..i315 = select i1 %tobool6.not.i314, ptr @.str, ptr %51
  br label %rdev_get_name.exit318

rdev_get_name.exit318:                            ; preds = %if.else.i316, %land.lhs.true.i313.rdev_get_name.exit318_crit_edge
  %retval.0.i317 = phi ptr [ %47, %land.lhs.true.i313.rdev_get_name.exit318_crit_edge ], [ %.str..i315, %if.else.i316 ]
  %call60 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226, ptr noundef %retval.0.i317, i32 noundef %current_uV.0, i32 noundef %target_min.1, i32 noundef %target_min.1) #30
  %call61 = tail call fastcc i32 @_regulator_do_set_voltage(ptr noundef %rdev, i32 noundef %target_min.1, i32 noundef %target_min.1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %cmp62 = icmp slt i32 %call61, 0
  br i1 %cmp62, label %do.end66, label %rdev_get_name.exit318.if.end75_crit_edge

rdev_get_name.exit318.if.end75_crit_edge:         ; preds = %rdev_get_name.exit318
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end75

do.end66:                                         ; preds = %rdev_get_name.exit318
  %52 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %constraints2, align 8
  %tobool.not.i320 = icmp eq ptr %53, null
  br i1 %tobool.not.i320, label %do.end66.if.else.i325_crit_edge, label %land.lhs.true.i322

do.end66.if.else.i325_crit_edge:                  ; preds = %do.end66
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i325

land.lhs.true.i322:                               ; preds = %do.end66
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %53, align 4
  %tobool2.not.i321 = icmp eq ptr %55, null
  br i1 %tobool2.not.i321, label %land.lhs.true.i322.if.else.i325_crit_edge, label %land.lhs.true.i322.rdev_get_name.exit327_crit_edge

land.lhs.true.i322.rdev_get_name.exit327_crit_edge: ; preds = %land.lhs.true.i322
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit327

land.lhs.true.i322.if.else.i325_crit_edge:        ; preds = %land.lhs.true.i322
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i325

if.else.i325:                                     ; preds = %land.lhs.true.i322.if.else.i325_crit_edge, %do.end66.if.else.i325_crit_edge
  %56 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %rdev, align 8
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %57, align 4
  %tobool6.not.i323 = icmp eq ptr %59, null
  %.str..i324 = select i1 %tobool6.not.i323, ptr @.str, ptr %59
  br label %rdev_get_name.exit327

rdev_get_name.exit327:                            ; preds = %if.else.i325, %land.lhs.true.i322.rdev_get_name.exit327_crit_edge
  %retval.0.i326 = phi ptr [ %55, %land.lhs.true.i322.rdev_get_name.exit327_crit_edge ], [ %.str..i324, %if.else.i325 ]
  %60 = inttoptr i32 %call61 to ptr
  %call70 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.229, ptr noundef %retval.0.i326, i32 noundef %target_min.1, i32 noundef %target_min.1, ptr noundef nonnull %60) #30
  br label %cleanup199

if.end75:                                         ; preds = %rdev_get_name.exit318.if.end75_crit_edge, %if.end33.if.end75_crit_edge, %land.lhs.true5.if.end75_crit_edge, %land.lhs.true.if.end75_crit_edge, %entry.if.end75_crit_edge
  %61 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %3, align 4
  %tobool76.not = icmp eq ptr %62, null
  br i1 %tobool76.not, label %if.end75.cleanup199_crit_edge, label %land.lhs.true77

if.end75.cleanup199_crit_edge:                    ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup199

land.lhs.true77:                                  ; preds = %if.end75
  %63 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %rdev, align 8
  %n_voltages = getelementptr inbounds %struct.regulator_desc, ptr %64, i32 0, i32 8
  %65 = ptrtoint ptr %n_voltages to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %n_voltages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool79.not = icmp eq i32 %66, 0
  br i1 %tobool79.not, label %land.lhs.true77.cleanup199_crit_edge, label %if.then80

land.lhs.true77.cleanup199_crit_edge:             ; preds = %land.lhs.true77
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup199

if.then80:                                        ; preds = %land.lhs.true77
  %min_uV85 = getelementptr inbounds %struct.regulation_constraints, ptr %constraints, i32 0, i32 1
  %67 = ptrtoint ptr %min_uV85 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %min_uV85, align 4
  %max_uV86 = getelementptr inbounds %struct.regulation_constraints, ptr %constraints, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %66)
  %cmp87 = icmp eq i32 %66, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool89.not = icmp eq i32 %68, 0
  %or.cond = select i1 %cmp87, i1 %tobool89.not, i1 false
  br i1 %or.cond, label %if.end93.thread, label %if.end93

if.end93.thread:                                  ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #27
  %69 = ptrtoint ptr %min_uV85 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 1, ptr %min_uV85, align 4
  %70 = ptrtoint ptr %max_uV86 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 2147483647, ptr %max_uV86, align 4
  br label %if.end98

if.end93:                                         ; preds = %if.then80
  %71 = ptrtoint ptr %max_uV86 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %max_uV86, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %cmp96 = icmp eq i32 %72, 0
  %or.cond292 = select i1 %tobool89.not, i1 %cmp96, i1 false
  br i1 %or.cond292, label %if.end93.cleanup199_crit_edge, label %if.end93.if.end98_crit_edge

if.end93.if.end98_crit_edge:                      ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end98

if.end93.cleanup199_crit_edge:                    ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup199

if.end98:                                         ; preds = %if.end93.if.end98_crit_edge, %if.end93.thread
  %cmax.0372 = phi i32 [ 2147483647, %if.end93.thread ], [ %72, %if.end93.if.end98_crit_edge ]
  %cmin.0371 = phi i32 [ 1, %if.end93.thread ], [ %68, %if.end93.if.end98_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %cmin.0371)
  %cmp99 = icmp slt i32 %cmin.0371, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %cmax.0372)
  %cmp101 = icmp slt i32 %cmax.0372, 1
  %or.cond293 = select i1 %cmp99, i1 true, i1 %cmp101
  call void @__sanitizer_cov_trace_cmp4(i32 %cmax.0372, i32 %cmin.0371)
  %cmp103 = icmp slt i32 %cmax.0372, %cmin.0371
  %or.cond294 = select i1 %or.cond293, i1 true, i1 %cmp103
  br i1 %or.cond294, label %do.end107, label %if.end111

do.end107:                                        ; preds = %if.end98
  %73 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %constraints2, align 8
  %tobool.not.i329 = icmp eq ptr %74, null
  br i1 %tobool.not.i329, label %do.end107.if.else.i334_crit_edge, label %land.lhs.true.i331

do.end107.if.else.i334_crit_edge:                 ; preds = %do.end107
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i334

land.lhs.true.i331:                               ; preds = %do.end107
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %74, align 4
  %tobool2.not.i330 = icmp eq ptr %76, null
  br i1 %tobool2.not.i330, label %land.lhs.true.i331.if.else.i334_crit_edge, label %land.lhs.true.i331.rdev_get_name.exit336_crit_edge

land.lhs.true.i331.rdev_get_name.exit336_crit_edge: ; preds = %land.lhs.true.i331
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit336

land.lhs.true.i331.if.else.i334_crit_edge:        ; preds = %land.lhs.true.i331
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i334

if.else.i334:                                     ; preds = %land.lhs.true.i331.if.else.i334_crit_edge, %do.end107.if.else.i334_crit_edge
  %77 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %rdev, align 8
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %78, align 4
  %tobool6.not.i332 = icmp eq ptr %80, null
  %.str..i333 = select i1 %tobool6.not.i332, ptr @.str, ptr %80
  br label %rdev_get_name.exit336

rdev_get_name.exit336:                            ; preds = %if.else.i334, %land.lhs.true.i331.rdev_get_name.exit336_crit_edge
  %retval.0.i335 = phi ptr [ %76, %land.lhs.true.i331.rdev_get_name.exit336_crit_edge ], [ %.str..i333, %if.else.i334 ]
  %call110 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.232, ptr noundef %retval.0.i335) #30
  br label %cleanup199

if.end111:                                        ; preds = %if.end98
  %81 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %rdev, align 8
  %continuous_voltage_range = getelementptr inbounds %struct.regulator_desc, ptr %82, i32 0, i32 7
  %83 = ptrtoint ptr %continuous_voltage_range to i32
  call void @__asan_load1_noabort(i32 %83)
  %bf.load113 = load i8, ptr %continuous_voltage_range, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load113)
  %tobool116.not = icmp sgt i8 %bf.load113, -1
  br i1 %tobool116.not, label %for.cond.preheader, label %if.end111.cleanup199_crit_edge

if.end111.cleanup199_crit_edge:                   ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup199

for.cond.preheader:                               ; preds = %if.end111
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %cmp119377 = icmp sgt i32 %66, 0
  br i1 %cmp119377, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.do.end142_crit_edge

for.cond.preheader.do.end142_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end142

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %cleanup135.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %max_uV84.0380 = phi i32 [ %max_uV84.2, %cleanup135.for.body_crit_edge ], [ -2147483648, %for.cond.preheader.for.body_crit_edge ]
  %min_uV83.0379 = phi i32 [ %min_uV83.2, %cleanup135.for.body_crit_edge ], [ 2147483647, %for.cond.preheader.for.body_crit_edge ]
  %i.0378 = phi i32 [ %inc, %cleanup135.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %84 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %3, align 4
  %call121 = tail call i32 %85(ptr noundef %rdev, i32 noundef %i.0378) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call121)
  %cmp122 = icmp slt i32 %call121, 1
  br i1 %cmp122, label %for.body.cleanup135_crit_edge, label %if.end124

for.body.cleanup135_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup135

if.end124:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  call void @__sanitizer_cov_trace_cmp4(i32 %call121, i32 %cmin.0371)
  %cmp125.not = icmp sge i32 %call121, %cmin.0371
  call void @__sanitizer_cov_trace_cmp4(i32 %call121, i32 %min_uV83.0379)
  %cmp127 = icmp slt i32 %call121, %min_uV83.0379
  %or.cond295 = select i1 %cmp125.not, i1 %cmp127, i1 false
  %min_uV83.1 = select i1 %or.cond295, i32 %call121, i32 %min_uV83.0379
  call void @__sanitizer_cov_trace_cmp4(i32 %call121, i32 %cmax.0372)
  %cmp130.not = icmp sle i32 %call121, %cmax.0372
  call void @__sanitizer_cov_trace_cmp4(i32 %call121, i32 %max_uV84.0380)
  %cmp132 = icmp sgt i32 %call121, %max_uV84.0380
  %or.cond296 = select i1 %cmp130.not, i1 %cmp132, i1 false
  %max_uV84.1 = select i1 %or.cond296, i32 %call121, i32 %max_uV84.0380
  br label %cleanup135

cleanup135:                                       ; preds = %if.end124, %for.body.cleanup135_crit_edge
  %min_uV83.2 = phi i32 [ %min_uV83.1, %if.end124 ], [ %min_uV83.0379, %for.body.cleanup135_crit_edge ]
  %max_uV84.2 = phi i32 [ %max_uV84.1, %if.end124 ], [ %max_uV84.0380, %for.body.cleanup135_crit_edge ]
  %inc = add nuw nsw i32 %i.0378, 1
  %exitcond.not = icmp eq i32 %inc, %66
  br i1 %exitcond.not, label %for.end, label %cleanup135.for.body_crit_edge

cleanup135.for.body_crit_edge:                    ; preds = %cleanup135
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.end:                                          ; preds = %cleanup135
  call void @__sanitizer_cov_trace_cmp4(i32 %max_uV84.2, i32 %min_uV83.2)
  %cmp138 = icmp slt i32 %max_uV84.2, %min_uV83.2
  br i1 %cmp138, label %for.end.do.end142_crit_edge, label %if.end146

for.end.do.end142_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end142

do.end142:                                        ; preds = %for.end.do.end142_crit_edge, %for.cond.preheader.do.end142_crit_edge
  %max_uV84.0.lcssa388 = phi i32 [ %max_uV84.2, %for.end.do.end142_crit_edge ], [ -2147483648, %for.cond.preheader.do.end142_crit_edge ]
  %min_uV83.0.lcssa386 = phi i32 [ %min_uV83.2, %for.end.do.end142_crit_edge ], [ 2147483647, %for.cond.preheader.do.end142_crit_edge ]
  %86 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %constraints2, align 8
  %tobool.not.i338 = icmp eq ptr %87, null
  br i1 %tobool.not.i338, label %do.end142.if.else.i343_crit_edge, label %land.lhs.true.i340

do.end142.if.else.i343_crit_edge:                 ; preds = %do.end142
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i343

land.lhs.true.i340:                               ; preds = %do.end142
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %87, align 4
  %tobool2.not.i339 = icmp eq ptr %89, null
  br i1 %tobool2.not.i339, label %land.lhs.true.i340.if.else.i343_crit_edge, label %land.lhs.true.i340.rdev_get_name.exit345_crit_edge

land.lhs.true.i340.rdev_get_name.exit345_crit_edge: ; preds = %land.lhs.true.i340
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit345

land.lhs.true.i340.if.else.i343_crit_edge:        ; preds = %land.lhs.true.i340
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i343

if.else.i343:                                     ; preds = %land.lhs.true.i340.if.else.i343_crit_edge, %do.end142.if.else.i343_crit_edge
  %90 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %rdev, align 8
  %92 = ptrtoint ptr %91 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %91, align 4
  %tobool6.not.i341 = icmp eq ptr %93, null
  %.str..i342 = select i1 %tobool6.not.i341, ptr @.str, ptr %93
  br label %rdev_get_name.exit345

rdev_get_name.exit345:                            ; preds = %if.else.i343, %land.lhs.true.i340.rdev_get_name.exit345_crit_edge
  %retval.0.i344 = phi ptr [ %89, %land.lhs.true.i340.rdev_get_name.exit345_crit_edge ], [ %.str..i342, %if.else.i343 ]
  %call145 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.235, ptr noundef %retval.0.i344, i32 noundef %min_uV83.0.lcssa386, i32 noundef %max_uV84.0.lcssa388) #30
  br label %cleanup199

if.end146:                                        ; preds = %for.end
  %94 = ptrtoint ptr %min_uV85 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %min_uV85, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %95, i32 %min_uV83.2)
  %cmp148 = icmp slt i32 %95, %min_uV83.2
  br i1 %cmp148, label %do.body150, label %if.end146.if.end164_crit_edge

if.end146.if.end164_crit_edge:                    ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end164

do.body150:                                       ; preds = %if.end146
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @machine_constraints_voltage.__UNIQUE_ID_ddebug358, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@machine_constraints_voltage, %do.end162)) #25
          to label %if.then157 [label %do.end162], !srcloc !997

if.then157:                                       ; preds = %do.body150
  %96 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %constraints2, align 8
  %tobool.not.i347 = icmp eq ptr %97, null
  br i1 %tobool.not.i347, label %if.then157.if.else.i352_crit_edge, label %land.lhs.true.i349

if.then157.if.else.i352_crit_edge:                ; preds = %if.then157
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i352

land.lhs.true.i349:                               ; preds = %if.then157
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %97, align 4
  %tobool2.not.i348 = icmp eq ptr %99, null
  br i1 %tobool2.not.i348, label %land.lhs.true.i349.if.else.i352_crit_edge, label %land.lhs.true.i349.rdev_get_name.exit354_crit_edge

land.lhs.true.i349.rdev_get_name.exit354_crit_edge: ; preds = %land.lhs.true.i349
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit354

land.lhs.true.i349.if.else.i352_crit_edge:        ; preds = %land.lhs.true.i349
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i352

if.else.i352:                                     ; preds = %land.lhs.true.i349.if.else.i352_crit_edge, %if.then157.if.else.i352_crit_edge
  %100 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %rdev, align 8
  %102 = ptrtoint ptr %101 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %101, align 4
  %tobool6.not.i350 = icmp eq ptr %103, null
  %.str..i351 = select i1 %tobool6.not.i350, ptr @.str, ptr %103
  br label %rdev_get_name.exit354

rdev_get_name.exit354:                            ; preds = %if.else.i352, %land.lhs.true.i349.rdev_get_name.exit354_crit_edge
  %retval.0.i353 = phi ptr [ %99, %land.lhs.true.i349.rdev_get_name.exit354_crit_edge ], [ %.str..i351, %if.else.i352 ]
  %104 = ptrtoint ptr %min_uV85 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %min_uV85, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @machine_constraints_voltage.__UNIQUE_ID_ddebug358, ptr noundef nonnull @.str.237, ptr noundef %retval.0.i353, i32 noundef %105, i32 noundef %min_uV83.2) #25
  br label %do.end162

do.end162:                                        ; preds = %rdev_get_name.exit354, %do.body150
  %106 = ptrtoint ptr %min_uV85 to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %min_uV83.2, ptr %min_uV85, align 4
  br label %if.end164

if.end164:                                        ; preds = %do.end162, %if.end146.if.end164_crit_edge
  %107 = ptrtoint ptr %max_uV86 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %max_uV86, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %108, i32 %max_uV84.2)
  %cmp166 = icmp sgt i32 %108, %max_uV84.2
  br i1 %cmp166, label %do.body168, label %if.end164.cleanup199_crit_edge

if.end164.cleanup199_crit_edge:                   ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup199

do.body168:                                       ; preds = %if.end164
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @machine_constraints_voltage.__UNIQUE_ID_ddebug359, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@machine_constraints_voltage, %do.end187)) #25
          to label %if.then182 [label %do.end187], !srcloc !997

if.then182:                                       ; preds = %do.body168
  %109 = ptrtoint ptr %constraints2 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %constraints2, align 8
  %tobool.not.i356 = icmp eq ptr %110, null
  br i1 %tobool.not.i356, label %if.then182.if.else.i361_crit_edge, label %land.lhs.true.i358

if.then182.if.else.i361_crit_edge:                ; preds = %if.then182
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i361

land.lhs.true.i358:                               ; preds = %if.then182
  %111 = ptrtoint ptr %110 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %110, align 4
  %tobool2.not.i357 = icmp eq ptr %112, null
  br i1 %tobool2.not.i357, label %land.lhs.true.i358.if.else.i361_crit_edge, label %land.lhs.true.i358.rdev_get_name.exit363_crit_edge

land.lhs.true.i358.rdev_get_name.exit363_crit_edge: ; preds = %land.lhs.true.i358
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit363

land.lhs.true.i358.if.else.i361_crit_edge:        ; preds = %land.lhs.true.i358
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i361

if.else.i361:                                     ; preds = %land.lhs.true.i358.if.else.i361_crit_edge, %if.then182.if.else.i361_crit_edge
  %113 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %rdev, align 8
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %114, align 4
  %tobool6.not.i359 = icmp eq ptr %116, null
  %.str..i360 = select i1 %tobool6.not.i359, ptr @.str, ptr %116
  br label %rdev_get_name.exit363

rdev_get_name.exit363:                            ; preds = %if.else.i361, %land.lhs.true.i358.rdev_get_name.exit363_crit_edge
  %retval.0.i362 = phi ptr [ %112, %land.lhs.true.i358.rdev_get_name.exit363_crit_edge ], [ %.str..i360, %if.else.i361 ]
  %117 = ptrtoint ptr %max_uV86 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %max_uV86, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @machine_constraints_voltage.__UNIQUE_ID_ddebug359, ptr noundef nonnull @.str.238, ptr noundef %retval.0.i362, i32 noundef %118, i32 noundef %max_uV84.2) #25
  br label %do.end187

do.end187:                                        ; preds = %rdev_get_name.exit363, %do.body168
  %119 = ptrtoint ptr %max_uV86 to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 %max_uV84.2, ptr %max_uV86, align 4
  br label %cleanup199

cleanup199:                                       ; preds = %do.end187, %if.end164.cleanup199_crit_edge, %rdev_get_name.exit345, %if.end111.cleanup199_crit_edge, %rdev_get_name.exit336, %if.end93.cleanup199_crit_edge, %land.lhs.true77.cleanup199_crit_edge, %if.end75.cleanup199_crit_edge, %rdev_get_name.exit327, %rdev_get_name.exit309, %if.then22.cleanup199_crit_edge
  %retval.3 = phi i32 [ 0, %do.end187 ], [ 0, %if.end164.cleanup199_crit_edge ], [ 0, %land.lhs.true77.cleanup199_crit_edge ], [ 0, %if.end75.cleanup199_crit_edge ], [ -517, %if.then22.cleanup199_crit_edge ], [ %current_uV.0, %rdev_get_name.exit309 ], [ %call61, %rdev_get_name.exit327 ], [ 0, %if.end111.cleanup199_crit_edge ], [ 0, %if.end93.cleanup199_crit_edge ], [ -22, %rdev_get_name.exit336 ], [ -22, %rdev_get_name.exit345 ]
  ret i32 %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__suspend_set_state(ptr noundef %rdev, ptr nocapture noundef readonly %rstate) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %enabled = getelementptr inbounds %struct.regulator_state, ptr %rstate, i32 0, i32 4
  %0 = ptrtoint ptr %enabled to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %enabled, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.376)
  switch i32 %1, label %entry.if.end22_crit_edge [
    i32 2, label %land.lhs.true
    i32 1, label %land.lhs.true6
  ]

entry.if.end22_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end22

land.lhs.true:                                    ; preds = %entry
  %3 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rdev, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops, align 4
  %set_suspend_enable = getelementptr inbounds %struct.regulator_ops, ptr %6, i32 0, i32 31
  %7 = ptrtoint ptr %set_suspend_enable to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %set_suspend_enable, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %land.lhs.true.if.end22_crit_edge, label %land.lhs.true.if.end16_crit_edge

land.lhs.true.if.end16_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end16

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end22

land.lhs.true6:                                   ; preds = %entry
  %9 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rdev, align 8
  %ops8 = getelementptr inbounds %struct.regulator_desc, ptr %10, i32 0, i32 10
  %11 = ptrtoint ptr %ops8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops8, align 4
  %set_suspend_disable = getelementptr inbounds %struct.regulator_ops, ptr %12, i32 0, i32 32
  %13 = ptrtoint ptr %set_suspend_disable to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %set_suspend_disable, align 4
  %tobool9.not = icmp eq ptr %14, null
  br i1 %tobool9.not, label %land.lhs.true6.if.end22_crit_edge, label %land.lhs.true6.if.end16_crit_edge

land.lhs.true6.if.end16_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end16

land.lhs.true6.if.end22_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end22

if.end16:                                         ; preds = %land.lhs.true6.if.end16_crit_edge, %land.lhs.true.if.end16_crit_edge
  %.sink = phi ptr [ %8, %land.lhs.true.if.end16_crit_edge ], [ %14, %land.lhs.true6.if.end16_crit_edge ]
  %call14 = tail call i32 %.sink(ptr noundef %rdev) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %cmp17 = icmp slt i32 %call14, 0
  br i1 %cmp17, label %do.end, label %if.end16.if.end22_crit_edge

if.end16.if.end22_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end22

do.end:                                           ; preds = %if.end16
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %15 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %tobool2.not.i = icmp eq ptr %18, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %19 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rdev, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %tobool6.not.i = icmp eq ptr %22, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %22
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %18, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %23 = inttoptr i32 %call14 to ptr
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.249, ptr noundef %retval.0.i, ptr noundef nonnull %23) #30
  br label %cleanup

if.end22:                                         ; preds = %if.end16.if.end22_crit_edge, %land.lhs.true6.if.end22_crit_edge, %land.lhs.true.if.end22_crit_edge, %entry.if.end22_crit_edge
  %ret.0121 = phi i32 [ %call14, %if.end16.if.end22_crit_edge ], [ 0, %land.lhs.true6.if.end22_crit_edge ], [ 0, %land.lhs.true.if.end22_crit_edge ], [ 0, %entry.if.end22_crit_edge ]
  %24 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %rdev, align 8
  %ops24 = getelementptr inbounds %struct.regulator_desc, ptr %25, i32 0, i32 10
  %26 = ptrtoint ptr %ops24 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ops24, align 4
  %set_suspend_voltage = getelementptr inbounds %struct.regulator_ops, ptr %27, i32 0, i32 30
  %28 = ptrtoint ptr %set_suspend_voltage to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %set_suspend_voltage, align 4
  %tobool25.not = icmp eq ptr %29, null
  br i1 %tobool25.not, label %if.end22.if.end44_crit_edge, label %land.lhs.true26

if.end22.if.end44_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end44

land.lhs.true26:                                  ; preds = %if.end22
  %30 = ptrtoint ptr %rstate to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rstate, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp27 = icmp sgt i32 %31, 0
  br i1 %cmp27, label %if.then28, label %land.lhs.true26.if.end44_crit_edge

land.lhs.true26.if.end44_crit_edge:               ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end44

if.then28:                                        ; preds = %land.lhs.true26
  %call33 = tail call i32 %29(ptr noundef %rdev, i32 noundef %31) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %cmp34 = icmp slt i32 %call33, 0
  br i1 %cmp34, label %do.end38, label %if.then28.if.end44_crit_edge

if.then28.if.end44_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end44

do.end38:                                         ; preds = %if.then28
  %constraints.i100 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %32 = ptrtoint ptr %constraints.i100 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %constraints.i100, align 8
  %tobool.not.i101 = icmp eq ptr %33, null
  br i1 %tobool.not.i101, label %do.end38.if.else.i106_crit_edge, label %land.lhs.true.i103

do.end38.if.else.i106_crit_edge:                  ; preds = %do.end38
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i106

land.lhs.true.i103:                               ; preds = %do.end38
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 4
  %tobool2.not.i102 = icmp eq ptr %35, null
  br i1 %tobool2.not.i102, label %land.lhs.true.i103.if.else.i106_crit_edge, label %land.lhs.true.i103.rdev_get_name.exit108_crit_edge

land.lhs.true.i103.rdev_get_name.exit108_crit_edge: ; preds = %land.lhs.true.i103
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit108

land.lhs.true.i103.if.else.i106_crit_edge:        ; preds = %land.lhs.true.i103
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i106

if.else.i106:                                     ; preds = %land.lhs.true.i103.if.else.i106_crit_edge, %do.end38.if.else.i106_crit_edge
  %36 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %rdev, align 8
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 4
  %tobool6.not.i104 = icmp eq ptr %39, null
  %.str..i105 = select i1 %tobool6.not.i104, ptr @.str, ptr %39
  br label %rdev_get_name.exit108

rdev_get_name.exit108:                            ; preds = %if.else.i106, %land.lhs.true.i103.rdev_get_name.exit108_crit_edge
  %retval.0.i107 = phi ptr [ %35, %land.lhs.true.i103.rdev_get_name.exit108_crit_edge ], [ %.str..i105, %if.else.i106 ]
  %40 = inttoptr i32 %call33 to ptr
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.252, ptr noundef %retval.0.i107, ptr noundef nonnull %40) #30
  br label %cleanup

if.end44:                                         ; preds = %if.then28.if.end44_crit_edge, %land.lhs.true26.if.end44_crit_edge, %if.end22.if.end44_crit_edge
  %ret.1 = phi i32 [ %call33, %if.then28.if.end44_crit_edge ], [ %ret.0121, %land.lhs.true26.if.end44_crit_edge ], [ %ret.0121, %if.end22.if.end44_crit_edge ]
  %41 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %rdev, align 8
  %ops46 = getelementptr inbounds %struct.regulator_desc, ptr %42, i32 0, i32 10
  %43 = ptrtoint ptr %ops46 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %ops46, align 4
  %set_suspend_mode = getelementptr inbounds %struct.regulator_ops, ptr %44, i32 0, i32 33
  %45 = ptrtoint ptr %set_suspend_mode to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %set_suspend_mode, align 4
  %tobool47.not = icmp eq ptr %46, null
  br i1 %tobool47.not, label %if.end44.cleanup_crit_edge, label %land.lhs.true48

if.end44.cleanup_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

land.lhs.true48:                                  ; preds = %if.end44
  %mode = getelementptr inbounds %struct.regulator_state, ptr %rstate, i32 0, i32 3
  %47 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp49.not = icmp eq i32 %48, 0
  br i1 %cmp49.not, label %land.lhs.true48.cleanup_crit_edge, label %if.then50

land.lhs.true48.cleanup_crit_edge:                ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then50:                                        ; preds = %land.lhs.true48
  %call55 = tail call i32 %46(ptr noundef %rdev, i32 noundef %48) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %cmp56 = icmp slt i32 %call55, 0
  br i1 %cmp56, label %do.end60, label %if.then50.cleanup_crit_edge

if.then50.cleanup_crit_edge:                      ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

do.end60:                                         ; preds = %if.then50
  %constraints.i109 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %49 = ptrtoint ptr %constraints.i109 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %constraints.i109, align 8
  %tobool.not.i110 = icmp eq ptr %50, null
  br i1 %tobool.not.i110, label %do.end60.if.else.i115_crit_edge, label %land.lhs.true.i112

do.end60.if.else.i115_crit_edge:                  ; preds = %do.end60
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i115

land.lhs.true.i112:                               ; preds = %do.end60
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %50, align 4
  %tobool2.not.i111 = icmp eq ptr %52, null
  br i1 %tobool2.not.i111, label %land.lhs.true.i112.if.else.i115_crit_edge, label %land.lhs.true.i112.rdev_get_name.exit117_crit_edge

land.lhs.true.i112.rdev_get_name.exit117_crit_edge: ; preds = %land.lhs.true.i112
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit117

land.lhs.true.i112.if.else.i115_crit_edge:        ; preds = %land.lhs.true.i112
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i115

if.else.i115:                                     ; preds = %land.lhs.true.i112.if.else.i115_crit_edge, %do.end60.if.else.i115_crit_edge
  %53 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %rdev, align 8
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %54, align 4
  %tobool6.not.i113 = icmp eq ptr %56, null
  %.str..i114 = select i1 %tobool6.not.i113, ptr @.str, ptr %56
  br label %rdev_get_name.exit117

rdev_get_name.exit117:                            ; preds = %if.else.i115, %land.lhs.true.i112.rdev_get_name.exit117_crit_edge
  %retval.0.i116 = phi ptr [ %52, %land.lhs.true.i112.rdev_get_name.exit117_crit_edge ], [ %.str..i114, %if.else.i115 ]
  %57 = inttoptr i32 %call55 to ptr
  %call64 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.255, ptr noundef %retval.0.i116, ptr noundef nonnull %57) #30
  br label %cleanup

cleanup:                                          ; preds = %rdev_get_name.exit117, %if.then50.cleanup_crit_edge, %land.lhs.true48.cleanup_crit_edge, %if.end44.cleanup_crit_edge, %rdev_get_name.exit108, %rdev_get_name.exit
  %retval.0 = phi i32 [ %call14, %rdev_get_name.exit ], [ %call33, %rdev_get_name.exit108 ], [ %call55, %rdev_get_name.exit117 ], [ %call55, %if.then50.cleanup_crit_edge ], [ %ret.1, %land.lhs.true48.cleanup_crit_edge ], [ %ret.1, %if.end44.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_constraints_debug(ptr noundef %rdev) unnamed_addr #0 align 64 {
entry:
  %buf = alloca [160 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %constraints1 = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %0 = ptrtoint ptr %constraints1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints1, align 8
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %buf) #25
  %2 = call ptr @memset(ptr %buf, i32 0, i32 160)
  %min_uV = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %min_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.then22_crit_edge, label %land.lhs.true

entry.if.then22_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then22

land.lhs.true:                                    ; preds = %entry
  %max_uV = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 2
  %5 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool2.not = icmp eq i32 %6, 0
  br i1 %tobool2.not, label %land.lhs.true.if.end16_crit_edge, label %if.then

land.lhs.true.if.end16_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end16

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %6)
  %cmp = icmp eq i32 %4, %6
  %div = sdiv i32 %4, 1000
  br i1 %cmp, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %call = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef nonnull %buf, i32 noundef 159, ptr noundef nonnull @.str.259, i32 noundef %div) #25
  br label %if.end16

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %div13 = sdiv i32 %6, 1000
  %call14 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef nonnull %buf, i32 noundef 159, ptr noundef nonnull @.str.260, i32 noundef %div, i32 noundef %div13) #25
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then5, %land.lhs.true.if.end16_crit_edge
  %count.0.ph = phi i32 [ 0, %land.lhs.true.if.end16_crit_edge ], [ %call14, %if.else ], [ %call, %if.then5 ]
  %7 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pr = load i32, ptr %min_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool18.not = icmp eq i32 %.pr, 0
  br i1 %tobool18.not, label %if.end16.if.then22_crit_edge, label %lor.lhs.false

if.end16.if.then22_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then22

lor.lhs.false:                                    ; preds = %if.end16
  %8 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %max_uV, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.pr, i32 %9)
  %cmp21.not = icmp eq i32 %.pr, %9
  br i1 %cmp21.not, label %lor.lhs.false.if.end33_crit_edge, label %lor.lhs.false.if.then22_crit_edge

lor.lhs.false.if.then22_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then22

lor.lhs.false.if.end33_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

if.then22:                                        ; preds = %lor.lhs.false.if.then22_crit_edge, %if.end16.if.then22_crit_edge, %entry.if.then22_crit_edge
  %count.0241 = phi i32 [ %count.0.ph, %lor.lhs.false.if.then22_crit_edge ], [ %count.0.ph, %if.end16.if.then22_crit_edge ], [ 0, %entry.if.then22_crit_edge ]
  %call23 = call i32 @regulator_get_voltage_rdev(ptr noundef %rdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %cmp24 = icmp sgt i32 %call23, 0
  br i1 %cmp24, label %if.then25, label %if.then22.if.end33_crit_edge

if.then22.if.end33_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end33

if.then25:                                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #27
  %add.ptr27 = getelementptr i8, ptr %buf, i32 %count.0241
  %sub28 = sub i32 159, %count.0241
  %div29249 = udiv i32 %call23, 1000
  %call30 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr27, i32 noundef %sub28, ptr noundef nonnull @.str.261, i32 noundef %div29249) #25
  %add31 = add i32 %call30, %count.0241
  br label %if.end33

if.end33:                                         ; preds = %if.then25, %if.then22.if.end33_crit_edge, %lor.lhs.false.if.end33_crit_edge
  %count.1 = phi i32 [ %add31, %if.then25 ], [ %count.0241, %if.then22.if.end33_crit_edge ], [ %count.0.ph, %lor.lhs.false.if.end33_crit_edge ]
  %uV_offset = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %uV_offset to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %uV_offset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool34.not = icmp eq i32 %11, 0
  br i1 %tobool34.not, label %if.end33.if.end43_crit_edge, label %if.then35

if.end33.if.end43_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end43

if.then35:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #27
  %add.ptr37 = getelementptr i8, ptr %buf, i32 %count.1
  %sub38 = sub i32 159, %count.1
  %div40 = sdiv i32 %11, 1000
  %call41 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr37, i32 noundef %sub38, ptr noundef nonnull @.str.262, i32 noundef %div40) #25
  %add42 = add i32 %call41, %count.1
  br label %if.end43

if.end43:                                         ; preds = %if.then35, %if.end33.if.end43_crit_edge
  %count.2 = phi i32 [ %add42, %if.then35 ], [ %count.1, %if.end33.if.end43_crit_edge ]
  %min_uA = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %min_uA to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %min_uA, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool44.not = icmp eq i32 %13, 0
  br i1 %tobool44.not, label %if.end43.if.then77_crit_edge, label %land.lhs.true45

if.end43.if.then77_crit_edge:                     ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then77

land.lhs.true45:                                  ; preds = %if.end43
  %max_uA = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %max_uA to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %max_uA, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool46.not = icmp eq i32 %15, 0
  br i1 %tobool46.not, label %land.lhs.true45.if.end70_crit_edge, label %if.then47

land.lhs.true45.if.end70_crit_edge:               ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end70

if.then47:                                        ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %15)
  %cmp50 = icmp eq i32 %13, %15
  %add.ptr53 = getelementptr i8, ptr %buf, i32 %count.2
  %sub54 = sub i32 159, %count.2
  %div56 = sdiv i32 %13, 1000
  br i1 %cmp50, label %if.then51, label %if.else59

if.then51:                                        ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #27
  %call57 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr53, i32 noundef %sub54, ptr noundef nonnull @.str.263, i32 noundef %div56) #25
  %add58 = add i32 %call57, %count.2
  br label %if.end70

if.else59:                                        ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #27
  %div66 = sdiv i32 %15, 1000
  %call67 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr53, i32 noundef %sub54, ptr noundef nonnull @.str.264, i32 noundef %div56, i32 noundef %div66) #25
  %add68 = add i32 %call67, %count.2
  br label %if.end70

if.end70:                                         ; preds = %if.else59, %if.then51, %land.lhs.true45.if.end70_crit_edge
  %count.3.ph = phi i32 [ %count.2, %land.lhs.true45.if.end70_crit_edge ], [ %add68, %if.else59 ], [ %add58, %if.then51 ]
  %16 = ptrtoint ptr %min_uA to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pr242 = load i32, ptr %min_uA, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr242)
  %tobool72.not = icmp eq i32 %.pr242, 0
  br i1 %tobool72.not, label %if.end70.if.then77_crit_edge, label %lor.lhs.false73

if.end70.if.then77_crit_edge:                     ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then77

lor.lhs.false73:                                  ; preds = %if.end70
  %17 = ptrtoint ptr %max_uA to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %max_uA, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.pr242, i32 %18)
  %cmp76.not = icmp eq i32 %.pr242, %18
  br i1 %cmp76.not, label %lor.lhs.false73.if.end88_crit_edge, label %lor.lhs.false73.if.then77_crit_edge

lor.lhs.false73.if.then77_crit_edge:              ; preds = %lor.lhs.false73
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then77

lor.lhs.false73.if.end88_crit_edge:               ; preds = %lor.lhs.false73
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end88

if.then77:                                        ; preds = %lor.lhs.false73.if.then77_crit_edge, %if.end70.if.then77_crit_edge, %if.end43.if.then77_crit_edge
  %count.3245 = phi i32 [ %count.3.ph, %lor.lhs.false73.if.then77_crit_edge ], [ %count.3.ph, %if.end70.if.then77_crit_edge ], [ %count.2, %if.end43.if.then77_crit_edge ]
  %call78 = call fastcc i32 @_regulator_get_current_limit(ptr noundef %rdev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %cmp79 = icmp sgt i32 %call78, 0
  br i1 %cmp79, label %if.then80, label %if.then77.if.end88_crit_edge

if.then77.if.end88_crit_edge:                     ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end88

if.then80:                                        ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #27
  %add.ptr82 = getelementptr i8, ptr %buf, i32 %count.3245
  %sub83 = sub i32 159, %count.3245
  %div84250 = udiv i32 %call78, 1000
  %call85 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr82, i32 noundef %sub83, ptr noundef nonnull @.str.265, i32 noundef %div84250) #25
  %add86 = add i32 %call85, %count.3245
  br label %if.end88

if.end88:                                         ; preds = %if.then80, %if.then77.if.end88_crit_edge, %lor.lhs.false73.if.end88_crit_edge
  %count.4 = phi i32 [ %add86, %if.then80 ], [ %count.3245, %if.then77.if.end88_crit_edge ], [ %count.3.ph, %lor.lhs.false73.if.end88_crit_edge ]
  %valid_modes_mask = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 10
  %19 = ptrtoint ptr %valid_modes_mask to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %valid_modes_mask, align 4
  %and = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool89.not = icmp eq i32 %and, 0
  br i1 %tobool89.not, label %if.end88.if.end96_crit_edge, label %if.then90

if.end88.if.end96_crit_edge:                      ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end96

if.then90:                                        ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #27
  %add.ptr92 = getelementptr i8, ptr %buf, i32 %count.4
  %sub93 = sub i32 159, %count.4
  %call94 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr92, i32 noundef %sub93, ptr noundef nonnull @.str.266) #25
  %add95 = add i32 %call94, %count.4
  br label %if.end96

if.end96:                                         ; preds = %if.then90, %if.end88.if.end96_crit_edge
  %count.5 = phi i32 [ %add95, %if.then90 ], [ %count.4, %if.end88.if.end96_crit_edge ]
  %21 = ptrtoint ptr %valid_modes_mask to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %valid_modes_mask, align 4
  %and98 = and i32 %22, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and98)
  %tobool99.not = icmp eq i32 %and98, 0
  br i1 %tobool99.not, label %if.end96.if.end106_crit_edge, label %if.then100

if.end96.if.end106_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end106

if.then100:                                       ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #27
  %add.ptr102 = getelementptr i8, ptr %buf, i32 %count.5
  %sub103 = sub i32 159, %count.5
  %call104 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr102, i32 noundef %sub103, ptr noundef nonnull @.str.267) #25
  %add105 = add i32 %call104, %count.5
  br label %if.end106

if.end106:                                        ; preds = %if.then100, %if.end96.if.end106_crit_edge
  %count.6 = phi i32 [ %add105, %if.then100 ], [ %count.5, %if.end96.if.end106_crit_edge ]
  %23 = ptrtoint ptr %valid_modes_mask to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %valid_modes_mask, align 4
  %and108 = and i32 %24, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and108)
  %tobool109.not = icmp eq i32 %and108, 0
  br i1 %tobool109.not, label %if.end106.if.end116_crit_edge, label %if.then110

if.end106.if.end116_crit_edge:                    ; preds = %if.end106
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end116

if.then110:                                       ; preds = %if.end106
  call void @__sanitizer_cov_trace_pc() #27
  %add.ptr112 = getelementptr i8, ptr %buf, i32 %count.6
  %sub113 = sub i32 159, %count.6
  %call114 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr112, i32 noundef %sub113, ptr noundef nonnull @.str.268) #25
  %add115 = add i32 %call114, %count.6
  br label %if.end116

if.end116:                                        ; preds = %if.then110, %if.end106.if.end116_crit_edge
  %count.7 = phi i32 [ %add115, %if.then110 ], [ %count.6, %if.end106.if.end116_crit_edge ]
  %25 = ptrtoint ptr %valid_modes_mask to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %valid_modes_mask, align 4
  %and118 = and i32 %26, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and118)
  %tobool119.not = icmp eq i32 %and118, 0
  br i1 %tobool119.not, label %if.end116.if.end126_crit_edge, label %if.then120

if.end116.if.end126_crit_edge:                    ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end126

if.then120:                                       ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #27
  %add.ptr122 = getelementptr i8, ptr %buf, i32 %count.7
  %sub123 = sub i32 159, %count.7
  %call124 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr122, i32 noundef %sub123, ptr noundef nonnull @.str.269) #25
  %add125 = add i32 %call124, %count.7
  br label %if.end126

if.end126:                                        ; preds = %if.then120, %if.end116.if.end126_crit_edge
  %count.8 = phi i32 [ %add125, %if.then120 ], [ %count.7, %if.end116.if.end126_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.8)
  %tobool127.not = icmp eq i32 %count.8, 0
  br i1 %tobool127.not, label %if.then128, label %if.else131

if.then128:                                       ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #27
  %call130 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef nonnull %buf, i32 noundef 159, ptr noundef nonnull @.str.270) #25
  br label %if.end132

if.else131:                                       ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #27
  %dec = add i32 %count.8, -1
  br label %if.end132

if.end132:                                        ; preds = %if.else131, %if.then128
  %count.9 = phi i32 [ %dec, %if.else131 ], [ %call130, %if.then128 ]
  %add.ptr134 = getelementptr i8, ptr %buf, i32 %count.9
  %sub135 = sub i32 159, %count.9
  %ena_pin.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 21
  %27 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 22
  %29 = ptrtoint ptr %ena_gpio_state.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %bf.load.i = load i8, ptr %ena_gpio_state.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %_regulator_is_enabled.exit

if.end.i:                                         ; preds = %if.end132
  %30 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rdev, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %31, i32 0, i32 10
  %32 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.regulator_ops, ptr %33, i32 0, i32 16
  %34 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %is_enabled.i, align 4
  %tobool1.not.i = icmp eq ptr %35, null
  br i1 %tobool1.not.i, label %if.end.i._regulator_is_enabled.exit.thread_crit_edge, label %if.end3.i

if.end.i._regulator_is_enabled.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_is_enabled.exit.thread

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = call i32 %35(ptr noundef %rdev) #25
  br label %_regulator_is_enabled.exit

_regulator_is_enabled.exit:                       ; preds = %if.end3.i, %if.then.i
  %retval.0.i236 = phi i32 [ %bf.cast.i, %if.then.i ], [ %call.i, %if.end3.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i236)
  %tobool137.not = icmp eq i32 %retval.0.i236, 0
  %spec.select = select i1 %tobool137.not, ptr @.str.273, ptr @.str.272
  br label %_regulator_is_enabled.exit.thread

_regulator_is_enabled.exit.thread:                ; preds = %_regulator_is_enabled.exit, %if.end.i._regulator_is_enabled.exit.thread_crit_edge
  %36 = phi ptr [ @.str.272, %if.end.i._regulator_is_enabled.exit.thread_crit_edge ], [ %spec.select, %_regulator_is_enabled.exit ]
  %call138 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr134, i32 noundef %sub135, ptr noundef nonnull @.str.271, ptr noundef nonnull %36) #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @print_constraints_debug.__UNIQUE_ID_ddebug357, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@print_constraints_debug, %do.end)) #25
          to label %if.then145 [label %do.end], !srcloc !997

if.then145:                                       ; preds = %_regulator_is_enabled.exit.thread
  %37 = ptrtoint ptr %constraints1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %constraints1, align 8
  %tobool.not.i237 = icmp eq ptr %38, null
  br i1 %tobool.not.i237, label %if.then145.if.else.i_crit_edge, label %land.lhs.true.i

if.then145.if.else.i_crit_edge:                   ; preds = %if.then145
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then145
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %38, align 4
  %tobool2.not.i = icmp eq ptr %40, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then145.if.else.i_crit_edge
  %41 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %rdev, align 8
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %42, align 4
  %tobool6.not.i = icmp eq ptr %44, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %44
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i238 = phi ptr [ %40, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @print_constraints_debug.__UNIQUE_ID_ddebug357, ptr noundef nonnull @.str.275, ptr noundef %retval.0.i238, ptr noundef nonnull %buf) #25
  br label %do.end

do.end:                                           ; preds = %rdev_get_name.exit, %_regulator_is_enabled.exit.thread
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %buf) #25
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @scnprintf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_get_n_coupled(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @of_check_coupling_data(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #22

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_parse_coupled_regulator(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i16 @regulator_attr_is_visible(ptr noundef %kobj, ptr noundef readonly %attr, i32 noundef %idx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %kobj, i32 -264
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  %ops2 = getelementptr inbounds %struct.regulator_desc, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %ops2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops2, align 4
  %mode3 = getelementptr inbounds %struct.attribute, ptr %attr, i32 0, i32 1
  %4 = ptrtoint ptr %mode3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %mode3, align 4
  %cmp = icmp eq ptr %attr, @dev_attr_name
  %cmp4 = icmp eq ptr %attr, @dev_attr_num_users
  %or.cond = or i1 %cmp, %cmp4
  %cmp6 = icmp eq ptr %attr, @dev_attr_type
  %or.cond218 = or i1 %cmp6, %or.cond
  br i1 %or.cond218, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp7 = icmp eq ptr %attr, @dev_attr_microvolts
  br i1 %cmp7, label %if.then8, label %if.end32

if.then8:                                         ; preds = %if.end
  %get_voltage = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 4
  %6 = ptrtoint ptr %get_voltage to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %get_voltage, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.then8.lor.lhs.false12_crit_edge, label %land.lhs.true

if.then8.lor.lhs.false12_crit_edge:               ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #27
  br label %lor.lhs.false12

land.lhs.true:                                    ; preds = %if.then8
  %call10 = tail call i32 %7(ptr noundef %add.ptr.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call10)
  %cmp11 = icmp sgt i32 %call10, -1
  br i1 %cmp11, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.lor.lhs.false12_crit_edge

land.lhs.true.lor.lhs.false12_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %lor.lhs.false12

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

lor.lhs.false12:                                  ; preds = %land.lhs.true.lor.lhs.false12_crit_edge, %if.then8.lor.lhs.false12_crit_edge
  %get_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 5
  %8 = ptrtoint ptr %get_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %get_voltage_sel, align 4
  %tobool13.not = icmp eq ptr %9, null
  br i1 %tobool13.not, label %lor.lhs.false12.lor.lhs.false18_crit_edge, label %land.lhs.true14

lor.lhs.false12.lor.lhs.false18_crit_edge:        ; preds = %lor.lhs.false12
  call void @__sanitizer_cov_trace_pc() #27
  br label %lor.lhs.false18

land.lhs.true14:                                  ; preds = %lor.lhs.false12
  %call16 = tail call i32 %9(ptr noundef %add.ptr.i) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call16)
  %cmp17 = icmp sgt i32 %call16, -1
  br i1 %cmp17, label %land.lhs.true14.cleanup_crit_edge, label %land.lhs.true14.lor.lhs.false18_crit_edge

land.lhs.true14.lor.lhs.false18_crit_edge:        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #27
  br label %lor.lhs.false18

land.lhs.true14.cleanup_crit_edge:                ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

lor.lhs.false18:                                  ; preds = %land.lhs.true14.lor.lhs.false18_crit_edge, %lor.lhs.false12.lor.lhs.false18_crit_edge
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %3, align 4
  %tobool19.not = icmp eq ptr %11, null
  br i1 %tobool19.not, label %lor.lhs.false18.lor.lhs.false24_crit_edge, label %land.lhs.true20

lor.lhs.false18.lor.lhs.false24_crit_edge:        ; preds = %lor.lhs.false18
  call void @__sanitizer_cov_trace_pc() #27
  br label %lor.lhs.false24

land.lhs.true20:                                  ; preds = %lor.lhs.false18
  %call22 = tail call i32 %11(ptr noundef %add.ptr.i, i32 noundef 0) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call22)
  %cmp23 = icmp sgt i32 %call22, -1
  br i1 %cmp23, label %land.lhs.true20.cleanup_crit_edge, label %land.lhs.true20.lor.lhs.false24_crit_edge

land.lhs.true20.lor.lhs.false24_crit_edge:        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #27
  br label %lor.lhs.false24

land.lhs.true20.cleanup_crit_edge:                ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

lor.lhs.false24:                                  ; preds = %land.lhs.true20.lor.lhs.false24_crit_edge, %lor.lhs.false18.lor.lhs.false24_crit_edge
  %12 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %add.ptr.i, align 8
  %fixed_uV = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 17
  %14 = ptrtoint ptr %fixed_uV to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %fixed_uV, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool26.not = icmp eq i32 %15, 0
  br i1 %tobool26.not, label %lor.lhs.false24.if.end31_crit_edge, label %land.lhs.true27

lor.lhs.false24.if.end31_crit_edge:               ; preds = %lor.lhs.false24
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end31

land.lhs.true27:                                  ; preds = %lor.lhs.false24
  %n_voltages = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 8
  %16 = ptrtoint ptr %n_voltages to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %n_voltages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %17)
  %cmp29 = icmp eq i32 %17, 1
  br i1 %cmp29, label %land.lhs.true27.cleanup_crit_edge, label %land.lhs.true27.if.end31_crit_edge

land.lhs.true27.if.end31_crit_edge:               ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end31

land.lhs.true27.cleanup_crit_edge:                ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end31:                                         ; preds = %land.lhs.true27.if.end31_crit_edge, %lor.lhs.false24.if.end31_crit_edge
  br label %cleanup

if.end32:                                         ; preds = %if.end
  %cmp33 = icmp eq ptr %attr, @dev_attr_microamps
  br i1 %cmp33, label %if.then34, label %if.end37

if.then34:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #27
  %get_current_limit = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 7
  %18 = ptrtoint ptr %get_current_limit to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %get_current_limit, align 4
  %tobool35.not = icmp eq ptr %19, null
  %spec.select = select i1 %tobool35.not, i16 0, i16 %5
  br label %cleanup

if.end37:                                         ; preds = %if.end32
  %cmp38 = icmp eq ptr %attr, @dev_attr_opmode
  br i1 %cmp38, label %if.then40, label %if.end48

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #27
  %get_mode = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 18
  %20 = ptrtoint ptr %get_mode to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %get_mode, align 4
  %tobool41.not = icmp eq ptr %21, null
  %spec.select219 = select i1 %tobool41.not, i16 0, i16 %5
  br label %cleanup

if.end48:                                         ; preds = %if.end37
  %cmp49 = icmp eq ptr %attr, @dev_attr_state
  br i1 %cmp49, label %if.then51, label %if.end61

if.then51:                                        ; preds = %if.end48
  %ena_pin = getelementptr i8, ptr %kobj, i32 1052
  %22 = ptrtoint ptr %ena_pin to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ena_pin, align 4
  %tobool52.not = icmp eq ptr %23, null
  br i1 %tobool52.not, label %lor.lhs.false53, label %if.then51.cond.true55_crit_edge

if.then51.cond.true55_crit_edge:                  ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #27
  br label %cond.true55

lor.lhs.false53:                                  ; preds = %if.then51
  %is_enabled = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 16
  %24 = ptrtoint ptr %is_enabled to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %is_enabled, align 4
  %tobool54.not = icmp eq ptr %25, null
  br i1 %tobool54.not, label %lor.lhs.false53.cleanup_crit_edge, label %lor.lhs.false53.cond.true55_crit_edge

lor.lhs.false53.cond.true55_crit_edge:            ; preds = %lor.lhs.false53
  call void @__sanitizer_cov_trace_pc() #27
  br label %cond.true55

lor.lhs.false53.cleanup_crit_edge:                ; preds = %lor.lhs.false53
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

cond.true55:                                      ; preds = %lor.lhs.false53.cond.true55_crit_edge, %if.then51.cond.true55_crit_edge
  br label %cleanup

if.end61:                                         ; preds = %if.end48
  %cmp62 = icmp eq ptr %attr, @dev_attr_status
  br i1 %cmp62, label %if.then64, label %if.end72

if.then64:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #27
  %get_status = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 25
  %26 = ptrtoint ptr %get_status to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %get_status, align 4
  %tobool65.not = icmp eq ptr %27, null
  %spec.select220 = select i1 %tobool65.not, i16 0, i16 %5
  br label %cleanup

if.end72:                                         ; preds = %if.end61
  %cmp73 = icmp eq ptr %attr, @dev_attr_bypass
  br i1 %cmp73, label %if.then75, label %if.end83

if.then75:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #27
  %get_bypass = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 29
  %28 = ptrtoint ptr %get_bypass to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %get_bypass, align 4
  %tobool76.not = icmp eq ptr %29, null
  %spec.select221 = select i1 %tobool76.not, i16 0, i16 %5
  br label %cleanup

if.end83:                                         ; preds = %if.end72
  %cmp84 = icmp eq ptr %attr, @dev_attr_min_microvolts
  %cmp87 = icmp eq ptr %attr, @dev_attr_max_microvolts
  %or.cond222 = or i1 %cmp84, %cmp87
  br i1 %or.cond222, label %if.then89, label %if.end99

if.then89:                                        ; preds = %if.end83
  %set_voltage = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 1
  %30 = ptrtoint ptr %set_voltage to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %set_voltage, align 4
  %tobool90.not = icmp eq ptr %31, null
  br i1 %tobool90.not, label %lor.lhs.false91, label %if.then89.cond.true93_crit_edge

if.then89.cond.true93_crit_edge:                  ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #27
  br label %cond.true93

lor.lhs.false91:                                  ; preds = %if.then89
  %set_voltage_sel = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 3
  %32 = ptrtoint ptr %set_voltage_sel to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %set_voltage_sel, align 4
  %tobool92.not = icmp eq ptr %33, null
  br i1 %tobool92.not, label %lor.lhs.false91.cleanup_crit_edge, label %lor.lhs.false91.cond.true93_crit_edge

lor.lhs.false91.cond.true93_crit_edge:            ; preds = %lor.lhs.false91
  call void @__sanitizer_cov_trace_pc() #27
  br label %cond.true93

lor.lhs.false91.cleanup_crit_edge:                ; preds = %lor.lhs.false91
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

cond.true93:                                      ; preds = %lor.lhs.false91.cond.true93_crit_edge, %if.then89.cond.true93_crit_edge
  br label %cleanup

if.end99:                                         ; preds = %if.end83
  %cmp100 = icmp eq ptr %attr, @dev_attr_min_microamps
  %cmp103 = icmp eq ptr %attr, @dev_attr_max_microamps
  %or.cond223 = or i1 %cmp100, %cmp103
  br i1 %or.cond223, label %if.then105, label %if.end113

if.then105:                                       ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #27
  %set_current_limit = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 6
  %34 = ptrtoint ptr %set_current_limit to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %set_current_limit, align 4
  %tobool106.not = icmp eq ptr %35, null
  %spec.select224 = select i1 %tobool106.not, i16 0, i16 %5
  br label %cleanup

if.end113:                                        ; preds = %if.end99
  %cmp114 = icmp eq ptr %attr, @dev_attr_suspend_standby_state
  %cmp117 = icmp eq ptr %attr, @dev_attr_suspend_mem_state
  %or.cond225 = or i1 %cmp114, %cmp117
  %cmp120 = icmp eq ptr %attr, @dev_attr_suspend_disk_state
  %or.cond226 = or i1 %cmp120, %or.cond225
  br i1 %or.cond226, label %if.end113.cleanup_crit_edge, label %if.end123

if.end113.cleanup_crit_edge:                      ; preds = %if.end113
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end123:                                        ; preds = %if.end113
  %cmp124 = icmp eq ptr %attr, @dev_attr_suspend_standby_microvolts
  %cmp127 = icmp eq ptr %attr, @dev_attr_suspend_mem_microvolts
  %or.cond227 = or i1 %cmp124, %cmp127
  %cmp130 = icmp eq ptr %attr, @dev_attr_suspend_disk_microvolts
  %or.cond228 = or i1 %cmp130, %or.cond227
  br i1 %or.cond228, label %if.then132, label %if.end140

if.then132:                                       ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #27
  %set_suspend_voltage = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 30
  %36 = ptrtoint ptr %set_suspend_voltage to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %set_suspend_voltage, align 4
  %tobool133.not = icmp eq ptr %37, null
  %spec.select229 = select i1 %tobool133.not, i16 0, i16 %5
  br label %cleanup

if.end140:                                        ; preds = %if.end123
  %cmp141 = icmp eq ptr %attr, @dev_attr_suspend_standby_mode
  %cmp144 = icmp eq ptr %attr, @dev_attr_suspend_mem_mode
  %or.cond230 = or i1 %cmp141, %cmp144
  %cmp147 = icmp eq ptr %attr, @dev_attr_suspend_disk_mode
  %or.cond231 = or i1 %cmp147, %or.cond230
  br i1 %or.cond231, label %if.then149, label %if.end140.cleanup_crit_edge

if.end140.cleanup_crit_edge:                      ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.then149:                                       ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #27
  %set_suspend_mode = getelementptr inbounds %struct.regulator_ops, ptr %3, i32 0, i32 33
  %38 = ptrtoint ptr %set_suspend_mode to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %set_suspend_mode, align 4
  %tobool150.not = icmp eq ptr %39, null
  %spec.select232 = select i1 %tobool150.not, i16 0, i16 %5
  br label %cleanup

cleanup:                                          ; preds = %if.then149, %if.end140.cleanup_crit_edge, %if.then132, %if.end113.cleanup_crit_edge, %if.then105, %cond.true93, %lor.lhs.false91.cleanup_crit_edge, %if.then75, %if.then64, %cond.true55, %lor.lhs.false53.cleanup_crit_edge, %if.then40, %if.then34, %if.end31, %land.lhs.true27.cleanup_crit_edge, %land.lhs.true20.cleanup_crit_edge, %land.lhs.true14.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i16 [ 0, %if.end31 ], [ %spec.select, %if.then34 ], [ %spec.select219, %if.then40 ], [ %spec.select220, %if.then64 ], [ %spec.select221, %if.then75 ], [ %spec.select224, %if.then105 ], [ %spec.select229, %if.then132 ], [ %spec.select232, %if.then149 ], [ %5, %entry.cleanup_crit_edge ], [ %5, %land.lhs.true27.cleanup_crit_edge ], [ %5, %land.lhs.true20.cleanup_crit_edge ], [ %5, %land.lhs.true14.cleanup_crit_edge ], [ %5, %land.lhs.true.cleanup_crit_edge ], [ %5, %cond.true55 ], [ 0, %lor.lhs.false53.cleanup_crit_edge ], [ %5, %cond.true93 ], [ 0, %lor.lhs.false91.cleanup_crit_edge ], [ %5, %if.end113.cleanup_crit_edge ], [ %5, %if.end140.cleanup_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @name_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.if.else.i_crit_edge, label %land.lhs.true.i

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %entry
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool6.not.i = icmp eq ptr %9, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %9
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %5, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call2 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.293, ptr noundef %retval.0.i)
  ret i32 %call2
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #17

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @num_users_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %use_count, align 8
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %3)
  ret i32 %call1
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @type_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #24 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %type = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.377)
  switch i32 %5, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %7 = call ptr @memcpy(ptr %buf, ptr @.str.297, i32 9)
  br label %cleanup

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %8 = call ptr @memcpy(ptr %buf, ptr @.str.298, i32 9)
  br label %cleanup

sw.epilog:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %9 = call ptr @memcpy(ptr %buf, ptr @.str.299, i32 9)
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb2, %sw.bb
  ret i32 8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @microvolts_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  tail call fastcc void @regulator_lock(ptr noundef %1)
  %call1 = tail call i32 @regulator_get_voltage_rdev(ptr noundef %1)
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %3, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %entry.if.end.i_crit_edge

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %4 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %5 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry.if.end.i_crit_edge
  %6 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %entry.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp2.i = icmp slt i32 %6, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %regulator_unlock.exit.cleanup_crit_edge, label %if.end

regulator_unlock.exit.cleanup_crit_edge:          ; preds = %regulator_unlock.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %regulator_unlock.exit
  call void @__sanitizer_cov_trace_pc() #27
  %call2 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %call1)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %regulator_unlock.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call1, %regulator_unlock.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @microamps_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %call1 = tail call fastcc i32 @_regulator_get_current_limit(ptr noundef %1)
  %call2 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %call1)
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @opmode_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %call1 = tail call fastcc i32 @_regulator_get_mode(ptr noundef %1)
  %switch.tableidx = add i32 %call1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %switch.tableidx)
  %2 = icmp ult i32 %switch.tableidx, 8
  br i1 %2, label %switch.lookup, label %entry.regulator_print_opmode.exit_crit_edge

entry.regulator_print_opmode.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_print_opmode.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %switch.gep = getelementptr inbounds [8 x ptr], ptr @switch.table.opmode_show, i32 0, i32 %switch.tableidx
  %3 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %3)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %regulator_print_opmode.exit

regulator_print_opmode.exit:                      ; preds = %switch.lookup, %entry.regulator_print_opmode.exit_crit_edge
  %retval.0.i.i = phi ptr [ %switch.load, %switch.lookup ], [ @.str.307, %entry.regulator_print_opmode.exit_crit_edge ]
  %call1.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.293, ptr noundef nonnull %retval.0.i.i) #25
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @state_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  tail call fastcc void @regulator_lock(ptr noundef %1)
  %ena_pin.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 21
  %2 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 22
  %4 = ptrtoint ptr %ena_gpio_state.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i = load i8, ptr %ena_gpio_state.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %_regulator_is_enabled.exit

if.end.i:                                         ; preds = %entry
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %6, i32 0, i32 10
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.regulator_ops, ptr %8, i32 0, i32 16
  %9 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %is_enabled.i, align 4
  %tobool1.not.i = icmp eq ptr %10, null
  br i1 %tobool1.not.i, label %if.end.i.if.then.i5_crit_edge, label %if.end3.i

if.end.i.if.then.i5_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then.i5

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %10(ptr noundef %1) #25
  br label %_regulator_is_enabled.exit

_regulator_is_enabled.exit:                       ; preds = %if.end3.i, %if.then.i
  %retval.0.i = phi i32 [ %bf.cast.i, %if.then.i ], [ %call.i, %if.end3.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp.i = icmp sgt i32 %retval.0.i, 0
  br i1 %cmp.i, label %_regulator_is_enabled.exit.if.then.i5_crit_edge, label %if.else.i

_regulator_is_enabled.exit.if.then.i5_crit_edge:  ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.then.i5

if.then.i5:                                       ; preds = %_regulator_is_enabled.exit.if.then.i5_crit_edge, %if.end.i.if.then.i5_crit_edge
  %11 = call ptr @memcpy(ptr %buf, ptr @.str.309, i32 9)
  br label %regulator_print_state.exit

if.else.i:                                        ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp1.i = icmp eq i32 %retval.0.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  %12 = call ptr @memcpy(ptr %buf, ptr @.str.310, i32 10)
  br label %regulator_print_state.exit

if.else4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  %13 = call ptr @memcpy(ptr %buf, ptr @.str.299, i32 9)
  br label %regulator_print_state.exit

regulator_print_state.exit:                       ; preds = %if.else4.i, %if.then2.i, %if.then.i5
  %retval.0.i6 = phi i32 [ 8, %if.then.i5 ], [ 9, %if.then2.i ], [ 8, %if.else4.i ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %14 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %15, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i7 = icmp eq i32 %dec.i, 0
  br i1 %cmp.i7, label %if.then.i8, label %regulator_print_state.exit.if.end.i9_crit_edge

regulator_print_state.exit.if.end.i9_crit_edge:   ; preds = %regulator_print_state.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i9

if.then.i8:                                       ; preds = %regulator_print_state.exit
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %16 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %17 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i9

if.end.i9:                                        ; preds = %if.then.i8, %regulator_print_state.exit.if.end.i9_crit_edge
  %18 = phi i32 [ %.pr.i, %if.then.i8 ], [ %dec.i, %regulator_print_state.exit.if.end.i9_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp2.i = icmp slt i32 %18, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i9.regulator_unlock.exit_crit_edge

if.end.i9.regulator_unlock.exit_crit_edge:        ; preds = %if.end.i9
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i9
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i9.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  ret i32 %retval.0.i6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @status_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %get_status = getelementptr inbounds %struct.regulator_ops, ptr %5, i32 0, i32 25
  %6 = ptrtoint ptr %get_status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %get_status, align 4
  %call1 = tail call i32 %7(ptr noundef %1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %call1)
  %8 = icmp ult i32 %call1, 9
  br i1 %8, label %switch.lookup, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

switch.lookup:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %switch.gep = getelementptr inbounds [9 x ptr], ptr @switch.table.status_show, i32 0, i32 %call1
  %9 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %9)
  %switch.load = load ptr, ptr %switch.gep, align 4
  %call10 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.293, ptr noundef nonnull %switch.load)
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %switch.lookup ], [ %call1, %entry.cleanup_crit_edge ], [ -34, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bypass_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  %bypass = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %bypass) #25
  %2 = ptrtoint ptr %bypass to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 -1, ptr %bypass, align 1, !annotation !995
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops, align 4
  %get_bypass = getelementptr inbounds %struct.regulator_ops, ptr %6, i32 0, i32 29
  %7 = ptrtoint ptr %get_bypass to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %get_bypass, align 4
  %call1 = call i32 %8(ptr noundef %1, ptr noundef nonnull %bypass) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp.not = icmp eq i32 %call1, 0
  br i1 %cmp.not, label %if.else, label %entry.if.end4_crit_edge

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end4

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %9 = ptrtoint ptr %bypass to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %bypass, align 1, !range !1000
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not = icmp eq i8 %10, 0
  %.str.273..str.272 = select i1 %tobool.not, ptr @.str.273, ptr @.str.272
  br label %if.end4

if.end4:                                          ; preds = %if.else, %entry.if.end4_crit_edge
  %report.0 = phi ptr [ @.str.307, %entry.if.end4_crit_edge ], [ %.str.273..str.272, %if.else ]
  %call5 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.293, ptr noundef nonnull %report.0)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %bypass) #25
  ret i32 %call5
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @min_microvolts_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %4 = call ptr @memcpy(ptr %buf, ptr @.str.318, i32 24)
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %min_uV = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 1
  %5 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %min_uV, align 4
  %call3 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %6)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call3, %if.end ], [ 23, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @max_microvolts_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %4 = call ptr @memcpy(ptr %buf, ptr @.str.318, i32 24)
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %max_uV = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 2
  %5 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_uV, align 4
  %call3 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %6)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call3, %if.end ], [ 23, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @min_microamps_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %4 = call ptr @memcpy(ptr %buf, ptr @.str.318, i32 24)
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %min_uA = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 4
  %5 = ptrtoint ptr %min_uA to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %min_uA, align 4
  %call3 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %6)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call3, %if.end ], [ 23, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @max_microamps_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %4 = call ptr @memcpy(ptr %buf, ptr @.str.318, i32 24)
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %max_uA = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 5
  %5 = ptrtoint ptr %max_uA to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_uA, align 4
  %call3 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %6)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call3, %if.end ], [ 23, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @suspend_standby_state_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #24 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %enabled = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 15, i32 4
  %4 = ptrtoint ptr %enabled to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i = icmp sgt i32 %5, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %6 = call ptr @memcpy(ptr %buf, ptr @.str.309, i32 9)
  br label %regulator_print_state.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp1.i = icmp eq i32 %5, 0
  br i1 %cmp1.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  %7 = call ptr @memcpy(ptr %buf, ptr @.str.310, i32 10)
  br label %regulator_print_state.exit

if.else4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  %8 = call ptr @memcpy(ptr %buf, ptr @.str.299, i32 9)
  br label %regulator_print_state.exit

regulator_print_state.exit:                       ; preds = %if.else4.i, %if.then2.i, %if.then.i
  %retval.0.i = phi i32 [ 8, %if.then.i ], [ 9, %if.then2.i ], [ 8, %if.else4.i ]
  ret i32 %retval.0.i
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @suspend_mem_state_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #24 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %enabled = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 14, i32 4
  %4 = ptrtoint ptr %enabled to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i = icmp sgt i32 %5, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %6 = call ptr @memcpy(ptr %buf, ptr @.str.309, i32 9)
  br label %regulator_print_state.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp1.i = icmp eq i32 %5, 0
  br i1 %cmp1.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  %7 = call ptr @memcpy(ptr %buf, ptr @.str.310, i32 10)
  br label %regulator_print_state.exit

if.else4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  %8 = call ptr @memcpy(ptr %buf, ptr @.str.299, i32 9)
  br label %regulator_print_state.exit

regulator_print_state.exit:                       ; preds = %if.else4.i, %if.then2.i, %if.then.i
  %retval.0.i = phi i32 [ 8, %if.then.i ], [ 9, %if.then2.i ], [ 8, %if.else4.i ]
  ret i32 %retval.0.i
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @suspend_disk_state_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #24 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %enabled = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 13, i32 4
  %4 = ptrtoint ptr %enabled to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i = icmp sgt i32 %5, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %6 = call ptr @memcpy(ptr %buf, ptr @.str.309, i32 9)
  br label %regulator_print_state.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp1.i = icmp eq i32 %5, 0
  br i1 %cmp1.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  %7 = call ptr @memcpy(ptr %buf, ptr @.str.310, i32 10)
  br label %regulator_print_state.exit

if.else4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #27
  %8 = call ptr @memcpy(ptr %buf, ptr @.str.299, i32 9)
  br label %regulator_print_state.exit

regulator_print_state.exit:                       ; preds = %if.else4.i, %if.then2.i, %if.then.i
  %retval.0.i = phi i32 [ 8, %if.then.i ], [ 9, %if.then2.i ], [ 8, %if.else4.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @suspend_standby_microvolts_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %state_standby = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 15
  %4 = ptrtoint ptr %state_standby to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state_standby, align 4
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %5)
  ret i32 %call1
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @suspend_mem_microvolts_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %state_mem = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %state_mem to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state_mem, align 4
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %5)
  ret i32 %call1
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @suspend_disk_microvolts_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %state_disk = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %state_disk to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state_disk, align 4
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %5)
  ret i32 %call1
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @suspend_standby_mode_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %mode = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 15, i32 3
  %4 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mode, align 4
  %switch.tableidx = add i32 %5, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %switch.tableidx)
  %6 = icmp ult i32 %switch.tableidx, 8
  br i1 %6, label %switch.lookup, label %entry.regulator_print_opmode.exit_crit_edge

entry.regulator_print_opmode.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_print_opmode.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %switch.gep = getelementptr inbounds [8 x ptr], ptr @switch.table.suspend_standby_mode_show, i32 0, i32 %switch.tableidx
  %7 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %7)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %regulator_print_opmode.exit

regulator_print_opmode.exit:                      ; preds = %switch.lookup, %entry.regulator_print_opmode.exit_crit_edge
  %retval.0.i.i = phi ptr [ %switch.load, %switch.lookup ], [ @.str.307, %entry.regulator_print_opmode.exit_crit_edge ]
  %call1.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.293, ptr noundef nonnull %retval.0.i.i) #25
  ret i32 %call1.i
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @suspend_mem_mode_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %mode = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 14, i32 3
  %4 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mode, align 4
  %switch.tableidx = add i32 %5, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %switch.tableidx)
  %6 = icmp ult i32 %switch.tableidx, 8
  br i1 %6, label %switch.lookup, label %entry.regulator_print_opmode.exit_crit_edge

entry.regulator_print_opmode.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_print_opmode.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %switch.gep = getelementptr inbounds [8 x ptr], ptr @switch.table.suspend_mem_mode_show, i32 0, i32 %switch.tableidx
  %7 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %7)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %regulator_print_opmode.exit

regulator_print_opmode.exit:                      ; preds = %switch.lookup, %entry.regulator_print_opmode.exit_crit_edge
  %retval.0.i.i = phi ptr [ %switch.load, %switch.lookup ], [ @.str.307, %entry.regulator_print_opmode.exit_crit_edge ]
  %call1.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.293, ptr noundef nonnull %retval.0.i.i) #25
  ret i32 %call1.i
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @suspend_disk_mode_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %constraints = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints, align 8
  %mode = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 13, i32 3
  %4 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mode, align 4
  %switch.tableidx = add i32 %5, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %switch.tableidx)
  %6 = icmp ult i32 %switch.tableidx, 8
  br i1 %6, label %switch.lookup, label %entry.regulator_print_opmode.exit_crit_edge

entry.regulator_print_opmode.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_print_opmode.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %switch.gep = getelementptr inbounds [8 x ptr], ptr @switch.table.suspend_disk_mode_show, i32 0, i32 %switch.tableidx
  %7 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %7)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %regulator_print_opmode.exit

regulator_print_opmode.exit:                      ; preds = %switch.lookup, %entry.regulator_print_opmode.exit_crit_edge
  %retval.0.i.i = phi ptr [ %switch.load, %switch.lookup ], [ @.str.307, %entry.regulator_print_opmode.exit_crit_edge ]
  %call1.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.293, ptr noundef nonnull %retval.0.i.i) #25
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @requested_microamps_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  tail call fastcc void @regulator_lock(ptr noundef %1)
  %consumer_list = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %consumer_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn15 = load ptr, ptr %consumer_list, align 4
  %cmp.not16 = icmp eq ptr %.pn15, %consumer_list
  br i1 %cmp.not16, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn18 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn15, %entry.for.body_crit_edge ]
  %uA.017 = phi i32 [ %uA.1, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %enable_count = getelementptr i8, ptr %.pn18, i32 16
  %3 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %enable_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  %uA_load = getelementptr i8, ptr %.pn18, i32 12
  %5 = ptrtoint ptr %uA_load to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %uA_load, align 4
  %add = add i32 %6, %uA.017
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %uA.1 = phi i32 [ %add, %if.then ], [ %uA.017, %for.body.for.inc_crit_edge ]
  %7 = ptrtoint ptr %.pn18 to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn = load ptr, ptr %.pn18, align 4
  %cmp.not = icmp eq ptr %.pn, %consumer_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %uA.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %uA.1, %for.inc.for.end_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %9, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %for.end.if.end.i_crit_edge

for.end.if.end.i_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 10
  %10 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 9
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %11 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.end.if.end.i_crit_edge
  %12 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %for.end.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp2.i = icmp slt i32 %12, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %call7 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.295, i32 noundef %uA.0.lcssa)
  ret i32 %call7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_suspend(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  %constraints.i.i = getelementptr i8, ptr %dev, i32 928
  %0 = ptrtoint ptr %constraints.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i.i, align 8
  %cmp.i.i = icmp eq ptr %1, null
  br i1 %cmp.i.i, label %entry.cleanup_crit_edge, label %if.end.i.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end.i.i:                                       ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pm_suspend_target_state to i32))
  %2 = load i32, ptr @pm_suspend_target_state, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.378)
  switch i32 %2, label %if.end.i.i.cleanup_crit_edge [
    i32 2, label %sw.bb.i.i
    i32 3, label %sw.bb2.i.i
    i32 4, label %sw.bb4.i.i
  ]

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

sw.bb.i.i:                                        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_standby.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 15
  br label %regulator_get_suspend_state.exit.i

sw.bb2.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_mem.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 14
  br label %regulator_get_suspend_state.exit.i

sw.bb4.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_disk.i.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 13
  br label %regulator_get_suspend_state.exit.i

regulator_get_suspend_state.exit.i:               ; preds = %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb.i.i
  %retval.0.i.i = phi ptr [ %state_disk.i.i, %sw.bb4.i.i ], [ %state_mem.i.i, %sw.bb2.i.i ], [ %state_standby.i.i, %sw.bb.i.i ]
  %cmp.i = icmp eq ptr %retval.0.i.i, null
  br i1 %cmp.i, label %regulator_get_suspend_state.exit.i.cleanup_crit_edge, label %if.end.i

regulator_get_suspend_state.exit.i.cleanup_crit_edge: ; preds = %regulator_get_suspend_state.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end.i:                                         ; preds = %regulator_get_suspend_state.exit.i
  %enabled.i = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i.i, i32 0, i32 4
  %4 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %enabled.i, align 4
  %.off.i = add i32 %5, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.end, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %7, i32 0, i32 10
  %8 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops.i, align 4
  %set_suspend_voltage.i = getelementptr inbounds %struct.regulator_ops, ptr %9, i32 0, i32 30
  %10 = ptrtoint ptr %set_suspend_voltage.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %set_suspend_voltage.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %if.then4.i.land.lhs.true.i.i_crit_edge

if.then4.i.land.lhs.true.i.i_crit_edge:           ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true.i.i

lor.lhs.false.i:                                  ; preds = %if.then4.i
  %set_suspend_mode.i = getelementptr inbounds %struct.regulator_ops, ptr %9, i32 0, i32 33
  %12 = ptrtoint ptr %set_suspend_mode.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %set_suspend_mode.i, align 4
  %tobool7.not.i = icmp eq ptr %13, null
  br i1 %tobool7.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %lor.lhs.false.i.land.lhs.true.i.i_crit_edge

lor.lhs.false.i.land.lhs.true.i.i_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %land.lhs.true.i.i

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.land.lhs.true.i.i_crit_edge, %if.then4.i.land.lhs.true.i.i_crit_edge
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 4
  %tobool2.not.i.i = icmp eq ptr %15, null
  br i1 %tobool2.not.i.i, label %if.else.i.i, label %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge

land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  %16 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %7, align 4
  %tobool6.not.i.i = icmp eq ptr %17, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %17
  br label %rdev_get_name.exit.i

rdev_get_name.exit.i:                             ; preds = %if.else.i.i, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge
  %retval.0.i20.i = phi ptr [ %15, %land.lhs.true.i.i.rdev_get_name.exit.i_crit_edge ], [ %.str..i.i, %if.else.i.i ]
  %call10.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.247, ptr noundef %retval.0.i20.i) #30
  br label %cleanup

if.end:                                           ; preds = %if.end.i
  tail call fastcc void @regulator_lock(ptr noundef %add.ptr.i)
  %call2 = tail call fastcc i32 @__suspend_set_state(ptr noundef %add.ptr.i, ptr noundef nonnull %retval.0.i.i)
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr i8, ptr %dev, i32 -8
  %18 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %19, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i10 = icmp eq i32 %dec.i, 0
  br i1 %cmp.i10, label %if.then.i, label %if.end.if.end.i11_crit_edge

if.end.if.end.i11_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i11

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr i8, ptr %dev, i32 -12
  %20 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr i8, ptr %dev, i32 -112
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %21 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i11

if.end.i11:                                       ; preds = %if.then.i, %if.end.if.end.i11_crit_edge
  %22 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.end.if.end.i11_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp2.i = icmp slt i32 %22, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i11.regulator_unlock.exit_crit_edge

if.end.i11.regulator_unlock.exit_crit_edge:       ; preds = %if.end.i11
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i11
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i11.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %cleanup

cleanup:                                          ; preds = %regulator_unlock.exit, %rdev_get_name.exit.i, %lor.lhs.false.i.cleanup_crit_edge, %regulator_get_suspend_state.exit.i.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %regulator_unlock.exit ], [ 0, %regulator_get_suspend_state.exit.i.cleanup_crit_edge ], [ 0, %rdev_get_name.exit.i ], [ 0, %lor.lhs.false.i.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_resume(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  %constraints.i = getelementptr i8, ptr %dev, i32 928
  %0 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints.i, align 8
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end.i:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pm_suspend_target_state to i32))
  %2 = load i32, ptr @pm_suspend_target_state, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.379)
  switch i32 %2, label %if.end.i.cleanup_crit_edge [
    i32 2, label %sw.bb.i
    i32 3, label %sw.bb2.i
    i32 4, label %sw.bb4.i
  ]

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_standby.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 15
  br label %regulator_get_suspend_state.exit

sw.bb2.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_mem.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 14
  br label %regulator_get_suspend_state.exit

sw.bb4.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %state_disk.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 13
  br label %regulator_get_suspend_state.exit

regulator_get_suspend_state.exit:                 ; preds = %sw.bb4.i, %sw.bb2.i, %sw.bb.i
  %retval.0.i = phi ptr [ %state_disk.i, %sw.bb4.i ], [ %state_mem.i, %sw.bb2.i ], [ %state_standby.i, %sw.bb.i ]
  %cmp = icmp eq ptr %retval.0.i, null
  br i1 %cmp, label %regulator_get_suspend_state.exit.cleanup_crit_edge, label %if.end

regulator_get_suspend_state.exit.cleanup_crit_edge: ; preds = %regulator_get_suspend_state.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %regulator_get_suspend_state.exit
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 8
  %ops = getelementptr inbounds %struct.regulator_desc, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %resume = getelementptr inbounds %struct.regulator_ops, ptr %7, i32 0, i32 34
  %8 = ptrtoint ptr %resume to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %resume, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end3:                                          ; preds = %if.end
  tail call fastcc void @regulator_lock(ptr noundef %add.ptr.i)
  %enabled = getelementptr inbounds %struct.regulator_state, ptr %retval.0.i, i32 0, i32 4
  %10 = ptrtoint ptr %enabled to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %enabled, align 4
  %.off = add i32 %11, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then7, label %if.end3.if.end12_crit_edge

if.end3.if.end12_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end12

if.then7:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #27
  %12 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %add.ptr.i, align 8
  %ops9 = getelementptr inbounds %struct.regulator_desc, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %ops9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops9, align 4
  %resume10 = getelementptr inbounds %struct.regulator_ops, ptr %15, i32 0, i32 34
  %16 = ptrtoint ptr %resume10 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %resume10, align 4
  %call11 = tail call i32 %17(ptr noundef %add.ptr.i) #25
  br label %if.end12

if.end12:                                         ; preds = %if.then7, %if.end3.if.end12_crit_edge
  %ret.0 = phi i32 [ %call11, %if.then7 ], [ 0, %if.end3.if.end12_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr i8, ptr %dev, i32 -8
  %18 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %19, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i23 = icmp eq i32 %dec.i, 0
  br i1 %cmp.i23, label %if.then.i, label %if.end12.if.end.i24_crit_edge

if.end12.if.end.i24_crit_edge:                    ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i24

if.then.i:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr i8, ptr %dev, i32 -12
  %20 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr i8, ptr %dev, i32 -112
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %21 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i24

if.end.i24:                                       ; preds = %if.then.i, %if.end12.if.end.i24_crit_edge
  %22 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.end12.if.end.i24_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp2.i = icmp slt i32 %22, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i24.regulator_unlock.exit_crit_edge

if.end.i24.regulator_unlock.exit_crit_edge:       ; preds = %if.end.i24
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i24
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i24.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %cleanup

cleanup:                                          ; preds = %regulator_unlock.exit, %if.end.cleanup_crit_edge, %regulator_get_suspend_state.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %regulator_unlock.exit ], [ 0, %regulator_get_suspend_state.exit.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__class_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @regulator_dummy_init() local_unnamed_addr #4 section ".init.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @seq_lseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @seq_read(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @supply_map_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @supply_map_show, ptr noundef %1) #25
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @single_release(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @single_open(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @supply_map_show(ptr noundef %sf, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %map.09 = load ptr, ptr @regulator_map_list, align 4
  %cmp.not10 = icmp eq ptr %map.09, @regulator_map_list
  br i1 %cmp.not10, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body:                                         ; preds = %rdev_get_name.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %map.011 = phi ptr [ %map.0, %rdev_get_name.exit.for.body_crit_edge ], [ %map.09, %entry.for.body_crit_edge ]
  %regulator = getelementptr inbounds %struct.regulator_map, ptr %map.011, i32 0, i32 3
  %0 = ptrtoint ptr %regulator to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %regulator, align 4
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %for.body.if.else.i_crit_edge, label %land.lhs.true.i

for.body.if.else.i_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %for.body
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %for.body.if.else.i_crit_edge
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool6.not.i = icmp eq ptr %9, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %9
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %5, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %dev_name = getelementptr inbounds %struct.regulator_map, ptr %map.011, i32 0, i32 1
  %10 = ptrtoint ptr %dev_name to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev_name, align 4
  %supply = getelementptr inbounds %struct.regulator_map, ptr %map.011, i32 0, i32 2
  %12 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %supply, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %sf, ptr noundef nonnull @.str.336, ptr noundef %retval.0.i, ptr noundef %11, ptr noundef %13) #25
  %14 = ptrtoint ptr %map.011 to i32
  call void @__asan_load4_noabort(i32 %14)
  %map.0 = load ptr, ptr %map.011, align 4
  %cmp.not = icmp eq ptr %map.0, @regulator_map_list
  br i1 %cmp.not, label %rdev_get_name.exit.for.end_crit_edge, label %rdev_get_name.exit.for.body_crit_edge

rdev_get_name.exit.for.body_crit_edge:            ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

rdev_get_name.exit.for.end_crit_edge:             ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %rdev_get_name.exit.for.end_crit_edge, %entry.for.end_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_summary_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private, align 4
  %call = tail call i32 @single_open(ptr noundef %file, ptr noundef nonnull @regulator_summary_show, ptr noundef %1) #25
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_summary_show(ptr noundef %s, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  %lock_data.i.i = alloca %struct.summary_lock_data, align 4
  %new_contended_rdev.i = alloca ptr, align 4
  %old_contended_rdev.i = alloca ptr, align 4
  %ww_ctx = alloca %struct.ww_acquire_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ww_ctx) #25
  %0 = getelementptr inbounds i8, ptr %ww_ctx, i32 28
  %1 = call ptr @memset(ptr %0, i32 255, i32 36)
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.337) #25
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.338) #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new_contended_rdev.i) #25
  %2 = ptrtoint ptr %new_contended_rdev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %new_contended_rdev.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old_contended_rdev.i) #25
  %3 = ptrtoint ptr %old_contended_rdev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %old_contended_rdev.i, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_list_mutex, i32 noundef 0) #25
  %4 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i.i, align 8
  %8 = ptrtoint ptr %ww_ctx to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %ww_ctx, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @regulator_ww_class, i32 noundef 4) #25
  tail call void @llvm.prefetch.p0(ptr nonnull @regulator_ww_class, i32 1, i32 3, i32 1) #25
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @regulator_ww_class, ptr nonnull @regulator_ww_class, i32 1, ptr nonnull elementtype(i32) @regulator_ww_class) #25, !srcloc !998
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  %stamp3.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 1
  %10 = ptrtoint ptr %stamp3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %asmresult.i.i.i.i.i.i, ptr %stamp3.i.i, align 4
  %acquired.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 2
  %11 = ptrtoint ptr %acquired.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %acquired.i.i, align 4
  %wounded.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 3
  %12 = ptrtoint ptr %wounded.i.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 0, ptr %wounded.i.i, align 4
  %13 = load i32, ptr getelementptr inbounds (%struct.ww_class, ptr @regulator_ww_class, i32 0, i32 5), align 4
  %conv.i.i = trunc i32 %13 to i16
  %is_wait_die4.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 4
  %14 = ptrtoint ptr %is_wait_die4.i.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %conv.i.i, ptr %is_wait_die4.i.i, align 2
  %ww_class5.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 6
  %15 = ptrtoint ptr %ww_class5.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @regulator_ww_class, ptr %ww_class5.i.i, align 4
  %done_acquire.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 5
  %16 = ptrtoint ptr %done_acquire.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %done_acquire.i.i, align 4
  %contending_lock.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 7
  %17 = ptrtoint ptr %contending_lock.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %contending_lock.i.i, align 4
  call void @debug_check_no_locks_freed(ptr noundef nonnull %ww_ctx, i32 noundef 64) #25
  %dep_map.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 8
  %18 = load ptr, ptr getelementptr inbounds (%struct.ww_class, ptr @regulator_ww_class, i32 0, i32 3), align 4
  call void @lockdep_init_map_type(ptr noundef %dep_map.i.i, ptr noundef %18, ptr noundef getelementptr inbounds (%struct.ww_class, ptr @regulator_ww_class, i32 0, i32 1), i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #25
  %19 = call ptr @llvm.returnaddress(i32 0) #25
  %20 = ptrtoint ptr %19 to i32
  call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %20) #25
  %deadlock_inject_interval.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 9
  %21 = ptrtoint ptr %deadlock_inject_interval.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %deadlock_inject_interval.i.i, align 4
  %22 = ptrtoint ptr %stamp3.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %stamp3.i.i, align 4
  %and.i.i = and i32 %23, 15
  %deadlock_inject_countdown.i.i = getelementptr inbounds %struct.ww_acquire_ctx, ptr %ww_ctx, i32 0, i32 10
  %24 = ptrtoint ptr %deadlock_inject_countdown.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %and.i.i, ptr %deadlock_inject_countdown.i.i, align 4
  %25 = getelementptr inbounds %struct.summary_lock_data, ptr %lock_data.i.i, i32 0, i32 1
  %26 = getelementptr inbounds %struct.summary_lock_data, ptr %lock_data.i.i, i32 0, i32 2
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond.i.do.body.i_crit_edge, %entry
  %27 = ptrtoint ptr %new_contended_rdev.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %new_contended_rdev.i, align 4
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %do.body.i.if.end.i_crit_edge, label %if.then.i

do.body.i.if.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %do.body.i
  %mutex.i = getelementptr inbounds %struct.regulator_dev, ptr %28, i32 0, i32 9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %29 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i.i = icmp eq i32 %29, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.then.i.ww_mutex_lock_slow.exit.i_crit_edge

if.then.i.ww_mutex_lock_slow.exit.i_crit_edge:    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_mutex_lock_slow.exit.i

land.lhs.true.i.i:                                ; preds = %if.then.i
  %30 = ptrtoint ptr %contending_lock.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %contending_lock.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %31, null
  br i1 %tobool1.not.i.i, label %do.end.i.i, label %land.lhs.true.i.i.ww_mutex_lock_slow.exit.i_crit_edge, !prof !994

land.lhs.true.i.i.ww_mutex_lock_slow.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_mutex_lock_slow.exit.i

do.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i = call i32 @debug_locks_off() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i.i, label %do.end.i.i.ww_mutex_lock_slow.exit.i_crit_edge, label %land.lhs.true6.i.i

do.end.i.i.ww_mutex_lock_slow.exit.i_crit_edge:   ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_mutex_lock_slow.exit.i

land.lhs.true6.i.i:                               ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %32 = load i32, ptr @debug_locks_silent, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool7.not.i.i = icmp eq i32 %32, 0
  br i1 %tobool7.not.i.i, label %do.end20.i.i, label %land.lhs.true6.i.i.ww_mutex_lock_slow.exit.i_crit_edge

land.lhs.true6.i.i.ww_mutex_lock_slow.exit.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %ww_mutex_lock_slow.exit.i

do.end20.i.i:                                     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #27
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.102, i32 noundef 297, i32 noundef 9, ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.104) #25
  br label %ww_mutex_lock_slow.exit.i

ww_mutex_lock_slow.exit.i:                        ; preds = %do.end20.i.i, %land.lhs.true6.i.i.ww_mutex_lock_slow.exit.i_crit_edge, %do.end.i.i.ww_mutex_lock_slow.exit.i_crit_edge, %land.lhs.true.i.i.ww_mutex_lock_slow.exit.i_crit_edge, %if.then.i.ww_mutex_lock_slow.exit.i_crit_edge
  %call38.i.i = call i32 @ww_mutex_lock(ptr noundef %mutex.i, ptr noundef nonnull %ww_ctx) #25
  %33 = ptrtoint ptr %new_contended_rdev.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %new_contended_rdev.i, align 4
  %35 = ptrtoint ptr %old_contended_rdev.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %34, ptr %old_contended_rdev.i, align 4
  %ref_cnt.i = getelementptr inbounds %struct.regulator_dev, ptr %34, i32 0, i32 11
  %36 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ref_cnt.i, align 8
  %inc.i = add i32 %37, 1
  store i32 %inc.i, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %ww_mutex_lock_slow.exit.i, %do.body.i.if.end.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %lock_data.i.i) #25
  %38 = ptrtoint ptr %lock_data.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %ww_ctx, ptr %lock_data.i.i, align 4
  %39 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %new_contended_rdev.i, ptr %25, align 4
  %40 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %old_contended_rdev.i, ptr %26, align 4
  %call.i9.i = call i32 @class_for_each_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef nonnull %lock_data.i.i, ptr noundef nonnull @regulator_summary_lock_one) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i9.i)
  %tobool.not.i10.i = icmp eq i32 %call.i9.i, 0
  br i1 %tobool.not.i10.i, label %if.end.i.regulator_summary_lock_all.exit.i_crit_edge, label %if.then.i.i

if.end.i.regulator_summary_lock_all.exit.i_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_summary_lock_all.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  %call4.i.i = call i32 @class_for_each_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef nonnull %lock_data.i.i, ptr noundef nonnull @regulator_summary_unlock_one) #25
  br label %regulator_summary_lock_all.exit.i

regulator_summary_lock_all.exit.i:                ; preds = %if.then.i.i, %if.end.i.regulator_summary_lock_all.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %lock_data.i.i) #25
  %41 = ptrtoint ptr %old_contended_rdev.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %old_contended_rdev.i, align 4
  %tobool1.not.i = icmp eq ptr %42, null
  br i1 %tobool1.not.i, label %regulator_summary_lock_all.exit.i.do.cond.i_crit_edge, label %if.then2.i

regulator_summary_lock_all.exit.i.do.cond.i_crit_edge: ; preds = %regulator_summary_lock_all.exit.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.cond.i

if.then2.i:                                       ; preds = %regulator_summary_lock_all.exit.i
  call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i.i = getelementptr inbounds %struct.regulator_dev, ptr %42, i32 0, i32 11
  %43 = ptrtoint ptr %ref_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %ref_cnt.i.i, align 8
  %dec.i.i = add i32 %44, -1
  store i32 %dec.i.i, ptr %ref_cnt.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %cmp.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp.i.i, label %if.then.i11.i, label %if.then2.i.if.end.i.i_crit_edge

if.then2.i.if.end.i.i_crit_edge:                  ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i.i

if.then.i11.i:                                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i.i = getelementptr inbounds %struct.regulator_dev, ptr %42, i32 0, i32 10
  %45 = ptrtoint ptr %mutex_owner.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %mutex_owner.i.i, align 4
  %mutex.i.i = getelementptr inbounds %struct.regulator_dev, ptr %42, i32 0, i32 9
  call void @ww_mutex_unlock(ptr noundef %mutex.i.i) #25
  %46 = ptrtoint ptr %ref_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pr.i.i = load i32, ptr %ref_cnt.i.i, align 8
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i11.i, %if.then2.i.if.end.i.i_crit_edge
  %47 = phi i32 [ %.pr.i.i, %if.then.i11.i ], [ %dec.i.i, %if.then2.i.if.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %cmp2.i.i = icmp slt i32 %47, 0
  br i1 %cmp2.i.i, label %land.rhs.i.i, label %if.end.i.i.regulator_unlock.exit.i_crit_edge

if.end.i.i.regulator_unlock.exit.i_crit_edge:     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit.i

land.rhs.i.i:                                     ; preds = %if.end.i.i
  %.b44.i.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i.i, label %land.rhs.i.i.regulator_unlock.exit.i_crit_edge, label %if.then9.i.i, !prof !993

land.rhs.i.i.regulator_unlock.exit.i_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit.i

if.then9.i.i:                                     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit.i

regulator_unlock.exit.i:                          ; preds = %if.then9.i.i, %land.rhs.i.i.regulator_unlock.exit.i_crit_edge, %if.end.i.i.regulator_unlock.exit.i_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %do.cond.i

do.cond.i:                                        ; preds = %regulator_unlock.exit.i, %regulator_summary_lock_all.exit.i.do.cond.i_crit_edge
  %cmp.i = icmp eq i32 %call.i9.i, -35
  br i1 %cmp.i, label %do.cond.i.do.body.i_crit_edge, label %do.end.i

do.cond.i.do.body.i_crit_edge:                    ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.body.i

do.end.i:                                         ; preds = %do.cond.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %48 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i12.i = icmp eq i32 %48, 0
  br i1 %tobool.not.i12.i, label %do.end.i.if.end.i16.i_crit_edge, label %land.rhs.i14.i

do.end.i.if.end.i16.i_crit_edge:                  ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i16.i

land.rhs.i14.i:                                   ; preds = %do.end.i
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i15.i, label %land.rhs.i14.i.if.end.i16.i_crit_edge, !prof !994

land.rhs.i14.i.if.end.i16.i_crit_edge:            ; preds = %land.rhs.i14.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i16.i

do.end.i15.i:                                     ; preds = %land.rhs.i14.i
  call void @__sanitizer_cov_trace_pc() #27
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.102, i32 noundef 171, i32 noundef 9, ptr noundef null) #25
  br label %if.end.i16.i

if.end.i16.i:                                     ; preds = %do.end.i15.i, %land.rhs.i14.i.if.end.i16.i_crit_edge, %do.end.i.if.end.i16.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %49 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool24.not.i.i = icmp eq i32 %49, 0
  br i1 %tobool24.not.i.i, label %land.lhs.true.i18.i, label %if.end.i16.i.regulator_summary_lock.exit_crit_edge

if.end.i16.i.regulator_summary_lock.exit_crit_edge: ; preds = %if.end.i16.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_summary_lock.exit

land.lhs.true.i18.i:                              ; preds = %if.end.i16.i
  %50 = ptrtoint ptr %done_acquire.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %done_acquire.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool25.not.i.i = icmp eq i32 %51, 0
  br i1 %tobool25.not.i.i, label %land.lhs.true.i18.i.regulator_summary_lock.exit_crit_edge, label %do.end35.i.i, !prof !993

land.lhs.true.i18.i.regulator_summary_lock.exit_crit_edge: ; preds = %land.lhs.true.i18.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_summary_lock.exit

do.end35.i.i:                                     ; preds = %land.lhs.true.i18.i
  %call36.i.i = call i32 @debug_locks_off() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36.i.i)
  %tobool37.not.i.i = icmp eq i32 %call36.i.i, 0
  br i1 %tobool37.not.i.i, label %do.end35.i.i.regulator_summary_lock.exit_crit_edge, label %land.lhs.true38.i.i

do.end35.i.i.regulator_summary_lock.exit_crit_edge: ; preds = %do.end35.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_summary_lock.exit

land.lhs.true38.i.i:                              ; preds = %do.end35.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %52 = load i32, ptr @debug_locks_silent, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool39.not.i.i = icmp eq i32 %52, 0
  br i1 %tobool39.not.i.i, label %do.end53.i.i, label %land.lhs.true38.i.i.regulator_summary_lock.exit_crit_edge

land.lhs.true38.i.i.regulator_summary_lock.exit_crit_edge: ; preds = %land.lhs.true38.i.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_summary_lock.exit

do.end53.i.i:                                     ; preds = %land.lhs.true38.i.i
  call void @__sanitizer_cov_trace_pc() #27
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.102, i32 noundef 173, i32 noundef 9, ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.107) #25
  br label %regulator_summary_lock.exit

regulator_summary_lock.exit:                      ; preds = %do.end53.i.i, %land.lhs.true38.i.i.regulator_summary_lock.exit_crit_edge, %do.end35.i.i.regulator_summary_lock.exit_crit_edge, %land.lhs.true.i18.i.regulator_summary_lock.exit_crit_edge, %if.end.i16.i.regulator_summary_lock.exit_crit_edge
  %53 = ptrtoint ptr %done_acquire.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 1, ptr %done_acquire.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old_contended_rdev.i) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_contended_rdev.i) #25
  %call = call i32 @class_for_each_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef %s, ptr noundef nonnull @regulator_summary_show_roots) #25
  %call.i = call i32 @class_for_each_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef null, ptr noundef nonnull @regulator_summary_unlock_one) #25
  call fastcc void @ww_acquire_fini(ptr noundef nonnull %ww_ctx) #25
  call void @mutex_unlock(ptr noundef nonnull @regulator_list_mutex) #25
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ww_ctx) #25
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_summary_show_roots(ptr noundef %dev, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %supply = getelementptr i8, ptr %dev, i32 932
  %0 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %supply, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  tail call fastcc void @regulator_summary_show_subtree(ptr noundef %data, ptr noundef %add.ptr.i, i32 noundef 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_summary_lock_one(ptr noundef %dev, ptr nocapture noundef readonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  %old_contended_rdev = getelementptr inbounds %struct.summary_lock_data, ptr %data, i32 0, i32 2
  %0 = ptrtoint ptr %old_contended_rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %old_contended_rdev, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %cmp.not = icmp eq ptr %add.ptr.i, %3
  br i1 %cmp.not, label %if.else41, label %if.then

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %mutex.i = getelementptr i8, ptr %dev, i32 -112
  %call.i = tail call i32 @ww_mutex_trylock(ptr noundef %mutex.i, ptr noundef %5) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %regulator_lock_nested.exit.thread60

regulator_lock_nested.exit.thread60:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  %ref_cnt13.i62 = getelementptr i8, ptr %dev, i32 -8
  %6 = ptrtoint ptr %ref_cnt13.i62 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ref_cnt13.i62, align 8
  %inc14.i63 = add i32 %7, 1
  store i32 %inc14.i63, ptr %ref_cnt13.i62, align 8
  %8 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i28.i64 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i28.i64 to ptr
  %task16.i65 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task16.i65 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task16.i65, align 8
  %mutex_owner17.i66 = getelementptr i8, ptr %dev, i32 -12
  %12 = ptrtoint ptr %mutex_owner17.i66 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %mutex_owner17.i66, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %if.end43

if.then.i:                                        ; preds = %if.then
  %mutex_owner.i = getelementptr i8, ptr %dev, i32 -12
  %13 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mutex_owner.i, align 4
  %15 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %14, %18
  br i1 %cmp.i, label %regulator_lock_nested.exit.thread58, label %if.end9.i

regulator_lock_nested.exit.thread58:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #27
  %ref_cnt.i = getelementptr i8, ptr %dev, i32 -8
  %19 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %ref_cnt.i, align 8
  %inc.i = add i32 %20, 1
  store i32 %inc.i, ptr %ref_cnt.i, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %if.end43

if.end9.i:                                        ; preds = %if.then.i
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %call6.i = tail call i32 @ww_mutex_lock(ptr noundef %mutex.i, ptr noundef %5) #25
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 -35, i32 %call6.i)
  %cmp11.not.i = icmp eq i32 %call6.i, -35
  br i1 %cmp11.not.i, label %regulator_lock_nested.exit.thread, label %regulator_lock_nested.exit

regulator_lock_nested.exit.thread:                ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #27
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  %new_contended_rdev = getelementptr inbounds %struct.summary_lock_data, ptr %data, i32 0, i32 1
  %21 = ptrtoint ptr %new_contended_rdev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %new_contended_rdev, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %add.ptr.i, ptr %22, align 4
  br label %if.end43

regulator_lock_nested.exit:                       ; preds = %if.end9.i
  %ref_cnt13.i = getelementptr i8, ptr %dev, i32 -8
  %24 = ptrtoint ptr %ref_cnt13.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %ref_cnt13.i, align 8
  %inc14.i = add i32 %25, 1
  store i32 %inc14.i, ptr %ref_cnt13.i, align 8
  %26 = tail call i32 @llvm.read_register.i32(metadata !983) #25
  %and.i28.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i28.i to ptr
  %task16.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task16.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task16.i, align 8
  %30 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %mutex_owner.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %cond = icmp eq i32 %call6.i, 0
  br i1 %cond, label %regulator_lock_nested.exit.if.end43_crit_edge, label %land.rhs

regulator_lock_nested.exit.if.end43_crit_edge:    ; preds = %regulator_lock_nested.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end43

land.rhs:                                         ; preds = %regulator_lock_nested.exit
  %.b53 = load i1, ptr @regulator_summary_lock_one.__already_done, align 1
  br i1 %.b53, label %land.rhs.if.end43_crit_edge, label %if.then11, !prof !993

land.rhs.if.end43_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end43

if.then11:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_summary_lock_one.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5876, i32 noundef 9, ptr noundef null) #25
  br label %if.end43

if.else41:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %31 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %1, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then11, %land.rhs.if.end43_crit_edge, %regulator_lock_nested.exit.if.end43_crit_edge, %regulator_lock_nested.exit.thread, %regulator_lock_nested.exit.thread58, %regulator_lock_nested.exit.thread60
  %ret.0 = phi i32 [ -35, %regulator_lock_nested.exit.thread ], [ 0, %if.else41 ], [ 0, %regulator_lock_nested.exit.if.end43_crit_edge ], [ %call6.i, %if.then11 ], [ %call6.i, %land.rhs.if.end43_crit_edge ], [ 0, %regulator_lock_nested.exit.thread58 ], [ 0, %regulator_lock_nested.exit.thread60 ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_summary_unlock_one(ptr noundef %dev, ptr noundef readonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %data, null
  br i1 %tobool.not, label %entry.if.end2_crit_edge, label %if.then

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end2

if.then:                                          ; preds = %entry
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  %new_contended_rdev = getelementptr inbounds %struct.summary_lock_data, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %new_contended_rdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %new_contended_rdev, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %cmp = icmp eq ptr %add.ptr.i, %3
  br i1 %cmp, label %if.then.cleanup_crit_edge, label %if.then.if.end2_crit_edge

if.then.if.end2_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end2

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %entry.if.end2_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr i8, ptr %dev, i32 -8
  %4 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %5, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.end2.if.end.i_crit_edge

if.end2.if.end.i_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i

if.then.i:                                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr i8, ptr %dev, i32 -12
  %6 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr i8, ptr %dev, i32 -112
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %7 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end2.if.end.i_crit_edge
  %8 = phi i32 [ %.pr.i, %if.then.i ], [ %dec.i, %if.end2.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp2.i = icmp slt i32 %8, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i.regulator_unlock.exit_crit_edge

if.end.i.regulator_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %cleanup

cleanup:                                          ; preds = %regulator_unlock.exit, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %regulator_unlock.exit ], [ -35, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @regulator_summary_show_subtree(ptr noundef %s, ptr noundef %rdev, i32 noundef %level) unnamed_addr #0 align 64 {
entry:
  %summary_data = alloca %struct.summary_data, align 4
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %summary_data) #25
  %0 = ptrtoint ptr %summary_data to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %summary_data, align 4, !annotation !995
  %1 = getelementptr inbounds %struct.summary_data, ptr %summary_data, i32 0, i32 1
  %2 = getelementptr inbounds %struct.summary_data, ptr %summary_data, i32 0, i32 2
  %tobool.not = icmp eq ptr %rdev, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rdev, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops.i, align 4
  %get_mode.i = getelementptr inbounds %struct.regulator_ops, ptr %6, i32 0, i32 18
  %7 = ptrtoint ptr %get_mode.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %get_mode.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end._regulator_get_mode_unlocked.exit_crit_edge, label %if.end.i

if.end._regulator_get_mode_unlocked.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_get_mode_unlocked.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %8(ptr noundef nonnull %rdev) #25
  %phi.bo139 = add i32 %call.i, -1
  br label %_regulator_get_mode_unlocked.exit

_regulator_get_mode_unlocked.exit:                ; preds = %if.end.i, %if.end._regulator_get_mode_unlocked.exit_crit_edge
  %retval.0.i = phi i32 [ %phi.bo139, %if.end.i ], [ -23, %if.end._regulator_get_mode_unlocked.exit_crit_edge ]
  %mul = mul i32 %level, 3
  %add = add i32 %mul, 1
  %sub = sub i32 30, %mul
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %9 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %constraints.i, align 8
  %tobool.not.i112 = icmp eq ptr %10, null
  br i1 %tobool.not.i112, label %_regulator_get_mode_unlocked.exit.if.else.i_crit_edge, label %land.lhs.true.i

_regulator_get_mode_unlocked.exit.if.else.i_crit_edge: ; preds = %_regulator_get_mode_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %_regulator_get_mode_unlocked.exit
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %tobool2.not.i = icmp eq ptr %12, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %_regulator_get_mode_unlocked.exit.if.else.i_crit_edge
  %13 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rdev, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %tobool6.not.i = icmp eq ptr %16, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %16
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i113 = phi ptr [ %12, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %use_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 2
  %17 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %use_count, align 8
  %open_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 3
  %19 = ptrtoint ptr %open_count to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %open_count, align 4
  %bypass_count = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 4
  %21 = ptrtoint ptr %bypass_count to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %bypass_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %retval.0.i)
  %23 = icmp ult i32 %retval.0.i, 8
  br i1 %23, label %switch.lookup, label %rdev_get_name.exit.regulator_opmode_to_str.exit_crit_edge

rdev_get_name.exit.regulator_opmode_to_str.exit_crit_edge: ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_opmode_to_str.exit

switch.lookup:                                    ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  %switch.gep = getelementptr inbounds [8 x ptr], ptr @switch.table.regulator_summary_show_subtree, i32 0, i32 %retval.0.i
  %24 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %24)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %regulator_opmode_to_str.exit

regulator_opmode_to_str.exit:                     ; preds = %switch.lookup, %rdev_get_name.exit.regulator_opmode_to_str.exit_crit_edge
  %retval.0.i114 = phi ptr [ %switch.load, %switch.lookup ], [ @.str.307, %rdev_get_name.exit.regulator_opmode_to_str.exit_crit_edge ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.339, i32 noundef %add, ptr noundef nonnull @.str, i32 noundef %sub, ptr noundef %retval.0.i113, i32 noundef %18, i32 noundef %20, i32 noundef %22, ptr noundef nonnull %retval.0.i114) #25
  %call4 = tail call i32 @regulator_get_voltage_rdev(ptr noundef nonnull %rdev)
  %div = sdiv i32 %call4, 1000
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.340, i32 noundef %div) #25
  %25 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %rdev, align 8
  %ops.i115 = getelementptr inbounds %struct.regulator_desc, ptr %26, i32 0, i32 10
  %27 = ptrtoint ptr %ops.i115 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ops.i115, align 4
  %get_current_limit.i = getelementptr inbounds %struct.regulator_ops, ptr %28, i32 0, i32 7
  %29 = ptrtoint ptr %get_current_limit.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %get_current_limit.i, align 4
  %tobool.not.i116 = icmp eq ptr %30, null
  br i1 %tobool.not.i116, label %regulator_opmode_to_str.exit._regulator_get_current_limit_unlocked.exit_crit_edge, label %if.end.i118

regulator_opmode_to_str.exit._regulator_get_current_limit_unlocked.exit_crit_edge: ; preds = %regulator_opmode_to_str.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %_regulator_get_current_limit_unlocked.exit

if.end.i118:                                      ; preds = %regulator_opmode_to_str.exit
  call void @__sanitizer_cov_trace_pc() #27
  %call.i117 = tail call i32 %30(ptr noundef nonnull %rdev) #25
  %phi.bo = sdiv i32 %call.i117, 1000
  br label %_regulator_get_current_limit_unlocked.exit

_regulator_get_current_limit_unlocked.exit:       ; preds = %if.end.i118, %regulator_opmode_to_str.exit._regulator_get_current_limit_unlocked.exit_crit_edge
  %retval.0.i119 = phi i32 [ %phi.bo, %if.end.i118 ], [ 0, %regulator_opmode_to_str.exit._regulator_get_current_limit_unlocked.exit_crit_edge ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.341, i32 noundef %retval.0.i119) #25
  %31 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %constraints.i, align 8
  %tobool7.not = icmp eq ptr %32, null
  br i1 %tobool7.not, label %_regulator_get_current_limit_unlocked.exit.if.end14_crit_edge, label %if.then8

_regulator_get_current_limit_unlocked.exit.if.end14_crit_edge: ; preds = %_regulator_get_current_limit_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end14

if.then8:                                         ; preds = %_regulator_get_current_limit_unlocked.exit
  %33 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rdev, align 8
  %type = getelementptr inbounds %struct.regulator_desc, ptr %34, i32 0, i32 12
  %35 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %type, align 4
  %37 = zext i32 %36 to i64
  call void @__sanitizer_cov_trace_switch(i64 %37, ptr @__sancov_gen_cov_switch_values.380)
  switch i32 %36, label %if.then8.if.end14_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
  ]

if.then8.if.end14_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end14

sw.bb:                                            ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #27
  %min_uV = getelementptr inbounds %struct.regulation_constraints, ptr %32, i32 0, i32 1
  %38 = ptrtoint ptr %min_uV to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %min_uV, align 4
  %div9 = sdiv i32 %39, 1000
  %max_uV = getelementptr inbounds %struct.regulation_constraints, ptr %32, i32 0, i32 2
  %40 = ptrtoint ptr %max_uV to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %max_uV, align 4
  %div10 = sdiv i32 %41, 1000
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.342, i32 noundef %div9, i32 noundef %div10) #25
  br label %if.end14

sw.bb11:                                          ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #27
  %min_uA = getelementptr inbounds %struct.regulation_constraints, ptr %32, i32 0, i32 4
  %42 = ptrtoint ptr %min_uA to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %min_uA, align 4
  %div12 = sdiv i32 %43, 1000
  %max_uA = getelementptr inbounds %struct.regulation_constraints, ptr %32, i32 0, i32 5
  %44 = ptrtoint ptr %max_uA to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %max_uA, align 4
  %div13 = sdiv i32 %45, 1000
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.343, i32 noundef %div12, i32 noundef %div13) #25
  br label %if.end14

if.end14:                                         ; preds = %sw.bb11, %sw.bb, %if.then8.if.end14_crit_edge, %_regulator_get_current_limit_unlocked.exit.if.end14_crit_edge
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.344) #25
  %consumer_list = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 6
  %46 = ptrtoint ptr %consumer_list to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pn136 = load ptr, ptr %consumer_list, align 4
  %cmp.not137 = icmp eq ptr %.pn136, %consumer_list
  br i1 %cmp.not137, label %if.end14.for.end_crit_edge, label %for.body.lr.ph

if.end14.for.end_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end14
  %add23127 = add i32 %mul, 4
  %sub26129 = sub i32 27, %mul
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn138 = phi ptr [ %.pn136, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %consumer.0 = getelementptr i8, ptr %.pn138, i32 -4
  %47 = ptrtoint ptr %consumer.0 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %consumer.0, align 4
  %tobool16.not = icmp eq ptr %48, null
  br i1 %tobool16.not, label %if.end20, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %class = getelementptr inbounds %struct.device, ptr %48, i32 0, i32 33
  %49 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %class, align 4
  %cmp18 = icmp eq ptr %50, @regulator_class
  br i1 %cmp18, label %land.lhs.true.for.inc_crit_edge, label %if.end20.thread

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.inc

if.end20:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #27
  %supply_name = getelementptr i8, ptr %.pn138, i32 64
  %51 = ptrtoint ptr %supply_name to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %supply_name, align 4
  %tobool27.not = icmp eq ptr %52, null
  %spec.select135 = select i1 %tobool27.not, ptr @.str.346, ptr %52
  br label %cond.end35

if.end20.thread:                                  ; preds = %land.lhs.true
  %supply_name125 = getelementptr i8, ptr %.pn138, i32 64
  %53 = ptrtoint ptr %supply_name125 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %supply_name125, align 4
  %tobool27.not126 = icmp eq ptr %54, null
  br i1 %tobool27.not126, label %cond.true31, label %if.end20.thread.cond.end35_crit_edge

if.end20.thread.cond.end35_crit_edge:             ; preds = %if.end20.thread
  call void @__sanitizer_cov_trace_pc() #27
  br label %cond.end35

cond.true31:                                      ; preds = %if.end20.thread
  %init_name.i = getelementptr inbounds %struct.device, ptr %48, i32 0, i32 3
  %55 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i120 = icmp eq ptr %56, null
  br i1 %tobool.not.i120, label %if.end.i121, label %cond.true31.cond.end35_crit_edge

cond.true31.cond.end35_crit_edge:                 ; preds = %cond.true31
  call void @__sanitizer_cov_trace_pc() #27
  br label %cond.end35

if.end.i121:                                      ; preds = %cond.true31
  call void @__sanitizer_cov_trace_pc() #27
  %57 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %48, align 4
  br label %cond.end35

cond.end35:                                       ; preds = %if.end.i121, %cond.true31.cond.end35_crit_edge, %if.end20.thread.cond.end35_crit_edge, %if.end20
  %cond36 = phi ptr [ %54, %if.end20.thread.cond.end35_crit_edge ], [ %58, %if.end.i121 ], [ %56, %cond.true31.cond.end35_crit_edge ], [ %spec.select135, %if.end20 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.345, i32 noundef %add23127, ptr noundef nonnull @.str, i32 noundef %sub26129, ptr noundef %cond36) #25
  %59 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %rdev, align 8
  %type38 = getelementptr inbounds %struct.regulator_desc, ptr %60, i32 0, i32 12
  %61 = ptrtoint ptr %type38 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %type38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %cond65 = icmp eq i32 %62, 0
  br i1 %cond65, label %sw.bb39, label %cond.end35.sw.epilog53_crit_edge

cond.end35.sw.epilog53_crit_edge:                 ; preds = %cond.end35
  call void @__sanitizer_cov_trace_pc() #27
  br label %sw.epilog53

sw.bb39:                                          ; preds = %cond.end35
  call void @__sanitizer_cov_trace_pc() #27
  %enable_count = getelementptr i8, ptr %.pn138, i32 16
  %63 = ptrtoint ptr %enable_count to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %enable_count, align 4
  %uA_load = getelementptr i8, ptr %.pn138, i32 12
  %65 = ptrtoint ptr %uA_load to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %uA_load, align 4
  %div40 = sdiv i32 %66, 1000
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool42.not = icmp ne i32 %66, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool44.not = icmp eq i32 %64, 0
  %spec.select = and i1 %tobool44.not, %tobool42.not
  %cond46 = select i1 %spec.select, i32 42, i32 32
  %voltage = getelementptr i8, ptr %.pn138, i32 24
  %67 = ptrtoint ptr %voltage to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %voltage, align 4
  %div48 = sdiv i32 %68, 1000
  %max_uV51 = getelementptr i8, ptr %.pn138, i32 28
  %69 = ptrtoint ptr %max_uV51 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %max_uV51, align 4
  %div52 = sdiv i32 %70, 1000
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.347, i32 noundef %64, i32 noundef %div40, i32 noundef %cond46, i32 noundef %div48, i32 noundef %div52) #25
  br label %sw.epilog53

sw.epilog53:                                      ; preds = %sw.bb39, %cond.end35.sw.epilog53_crit_edge
  tail call void @seq_puts(ptr noundef %s, ptr noundef nonnull @.str.344) #25
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog53, %land.lhs.true.for.inc_crit_edge
  %71 = ptrtoint ptr %.pn138 to i32
  call void @__asan_load4_noabort(i32 %71)
  %.pn = load ptr, ptr %.pn138, align 4
  %cmp.not = icmp eq ptr %.pn, %consumer_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #27
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end14.for.end_crit_edge
  %72 = ptrtoint ptr %summary_data to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %s, ptr %summary_data, align 4
  %73 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %level, ptr %2, align 4
  %74 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %rdev, ptr %1, align 4
  %call61 = call i32 @class_for_each_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef nonnull %summary_data, ptr noundef nonnull @regulator_summary_show_children) #25
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %summary_data) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_summary_show_children(ptr noundef %dev, ptr nocapture noundef readonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  %supply = getelementptr i8, ptr %dev, i32 932
  %0 = ptrtoint ptr %supply to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %supply, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %rdev2 = getelementptr inbounds %struct.regulator, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %rdev2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rdev2, align 4
  %parent = getelementptr inbounds %struct.summary_data, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 4
  %cmp = icmp eq ptr %3, %5
  br i1 %cmp, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %data, align 4
  %level = getelementptr inbounds %struct.summary_data, ptr %data, i32 0, i32 2
  %8 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %level, align 4
  %add = add i32 %9, 1
  tail call fastcc void @regulator_summary_show_subtree(ptr noundef %7, ptr noundef %add.ptr.i, i32 noundef %add)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @generic_coupler_attach(ptr nocapture noundef readnone %coupler, ptr nocapture noundef readonly %rdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %n_coupled = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 7, i32 3
  %0 = ptrtoint ptr %n_coupled to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %n_coupled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp sgt i32 %1, 2
  %constraints.i = getelementptr inbounds %struct.regulator_dev, ptr %rdev, i32 0, i32 14
  %2 = ptrtoint ptr %constraints.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %constraints.i, align 8
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %6 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rdev, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool6.not.i = icmp eq ptr %9, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %9
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i = phi ptr [ %5, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.278, ptr noundef %retval.0.i) #30
  br label %return

if.end:                                           ; preds = %entry
  %always_on = getelementptr inbounds %struct.regulation_constraints, ptr %3, i32 0, i32 28
  %10 = ptrtoint ptr %always_on to i32
  call void @__asan_load2_noabort(i32 %10)
  %bf.load = load i16, ptr %always_on, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load)
  %tobool.not = icmp sgt i16 %bf.load, -1
  br i1 %tobool.not, label %do.end4, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %return

do.end4:                                          ; preds = %if.end
  %tobool.not.i13 = icmp eq ptr %3, null
  br i1 %tobool.not.i13, label %do.end4.if.else.i18_crit_edge, label %land.lhs.true.i15

do.end4.if.else.i18_crit_edge:                    ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i18

land.lhs.true.i15:                                ; preds = %do.end4
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %3, align 4
  %tobool2.not.i14 = icmp eq ptr %12, null
  br i1 %tobool2.not.i14, label %land.lhs.true.i15.if.else.i18_crit_edge, label %land.lhs.true.i15.rdev_get_name.exit20_crit_edge

land.lhs.true.i15.rdev_get_name.exit20_crit_edge: ; preds = %land.lhs.true.i15
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit20

land.lhs.true.i15.if.else.i18_crit_edge:          ; preds = %land.lhs.true.i15
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i18

if.else.i18:                                      ; preds = %land.lhs.true.i15.if.else.i18_crit_edge, %do.end4.if.else.i18_crit_edge
  %13 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rdev, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %tobool6.not.i16 = icmp eq ptr %16, null
  %.str..i17 = select i1 %tobool6.not.i16, ptr @.str, ptr %16
  br label %rdev_get_name.exit20

rdev_get_name.exit20:                             ; preds = %if.else.i18, %land.lhs.true.i15.rdev_get_name.exit20_crit_edge
  %retval.0.i19 = phi ptr [ %12, %land.lhs.true.i15.rdev_get_name.exit20_crit_edge ], [ %.str..i17, %if.else.i18 ]
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.350, ptr noundef %retval.0.i19) #30
  br label %return

return:                                           ; preds = %rdev_get_name.exit20, %if.end.return_crit_edge, %rdev_get_name.exit
  %retval.0 = phi i32 [ -1, %rdev_get_name.exit ], [ -524, %rdev_get_name.exit20 ], [ 0, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @regulator_init_complete_work_function(ptr nocapture noundef readnone %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @class_for_each_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef null, ptr noundef nonnull @regulator_register_resolve_supply) #25
  %call1 = tail call i32 @class_for_each_device(ptr noundef nonnull @regulator_class, ptr noundef null, ptr noundef null, ptr noundef nonnull @regulator_late_cleanup) #25
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @regulator_late_cleanup(ptr noundef %dev, ptr nocapture noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #27
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -264
  %constraints = getelementptr i8, ptr %dev, i32 928
  %0 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %constraints, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %regulator_ops_is_valid.exit.thread, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %always_on = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 28
  %2 = ptrtoint ptr %always_on to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load = load i16, ptr %always_on, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load)
  %tobool1.not = icmp sgt i16 %bf.load, -1
  br i1 %tobool1.not, label %regulator_ops_is_valid.exit, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

regulator_ops_is_valid.exit.thread:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #27
  %3 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %add.ptr.i, align 8
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %tobool6.not.i.i = icmp eq ptr %6, null
  %.str..i.i = select i1 %tobool6.not.i.i, ptr @.str, ptr %6
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %.str..i.i) #30
  br label %cleanup

regulator_ops_is_valid.exit:                      ; preds = %land.lhs.true
  %valid_ops_mask.i = getelementptr inbounds %struct.regulation_constraints, ptr %1, i32 0, i32 11
  %7 = ptrtoint ptr %valid_ops_mask.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %valid_ops_mask.i, align 4
  %and.i = and i32 %8, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i.not, label %regulator_ops_is_valid.exit.cleanup_crit_edge, label %if.end4

regulator_ops_is_valid.exit.cleanup_crit_edge:    ; preds = %regulator_ops_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %cleanup

if.end4:                                          ; preds = %regulator_ops_is_valid.exit
  tail call fastcc void @regulator_lock(ptr noundef %add.ptr.i)
  %use_count = getelementptr i8, ptr %dev, i32 -256
  %9 = ptrtoint ptr %use_count to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %use_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool5.not = icmp eq i32 %10, 0
  br i1 %tobool5.not, label %if.end7, label %if.end4.unlock_crit_edge

if.end4.unlock_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #27
  br label %unlock

if.end7:                                          ; preds = %if.end4
  %ena_pin.i = getelementptr i8, ptr %dev, i32 1052
  %11 = ptrtoint ptr %ena_pin.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ena_pin.i, align 4
  %tobool.not.i46 = icmp eq ptr %12, null
  br i1 %tobool.not.i46, label %if.end.i47, label %if.then.i

if.then.i:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #27
  %ena_gpio_state.i = getelementptr i8, ptr %dev, i32 1056
  %13 = ptrtoint ptr %ena_gpio_state.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load.i = load i8, ptr %ena_gpio_state.i, align 8
  %bf.lshr.i = lshr i8 %bf.load.i, 7
  %bf.cast.i = zext i8 %bf.lshr.i to i32
  br label %_regulator_is_enabled.exit

if.end.i47:                                       ; preds = %if.end7
  %14 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %add.ptr.i, align 8
  %ops.i = getelementptr inbounds %struct.regulator_desc, ptr %15, i32 0, i32 10
  %16 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ops.i, align 4
  %is_enabled.i = getelementptr inbounds %struct.regulator_ops, ptr %17, i32 0, i32 16
  %18 = ptrtoint ptr %is_enabled.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %is_enabled.i, align 4
  %tobool1.not.i = icmp eq ptr %19, null
  br i1 %tobool1.not.i, label %if.end.i47.if.end10_crit_edge, label %if.end3.i

if.end.i47.if.end10_crit_edge:                    ; preds = %if.end.i47
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10

if.end3.i:                                        ; preds = %if.end.i47
  call void @__sanitizer_cov_trace_pc() #27
  %call.i = tail call i32 %19(ptr noundef %add.ptr.i) #25
  br label %_regulator_is_enabled.exit

_regulator_is_enabled.exit:                       ; preds = %if.end3.i, %if.then.i
  %retval.0.i48 = phi i32 [ %bf.cast.i, %if.then.i ], [ %call.i, %if.end3.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i48)
  %cmp = icmp slt i32 %retval.0.i48, 1
  br i1 %cmp, label %_regulator_is_enabled.exit.unlock_crit_edge, label %_regulator_is_enabled.exit.if.end10_crit_edge

_regulator_is_enabled.exit.if.end10_crit_edge:    ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end10

_regulator_is_enabled.exit.unlock_crit_edge:      ; preds = %_regulator_is_enabled.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %unlock

if.end10:                                         ; preds = %_regulator_is_enabled.exit.if.end10_crit_edge, %if.end.i47.if.end10_crit_edge
  %.b1.i = load i1, ptr @has_full_constraints, align 1
  br i1 %.b1.i, label %if.end10.do.end_crit_edge, label %have_full_constraints.exit

if.end10.do.end_crit_edge:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end

have_full_constraints.exit:                       ; preds = %if.end10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @of_root to i32))
  %20 = load ptr, ptr @of_root, align 4
  %cmp.i.i.not = icmp eq ptr %20, null
  br i1 %cmp.i.i.not, label %do.end28, label %have_full_constraints.exit.do.end_crit_edge

have_full_constraints.exit.do.end_crit_edge:      ; preds = %have_full_constraints.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %do.end

do.end:                                           ; preds = %have_full_constraints.exit.do.end_crit_edge, %if.end10.do.end_crit_edge
  %21 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %constraints, align 8
  %tobool.not.i50 = icmp eq ptr %22, null
  br i1 %tobool.not.i50, label %do.end.if.else.i_crit_edge, label %land.lhs.true.i

do.end.if.else.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %do.end
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %tobool2.not.i = icmp eq ptr %24, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.rdev_get_name.exit_crit_edge

land.lhs.true.i.rdev_get_name.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %do.end.if.else.i_crit_edge
  %25 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %add.ptr.i, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %tobool6.not.i = icmp eq ptr %28, null
  %.str..i = select i1 %tobool6.not.i, ptr @.str, ptr %28
  br label %rdev_get_name.exit

rdev_get_name.exit:                               ; preds = %if.else.i, %land.lhs.true.i.rdev_get_name.exit_crit_edge
  %retval.0.i51 = phi ptr [ %24, %land.lhs.true.i.rdev_get_name.exit_crit_edge ], [ %.str..i, %if.else.i ]
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.354, ptr noundef %retval.0.i51) #30
  %call15 = tail call fastcc i32 @_regulator_do_disable(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %cmp16.not = icmp eq i32 %call15, 0
  br i1 %cmp16.not, label %rdev_get_name.exit.unlock_crit_edge, label %do.end20

rdev_get_name.exit.unlock_crit_edge:              ; preds = %rdev_get_name.exit
  call void @__sanitizer_cov_trace_pc() #27
  br label %unlock

do.end20:                                         ; preds = %rdev_get_name.exit
  %29 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %constraints, align 8
  %tobool.not.i53 = icmp eq ptr %30, null
  br i1 %tobool.not.i53, label %do.end20.if.else.i58_crit_edge, label %land.lhs.true.i55

do.end20.if.else.i58_crit_edge:                   ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i58

land.lhs.true.i55:                                ; preds = %do.end20
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 4
  %tobool2.not.i54 = icmp eq ptr %32, null
  br i1 %tobool2.not.i54, label %land.lhs.true.i55.if.else.i58_crit_edge, label %land.lhs.true.i55.rdev_get_name.exit60_crit_edge

land.lhs.true.i55.rdev_get_name.exit60_crit_edge: ; preds = %land.lhs.true.i55
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit60

land.lhs.true.i55.if.else.i58_crit_edge:          ; preds = %land.lhs.true.i55
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i58

if.else.i58:                                      ; preds = %land.lhs.true.i55.if.else.i58_crit_edge, %do.end20.if.else.i58_crit_edge
  %33 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %add.ptr.i, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 4
  %tobool6.not.i56 = icmp eq ptr %36, null
  %.str..i57 = select i1 %tobool6.not.i56, ptr @.str, ptr %36
  br label %rdev_get_name.exit60

rdev_get_name.exit60:                             ; preds = %if.else.i58, %land.lhs.true.i55.rdev_get_name.exit60_crit_edge
  %retval.0.i59 = phi ptr [ %32, %land.lhs.true.i55.rdev_get_name.exit60_crit_edge ], [ %.str..i57, %if.else.i58 ]
  %37 = inttoptr i32 %call15 to ptr
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.357, ptr noundef %retval.0.i59, ptr noundef nonnull %37) #30
  br label %unlock

do.end28:                                         ; preds = %have_full_constraints.exit
  %38 = ptrtoint ptr %constraints to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %constraints, align 8
  %tobool.not.i62 = icmp eq ptr %39, null
  br i1 %tobool.not.i62, label %do.end28.if.else.i67_crit_edge, label %land.lhs.true.i64

do.end28.if.else.i67_crit_edge:                   ; preds = %do.end28
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i67

land.lhs.true.i64:                                ; preds = %do.end28
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %tobool2.not.i63 = icmp eq ptr %41, null
  br i1 %tobool2.not.i63, label %land.lhs.true.i64.if.else.i67_crit_edge, label %land.lhs.true.i64.rdev_get_name.exit69_crit_edge

land.lhs.true.i64.rdev_get_name.exit69_crit_edge: ; preds = %land.lhs.true.i64
  call void @__sanitizer_cov_trace_pc() #27
  br label %rdev_get_name.exit69

land.lhs.true.i64.if.else.i67_crit_edge:          ; preds = %land.lhs.true.i64
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.else.i67

if.else.i67:                                      ; preds = %land.lhs.true.i64.if.else.i67_crit_edge, %do.end28.if.else.i67_crit_edge
  %42 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %add.ptr.i, align 8
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 4
  %tobool6.not.i65 = icmp eq ptr %45, null
  %.str..i66 = select i1 %tobool6.not.i65, ptr @.str, ptr %45
  br label %rdev_get_name.exit69

rdev_get_name.exit69:                             ; preds = %if.else.i67, %land.lhs.true.i64.rdev_get_name.exit69_crit_edge
  %retval.0.i68 = phi ptr [ %41, %land.lhs.true.i64.rdev_get_name.exit69_crit_edge ], [ %.str..i66, %if.else.i67 ]
  %call31 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.360, ptr noundef %retval.0.i68) #30
  br label %unlock

unlock:                                           ; preds = %rdev_get_name.exit69, %rdev_get_name.exit60, %rdev_get_name.exit.unlock_crit_edge, %_regulator_is_enabled.exit.unlock_crit_edge, %if.end4.unlock_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @regulator_nesting_mutex, i32 noundef 0) #25
  %ref_cnt.i = getelementptr i8, ptr %dev, i32 -8
  %46 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ref_cnt.i, align 8
  %dec.i = add i32 %47, -1
  store i32 %dec.i, ptr %ref_cnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %if.then.i70, label %unlock.if.end.i71_crit_edge

unlock.if.end.i71_crit_edge:                      ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #27
  br label %if.end.i71

if.then.i70:                                      ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #27
  %mutex_owner.i = getelementptr i8, ptr %dev, i32 -12
  %48 = ptrtoint ptr %mutex_owner.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %mutex_owner.i, align 4
  %mutex.i = getelementptr i8, ptr %dev, i32 -112
  tail call void @ww_mutex_unlock(ptr noundef %mutex.i) #25
  %49 = ptrtoint ptr %ref_cnt.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %.pr.i = load i32, ptr %ref_cnt.i, align 8
  br label %if.end.i71

if.end.i71:                                       ; preds = %if.then.i70, %unlock.if.end.i71_crit_edge
  %50 = phi i32 [ %.pr.i, %if.then.i70 ], [ %dec.i, %unlock.if.end.i71_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %cmp2.i = icmp slt i32 %50, 0
  br i1 %cmp2.i, label %land.rhs.i, label %if.end.i71.regulator_unlock.exit_crit_edge

if.end.i71.regulator_unlock.exit_crit_edge:       ; preds = %if.end.i71
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

land.rhs.i:                                       ; preds = %if.end.i71
  %.b44.i = load i1, ptr @regulator_unlock.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.regulator_unlock.exit_crit_edge, label %if.then9.i, !prof !993

land.rhs.i.regulator_unlock.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  br label %regulator_unlock.exit

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #27
  store i1 true, ptr @regulator_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 204, i32 noundef 9, ptr noundef null) #25
  br label %regulator_unlock.exit

regulator_unlock.exit:                            ; preds = %if.then9.i, %land.rhs.i.regulator_unlock.exit_crit_edge, %if.end.i71.regulator_unlock.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @regulator_nesting_mutex) #25
  br label %cleanup

cleanup:                                          ; preds = %regulator_unlock.exit, %regulator_ops_is_valid.exit.cleanup_crit_edge, %regulator_ops_is_valid.exit.thread, %land.lhs.true.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #22

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #25

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #26 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 427)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #26 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 427)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nounwind readonly }
attributes #16 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #17 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #22 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #23 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #24 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #25 = { nounwind }
attributes #26 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #27 = { nomerge }
attributes #28 = { nobuiltin nounwind }
attributes #29 = { nobuiltin }
attributes #30 = { cold nounwind }
attributes #31 = { nounwind allocsize(2) }
attributes #32 = { nounwind allocsize(0) }
attributes #33 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !66, !67, !68, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !85, !87, !89, !90, !91, !92, !93, !95, !96, !97, !99, !100, !101, !102, !104, !105, !106, !107, !108, !109, !111, !112, !113, !115, !116, !117, !118, !120, !121, !122, !124, !125, !126, !128, !130, !132, !134, !136, !137, !138, !139, !141, !143, !145, !146, !147, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !177, !178, !179, !181, !182, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !202, !203, !204, !206, !208, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !229, !230, !231, !233, !234, !235, !237, !239, !240, !241, !242, !244, !246, !247, !248, !249, !251, !252, !253, !255, !257, !259, !261, !263, !265, !267, !268, !270, !271, !273, !274, !275, !276, !278, !279, !280, !281, !283, !285, !286, !288, !289, !291, !292, !293, !295, !297, !299, !301, !303, !305, !307, !309, !311, !313, !315, !317, !319, !321, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !358, !359, !360, !361, !363, !364, !365, !367, !368, !369, !371, !373, !374, !376, !378, !379, !380, !382, !383, !384, !385, !387, !388, !389, !391, !392, !393, !395, !397, !399, !400, !401, !403, !404, !406, !408, !410, !412, !414, !416, !418, !420, !422, !423, !424, !426, !428, !429, !430, !432, !434, !436, !437, !438, !439, !441, !443, !444, !445, !446, !448, !449, !450, !451, !452, !453, !454, !456, !457, !458, !459, !461, !462, !463, !464, !465, !466, !468, !470, !471, !472, !473, !475, !477, !479, !481, !482, !483, !484, !485, !486, !487, !488, !490, !492, !493, !494, !495, !497, !498, !499, !501, !502, !503, !505, !506, !507, !509, !510, !511, !513, !514, !515, !517, !518, !519, !521, !523, !524, !525, !526, !527, !528, !529, !530, !532, !534, !535, !536, !537, !539, !540, !541, !542, !544, !545, !546, !548, !549, !550, !551, !553, !554, !555, !557, !558, !559, !560, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !574, !576, !577, !578, !580, !581, !582, !583, !585, !586, !587, !589, !591, !592, !593, !594, !596, !597, !598, !600, !601, !602, !604, !605, !606, !608, !609, !610, !612, !613, !614, !616, !617, !618, !620, !621, !622, !624, !625, !626, !628, !629, !630, !632, !633, !634, !636, !637, !638, !640, !641, !642, !644, !645, !646, !648, !649, !650, !652, !653, !654, !656, !657, !658, !660, !661, !662, !664, !665, !666, !667, !669, !670, !671, !673, !674, !675, !677, !678, !679, !681, !682, !683, !685, !686, !687, !689, !690, !692, !693, !695, !696, !697, !698, !700, !701, !702, !704, !705, !706, !708, !709, !710, !711, !713, !714, !715, !716, !718, !719, !720, !722, !723, !724, !726, !727, !728, !729, !731, !733, !735, !737, !739, !741, !743, !745, !747, !749, !751, !753, !755, !757, !759, !761, !762, !763, !765, !766, !767, !768, !770, !771, !772, !773, !775, !776, !777, !779, !780, !781, !782, !784, !786, !788, !790, !792, !793, !794, !795, !797, !798, !799, !801, !802, !803, !804, !806, !808, !810, !812, !814, !815, !817, !819, !820, !822, !824, !826, !828, !829, !831, !832, !834, !835, !837, !839, !841, !843, !845, !847, !848, !850, !852, !854, !855, !857, !859, !861, !863, !865, !867, !869, !870, !872, !874, !875, !877, !878, !880, !881, !883, !884, !886, !887, !889, !890, !892, !893, !895, !896, !898, !899, !901, !902, !904, !905, !907, !908, !910, !912, !913, !915, !917, !919, !920, !921, !922, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952, !954, !956, !958, !960, !961, !962, !964, !965, !966, !968, !969, !970, !972, !973, !974, !975, !977, !978, !979, !981, !982}
!llvm.named.register.sp = !{!983}
!llvm.module.flags = !{!984, !985, !986, !987, !988, !989, !990, !991}
!llvm.ident = !{!992}

!0 = !{ptr @__tracepoint_regulator_enable, !1, !"__tracepoint_regulator_enable", i1 false, i1 false}
!1 = !{!"../include/trace/events/regulator.h", i32 33, i32 1}
!2 = !{ptr @__tracepoint_ptr_regulator_enable, !1, !"__tracepoint_ptr_regulator_enable", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_regulator_enable, !1, !"__SCK__tp_func_regulator_enable", i1 false, i1 false}
!4 = !{ptr @__tracepoint_regulator_enable_delay, !5, !"__tracepoint_regulator_enable_delay", i1 false, i1 false}
!5 = !{!"../include/trace/events/regulator.h", i32 41, i32 1}
!6 = !{ptr @__tracepoint_ptr_regulator_enable_delay, !5, !"__tracepoint_ptr_regulator_enable_delay", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_regulator_enable_delay, !5, !"__SCK__tp_func_regulator_enable_delay", i1 false, i1 false}
!8 = !{ptr @__tracepoint_regulator_enable_complete, !9, !"__tracepoint_regulator_enable_complete", i1 false, i1 false}
!9 = !{!"../include/trace/events/regulator.h", i32 49, i32 1}
!10 = !{ptr @__tracepoint_ptr_regulator_enable_complete, !9, !"__tracepoint_ptr_regulator_enable_complete", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_regulator_enable_complete, !9, !"__SCK__tp_func_regulator_enable_complete", i1 false, i1 false}
!12 = !{ptr @__tracepoint_regulator_disable, !13, !"__tracepoint_regulator_disable", i1 false, i1 false}
!13 = !{!"../include/trace/events/regulator.h", i32 57, i32 1}
!14 = !{ptr @__tracepoint_ptr_regulator_disable, !13, !"__tracepoint_ptr_regulator_disable", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_regulator_disable, !13, !"__SCK__tp_func_regulator_disable", i1 false, i1 false}
!16 = !{ptr @__tracepoint_regulator_disable_complete, !17, !"__tracepoint_regulator_disable_complete", i1 false, i1 false}
!17 = !{!"../include/trace/events/regulator.h", i32 65, i32 1}
!18 = !{ptr @__tracepoint_ptr_regulator_disable_complete, !17, !"__tracepoint_ptr_regulator_disable_complete", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_regulator_disable_complete, !17, !"__SCK__tp_func_regulator_disable_complete", i1 false, i1 false}
!20 = !{ptr @__tracepoint_regulator_bypass_enable, !21, !"__tracepoint_regulator_bypass_enable", i1 false, i1 false}
!21 = !{!"../include/trace/events/regulator.h", i32 73, i32 1}
!22 = !{ptr @__tracepoint_ptr_regulator_bypass_enable, !21, !"__tracepoint_ptr_regulator_bypass_enable", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_regulator_bypass_enable, !21, !"__SCK__tp_func_regulator_bypass_enable", i1 false, i1 false}
!24 = !{ptr @__tracepoint_regulator_bypass_enable_complete, !25, !"__tracepoint_regulator_bypass_enable_complete", i1 false, i1 false}
!25 = !{!"../include/trace/events/regulator.h", i32 81, i32 1}
!26 = !{ptr @__tracepoint_ptr_regulator_bypass_enable_complete, !25, !"__tracepoint_ptr_regulator_bypass_enable_complete", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_regulator_bypass_enable_complete, !25, !"__SCK__tp_func_regulator_bypass_enable_complete", i1 false, i1 false}
!28 = !{ptr @__tracepoint_regulator_bypass_disable, !29, !"__tracepoint_regulator_bypass_disable", i1 false, i1 false}
!29 = !{!"../include/trace/events/regulator.h", i32 89, i32 1}
!30 = !{ptr @__tracepoint_ptr_regulator_bypass_disable, !29, !"__tracepoint_ptr_regulator_bypass_disable", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_regulator_bypass_disable, !29, !"__SCK__tp_func_regulator_bypass_disable", i1 false, i1 false}
!32 = !{ptr @__tracepoint_regulator_bypass_disable_complete, !33, !"__tracepoint_regulator_bypass_disable_complete", i1 false, i1 false}
!33 = !{!"../include/trace/events/regulator.h", i32 97, i32 1}
!34 = !{ptr @__tracepoint_ptr_regulator_bypass_disable_complete, !33, !"__tracepoint_ptr_regulator_bypass_disable_complete", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_regulator_bypass_disable_complete, !33, !"__SCK__tp_func_regulator_bypass_disable_complete", i1 false, i1 false}
!36 = !{ptr @__tracepoint_regulator_set_voltage, !37, !"__tracepoint_regulator_set_voltage", i1 false, i1 false}
!37 = !{!"../include/trace/events/regulator.h", i32 131, i32 1}
!38 = !{ptr @__tracepoint_ptr_regulator_set_voltage, !37, !"__tracepoint_ptr_regulator_set_voltage", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_regulator_set_voltage, !37, !"__SCK__tp_func_regulator_set_voltage", i1 false, i1 false}
!40 = !{ptr @__tracepoint_regulator_set_voltage_complete, !41, !"__tracepoint_regulator_set_voltage_complete", i1 false, i1 false}
!41 = !{!"../include/trace/events/regulator.h", i32 163, i32 1}
!42 = !{ptr @__tracepoint_ptr_regulator_set_voltage_complete, !41, !"__tracepoint_ptr_regulator_set_voltage_complete", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_regulator_set_voltage_complete, !41, !"__SCK__tp_func_regulator_set_voltage_complete", i1 false, i1 false}
!44 = !{ptr @event_class_regulator_basic, !45, !"event_class_regulator_basic", i1 false, i1 false}
!45 = !{!"../include/trace/events/regulator.h", i32 15, i32 1}
!46 = !{ptr @event_regulator_enable, !1, !"event_regulator_enable", i1 false, i1 false}
!47 = !{ptr @__event_regulator_enable, !1, !"__event_regulator_enable", i1 false, i1 false}
!48 = !{ptr @event_regulator_enable_delay, !5, !"event_regulator_enable_delay", i1 false, i1 false}
!49 = !{ptr @__event_regulator_enable_delay, !5, !"__event_regulator_enable_delay", i1 false, i1 false}
!50 = !{ptr @event_regulator_enable_complete, !9, !"event_regulator_enable_complete", i1 false, i1 false}
!51 = !{ptr @__event_regulator_enable_complete, !9, !"__event_regulator_enable_complete", i1 false, i1 false}
!52 = !{ptr @event_regulator_disable, !13, !"event_regulator_disable", i1 false, i1 false}
!53 = !{ptr @__event_regulator_disable, !13, !"__event_regulator_disable", i1 false, i1 false}
!54 = !{ptr @event_regulator_disable_complete, !17, !"event_regulator_disable_complete", i1 false, i1 false}
!55 = !{ptr @__event_regulator_disable_complete, !17, !"__event_regulator_disable_complete", i1 false, i1 false}
!56 = !{ptr @event_regulator_bypass_enable, !21, !"event_regulator_bypass_enable", i1 false, i1 false}
!57 = !{ptr @__event_regulator_bypass_enable, !21, !"__event_regulator_bypass_enable", i1 false, i1 false}
!58 = !{ptr @event_regulator_bypass_enable_complete, !25, !"event_regulator_bypass_enable_complete", i1 false, i1 false}
!59 = !{ptr @__event_regulator_bypass_enable_complete, !25, !"__event_regulator_bypass_enable_complete", i1 false, i1 false}
!60 = !{ptr @event_regulator_bypass_disable, !29, !"event_regulator_bypass_disable", i1 false, i1 false}
!61 = !{ptr @__event_regulator_bypass_disable, !29, !"__event_regulator_bypass_disable", i1 false, i1 false}
!62 = !{ptr @event_regulator_bypass_disable_complete, !33, !"event_regulator_bypass_disable_complete", i1 false, i1 false}
!63 = !{ptr @__event_regulator_bypass_disable_complete, !33, !"__event_regulator_bypass_disable_complete", i1 false, i1 false}
!64 = !{ptr @event_class_regulator_range, !65, !"event_class_regulator_range", i1 false, i1 false}
!65 = !{!"../include/trace/events/regulator.h", i32 109, i32 1}
!66 = !{ptr @event_regulator_set_voltage, !37, !"event_regulator_set_voltage", i1 false, i1 false}
!67 = !{ptr @__event_regulator_set_voltage, !37, !"__event_regulator_set_voltage", i1 false, i1 false}
!68 = !{ptr @event_class_regulator_value, !69, !"event_class_regulator_value", i1 false, i1 false}
!69 = !{!"../include/trace/events/regulator.h", i32 143, i32 1}
!70 = !{ptr @event_regulator_set_voltage_complete, !41, !"event_regulator_set_voltage_complete", i1 false, i1 false}
!71 = !{ptr @__event_regulator_set_voltage_complete, !41, !"__event_regulator_set_voltage_complete", i1 false, i1 false}
!72 = !{ptr @__bpf_trace_tp_map_regulator_enable, !1, !"__bpf_trace_tp_map_regulator_enable", i1 false, i1 false}
!73 = !{ptr @__bpf_trace_tp_map_regulator_enable_delay, !5, !"__bpf_trace_tp_map_regulator_enable_delay", i1 false, i1 false}
!74 = !{ptr @__bpf_trace_tp_map_regulator_enable_complete, !9, !"__bpf_trace_tp_map_regulator_enable_complete", i1 false, i1 false}
!75 = !{ptr @__bpf_trace_tp_map_regulator_disable, !13, !"__bpf_trace_tp_map_regulator_disable", i1 false, i1 false}
!76 = !{ptr @__bpf_trace_tp_map_regulator_disable_complete, !17, !"__bpf_trace_tp_map_regulator_disable_complete", i1 false, i1 false}
!77 = !{ptr @__bpf_trace_tp_map_regulator_bypass_enable, !21, !"__bpf_trace_tp_map_regulator_bypass_enable", i1 false, i1 false}
!78 = !{ptr @__bpf_trace_tp_map_regulator_bypass_enable_complete, !25, !"__bpf_trace_tp_map_regulator_bypass_enable_complete", i1 false, i1 false}
!79 = !{ptr @__bpf_trace_tp_map_regulator_bypass_disable, !29, !"__bpf_trace_tp_map_regulator_bypass_disable", i1 false, i1 false}
!80 = !{ptr @__bpf_trace_tp_map_regulator_bypass_disable_complete, !33, !"__bpf_trace_tp_map_regulator_bypass_disable_complete", i1 false, i1 false}
!81 = !{ptr @__bpf_trace_tp_map_regulator_set_voltage, !37, !"__bpf_trace_tp_map_regulator_set_voltage", i1 false, i1 false}
!82 = !{ptr @__bpf_trace_tp_map_regulator_set_voltage_complete, !41, !"__bpf_trace_tp_map_regulator_set_voltage_complete", i1 false, i1 false}
!83 = !{ptr @.str, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/regulator/core.c", i32 107, i32 10}
!85 = !{ptr @__ksymtab_rdev_get_name, !86, !"__ksymtab_rdev_get_name", i1 false, i1 false}
!86 = !{!"../drivers/regulator/core.c", i32 109, i32 1}
!87 = !{ptr @.str.1, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/regulator/core.c", i32 426, i32 3}
!89 = !{ptr @.str.2, !88, !"<string literal>", i1 false, i1 false}
!90 = !{ptr @.str.3, !88, !"<string literal>", i1 false, i1 false}
!91 = !{ptr @regulator_check_voltage._entry, !88, !"_entry", i1 false, i1 false}
!92 = !{ptr @regulator_check_voltage._entry_ptr, !88, !"_entry_ptr", i1 false, i1 false}
!93 = !{ptr @.str.5, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../drivers/regulator/core.c", i32 436, i32 3}
!95 = !{ptr @regulator_check_voltage._entry.4, !94, !"_entry", i1 false, i1 false}
!96 = !{ptr @regulator_check_voltage._entry_ptr.6, !94, !"_entry_ptr", i1 false, i1 false}
!97 = !{ptr @.str.7, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../drivers/regulator/core.c", i32 476, i32 3}
!99 = !{ptr @.str.8, !98, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @regulator_check_consumers._entry, !98, !"_entry", i1 false, i1 false}
!101 = !{ptr @regulator_check_consumers._entry_ptr, !98, !"_entry_ptr", i1 false, i1 false}
!102 = !{ptr @.str.9, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../drivers/regulator/core.c", i32 2040, i32 3}
!104 = !{ptr @.str.10, !103, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @.str.11, !103, !"<string literal>", i1 false, i1 false}
!106 = !{ptr @.str.12, !103, !"<string literal>", i1 false, i1 false}
!107 = !{ptr @_regulator_get._entry, !103, !"_entry", i1 false, i1 false}
!108 = !{ptr @_regulator_get._entry_ptr, !103, !"_entry_ptr", i1 false, i1 false}
!109 = !{ptr @.str.14, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../drivers/regulator/core.c", i32 2045, i32 3}
!111 = !{ptr @_regulator_get._entry.13, !110, !"_entry", i1 false, i1 false}
!112 = !{ptr @_regulator_get._entry_ptr.15, !110, !"_entry_ptr", i1 false, i1 false}
!113 = !{ptr @.str.17, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/regulator/core.c", i32 2061, i32 4}
!115 = !{ptr @.str.18, !114, !"<string literal>", i1 false, i1 false}
!116 = !{ptr @_regulator_get._entry.16, !114, !"_entry", i1 false, i1 false}
!117 = !{ptr @_regulator_get._entry_ptr.19, !114, !"_entry_ptr", i1 false, i1 false}
!118 = !{ptr @.str.21, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../drivers/regulator/core.c", i32 2073, i32 4}
!120 = !{ptr @_regulator_get._entry.20, !119, !"_entry", i1 false, i1 false}
!121 = !{ptr @_regulator_get._entry_ptr.22, !119, !"_entry_ptr", i1 false, i1 false}
!122 = !{ptr @.str.24, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/regulator/core.c", i32 2079, i32 4}
!124 = !{ptr @_regulator_get._entry.23, !123, !"_entry", i1 false, i1 false}
!125 = !{ptr @_regulator_get._entry_ptr.25, !123, !"_entry_ptr", i1 false, i1 false}
!126 = !{ptr @__ksymtab_regulator_get, !127, !"__ksymtab_regulator_get", i1 false, i1 false}
!127 = !{!"../drivers/regulator/core.c", i32 2166, i32 1}
!128 = !{ptr @__ksymtab_regulator_get_exclusive, !129, !"__ksymtab_regulator_get_exclusive", i1 false, i1 false}
!129 = !{!"../drivers/regulator/core.c", i32 2193, i32 1}
!130 = !{ptr @__ksymtab_regulator_get_optional, !131, !"__ksymtab_regulator_get_optional", i1 false, i1 false}
!131 = !{!"../drivers/regulator/core.c", i32 2219, i32 1}
!132 = !{ptr @__ksymtab_regulator_put, !133, !"__ksymtab_regulator_put", i1 false, i1 false}
!133 = !{!"../drivers/regulator/core.c", i32 2281, i32 1}
!134 = !{ptr @.str.26, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/regulator/core.c", i32 2316, i32 2}
!136 = !{ptr @.str.27, !135, !"<string literal>", i1 false, i1 false}
!137 = !{ptr @regulator_register_supply_alias._entry, !135, !"_entry", i1 false, i1 false}
!138 = !{ptr @regulator_register_supply_alias._entry_ptr, !135, !"_entry_ptr", i1 false, i1 false}
!139 = !{ptr @__ksymtab_regulator_register_supply_alias, !140, !"__ksymtab_regulator_register_supply_alias", i1 false, i1 false}
!140 = !{!"../drivers/regulator/core.c", i32 2321, i32 1}
!141 = !{ptr @__ksymtab_regulator_unregister_supply_alias, !142, !"__ksymtab_regulator_unregister_supply_alias", i1 false, i1 false}
!142 = !{!"../drivers/regulator/core.c", i32 2341, i32 1}
!143 = !{ptr @.str.28, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../drivers/regulator/core.c", i32 2379, i32 2}
!145 = !{ptr @.str.29, !144, !"<string literal>", i1 false, i1 false}
!146 = !{ptr @regulator_bulk_register_supply_alias._entry, !144, !"_entry", i1 false, i1 false}
!147 = !{ptr @regulator_bulk_register_supply_alias._entry_ptr, !144, !"_entry_ptr", i1 false, i1 false}
!148 = !{ptr @__ksymtab_regulator_bulk_register_supply_alias, !149, !"__ksymtab_regulator_bulk_register_supply_alias", i1 false, i1 false}
!149 = !{!"../drivers/regulator/core.c", i32 2388, i32 1}
!150 = !{ptr @__ksymtab_regulator_bulk_unregister_supply_alias, !151, !"__ksymtab_regulator_bulk_unregister_supply_alias", i1 false, i1 false}
!151 = !{!"../drivers/regulator/core.c", i32 2409, i32 1}
!152 = !{ptr @__ksymtab_regulator_enable, !153, !"__ksymtab_regulator_enable", i1 false, i1 false}
!153 = !{!"../drivers/regulator/core.c", i32 2814, i32 1}
!154 = !{ptr @__ksymtab_regulator_disable, !155, !"__ksymtab_regulator_disable", i1 false, i1 false}
!155 = !{!"../drivers/regulator/core.c", i32 2921, i32 1}
!156 = !{ptr @__ksymtab_regulator_force_disable, !157, !"__ksymtab_regulator_force_disable", i1 false, i1 false}
!157 = !{!"../drivers/regulator/core.c", i32 2983, i32 1}
!158 = !{ptr @__ksymtab_regulator_disable_deferred, !159, !"__ksymtab_regulator_disable_deferred", i1 false, i1 false}
!159 = !{!"../drivers/regulator/core.c", i32 3055, i32 1}
!160 = !{ptr @__ksymtab_regulator_is_enabled, !161, !"__ksymtab_regulator_is_enabled", i1 false, i1 false}
!161 = !{!"../drivers/regulator/core.c", i32 3131, i32 1}
!162 = !{ptr @__ksymtab_regulator_count_voltages, !163, !"__ksymtab_regulator_count_voltages", i1 false, i1 false}
!163 = !{!"../drivers/regulator/core.c", i32 3153, i32 1}
!164 = !{ptr @__ksymtab_regulator_list_voltage, !165, !"__ksymtab_regulator_list_voltage", i1 false, i1 false}
!165 = !{!"../drivers/regulator/core.c", i32 3169, i32 1}
!166 = !{ptr @__ksymtab_regulator_get_hardware_vsel_register, !167, !"__ksymtab_regulator_get_hardware_vsel_register", i1 false, i1 false}
!167 = !{!"../drivers/regulator/core.c", i32 3214, i32 1}
!168 = !{ptr @__ksymtab_regulator_list_hardware_vsel, !169, !"__ksymtab_regulator_list_hardware_vsel", i1 false, i1 false}
!169 = !{!"../drivers/regulator/core.c", i32 3242, i32 1}
!170 = !{ptr @__ksymtab_regulator_get_linear_step, !171, !"__ksymtab_regulator_get_linear_step", i1 false, i1 false}
!171 = !{!"../drivers/regulator/core.c", i32 3257, i32 1}
!172 = !{ptr @__ksymtab_regulator_is_supported_voltage, !173, !"__ksymtab_regulator_is_supported_voltage", i1 false, i1 false}
!173 = !{!"../drivers/regulator/core.c", i32 3302, i32 1}
!174 = !{ptr @.str.30, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/regulator/core.c", i32 3698, i32 4}
!176 = !{ptr @.str.31, !175, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @regulator_set_voltage_rdev._entry, !175, !"_entry", i1 false, i1 false}
!178 = !{ptr @regulator_set_voltage_rdev._entry_ptr, !175, !"_entry_ptr", i1 false, i1 false}
!179 = !{ptr @.str.33, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/regulator/core.c", i32 3716, i32 4}
!181 = !{ptr @regulator_set_voltage_rdev._entry.32, !180, !"_entry", i1 false, i1 false}
!182 = !{ptr @regulator_set_voltage_rdev._entry_ptr.34, !180, !"_entry_ptr", i1 false, i1 false}
!183 = !{ptr @__ksymtab_regulator_set_voltage_rdev, !184, !"__ksymtab_regulator_set_voltage_rdev", i1 false, i1 false}
!184 = !{!"../drivers/regulator/core.c", i32 3725, i32 1}
!185 = !{ptr @__ksymtab_regulator_set_voltage, !186, !"__ksymtab_regulator_set_voltage", i1 false, i1 false}
!186 = !{!"../drivers/regulator/core.c", i32 4041, i32 1}
!187 = !{ptr @__ksymtab_regulator_suspend_enable, !188, !"__ksymtab_regulator_suspend_enable", i1 false, i1 false}
!188 = !{!"../drivers/regulator/core.c", i32 4065, i32 1}
!189 = !{ptr @__ksymtab_regulator_suspend_disable, !190, !"__ksymtab_regulator_suspend_disable", i1 false, i1 false}
!190 = !{!"../drivers/regulator/core.c", i32 4085, i32 1}
!191 = !{ptr @__ksymtab_regulator_set_suspend_voltage, !192, !"__ksymtab_regulator_set_suspend_voltage", i1 false, i1 false}
!192 = !{!"../drivers/regulator/core.c", i32 4125, i32 1}
!193 = !{ptr @__ksymtab_regulator_set_voltage_time, !194, !"__ksymtab_regulator_set_voltage_time", i1 false, i1 false}
!194 = !{!"../drivers/regulator/core.c", i32 4180, i32 1}
!195 = !{ptr @__ksymtab_regulator_set_voltage_time_sel, !196, !"__ksymtab_regulator_set_voltage_time_sel", i1 false, i1 false}
!196 = !{!"../drivers/regulator/core.c", i32 4213, i32 1}
!197 = !{ptr @__ksymtab_regulator_sync_voltage, !198, !"__ksymtab_regulator_sync_voltage", i1 false, i1 false}
!198 = !{!"../drivers/regulator/core.c", i32 4291, i32 1}
!199 = !{ptr @.str.35, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../drivers/regulator/core.c", i32 4305, i32 5}
!201 = !{ptr @.str.36, !200, !"<string literal>", i1 false, i1 false}
!202 = !{ptr @regulator_get_voltage_rdev._entry, !200, !"_entry", i1 false, i1 false}
!203 = !{ptr @regulator_get_voltage_rdev._entry_ptr, !200, !"_entry_ptr", i1 false, i1 false}
!204 = !{ptr @__ksymtab_regulator_get_voltage_rdev, !205, !"__ksymtab_regulator_get_voltage_rdev", i1 false, i1 false}
!205 = !{!"../drivers/regulator/core.c", i32 4337, i32 1}
!206 = !{ptr @__ksymtab_regulator_get_voltage, !207, !"__ksymtab_regulator_get_voltage", i1 false, i1 false}
!207 = !{!"../drivers/regulator/core.c", i32 4359, i32 1}
!208 = !{ptr @__ksymtab_regulator_set_current_limit, !209, !"__ksymtab_regulator_set_current_limit", i1 false, i1 false}
!209 = !{!"../drivers/regulator/core.c", i32 4401, i32 1}
!210 = !{ptr @__ksymtab_regulator_get_current_limit, !211, !"__ksymtab_regulator_get_current_limit", i1 false, i1 false}
!211 = !{!"../drivers/regulator/core.c", i32 4436, i32 1}
!212 = !{ptr @__ksymtab_regulator_set_mode, !213, !"__ksymtab_regulator_set_mode", i1 false, i1 false}
!213 = !{!"../drivers/regulator/core.c", i32 4482, i32 1}
!214 = !{ptr @__ksymtab_regulator_get_mode, !215, !"__ksymtab_regulator_get_mode", i1 false, i1 false}
!215 = !{!"../drivers/regulator/core.c", i32 4514, i32 1}
!216 = !{ptr @__ksymtab_regulator_get_error_flags, !217, !"__ksymtab_regulator_get_error_flags", i1 false, i1 false}
!217 = !{!"../drivers/regulator/core.c", i32 4561, i32 1}
!218 = !{ptr @__ksymtab_regulator_set_load, !219, !"__ksymtab_regulator_set_load", i1 false, i1 false}
!219 = !{!"../drivers/regulator/core.c", i32 4615, i32 1}
!220 = !{ptr @__ksymtab_regulator_allow_bypass, !221, !"__ksymtab_regulator_allow_bypass", i1 false, i1 false}
!221 = !{!"../drivers/regulator/core.c", i32 4676, i32 1}
!222 = !{ptr @__ksymtab_regulator_register_notifier, !223, !"__ksymtab_regulator_register_notifier", i1 false, i1 false}
!223 = !{!"../drivers/regulator/core.c", i32 4691, i32 1}
!224 = !{ptr @__ksymtab_regulator_unregister_notifier, !225, !"__ksymtab_regulator_unregister_notifier", i1 false, i1 false}
!225 = !{!"../drivers/regulator/core.c", i32 4706, i32 1}
!226 = !{ptr @.str.37, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../drivers/regulator/core.c", i32 4755, i32 3}
!228 = !{ptr @.str.38, !227, !"<string literal>", i1 false, i1 false}
!229 = !{ptr @regulator_bulk_get._entry, !227, !"_entry", i1 false, i1 false}
!230 = !{ptr @regulator_bulk_get._entry_ptr, !227, !"_entry_ptr", i1 false, i1 false}
!231 = !{ptr @.str.39, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../drivers/regulator/core.c", i32 4758, i32 3}
!233 = !{ptr @.str.40, !232, !"<string literal>", i1 false, i1 false}
!234 = !{ptr @regulator_bulk_get.__UNIQUE_ID_ddebug383, !232, !"__UNIQUE_ID_ddebug383", i1 false, i1 false}
!235 = !{ptr @__ksymtab_regulator_bulk_get, !236, !"__ksymtab_regulator_bulk_get", i1 false, i1 false}
!236 = !{!"../drivers/regulator/core.c", i32 4766, i32 1}
!237 = !{ptr @.str.41, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/regulator/core.c", i32 4814, i32 4}
!239 = !{ptr @.str.42, !238, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @regulator_bulk_enable._entry, !238, !"_entry", i1 false, i1 false}
!241 = !{ptr @regulator_bulk_enable._entry_ptr, !238, !"_entry_ptr", i1 false, i1 false}
!242 = !{ptr @__ksymtab_regulator_bulk_enable, !243, !"__ksymtab_regulator_bulk_enable", i1 false, i1 false}
!243 = !{!"../drivers/regulator/core.c", i32 4822, i32 1}
!244 = !{ptr @.str.43, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../drivers/regulator/core.c", i32 4851, i32 2}
!246 = !{ptr @.str.44, !245, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @regulator_bulk_disable._entry, !245, !"_entry", i1 false, i1 false}
!248 = !{ptr @regulator_bulk_disable._entry_ptr, !245, !"_entry_ptr", i1 false, i1 false}
!249 = !{ptr @.str.46, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/regulator/core.c", i32 4855, i32 4}
!251 = !{ptr @regulator_bulk_disable._entry.45, !250, !"_entry", i1 false, i1 false}
!252 = !{ptr @regulator_bulk_disable._entry_ptr.47, !250, !"_entry_ptr", i1 false, i1 false}
!253 = !{ptr @__ksymtab_regulator_bulk_disable, !254, !"__ksymtab_regulator_bulk_disable", i1 false, i1 false}
!254 = !{!"../drivers/regulator/core.c", i32 4861, i32 1}
!255 = !{ptr @__ksymtab_regulator_bulk_force_disable, !256, !"__ksymtab_regulator_bulk_force_disable", i1 false, i1 false}
!256 = !{!"../drivers/regulator/core.c", i32 4894, i32 1}
!257 = !{ptr @__ksymtab_regulator_bulk_free, !258, !"__ksymtab_regulator_bulk_free", i1 false, i1 false}
!258 = !{!"../drivers/regulator/core.c", i32 4915, i32 1}
!259 = !{ptr @__ksymtab_regulator_notifier_call_chain, !260, !"__ksymtab_regulator_notifier_call_chain", i1 false, i1 false}
!260 = !{!"../drivers/regulator/core.c", i32 4933, i32 1}
!261 = !{ptr @__ksymtab_regulator_mode_to_status, !262, !"__ksymtab_regulator_mode_to_status", i1 false, i1 false}
!262 = !{!"../drivers/regulator/core.c", i32 4957, i32 1}
!263 = !{ptr @regulator_register.regulator_no, !264, !"regulator_no", i1 false, i1 false}
!264 = !{!"../drivers/regulator/core.c", i32 5324, i32 18}
!265 = !{ptr @regulator_register.__key, !266, !"__key", i1 false, i1 false}
!266 = !{!"../drivers/regulator/core.c", i32 5378, i32 2}
!267 = !{ptr @.str.48, !266, !"<string literal>", i1 false, i1 false}
!268 = !{ptr @regulator_register.__key.49, !269, !"__key", i1 false, i1 false}
!269 = !{!"../drivers/regulator/core.c", i32 5430, i32 2}
!270 = !{ptr @.str.50, !269, !"<string literal>", i1 false, i1 false}
!271 = !{ptr @regulator_register.__key.51, !272, !"__key", i1 false, i1 false}
!272 = !{!"../drivers/regulator/core.c", i32 5431, i32 2}
!273 = !{ptr @.str.52, !272, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @regulator_register.__key.53, !272, !"__key", i1 false, i1 false}
!275 = !{ptr @.str.54, !272, !"<string literal>", i1 false, i1 false}
!276 = !{ptr @.str.55, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../drivers/regulator/core.c", i32 5443, i32 4}
!278 = !{ptr @.str.56, !277, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @regulator_register._entry, !277, !"_entry", i1 false, i1 false}
!280 = !{ptr @regulator_register._entry_ptr, !277, !"_entry_ptr", i1 false, i1 false}
!281 = !{ptr @.str.57, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/regulator/core.c", i32 5455, i32 27}
!283 = !{ptr @.str.58, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/regulator/core.c", i32 5486, i32 3}
!285 = !{ptr @regulator_register.__UNIQUE_ID_ddebug385, !284, !"__UNIQUE_ID_ddebug385", i1 false, i1 false}
!286 = !{ptr @.str.59, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/regulator/core.c", i32 5492, i32 4}
!288 = !{ptr @regulator_register.__UNIQUE_ID_ddebug386, !287, !"__UNIQUE_ID_ddebug386", i1 false, i1 false}
!289 = !{ptr @.str.61, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../drivers/regulator/core.c", i32 5509, i32 5}
!291 = !{ptr @regulator_register._entry.60, !290, !"_entry", i1 false, i1 false}
!292 = !{ptr @regulator_register._entry_ptr.62, !290, !"_entry_ptr", i1 false, i1 false}
!293 = !{ptr @__ksymtab_regulator_register, !294, !"__ksymtab_regulator_register", i1 false, i1 false}
!294 = !{!"../drivers/regulator/core.c", i32 5558, i32 1}
!295 = !{ptr @__ksymtab_regulator_unregister, !296, !"__ksymtab_regulator_unregister", i1 false, i1 false}
!296 = !{!"../drivers/regulator/core.c", i32 5591, i32 1}
!297 = !{ptr @.str.63, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../drivers/regulator/core.c", i32 5658, i32 10}
!299 = !{ptr @regulator_class, !300, !"regulator_class", i1 false, i1 false}
!300 = !{!"../drivers/regulator/core.c", i32 5657, i32 14}
!301 = !{ptr @__ksymtab_regulator_has_full_constraints, !302, !"__ksymtab_regulator_has_full_constraints", i1 false, i1 false}
!302 = !{!"../drivers/regulator/core.c", i32 5680, i32 1}
!303 = !{ptr @__ksymtab_rdev_get_drvdata, !304, !"__ksymtab_rdev_get_drvdata", i1 false, i1 false}
!304 = !{!"../drivers/regulator/core.c", i32 5693, i32 1}
!305 = !{ptr @__ksymtab_regulator_get_drvdata, !306, !"__ksymtab_regulator_get_drvdata", i1 false, i1 false}
!306 = !{!"../drivers/regulator/core.c", i32 5706, i32 1}
!307 = !{ptr @__ksymtab_regulator_set_drvdata, !308, !"__ksymtab_regulator_set_drvdata", i1 false, i1 false}
!308 = !{!"../drivers/regulator/core.c", i32 5717, i32 1}
!309 = !{ptr @__ksymtab_rdev_get_id, !310, !"__ksymtab_rdev_get_id", i1 false, i1 false}
!310 = !{!"../drivers/regulator/core.c", i32 5727, i32 1}
!311 = !{ptr @__ksymtab_rdev_get_dev, !312, !"__ksymtab_rdev_get_dev", i1 false, i1 false}
!312 = !{!"../drivers/regulator/core.c", i32 5733, i32 1}
!313 = !{ptr @__ksymtab_rdev_get_regmap, !314, !"__ksymtab_rdev_get_regmap", i1 false, i1 false}
!314 = !{!"../drivers/regulator/core.c", i32 5739, i32 1}
!315 = !{ptr @__ksymtab_regulator_get_init_drvdata, !316, !"__ksymtab_regulator_get_init_drvdata", i1 false, i1 false}
!316 = !{!"../drivers/regulator/core.c", i32 5745, i32 1}
!317 = !{ptr @__initcall__kmod_core__387_6012_regulator_init1, !318, !"__initcall__kmod_core__387_6012_regulator_init1", i1 false, i1 false}
!318 = !{!"../drivers/regulator/core.c", i32 6012, i32 1}
!319 = !{ptr @__initcall__kmod_core__388_6109_regulator_init_complete7s, !320, !"__initcall__kmod_core__388_6109_regulator_init_complete7s", i1 false, i1 false}
!320 = !{!"../drivers/regulator/core.c", i32 6109, i32 1}
!321 = distinct !{null, !322, !"has_full_constraints", i1 false, i1 false}
!322 = !{!"../drivers/regulator/core.c", i32 43, i32 13}
!323 = !{ptr @__tpstrtab_regulator_enable, !1, !"__tpstrtab_regulator_enable", i1 false, i1 false}
!324 = !{ptr @__tpstrtab_regulator_enable_delay, !5, !"__tpstrtab_regulator_enable_delay", i1 false, i1 false}
!325 = !{ptr @__tpstrtab_regulator_enable_complete, !9, !"__tpstrtab_regulator_enable_complete", i1 false, i1 false}
!326 = !{ptr @__tpstrtab_regulator_disable, !13, !"__tpstrtab_regulator_disable", i1 false, i1 false}
!327 = !{ptr @__tpstrtab_regulator_disable_complete, !17, !"__tpstrtab_regulator_disable_complete", i1 false, i1 false}
!328 = !{ptr @__tpstrtab_regulator_bypass_enable, !21, !"__tpstrtab_regulator_bypass_enable", i1 false, i1 false}
!329 = !{ptr @__tpstrtab_regulator_bypass_enable_complete, !25, !"__tpstrtab_regulator_bypass_enable_complete", i1 false, i1 false}
!330 = !{ptr @__tpstrtab_regulator_bypass_disable, !29, !"__tpstrtab_regulator_bypass_disable", i1 false, i1 false}
!331 = !{ptr @__tpstrtab_regulator_bypass_disable_complete, !33, !"__tpstrtab_regulator_bypass_disable_complete", i1 false, i1 false}
!332 = !{ptr @__tpstrtab_regulator_set_voltage, !37, !"__tpstrtab_regulator_set_voltage", i1 false, i1 false}
!333 = !{ptr @__tpstrtab_regulator_set_voltage_complete, !41, !"__tpstrtab_regulator_set_voltage_complete", i1 false, i1 false}
!334 = !{ptr @str__regulator__trace_system_name, !335, !"str__regulator__trace_system_name", i1 false, i1 false}
!335 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!336 = !{ptr @.str.64, !45, !"<string literal>", i1 false, i1 false}
!337 = !{ptr @.str.65, !45, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @.str.66, !45, !"<string literal>", i1 false, i1 false}
!339 = !{ptr @trace_event_fields_regulator_basic, !45, !"trace_event_fields_regulator_basic", i1 false, i1 false}
!340 = !{ptr @trace_event_type_funcs_regulator_basic, !45, !"trace_event_type_funcs_regulator_basic", i1 false, i1 false}
!341 = !{ptr @.str.67, !45, !"<string literal>", i1 false, i1 false}
!342 = !{ptr @print_fmt_regulator_basic, !45, !"print_fmt_regulator_basic", i1 false, i1 false}
!343 = !{ptr @.str.68, !65, !"<string literal>", i1 false, i1 false}
!344 = !{ptr @.str.69, !65, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @.str.70, !65, !"<string literal>", i1 false, i1 false}
!346 = !{ptr @trace_event_fields_regulator_range, !65, !"trace_event_fields_regulator_range", i1 false, i1 false}
!347 = !{ptr @trace_event_type_funcs_regulator_range, !65, !"trace_event_type_funcs_regulator_range", i1 false, i1 false}
!348 = !{ptr @.str.71, !65, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @print_fmt_regulator_range, !65, !"print_fmt_regulator_range", i1 false, i1 false}
!350 = !{ptr @.str.72, !69, !"<string literal>", i1 false, i1 false}
!351 = !{ptr @.str.73, !69, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @trace_event_fields_regulator_value, !69, !"trace_event_fields_regulator_value", i1 false, i1 false}
!353 = !{ptr @trace_event_type_funcs_regulator_value, !69, !"trace_event_type_funcs_regulator_value", i1 false, i1 false}
!354 = !{ptr @.str.74, !69, !"<string literal>", i1 false, i1 false}
!355 = !{ptr @print_fmt_regulator_value, !69, !"print_fmt_regulator_value", i1 false, i1 false}
!356 = !{ptr @.str.75, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../drivers/regulator/core.c", i32 119, i32 3}
!358 = !{ptr @.str.76, !357, !"<string literal>", i1 false, i1 false}
!359 = !{ptr @regulator_ops_is_valid._entry, !357, !"_entry", i1 false, i1 false}
!360 = !{ptr @regulator_ops_is_valid._entry_ptr, !357, !"_entry_ptr", i1 false, i1 false}
!361 = !{ptr @.str.77, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../drivers/regulator/core.c", i32 1833, i32 3}
!363 = !{ptr @.str.78, !362, !"<string literal>", i1 false, i1 false}
!364 = !{ptr @regulator_supply_alias.__UNIQUE_ID_ddebug364, !362, !"__UNIQUE_ID_ddebug364", i1 false, i1 false}
!365 = !{ptr @.str.79, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../drivers/regulator/core.c", i32 402, i32 2}
!367 = !{ptr @.str.80, !366, !"<string literal>", i1 false, i1 false}
!368 = !{ptr @of_get_regulator.__UNIQUE_ID_ddebug354, !366, !"__UNIQUE_ID_ddebug354", i1 false, i1 false}
!369 = !{ptr @.str.81, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../drivers/regulator/core.c", i32 404, i32 26}
!371 = !{ptr @.str.82, !372, !"<string literal>", i1 false, i1 false}
!372 = !{!"../drivers/regulator/core.c", i32 412, i32 3}
!373 = !{ptr @of_get_regulator.__UNIQUE_ID_ddebug355, !372, !"__UNIQUE_ID_ddebug355", i1 false, i1 false}
!374 = !{ptr @regulator_map_list, !375, !"regulator_map_list", i1 false, i1 false}
!375 = !{!"../drivers/regulator/core.c", i32 39, i32 8}
!376 = !{ptr @.str.83, !377, !"<string literal>", i1 false, i1 false}
!377 = !{!"../drivers/regulator/core.c", i32 38, i32 8}
!378 = !{ptr @.str.84, !377, !"<string literal>", i1 false, i1 false}
!379 = !{ptr @regulator_list_mutex, !377, !"regulator_list_mutex", i1 false, i1 false}
!380 = !{ptr @.str.85, !381, !"<string literal>", i1 false, i1 false}
!381 = !{!"../drivers/regulator/core.c", i32 1950, i32 4}
!382 = !{ptr @.str.86, !381, !"<string literal>", i1 false, i1 false}
!383 = !{ptr @regulator_resolve_supply._entry, !381, !"_entry", i1 false, i1 false}
!384 = !{ptr @regulator_resolve_supply._entry_ptr, !381, !"_entry_ptr", i1 false, i1 false}
!385 = !{ptr @.str.88, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../drivers/regulator/core.c", i32 1958, i32 3}
!387 = !{ptr @regulator_resolve_supply._entry.87, !386, !"_entry", i1 false, i1 false}
!388 = !{ptr @regulator_resolve_supply._entry_ptr.89, !386, !"_entry_ptr", i1 false, i1 false}
!389 = !{ptr @.str.90, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../drivers/regulator/core.c", i32 1574, i32 2}
!391 = !{ptr @.str.91, !390, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @set_supply.__UNIQUE_ID_ddebug360, !390, !"__UNIQUE_ID_ddebug360", i1 false, i1 false}
!393 = !{ptr @.str.92, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../drivers/regulator/core.c", i32 1579, i32 59}
!395 = !{ptr @.str.93, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../drivers/regulator/core.c", i32 1738, i32 38}
!397 = !{ptr @.str.94, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../drivers/regulator/core.c", i32 1772, i32 4}
!399 = !{ptr @.str.95, !398, !"<string literal>", i1 false, i1 false}
!400 = !{ptr @create_regulator.__UNIQUE_ID_ddebug362, !398, !"__UNIQUE_ID_ddebug362", i1 false, i1 false}
!401 = !{ptr @.str.96, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../drivers/regulator/core.c", i32 1781, i32 3}
!403 = !{ptr @create_regulator.__UNIQUE_ID_ddebug363, !402, !"__UNIQUE_ID_ddebug363", i1 false, i1 false}
!404 = !{ptr @.str.97, !405, !"<string literal>", i1 false, i1 false}
!405 = !{!"../drivers/regulator/core.c", i32 1783, i32 22}
!406 = !{ptr @.str.98, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/regulator/core.c", i32 1785, i32 22}
!408 = !{ptr @.str.99, !409, !"<string literal>", i1 false, i1 false}
!409 = !{!"../drivers/regulator/core.c", i32 1787, i32 22}
!410 = !{ptr @.str.100, !411, !"<string literal>", i1 false, i1 false}
!411 = !{!"../drivers/regulator/core.c", i32 1789, i32 23}
!412 = !{ptr @constraint_flags_fops, !413, !"constraint_flags_fops", i1 false, i1 false}
!413 = !{!"../drivers/regulator/core.c", i32 1717, i32 37}
!414 = !{ptr @.str.101, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../drivers/regulator/core.c", i32 1694, i32 4}
!416 = distinct !{null, !417, !"__already_done", i1 false, i1 false}
!417 = !{!"../drivers/regulator/core.c", i32 2254, i32 2}
!418 = !{ptr @regulator_supply_alias_list, !419, !"regulator_supply_alias_list", i1 false, i1 false}
!419 = !{!"../drivers/regulator/core.c", i32 41, i32 8}
!420 = !{ptr @.str.102, !421, !"<string literal>", i1 false, i1 false}
!421 = !{!"../include/linux/ww_mutex.h", i32 297, i32 2}
!422 = !{ptr @.str.103, !421, !"<string literal>", i1 false, i1 false}
!423 = !{ptr @.str.104, !421, !"<string literal>", i1 false, i1 false}
!424 = distinct !{null, !425, !"__already_done", i1 false, i1 false}
!425 = !{!"../drivers/regulator/core.c", i32 271, i32 5}
!426 = !{ptr @.str.105, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../drivers/regulator/core.c", i32 37, i32 8}
!428 = !{ptr @.str.106, !427, !"<string literal>", i1 false, i1 false}
!429 = !{ptr @regulator_nesting_mutex, !427, !"regulator_nesting_mutex", i1 false, i1 false}
!430 = !{ptr @.str.107, !431, !"<string literal>", i1 false, i1 false}
!431 = !{!"../include/linux/ww_mutex.h", i32 173, i32 2}
!432 = distinct !{null, !433, !"__already_done", i1 false, i1 false}
!433 = !{!"../drivers/regulator/core.c", i32 2732, i32 2}
!434 = !{ptr @.str.108, !435, !"<string literal>", i1 false, i1 false}
!435 = !{!"../drivers/regulator/core.c", i32 2771, i32 4}
!436 = !{ptr @.str.109, !435, !"<string literal>", i1 false, i1 false}
!437 = !{ptr @_regulator_enable._entry, !435, !"_entry", i1 false, i1 false}
!438 = !{ptr @_regulator_enable._entry_ptr, !435, !"_entry_ptr", i1 false, i1 false}
!439 = distinct !{null, !440, !"__already_done", i1 false, i1 false}
!440 = !{!"../drivers/regulator/core.c", i32 2691, i32 2}
!441 = !{ptr @.str.110, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../drivers/regulator/core.c", i32 2592, i32 3}
!443 = !{ptr @.str.111, !442, !"<string literal>", i1 false, i1 false}
!444 = !{ptr @_regulator_do_enable._entry, !442, !"_entry", i1 false, i1 false}
!445 = !{ptr @_regulator_do_enable._entry_ptr, !442, !"_entry_ptr", i1 false, i1 false}
!446 = !{ptr @.str.113, !447, !"<string literal>", i1 false, i1 false}
!447 = !{!"../drivers/regulator/core.c", i32 2655, i32 4}
!448 = !{ptr @_regulator_do_enable._entry.112, !447, !"_entry", i1 false, i1 false}
!449 = !{ptr @_regulator_do_enable._entry_ptr.114, !447, !"_entry_ptr", i1 false, i1 false}
!450 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!451 = !{ptr @.str.115, !1, !"<string literal>", i1 false, i1 false}
!452 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!453 = !{ptr @.str.116, !1, !"<string literal>", i1 false, i1 false}
!454 = distinct !{null, !455, !"__already_done", i1 false, i1 false}
!455 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!456 = !{ptr @.str.117, !455, !"<string literal>", i1 false, i1 false}
!457 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!458 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!459 = !{ptr @.str.118, !460, !"<string literal>", i1 false, i1 false}
!460 = !{!"../drivers/regulator/core.c", i32 2569, i32 3}
!461 = !{ptr @.str.119, !460, !"<string literal>", i1 false, i1 false}
!462 = !{ptr @_regulator_check_status_enabled._entry, !460, !"_entry", i1 false, i1 false}
!463 = !{ptr @_regulator_check_status_enabled._entry_ptr, !460, !"_entry_ptr", i1 false, i1 false}
!464 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!465 = distinct !{null, !9, !"__warned", i1 false, i1 false}
!466 = distinct !{null, !467, !"__already_done", i1 false, i1 false}
!467 = !{!"../drivers/regulator/core.c", i32 2712, i32 2}
!468 = !{ptr @.str.120, !469, !"<string literal>", i1 false, i1 false}
!469 = !{!"../drivers/regulator/core.c", i32 2715, i32 3}
!470 = !{ptr @.str.121, !469, !"<string literal>", i1 false, i1 false}
!471 = !{ptr @_regulator_handle_consumer_disable._entry, !469, !"_entry", i1 false, i1 false}
!472 = !{ptr @_regulator_handle_consumer_disable._entry_ptr, !469, !"_entry_ptr", i1 false, i1 false}
!473 = !{ptr @.str.122, !474, !"<string literal>", i1 false, i1 false}
!474 = !{!"../include/linux/ww_mutex.h", i32 191, i32 2}
!475 = distinct !{null, !476, !"__already_done", i1 false, i1 false}
!476 = !{!"../drivers/regulator/core.c", i32 2850, i32 2}
!477 = !{ptr @.str.123, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../drivers/regulator/core.c", i32 2852, i32 6}
!479 = !{ptr @.str.124, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../drivers/regulator/core.c", i32 2870, i32 5}
!481 = !{ptr @.str.125, !480, !"<string literal>", i1 false, i1 false}
!482 = !{ptr @_regulator_disable._entry, !480, !"_entry", i1 false, i1 false}
!483 = !{ptr @_regulator_disable._entry_ptr, !480, !"_entry_ptr", i1 false, i1 false}
!484 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!485 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!486 = distinct !{null, !17, !"__already_done", i1 false, i1 false}
!487 = distinct !{null, !17, !"__warned", i1 false, i1 false}
!488 = distinct !{null, !489, !"__already_done", i1 false, i1 false}
!489 = !{!"../drivers/regulator/core.c", i32 2928, i32 2}
!490 = !{ptr @.str.126, !491, !"<string literal>", i1 false, i1 false}
!491 = !{!"../drivers/regulator/core.c", i32 2937, i32 3}
!492 = !{ptr @.str.127, !491, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @_regulator_force_disable._entry, !491, !"_entry", i1 false, i1 false}
!494 = !{ptr @_regulator_force_disable._entry_ptr, !491, !"_entry_ptr", i1 false, i1 false}
!495 = !{ptr @.str.128, !496, !"<string literal>", i1 false, i1 false}
!496 = !{!"../drivers/regulator/core.c", i32 928, i32 3}
!497 = !{ptr @.str.129, !496, !"<string literal>", i1 false, i1 false}
!498 = !{ptr @drms_uA_update.__UNIQUE_ID_ddebug356, !496, !"__UNIQUE_ID_ddebug356", i1 false, i1 false}
!499 = !{ptr @.str.130, !500, !"<string literal>", i1 false, i1 false}
!500 = !{!"../drivers/regulator/core.c", i32 952, i32 4}
!501 = !{ptr @drms_uA_update._entry, !500, !"_entry", i1 false, i1 false}
!502 = !{ptr @drms_uA_update._entry_ptr, !500, !"_entry_ptr", i1 false, i1 false}
!503 = !{ptr @.str.132, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../drivers/regulator/core.c", i32 958, i32 4}
!505 = !{ptr @drms_uA_update._entry.131, !504, !"_entry", i1 false, i1 false}
!506 = !{ptr @drms_uA_update._entry_ptr.133, !504, !"_entry_ptr", i1 false, i1 false}
!507 = !{ptr @.str.135, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../drivers/regulator/core.c", i32 969, i32 4}
!509 = !{ptr @drms_uA_update._entry.134, !508, !"_entry", i1 false, i1 false}
!510 = !{ptr @drms_uA_update._entry_ptr.136, !508, !"_entry_ptr", i1 false, i1 false}
!511 = !{ptr @.str.138, !512, !"<string literal>", i1 false, i1 false}
!512 = !{!"../drivers/regulator/core.c", i32 980, i32 4}
!513 = !{ptr @drms_uA_update._entry.137, !512, !"_entry", i1 false, i1 false}
!514 = !{ptr @drms_uA_update._entry_ptr.139, !512, !"_entry_ptr", i1 false, i1 false}
!515 = !{ptr @.str.141, !516, !"<string literal>", i1 false, i1 false}
!516 = !{!"../drivers/regulator/core.c", i32 987, i32 4}
!517 = !{ptr @drms_uA_update._entry.140, !516, !"_entry", i1 false, i1 false}
!518 = !{ptr @drms_uA_update._entry_ptr.142, !516, !"_entry_ptr", i1 false, i1 false}
!519 = distinct !{null, !520, !"__already_done", i1 false, i1 false}
!520 = !{!"../drivers/regulator/core.c", i32 204, i32 2}
!521 = !{ptr @.str.143, !522, !"<string literal>", i1 false, i1 false}
!522 = !{!"../drivers/regulator/core.c", i32 3546, i32 3}
!523 = !{ptr @.str.144, !522, !"<string literal>", i1 false, i1 false}
!524 = !{ptr @_regulator_do_set_voltage._entry, !522, !"_entry", i1 false, i1 false}
!525 = !{ptr @_regulator_do_set_voltage._entry_ptr, !522, !"_entry_ptr", i1 false, i1 false}
!526 = distinct !{null, !37, !"__already_done", i1 false, i1 false}
!527 = distinct !{null, !37, !"__warned", i1 false, i1 false}
!528 = distinct !{null, !41, !"__already_done", i1 false, i1 false}
!529 = distinct !{null, !41, !"__warned", i1 false, i1 false}
!530 = distinct !{null, !531, !"__already_done", i1 false, i1 false}
!531 = !{!"../drivers/regulator/core.c", i32 3803, i32 3}
!532 = !{ptr @.str.145, !533, !"<string literal>", i1 false, i1 false}
!533 = !{!"../drivers/regulator/core.c", i32 3998, i32 3}
!534 = !{ptr @.str.146, !533, !"<string literal>", i1 false, i1 false}
!535 = !{ptr @regulator_balance_voltage._entry, !533, !"_entry", i1 false, i1 false}
!536 = !{ptr @regulator_balance_voltage._entry_ptr, !533, !"_entry_ptr", i1 false, i1 false}
!537 = !{ptr @.str.147, !538, !"<string literal>", i1 false, i1 false}
!538 = !{!"../drivers/regulator/core.c", i32 4099, i32 3}
!539 = !{ptr @.str.148, !538, !"<string literal>", i1 false, i1 false}
!540 = !{ptr @_regulator_set_suspend_voltage._entry, !538, !"_entry", i1 false, i1 false}
!541 = !{ptr @_regulator_set_suspend_voltage._entry_ptr, !538, !"_entry_ptr", i1 false, i1 false}
!542 = !{ptr @.str.149, !543, !"<string literal>", i1 false, i1 false}
!543 = !{!"../drivers/regulator/core.c", i32 3454, i32 3}
!544 = !{ptr @.str.150, !543, !"<string literal>", i1 false, i1 false}
!545 = !{ptr @_regulator_set_voltage_time.__UNIQUE_ID_ddebug366, !543, !"__UNIQUE_ID_ddebug366", i1 false, i1 false}
!546 = !{ptr @.str.151, !547, !"<string literal>", i1 false, i1 false}
!547 = !{!"../drivers/regulator/core.c", i32 491, i32 3}
!548 = !{ptr @.str.152, !547, !"<string literal>", i1 false, i1 false}
!549 = !{ptr @regulator_check_current_limit._entry, !547, !"_entry", i1 false, i1 false}
!550 = !{ptr @regulator_check_current_limit._entry_ptr, !547, !"_entry_ptr", i1 false, i1 false}
!551 = !{ptr @.str.154, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../drivers/regulator/core.c", i32 501, i32 3}
!553 = !{ptr @regulator_check_current_limit._entry.153, !552, !"_entry", i1 false, i1 false}
!554 = !{ptr @regulator_check_current_limit._entry_ptr.155, !552, !"_entry_ptr", i1 false, i1 false}
!555 = !{ptr @.str.156, !556, !"<string literal>", i1 false, i1 false}
!556 = !{!"../drivers/regulator/core.c", i32 520, i32 3}
!557 = !{ptr @.str.157, !556, !"<string literal>", i1 false, i1 false}
!558 = !{ptr @regulator_mode_constrain._entry, !556, !"_entry", i1 false, i1 false}
!559 = !{ptr @regulator_mode_constrain._entry_ptr, !556, !"_entry_ptr", i1 false, i1 false}
!560 = !{ptr @.str.159, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../drivers/regulator/core.c", i32 525, i32 3}
!562 = !{ptr @regulator_mode_constrain._entry.158, !561, !"_entry", i1 false, i1 false}
!563 = !{ptr @regulator_mode_constrain._entry_ptr.160, !561, !"_entry_ptr", i1 false, i1 false}
!564 = distinct !{null, !21, !"__already_done", i1 false, i1 false}
!565 = distinct !{null, !21, !"__warned", i1 false, i1 false}
!566 = distinct !{null, !25, !"__already_done", i1 false, i1 false}
!567 = distinct !{null, !25, !"__warned", i1 false, i1 false}
!568 = distinct !{null, !29, !"__already_done", i1 false, i1 false}
!569 = distinct !{null, !29, !"__warned", i1 false, i1 false}
!570 = distinct !{null, !33, !"__already_done", i1 false, i1 false}
!571 = distinct !{null, !33, !"__warned", i1 false, i1 false}
!572 = !{ptr @regulator_coupler_list, !573, !"regulator_coupler_list", i1 false, i1 false}
!573 = !{!"../drivers/regulator/core.c", i32 42, i32 8}
!574 = !{ptr @.str.161, !575, !"<string literal>", i1 false, i1 false}
!575 = !{!"../drivers/regulator/core.c", i32 36, i32 8}
!576 = !{ptr @.str.162, !575, !"<string literal>", i1 false, i1 false}
!577 = !{ptr @regulator_ww_class, !575, !"regulator_ww_class", i1 false, i1 false}
!578 = !{ptr @.str.163, !579, !"<string literal>", i1 false, i1 false}
!579 = !{!"../drivers/regulator/core.c", i32 3016, i32 5}
!580 = !{ptr @.str.164, !579, !"<string literal>", i1 false, i1 false}
!581 = !{ptr @regulator_disable_work._entry, !579, !"_entry", i1 false, i1 false}
!582 = !{ptr @regulator_disable_work._entry_ptr, !579, !"_entry_ptr", i1 false, i1 false}
!583 = !{ptr @.str.165, !584, !"<string literal>", i1 false, i1 false}
!584 = !{!"../drivers/regulator/core.c", i32 2426, i32 4}
!585 = !{ptr @.str.166, !584, !"<string literal>", i1 false, i1 false}
!586 = !{ptr @regulator_ena_gpio_request.__UNIQUE_ID_ddebug365, !584, !"__UNIQUE_ID_ddebug365", i1 false, i1 false}
!587 = !{ptr @regulator_ena_gpio_list, !588, !"regulator_ena_gpio_list", i1 false, i1 false}
!588 = !{!"../drivers/regulator/core.c", i32 40, i32 8}
!589 = !{ptr @.str.167, !590, !"<string literal>", i1 false, i1 false}
!590 = !{!"../drivers/regulator/core.c", i32 1372, i32 4}
!591 = !{ptr @.str.168, !590, !"<string literal>", i1 false, i1 false}
!592 = !{ptr @set_machine_constraints._entry, !590, !"_entry", i1 false, i1 false}
!593 = !{ptr @set_machine_constraints._entry_ptr, !590, !"_entry_ptr", i1 false, i1 false}
!594 = !{ptr @.str.170, !595, !"<string literal>", i1 false, i1 false}
!595 = !{!"../drivers/regulator/core.c", i32 1381, i32 4}
!596 = !{ptr @set_machine_constraints._entry.169, !595, !"_entry", i1 false, i1 false}
!597 = !{ptr @set_machine_constraints._entry_ptr.171, !595, !"_entry_ptr", i1 false, i1 false}
!598 = !{ptr @.str.173, !599, !"<string literal>", i1 false, i1 false}
!599 = !{!"../drivers/regulator/core.c", i32 1388, i32 4}
!600 = !{ptr @set_machine_constraints._entry.172, !599, !"_entry", i1 false, i1 false}
!601 = !{ptr @set_machine_constraints._entry_ptr.174, !599, !"_entry_ptr", i1 false, i1 false}
!602 = !{ptr @.str.176, !603, !"<string literal>", i1 false, i1 false}
!603 = !{!"../drivers/regulator/core.c", i32 1394, i32 4}
!604 = !{ptr @set_machine_constraints._entry.175, !603, !"_entry", i1 false, i1 false}
!605 = !{ptr @set_machine_constraints._entry_ptr.177, !603, !"_entry_ptr", i1 false, i1 false}
!606 = !{ptr @.str.179, !607, !"<string literal>", i1 false, i1 false}
!607 = !{!"../drivers/regulator/core.c", i32 1409, i32 4}
!608 = !{ptr @set_machine_constraints._entry.178, !607, !"_entry", i1 false, i1 false}
!609 = !{ptr @set_machine_constraints._entry_ptr.180, !607, !"_entry_ptr", i1 false, i1 false}
!610 = !{ptr @.str.182, !611, !"<string literal>", i1 false, i1 false}
!611 = !{!"../drivers/regulator/core.c", i32 1417, i32 4}
!612 = !{ptr @set_machine_constraints._entry.181, !611, !"_entry", i1 false, i1 false}
!613 = !{ptr @set_machine_constraints._entry_ptr.183, !611, !"_entry_ptr", i1 false, i1 false}
!614 = !{ptr @.str.185, !615, !"<string literal>", i1 false, i1 false}
!615 = !{!"../drivers/regulator/core.c", i32 1425, i32 4}
!616 = !{ptr @set_machine_constraints._entry.184, !615, !"_entry", i1 false, i1 false}
!617 = !{ptr @set_machine_constraints._entry_ptr.186, !615, !"_entry_ptr", i1 false, i1 false}
!618 = !{ptr @.str.188, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../drivers/regulator/core.c", i32 1452, i32 4}
!620 = !{ptr @set_machine_constraints._entry.187, !619, !"_entry", i1 false, i1 false}
!621 = !{ptr @set_machine_constraints._entry_ptr.189, !619, !"_entry_ptr", i1 false, i1 false}
!622 = !{ptr @.str.191, !623, !"<string literal>", i1 false, i1 false}
!623 = !{!"../drivers/regulator/core.c", i32 1464, i32 4}
!624 = !{ptr @set_machine_constraints._entry.190, !623, !"_entry", i1 false, i1 false}
!625 = !{ptr @set_machine_constraints._entry_ptr.192, !623, !"_entry_ptr", i1 false, i1 false}
!626 = !{ptr @.str.194, !627, !"<string literal>", i1 false, i1 false}
!627 = !{!"../drivers/regulator/core.c", i32 1468, i32 3}
!628 = !{ptr @set_machine_constraints._entry.193, !627, !"_entry", i1 false, i1 false}
!629 = !{ptr @set_machine_constraints._entry_ptr.195, !627, !"_entry_ptr", i1 false, i1 false}
!630 = !{ptr @.str.197, !631, !"<string literal>", i1 false, i1 false}
!631 = !{!"../drivers/regulator/core.c", i32 1478, i32 4}
!632 = !{ptr @set_machine_constraints._entry.196, !631, !"_entry", i1 false, i1 false}
!633 = !{ptr @set_machine_constraints._entry_ptr.198, !631, !"_entry_ptr", i1 false, i1 false}
!634 = !{ptr @.str.200, !635, !"<string literal>", i1 false, i1 false}
!635 = !{!"../drivers/regulator/core.c", i32 1482, i32 3}
!636 = !{ptr @set_machine_constraints._entry.199, !635, !"_entry", i1 false, i1 false}
!637 = !{ptr @set_machine_constraints._entry_ptr.201, !635, !"_entry_ptr", i1 false, i1 false}
!638 = !{ptr @.str.203, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../drivers/regulator/core.c", i32 1492, i32 4}
!640 = !{ptr @set_machine_constraints._entry.202, !639, !"_entry", i1 false, i1 false}
!641 = !{ptr @set_machine_constraints._entry_ptr.204, !639, !"_entry_ptr", i1 false, i1 false}
!642 = !{ptr @.str.206, !643, !"<string literal>", i1 false, i1 false}
!643 = !{!"../drivers/regulator/core.c", i32 1496, i32 3}
!644 = !{ptr @set_machine_constraints._entry.205, !643, !"_entry", i1 false, i1 false}
!645 = !{ptr @set_machine_constraints._entry_ptr.207, !643, !"_entry_ptr", i1 false, i1 false}
!646 = !{ptr @.str.209, !647, !"<string literal>", i1 false, i1 false}
!647 = !{!"../drivers/regulator/core.c", i32 1506, i32 4}
!648 = !{ptr @set_machine_constraints._entry.208, !647, !"_entry", i1 false, i1 false}
!649 = !{ptr @set_machine_constraints._entry_ptr.210, !647, !"_entry_ptr", i1 false, i1 false}
!650 = !{ptr @.str.212, !651, !"<string literal>", i1 false, i1 false}
!651 = !{!"../drivers/regulator/core.c", i32 1510, i32 3}
!652 = !{ptr @set_machine_constraints._entry.211, !651, !"_entry", i1 false, i1 false}
!653 = !{ptr @set_machine_constraints._entry_ptr.213, !651, !"_entry_ptr", i1 false, i1 false}
!654 = !{ptr @.str.215, !655, !"<string literal>", i1 false, i1 false}
!655 = !{!"../drivers/regulator/core.c", i32 1520, i32 4}
!656 = !{ptr @set_machine_constraints._entry.214, !655, !"_entry", i1 false, i1 false}
!657 = !{ptr @set_machine_constraints._entry_ptr.216, !655, !"_entry_ptr", i1 false, i1 false}
!658 = !{ptr @.str.218, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../drivers/regulator/core.c", i32 1546, i32 4}
!660 = !{ptr @set_machine_constraints._entry.217, !659, !"_entry", i1 false, i1 false}
!661 = !{ptr @set_machine_constraints._entry_ptr.219, !659, !"_entry_ptr", i1 false, i1 false}
!662 = !{ptr @.str.220, !663, !"<string literal>", i1 false, i1 false}
!663 = !{!"../drivers/regulator/core.c", i32 1144, i32 4}
!664 = !{ptr @.str.221, !663, !"<string literal>", i1 false, i1 false}
!665 = !{ptr @machine_constraints_voltage._entry, !663, !"_entry", i1 false, i1 false}
!666 = !{ptr @machine_constraints_voltage._entry_ptr, !663, !"_entry_ptr", i1 false, i1 false}
!667 = !{ptr @.str.223, !668, !"<string literal>", i1 false, i1 false}
!668 = !{!"../drivers/regulator/core.c", i32 1155, i32 5}
!669 = !{ptr @machine_constraints_voltage._entry.222, !668, !"_entry", i1 false, i1 false}
!670 = !{ptr @machine_constraints_voltage._entry_ptr.224, !668, !"_entry_ptr", i1 false, i1 false}
!671 = !{ptr @.str.226, !672, !"<string literal>", i1 false, i1 false}
!672 = !{!"../drivers/regulator/core.c", i32 1180, i32 4}
!673 = !{ptr @machine_constraints_voltage._entry.225, !672, !"_entry", i1 false, i1 false}
!674 = !{ptr @machine_constraints_voltage._entry_ptr.227, !672, !"_entry_ptr", i1 false, i1 false}
!675 = !{ptr @.str.229, !676, !"<string literal>", i1 false, i1 false}
!676 = !{!"../drivers/regulator/core.c", i32 1185, i32 5}
!677 = !{ptr @machine_constraints_voltage._entry.228, !676, !"_entry", i1 false, i1 false}
!678 = !{ptr @machine_constraints_voltage._entry_ptr.230, !676, !"_entry_ptr", i1 false, i1 false}
!679 = !{ptr @.str.232, !680, !"<string literal>", i1 false, i1 false}
!680 = !{!"../drivers/regulator/core.c", i32 1220, i32 4}
!681 = !{ptr @machine_constraints_voltage._entry.231, !680, !"_entry", i1 false, i1 false}
!682 = !{ptr @machine_constraints_voltage._entry_ptr.233, !680, !"_entry_ptr", i1 false, i1 false}
!683 = !{ptr @.str.235, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../drivers/regulator/core.c", i32 1245, i32 4}
!685 = !{ptr @machine_constraints_voltage._entry.234, !684, !"_entry", i1 false, i1 false}
!686 = !{ptr @machine_constraints_voltage._entry_ptr.236, !684, !"_entry_ptr", i1 false, i1 false}
!687 = !{ptr @.str.237, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../drivers/regulator/core.c", i32 1253, i32 4}
!689 = !{ptr @machine_constraints_voltage.__UNIQUE_ID_ddebug358, !688, !"__UNIQUE_ID_ddebug358", i1 false, i1 false}
!690 = !{ptr @.str.238, !691, !"<string literal>", i1 false, i1 false}
!691 = !{!"../drivers/regulator/core.c", i32 1258, i32 4}
!692 = !{ptr @machine_constraints_voltage.__UNIQUE_ID_ddebug359, !691, !"__UNIQUE_ID_ddebug359", i1 false, i1 false}
!693 = !{ptr @.str.239, !694, !"<string literal>", i1 false, i1 false}
!694 = !{!"../drivers/regulator/core.c", i32 1277, i32 3}
!695 = !{ptr @.str.240, !694, !"<string literal>", i1 false, i1 false}
!696 = !{ptr @machine_constraints_current._entry, !694, !"_entry", i1 false, i1 false}
!697 = !{ptr @machine_constraints_current._entry_ptr, !694, !"_entry_ptr", i1 false, i1 false}
!698 = !{ptr @.str.242, !699, !"<string literal>", i1 false, i1 false}
!699 = !{!"../drivers/regulator/core.c", i32 1282, i32 3}
!700 = !{ptr @machine_constraints_current._entry.241, !699, !"_entry", i1 false, i1 false}
!701 = !{ptr @machine_constraints_current._entry_ptr.243, !699, !"_entry_ptr", i1 false, i1 false}
!702 = !{ptr @.str.245, !703, !"<string literal>", i1 false, i1 false}
!703 = !{!"../drivers/regulator/core.c", i32 1290, i32 3}
!704 = !{ptr @machine_constraints_current._entry.244, !703, !"_entry", i1 false, i1 false}
!705 = !{ptr @machine_constraints_current._entry_ptr.246, !703, !"_entry_ptr", i1 false, i1 false}
!706 = !{ptr @.str.247, !707, !"<string literal>", i1 false, i1 false}
!707 = !{!"../drivers/regulator/core.c", i32 577, i32 4}
!708 = !{ptr @.str.248, !707, !"<string literal>", i1 false, i1 false}
!709 = !{ptr @regulator_get_suspend_state_check._entry, !707, !"_entry", i1 false, i1 false}
!710 = !{ptr @regulator_get_suspend_state_check._entry_ptr, !707, !"_entry_ptr", i1 false, i1 false}
!711 = !{ptr @.str.249, !712, !"<string literal>", i1 false, i1 false}
!712 = !{!"../drivers/regulator/core.c", i32 1009, i32 3}
!713 = !{ptr @.str.250, !712, !"<string literal>", i1 false, i1 false}
!714 = !{ptr @__suspend_set_state._entry, !712, !"_entry", i1 false, i1 false}
!715 = !{ptr @__suspend_set_state._entry_ptr, !712, !"_entry_ptr", i1 false, i1 false}
!716 = !{ptr @.str.252, !717, !"<string literal>", i1 false, i1 false}
!717 = !{!"../drivers/regulator/core.c", i32 1016, i32 4}
!718 = !{ptr @__suspend_set_state._entry.251, !717, !"_entry", i1 false, i1 false}
!719 = !{ptr @__suspend_set_state._entry_ptr.253, !717, !"_entry_ptr", i1 false, i1 false}
!720 = !{ptr @.str.255, !721, !"<string literal>", i1 false, i1 false}
!721 = !{!"../drivers/regulator/core.c", i32 1024, i32 4}
!722 = !{ptr @__suspend_set_state._entry.254, !721, !"_entry", i1 false, i1 false}
!723 = !{ptr @__suspend_set_state._entry_ptr.256, !721, !"_entry_ptr", i1 false, i1 false}
!724 = !{ptr @.str.257, !725, !"<string literal>", i1 false, i1 false}
!725 = !{!"../drivers/regulator/core.c", i32 1126, i32 3}
!726 = !{ptr @.str.258, !725, !"<string literal>", i1 false, i1 false}
!727 = !{ptr @print_constraints._entry, !725, !"_entry", i1 false, i1 false}
!728 = !{ptr @print_constraints._entry_ptr, !725, !"_entry_ptr", i1 false, i1 false}
!729 = !{ptr @.str.259, !730, !"<string literal>", i1 false, i1 false}
!730 = !{!"../drivers/regulator/core.c", i32 1055, i32 49}
!731 = !{ptr @.str.260, !732, !"<string literal>", i1 false, i1 false}
!732 = !{!"../drivers/regulator/core.c", i32 1059, i32 9}
!733 = !{ptr @.str.261, !734, !"<string literal>", i1 false, i1 false}
!734 = !{!"../drivers/regulator/core.c", i32 1069, i32 9}
!735 = !{ptr @.str.262, !736, !"<string literal>", i1 false, i1 false}
!736 = !{!"../drivers/regulator/core.c", i32 1073, i32 48}
!737 = !{ptr @.str.263, !738, !"<string literal>", i1 false, i1 false}
!738 = !{!"../drivers/regulator/core.c", i32 1078, i32 49}
!739 = !{ptr @.str.264, !740, !"<string literal>", i1 false, i1 false}
!740 = !{!"../drivers/regulator/core.c", i32 1082, i32 9}
!741 = !{ptr @.str.265, !742, !"<string literal>", i1 false, i1 false}
!742 = !{!"../drivers/regulator/core.c", i32 1092, i32 9}
!743 = !{ptr @.str.266, !744, !"<string literal>", i1 false, i1 false}
!744 = !{!"../drivers/regulator/core.c", i32 1096, i32 48}
!745 = !{ptr @.str.267, !746, !"<string literal>", i1 false, i1 false}
!746 = !{!"../drivers/regulator/core.c", i32 1098, i32 48}
!747 = !{ptr @.str.268, !748, !"<string literal>", i1 false, i1 false}
!748 = !{!"../drivers/regulator/core.c", i32 1100, i32 48}
!749 = !{ptr @.str.269, !750, !"<string literal>", i1 false, i1 false}
!750 = !{!"../drivers/regulator/core.c", i32 1102, i32 48}
!751 = !{ptr @.str.270, !752, !"<string literal>", i1 false, i1 false}
!752 = !{!"../drivers/regulator/core.c", i32 1105, i32 31}
!753 = !{ptr @.str.271, !754, !"<string literal>", i1 false, i1 false}
!754 = !{!"../drivers/regulator/core.c", i32 1109, i32 47}
!755 = !{ptr @.str.272, !756, !"<string literal>", i1 false, i1 false}
!756 = !{!"../drivers/regulator/core.c", i32 1110, i32 33}
!757 = !{ptr @.str.273, !758, !"<string literal>", i1 false, i1 false}
!758 = !{!"../drivers/regulator/core.c", i32 1110, i32 45}
!759 = !{ptr @.str.274, !760, !"<string literal>", i1 false, i1 false}
!760 = !{!"../drivers/regulator/core.c", i32 1112, i32 2}
!761 = !{ptr @.str.275, !760, !"<string literal>", i1 false, i1 false}
!762 = !{ptr @print_constraints_debug.__UNIQUE_ID_ddebug357, !760, !"__UNIQUE_ID_ddebug357", i1 false, i1 false}
!763 = !{ptr @.str.276, !764, !"<string literal>", i1 false, i1 false}
!764 = !{!"../drivers/regulator/core.c", i32 5280, i32 3}
!765 = !{ptr @.str.277, !764, !"<string literal>", i1 false, i1 false}
!766 = !{ptr @regulator_init_coupling._entry, !764, !"_entry", i1 false, i1 false}
!767 = !{ptr @regulator_init_coupling._entry_ptr, !764, !"_entry_ptr", i1 false, i1 false}
!768 = !{ptr @.str.278, !769, !"<string literal>", i1 false, i1 false}
!769 = !{!"../drivers/regulator/core.c", i32 5157, i32 2}
!770 = !{ptr @.str.279, !769, !"<string literal>", i1 false, i1 false}
!771 = !{ptr @regulator_find_coupler._entry, !769, !"_entry", i1 false, i1 false}
!772 = !{ptr @regulator_find_coupler._entry_ptr, !769, !"_entry_ptr", i1 false, i1 false}
!773 = !{ptr @.str.280, !774, !"<string literal>", i1 false, i1 false}
!774 = !{!"../drivers/regulator/core.c", i32 1642, i32 3}
!775 = !{ptr @.str.281, !774, !"<string literal>", i1 false, i1 false}
!776 = !{ptr @set_consumer_device_supply.__UNIQUE_ID_ddebug361, !774, !"__UNIQUE_ID_ddebug361", i1 false, i1 false}
!777 = !{ptr @.str.282, !778, !"<string literal>", i1 false, i1 false}
!778 = !{!"../drivers/regulator/core.c", i32 5090, i32 3}
!779 = !{ptr @.str.283, !778, !"<string literal>", i1 false, i1 false}
!780 = !{ptr @rdev_init_debugfs._entry, !778, !"_entry", i1 false, i1 false}
!781 = !{ptr @rdev_init_debugfs._entry_ptr, !778, !"_entry_ptr", i1 false, i1 false}
!782 = !{ptr @.str.284, !783, !"<string literal>", i1 false, i1 false}
!783 = !{!"../drivers/regulator/core.c", i32 5094, i32 21}
!784 = !{ptr @.str.285, !785, !"<string literal>", i1 false, i1 false}
!785 = !{!"../drivers/regulator/core.c", i32 5096, i32 21}
!786 = !{ptr @.str.286, !787, !"<string literal>", i1 false, i1 false}
!787 = !{!"../drivers/regulator/core.c", i32 5098, i32 21}
!788 = !{ptr @debugfs_root, !789, !"debugfs_root", i1 false, i1 false}
!789 = !{!"../drivers/regulator/core.c", i32 45, i32 23}
!790 = !{ptr @.str.287, !791, !"<string literal>", i1 false, i1 false}
!791 = !{!"../drivers/regulator/core.c", i32 5182, i32 4}
!792 = !{ptr @.str.288, !791, !"<string literal>", i1 false, i1 false}
!793 = !{ptr @regulator_resolve_coupling._entry, !791, !"_entry", i1 false, i1 false}
!794 = !{ptr @regulator_resolve_coupling._entry_ptr, !791, !"_entry_ptr", i1 false, i1 false}
!795 = !{ptr @.str.289, !796, !"<string literal>", i1 false, i1 false}
!796 = !{!"../drivers/regulator/core.c", i32 5107, i32 3}
!797 = !{ptr @.str.290, !796, !"<string literal>", i1 false, i1 false}
!798 = !{ptr @regulator_register_resolve_supply.__UNIQUE_ID_ddebug384, !796, !"__UNIQUE_ID_ddebug384", i1 false, i1 false}
!799 = !{ptr @.str.291, !800, !"<string literal>", i1 false, i1 false}
!800 = !{!"../drivers/regulator/core.c", i32 5235, i32 4}
!801 = !{ptr @.str.292, !800, !"<string literal>", i1 false, i1 false}
!802 = !{ptr @regulator_remove_coupling._entry, !800, !"_entry", i1 false, i1 false}
!803 = !{ptr @regulator_remove_coupling._entry_ptr, !800, !"_entry_ptr", i1 false, i1 false}
!804 = !{ptr @regulator_dev_groups, !805, !"regulator_dev_groups", i1 false, i1 false}
!805 = !{!"../drivers/regulator/core.c", i32 5061, i32 38}
!806 = !{ptr @regulator_dev_group, !807, !"regulator_dev_group", i1 false, i1 false}
!807 = !{!"../drivers/regulator/core.c", i32 5056, i32 37}
!808 = !{ptr @dev_attr_name, !809, !"dev_attr_name", i1 false, i1 false}
!809 = !{!"../drivers/regulator/core.c", i32 616, i32 8}
!810 = !{ptr @.str.293, !811, !"<string literal>", i1 false, i1 false}
!811 = !{!"../drivers/regulator/core.c", i32 614, i32 22}
!812 = !{ptr @.str.294, !813, !"<string literal>", i1 false, i1 false}
!813 = !{!"../drivers/regulator/core.c", i32 789, i32 8}
!814 = !{ptr @dev_attr_num_users, !813, !"dev_attr_num_users", i1 false, i1 false}
!815 = !{ptr @.str.295, !816, !"<string literal>", i1 false, i1 false}
!816 = !{!"../drivers/regulator/core.c", i32 787, i32 22}
!817 = !{ptr @.str.296, !818, !"<string literal>", i1 false, i1 false}
!818 = !{!"../drivers/regulator/core.c", i32 804, i32 8}
!819 = !{ptr @dev_attr_type, !818, !"dev_attr_type", i1 false, i1 false}
!820 = !{ptr @.str.297, !821, !"<string literal>", i1 false, i1 false}
!821 = !{!"../drivers/regulator/core.c", i32 798, i32 23}
!822 = !{ptr @.str.298, !823, !"<string literal>", i1 false, i1 false}
!823 = !{!"../drivers/regulator/core.c", i32 800, i32 23}
!824 = !{ptr @.str.299, !825, !"<string literal>", i1 false, i1 false}
!825 = !{!"../drivers/regulator/core.c", i32 802, i32 22}
!826 = !{ptr @.str.300, !827, !"<string literal>", i1 false, i1 false}
!827 = !{!"../drivers/regulator/core.c", i32 598, i32 8}
!828 = !{ptr @dev_attr_microvolts, !827, !"dev_attr_microvolts", i1 false, i1 false}
!829 = !{ptr @.str.301, !830, !"<string literal>", i1 false, i1 false}
!830 = !{!"../drivers/regulator/core.c", i32 607, i32 8}
!831 = !{ptr @dev_attr_microamps, !830, !"dev_attr_microamps", i1 false, i1 false}
!832 = !{ptr @.str.302, !833, !"<string literal>", i1 false, i1 false}
!833 = !{!"../drivers/regulator/core.c", i32 645, i32 8}
!834 = !{ptr @dev_attr_opmode, !833, !"dev_attr_opmode", i1 false, i1 false}
!835 = !{ptr @.str.303, !836, !"<string literal>", i1 false, i1 false}
!836 = !{!"../drivers/regulator/core.c", i32 622, i32 10}
!837 = !{ptr @.str.304, !838, !"<string literal>", i1 false, i1 false}
!838 = !{!"../drivers/regulator/core.c", i32 624, i32 10}
!839 = !{ptr @.str.305, !840, !"<string literal>", i1 false, i1 false}
!840 = !{!"../drivers/regulator/core.c", i32 626, i32 10}
!841 = !{ptr @.str.306, !842, !"<string literal>", i1 false, i1 false}
!842 = !{!"../drivers/regulator/core.c", i32 628, i32 10}
!843 = !{ptr @.str.307, !844, !"<string literal>", i1 false, i1 false}
!844 = !{!"../drivers/regulator/core.c", i32 630, i32 9}
!845 = !{ptr @.str.308, !846, !"<string literal>", i1 false, i1 false}
!846 = !{!"../drivers/regulator/core.c", i32 669, i32 8}
!847 = !{ptr @dev_attr_state, !846, !"dev_attr_state", i1 false, i1 false}
!848 = !{ptr @.str.309, !849, !"<string literal>", i1 false, i1 false}
!849 = !{!"../drivers/regulator/core.c", i32 650, i32 23}
!850 = !{ptr @.str.310, !851, !"<string literal>", i1 false, i1 false}
!851 = !{!"../drivers/regulator/core.c", i32 652, i32 23}
!852 = !{ptr @.str.311, !853, !"<string literal>", i1 false, i1 false}
!853 = !{!"../drivers/regulator/core.c", i32 716, i32 8}
!854 = !{ptr @dev_attr_status, !853, !"dev_attr_status", i1 false, i1 false}
!855 = !{ptr @.str.312, !856, !"<string literal>", i1 false, i1 false}
!856 = !{!"../drivers/regulator/core.c", i32 684, i32 11}
!857 = !{ptr @.str.313, !858, !"<string literal>", i1 false, i1 false}
!858 = !{!"../drivers/regulator/core.c", i32 687, i32 11}
!859 = !{ptr @.str.314, !860, !"<string literal>", i1 false, i1 false}
!860 = !{!"../drivers/regulator/core.c", i32 690, i32 11}
!861 = !{ptr @.str.315, !862, !"<string literal>", i1 false, i1 false}
!862 = !{!"../drivers/regulator/core.c", i32 705, i32 11}
!863 = !{ptr @.str.316, !864, !"<string literal>", i1 false, i1 false}
!864 = !{!"../drivers/regulator/core.c", i32 708, i32 11}
!865 = !{ptr @dev_attr_bypass, !866, !"dev_attr_bypass", i1 false, i1 false}
!866 = !{!"../drivers/regulator/core.c", i32 912, i32 8}
!867 = !{ptr @.str.317, !868, !"<string literal>", i1 false, i1 false}
!868 = !{!"../drivers/regulator/core.c", i32 752, i32 8}
!869 = !{ptr @dev_attr_min_microvolts, !868, !"dev_attr_min_microvolts", i1 false, i1 false}
!870 = !{ptr @.str.318, !871, !"<string literal>", i1 false, i1 false}
!871 = !{!"../drivers/regulator/core.c", i32 748, i32 23}
!872 = !{ptr @.str.319, !873, !"<string literal>", i1 false, i1 false}
!873 = !{!"../drivers/regulator/core.c", i32 764, i32 8}
!874 = !{ptr @dev_attr_max_microvolts, !873, !"dev_attr_max_microvolts", i1 false, i1 false}
!875 = !{ptr @.str.320, !876, !"<string literal>", i1 false, i1 false}
!876 = !{!"../drivers/regulator/core.c", i32 728, i32 8}
!877 = !{ptr @dev_attr_min_microamps, !876, !"dev_attr_min_microamps", i1 false, i1 false}
!878 = !{ptr @.str.321, !879, !"<string literal>", i1 false, i1 false}
!879 = !{!"../drivers/regulator/core.c", i32 740, i32 8}
!880 = !{ptr @dev_attr_max_microamps, !879, !"dev_attr_max_microamps", i1 false, i1 false}
!881 = !{ptr @.str.322, !882, !"<string literal>", i1 false, i1 false}
!882 = !{!"../drivers/regulator/core.c", i32 891, i32 8}
!883 = !{ptr @dev_attr_suspend_standby_state, !882, !"dev_attr_suspend_standby_state", i1 false, i1 false}
!884 = !{ptr @.str.323, !885, !"<string literal>", i1 false, i1 false}
!885 = !{!"../drivers/regulator/core.c", i32 871, i32 8}
!886 = !{ptr @dev_attr_suspend_mem_state, !885, !"dev_attr_suspend_mem_state", i1 false, i1 false}
!887 = !{ptr @.str.324, !888, !"<string literal>", i1 false, i1 false}
!888 = !{!"../drivers/regulator/core.c", i32 881, i32 8}
!889 = !{ptr @dev_attr_suspend_disk_state, !888, !"dev_attr_suspend_disk_state", i1 false, i1 false}
!890 = !{ptr @.str.325, !891, !"<string literal>", i1 false, i1 false}
!891 = !{!"../drivers/regulator/core.c", i32 831, i32 8}
!892 = !{ptr @dev_attr_suspend_standby_microvolts, !891, !"dev_attr_suspend_standby_microvolts", i1 false, i1 false}
!893 = !{ptr @.str.326, !894, !"<string literal>", i1 false, i1 false}
!894 = !{!"../drivers/regulator/core.c", i32 813, i32 8}
!895 = !{ptr @dev_attr_suspend_mem_microvolts, !894, !"dev_attr_suspend_mem_microvolts", i1 false, i1 false}
!896 = !{ptr @.str.327, !897, !"<string literal>", i1 false, i1 false}
!897 = !{!"../drivers/regulator/core.c", i32 822, i32 8}
!898 = !{ptr @dev_attr_suspend_disk_microvolts, !897, !"dev_attr_suspend_disk_microvolts", i1 false, i1 false}
!899 = !{ptr @.str.328, !900, !"<string literal>", i1 false, i1 false}
!900 = !{!"../drivers/regulator/core.c", i32 861, i32 8}
!901 = !{ptr @dev_attr_suspend_standby_mode, !900, !"dev_attr_suspend_standby_mode", i1 false, i1 false}
!902 = !{ptr @.str.329, !903, !"<string literal>", i1 false, i1 false}
!903 = !{!"../drivers/regulator/core.c", i32 841, i32 8}
!904 = !{ptr @dev_attr_suspend_mem_mode, !903, !"dev_attr_suspend_mem_mode", i1 false, i1 false}
!905 = !{ptr @.str.330, !906, !"<string literal>", i1 false, i1 false}
!906 = !{!"../drivers/regulator/core.c", i32 851, i32 8}
!907 = !{ptr @dev_attr_suspend_disk_mode, !906, !"dev_attr_suspend_disk_mode", i1 false, i1 false}
!908 = !{ptr @regulator_dev_attrs, !909, !"regulator_dev_attrs", i1 false, i1 false}
!909 = !{!"../drivers/regulator/core.c", i32 4959, i32 26}
!910 = !{ptr @.str.331, !911, !"<string literal>", i1 false, i1 false}
!911 = !{!"../drivers/regulator/core.c", i32 781, i32 8}
!912 = !{ptr @dev_attr_requested_microamps, !911, !"dev_attr_requested_microamps", i1 false, i1 false}
!913 = !{ptr @regulator_pm_ops, !914, !"regulator_pm_ops", i1 false, i1 false}
!914 = !{!"../drivers/regulator/core.c", i32 5651, i32 47}
!915 = !{ptr @regulator_init.__key, !916, !"__key", i1 false, i1 false}
!916 = !{!"../drivers/regulator/core.c", i32 5991, i32 8}
!917 = !{ptr @.str.332, !918, !"<string literal>", i1 false, i1 false}
!918 = !{!"../drivers/regulator/core.c", i32 5995, i32 3}
!919 = !{ptr @.str.333, !918, !"<string literal>", i1 false, i1 false}
!920 = !{ptr @regulator_init._entry, !918, !"_entry", i1 false, i1 false}
!921 = !{ptr @regulator_init._entry_ptr, !918, !"_entry_ptr", i1 false, i1 false}
!922 = !{ptr @.str.334, !923, !"<string literal>", i1 false, i1 false}
!923 = !{!"../drivers/regulator/core.c", i32 5998, i32 22}
!924 = !{ptr @.str.335, !925, !"<string literal>", i1 false, i1 false}
!925 = !{!"../drivers/regulator/core.c", i32 6001, i32 22}
!926 = !{ptr @supply_map_fops, !927, !"supply_map_fops", i1 false, i1 false}
!927 = !{!"../drivers/regulator/core.c", i32 5760, i32 1}
!928 = !{ptr @.str.336, !929, !"<string literal>", i1 false, i1 false}
!929 = !{!"../drivers/regulator/core.c", i32 5753, i32 18}
!930 = !{ptr @regulator_summary_fops, !931, !"regulator_summary_fops", i1 false, i1 false}
!931 = !{!"../drivers/regulator/core.c", i32 5984, i32 1}
!932 = !{ptr @.str.337, !933, !"<string literal>", i1 false, i1 false}
!933 = !{!"../drivers/regulator/core.c", i32 5972, i32 14}
!934 = !{ptr @.str.338, !935, !"<string literal>", i1 false, i1 false}
!935 = !{!"../drivers/regulator/core.c", i32 5973, i32 14}
!936 = distinct !{null, !937, !"__already_done", i1 false, i1 false}
!937 = !{!"../drivers/regulator/core.c", i32 5876, i32 4}
!938 = !{ptr @.str.339, !939, !"<string literal>", i1 false, i1 false}
!939 = !{!"../drivers/regulator/core.c", i32 5797, i32 16}
!940 = !{ptr @.str.340, !941, !"<string literal>", i1 false, i1 false}
!941 = !{!"../drivers/regulator/core.c", i32 5803, i32 16}
!942 = !{ptr @.str.341, !943, !"<string literal>", i1 false, i1 false}
!943 = !{!"../drivers/regulator/core.c", i32 5804, i32 16}
!944 = !{ptr @.str.342, !945, !"<string literal>", i1 false, i1 false}
!945 = !{!"../drivers/regulator/core.c", i32 5811, i32 18}
!946 = !{ptr @.str.343, !947, !"<string literal>", i1 false, i1 false}
!947 = !{!"../drivers/regulator/core.c", i32 5815, i32 18}
!948 = !{ptr @.str.344, !949, !"<string literal>", i1 false, i1 false}
!949 = !{!"../drivers/regulator/core.c", i32 5821, i32 14}
!950 = !{ptr @.str.345, !951, !"<string literal>", i1 false, i1 false}
!951 = !{!"../drivers/regulator/core.c", i32 5827, i32 17}
!952 = !{ptr @.str.346, !953, !"<string literal>", i1 false, i1 false}
!953 = !{!"../drivers/regulator/core.c", i32 5831, i32 49}
!954 = !{ptr @.str.347, !955, !"<string literal>", i1 false, i1 false}
!955 = !{!"../drivers/regulator/core.c", i32 5835, i32 18}
!956 = !{ptr @generic_regulator_coupler, !957, !"generic_regulator_coupler", i1 false, i1 false}
!957 = !{!"../drivers/regulator/core.c", i32 5305, i32 33}
!958 = !{ptr @.str.348, !959, !"<string literal>", i1 false, i1 false}
!959 = !{!"../drivers/regulator/core.c", i32 5291, i32 3}
!960 = !{ptr @generic_coupler_attach._entry, !959, !"_entry", i1 false, i1 false}
!961 = !{ptr @generic_coupler_attach._entry_ptr, !959, !"_entry_ptr", i1 false, i1 false}
!962 = !{ptr @.str.350, !963, !"<string literal>", i1 false, i1 false}
!963 = !{!"../drivers/regulator/core.c", i32 5297, i32 3}
!964 = !{ptr @generic_coupler_attach._entry.349, !963, !"_entry", i1 false, i1 false}
!965 = !{ptr @generic_coupler_attach._entry_ptr.351, !963, !"_entry_ptr", i1 false, i1 false}
!966 = !{ptr @.str.352, !967, !"<string literal>", i1 false, i1 false}
!967 = !{!"../drivers/regulator/core.c", i32 6079, i32 8}
!968 = !{ptr @.str.353, !967, !"<string literal>", i1 false, i1 false}
!969 = !{ptr @regulator_init_complete_work, !967, !"regulator_init_complete_work", i1 false, i1 false}
!970 = !{ptr @.str.354, !971, !"<string literal>", i1 false, i1 false}
!971 = !{!"../drivers/regulator/core.c", i32 6039, i32 3}
!972 = !{ptr @.str.355, !971, !"<string literal>", i1 false, i1 false}
!973 = !{ptr @regulator_late_cleanup._entry, !971, !"_entry", i1 false, i1 false}
!974 = !{ptr @regulator_late_cleanup._entry_ptr, !971, !"_entry_ptr", i1 false, i1 false}
!975 = !{ptr @.str.357, !976, !"<string literal>", i1 false, i1 false}
!976 = !{!"../drivers/regulator/core.c", i32 6042, i32 4}
!977 = !{ptr @regulator_late_cleanup._entry.356, !976, !"_entry", i1 false, i1 false}
!978 = !{ptr @regulator_late_cleanup._entry_ptr.358, !976, !"_entry_ptr", i1 false, i1 false}
!979 = !{ptr @.str.360, !980, !"<string literal>", i1 false, i1 false}
!980 = !{!"../drivers/regulator/core.c", i32 6049, i32 3}
!981 = !{ptr @regulator_late_cleanup._entry.359, !980, !"_entry", i1 false, i1 false}
!982 = !{ptr @regulator_late_cleanup._entry_ptr.361, !980, !"_entry_ptr", i1 false, i1 false}
!983 = !{!"sp"}
!984 = !{i32 1, !"wchar_size", i32 2}
!985 = !{i32 1, !"min_enum_size", i32 4}
!986 = !{i32 8, !"branch-target-enforcement", i32 0}
!987 = !{i32 8, !"sign-return-address", i32 0}
!988 = !{i32 8, !"sign-return-address-all", i32 0}
!989 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!990 = !{i32 7, !"uwtable", i32 1}
!991 = !{i32 7, !"frame-pointer", i32 2}
!992 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!993 = !{!"branch_weights", i32 2000, i32 1}
!994 = !{!"branch_weights", i32 1, i32 2000}
!995 = !{!"auto-init"}
!996 = !{i64 2156571293, i64 2156571782, i64 2156571330, i64 2156571386, i64 2156571420, i64 2156571444, i64 2156571485, i64 2156571506, i64 2156571534, i64 2156571568}
!997 = !{i64 2148848163, i64 2148848168, i64 2148848181, i64 2148848225, i64 2148848259, i64 2148848280}
!998 = !{i64 2148367068, i64 2148367100, i64 2148367129, i64 2148367163, i64 2148367194, i64 2148367217}
!999 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!1000 = !{i8 0, i8 2}
!1001 = !{i64 2156582078, i64 2156582567, i64 2156582115, i64 2156582171, i64 2156582205, i64 2156582229, i64 2156582270, i64 2156582291, i64 2156582319, i64 2156582353}
!1002 = !{i64 2155436491}
!1003 = !{i64 2155436708}
!1004 = !{i64 2149641374}
!1005 = !{i64 2149642410}
!1006 = !{i64 2155453534}
!1007 = !{i64 2155453769}
!1008 = !{i64 2155474820}
!1009 = !{i64 2155475039}
!1010 = !{i64 2155491956}
!1011 = !{i64 2155492193}
!1012 = !{i64 2148451759}
!1013 = !{i64 2148451988}
!1014 = !{i64 1271338, i64 1271365, i64 1271387, i64 1271415}
!1015 = !{i64 1271746, i64 1271773, i64 1271806, i64 1271827, i64 1271854, i64 1271880}
!1016 = !{i64 2155349487}
!1017 = !{i64 2155349690}
!1018 = !{i64 2155365772}
!1019 = !{i64 2155365987}
!1020 = !{i64 2155382495}
!1021 = !{i64 2155382716}
!1022 = !{i64 2155399076}
!1023 = !{i64 2155399281}
!1024 = !{i64 2155419628}
!1025 = !{i64 2155419851}
!1026 = !{i64 2155509466}
!1027 = !{i64 2155509699}
!1028 = !{i64 2155530848}
!1029 = !{i64 2155531093}
