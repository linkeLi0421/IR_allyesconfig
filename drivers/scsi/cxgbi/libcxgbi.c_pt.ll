; ModuleID = '/llk/IR_all_yes/drivers/scsi/cxgbi/libcxgbi.c_pt.bc'
source_filename = "../drivers/scsi/cxgbi/libcxgbi.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+cxgbi_device_portmap_create\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_device_portmap_create\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_device_portmap_create\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_device_portmap_create:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_device_portmap_create\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_device_portmap_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_device_portmap_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_device_portmap_cleanup\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_device_portmap_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_device_portmap_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_device_portmap_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_device_portmap_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_device_register\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_device_register\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_device_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_device_register:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_device_register\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_device_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_device_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_device_unregister\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_device_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_device_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_device_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_device_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_device_unregister_all\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_device_unregister_all\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_device_unregister_all\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_device_unregister_all:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_device_unregister_all\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_device_unregister_all:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_device_find_by_lldev\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_device_find_by_lldev\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_device_find_by_lldev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_device_find_by_lldev:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_device_find_by_lldev\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_device_find_by_lldev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_device_find_by_netdev\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_device_find_by_netdev\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_device_find_by_netdev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_device_find_by_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_device_find_by_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_device_find_by_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_device_find_by_netdev_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_device_find_by_netdev_rcu\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_device_find_by_netdev_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_device_find_by_netdev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_device_find_by_netdev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_device_find_by_netdev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_hbas_remove\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_hbas_remove\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_hbas_remove\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_hbas_remove:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_hbas_remove\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_hbas_remove:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_hbas_add\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_hbas_add\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_hbas_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_hbas_add:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_hbas_add\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_hbas_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_free_cpl_skbs\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_free_cpl_skbs\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_free_cpl_skbs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_free_cpl_skbs:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_free_cpl_skbs\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_free_cpl_skbs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_established\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_established\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_established\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_established:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_established\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_established:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_closed\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_closed\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_closed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_closed:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_closed\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_closed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_fail_act_open\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_fail_act_open\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_fail_act_open\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_fail_act_open:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_fail_act_open\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_fail_act_open:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_act_open_req_arp_failure\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_act_open_req_arp_failure\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_act_open_req_arp_failure\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_act_open_req_arp_failure:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_act_open_req_arp_failure\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_act_open_req_arp_failure:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_rcv_abort_rpl\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_rcv_abort_rpl\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_rcv_abort_rpl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_rcv_abort_rpl:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_rcv_abort_rpl\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_rcv_abort_rpl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_rcv_peer_close\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_rcv_peer_close\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_rcv_peer_close\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_rcv_peer_close:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_rcv_peer_close\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_rcv_peer_close:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_rcv_close_conn_rpl\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_rcv_close_conn_rpl\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_rcv_close_conn_rpl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_rcv_close_conn_rpl:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_rcv_close_conn_rpl\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_rcv_close_conn_rpl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_rcv_wr_ack\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_rcv_wr_ack\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_rcv_wr_ack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_rcv_wr_ack:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_rcv_wr_ack\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_rcv_wr_ack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_select_mss\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_select_mss\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_select_mss\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_select_mss:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_select_mss\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_select_mss:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_skb_entail\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_skb_entail\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_skb_entail\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_skb_entail:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_skb_entail\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_skb_entail:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_purge_wr_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_purge_wr_queue\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_purge_wr_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_purge_wr_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_purge_wr_queue\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_purge_wr_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_sock_check_wr_invariants\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_sock_check_wr_invariants\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_sock_check_wr_invariants\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_sock_check_wr_invariants:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_sock_check_wr_invariants\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_sock_check_wr_invariants:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_ddp_set_one_ppod\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_ddp_set_one_ppod\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_ddp_set_one_ppod\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_ddp_set_one_ppod:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_ddp_set_one_ppod\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_ddp_set_one_ppod:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_ddp_ppm_setup\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_ddp_ppm_setup\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_ddp_ppm_setup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_ddp_ppm_setup:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_ddp_ppm_setup\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_ddp_ppm_setup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_parse_pdu_itt\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_parse_pdu_itt\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_parse_pdu_itt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_parse_pdu_itt:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_parse_pdu_itt\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_parse_pdu_itt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_conn_tx_open\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_conn_tx_open\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_conn_tx_open\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_conn_tx_open:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_conn_tx_open\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_conn_tx_open:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_conn_pdu_ready\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_conn_pdu_ready\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_conn_pdu_ready\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_conn_pdu_ready:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_conn_pdu_ready\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_conn_pdu_ready:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_conn_alloc_pdu\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_conn_alloc_pdu\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_conn_alloc_pdu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_conn_alloc_pdu:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_conn_alloc_pdu\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_conn_alloc_pdu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_conn_init_pdu\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_conn_init_pdu\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_conn_init_pdu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_conn_init_pdu:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_conn_init_pdu\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_conn_init_pdu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_conn_xmit_pdu\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_conn_xmit_pdu\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_conn_xmit_pdu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_conn_xmit_pdu:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_conn_xmit_pdu\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_conn_xmit_pdu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_cleanup_task\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_cleanup_task\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_cleanup_task\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_cleanup_task:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_cleanup_task\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_cleanup_task:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_get_conn_stats\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_get_conn_stats\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_get_conn_stats\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_get_conn_stats:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_get_conn_stats\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_get_conn_stats:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_set_conn_param\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_set_conn_param\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_set_conn_param\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_set_conn_param:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_set_conn_param\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_set_conn_param:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_get_ep_param\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_get_ep_param\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_get_ep_param\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_get_ep_param:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_get_ep_param\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_get_ep_param:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_create_conn\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_create_conn\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_create_conn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_create_conn:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_create_conn\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_create_conn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_bind_conn\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_bind_conn\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_bind_conn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_bind_conn:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_bind_conn\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_bind_conn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_create_session\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_create_session\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_create_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_create_session:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_create_session\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_create_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_destroy_session\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_destroy_session\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_destroy_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_destroy_session:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_destroy_session\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_destroy_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_set_host_param\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_set_host_param\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_set_host_param\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_set_host_param:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_set_host_param\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_set_host_param:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_get_host_param\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_get_host_param\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_get_host_param\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_get_host_param:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_get_host_param\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_get_host_param:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_ep_connect\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_ep_connect\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_ep_connect\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_ep_connect:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_ep_connect\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_ep_connect:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_ep_poll\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_ep_poll\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_ep_poll\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_ep_poll:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_ep_poll\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_ep_poll:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_ep_disconnect\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_ep_disconnect\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_ep_disconnect\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_ep_disconnect:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_ep_disconnect\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_ep_disconnect:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_iscsi_init\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_iscsi_init\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_iscsi_init\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_iscsi_init:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_iscsi_init\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_iscsi_init:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_iscsi_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_iscsi_cleanup\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_iscsi_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_iscsi_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_iscsi_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_iscsi_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cxgbi_attr_is_visible\22, \22a\22\09"
module asm "\09.weak\09__crc_cxgbi_attr_is_visible\09\09\09\09"
module asm "\09.long\09__crc_cxgbi_attr_is_visible\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cxgbi_attr_is_visible:\09\09\09\09\09"
module asm "\09.asciz \09\22cxgbi_attr_is_visible\22\09\09\09\09\09"
module asm "__kstrtabns_cxgbi_attr_is_visible:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.module_version_attribute = type { %struct.module_attribute, ptr, ptr }
%struct.module_attribute = type { %struct.attribute, ptr, ptr, ptr, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.179 }
%union.anon.179 = type { ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.180 }
%union.anon.180 = type { i32 }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.37, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.37 = type { %struct.anon.38 }
%struct.anon.38 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.136, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.136 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.sk_buff_head = type { %union.anon.79, i32, %struct.spinlock }
%union.anon.79 = type { %struct.anon.80 }
%struct.anon.80 = type { ptr, ptr }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.cxgbi_device = type { %struct.list_head, %struct.list_head, i32, ptr, ptr, ptr, ptr, i8, i8, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, %struct.cxgbi_ports_map, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cxgbi_ports_map = type { i32, i32, i16, %struct.spinlock, i32, ptr }
%struct.cxgbi_sock = type { ptr, i32, i32, i32, i32, i16, i16, i16, i32, i32, i32, i32, i8, i32, i32, i32, i8, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.kref, i32, i32, %union.anon.209, %union.anon.210, ptr, %struct.sk_buff_head, %struct.sk_buff_head, %struct.timer_list, %struct.completion, i32, %struct.rwlock_t, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%union.anon.209 = type { %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.72 }
%union.anon.72 = type { [4 x i32] }
%union.anon.210 = type { %struct.sockaddr_in6 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.cxgbi_hba = type { ptr, ptr, ptr, ptr, i32, i8 }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.186, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.204, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.186 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.possible_net_t = type { ptr }
%union.anon.204 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.scsi_host_template = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i16, i8, i32, i8, i32, ptr, ptr, i64, ptr, i32 }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, ptr, %struct.mutex, %struct.list_head, %struct.list_head, ptr, ptr, %struct.wait_queue_head, ptr, ptr, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i32, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, [20 x i8], ptr, ptr, i32, i32, i8, i32, i32, i8, i8, i32, i32, %struct.device, %struct.device, ptr, ptr, [0 x i32] }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { ptr, i32, i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.205, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.205 = type { ptr }
%struct.sk_buff = type { %union.anon.50, %union.anon.53, %union.anon.54, [48 x i8], %union.anon.55, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.57, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { ptr, ptr, %union.anon.52 }
%union.anon.52 = type { ptr }
%union.anon.53 = type { ptr }
%union.anon.54 = type { i64 }
%union.anon.55 = type { %struct.anon.56 }
%struct.anon.56 = type { i32, ptr }
%union.anon.57 = type { %struct.anon.58 }
%struct.anon.58 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.59, i32, i32, i32, i16, i16, %union.anon.61, i32, %union.anon.62, %union.anon.63, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.59 = type { i32 }
%union.anon.61 = type { i32 }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i16 }
%struct.iscsi_conn = type { ptr, ptr, ptr, i32, %struct.timer_list, i32, i32, i32, i32, ptr, i32, i32, i32, i32, ptr, ptr, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, ptr, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.dst_entry = type { ptr, ptr, i32, i32, ptr, ptr, ptr, i16, i16, i16, i16, i32, i32, ptr, %struct.callback_head, i16, i16, i32, %struct.atomic_t, ptr }
%struct.callback_head = type { ptr, ptr }
%struct.cxgbi_task_tag_info = type { i8, i8, i16, i32, i32, i32, %struct.cxgbi_pagepod_hdr, i32, i32, ptr }
%struct.cxgbi_pagepod_hdr = type { i32, i32, i32, i32, i64 }
%struct.scatterlist = type { i32, i32, i32, i32, i32 }
%struct.cxgbi_pagepod = type { %struct.cxgbi_pagepod_hdr, [5 x i64] }
%struct.cxgbi_ppm = type { %struct.kref, ptr, ptr, ptr, ptr, %struct.cxgbi_tag_format, i32, i32, i32, i32, i32, ptr, %struct.spinlock, i32, i32, i32, ptr, [0 x %struct.cxgbi_ppod_data] }
%struct.cxgbi_tag_format = type { [4 x i8], i8, i8, i8, i8, i32, i32, i32, i32, i32 }
%struct.cxgbi_ppod_data = type { i8, i8, i16, i32 }
%struct.iscsi_tcp_conn = type { ptr, ptr, i32, %struct.iscsi_tcp_recv, ptr }
%struct.iscsi_tcp_recv = type { ptr, %struct.iscsi_segment, [64 x i32], i32 }
%struct.iscsi_segment = type { ptr, i32, i32, i32, i32, ptr, [4 x i8], [4 x i8], [4 x i8], i32, ptr, ptr, i32, i8, ptr }
%struct.cxgbi_conn = type { ptr, ptr, ptr, i32, i32, i32 }
%struct.iscsi_data = type { i8, i8, [2 x i8], i8, [3 x i8], %struct.scsi_lun, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.scsi_lun = type { [8 x i8] }
%struct.iscsi_task = type { ptr, i16, i16, i32, i32, %struct.scsi_lun, i32, i32, %struct.iscsi_r2t_info, ptr, i32, ptr, ptr, i32, i32, i8, i8, i32, %struct.refcount_struct, %struct.list_head, ptr }
%struct.iscsi_r2t_info = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.iscsi_hdr = type { i8, i8, [2 x i8], i8, [3 x i8], %struct.scsi_lun, i32, i32, i32, i32, i32, [12 x i8] }
%struct.cxgbi_endpoint = type { ptr, ptr, ptr }
%struct.iscsi_tcp_task = type { i32, i32, ptr, %struct.iscsi_pool, %struct.kfifo, ptr, %struct.spinlock, %struct.spinlock }
%struct.iscsi_pool = type { %struct.kfifo, ptr, i32 }
%struct.kfifo = type { %union.anon.206, [0 x i8] }
%union.anon.206 = type { %struct.__kfifo }
%struct.__kfifo = type { i32, i32, i32, i32, ptr }
%struct.scsi_cmnd = type { %struct.scsi_request, ptr, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i32, i32, i32, i32, i8, i8, i8, i8, i16, i32, ptr, %struct.scsi_data_buffer, ptr, i32, i32, ptr, %struct.scsi_pointer, ptr, i32, i32, i32, i32 }
%struct.scsi_request = type { [16 x i8], ptr, i16, i32, i32, i32, i32, ptr }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { ptr, i32, i32 }
%struct.scsi_pointer = type { ptr, i32, ptr, i32, i32, i32, i32, i32, i32, i32 }
%struct.page = type { i32, %union.anon.2, %union.anon.178, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.178 = type { %struct.atomic_t }
%struct.iscsi_session = type { ptr, %struct.mutex, %struct.wait_queue_head, %struct.iscsi_tm, %struct.timer_list, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i16, i8, i8, i8, i8, i8, i8, [6 x i8], ptr, ptr, ptr, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, ptr, %struct.iscsi_pool, ptr }
%struct.iscsi_tm = type { i8, i8, [2 x i8], i8, [3 x i8], %struct.scsi_lun, i32, i32, i32, i32, i32, i32, [8 x i8] }
%struct.page_frag = type { ptr, i16, i16 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.163, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%union.anon.20 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.22 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.163 = type { %struct.callback_head }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.cxgbi_iso_info = type { i8, i8, i8, i8, i32, i32, i32, i32, i32, i32 }
%struct.iscsi_cls_conn = type { %struct.list_head, ptr, ptr, i32, %struct.mutex, ptr, i32, %struct.work_struct, %struct.device, i32 }
%struct.iscsi_stats = type { i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x %struct.iscsi_stats_custom] }
%struct.iscsi_stats_custom = type { [64 x i8], i64 }
%struct.iscsi_cls_session = type { %struct.list_head, ptr, %struct.spinlock, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, i32, i8, %struct.delayed_work, i32, i8, i32, i32, i32, ptr, %struct.device }
%struct.flowi6 = type { %struct.flowi_common, %struct.in6_addr, %struct.in6_addr, i32, %union.flowi_uli, i32 }
%struct.flowi_common = type { i32, i32, i32, i8, i8, i8, i8, i32, %struct.kuid_t, %struct.flowi_tunnel, i32 }
%struct.flowi_tunnel = type { i64 }
%union.flowi_uli = type { i32 }
%struct.flowi4 = type { %struct.flowi_common, i32, i32, %union.flowi_uli }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.anon.123 = type { i16, i16 }
%struct.neighbour = type { ptr, ptr, ptr, i32, i32, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i32, %struct.atomic_t, i8, i8, i8, i8, i32, %struct.seqlock_t, [32 x i8], %struct.hh_cache, ptr, ptr, %struct.list_head, %struct.list_head, %struct.callback_head, ptr, ptr, [0 x i8], [4 x i8] }
%struct.hh_cache = type { i32, %struct.seqlock_t, [32 x i32] }
%struct.rtable = type { %struct.dst_entry, i32, i32, i16, i8, i8, i32, i8, %union.anon.132, i32, %struct.list_head, ptr }
%union.anon.132 = type { %struct.in6_addr }
%struct.rt6_info = type { %struct.dst_entry, ptr, i32, %struct.rt6key, %struct.rt6key, %struct.in6_addr, ptr, i32, %struct.list_head, ptr, i16 }
%struct.rt6key = type { %struct.in6_addr, i32 }
%struct.fib6_info = type { ptr, ptr, ptr, %union.anon.128, i32, %struct.refcount_struct, i32, ptr, %struct.rt6key, i32, %struct.rt6key, %struct.rt6key, i32, i8, i8, i8, i8, i8, i8, %struct.callback_head, ptr, [0 x %struct.fib6_nh] }
%union.anon.128 = type { %struct.list_head }
%struct.fib6_nh = type { %struct.fib_nh_common, i32, ptr, ptr }
%struct.fib_nh_common = type { ptr, ptr, i32, i8, i8, i8, i8, ptr, %union.anon.131, i32, %struct.atomic_t, ptr, ptr, ptr }
%union.anon.131 = type { %struct.in6_addr }
%struct.iscsi_transport = type { ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }

@__UNIQUE_ID_author691 = internal constant [45 x i8] c"libcxgbi.author=Chelsio Communications, Inc.\00", section ".modinfo", align 1
@__UNIQUE_ID_description692 = internal constant [50 x i8] c"libcxgbi.description=Chelsio iSCSI driver library\00", section ".modinfo", align 1
@__UNIQUE_ID_version693 = internal constant [26 x i8] c"libcxgbi.version=0.9.1-ko\00", section ".modinfo", align 1
@.str = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"version\00", [24 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"libcxgbi\00", [23 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"0.9.1-ko\00", [23 x i8] zeroinitializer }, align 32
@__modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { ptr @.str, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @__modver_version_show, ptr null, ptr null, ptr null, ptr null }, ptr @.str.1, ptr @.str.2 }, section "__modver", align 4
@__UNIQUE_ID_file694 = internal constant [42 x i8] c"libcxgbi.file=drivers/scsi/cxgbi/libcxgbi\00", section ".modinfo", align 1
@__UNIQUE_ID_license695 = internal constant [21 x i8] c"libcxgbi.license=GPL\00", section ".modinfo", align 1
@__param_str_dbg_level = internal constant [19 x i8] c"libcxgbi.dbg_level\00", align 1
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 4
@dbg_level = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_dbg_level = internal constant %struct.kernel_param { ptr @__param_str_dbg_level, ptr null, ptr @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.179 { ptr @dbg_level } }, section "__param", align 4
@__UNIQUE_ID_dbg_leveltype696 = internal constant [33 x i8] c"libcxgbi.parmtype=dbg_level:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_dbg_level697 = internal constant [57 x i8] c"libcxgbi.parm=dbg_level:libiscsi debug level (default=0)\00", section ".modinfo", align 1
@cxgbi_device_portmap_create._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.3, ptr @.str.4, ptr @.str.5, i32 84, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\014libcxgbi:%s: cdev 0x%p, portmap OOM %u.\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"cxgbi_device_portmap_create\00", [36 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"drivers/scsi/cxgbi/libcxgbi.c\00", [34 x i8] zeroinitializer }, align 32
@cxgbi_device_portmap_create._entry_ptr = internal global ptr @cxgbi_device_portmap_create._entry, section ".printk_index", align 4
@cxgbi_device_portmap_create.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.6 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&pmap->lock\00", [20 x i8] zeroinitializer }, align 32
@__kstrtab_cxgbi_device_portmap_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_device_portmap_create = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_device_portmap_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_device_portmap_create to i32), ptr @__kstrtab_cxgbi_device_portmap_create, ptr @__kstrtabns_cxgbi_device_portmap_create }, section "___ksymtab_gpl+cxgbi_device_portmap_create", align 4
@cxgbi_device_portmap_cleanup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.8, ptr @.str.5, i32 107, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016libcxgbi:%s: csk 0x%p, cdev 0x%p, offload down.\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"cxgbi_device_portmap_cleanup\00", [35 x i8] zeroinitializer }, align 32
@cxgbi_device_portmap_cleanup._entry_ptr = internal global ptr @cxgbi_device_portmap_cleanup._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_device_portmap_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_device_portmap_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_device_portmap_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_device_portmap_cleanup to i32), ptr @__kstrtab_cxgbi_device_portmap_cleanup, ptr @__kstrtabns_cxgbi_device_portmap_cleanup }, section "___ksymtab_gpl+cxgbi_device_portmap_cleanup", align 4
@cxgbi_device_register._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.10, ptr @.str.5, i32 141, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\014libcxgbi:%s: nport %d, OOM.\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"cxgbi_device_register\00", [42 x i8] zeroinitializer }, align 32
@cxgbi_device_register._entry_ptr = internal global ptr @cxgbi_device_register._entry, section ".printk_index", align 4
@cxgbi_device_register.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.11 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&cdev->pmap.lock\00", [47 x i8] zeroinitializer }, align 32
@cdev_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.238, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @cdev_mutex, i64 52), ptr getelementptr (i8, ptr @cdev_mutex, i64 52) }, ptr @cdev_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.239, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@cdev_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @cdev_list, ptr @cdev_list }, [24 x i8] zeroinitializer }, align 32
@cdev_rcu_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.240, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@cdev_rcu_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @cdev_rcu_list, ptr @cdev_rcu_list }, [24 x i8] zeroinitializer }, align 32
@cxgbi_device_register._entry.12 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.10, ptr @.str.5, i32 161, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016libcxgbi:%s: cdev 0x%p, p# %u.\0A\00", [62 x i8] zeroinitializer }, align 32
@cxgbi_device_register._entry_ptr.14 = internal global ptr @cxgbi_device_register._entry.12, section ".printk_index", align 4
@__kstrtab_cxgbi_device_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_device_register = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_device_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_device_register to i32), ptr @__kstrtab_cxgbi_device_register, ptr @__kstrtabns_cxgbi_device_register }, section "___ksymtab_gpl+cxgbi_device_register", align 4
@cxgbi_device_unregister._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.16, ptr @.str.5, i32 170, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016libcxgbi:%s: cdev 0x%p, p# %u,%s.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"cxgbi_device_unregister\00", [40 x i8] zeroinitializer }, align 32
@cxgbi_device_unregister._entry_ptr = internal global ptr @cxgbi_device_unregister._entry, section ".printk_index", align 4
@.str.17 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@__kstrtab_cxgbi_device_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_device_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_device_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_device_unregister to i32), ptr @__kstrtab_cxgbi_device_unregister, ptr @__kstrtabns_cxgbi_device_unregister }, section "___ksymtab_gpl+cxgbi_device_unregister", align 4
@__kstrtab_cxgbi_device_unregister_all = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_device_unregister_all = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_device_unregister_all = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_device_unregister_all to i32), ptr @__kstrtab_cxgbi_device_unregister_all, ptr @__kstrtabns_cxgbi_device_unregister_all }, section "___ksymtab_gpl+cxgbi_device_unregister_all", align 4
@cxgbi_device_find_by_lldev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.19, ptr @.str.5, i32 215, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\016libcxgbi:%s: lldev 0x%p, NO match found.\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"cxgbi_device_find_by_lldev\00", [37 x i8] zeroinitializer }, align 32
@cxgbi_device_find_by_lldev._entry_ptr = internal global ptr @cxgbi_device_find_by_lldev._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_device_find_by_lldev = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_device_find_by_lldev = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_device_find_by_lldev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_device_find_by_lldev to i32), ptr @__kstrtab_cxgbi_device_find_by_lldev, ptr @__kstrtabns_cxgbi_device_find_by_lldev }, section "___ksymtab_gpl+cxgbi_device_find_by_lldev", align 4
@cxgbi_device_find_by_netdev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.21, ptr @.str.5, i32 231, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\016libcxgbi:%s: vlan dev %s -> %s.\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"cxgbi_device_find_by_netdev\00", [36 x i8] zeroinitializer }, align 32
@cxgbi_device_find_by_netdev._entry_ptr = internal global ptr @cxgbi_device_find_by_netdev._entry, section ".printk_index", align 4
@cxgbi_device_find_by_netdev._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.21, ptr @.str.5, i32 248, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016libcxgbi:%s: ndev 0x%p, %s, NO match found.\0A\00", [49 x i8] zeroinitializer }, align 32
@cxgbi_device_find_by_netdev._entry_ptr.24 = internal global ptr @cxgbi_device_find_by_netdev._entry.22, section ".printk_index", align 4
@__kstrtab_cxgbi_device_find_by_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_device_find_by_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_device_find_by_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_device_find_by_netdev to i32), ptr @__kstrtab_cxgbi_device_find_by_netdev, ptr @__kstrtabns_cxgbi_device_find_by_netdev }, section "___ksymtab_gpl+cxgbi_device_find_by_netdev", align 4
@cxgbi_device_find_by_netdev_rcu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.25, ptr @.str.5, i32 263, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"cxgbi_device_find_by_netdev_rcu\00", [32 x i8] zeroinitializer }, align 32
@cxgbi_device_find_by_netdev_rcu._entry_ptr = internal global ptr @cxgbi_device_find_by_netdev_rcu._entry, section ".printk_index", align 4
@cxgbi_device_find_by_netdev_rcu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.26 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@cxgbi_device_find_by_netdev_rcu._entry.27 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.25, ptr @.str.5, i32 281, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@cxgbi_device_find_by_netdev_rcu._entry_ptr.28 = internal global ptr @cxgbi_device_find_by_netdev_rcu._entry.27, section ".printk_index", align 4
@__kstrtab_cxgbi_device_find_by_netdev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_device_find_by_netdev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_device_find_by_netdev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_device_find_by_netdev_rcu to i32), ptr @__kstrtab_cxgbi_device_find_by_netdev_rcu, ptr @__kstrtabns_cxgbi_device_find_by_netdev_rcu }, section "___ksymtab_gpl+cxgbi_device_find_by_netdev_rcu", align 4
@cxgbi_hbas_remove._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.30, ptr @.str.5, i32 325, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016libcxgbi:%s: cdev 0x%p, p#%u.\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"cxgbi_hbas_remove\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_hbas_remove._entry_ptr = internal global ptr @cxgbi_hbas_remove._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_hbas_remove = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_hbas_remove = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_hbas_remove = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_hbas_remove to i32), ptr @__kstrtab_cxgbi_hbas_remove, ptr @__kstrtabns_cxgbi_hbas_remove }, section "___ksymtab_gpl+cxgbi_hbas_remove", align 4
@cxgbi_hbas_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.31, ptr @.str.5, i32 347, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"cxgbi_hbas_add\00", [17 x i8] zeroinitializer }, align 32
@cxgbi_hbas_add._entry_ptr = internal global ptr @cxgbi_hbas_add._entry, section ".printk_index", align 4
@cxgbi_hbas_add._entry.32 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.31, ptr @.str.5, i32 353, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\016libcxgbi:%s: 0x%p, p%d, %s, host alloc failed.\0A\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_hbas_add._entry_ptr.34 = internal global ptr @cxgbi_hbas_add._entry.32, section ".printk_index", align 4
@cxgbi_hbas_add._entry.35 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.31, ptr @.str.5, i32 373, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016libcxgbi:%s: cdev 0x%p, p#%d %s: chba 0x%p.\0A\00", [49 x i8] zeroinitializer }, align 32
@cxgbi_hbas_add._entry_ptr.37 = internal global ptr @cxgbi_hbas_add._entry.35, section ".printk_index", align 4
@cxgbi_hbas_add._entry.38 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.31, ptr @.str.5, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016libcxgbi:%s: cdev 0x%p, p#%d %s, host add failed.\0A\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_hbas_add._entry_ptr.40 = internal global ptr @cxgbi_hbas_add._entry.38, section ".printk_index", align 4
@__kstrtab_cxgbi_hbas_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_hbas_add = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_hbas_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_hbas_add to i32), ptr @__kstrtab_cxgbi_hbas_add, ptr @__kstrtabns_cxgbi_hbas_add }, section "___ksymtab_gpl+cxgbi_hbas_add", align 4
@__kstrtab_cxgbi_sock_free_cpl_skbs = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_free_cpl_skbs = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_free_cpl_skbs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_free_cpl_skbs to i32), ptr @__kstrtab_cxgbi_sock_free_cpl_skbs, ptr @__kstrtabns_cxgbi_sock_free_cpl_skbs }, section "___ksymtab_gpl+cxgbi_sock_free_cpl_skbs", align 4
@__kstrtab_cxgbi_sock_established = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_established = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_established = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_established to i32), ptr @__kstrtab_cxgbi_sock_established, ptr @__kstrtabns_cxgbi_sock_established }, section "___ksymtab_gpl+cxgbi_sock_established", align 4
@cxgbi_sock_closed._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.42, ptr @.str.5, i32 858, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,0x%lx,%u.\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"cxgbi_sock_closed\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_sock_closed._entry_ptr = internal global ptr @cxgbi_sock_closed._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_sock_closed = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_closed = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_closed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_closed to i32), ptr @__kstrtab_cxgbi_sock_closed, ptr @__kstrtabns_cxgbi_sock_closed }, section "___ksymtab_gpl+cxgbi_sock_closed", align 4
@cxgbi_sock_fail_act_open._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.44, ptr @.str.5, i32 913, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,%lx, %pI4:%u-%pI4:%u, err %d.\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"cxgbi_sock_fail_act_open\00", [39 x i8] zeroinitializer }, align 32
@cxgbi_sock_fail_act_open._entry_ptr = internal global ptr @cxgbi_sock_fail_act_open._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_sock_fail_act_open = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_fail_act_open = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_fail_act_open = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_fail_act_open to i32), ptr @__kstrtab_cxgbi_sock_fail_act_open, ptr @__kstrtabns_cxgbi_sock_fail_act_open }, section "___ksymtab_gpl+cxgbi_sock_fail_act_open", align 4
@cxgbi_sock_act_open_req_arp_failure._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.45, ptr @.str.5, i32 927, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"cxgbi_sock_act_open_req_arp_failure\00", [60 x i8] zeroinitializer }, align 32
@cxgbi_sock_act_open_req_arp_failure._entry_ptr = internal global ptr @cxgbi_sock_act_open_req_arp_failure._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_sock_act_open_req_arp_failure = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_act_open_req_arp_failure = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_act_open_req_arp_failure = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_act_open_req_arp_failure to i32), ptr @__kstrtab_cxgbi_sock_act_open_req_arp_failure, ptr @__kstrtabns_cxgbi_sock_act_open_req_arp_failure }, section "___ksymtab_gpl+cxgbi_sock_act_open_req_arp_failure", align 4
@__func__.cxgbi_sock_rcv_abort_rpl = private unnamed_addr constant [25 x i8] c"cxgbi_sock_rcv_abort_rpl\00", align 1
@cxgbi_sock_rcv_abort_rpl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.46, ptr @__func__.cxgbi_sock_rcv_abort_rpl, ptr @.str.5, i32 950, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013libcxgbi:%s: csk 0x%p,%u,0x%lx,%u,ABT_RPL_RSS.\0A\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_abort_rpl._entry_ptr = internal global ptr @cxgbi_sock_rcv_abort_rpl._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_sock_rcv_abort_rpl = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_rcv_abort_rpl = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_rcv_abort_rpl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_rcv_abort_rpl to i32), ptr @__kstrtab_cxgbi_sock_rcv_abort_rpl, ptr @__kstrtabns_cxgbi_sock_rcv_abort_rpl }, section "___ksymtab_gpl+cxgbi_sock_rcv_abort_rpl", align 4
@cxgbi_sock_rcv_peer_close._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.47, ptr @.str.5, i32 962, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"cxgbi_sock_rcv_peer_close\00", [38 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_peer_close._entry_ptr = internal global ptr @cxgbi_sock_rcv_peer_close._entry, section ".printk_index", align 4
@cxgbi_sock_rcv_peer_close._entry.48 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.47, ptr @.str.5, i32 983, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, bad state.\0A\00", [47 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_peer_close._entry_ptr.50 = internal global ptr @cxgbi_sock_rcv_peer_close._entry.48, section ".printk_index", align 4
@__kstrtab_cxgbi_sock_rcv_peer_close = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_rcv_peer_close = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_rcv_peer_close = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_rcv_peer_close to i32), ptr @__kstrtab_cxgbi_sock_rcv_peer_close, ptr @__kstrtabns_cxgbi_sock_rcv_peer_close }, section "___ksymtab_gpl+cxgbi_sock_rcv_peer_close", align 4
@cxgbi_sock_rcv_close_conn_rpl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.51, ptr @.str.5, i32 995, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"cxgbi_sock_rcv_close_conn_rpl\00", [34 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_close_conn_rpl._entry_ptr = internal global ptr @cxgbi_sock_rcv_close_conn_rpl._entry, section ".printk_index", align 4
@cxgbi_sock_rcv_close_conn_rpl._entry.52 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.51, ptr @.str.5, i32 1015, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_close_conn_rpl._entry_ptr.53 = internal global ptr @cxgbi_sock_rcv_close_conn_rpl._entry.52, section ".printk_index", align 4
@__kstrtab_cxgbi_sock_rcv_close_conn_rpl = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_rcv_close_conn_rpl = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_rcv_close_conn_rpl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_rcv_close_conn_rpl to i32), ptr @__kstrtab_cxgbi_sock_rcv_close_conn_rpl, ptr @__kstrtabns_cxgbi_sock_rcv_close_conn_rpl }, section "___ksymtab_gpl+cxgbi_sock_rcv_close_conn_rpl", align 4
@cxgbi_sock_rcv_wr_ack._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.54, ptr @.str.55, ptr @.str.5, i32 1029, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, cr %u,%u+%u, snd_una %u,%d.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"cxgbi_sock_rcv_wr_ack\00", [42 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_wr_ack._entry_ptr = internal global ptr @cxgbi_sock_rcv_wr_ack._entry, section ".printk_index", align 4
@cxgbi_sock_rcv_wr_ack._entry.56 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.55, ptr @.str.5, i32 1043, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, cr %u,%u+%u, empty.\0A\00", [38 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_wr_ack._entry_ptr.58 = internal global ptr @cxgbi_sock_rcv_wr_ack._entry.56, section ".printk_index", align 4
@cxgbi_sock_rcv_wr_ack._entry.59 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.60, ptr @.str.55, ptr @.str.5, i32 1051, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, cr %u,%u+%u, < %u.\0A\00", [39 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_wr_ack._entry_ptr.61 = internal global ptr @cxgbi_sock_rcv_wr_ack._entry.59, section ".printk_index", align 4
@cxgbi_sock_rcv_wr_ack._entry.62 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.55, ptr @.str.5, i32 1067, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, snd_una %u/%u.\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_sock_rcv_wr_ack._entry_ptr.64 = internal global ptr @cxgbi_sock_rcv_wr_ack._entry.62, section ".printk_index", align 4
@__kstrtab_cxgbi_sock_rcv_wr_ack = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_rcv_wr_ack = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_rcv_wr_ack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_rcv_wr_ack to i32), ptr @__kstrtab_cxgbi_sock_rcv_wr_ack, ptr @__kstrtabns_cxgbi_sock_rcv_wr_ack }, section "___ksymtab_gpl+cxgbi_sock_rcv_wr_ack", align 4
@__kstrtab_cxgbi_sock_select_mss = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_select_mss = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_select_mss = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_select_mss to i32), ptr @__kstrtab_cxgbi_sock_select_mss, ptr @__kstrtabns_cxgbi_sock_select_mss }, section "___ksymtab_gpl+cxgbi_sock_select_mss", align 4
@__kstrtab_cxgbi_sock_skb_entail = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_skb_entail = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_skb_entail = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_skb_entail to i32), ptr @__kstrtab_cxgbi_sock_skb_entail, ptr @__kstrtabns_cxgbi_sock_skb_entail }, section "___ksymtab_gpl+cxgbi_sock_skb_entail", align 4
@__kstrtab_cxgbi_sock_purge_wr_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_purge_wr_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_purge_wr_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_purge_wr_queue to i32), ptr @__kstrtab_cxgbi_sock_purge_wr_queue, ptr @__kstrtabns_cxgbi_sock_purge_wr_queue }, section "___ksymtab_gpl+cxgbi_sock_purge_wr_queue", align 4
@cxgbi_sock_check_wr_invariants._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.66, ptr @.str.5, i32 1137, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013libcxgbi:%s: csk 0x%p, tid %u, credit %u + %u != %u.\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"cxgbi_sock_check_wr_invariants\00", [33 x i8] zeroinitializer }, align 32
@cxgbi_sock_check_wr_invariants._entry_ptr = internal global ptr @cxgbi_sock_check_wr_invariants._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_sock_check_wr_invariants = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_sock_check_wr_invariants = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_sock_check_wr_invariants = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_sock_check_wr_invariants to i32), ptr @__kstrtab_cxgbi_sock_check_wr_invariants, ptr @__kstrtabns_cxgbi_sock_check_wr_invariants }, section "___ksymtab_gpl+cxgbi_sock_check_wr_invariants", align 4
@__kstrtab_cxgbi_ddp_set_one_ppod = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_ddp_set_one_ppod = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_ddp_set_one_ppod = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_ddp_set_one_ppod to i32), ptr @__kstrtab_cxgbi_ddp_set_one_ppod, ptr @__kstrtabns_cxgbi_ddp_set_one_ppod }, section "___ksymtab_gpl+cxgbi_ddp_set_one_ppod", align 4
@__kstrtab_cxgbi_ddp_ppm_setup = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_ddp_ppm_setup = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_ddp_ppm_setup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_ddp_ppm_setup to i32), ptr @__kstrtab_cxgbi_ddp_ppm_setup, ptr @__kstrtabns_cxgbi_ddp_ppm_setup }, section "___ksymtab_gpl+cxgbi_ddp_ppm_setup", align 4
@cxgbi_parse_pdu_itt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.68, ptr @.str.5, i32 1447, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\016libcxgbi:%s: cdev 0x%p, tag 0x%x/0x%x, -> 0x%x(0x%x,0x%x).\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cxgbi_parse_pdu_itt\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_parse_pdu_itt._entry_ptr = internal global ptr @cxgbi_parse_pdu_itt._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_parse_pdu_itt = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_parse_pdu_itt = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_parse_pdu_itt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_parse_pdu_itt to i32), ptr @__kstrtab_cxgbi_parse_pdu_itt, ptr @__kstrtabns_cxgbi_parse_pdu_itt }, section "___ksymtab_gpl+cxgbi_parse_pdu_itt", align 4
@cxgbi_conn_tx_open._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.70, ptr @.str.5, i32 1457, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016libcxgbi:%s: csk 0x%p, cid %d.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"cxgbi_conn_tx_open\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_conn_tx_open._entry_ptr = internal global ptr @cxgbi_conn_tx_open._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_conn_tx_open = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_conn_tx_open = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_conn_tx_open = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_conn_tx_open to i32), ptr @__kstrtab_cxgbi_conn_tx_open, ptr @__kstrtabns_cxgbi_conn_tx_open }, section "___ksymtab_gpl+cxgbi_conn_tx_open", align 4
@cxgbi_conn_pdu_ready._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.71, ptr @.str.72, ptr @.str.5, i32 1635, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016libcxgbi:%s: csk 0x%p, conn 0x%p.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_conn_pdu_ready\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr = internal global ptr @cxgbi_conn_pdu_ready._entry, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.73 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.74, ptr @.str.72, ptr @.str.5, i32 1641, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016libcxgbi:%s: csk 0x%p, conn 0x%p, id %d, suspend_rx %lu!\0A\00", [36 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.75 = internal global ptr @cxgbi_conn_pdu_ready._entry.73, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.76 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.77, ptr @.str.72, ptr @.str.5, i32 1652, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016libcxgbi:%s: skb 0x%p, NOT ready 0x%lx.\0A\00", [53 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.78 = internal global ptr @cxgbi_conn_pdu_ready._entry.76, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.79 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.80, ptr @.str.72, ptr @.str.5, i32 1661, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\016libcxgbi:%s: csk 0x%p, skb 0x%p,%u,f 0x%lx, pdu len %u.\0A\00", [37 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.81 = internal global ptr @cxgbi_conn_pdu_ready._entry.79, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.82 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @.str.72, ptr @.str.5, i32 1670, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013libcxgbi:%s: coalesced bhs, csk 0x%p, skb 0x%p,%u, f 0x%lx, plen %u.\0A\00", [56 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.84 = internal global ptr @cxgbi_conn_pdu_ready._entry.82, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.85 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.72, ptr @.str.5, i32 1680, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013libcxgbi:%s: coalesced data, csk 0x%p, skb 0x%p,%u, f 0x%lx, plen %u.\0A\00", [55 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.87 = internal global ptr @cxgbi_conn_pdu_ready._entry.85, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.88 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.72, ptr @.str.5, i32 1688, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013libcxgbi:%s: bhs, csk 0x%p, skb 0x%p,%u, f 0x%lx, plen %u.\0A\00", [34 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.90 = internal global ptr @cxgbi_conn_pdu_ready._entry.88, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.91 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.92, ptr @.str.72, ptr @.str.5, i32 1701, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013libcxgbi:%s: csk 0x%p, skb 0x%p,%u, f 0x%lx, plen %u, NO data.\0A\00", [62 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.93 = internal global ptr @cxgbi_conn_pdu_ready._entry.91, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.94 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.72, ptr @.str.5, i32 1715, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\013libcxgbi:%s: data, csk 0x%p, skb 0x%p,%u, f 0x%lx, plen %u, dskb 0x%p,%u.\0A\00", [51 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.96 = internal global ptr @cxgbi_conn_pdu_ready._entry.94, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.97 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.72, ptr @.str.5, i32 1727, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\016libcxgbi:%s: csk 0x%p, read %u.\0A\00", [61 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.99 = internal global ptr @cxgbi_conn_pdu_ready._entry.97, section ".printk_index", align 4
@cxgbi_conn_pdu_ready._entry.100 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.101, ptr @.str.72, ptr @.str.5, i32 1736, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\016libcxgbi:%s: csk 0x%p, 0x%p, rx failed %d, read %u.\0A\00", [41 x i8] zeroinitializer }, align 32
@cxgbi_conn_pdu_ready._entry_ptr.102 = internal global ptr @cxgbi_conn_pdu_ready._entry.100, section ".printk_index", align 4
@__kstrtab_cxgbi_conn_pdu_ready = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_conn_pdu_ready = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_conn_pdu_ready = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready to i32), ptr @__kstrtab_cxgbi_conn_pdu_ready, ptr @__kstrtabns_cxgbi_conn_pdu_ready }, section "___ksymtab_gpl+cxgbi_conn_pdu_ready", align 4
@cxgbi_conn_alloc_pdu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.103, ptr @.str.104, ptr @.str.5, i32 1904, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013libcxgbi:%s: task 0x%p, tcp_task 0x%p, tdata 0x%p.\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_conn_alloc_pdu\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_conn_alloc_pdu._entry_ptr = internal global ptr @cxgbi_conn_alloc_pdu._entry, section ".printk_index", align 4
@cxgbi_conn_alloc_pdu._entry.105 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.106, ptr @.str.104, ptr @.str.5, i32 1908, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013libcxgbi:%s: task 0x%p, csk gone.\0A\00", [59 x i8] zeroinitializer }, align 32
@cxgbi_conn_alloc_pdu._entry_ptr.107 = internal global ptr @cxgbi_conn_alloc_pdu._entry.105, section ".printk_index", align 4
@cxgbi_conn_alloc_pdu._entry.108 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.109, ptr @.str.104, ptr @.str.5, i32 1946, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [107 x i8], [53 x i8] } { [107 x i8] c"\016libcxgbi:%s: tdata->dlen %u, remaining to send %u conn->max_xmit_dlength %u, tdata->max_xmit_dlength %u\0A\00", [53 x i8] zeroinitializer }, align 32
@cxgbi_conn_alloc_pdu._entry_ptr.110 = internal global ptr @cxgbi_conn_alloc_pdu._entry.108, section ".printk_index", align 4
@cxgbi_conn_alloc_pdu._entry.111 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.112, ptr @.str.104, ptr @.str.5, i32 1979, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\016libcxgbi:%s: max_pdu_size %u, max_num_pdu %u, max_txdata %u, num_pdu %u\0A\00", [53 x i8] zeroinitializer }, align 32
@cxgbi_conn_alloc_pdu._entry_ptr.113 = internal global ptr @cxgbi_conn_alloc_pdu._entry.111, section ".printk_index", align 4
@cxgbi_conn_alloc_pdu._entry.114 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.115, ptr @.str.104, ptr @.str.5, i32 1990, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [86 x i8], [42 x i8] } { [86 x i8] c"\016libcxgbi:%s: task 0x%p, tcp_task 0x%p, tdata 0x%p, sgl err %d, count %u, dlimit %u\0A\00", [42 x i8] zeroinitializer }, align 32
@cxgbi_conn_alloc_pdu._entry_ptr.116 = internal global ptr @cxgbi_conn_alloc_pdu._entry.114, section ".printk_index", align 4
@cxgbi_conn_alloc_pdu._entry.117 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.118, ptr @.str.104, ptr @.str.5, i32 2006, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013libcxgbi:%s: task 0x%p, tcp_task 0x%p, tdata 0x%p, sgl err %d\0A\00", [63 x i8] zeroinitializer }, align 32
@cxgbi_conn_alloc_pdu._entry_ptr.119 = internal global ptr @cxgbi_conn_alloc_pdu._entry.117, section ".printk_index", align 4
@cxgbi_conn_alloc_pdu._entry.120 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.121, ptr @.str.104, ptr @.str.5, i32 2050, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\016libcxgbi:%s: task 0x%p, op 0x%x, skb 0x%p,%u+%u/%u, itt 0x%x.\0A\00", [63 x i8] zeroinitializer }, align 32
@cxgbi_conn_alloc_pdu._entry_ptr.122 = internal global ptr @cxgbi_conn_alloc_pdu._entry.120, section ".printk_index", align 4
@__kstrtab_cxgbi_conn_alloc_pdu = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_conn_alloc_pdu = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_conn_alloc_pdu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_conn_alloc_pdu to i32), ptr @__kstrtab_cxgbi_conn_alloc_pdu, ptr @__kstrtabns_cxgbi_conn_alloc_pdu }, section "___ksymtab_gpl+cxgbi_conn_alloc_pdu", align 4
@cxgbi_conn_init_pdu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.123, ptr @.str.124, ptr @.str.5, i32 2161, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013libcxgbi:%s: task 0x%p,0x%p, tcp_task 0x%p, tdata 0x%p/0x%p.\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cxgbi_conn_init_pdu\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_conn_init_pdu._entry_ptr = internal global ptr @cxgbi_conn_init_pdu._entry, section ".printk_index", align 4
@cxgbi_conn_init_pdu._entry.125 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.124, ptr @.str.5, i32 2169, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\016libcxgbi:%s: task 0x%p,0x%p, skb 0x%p, 0x%x,0x%x,0x%x, %u+%u.\0A\00", [63 x i8] zeroinitializer }, align 32
@cxgbi_conn_init_pdu._entry_ptr.127 = internal global ptr @cxgbi_conn_init_pdu._entry.125, section ".printk_index", align 4
@cxgbi_conn_init_pdu._entry.128 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.124, ptr @.str.5, i32 2187, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\016libcxgbi:%s: data->total_count %u, tdata->total_offset %u\0A\00", [35 x i8] zeroinitializer }, align 32
@cxgbi_conn_init_pdu._entry_ptr.130 = internal global ptr @cxgbi_conn_init_pdu._entry.128, section ".printk_index", align 4
@cxgbi_conn_init_pdu._entry.131 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.124, ptr @.str.5, i32 2199, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [86 x i8], [42 x i8] } { [86 x i8] c"\013libcxgbi:%s: task 0x%p,0x%p, tcp_task 0x%p, tdata 0x%p/0x%p dlimit %u, sgl err %d.\0A\00", [42 x i8] zeroinitializer }, align 32
@cxgbi_conn_init_pdu._entry_ptr.133 = internal global ptr @cxgbi_conn_init_pdu._entry.131, section ".printk_index", align 4
@rsvd_page = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_cxgbi_conn_init_pdu = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_conn_init_pdu = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_conn_init_pdu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_conn_init_pdu to i32), ptr @__kstrtab_cxgbi_conn_init_pdu, ptr @__kstrtabns_cxgbi_conn_init_pdu }, section "___ksymtab_gpl+cxgbi_conn_init_pdu", align 4
@cxgbi_conn_xmit_pdu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.123, ptr @.str.134, ptr @.str.5, i32 2377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cxgbi_conn_xmit_pdu\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr = internal global ptr @cxgbi_conn_xmit_pdu._entry, section ".printk_index", align 4
@cxgbi_conn_xmit_pdu._entry.135 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.136, ptr @.str.134, ptr @.str.5, i32 2384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016libcxgbi:%s: task 0x%p, skb NULL.\0A\00", [59 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.137 = internal global ptr @cxgbi_conn_xmit_pdu._entry.135, section ".printk_index", align 4
@cxgbi_conn_xmit_pdu._entry.138 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.134, ptr @.str.5, i32 2393, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016libcxgbi:%s: task 0x%p, csk gone.\0A\00", [59 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.140 = internal global ptr @cxgbi_conn_xmit_pdu._entry.138, section ".printk_index", align 4
@cxgbi_conn_xmit_pdu._entry.141 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.142, ptr @.str.134, ptr @.str.5, i32 2407, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013libcxgbi:%s: task 0x%p, ppod writing using ofldq failed.\0A\00", [36 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.143 = internal global ptr @cxgbi_conn_xmit_pdu._entry.141, section ".printk_index", align 4
@cxgbi_conn_xmit_pdu._entry.144 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.145, ptr @.str.134, ptr @.str.5, i32 2419, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\016libcxgbi:%s: task 0x%p,0x%p, rv %d.\0A\00", [57 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.146 = internal global ptr @cxgbi_conn_xmit_pdu._entry.144, section ".printk_index", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@cxgbi_conn_xmit_pdu._entry.147 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.148, ptr @.str.134, ptr @.str.5, i32 2434, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016libcxgbi:%s: enable iso: csk 0x%p\0A\00", [59 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.149 = internal global ptr @cxgbi_conn_xmit_pdu._entry.147, section ".printk_index", align 4
@cxgbi_conn_xmit_pdu._entry.150 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.134, ptr @.str.5, i32 2444, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\016libcxgbi:%s: task 0x%p, skb 0x%p, len %u/%u, %d EAGAIN.\0A\00", [37 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.152 = internal global ptr @cxgbi_conn_xmit_pdu._entry.150, section ".printk_index", align 4
@cxgbi_conn_xmit_pdu._entry.153 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.154, ptr @.str.134, ptr @.str.5, i32 2454, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016libcxgbi:%s: disable iso:csk 0x%p, ts:%lu\0A\00", [51 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.155 = internal global ptr @cxgbi_conn_xmit_pdu._entry.153, section ".printk_index", align 4
@cxgbi_conn_xmit_pdu._entry.156 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.157, ptr @.str.134, ptr @.str.5, i32 2462, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016libcxgbi:%s: itt 0x%x, skb 0x%p, len %u/%u, xmit err %d.\0A\00", [36 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.158 = internal global ptr @cxgbi_conn_xmit_pdu._entry.156, section ".printk_index", align 4
@cxgbi_conn_xmit_pdu._entry.159 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.160, ptr @.str.134, ptr @.str.5, i32 2464, ptr @.str.161, ptr @.str.162 }, [40 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"xmit err %d.\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@cxgbi_conn_xmit_pdu._entry_ptr.163 = internal global ptr @cxgbi_conn_xmit_pdu._entry.159, section ".printk_index", align 4
@__kstrtab_cxgbi_conn_xmit_pdu = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_conn_xmit_pdu = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_conn_xmit_pdu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu to i32), ptr @__kstrtab_cxgbi_conn_xmit_pdu, ptr @__kstrtabns_cxgbi_conn_xmit_pdu }, section "___ksymtab_gpl+cxgbi_conn_xmit_pdu", align 4
@cxgbi_cleanup_task._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.165, ptr @.str.5, i32 2478, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\016libcxgbi:%s: task 0x%p,0x%p, tcp_task 0x%p, tdata 0x%p/0x%p.\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"cxgbi_cleanup_task\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_cleanup_task._entry_ptr = internal global ptr @cxgbi_cleanup_task._entry, section ".printk_index", align 4
@cxgbi_cleanup_task._entry.166 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.167, ptr @.str.165, ptr @.str.5, i32 2484, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016libcxgbi:%s: task 0x%p, skb 0x%p, itt 0x%x.\0A\00", [49 x i8] zeroinitializer }, align 32
@cxgbi_cleanup_task._entry_ptr.168 = internal global ptr @cxgbi_cleanup_task._entry.166, section ".printk_index", align 4
@__kstrtab_cxgbi_cleanup_task = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_cleanup_task = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_cleanup_task = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_cleanup_task to i32), ptr @__kstrtab_cxgbi_cleanup_task, ptr @__kstrtabns_cxgbi_cleanup_task }, section "___ksymtab_gpl+cxgbi_cleanup_task", align 4
@.str.169 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"eh_abort_cnt\00", [19 x i8] zeroinitializer }, align 32
@__kstrtab_cxgbi_get_conn_stats = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_get_conn_stats = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_get_conn_stats = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_get_conn_stats to i32), ptr @__kstrtab_cxgbi_get_conn_stats, ptr @__kstrtabns_cxgbi_get_conn_stats }, section "___ksymtab_gpl+cxgbi_get_conn_stats", align 4
@cxgbi_set_conn_param._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.170, ptr @.str.171, ptr @.str.5, i32 2579, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016libcxgbi:%s: cls_conn 0x%p, param %d, buf(%d) %s.\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_set_conn_param\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_set_conn_param._entry_ptr = internal global ptr @cxgbi_set_conn_param._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_set_conn_param = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_set_conn_param = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_set_conn_param = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_set_conn_param to i32), ptr @__kstrtab_cxgbi_set_conn_param, ptr @__kstrtabns_cxgbi_set_conn_param }, section "___ksymtab_gpl+cxgbi_set_conn_param", align 4
@cxgbi_get_ep_param._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.172, ptr @.str.173, ptr @.str.5, i32 2622, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016libcxgbi:%s: cls_conn 0x%p, param %d.\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"cxgbi_get_ep_param\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_get_ep_param._entry_ptr = internal global ptr @cxgbi_get_ep_param._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_get_ep_param = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_get_ep_param = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_get_ep_param = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_get_ep_param to i32), ptr @__kstrtab_cxgbi_get_ep_param, ptr @__kstrtabns_cxgbi_get_ep_param }, section "___ksymtab_gpl+cxgbi_get_ep_param", align 4
@cxgbi_create_conn._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.175, ptr @.str.5, i32 2662, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\016libcxgbi:%s: cid %u(0x%x), cls 0x%p,0x%p, conn 0x%p,0x%p,0x%p.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"cxgbi_create_conn\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_create_conn._entry_ptr = internal global ptr @cxgbi_create_conn._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_create_conn = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_create_conn = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_create_conn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_create_conn to i32), ptr @__kstrtab_cxgbi_create_conn, ptr @__kstrtabns_cxgbi_create_conn }, section "___ksymtab_gpl+cxgbi_create_conn", align 4
@cxgbi_bind_conn._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.176, ptr @.str.177, ptr @.str.5, i32 2716, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\016libcxgbi:%s: cls 0x%p,0x%p, ep 0x%p, cconn 0x%p, csk 0x%p.\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"cxgbi_bind_conn\00", [16 x i8] zeroinitializer }, align 32
@cxgbi_bind_conn._entry_ptr = internal global ptr @cxgbi_bind_conn._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_bind_conn = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_bind_conn = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_bind_conn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_bind_conn to i32), ptr @__kstrtab_cxgbi_bind_conn, ptr @__kstrtabns_cxgbi_bind_conn }, section "___ksymtab_gpl+cxgbi_bind_conn", align 4
@cxgbi_create_session._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.178, ptr @.str.179, ptr @.str.5, i32 2737, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013libcxgbi:%s: missing endpoint.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_create_session\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_create_session._entry_ptr = internal global ptr @cxgbi_create_session._entry, section ".printk_index", align 4
@cxgbi_create_session._entry.180 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.181, ptr @.str.179, ptr @.str.5, i32 2760, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\016libcxgbi:%s: ep 0x%p, cls sess 0x%p.\0A\00", [56 x i8] zeroinitializer }, align 32
@cxgbi_create_session._entry_ptr.182 = internal global ptr @cxgbi_create_session._entry.180, section ".printk_index", align 4
@__kstrtab_cxgbi_create_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_create_session = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_create_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_create_session to i32), ptr @__kstrtab_cxgbi_create_session, ptr @__kstrtabns_cxgbi_create_session }, section "___ksymtab_gpl+cxgbi_create_session", align 4
@cxgbi_destroy_session._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.184, ptr @.str.5, i32 2772, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016libcxgbi:%s: cls sess 0x%p.\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"cxgbi_destroy_session\00", [42 x i8] zeroinitializer }, align 32
@cxgbi_destroy_session._entry_ptr = internal global ptr @cxgbi_destroy_session._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_destroy_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_destroy_session = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_destroy_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_destroy_session to i32), ptr @__kstrtab_cxgbi_destroy_session, ptr @__kstrtabns_cxgbi_destroy_session }, section "___ksymtab_gpl+cxgbi_destroy_session", align 4
@cxgbi_set_host_param._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.185, ptr @.str.186, ptr @.str.5, i32 2786, ptr @.str.161, ptr @.str.162 }, [40 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Could not get host param. netdev for host not set.\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_set_host_param\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_set_host_param._entry_ptr = internal global ptr @cxgbi_set_host_param._entry, section ".printk_index", align 4
@cxgbi_set_host_param._entry.187 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.188, ptr @.str.186, ptr @.str.5, i32 2792, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\016libcxgbi:%s: shost 0x%p, hba 0x%p,%s, param %d, buf(%d) %s.\0A\00", [33 x i8] zeroinitializer }, align 32
@cxgbi_set_host_param._entry_ptr.189 = internal global ptr @cxgbi_set_host_param._entry.187, section ".printk_index", align 4
@cxgbi_set_host_param._entry.190 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.191, ptr @.str.186, ptr @.str.5, i32 2799, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\016libcxgbi:%s: hba %s, req. ipv4 %pI4.\0A\00", [56 x i8] zeroinitializer }, align 32
@cxgbi_set_host_param._entry_ptr.192 = internal global ptr @cxgbi_set_host_param._entry.190, section ".printk_index", align 4
@__kstrtab_cxgbi_set_host_param = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_set_host_param = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_set_host_param = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_set_host_param to i32), ptr @__kstrtab_cxgbi_set_host_param, ptr @__kstrtabns_cxgbi_set_host_param }, section "___ksymtab_gpl+cxgbi_set_host_param", align 4
@cxgbi_get_host_param._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.185, ptr @.str.193, ptr @.str.5, i32 2820, ptr @.str.161, ptr @.str.162 }, [40 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_get_host_param\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_get_host_param._entry_ptr = internal global ptr @cxgbi_get_host_param._entry, section ".printk_index", align 4
@cxgbi_get_host_param._entry.194 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.193, ptr @.str.5, i32 2826, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016libcxgbi:%s: shost 0x%p, hba 0x%p,%s, param %d.\0A\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_get_host_param._entry_ptr.196 = internal global ptr @cxgbi_get_host_param._entry.194, section ".printk_index", align 4
@.str.197 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%pIS\00", [27 x i8] zeroinitializer }, align 32
@cxgbi_get_host_param._entry.199 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.200, ptr @.str.193, ptr @.str.5, i32 2844, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016libcxgbi:%s: hba %s, addr %s.\0A\00", [63 x i8] zeroinitializer }, align 32
@cxgbi_get_host_param._entry_ptr.201 = internal global ptr @cxgbi_get_host_param._entry.199, section ".printk_index", align 4
@__kstrtab_cxgbi_get_host_param = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_get_host_param = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_get_host_param = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_get_host_param to i32), ptr @__kstrtab_cxgbi_get_host_param, ptr @__kstrtabns_cxgbi_get_host_param }, section "___ksymtab_gpl+cxgbi_get_host_param", align 4
@cxgbi_ep_connect._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.202, ptr @.str.203, ptr @.str.5, i32 2868, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016libcxgbi:%s: shost 0x%p, non_blocking %d, dst_addr 0x%p.\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"cxgbi_ep_connect\00", [47 x i8] zeroinitializer }, align 32
@cxgbi_ep_connect._entry_ptr = internal global ptr @cxgbi_ep_connect._entry, section ".printk_index", align 4
@cxgbi_ep_connect._entry.204 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.205, ptr @.str.203, ptr @.str.5, i32 2873, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\016libcxgbi:%s: shost 0x%p, priv NULL.\0A\00", [57 x i8] zeroinitializer }, align 32
@cxgbi_ep_connect._entry_ptr.206 = internal global ptr @cxgbi_ep_connect._entry.204, section ".printk_index", align 4
@cxgbi_ep_connect._entry.207 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.208, ptr @.str.203, ptr @.str.5, i32 2887, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016libcxgbi:%s: address family 0x%x NOT supported.\0A\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_ep_connect._entry_ptr.209 = internal global ptr @cxgbi_ep_connect._entry.207, section ".printk_index", align 4
@cxgbi_ep_connect._entry.210 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.211, ptr @.str.203, ptr @.str.5, i32 2909, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"\016libcxgbi:%s: Could not connect through requested host %uhba 0x%p != 0x%p (%u).\0A\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_ep_connect._entry_ptr.212 = internal global ptr @cxgbi_ep_connect._entry.210, section ".printk_index", align 4
@cxgbi_ep_connect._entry.213 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.203, ptr @.str.5, i32 2925, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016libcxgbi:%s: csk 0x%p is closing.\0A\00", [59 x i8] zeroinitializer }, align 32
@cxgbi_ep_connect._entry_ptr.215 = internal global ptr @cxgbi_ep_connect._entry.213, section ".printk_index", align 4
@cxgbi_ep_connect._entry.216 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.203, ptr @.str.5, i32 2932, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016libcxgbi:%s: iscsi alloc ep, OOM.\0A\00", [59 x i8] zeroinitializer }, align 32
@cxgbi_ep_connect._entry_ptr.218 = internal global ptr @cxgbi_ep_connect._entry.216, section ".printk_index", align 4
@cxgbi_ep_connect._entry.219 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.203, ptr @.str.5, i32 2942, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\016libcxgbi:%s: ep 0x%p, cep 0x%p, csk 0x%p, hba 0x%p,%s.\0A\00", [38 x i8] zeroinitializer }, align 32
@cxgbi_ep_connect._entry_ptr.221 = internal global ptr @cxgbi_ep_connect._entry.219, section ".printk_index", align 4
@__kstrtab_cxgbi_ep_connect = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_ep_connect = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_ep_connect = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_ep_connect to i32), ptr @__kstrtab_cxgbi_ep_connect, ptr @__kstrtabns_cxgbi_ep_connect }, section "___ksymtab_gpl+cxgbi_ep_connect", align 4
@__kstrtab_cxgbi_ep_poll = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_ep_poll = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_ep_poll = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_ep_poll to i32), ptr @__kstrtab_cxgbi_ep_poll, ptr @__kstrtabns_cxgbi_ep_poll }, section "___ksymtab_gpl+cxgbi_ep_poll", align 4
@cxgbi_ep_disconnect._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.222, ptr @.str.223, ptr @.str.5, i32 2972, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\016libcxgbi:%s: ep 0x%p, cep 0x%p, cconn 0x%p, csk 0x%p,%u,0x%lx.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cxgbi_ep_disconnect\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_ep_disconnect._entry_ptr = internal global ptr @cxgbi_ep_disconnect._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_ep_disconnect = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_ep_disconnect = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_ep_disconnect = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_ep_disconnect to i32), ptr @__kstrtab_cxgbi_ep_disconnect, ptr @__kstrtabns_cxgbi_ep_disconnect }, section "___ksymtab_gpl+cxgbi_ep_disconnect", align 4
@cxgbi_iscsi_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.224, ptr @.str.225, ptr @.str.5, i32 2997, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013libcxgbi:%s: unable to register %s transport 0x%p.\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"cxgbi_iscsi_init\00", [47 x i8] zeroinitializer }, align 32
@cxgbi_iscsi_init._entry_ptr = internal global ptr @cxgbi_iscsi_init._entry, section ".printk_index", align 4
@cxgbi_iscsi_init._entry.226 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.227, ptr @.str.225, ptr @.str.5, i32 3002, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016libcxgbi:%s: %s, registered iscsi transport 0x%p.\0A\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_iscsi_init._entry_ptr.228 = internal global ptr @cxgbi_iscsi_init._entry.226, section ".printk_index", align 4
@__kstrtab_cxgbi_iscsi_init = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_iscsi_init = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_iscsi_init = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_iscsi_init to i32), ptr @__kstrtab_cxgbi_iscsi_init, ptr @__kstrtabns_cxgbi_iscsi_init }, section "___ksymtab_gpl+cxgbi_iscsi_init", align 4
@cxgbi_iscsi_cleanup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.230, ptr @.str.5, i32 3013, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\016libcxgbi:%s: de-register transport 0x%p, %s, stt 0x%p.\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cxgbi_iscsi_cleanup\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_iscsi_cleanup._entry_ptr = internal global ptr @cxgbi_iscsi_cleanup._entry, section ".printk_index", align 4
@__kstrtab_cxgbi_iscsi_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_iscsi_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_iscsi_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_iscsi_cleanup to i32), ptr @__kstrtab_cxgbi_iscsi_cleanup, ptr @__kstrtabns_cxgbi_iscsi_cleanup }, section "___ksymtab_gpl+cxgbi_iscsi_cleanup", align 4
@__kstrtab_cxgbi_attr_is_visible = external dso_local constant [0 x i8], align 1
@__kstrtabns_cxgbi_attr_is_visible = external dso_local constant [0 x i8], align 1
@__ksymtab_cxgbi_attr_is_visible = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cxgbi_attr_is_visible to i32), ptr @__kstrtab_cxgbi_attr_is_visible, ptr @__kstrtabns_cxgbi_attr_is_visible }, section "___ksymtab_gpl+cxgbi_attr_is_visible", align 4
@__initcall__kmod_libcxgbi__718_3096_libcxgbi_init_module6 = internal global ptr @libcxgbi_init_module, section ".initcall6.init", align 4
@__exitcall_libcxgbi_exit_module = internal global ptr @libcxgbi_exit_module, section ".exitcall.exit", align 4
@cxgbi_sock_set_flag._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.231, ptr @.str.232, ptr @.str.233, i32 280, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,0x%lx, bit %d.\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cxgbi_sock_set_flag\00", [44 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"drivers/scsi/cxgbi/libcxgbi.h\00", [34 x i8] zeroinitializer }, align 32
@cxgbi_sock_set_flag._entry_ptr = internal global ptr @cxgbi_sock_set_flag._entry, section ".printk_index", align 4
@__cxgbi_sock_put._entry = internal constant %struct.pi_entry { ptr @.str.234, ptr @.str.235, ptr @.str.233, i32 325, ptr null, ptr null }, align 1
@.str.234 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\016libcxgbi:%s: %s, put csk 0x%p, ref %u-1.\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__cxgbi_sock_put\00", [47 x i8] zeroinitializer }, align 32
@__cxgbi_sock_put._entry_ptr = internal global ptr @__cxgbi_sock_put._entry, section ".printk_index", align 4
@cxgbi_sock_free._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.236, ptr @.str.237, ptr @.str.233, i32 316, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016libcxgbi:%s: free csk 0x%p, state %u, flags 0x%lx\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"cxgbi_sock_free\00", [16 x i8] zeroinitializer }, align 32
@cxgbi_sock_free._entry_ptr = internal global ptr @cxgbi_sock_free._entry, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.238 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cdev_mutex.wait_lock\00", [43 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"cdev_mutex\00", [21 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"cdev_rcu_lock\00", [18 x i8] zeroinitializer }, align 32
@cxgbi_device_destroy._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.241, ptr @.str.5, i32 121, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_device_destroy\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_device_destroy._entry_ptr = internal global ptr @cxgbi_device_destroy._entry, section ".printk_index", align 4
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.242 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.244 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@cxgbi_sock_set_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.245, ptr @.str.246, ptr @.str.233, i32 304, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,0x%lx, state -> %u.\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_sock_set_state\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_sock_set_state._entry_ptr = internal global ptr @cxgbi_sock_set_state._entry, section ".printk_index", align 4
@sock_put_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.247, ptr @.str.248, ptr @.str.5, i32 519, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013libcxgbi:%s: cdev 0x%p, p#%u %s, port %u OOR.\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sock_put_port\00", [18 x i8] zeroinitializer }, align 32
@sock_put_port._entry_ptr = internal global ptr @sock_put_port._entry, section ".printk_index", align 4
@sock_put_port._entry.249 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.250, ptr @.str.248, ptr @.str.5, i32 531, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016libcxgbi:%s: cdev 0x%p, p#%u %s, release %u.\0A\00", [48 x i8] zeroinitializer }, align 32
@sock_put_port._entry_ptr.251 = internal global ptr @sock_put_port._entry.249, section ".printk_index", align 4
@cxgbi_inform_iscsi_conn_closing._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.252, ptr @.str.253, ptr @.str.5, i32 844, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016libcxgbi:%s: csk 0x%p, state %u, flags 0x%lx, conn 0x%p.\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"cxgbi_inform_iscsi_conn_closing\00", [32 x i8] zeroinitializer }, align 32
@cxgbi_inform_iscsi_conn_closing._entry_ptr = internal global ptr @cxgbi_inform_iscsi_conn_closing._entry, section ".printk_index", align 4
@__cxgbi_sock_get._entry = internal constant %struct.pi_entry { ptr @.str.254, ptr @.str.255, ptr @.str.233, i32 334, ptr null, ptr null }, align 1
@.str.254 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\016libcxgbi:%s: %s, get csk 0x%p, ref %u+1.\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__cxgbi_sock_get\00", [47 x i8] zeroinitializer }, align 32
@__cxgbi_sock_get._entry_ptr = internal global ptr @__cxgbi_sock_get._entry, section ".printk_index", align 4
@cxgbi_sock_clear_flag._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.231, ptr @.str.256, ptr @.str.233, i32 289, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"cxgbi_sock_clear_flag\00", [42 x i8] zeroinitializer }, align 32
@cxgbi_sock_clear_flag._entry_ptr = internal global ptr @cxgbi_sock_clear_flag._entry, section ".printk_index", align 4
@skb_read_pdu_bhs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.257, ptr @.str.258, ptr @.str.5, i32 1516, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\016libcxgbi:%s: conn 0x%p, skb 0x%p, len %u, flag 0x%lx.\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"skb_read_pdu_bhs\00", [47 x i8] zeroinitializer }, align 32
@skb_read_pdu_bhs._entry_ptr = internal global ptr @skb_read_pdu_bhs._entry, section ".printk_index", align 4
@skb_read_pdu_bhs._entry.259 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.260, ptr @.str.258, ptr @.str.5, i32 1519, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016libcxgbi:%s: conn 0x%p, skb 0x%p, not hdr.\0A\00", [50 x i8] zeroinitializer }, align 32
@skb_read_pdu_bhs._entry_ptr.261 = internal global ptr @skb_read_pdu_bhs._entry.259, section ".printk_index", align 4
@skb_read_pdu_bhs._entry.262 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.263, ptr @.str.258, ptr @.str.5, i32 1526, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016libcxgbi:%s: conn 0x%p, skb 0x%p, hcrc.\0A\00", [53 x i8] zeroinitializer }, align 32
@skb_read_pdu_bhs._entry_ptr.264 = internal global ptr @skb_read_pdu_bhs._entry.262, section ".printk_index", align 4
@read_pdu_skb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.265, ptr @.str.266, ptr @.str.5, i32 1478, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016libcxgbi:%s: skb 0x%p, off %u, %d, TCP_ERR.\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"read_pdu_skb\00", [19 x i8] zeroinitializer }, align 32
@read_pdu_skb._entry_ptr = internal global ptr @read_pdu_skb._entry, section ".printk_index", align 4
@read_pdu_skb._entry.267 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.268, ptr @.str.266, ptr @.str.5, i32 1483, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\016libcxgbi:%s: skb 0x%p, off %u, %d, TCP_SUSPEND, rc %d.\0A\00", [38 x i8] zeroinitializer }, align 32
@read_pdu_skb._entry_ptr.269 = internal global ptr @read_pdu_skb._entry.267, section ".printk_index", align 4
@read_pdu_skb._entry.270 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.271, ptr @.str.266, ptr @.str.5, i32 1488, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016libcxgbi:%s: skb 0x%p, off %u, %d, TCP_SKB_DONE.\0A\00", [44 x i8] zeroinitializer }, align 32
@read_pdu_skb._entry_ptr.272 = internal global ptr @read_pdu_skb._entry.270, section ".printk_index", align 4
@read_pdu_skb._entry.273 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.274, ptr @.str.266, ptr @.str.5, i32 1493, ptr @.str.161, ptr @.str.162 }, [40 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Invalid pdu or skb.\00", [44 x i8] zeroinitializer }, align 32
@read_pdu_skb._entry_ptr.275 = internal global ptr @read_pdu_skb._entry.273, section ".printk_index", align 4
@read_pdu_skb._entry.276 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.277, ptr @.str.266, ptr @.str.5, i32 1498, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\016libcxgbi:%s: skb 0x%p, off %u, %d, TCP_SEG_DONE, rc %d.\0A\00", [37 x i8] zeroinitializer }, align 32
@read_pdu_skb._entry_ptr.278 = internal global ptr @read_pdu_skb._entry.276, section ".printk_index", align 4
@read_pdu_skb._entry.279 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.280, ptr @.str.266, ptr @.str.5, i32 1502, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\016libcxgbi:%s: skb 0x%p, off %u, %d, invalid status %d.\0A\00", [39 x i8] zeroinitializer }, align 32
@read_pdu_skb._entry_ptr.281 = internal global ptr @read_pdu_skb._entry.279, section ".printk_index", align 4
@skb_read_pdu_data._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.257, ptr @.str.282, ptr @.str.5, i32 1571, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"skb_read_pdu_data\00", [46 x i8] zeroinitializer }, align 32
@skb_read_pdu_data._entry_ptr = internal global ptr @skb_read_pdu_data._entry, section ".printk_index", align 4
@skb_read_pdu_data._entry.283 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.284, ptr @.str.282, ptr @.str.5, i32 1576, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016libcxgbi:%s: conn 0x%p, skb 0x%p, dcrc 0x%lx.\0A\00", [47 x i8] zeroinitializer }, align 32
@skb_read_pdu_data._entry_ptr.285 = internal global ptr @skb_read_pdu_data._entry.283, section ".printk_index", align 4
@skb_read_pdu_data._entry.286 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.287, ptr @.str.282, ptr @.str.5, i32 1595, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\016libcxgbi:%s: skb 0x%p, op 0x%x, itt 0x%x, %u %s ddp'ed.\0A\00", [37 x i8] zeroinitializer }, align 32
@skb_read_pdu_data._entry_ptr.288 = internal global ptr @skb_read_pdu_data._entry.286, section ".printk_index", align 4
@.str.289 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"is\00", [29 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"not\00", [28 x i8] zeroinitializer }, align 32
@csk_return_rx_credits._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.291, ptr @.str.292, ptr @.str.5, i32 1610, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, seq %u, wup %u, thre %u, %u.\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"csk_return_rx_credits\00", [42 x i8] zeroinitializer }, align 32
@csk_return_rx_credits._entry_ptr = internal global ptr @csk_return_rx_credits._entry, section ".printk_index", align 4
@cxgbi_task_data_sgl_read._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.293, ptr @.str.294, ptr @.str.5, i32 1860, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014libcxgbi:%s: tpdu max, sgl %u, bad offset %u/%u.\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"cxgbi_task_data_sgl_read\00", [39 x i8] zeroinitializer }, align 32
@cxgbi_task_data_sgl_read._entry_ptr = internal global ptr @cxgbi_task_data_sgl_read._entry, section ".printk_index", align 4
@cxgbi_task_data_sgl_read._entry.295 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.296, ptr @.str.294, ptr @.str.5, i32 1868, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\016libcxgbi:%s: sgl max limit, sgl %u, offset %u, %u/%u, dlimit %u.\0A\00", [60 x i8] zeroinitializer }, align 32
@cxgbi_task_data_sgl_read._entry_ptr.297 = internal global ptr @cxgbi_task_data_sgl_read._entry.295, section ".printk_index", align 4
@cxgbi_task_data_sgl_read._entry.298 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.299, ptr @.str.294, ptr @.str.5, i32 1880, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"\016libcxgbi:%s: %s: offset %u, count %u,\0Aerr %u, total_count %u, total_offset %u\0A\00", [47 x i8] zeroinitializer }, align 32
@cxgbi_task_data_sgl_read._entry_ptr.300 = internal global ptr @cxgbi_task_data_sgl_read._entry.298, section ".printk_index", align 4
@sgl_read_to_frags._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.301, ptr @.str.302, ptr @.str.5, i32 1778, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014libcxgbi:%s: sg %d NULL, len %u/%u.\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sgl_read_to_frags\00", [46 x i8] zeroinitializer }, align 32
@sgl_read_to_frags._entry_ptr = internal global ptr @sgl_read_to_frags._entry, section ".printk_index", align 4
@sgl_read_to_frags._entry.303 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.304, ptr @.str.302, ptr @.str.5, i32 1794, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014libcxgbi:%s: too many pages %u, dlen %u.\0A\00", [52 x i8] zeroinitializer }, align 32
@sgl_read_to_frags._entry_ptr.305 = internal global ptr @sgl_read_to_frags._entry.303, section ".printk_index", align 4
@task_reserve_itt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.306, ptr @.str.307, ptr @.str.5, i32 1408, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\016libcxgbi:%s: csk 0x%p, R task 0x%p, %u,%u, no ddp.\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"task_reserve_itt\00", [47 x i8] zeroinitializer }, align 32
@task_reserve_itt._entry_ptr = internal global ptr @task_reserve_itt._entry, section ".printk_index", align 4
@task_reserve_itt._entry.308 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.309, ptr @.str.307, ptr @.str.5, i32 1421, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\016libcxgbi:%s: cdev 0x%p, task 0x%p, 0x%x(0x%x,0x%x)->0x%x/0x%x.\0A\00", [62 x i8] zeroinitializer }, align 32
@task_reserve_itt._entry_ptr.310 = internal global ptr @task_reserve_itt._entry.308, section ".printk_index", align 4
@cxgbi_ddp_reserve._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.311, ptr @.str.312, ptr @.str.5, i32 1275, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\016libcxgbi:%s: cdev 0x%p DDP off.\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.312 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"cxgbi_ddp_reserve\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_ddp_reserve._entry_ptr = internal global ptr @cxgbi_ddp_reserve._entry, section ".printk_index", align 4
@cxgbi_ddp_reserve._entry.313 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.314, ptr @.str.312, ptr @.str.5, i32 1284, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\016libcxgbi:%s: ppm 0x%p, pgidx %u, xfer %u, sgcnt %u, NO ddp.\0A\00", [33 x i8] zeroinitializer }, align 32
@cxgbi_ddp_reserve._entry_ptr.315 = internal global ptr @cxgbi_ddp_reserve._entry.313, section ".printk_index", align 4
@cxgbi_ddp_reserve._entry.316 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.317, ptr @.str.312, ptr @.str.5, i32 1314, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\016libcxgbi:%s: %s: 0x%x, xfer %u, sgl %u dma mapping err.\0A\00", [37 x i8] zeroinitializer }, align 32
@cxgbi_ddp_reserve._entry_ptr.318 = internal global ptr @cxgbi_ddp_reserve._entry.316, section ".printk_index", align 4
@cxgbi_ddp_reserve._entry.319 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.320, ptr @.str.312, ptr @.str.5, i32 1320, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\016libcxgbi:%s: %s: sw tag 0x%x, xfer %u, sgl %u, dma count %d.\0A\00", [32 x i8] zeroinitializer }, align 32
@cxgbi_ddp_reserve._entry_ptr.321 = internal global ptr @cxgbi_ddp_reserve._entry.319, section ".printk_index", align 4
@cxgbi_ddp_sgl_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.322, ptr @.str.323, ptr @.str.5, i32 1251, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016libcxgbi:%s: sg %u/%u, %u,%u, not aligned.\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cxgbi_ddp_sgl_check\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_ddp_sgl_check._entry_ptr = internal global ptr @cxgbi_ddp_sgl_check._entry, section ".printk_index", align 4
@cxgbi_ppm_make_non_ddp_tag._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.324, ptr @.str.325, ptr @.str.326, i32 216, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\016libcxgbi:%s: sw_tag 0x%x NOT usable.\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"cxgbi_ppm_make_non_ddp_tag\00", [37 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"drivers/net/ethernet/chelsio/libcxgb/libcxgb_ppm.h\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_ppm_make_non_ddp_tag._entry_ptr = internal global ptr @cxgbi_ppm_make_non_ddp_tag._entry, section ".printk_index", align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@.str.327 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VM_BUG_ON_FOLIO(((unsigned int) folio_ref_count(folio) + 127u <= 127u))\00", [56 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@cxgbi_prep_iso_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.328, ptr @.str.329, ptr @.str.5, i32 2101, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [106 x i8], [54 x i8] } { [106 x i8] c"\016libcxgbi:%s: count %u, tdata->count %u, num_pdu %u,task->hdr_len %u, r2t->data_length %u, r2t->sent %u\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cxgbi_prep_iso_info\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_prep_iso_info._entry_ptr = internal global ptr @cxgbi_prep_iso_info._entry, section ".printk_index", align 4
@cxgbi_sock_tx_queue_up._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.330, ptr @.str.331, ptr @.str.5, i32 2284, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, EAGAIN.\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"cxgbi_sock_tx_queue_up\00", [41 x i8] zeroinitializer }, align 32
@cxgbi_sock_tx_queue_up._entry_ptr = internal global ptr @cxgbi_sock_tx_queue_up._entry, section ".printk_index", align 4
@cxgbi_sock_tx_queue_up._entry.332 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.333, ptr @.str.331, ptr @.str.5, i32 2291, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, EPIPE %d.\0A\00", [48 x i8] zeroinitializer }, align 32
@cxgbi_sock_tx_queue_up._entry_ptr.334 = internal global ptr @cxgbi_sock_tx_queue_up._entry.332, section ".printk_index", align 4
@cxgbi_sock_tx_queue_up._entry.335 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.336, ptr @.str.331, ptr @.str.5, i32 2300, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016libcxgbi:%s: csk 0x%p,%u,0x%lx,%u, FULL %u-%u >= %u.\0A\00", [40 x i8] zeroinitializer }, align 32
@cxgbi_sock_tx_queue_up._entry_ptr.337 = internal global ptr @cxgbi_sock_tx_queue_up._entry.335, section ".printk_index", align 4
@cxgbi_sock_tx_queue_up._entry.338 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.339, ptr @.str.331, ptr @.str.5, i32 2309, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013libcxgbi:%s: csk 0x%p, skb head %u < %u.\0A\00", [52 x i8] zeroinitializer }, align 32
@cxgbi_sock_tx_queue_up._entry_ptr.340 = internal global ptr @cxgbi_sock_tx_queue_up._entry.338, section ".printk_index", align 4
@cxgbi_sock_tx_queue_up._entry.341 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.342, ptr @.str.331, ptr @.str.5, i32 2319, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013libcxgbi:%s: csk 0x%p, frags %u, %u,%u >%lu.\0A\00", [48 x i8] zeroinitializer }, align 32
@cxgbi_sock_tx_queue_up._entry_ptr.343 = internal global ptr @cxgbi_sock_tx_queue_up._entry.341, section ".printk_index", align 4
@ulp2_extra_len = internal constant { [4 x i32], [16 x i8] } { [4 x i32] [i32 0, i32 4, i32 4, i32 8], [16 x i8] zeroinitializer }, align 32
@task_release_itt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.344, ptr @.str.345, ptr @.str.5, i32 1362, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016libcxgbi:%s: cdev 0x%p, task 0x%p, release tag 0x%x.\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"task_release_itt\00", [47 x i8] zeroinitializer }, align 32
@task_release_itt._entry_ptr = internal global ptr @task_release_itt._entry, section ".printk_index", align 4
@cxgbi_conn_max_recv_dlength._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.346, ptr @.str.347, ptr @.str.5, i32 2557, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013libcxgbi:%s: MaxRecvDataSegmentLength %u > %u.\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"cxgbi_conn_max_recv_dlength\00", [36 x i8] zeroinitializer }, align 32
@cxgbi_conn_max_recv_dlength._entry_ptr = internal global ptr @cxgbi_conn_max_recv_dlength._entry, section ".printk_index", align 4
@cxgbi_set_iscsi_ipv4._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.348, ptr @.str.349, ptr @.str.233, i32 584, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\016libcxgbi:%s: set iscsi ipv4 NOT supported, using %s ipv4.\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"cxgbi_set_iscsi_ipv4\00", [43 x i8] zeroinitializer }, align 32
@cxgbi_set_iscsi_ipv4._entry_ptr = internal global ptr @cxgbi_set_iscsi_ipv4._entry, section ".printk_index", align 4
@cxgbi_check_route._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.350, ptr @.str.351, ptr @.str.5, i32 623, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016libcxgbi:%s: no route to ipv4 0x%x, port %u.\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"cxgbi_check_route\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_check_route._entry_ptr = internal global ptr @cxgbi_check_route._entry, section ".printk_index", align 4
@cxgbi_check_route._entry.352 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.353, ptr @.str.351, ptr @.str.5, i32 638, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016libcxgbi:%s: multi-cast route %pI4, port %u, dev %s.\0A\00", [40 x i8] zeroinitializer }, align 32
@cxgbi_check_route._entry_ptr.354 = internal global ptr @cxgbi_check_route._entry.352, section ".printk_index", align 4
@init_net = external dso_local global %struct.net, align 128
@cxgbi_check_route._entry.355 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.356, ptr @.str.351, ptr @.str.5, i32 651, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016libcxgbi:%s: rt dev %s, loopback -> %s, mtu %u.\0A\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_check_route._entry_ptr.357 = internal global ptr @cxgbi_check_route._entry.355, section ".printk_index", align 4
@cxgbi_check_route._entry.358 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.359, ptr @.str.351, ptr @.str.5, i32 655, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016libcxgbi:%s: %s interface not up.\0A\00", [59 x i8] zeroinitializer }, align 32
@cxgbi_check_route._entry_ptr.360 = internal global ptr @cxgbi_check_route._entry.358, section ".printk_index", align 4
@cxgbi_check_route._entry.361 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.362, ptr @.str.351, ptr @.str.5, i32 665, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016libcxgbi:%s: dst %pI4, %s, NOT cxgbi device.\0A\00", [48 x i8] zeroinitializer }, align 32
@cxgbi_check_route._entry_ptr.363 = internal global ptr @cxgbi_check_route._entry.361, section ".printk_index", align 4
@cxgbi_check_route._entry.364 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.365, ptr @.str.351, ptr @.str.5, i32 672, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016libcxgbi:%s: route to %pI4 :%u, ndev p#%d,%s, cdev 0x%p.\0A\00", [36 x i8] zeroinitializer }, align 32
@cxgbi_check_route._entry_ptr.366 = internal global ptr @cxgbi_check_route._entry.364, section ".printk_index", align 4
@cxgbi_device_find_by_mac._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.367, ptr @.str.5, i32 296, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"cxgbi_device_find_by_mac\00", [39 x i8] zeroinitializer }, align 32
@cxgbi_device_find_by_mac._entry_ptr = internal global ptr @cxgbi_device_find_by_mac._entry, section ".printk_index", align 4
@cxgbi_device_find_by_mac._entry.368 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.369, ptr @.str.367, ptr @.str.5, i32 315, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.369 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016libcxgbi:%s: ndev 0x%p, %s, NO match mac found.\0A\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_device_find_by_mac._entry_ptr.370 = internal global ptr @cxgbi_device_find_by_mac._entry.368, section ".printk_index", align 4
@cxgbi_sock_create._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.371, ptr @.str.372, ptr @.str.5, i32 562, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.371 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\016libcxgbi:%s: alloc csk %zu failed.\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"cxgbi_sock_create\00", [46 x i8] zeroinitializer }, align 32
@cxgbi_sock_create._entry_ptr = internal global ptr @cxgbi_sock_create._entry, section ".printk_index", align 4
@cxgbi_sock_create._entry.373 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.374, ptr @.str.372, ptr @.str.5, i32 567, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.374 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016libcxgbi:%s: csk 0x%p, alloc cpls failed.\0A\00", [51 x i8] zeroinitializer }, align 32
@cxgbi_sock_create._entry_ptr.375 = internal global ptr @cxgbi_sock_create._entry.373, section ".printk_index", align 4
@cxgbi_sock_create.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.376 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"&csk->lock\00", [21 x i8] zeroinitializer }, align 32
@cxgbi_sock_create.__key.377 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.378 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"(&csk->retry_timer)\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_sock_create.__key.379 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.380 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&csk->callback_lock\00", [44 x i8] zeroinitializer }, align 32
@cxgbi_sock_create._entry.381 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.382, ptr @.str.372, ptr @.str.5, i32 583, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016libcxgbi:%s: cdev 0x%p, new csk 0x%p.\0A\00", [55 x i8] zeroinitializer }, align 32
@cxgbi_sock_create._entry_ptr.383 = internal global ptr @cxgbi_sock_create._entry.381, section ".printk_index", align 4
@skb_queue_head_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.384 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&list->lock\00", [20 x i8] zeroinitializer }, align 32
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.385 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@cxgbi_check_route6._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.386, ptr @.str.387, ptr @.str.5, i32 739, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.386 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016libcxgbi:%s: no route to ipv6 %pI6 port %u\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"cxgbi_check_route6\00", [45 x i8] zeroinitializer }, align 32
@cxgbi_check_route6._entry_ptr = internal global ptr @cxgbi_check_route6._entry, section ".printk_index", align 4
@cxgbi_check_route6._entry.388 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.389, ptr @.str.387, ptr @.str.5, i32 751, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.389 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016libcxgbi:%s: %pI6, port %u, dst no neighbour.\0A\00", [47 x i8] zeroinitializer }, align 32
@cxgbi_check_route6._entry_ptr.390 = internal global ptr @cxgbi_check_route6._entry.388, section ".printk_index", align 4
@cxgbi_check_route6._entry.391 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.359, ptr @.str.387, ptr @.str.5, i32 758, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@cxgbi_check_route6._entry_ptr.392 = internal global ptr @cxgbi_check_route6._entry.391, section ".printk_index", align 4
@cxgbi_check_route6._entry.393 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.394, ptr @.str.387, ptr @.str.5, i32 766, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\016libcxgbi:%s: multi-cast route %pI6 port %u, dev %s.\0A\00", [41 x i8] zeroinitializer }, align 32
@cxgbi_check_route6._entry_ptr.395 = internal global ptr @cxgbi_check_route6._entry.393, section ".printk_index", align 4
@cxgbi_check_route6._entry.396 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.397, ptr @.str.387, ptr @.str.5, i32 776, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.397 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016libcxgbi:%s: dst %pI6 %s, NOT cxgbi device.\0A\00", [49 x i8] zeroinitializer }, align 32
@cxgbi_check_route6._entry_ptr.398 = internal global ptr @cxgbi_check_route6._entry.396, section ".printk_index", align 4
@cxgbi_check_route6._entry.399 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.400, ptr @.str.387, ptr @.str.5, i32 783, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.400 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016libcxgbi:%s: route to %pI6 :%u, ndev p#%d,%s, cdev 0x%p.\0A\00", [36 x i8] zeroinitializer }, align 32
@cxgbi_check_route6._entry_ptr.401 = internal global ptr @cxgbi_check_route6._entry.399, section ".printk_index", align 4
@cxgbi_check_route6._entry.402 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.403, ptr @.str.387, ptr @.str.5, i32 803, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.403 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\016libcxgbi:%s: failed to get source address to reach %pI6\0A\00", [37 x i8] zeroinitializer }, align 32
@cxgbi_check_route6._entry_ptr.404 = internal global ptr @cxgbi_check_route6._entry.402, section ".printk_index", align 4
@rt6_get_prefsrc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.405 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"include/net/ip6_fib.h\00", [42 x i8] zeroinitializer }, align 32
@.str.406 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@sock_get_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.407, ptr @.str.408, ptr @.str.5, i32 449, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013libcxgbi:%s: cdev 0x%p, p#%u %s, NO port map.\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sock_get_port\00", [18 x i8] zeroinitializer }, align 32
@sock_get_port._entry_ptr = internal global ptr @sock_get_port._entry, section ".printk_index", align 4
@sock_get_port._entry.409 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.410, ptr @.str.408, ptr @.str.5, i32 460, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013libcxgbi:%s: source port NON-ZERO %u.\0A\00", [55 x i8] zeroinitializer }, align 32
@sock_get_port._entry_ptr.411 = internal global ptr @sock_get_port._entry.409, section ".printk_index", align 4
@sock_get_port._entry.412 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.413, ptr @.str.408, ptr @.str.5, i32 468, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016libcxgbi:%s: cdev 0x%p, p#%u %s, ALL ports used.\0A\00", [44 x i8] zeroinitializer }, align 32
@sock_get_port._entry_ptr.414 = internal global ptr @sock_get_port._entry.412, section ".printk_index", align 4
@sock_get_port._entry.415 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.416, ptr @.str.408, ptr @.str.5, i32 487, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016libcxgbi:%s: cdev 0x%p, p#%u %s, p %u, %u.\0A\00", [50 x i8] zeroinitializer }, align 32
@sock_get_port._entry_ptr.417 = internal global ptr @sock_get_port._entry.415, section ".printk_index", align 4
@sock_get_port._entry.418 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.419, ptr @.str.408, ptr @.str.5, i32 496, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.419 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\014libcxgbi:%s: cdev 0x%p, p#%u %s, next %u?\0A\00", [51 x i8] zeroinitializer }, align 32
@sock_get_port._entry_ptr.420 = internal global ptr @sock_get_port._entry.418, section ".printk_index", align 4
@need_active_close._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.421, ptr @.str.5, i32 879, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"need_active_close\00", [46 x i8] zeroinitializer }, align 32
@need_active_close._entry_ptr = internal global ptr @need_active_close._entry, section ".printk_index", align 4
@.str.422 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@libcxgbi_init_module._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.423, ptr @.str.424, ptr @.str.5, i32 3078, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.423 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\016libcxgbi:%s: %s\00", [46 x i8] zeroinitializer }, align 32
@.str.424 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"libcxgbi_init_module\00", [43 x i8] zeroinitializer }, align 32
@libcxgbi_init_module._entry_ptr = internal global ptr @libcxgbi_init_module._entry, section ".printk_index", align 4
@version = internal global { [61 x i8], [35 x i8] } { [61 x i8] c"Chelsio iSCSI driver library libcxgbi v0.9.1-ko (Apr. 2015)\0A\00", [35 x i8] zeroinitializer }, align 32
@switch.table.cxgbi_attr_is_visible = internal constant { [36 x i16], [56 x i8] } { [36 x i16] [i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 0, i16 0, i16 292, i16 292, i16 292, i16 292, i16 292, i16 0, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 292, i16 0, i16 292, i16 292, i16 292, i16 0, i16 292, i16 292], [56 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.426 = internal global [6 x i64] [i64 4, i64 32, i64 3, i64 4, i64 6, i64 8]
@__sancov_gen_cov_switch_values.427 = internal global [6 x i64] [i64 4, i64 32, i64 4, i64 6, i64 7, i64 8]
@__sancov_gen_cov_switch_values.428 = internal global [4 x i64] [i64 2, i64 6, i64 1, i64 5]
@__sancov_gen_cov_switch_values.429 = internal global [4 x i64] [i64 2, i64 32, i64 4294967191, i64 4294967285]
@__sancov_gen_cov_switch_values.430 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 5]
@__sancov_gen_cov_switch_values.431 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 2, i64 3]
@__sancov_gen_cov_switch_values.432 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 2, i64 3]
@__sancov_gen_cov_switch_values.433 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.434 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 5]
@__sancov_gen_cov_switch_values.435 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.436 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 50, i32 1 }
@___asan_gen_.446 = private unnamed_addr constant [10 x i8] c"dbg_level\00", align 1
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 35, i32 21 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 84, i32 3 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 90, i32 2 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 105, i32 4 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 141, i32 3 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 150, i32 2 }
@___asan_gen_.491 = private unnamed_addr constant [11 x i8] c"cdev_mutex\00", align 1
@___asan_gen_.494 = private unnamed_addr constant [10 x i8] c"cdev_list\00", align 1
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 61, i32 8 }
@___asan_gen_.497 = private unnamed_addr constant [14 x i8] c"cdev_rcu_lock\00", align 1
@___asan_gen_.500 = private unnamed_addr constant [14 x i8] c"cdev_rcu_list\00", align 1
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 64, i32 8 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 160, i32 2 }
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 168, i32 2 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 214, i32 2 }
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 230, i32 3 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 247, i32 2 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 263, i32 3 }
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 267, i32 2 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 280, i32 2 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 324, i32 2 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 347, i32 2 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 352, i32 4 }
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 371, i32 3 }
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 378, i32 4 }
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 857, i32 2 }
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 909, i32 2 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 926, i32 2 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 949, i32 4 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 961, i32 2 }
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 982, i32 3 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 994, i32 2 }
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1014, i32 3 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1026, i32 2 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1041, i32 4 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1048, i32 4 }
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1065, i32 4 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1136, i32 3 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1444, i32 2 }
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1456, i32 3 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1634, i32 2 }
@___asan_gen_.709 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1638, i32 3 }
@___asan_gen_.715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1650, i32 5 }
@___asan_gen_.721 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1658, i32 3 }
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1666, i32 5 }
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1676, i32 5 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1684, i32 5 }
@___asan_gen_.745 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1697, i32 6 }
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1709, i32 6 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1727, i32 2 }
@___asan_gen_.763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1735, i32 3 }
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1903, i32 3 }
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1908, i32 3 }
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1941, i32 3 }
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1975, i32 4 }
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1987, i32 4 }
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2004, i32 4 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2047, i32 2 }
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2159, i32 3 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2166, i32 2 }
@___asan_gen_.829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2185, i32 2 }
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2196, i32 4 }
@___asan_gen_.836 = private unnamed_addr constant [10 x i8] c"rsvd_page\00", align 1
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2142, i32 21 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2375, i32 3 }
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2383, i32 3 }
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2392, i32 3 }
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2406, i32 4 }
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2418, i32 3 }
@___asan_gen_.874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2433, i32 5 }
@___asan_gen_.880 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2442, i32 3 }
@___asan_gen_.886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2452, i32 4 }
@___asan_gen_.892 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2460, i32 2 }
@___asan_gen_.904 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2464, i32 2 }
@___asan_gen_.913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2476, i32 3 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2482, i32 2 }
@___asan_gen_.922 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2522, i32 32 }
@___asan_gen_.931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2577, i32 2 }
@___asan_gen_.940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2621, i32 2 }
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2660, i32 2 }
@___asan_gen_.958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2714, i32 2 }
@___asan_gen_.967 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2737, i32 3 }
@___asan_gen_.973 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2759, i32 2 }
@___asan_gen_.982 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2771, i32 2 }
@___asan_gen_.991 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2785, i32 3 }
@___asan_gen_.997 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2790, i32 2 }
@___asan_gen_.1003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2798, i32 3 }
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2819, i32 3 }
@___asan_gen_.1015 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2824, i32 2 }
@___asan_gen_.1018 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2833, i32 22 }
@___asan_gen_.1021 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2840, i32 23 }
@___asan_gen_.1027 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2843, i32 3 }
@___asan_gen_.1036 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2866, i32 2 }
@___asan_gen_.1042 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2873, i32 4 }
@___asan_gen_.1048 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2886, i32 3 }
@___asan_gen_.1054 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2906, i32 3 }
@___asan_gen_.1060 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2925, i32 3 }
@___asan_gen_.1066 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2932, i32 3 }
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2940, i32 2 }
@___asan_gen_.1081 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2970, i32 2 }
@___asan_gen_.1090 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2996, i32 3 }
@___asan_gen_.1096 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 3000, i32 2 }
@___asan_gen_.1105 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 3011, i32 3 }
@___asan_gen_.1117 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1467, i32 278, i32 2 }
@___asan_gen_.1123 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1467, i32 323, i32 2 }
@___asan_gen_.1132 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1467, i32 314, i32 3 }
@___asan_gen_.1138 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 62, i32 8 }
@___asan_gen_.1141 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 65, i32 8 }
@___asan_gen_.1147 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 120, i32 2 }
@___asan_gen_.1153 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1155, i32 695, i32 2 }
@___asan_gen_.1155 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.1156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1155, i32 723, i32 2 }
@___asan_gen_.1165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1467, i32 302, i32 2 }
@___asan_gen_.1174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 516, i32 4 }
@___asan_gen_.1180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 528, i32 3 }
@___asan_gen_.1189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 842, i32 2 }
@___asan_gen_.1195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1467, i32 332, i32 2 }
@___asan_gen_.1201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1467, i32 287, i32 2 }
@___asan_gen_.1210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1514, i32 2 }
@___asan_gen_.1216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1519, i32 3 }
@___asan_gen_.1222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1526, i32 3 }
@___asan_gen_.1231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1477, i32 3 }
@___asan_gen_.1237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1481, i32 3 }
@___asan_gen_.1243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1487, i32 3 }
@___asan_gen_.1249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1493, i32 3 }
@___asan_gen_.1255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1496, i32 3 }
@___asan_gen_.1261 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1501, i32 3 }
@___asan_gen_.1267 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1569, i32 2 }
@___asan_gen_.1273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1575, i32 3 }
@___asan_gen_.1285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1592, i32 3 }
@___asan_gen_.1294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1606, i32 2 }
@___asan_gen_.1303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1859, i32 3 }
@___asan_gen_.1309 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1866, i32 3 }
@___asan_gen_.1315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1877, i32 2 }
@___asan_gen_.1324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1777, i32 5 }
@___asan_gen_.1330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1793, i32 5 }
@___asan_gen_.1339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1405, i32 5 }
@___asan_gen_.1345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1419, i32 2 }
@___asan_gen_.1354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1274, i32 3 }
@___asan_gen_.1360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1281, i32 3 }
@___asan_gen_.1366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1313, i32 3 }
@___asan_gen_.1372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1318, i32 3 }
@___asan_gen_.1381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1249, i32 4 }
@___asan_gen_.1392 = private unnamed_addr constant [54 x i8] c"../drivers/net/ethernet/chelsio/libcxgb/libcxgb_ppm.h\00", align 1
@___asan_gen_.1393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1392, i32 216, i32 3 }
@___asan_gen_.1396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1659, i32 1160, i32 2 }
@___asan_gen_.1405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2097, i32 3 }
@___asan_gen_.1414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2282, i32 3 }
@___asan_gen_.1420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2289, i32 3 }
@___asan_gen_.1426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2297, i32 3 }
@___asan_gen_.1432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2308, i32 3 }
@___asan_gen_.1438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2317, i32 3 }
@___asan_gen_.1439 = private unnamed_addr constant [15 x i8] c"ulp2_extra_len\00", align 1
@___asan_gen_.1441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1467, i32 92, i32 27 }
@___asan_gen_.1450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 1360, i32 2 }
@___asan_gen_.1459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 2556, i32 4 }
@___asan_gen_.1467 = private unnamed_addr constant [33 x i8] c"../drivers/scsi/cxgbi/libcxgbi.h\00", align 1
@___asan_gen_.1468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1467, i32 583, i32 3 }
@___asan_gen_.1477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 621, i32 3 }
@___asan_gen_.1483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 636, i32 3 }
@___asan_gen_.1489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 650, i32 3 }
@___asan_gen_.1495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 655, i32 3 }
@___asan_gen_.1501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 664, i32 3 }
@___asan_gen_.1507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 669, i32 2 }
@___asan_gen_.1513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 296, i32 3 }
@___asan_gen_.1519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 313, i32 2 }
@___asan_gen_.1528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 562, i32 3 }
@___asan_gen_.1534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 567, i32 3 }
@___asan_gen_.1540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 572, i32 2 }
@___asan_gen_.1546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 576, i32 2 }
@___asan_gen_.1552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 578, i32 2 }
@___asan_gen_.1558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 583, i32 2 }
@___asan_gen_.1563 = private unnamed_addr constant [26 x i8] c"../include/linux/skbuff.h\00", align 1
@___asan_gen_.1564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1563, i32 1984, i32 2 }
@___asan_gen_.1565 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1569 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.1570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1569, i32 87, i32 2 }
@___asan_gen_.1579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 737, i32 3 }
@___asan_gen_.1585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 749, i32 3 }
@___asan_gen_.1588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 758, i32 3 }
@___asan_gen_.1594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 764, i32 3 }
@___asan_gen_.1600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 775, i32 3 }
@___asan_gen_.1606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 780, i32 2 }
@___asan_gen_.1612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 802, i32 4 }
@___asan_gen_.1617 = private unnamed_addr constant [25 x i8] c"../include/net/ip6_fib.h\00", align 1
@___asan_gen_.1618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1617, i32 475, i32 9 }
@___asan_gen_.1627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 448, i32 3 }
@___asan_gen_.1633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 459, i32 3 }
@___asan_gen_.1639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 467, i32 3 }
@___asan_gen_.1645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 483, i32 4 }
@___asan_gen_.1651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 494, i32 2 }
@___asan_gen_.1657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 878, i32 2 }
@___asan_gen_.1659 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.1660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1659, i32 717, i32 2 }
@___asan_gen_.1661 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1667 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 3078, i32 2 }
@___asan_gen_.1670 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@___asan_gen_.1671 = private constant [33 x i8] c"../drivers/scsi/cxgbi/libcxgbi.c\00", align 1
@___asan_gen_.1672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1671, i32 44, i32 13 }
@___asan_gen_.1673 = private unnamed_addr constant [35 x i8] c"switch.table.cxgbi_attr_is_visible\00", align 1
@llvm.compiler.used = appending global [632 x ptr] [ptr @__UNIQUE_ID_author691, ptr @__UNIQUE_ID_dbg_level697, ptr @__UNIQUE_ID_dbg_leveltype696, ptr @__UNIQUE_ID_description692, ptr @__UNIQUE_ID_file694, ptr @__UNIQUE_ID_license695, ptr @__UNIQUE_ID_version693, ptr @__cxgbi_sock_get._entry, ptr @__cxgbi_sock_get._entry_ptr, ptr @__cxgbi_sock_put._entry, ptr @__cxgbi_sock_put._entry_ptr, ptr @__exitcall_libcxgbi_exit_module, ptr @__initcall__kmod_libcxgbi__718_3096_libcxgbi_init_module6, ptr @__ksymtab_cxgbi_attr_is_visible, ptr @__ksymtab_cxgbi_bind_conn, ptr @__ksymtab_cxgbi_cleanup_task, ptr @__ksymtab_cxgbi_conn_alloc_pdu, ptr @__ksymtab_cxgbi_conn_init_pdu, ptr @__ksymtab_cxgbi_conn_pdu_ready, ptr @__ksymtab_cxgbi_conn_tx_open, ptr @__ksymtab_cxgbi_conn_xmit_pdu, ptr @__ksymtab_cxgbi_create_conn, ptr @__ksymtab_cxgbi_create_session, ptr @__ksymtab_cxgbi_ddp_ppm_setup, ptr @__ksymtab_cxgbi_ddp_set_one_ppod, ptr @__ksymtab_cxgbi_destroy_session, ptr @__ksymtab_cxgbi_device_find_by_lldev, ptr @__ksymtab_cxgbi_device_find_by_netdev, ptr @__ksymtab_cxgbi_device_find_by_netdev_rcu, ptr @__ksymtab_cxgbi_device_portmap_cleanup, ptr @__ksymtab_cxgbi_device_portmap_create, ptr @__ksymtab_cxgbi_device_register, ptr @__ksymtab_cxgbi_device_unregister, ptr @__ksymtab_cxgbi_device_unregister_all, ptr @__ksymtab_cxgbi_ep_connect, ptr @__ksymtab_cxgbi_ep_disconnect, ptr @__ksymtab_cxgbi_ep_poll, ptr @__ksymtab_cxgbi_get_conn_stats, ptr @__ksymtab_cxgbi_get_ep_param, ptr @__ksymtab_cxgbi_get_host_param, ptr @__ksymtab_cxgbi_hbas_add, ptr @__ksymtab_cxgbi_hbas_remove, ptr @__ksymtab_cxgbi_iscsi_cleanup, ptr @__ksymtab_cxgbi_iscsi_init, ptr @__ksymtab_cxgbi_parse_pdu_itt, ptr @__ksymtab_cxgbi_set_conn_param, ptr @__ksymtab_cxgbi_set_host_param, ptr @__ksymtab_cxgbi_sock_act_open_req_arp_failure, ptr @__ksymtab_cxgbi_sock_check_wr_invariants, ptr @__ksymtab_cxgbi_sock_closed, ptr @__ksymtab_cxgbi_sock_established, ptr @__ksymtab_cxgbi_sock_fail_act_open, ptr @__ksymtab_cxgbi_sock_free_cpl_skbs, ptr @__ksymtab_cxgbi_sock_purge_wr_queue, ptr @__ksymtab_cxgbi_sock_rcv_abort_rpl, ptr @__ksymtab_cxgbi_sock_rcv_close_conn_rpl, ptr @__ksymtab_cxgbi_sock_rcv_peer_close, ptr @__ksymtab_cxgbi_sock_rcv_wr_ack, ptr @__ksymtab_cxgbi_sock_select_mss, ptr @__ksymtab_cxgbi_sock_skb_entail, ptr @__modver_attr, ptr @__param_dbg_level, ptr @csk_return_rx_credits._entry, ptr @csk_return_rx_credits._entry_ptr, ptr @cxgbi_bind_conn._entry, ptr @cxgbi_bind_conn._entry_ptr, ptr @cxgbi_check_route._entry, ptr @cxgbi_check_route._entry.352, ptr @cxgbi_check_route._entry.355, ptr @cxgbi_check_route._entry.358, ptr @cxgbi_check_route._entry.361, ptr @cxgbi_check_route._entry.364, ptr @cxgbi_check_route._entry_ptr, ptr @cxgbi_check_route._entry_ptr.354, ptr @cxgbi_check_route._entry_ptr.357, ptr @cxgbi_check_route._entry_ptr.360, ptr @cxgbi_check_route._entry_ptr.363, ptr @cxgbi_check_route._entry_ptr.366, ptr @cxgbi_check_route6._entry, ptr @cxgbi_check_route6._entry.388, ptr @cxgbi_check_route6._entry.391, ptr @cxgbi_check_route6._entry.393, ptr @cxgbi_check_route6._entry.396, ptr @cxgbi_check_route6._entry.399, ptr @cxgbi_check_route6._entry.402, ptr @cxgbi_check_route6._entry_ptr, ptr @cxgbi_check_route6._entry_ptr.390, ptr @cxgbi_check_route6._entry_ptr.392, ptr @cxgbi_check_route6._entry_ptr.395, ptr @cxgbi_check_route6._entry_ptr.398, ptr @cxgbi_check_route6._entry_ptr.401, ptr @cxgbi_check_route6._entry_ptr.404, ptr @cxgbi_cleanup_task._entry, ptr @cxgbi_cleanup_task._entry.166, ptr @cxgbi_cleanup_task._entry_ptr, ptr @cxgbi_cleanup_task._entry_ptr.168, ptr @cxgbi_conn_alloc_pdu._entry, ptr @cxgbi_conn_alloc_pdu._entry.105, ptr @cxgbi_conn_alloc_pdu._entry.108, ptr @cxgbi_conn_alloc_pdu._entry.111, ptr @cxgbi_conn_alloc_pdu._entry.114, ptr @cxgbi_conn_alloc_pdu._entry.117, ptr @cxgbi_conn_alloc_pdu._entry.120, ptr @cxgbi_conn_alloc_pdu._entry_ptr, ptr @cxgbi_conn_alloc_pdu._entry_ptr.107, ptr @cxgbi_conn_alloc_pdu._entry_ptr.110, ptr @cxgbi_conn_alloc_pdu._entry_ptr.113, ptr @cxgbi_conn_alloc_pdu._entry_ptr.116, ptr @cxgbi_conn_alloc_pdu._entry_ptr.119, ptr @cxgbi_conn_alloc_pdu._entry_ptr.122, ptr @cxgbi_conn_init_pdu._entry, ptr @cxgbi_conn_init_pdu._entry.125, ptr @cxgbi_conn_init_pdu._entry.128, ptr @cxgbi_conn_init_pdu._entry.131, ptr @cxgbi_conn_init_pdu._entry_ptr, ptr @cxgbi_conn_init_pdu._entry_ptr.127, ptr @cxgbi_conn_init_pdu._entry_ptr.130, ptr @cxgbi_conn_init_pdu._entry_ptr.133, ptr @cxgbi_conn_max_recv_dlength._entry, ptr @cxgbi_conn_max_recv_dlength._entry_ptr, ptr @cxgbi_conn_pdu_ready._entry, ptr @cxgbi_conn_pdu_ready._entry.100, ptr @cxgbi_conn_pdu_ready._entry.73, ptr @cxgbi_conn_pdu_ready._entry.76, ptr @cxgbi_conn_pdu_ready._entry.79, ptr @cxgbi_conn_pdu_ready._entry.82, ptr @cxgbi_conn_pdu_ready._entry.85, ptr @cxgbi_conn_pdu_ready._entry.88, ptr @cxgbi_conn_pdu_ready._entry.91, ptr @cxgbi_conn_pdu_ready._entry.94, ptr @cxgbi_conn_pdu_ready._entry.97, ptr @cxgbi_conn_pdu_ready._entry_ptr, ptr @cxgbi_conn_pdu_ready._entry_ptr.102, ptr @cxgbi_conn_pdu_ready._entry_ptr.75, ptr @cxgbi_conn_pdu_ready._entry_ptr.78, ptr @cxgbi_conn_pdu_ready._entry_ptr.81, ptr @cxgbi_conn_pdu_ready._entry_ptr.84, ptr @cxgbi_conn_pdu_ready._entry_ptr.87, ptr @cxgbi_conn_pdu_ready._entry_ptr.90, ptr @cxgbi_conn_pdu_ready._entry_ptr.93, ptr @cxgbi_conn_pdu_ready._entry_ptr.96, ptr @cxgbi_conn_pdu_ready._entry_ptr.99, ptr @cxgbi_conn_tx_open._entry, ptr @cxgbi_conn_tx_open._entry_ptr, ptr @cxgbi_conn_xmit_pdu._entry, ptr @cxgbi_conn_xmit_pdu._entry.135, ptr @cxgbi_conn_xmit_pdu._entry.138, ptr @cxgbi_conn_xmit_pdu._entry.141, ptr @cxgbi_conn_xmit_pdu._entry.144, ptr @cxgbi_conn_xmit_pdu._entry.147, ptr @cxgbi_conn_xmit_pdu._entry.150, ptr @cxgbi_conn_xmit_pdu._entry.153, ptr @cxgbi_conn_xmit_pdu._entry.156, ptr @cxgbi_conn_xmit_pdu._entry.159, ptr @cxgbi_conn_xmit_pdu._entry_ptr, ptr @cxgbi_conn_xmit_pdu._entry_ptr.137, ptr @cxgbi_conn_xmit_pdu._entry_ptr.140, ptr @cxgbi_conn_xmit_pdu._entry_ptr.143, ptr @cxgbi_conn_xmit_pdu._entry_ptr.146, ptr @cxgbi_conn_xmit_pdu._entry_ptr.149, ptr @cxgbi_conn_xmit_pdu._entry_ptr.152, ptr @cxgbi_conn_xmit_pdu._entry_ptr.155, ptr @cxgbi_conn_xmit_pdu._entry_ptr.158, ptr @cxgbi_conn_xmit_pdu._entry_ptr.163, ptr @cxgbi_create_conn._entry, ptr @cxgbi_create_conn._entry_ptr, ptr @cxgbi_create_session._entry, ptr @cxgbi_create_session._entry.180, ptr @cxgbi_create_session._entry_ptr, ptr @cxgbi_create_session._entry_ptr.182, ptr @cxgbi_ddp_reserve._entry, ptr @cxgbi_ddp_reserve._entry.313, ptr @cxgbi_ddp_reserve._entry.316, ptr @cxgbi_ddp_reserve._entry.319, ptr @cxgbi_ddp_reserve._entry_ptr, ptr @cxgbi_ddp_reserve._entry_ptr.315, ptr @cxgbi_ddp_reserve._entry_ptr.318, ptr @cxgbi_ddp_reserve._entry_ptr.321, ptr @cxgbi_ddp_sgl_check._entry, ptr @cxgbi_ddp_sgl_check._entry_ptr, ptr @cxgbi_destroy_session._entry, ptr @cxgbi_destroy_session._entry_ptr, ptr @cxgbi_device_destroy._entry, ptr @cxgbi_device_destroy._entry_ptr, ptr @cxgbi_device_find_by_lldev._entry, ptr @cxgbi_device_find_by_lldev._entry_ptr, ptr @cxgbi_device_find_by_mac._entry, ptr @cxgbi_device_find_by_mac._entry.368, ptr @cxgbi_device_find_by_mac._entry_ptr, ptr @cxgbi_device_find_by_mac._entry_ptr.370, ptr @cxgbi_device_find_by_netdev._entry, ptr @cxgbi_device_find_by_netdev._entry.22, ptr @cxgbi_device_find_by_netdev._entry_ptr, ptr @cxgbi_device_find_by_netdev._entry_ptr.24, ptr @cxgbi_device_find_by_netdev_rcu._entry, ptr @cxgbi_device_find_by_netdev_rcu._entry.27, ptr @cxgbi_device_find_by_netdev_rcu._entry_ptr, ptr @cxgbi_device_find_by_netdev_rcu._entry_ptr.28, ptr @cxgbi_device_portmap_cleanup._entry, ptr @cxgbi_device_portmap_cleanup._entry_ptr, ptr @cxgbi_device_portmap_create._entry, ptr @cxgbi_device_portmap_create._entry_ptr, ptr @cxgbi_device_register._entry, ptr @cxgbi_device_register._entry.12, ptr @cxgbi_device_register._entry_ptr, ptr @cxgbi_device_register._entry_ptr.14, ptr @cxgbi_device_unregister._entry, ptr @cxgbi_device_unregister._entry_ptr, ptr @cxgbi_ep_connect._entry, ptr @cxgbi_ep_connect._entry.204, ptr @cxgbi_ep_connect._entry.207, ptr @cxgbi_ep_connect._entry.210, ptr @cxgbi_ep_connect._entry.213, ptr @cxgbi_ep_connect._entry.216, ptr @cxgbi_ep_connect._entry.219, ptr @cxgbi_ep_connect._entry_ptr, ptr @cxgbi_ep_connect._entry_ptr.206, ptr @cxgbi_ep_connect._entry_ptr.209, ptr @cxgbi_ep_connect._entry_ptr.212, ptr @cxgbi_ep_connect._entry_ptr.215, ptr @cxgbi_ep_connect._entry_ptr.218, ptr @cxgbi_ep_connect._entry_ptr.221, ptr @cxgbi_ep_disconnect._entry, ptr @cxgbi_ep_disconnect._entry_ptr, ptr @cxgbi_get_ep_param._entry, ptr @cxgbi_get_ep_param._entry_ptr, ptr @cxgbi_get_host_param._entry, ptr @cxgbi_get_host_param._entry.194, ptr @cxgbi_get_host_param._entry.199, ptr @cxgbi_get_host_param._entry_ptr, ptr @cxgbi_get_host_param._entry_ptr.196, ptr @cxgbi_get_host_param._entry_ptr.201, ptr @cxgbi_hbas_add._entry, ptr @cxgbi_hbas_add._entry.32, ptr @cxgbi_hbas_add._entry.35, ptr @cxgbi_hbas_add._entry.38, ptr @cxgbi_hbas_add._entry_ptr, ptr @cxgbi_hbas_add._entry_ptr.34, ptr @cxgbi_hbas_add._entry_ptr.37, ptr @cxgbi_hbas_add._entry_ptr.40, ptr @cxgbi_hbas_remove._entry, ptr @cxgbi_hbas_remove._entry_ptr, ptr @cxgbi_inform_iscsi_conn_closing._entry, ptr @cxgbi_inform_iscsi_conn_closing._entry_ptr, ptr @cxgbi_iscsi_cleanup._entry, ptr @cxgbi_iscsi_cleanup._entry_ptr, ptr @cxgbi_iscsi_init._entry, ptr @cxgbi_iscsi_init._entry.226, ptr @cxgbi_iscsi_init._entry_ptr, ptr @cxgbi_iscsi_init._entry_ptr.228, ptr @cxgbi_parse_pdu_itt._entry, ptr @cxgbi_parse_pdu_itt._entry_ptr, ptr @cxgbi_ppm_make_non_ddp_tag._entry, ptr @cxgbi_ppm_make_non_ddp_tag._entry_ptr, ptr @cxgbi_prep_iso_info._entry, ptr @cxgbi_prep_iso_info._entry_ptr, ptr @cxgbi_set_conn_param._entry, ptr @cxgbi_set_conn_param._entry_ptr, ptr @cxgbi_set_host_param._entry, ptr @cxgbi_set_host_param._entry.187, ptr @cxgbi_set_host_param._entry.190, ptr @cxgbi_set_host_param._entry_ptr, ptr @cxgbi_set_host_param._entry_ptr.189, ptr @cxgbi_set_host_param._entry_ptr.192, ptr @cxgbi_set_iscsi_ipv4._entry, ptr @cxgbi_set_iscsi_ipv4._entry_ptr, ptr @cxgbi_sock_act_open_req_arp_failure._entry, ptr @cxgbi_sock_act_open_req_arp_failure._entry_ptr, ptr @cxgbi_sock_check_wr_invariants._entry, ptr @cxgbi_sock_check_wr_invariants._entry_ptr, ptr @cxgbi_sock_clear_flag._entry, ptr @cxgbi_sock_clear_flag._entry_ptr, ptr @cxgbi_sock_closed._entry, ptr @cxgbi_sock_closed._entry_ptr, ptr @cxgbi_sock_create._entry, ptr @cxgbi_sock_create._entry.373, ptr @cxgbi_sock_create._entry.381, ptr @cxgbi_sock_create._entry_ptr, ptr @cxgbi_sock_create._entry_ptr.375, ptr @cxgbi_sock_create._entry_ptr.383, ptr @cxgbi_sock_fail_act_open._entry, ptr @cxgbi_sock_fail_act_open._entry_ptr, ptr @cxgbi_sock_free._entry, ptr @cxgbi_sock_free._entry_ptr, ptr @cxgbi_sock_rcv_abort_rpl._entry, ptr @cxgbi_sock_rcv_abort_rpl._entry_ptr, ptr @cxgbi_sock_rcv_close_conn_rpl._entry, ptr @cxgbi_sock_rcv_close_conn_rpl._entry.52, ptr @cxgbi_sock_rcv_close_conn_rpl._entry_ptr, ptr @cxgbi_sock_rcv_close_conn_rpl._entry_ptr.53, ptr @cxgbi_sock_rcv_peer_close._entry, ptr @cxgbi_sock_rcv_peer_close._entry.48, ptr @cxgbi_sock_rcv_peer_close._entry_ptr, ptr @cxgbi_sock_rcv_peer_close._entry_ptr.50, ptr @cxgbi_sock_rcv_wr_ack._entry, ptr @cxgbi_sock_rcv_wr_ack._entry.56, ptr @cxgbi_sock_rcv_wr_ack._entry.59, ptr @cxgbi_sock_rcv_wr_ack._entry.62, ptr @cxgbi_sock_rcv_wr_ack._entry_ptr, ptr @cxgbi_sock_rcv_wr_ack._entry_ptr.58, ptr @cxgbi_sock_rcv_wr_ack._entry_ptr.61, ptr @cxgbi_sock_rcv_wr_ack._entry_ptr.64, ptr @cxgbi_sock_set_flag._entry, ptr @cxgbi_sock_set_flag._entry_ptr, ptr @cxgbi_sock_set_state._entry, ptr @cxgbi_sock_set_state._entry_ptr, ptr @cxgbi_sock_tx_queue_up._entry, ptr @cxgbi_sock_tx_queue_up._entry.332, ptr @cxgbi_sock_tx_queue_up._entry.335, ptr @cxgbi_sock_tx_queue_up._entry.338, ptr @cxgbi_sock_tx_queue_up._entry.341, ptr @cxgbi_sock_tx_queue_up._entry_ptr, ptr @cxgbi_sock_tx_queue_up._entry_ptr.334, ptr @cxgbi_sock_tx_queue_up._entry_ptr.337, ptr @cxgbi_sock_tx_queue_up._entry_ptr.340, ptr @cxgbi_sock_tx_queue_up._entry_ptr.343, ptr @cxgbi_task_data_sgl_read._entry, ptr @cxgbi_task_data_sgl_read._entry.295, ptr @cxgbi_task_data_sgl_read._entry.298, ptr @cxgbi_task_data_sgl_read._entry_ptr, ptr @cxgbi_task_data_sgl_read._entry_ptr.297, ptr @cxgbi_task_data_sgl_read._entry_ptr.300, ptr @libcxgbi_exit_module, ptr @libcxgbi_init_module._entry, ptr @libcxgbi_init_module._entry_ptr, ptr @need_active_close._entry, ptr @need_active_close._entry_ptr, ptr @read_pdu_skb._entry, ptr @read_pdu_skb._entry.267, ptr @read_pdu_skb._entry.270, ptr @read_pdu_skb._entry.273, ptr @read_pdu_skb._entry.276, ptr @read_pdu_skb._entry.279, ptr @read_pdu_skb._entry_ptr, ptr @read_pdu_skb._entry_ptr.269, ptr @read_pdu_skb._entry_ptr.272, ptr @read_pdu_skb._entry_ptr.275, ptr @read_pdu_skb._entry_ptr.278, ptr @read_pdu_skb._entry_ptr.281, ptr @sgl_read_to_frags._entry, ptr @sgl_read_to_frags._entry.303, ptr @sgl_read_to_frags._entry_ptr, ptr @sgl_read_to_frags._entry_ptr.305, ptr @skb_read_pdu_bhs._entry, ptr @skb_read_pdu_bhs._entry.259, ptr @skb_read_pdu_bhs._entry.262, ptr @skb_read_pdu_bhs._entry_ptr, ptr @skb_read_pdu_bhs._entry_ptr.261, ptr @skb_read_pdu_bhs._entry_ptr.264, ptr @skb_read_pdu_data._entry, ptr @skb_read_pdu_data._entry.283, ptr @skb_read_pdu_data._entry.286, ptr @skb_read_pdu_data._entry_ptr, ptr @skb_read_pdu_data._entry_ptr.285, ptr @skb_read_pdu_data._entry_ptr.288, ptr @sock_get_port._entry, ptr @sock_get_port._entry.409, ptr @sock_get_port._entry.412, ptr @sock_get_port._entry.415, ptr @sock_get_port._entry.418, ptr @sock_get_port._entry_ptr, ptr @sock_get_port._entry_ptr.411, ptr @sock_get_port._entry_ptr.414, ptr @sock_get_port._entry_ptr.417, ptr @sock_get_port._entry_ptr.420, ptr @sock_put_port._entry, ptr @sock_put_port._entry.249, ptr @sock_put_port._entry_ptr, ptr @sock_put_port._entry_ptr.251, ptr @task_release_itt._entry, ptr @task_release_itt._entry_ptr, ptr @task_reserve_itt._entry, ptr @task_reserve_itt._entry.308, ptr @task_reserve_itt._entry_ptr, ptr @task_reserve_itt._entry_ptr.310, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @dbg_level, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @cxgbi_device_portmap_create.__key, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @cxgbi_device_register.__key, ptr @.str.11, ptr @cdev_mutex, ptr @cdev_list, ptr @cdev_rcu_lock, ptr @cdev_rcu_list, ptr @.str.13, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.23, ptr @.str.25, ptr @.str.26, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.33, ptr @.str.36, ptr @.str.39, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.49, ptr @.str.51, ptr @.str.54, ptr @.str.55, ptr @.str.57, ptr @.str.60, ptr @.str.63, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.74, ptr @.str.77, ptr @.str.80, ptr @.str.83, ptr @.str.86, ptr @.str.89, ptr @.str.92, ptr @.str.95, ptr @.str.98, ptr @.str.101, ptr @.str.103, ptr @.str.104, ptr @.str.106, ptr @.str.109, ptr @.str.112, ptr @.str.115, ptr @.str.118, ptr @.str.121, ptr @.str.123, ptr @.str.124, ptr @.str.126, ptr @.str.129, ptr @.str.132, ptr @rsvd_page, ptr @.str.134, ptr @.str.136, ptr @.str.139, ptr @.str.142, ptr @.str.145, ptr @.str.148, ptr @.str.151, ptr @.str.154, ptr @.str.157, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.164, ptr @.str.165, ptr @.str.167, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.181, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.188, ptr @.str.191, ptr @.str.193, ptr @.str.195, ptr @.str.197, ptr @.str.198, ptr @.str.200, ptr @.str.202, ptr @.str.203, ptr @.str.205, ptr @.str.208, ptr @.str.211, ptr @.str.214, ptr @.str.217, ptr @.str.220, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.227, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.250, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.260, ptr @.str.263, ptr @.str.265, ptr @.str.266, ptr @.str.268, ptr @.str.271, ptr @.str.274, ptr @.str.277, ptr @.str.280, ptr @.str.282, ptr @.str.284, ptr @.str.287, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.296, ptr @.str.299, ptr @.str.301, ptr @.str.302, ptr @.str.304, ptr @.str.306, ptr @.str.307, ptr @.str.309, ptr @.str.311, ptr @.str.312, ptr @.str.314, ptr @.str.317, ptr @.str.320, ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.333, ptr @.str.336, ptr @.str.339, ptr @.str.342, ptr @ulp2_extra_len, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.353, ptr @.str.356, ptr @.str.359, ptr @.str.362, ptr @.str.365, ptr @.str.367, ptr @.str.369, ptr @.str.371, ptr @.str.372, ptr @.str.374, ptr @cxgbi_sock_create.__key, ptr @.str.376, ptr @cxgbi_sock_create.__key.377, ptr @.str.378, ptr @cxgbi_sock_create.__key.379, ptr @.str.380, ptr @.str.382, ptr @skb_queue_head_init.__key, ptr @.str.384, ptr @init_completion.__key, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.389, ptr @.str.394, ptr @.str.397, ptr @.str.400, ptr @.str.403, ptr @.str.405, ptr @.str.406, ptr @.str.407, ptr @.str.408, ptr @.str.410, ptr @.str.413, ptr @.str.416, ptr @.str.419, ptr @.str.421, ptr @.str.422, ptr @.str.423, ptr @.str.424, ptr @version, ptr @switch.table.cxgbi_attr_is_visible], section "llvm.metadata"
@0 = internal global [413 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dbg_level to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_portmap_create._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_portmap_create.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_portmap_cleanup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_register._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_register.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cdev_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cdev_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cdev_rcu_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cdev_rcu_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_register._entry.12 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_unregister._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_find_by_lldev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_find_by_netdev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_find_by_netdev._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_find_by_netdev_rcu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_find_by_netdev_rcu._entry.27 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_hbas_remove._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_hbas_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_hbas_add._entry.32 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_hbas_add._entry.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_hbas_add._entry.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_closed._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_fail_act_open._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_act_open_req_arp_failure._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_abort_rpl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_peer_close._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_peer_close._entry.48 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_close_conn_rpl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_close_conn_rpl._entry.52 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_wr_ack._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_wr_ack._entry.56 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_wr_ack._entry.59 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_rcv_wr_ack._entry.62 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_check_wr_invariants._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_parse_pdu_itt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_tx_open._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.73 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.76 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.79 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.82 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.85 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.88 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.91 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.94 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.97 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_pdu_ready._entry.100 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_alloc_pdu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_alloc_pdu._entry.105 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_alloc_pdu._entry.108 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 107, i32 160, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_alloc_pdu._entry.111 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_alloc_pdu._entry.114 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_alloc_pdu._entry.117 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_alloc_pdu._entry.120 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_init_pdu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_init_pdu._entry.125 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_init_pdu._entry.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_init_pdu._entry.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rsvd_page to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.135 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.138 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.141 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.144 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.147 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.150 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.153 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.156 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_xmit_pdu._entry.159 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_cleanup_task._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_cleanup_task._entry.166 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_set_conn_param._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_get_ep_param._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_create_conn._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_bind_conn._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_create_session._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_create_session._entry.180 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.973 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.973 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_destroy_session._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_set_host_param._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_set_host_param._entry.187 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_set_host_param._entry.190 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_get_host_param._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_get_host_param._entry.194 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_get_host_param._entry.199 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ep_connect._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ep_connect._entry.204 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ep_connect._entry.207 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ep_connect._entry.210 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ep_connect._entry.213 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ep_connect._entry.216 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ep_connect._entry.219 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ep_disconnect._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_iscsi_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_iscsi_init._entry.226 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_iscsi_cleanup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1105 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1105 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1105 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_set_flag._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1123 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1123 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_free._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_destroy._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_set_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_put_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_put_port._entry.249 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_inform_iscsi_conn_closing._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_clear_flag._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_read_pdu_bhs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_read_pdu_bhs._entry.259 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_read_pdu_bhs._entry.262 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @read_pdu_skb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @read_pdu_skb._entry.267 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @read_pdu_skb._entry.270 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @read_pdu_skb._entry.273 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @read_pdu_skb._entry.276 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @read_pdu_skb._entry.279 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_read_pdu_data._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_read_pdu_data._entry.283 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_read_pdu_data._entry.286 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @csk_return_rx_credits._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_task_data_sgl_read._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_task_data_sgl_read._entry.295 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_task_data_sgl_read._entry.298 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sgl_read_to_frags._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sgl_read_to_frags._entry.303 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @task_reserve_itt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @task_reserve_itt._entry.308 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ddp_reserve._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ddp_reserve._entry.313 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ddp_reserve._entry.316 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ddp_reserve._entry.319 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ddp_sgl_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_ppm_make_non_ddp_tag._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_prep_iso_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 106, i32 160, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_tx_queue_up._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_tx_queue_up._entry.332 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_tx_queue_up._entry.335 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_tx_queue_up._entry.338 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_tx_queue_up._entry.341 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ulp2_extra_len to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1439 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @task_release_itt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_conn_max_recv_dlength._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_set_iscsi_ipv4._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route._entry.352 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route._entry.355 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route._entry.358 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route._entry.361 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route._entry.364 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_find_by_mac._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_device_find_by_mac._entry.368 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_create._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_create._entry.373 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_create.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_create.__key.377 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_create.__key.379 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_sock_create._entry.381 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_queue_head_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1565 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route6._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route6._entry.388 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.389 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route6._entry.391 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route6._entry.393 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route6._entry.396 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route6._entry.399 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.400 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cxgbi_check_route6._entry.402 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.403 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.405 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_get_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_get_port._entry.409 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_get_port._entry.412 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_get_port._entry.415 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_get_port._entry.418 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @need_active_close._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @libcxgbi_init_module._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1661 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.423 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.424 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @version to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1670 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.cxgbi_attr_is_visible to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1671 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__modver_version_show(ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_device_portmap_create(ptr noundef %cdev, i32 noundef %base, i32 noundef %max_conn) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %max_conn, i32 4) #17
  %1 = extractvalue { i32, i1 } %0, 1
  %2 = extractvalue { i32, i1 } %0, 0
  %retval.0.i = select i1 %1, i32 -1, i32 %2
  %call.i.i = tail call noalias ptr @kvmalloc_node(i32 noundef %retval.0.i, i32 noundef 11712, i32 noundef -1) #20
  %port_csk = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 21, i32 5
  %3 = ptrtoint ptr %port_csk to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call.i.i, ptr %port_csk, align 4
  %tobool.not = icmp eq ptr %call.i.i, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4, ptr noundef %cdev, i32 noundef %max_conn) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %pmap1 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 21
  %4 = ptrtoint ptr %pmap1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %max_conn, ptr %pmap1, align 4
  %conv = trunc i32 %base to i16
  %sport_base = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 21, i32 2
  %5 = ptrtoint ptr %sport_base to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv, ptr %sport_base, align 4
  %lock = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 21, i32 3
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.6, ptr noundef nonnull @cxgbi_device_portmap_create.__key, i16 noundef signext 3) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end, %do.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %do.end ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #0

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_device_portmap_cleanup(ptr noundef %cdev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %pmap1 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 21
  %0 = ptrtoint ptr %pmap1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pmap1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp26.not = icmp eq i32 %1, 0
  br i1 %cmp26.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %port_csk = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 21, i32 5
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.027 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %port_csk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %port_csk, align 4
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.027
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then:                                          ; preds = %for.body
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %arrayidx, align 4
  %7 = load i32, ptr @dbg_level, align 4
  %and = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %if.then.do.end10_crit_edge, label %do.end

if.then.do.end10_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end10

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.8, ptr noundef nonnull %5, ptr noundef %cdev) #21
  br label %do.end10

do.end10:                                         ; preds = %do.end, %if.then.do.end10_crit_edge
  %lock = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 26
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #17
  %flags.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 3
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags.i, align 4
  %or.i.i = or i32 %9, 128
  store i32 %or.i.i, ptr %flags.i, align 4
  %10 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %10, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end10.cxgbi_sock_set_flag.exit_crit_edge, label %do.end.i

do.end10.cxgbi_sock_set_flag.exit_crit_edge:      ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_flag.exit

do.end.i:                                         ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #19
  %state.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 28
  %11 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %state.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.231, ptr noundef nonnull @.str.232, ptr noundef nonnull %5, i32 noundef %12, i32 noundef %or.i.i, i32 noundef 7) #21
  br label %cxgbi_sock_set_flag.exit

cxgbi_sock_set_flag.exit:                         ; preds = %do.end.i, %do.end10.cxgbi_sock_set_flag.exit_crit_edge
  tail call void @cxgbi_sock_closed(ptr noundef nonnull %5)
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock) #17
  tail call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.8, ptr noundef nonnull %5)
  br label %for.inc

for.inc:                                          ; preds = %cxgbi_sock_set_flag.exit, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.027, 1
  %13 = ptrtoint ptr %pmap1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pmap1, align 4
  %cmp = icmp ult i32 %inc, %14
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cxgbi_sock_set_flag(ptr noundef %csk, i32 noundef %flag) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %rem.i = and i32 %flag, 31
  %shl.i = shl nuw i32 1, %rem.i
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %or.i = or i32 %1, %shl.i
  store i32 %or.i, ptr %flags, align 4
  %2 = load i32, ptr @dbg_level, align 4
  %and = and i32 %2, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %state, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.231, ptr noundef nonnull @.str.232, ptr noundef %csk, i32 noundef %4, i32 noundef %or.i, i32 noundef %flag) #21
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_closed(ptr noundef %csk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end2_crit_edge, label %do.end

entry.do.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end2

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %1 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %state, align 4
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %5 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tid, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41, ptr noundef nonnull @.str.42, ptr noundef %csk, i32 noundef %2, i32 noundef %4, i32 noundef %6) #21
  br label %do.end2

do.end2:                                          ; preds = %do.end, %entry.do.end2_crit_edge
  %flags.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i, align 4
  %or.i.i = or i32 %8, 16
  store i32 %or.i.i, ptr %flags.i, align 4
  %9 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %9, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end2.cxgbi_sock_set_flag.exit_crit_edge, label %do.end.i

do.end2.cxgbi_sock_set_flag.exit_crit_edge:       ; preds = %do.end2
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_flag.exit

do.end.i:                                         ; preds = %do.end2
  call void @__sanitizer_cov_trace_pc() #19
  %state.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %state.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.231, ptr noundef nonnull @.str.232, ptr noundef %csk, i32 noundef %11, i32 noundef %or.i.i, i32 noundef 4) #21
  br label %cxgbi_sock_set_flag.exit

cxgbi_sock_set_flag.exit:                         ; preds = %do.end.i, %do.end2.cxgbi_sock_set_flag.exit_crit_edge
  %state3 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %12 = ptrtoint ptr %state3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %state3, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values)
  switch i32 %13, label %if.end7 [
    i32 2, label %cxgbi_sock_set_flag.exit.return_crit_edge
    i32 0, label %cxgbi_sock_set_flag.exit.return_crit_edge47
  ]

cxgbi_sock_set_flag.exit.return_crit_edge47:      ; preds = %cxgbi_sock_set_flag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

cxgbi_sock_set_flag.exit.return_crit_edge:        ; preds = %cxgbi_sock_set_flag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end7:                                          ; preds = %cxgbi_sock_set_flag.exit
  %sin_port = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 30, i32 0, i32 1
  %15 = ptrtoint ptr %sin_port to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %sin_port, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %tobool8.not = icmp eq i16 %16, 0
  br i1 %tobool8.not, label %if.end7.if.end10_crit_edge, label %if.then3.i

if.end7.if.end10_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then3.i:                                       ; preds = %if.end7
  %17 = ptrtoint ptr %csk to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %csk, align 4
  %conv.i = zext i16 %16 to i32
  %sport_base.i = getelementptr inbounds %struct.cxgbi_device, ptr %18, i32 0, i32 21, i32 2
  %19 = ptrtoint ptr %sport_base.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %sport_base.i, align 4
  %conv4.i = zext i16 %20 to i32
  %sub.i = sub nsw i32 %conv.i, %conv4.i
  %21 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 0, ptr %sin_port, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp5.i = icmp slt i32 %sub.i, 0
  br i1 %cmp5.i, label %if.then3.i.do.end.i33_crit_edge, label %lor.lhs.false.i

if.then3.i.do.end.i33_crit_edge:                  ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i33

lor.lhs.false.i:                                  ; preds = %if.then3.i
  %pmap2.i = getelementptr inbounds %struct.cxgbi_device, ptr %18, i32 0, i32 21
  %22 = ptrtoint ptr %pmap2.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pmap2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %23)
  %cmp7.not.i = icmp ult i32 %sub.i, %23
  br i1 %cmp7.not.i, label %if.end13.i, label %lor.lhs.false.i.do.end.i33_crit_edge

lor.lhs.false.i.do.end.i33_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i33

do.end.i33:                                       ; preds = %lor.lhs.false.i.do.end.i33_crit_edge, %if.then3.i.do.end.i33_crit_edge
  %port_id.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 12
  %24 = ptrtoint ptr %port_id.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %port_id.i, align 4
  %conv10.i = zext i8 %25 to i32
  %ports.i = getelementptr inbounds %struct.cxgbi_device, ptr %18, i32 0, i32 3
  %26 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ports.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %27, i32 %conv10.i
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx.i, align 4
  %call.i32 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.247, ptr noundef nonnull @.str.248, ptr noundef %18, i32 noundef %conv10.i, ptr noundef %29, i32 noundef 0) #21
  br label %if.end10

if.end13.i:                                       ; preds = %lor.lhs.false.i
  %lock.i = getelementptr inbounds %struct.cxgbi_device, ptr %18, i32 0, i32 21, i32 3
  tail call void @_raw_spin_lock_bh(ptr noundef %lock.i) #17
  %port_csk.i = getelementptr inbounds %struct.cxgbi_device, ptr %18, i32 0, i32 21, i32 5
  %30 = ptrtoint ptr %port_csk.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %port_csk.i, align 4
  %arrayidx14.i = getelementptr ptr, ptr %31, i32 %sub.i
  %32 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %arrayidx14.i, align 4
  %used.i = getelementptr inbounds %struct.cxgbi_device, ptr %18, i32 0, i32 21, i32 1
  %33 = ptrtoint ptr %used.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %used.i, align 4
  %dec.i = add i32 %34, -1
  store i32 %dec.i, ptr %used.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  %35 = load i32, ptr @dbg_level, align 4
  %and.i34 = and i32 %35, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i34)
  %tobool17.not.i = icmp eq i32 %and.i34, 0
  br i1 %tobool17.not.i, label %if.end13.i.do.end36.i_crit_edge, label %do.end21.i

if.end13.i.do.end36.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end36.i

do.end21.i:                                       ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #19
  %port_id23.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 12
  %36 = ptrtoint ptr %port_id23.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %port_id23.i, align 4
  %conv24.i = zext i8 %37 to i32
  %ports25.i = getelementptr inbounds %struct.cxgbi_device, ptr %18, i32 0, i32 3
  %38 = ptrtoint ptr %ports25.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ports25.i, align 4
  %arrayidx28.i = getelementptr ptr, ptr %39, i32 %conv24.i
  %40 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx28.i, align 4
  %42 = ptrtoint ptr %sport_base.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %sport_base.i, align 4
  %conv32.i = zext i16 %43 to i32
  %add.i = add nuw nsw i32 %sub.i, %conv32.i
  %call33.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.250, ptr noundef nonnull @.str.248, ptr noundef %18, i32 noundef %conv24.i, ptr noundef %41, i32 noundef %add.i) #21
  br label %do.end36.i

do.end36.i:                                       ; preds = %do.end21.i, %if.end13.i.do.end36.i_crit_edge
  tail call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.248, ptr noundef %csk) #17
  br label %if.end10

if.end10:                                         ; preds = %do.end36.i, %do.end.i33, %if.end7.if.end10_crit_edge
  %dst = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 32
  %44 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %dst, align 4
  %tobool11.not = icmp eq ptr %45, null
  br i1 %tobool11.not, label %if.end10.if.end14_crit_edge, label %if.then12

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @dst_release(ptr noundef nonnull %45) #17
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10.if.end14_crit_edge
  %46 = ptrtoint ptr %csk to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %csk, align 4
  %csk_release_offload_resources = getelementptr inbounds %struct.cxgbi_device, ptr %47, i32 0, i32 28
  %48 = ptrtoint ptr %csk_release_offload_resources to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %csk_release_offload_resources, align 4
  tail call void %49(ptr noundef %csk) #17
  %50 = load i32, ptr @dbg_level, align 4
  %and.i35 = and i32 %50, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i35)
  %tobool.not.i36 = icmp eq i32 %and.i35, 0
  br i1 %tobool.not.i36, label %if.end14.cxgbi_sock_set_state.exit_crit_edge, label %do.end.i39

if.end14.cxgbi_sock_set_state.exit_crit_edge:     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_state.exit

do.end.i39:                                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  %51 = ptrtoint ptr %state3 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %state3, align 4
  %53 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %flags.i, align 4
  %call.i38 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %csk, i32 noundef %52, i32 noundef %54, i32 noundef 0) #21
  br label %cxgbi_sock_set_state.exit

cxgbi_sock_set_state.exit:                        ; preds = %do.end.i39, %if.end14.cxgbi_sock_set_state.exit_crit_edge
  %55 = ptrtoint ptr %state3 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %state3, align 4
  %56 = load i32, ptr @dbg_level, align 4
  %and.i40 = and i32 %56, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40)
  %tobool.not.i41 = icmp eq i32 %and.i40, 0
  br i1 %tobool.not.i41, label %cxgbi_sock_set_state.exit.if.then4.i_crit_edge, label %do.end2.i

cxgbi_sock_set_state.exit.if.then4.i_crit_edge:   ; preds = %cxgbi_sock_set_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4.i

do.end2.i:                                        ; preds = %cxgbi_sock_set_state.exit
  %57 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %flags.i, align 4
  %user_data.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 39
  %59 = ptrtoint ptr %user_data.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %user_data.i, align 4
  %call.i44 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.252, ptr noundef nonnull @.str.253, ptr noundef %csk, i32 noundef 0, i32 noundef %58, ptr noundef %60) #21
  %61 = ptrtoint ptr %state3 to i32
  call void @__asan_load4_noabort(i32 %61)
  %.pr = load i32, ptr %state3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %.pr)
  %cmp.not.i = icmp eq i32 %.pr, 3
  br i1 %cmp.not.i, label %do.end2.i.cxgbi_inform_iscsi_conn_closing.exit_crit_edge, label %do.end2.i.if.then4.i_crit_edge

do.end2.i.if.then4.i_crit_edge:                   ; preds = %do.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4.i

do.end2.i.cxgbi_inform_iscsi_conn_closing.exit_crit_edge: ; preds = %do.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_inform_iscsi_conn_closing.exit

if.then4.i:                                       ; preds = %do.end2.i.if.then4.i_crit_edge, %cxgbi_sock_set_state.exit.if.then4.i_crit_edge
  %callback_lock.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 38
  tail call void @_raw_read_lock_bh(ptr noundef %callback_lock.i) #17
  %user_data5.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 39
  %62 = ptrtoint ptr %user_data5.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %user_data5.i, align 4
  %tobool6.not.i = icmp eq ptr %63, null
  br i1 %tobool6.not.i, label %if.then4.i.if.end9.i_crit_edge, label %if.then7.i

if.then4.i.if.end9.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end9.i

if.then7.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @iscsi_conn_failure(ptr noundef nonnull %63, i32 noundef 1020) #17
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then7.i, %if.then4.i.if.end9.i_crit_edge
  tail call void @_raw_read_unlock_bh(ptr noundef %callback_lock.i) #17
  br label %cxgbi_inform_iscsi_conn_closing.exit

cxgbi_inform_iscsi_conn_closing.exit:             ; preds = %if.end9.i, %do.end2.i.cxgbi_inform_iscsi_conn_closing.exit_crit_edge
  tail call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.42, ptr noundef %csk)
  br label %return

return:                                           ; preds = %cxgbi_inform_iscsi_conn_closing.exit, %cxgbi_sock_set_flag.exit.return_crit_edge, %cxgbi_sock_set_flag.exit.return_crit_edge47
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__cxgbi_sock_put(ptr noundef %fn, ptr noundef %csk) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %refcnt = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 27
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #17
  %1 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %refcnt, align 4
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.234, ptr noundef nonnull @.str.235, ptr noundef %fn, ptr noundef %csk, i32 noundef %2) #21
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  %refcnt4 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 27
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !886
  tail call void @llvm.prefetch.p0(ptr %refcnt4, i32 1, i32 3, i32 1) #17
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4, ptr %refcnt4, i32 1, ptr elementtype(i32) %refcnt4) #17, !srcloc !887
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %do.end3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !888

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %refcnt4, i32 noundef 3) #17
  br label %kref_put.exit

if.then.i:                                        ; preds = %do.end3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !889
  %tobool.not.i.i = icmp eq ptr %csk, null
  br i1 %tobool.not.i.i, label %if.then.i.kref_put.exit_crit_edge, label %do.body.i.i

if.then.i.kref_put.exit_crit_edge:                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %kref_put.exit

do.body.i.i:                                      ; preds = %if.then.i
  %4 = load i32, ptr @dbg_level, align 4
  %and.i.i = and i32 %4, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool1.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool1.not.i.i, label %do.body.i.i.do.end6.i.i_crit_edge, label %do.end.i.i

do.body.i.i.do.end6.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end6.i.i

do.end.i.i:                                       ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %state.i.i = getelementptr %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %5 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %state.i.i, align 4
  %flags.i.i = getelementptr %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %7 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i.i, align 4
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.236, ptr noundef nonnull @.str.237, ptr noundef nonnull %csk, i32 noundef %6, i32 noundef %8) #21
  br label %do.end6.i.i

do.end6.i.i:                                      ; preds = %do.end.i.i, %do.body.i.i.do.end6.i.i_crit_edge
  tail call void @kfree(ptr noundef nonnull %csk) #17
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %do.end6.i.i, %if.then.i.kref_put.exit_crit_edge, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cxgbi_device_register(i32 noundef %extra, i32 noundef %nports) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %extra, 212
  %mul = shl i32 %nports, 3
  %add1 = add i32 %add, %mul
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add1, i32 noundef 3520) #20
  %tobool.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.10, i32 noundef %nports) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.ptr = getelementptr %struct.cxgbi_device, ptr %call9.i.i, i32 1
  %ports = getelementptr inbounds %struct.cxgbi_device, ptr %call9.i.i, i32 0, i32 3
  %0 = ptrtoint ptr %ports to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %add.ptr, ptr %ports, align 4
  %mul4 = shl i32 %nports, 2
  %add.ptr5 = getelementptr i8, ptr %add.ptr, i32 %mul4
  %hbas = getelementptr inbounds %struct.cxgbi_device, ptr %call9.i.i, i32 0, i32 5
  %1 = ptrtoint ptr %hbas to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %add.ptr5, ptr %hbas, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %extra)
  %tobool6.not = icmp eq i32 %extra, 0
  br i1 %tobool6.not, label %if.end.do.body12_crit_edge, label %if.then7

if.end.do.body12_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body12

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr10 = getelementptr i8, ptr %add.ptr5, i32 %mul4
  %dd_data = getelementptr inbounds %struct.cxgbi_device, ptr %call9.i.i, i32 0, i32 36
  %2 = ptrtoint ptr %dd_data to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %add.ptr10, ptr %dd_data, align 16
  br label %do.body12

do.body12:                                        ; preds = %if.then7, %if.end.do.body12_crit_edge
  %lock = getelementptr inbounds %struct.cxgbi_device, ptr %call9.i.i, i32 0, i32 21, i32 3
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.11, ptr noundef nonnull @cxgbi_device_register.__key, i16 noundef signext 3) #17
  tail call void @mutex_lock_nested(ptr noundef nonnull @cdev_mutex, i32 noundef 0) #17
  %3 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @cdev_list, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call9.i.i, ptr noundef %3, ptr noundef nonnull @cdev_list) #17
  br i1 %call.i.i, label %if.end.i.i43, label %do.body12.list_add_tail.exit_crit_edge

do.body12.list_add_tail.exit_crit_edge:           ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add_tail.exit

if.end.i.i43:                                     ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #19
  store ptr %call9.i.i, ptr getelementptr inbounds (%struct.list_head, ptr @cdev_list, i32 0, i32 1), align 4
  %4 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @cdev_list, ptr %call9.i.i, align 128
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call9.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %3, ptr %prev3.i.i, align 4
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %call9.i.i, ptr %3, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i43, %do.body12.list_add_tail.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  tail call void @_raw_spin_lock(ptr noundef nonnull @cdev_rcu_lock) #17
  %rcu_node = getelementptr inbounds %struct.cxgbi_device, ptr %call9.i.i, i32 0, i32 1
  %7 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @cdev_rcu_list, i32 0, i32 1), align 4
  %call.i.i44 = tail call zeroext i1 @__list_add_valid(ptr noundef %rcu_node, ptr noundef %7, ptr noundef nonnull @cdev_rcu_list) #17
  br i1 %call.i.i44, label %if.end.i.i45, label %list_add_tail.exit.list_add_tail_rcu.exit_crit_edge

list_add_tail.exit.list_add_tail_rcu.exit_crit_edge: ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add_tail_rcu.exit

if.end.i.i45:                                     ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %rcu_node to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @cdev_rcu_list, ptr %rcu_node, align 8
  %prev2.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %call9.i.i, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %7, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !890
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %rcu_node, ptr %7, align 4
  store ptr %rcu_node, ptr getelementptr inbounds (%struct.list_head, ptr @cdev_rcu_list, i32 0, i32 1), align 4
  br label %list_add_tail_rcu.exit

list_add_tail_rcu.exit:                           ; preds = %if.end.i.i45, %list_add_tail.exit.list_add_tail_rcu.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @cdev_rcu_lock) #17
  %11 = load i32, ptr @dbg_level, align 4
  %and = and i32 %11, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool17.not = icmp eq i32 %and, 0
  br i1 %tobool17.not, label %list_add_tail_rcu.exit.cleanup_crit_edge, label %do.end21

list_add_tail_rcu.exit.cleanup_crit_edge:         ; preds = %list_add_tail_rcu.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end21:                                         ; preds = %list_add_tail_rcu.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.13, ptr noundef nonnull @.str.10, ptr noundef nonnull %call9.i.i, i32 noundef %nports) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end21, %list_add_tail_rcu.exit.cleanup_crit_edge, %do.end
  %retval.0 = phi ptr [ null, %do.end ], [ %call9.i.i, %do.end21 ], [ %call9.i.i, %list_add_tail_rcu.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_device_unregister(ptr noundef %cdev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end5_crit_edge, label %do.end

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end5

do.end:                                           ; preds = %entry
  %nports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 8
  %1 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %nports, align 1
  %conv = zext i8 %2 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool4.not = icmp eq i8 %2, 0
  br i1 %tobool4.not, label %do.end.cond.end_crit_edge, label %cond.true

do.end.cond.end_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.true:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  %ports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 3
  %3 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ports, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %do.end.cond.end_crit_edge
  %cond = phi ptr [ %6, %cond.true ], [ @.str.17, %do.end.cond.end_crit_edge ]
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef nonnull @.str.16, ptr noundef %cdev, i32 noundef %conv, ptr noundef %cond) #21
  br label %do.end5

do.end5:                                          ; preds = %cond.end, %entry.do.end5_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @cdev_mutex, i32 noundef 0) #17
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %cdev) #17
  br i1 %call.i.i, label %if.end.i.i, label %do.end5.list_del.exit_crit_edge

do.end5.list_del.exit_crit_edge:                  ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit

if.end.i.i:                                       ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %cdev, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %cdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cdev, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %do.end5.list_del.exit_crit_edge
  %13 = ptrtoint ptr %cdev to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 256 to ptr), ptr %cdev, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %cdev, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  tail call void @_raw_spin_lock(ptr noundef nonnull @cdev_rcu_lock) #17
  %rcu_node = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 1
  %call.i.i12 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %rcu_node) #17
  br i1 %call.i.i12, label %if.end.i.i15, label %list_del.exit.list_del_rcu.exit_crit_edge

list_del.exit.list_del_rcu.exit_crit_edge:        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del_rcu.exit

if.end.i.i15:                                     ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i13 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 1, i32 1
  %15 = ptrtoint ptr %prev.i.i13 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i13, align 4
  %17 = ptrtoint ptr %rcu_node to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rcu_node, align 4
  %prev1.i.i.i14 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i14 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i14, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i15, %list_del.exit.list_del_rcu.exit_crit_edge
  %prev.i16 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 1, i32 1
  %21 = ptrtoint ptr %prev.i16 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i16, align 4
  tail call void @_raw_spin_unlock(ptr noundef nonnull @cdev_rcu_lock) #17
  tail call void @synchronize_rcu() #17
  %22 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %22, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %list_del_rcu.exit.do.end2.i_crit_edge, label %do.end.i

list_del_rcu.exit.do.end2.i_crit_edge:            ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end2.i

do.end.i:                                         ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #19
  %nports.i = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 8
  %23 = ptrtoint ptr %nports.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %nports.i, align 1
  %conv.i = zext i8 %24 to i32
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.13, ptr noundef nonnull @.str.241, ptr noundef %cdev, i32 noundef %conv.i) #21
  br label %do.end2.i

do.end2.i:                                        ; preds = %do.end.i, %list_del_rcu.exit.do.end2.i_crit_edge
  %25 = load i32, ptr @dbg_level, align 4
  %and.i.i = and i32 %25, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.end2.i.do.end3.i.i_crit_edge, label %do.end.i.i

do.end2.i.do.end3.i.i_crit_edge:                  ; preds = %do.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i.i

do.end.i.i:                                       ; preds = %do.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  %nports.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 8
  %26 = ptrtoint ptr %nports.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %nports.i.i, align 1
  %conv.i.i = zext i8 %27 to i32
  %call.i.i17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, ptr noundef nonnull @.str.30, ptr noundef %cdev, i32 noundef %conv.i.i) #21
  br label %do.end3.i.i

do.end3.i.i:                                      ; preds = %do.end.i.i, %do.end2.i.do.end3.i.i_crit_edge
  %nports4.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 8
  %28 = ptrtoint ptr %nports4.i.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %nports4.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %cmp24.not.i.i = icmp eq i8 %29, 0
  br i1 %cmp24.not.i.i, label %do.end3.i.i.cxgbi_hbas_remove.exit.i_crit_edge, label %for.body.lr.ph.i.i

do.end3.i.i.cxgbi_hbas_remove.exit.i_crit_edge:   ; preds = %do.end3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_hbas_remove.exit.i

for.body.lr.ph.i.i:                               ; preds = %do.end3.i.i
  %hbas.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 5
  %pdev.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 9
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.025.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %30 = ptrtoint ptr %hbas.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %hbas.i.i, align 4
  %arrayidx.i.i = getelementptr ptr, ptr %31, i32 %i.025.i.i
  %32 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %33, null
  br i1 %tobool7.not.i.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.then8.i.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i.i

if.then8.i.i:                                     ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %34 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %arrayidx.i.i, align 4
  %shost.i.i = getelementptr inbounds %struct.cxgbi_hba, ptr %33, i32 0, i32 2
  %35 = ptrtoint ptr %shost.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %shost.i.i, align 4
  tail call void @iscsi_host_remove(ptr noundef %36) #17
  %37 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pdev.i.i, align 4
  tail call void @pci_dev_put(ptr noundef %38) #17
  %39 = ptrtoint ptr %shost.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %shost.i.i, align 4
  tail call void @iscsi_host_free(ptr noundef %40) #17
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then8.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %i.025.i.i, 1
  %41 = ptrtoint ptr %nports4.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %nports4.i.i, align 1
  %conv5.i.i = zext i8 %42 to i32
  %cmp.i.i = icmp ult i32 %inc.i.i, %conv5.i.i
  br i1 %cmp.i.i, label %for.inc.i.i.for.body.i.i_crit_edge, label %for.inc.i.i.cxgbi_hbas_remove.exit.i_crit_edge

for.inc.i.i.cxgbi_hbas_remove.exit.i_crit_edge:   ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_hbas_remove.exit.i

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i

cxgbi_hbas_remove.exit.i:                         ; preds = %for.inc.i.i.cxgbi_hbas_remove.exit.i_crit_edge, %do.end3.i.i.cxgbi_hbas_remove.exit.i_crit_edge
  tail call void @cxgbi_device_portmap_cleanup(ptr noundef %cdev) #17
  %cdev2ppm.i = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 23
  %43 = ptrtoint ptr %cdev2ppm.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %cdev2ppm.i, align 4
  %tobool3.not.i = icmp eq ptr %44, null
  br i1 %tobool3.not.i, label %cxgbi_hbas_remove.exit.i.if.end8.i_crit_edge, label %if.then4.i

cxgbi_hbas_remove.exit.i.if.end8.i_crit_edge:     ; preds = %cxgbi_hbas_remove.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8.i

if.then4.i:                                       ; preds = %cxgbi_hbas_remove.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %call6.i = tail call ptr %44(ptr noundef %cdev) #17
  %call7.i = tail call i32 @cxgbi_ppm_release(ptr noundef %call6.i) #17
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then4.i, %cxgbi_hbas_remove.exit.i.if.end8.i_crit_edge
  %pmap.i = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 21
  %45 = ptrtoint ptr %pmap.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %pmap.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool9.not.i = icmp eq i32 %46, 0
  br i1 %tobool9.not.i, label %if.end8.i.cxgbi_device_destroy.exit_crit_edge, label %if.then10.i

if.end8.i.cxgbi_device_destroy.exit_crit_edge:    ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_device_destroy.exit

if.then10.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  %port_csk.i = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 21, i32 5
  %47 = ptrtoint ptr %port_csk.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %port_csk.i, align 4
  tail call void @kvfree(ptr noundef %48) #17
  br label %cxgbi_device_destroy.exit

cxgbi_device_destroy.exit:                        ; preds = %if.then10.i, %if.end8.i.cxgbi_device_destroy.exit_crit_edge
  tail call void @kfree(ptr noundef %cdev) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_device_unregister_all(i32 noundef %flag) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @cdev_mutex, i32 noundef 0) #17
  %0 = load ptr, ptr @cdev_list, align 4
  %cmp.not18 = icmp eq ptr %0, @cdev_list
  br i1 %cmp.not18, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %cdev.019 = phi ptr [ %tmp.020, %for.inc.for.body_crit_edge ], [ %0, %entry.for.body_crit_edge ]
  %1 = ptrtoint ptr %cdev.019 to i32
  call void @__asan_load4_noabort(i32 %1)
  %tmp.020 = load ptr, ptr %cdev.019, align 4
  %flags = getelementptr inbounds %struct.cxgbi_device, ptr %cdev.019, i32 0, i32 2
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, %flag
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %flag)
  %cmp6 = icmp eq i32 %and, %flag
  br i1 %cmp6, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  tail call void @cxgbi_device_unregister(ptr noundef %cdev.019)
  tail call void @mutex_lock_nested(ptr noundef nonnull @cdev_mutex, i32 noundef 0) #17
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %tmp.020, @cdev_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cxgbi_device_find_by_lldev(ptr noundef %lldev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @cdev_mutex, i32 noundef 0) #17
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %cdev.0.in = phi ptr [ @cdev_list, %entry ], [ %cdev.0, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %cdev.0.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %cdev.0 = load ptr, ptr %cdev.0.in, align 4
  %cmp.not = icmp eq ptr %cdev.0, @cdev_list
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %lldev6 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev.0, i32 0, i32 4
  %1 = ptrtoint ptr %lldev6 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %lldev6, align 4
  %cmp7 = icmp eq ptr %2, %lldev
  br i1 %cmp7, label %if.then, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  br label %cleanup

for.end:                                          ; preds = %for.cond
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  %3 = load i32, ptr @dbg_level, align 4
  %and = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.end.cleanup_crit_edge, label %do.end

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end:                                           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.18, ptr noundef nonnull @.str.19, ptr noundef %lldev) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end, %for.end.cleanup_crit_edge, %if.then
  %retval.0 = phi ptr [ %cdev.0, %if.then ], [ null, %do.end ], [ null, %for.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cxgbi_device_find_by_netdev(ptr noundef %ndev, ptr noundef writeonly %port) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %priv_flags.i = getelementptr inbounds %struct.net_device, ptr %ndev, i32 0, i32 15
  %0 = ptrtoint ptr %priv_flags.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %priv_flags.i, align 16
  %and.i = and i64 %1, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end10_crit_edge, label %if.then

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then:                                          ; preds = %entry
  %call1 = tail call ptr @vlan_dev_real_dev(ptr noundef %ndev) #17
  %2 = load i32, ptr @dbg_level, align 4
  %and = and i32 %2, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then.if.end10_crit_edge, label %do.end

if.then.if.end10_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.21, ptr noundef %ndev, ptr noundef %call1) #21
  br label %if.end10

if.end10:                                         ; preds = %do.end, %if.then.if.end10_crit_edge, %entry.if.end10_crit_edge
  %vdev.0 = phi ptr [ %ndev, %do.end ], [ %ndev, %if.then.if.end10_crit_edge ], [ null, %entry.if.end10_crit_edge ]
  %ndev.addr.0 = phi ptr [ %call1, %do.end ], [ %call1, %if.then.if.end10_crit_edge ], [ %ndev, %entry.if.end10_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @cdev_mutex, i32 noundef 0) #17
  %3 = load ptr, ptr @cdev_list, align 4
  %cmp.not76 = icmp eq ptr %3, @cdev_list
  br i1 %cmp.not76, label %if.end10.for.end35_crit_edge, label %if.end10.for.cond16.preheader_crit_edge

if.end10.for.cond16.preheader_crit_edge:          ; preds = %if.end10
  br label %for.cond16.preheader

if.end10.for.end35_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end35

for.cond.loopexit:                                ; preds = %for.inc.for.cond.loopexit_crit_edge, %for.cond16.preheader.for.cond.loopexit_crit_edge
  %cmp.not = icmp eq ptr %tmp.078, @cdev_list
  br i1 %cmp.not, label %for.cond.loopexit.for.end35_crit_edge, label %for.cond.loopexit.for.cond16.preheader_crit_edge

for.cond.loopexit.for.cond16.preheader_crit_edge: ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond16.preheader

for.cond.loopexit.for.end35_crit_edge:            ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end35

for.cond16.preheader:                             ; preds = %for.cond.loopexit.for.cond16.preheader_crit_edge, %if.end10.for.cond16.preheader_crit_edge
  %cdev.077 = phi ptr [ %tmp.078, %for.cond.loopexit.for.cond16.preheader_crit_edge ], [ %3, %if.end10.for.cond16.preheader_crit_edge ]
  %4 = ptrtoint ptr %cdev.077 to i32
  call void @__asan_load4_noabort(i32 %4)
  %tmp.078 = load ptr, ptr %cdev.077, align 4
  %nports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev.077, i32 0, i32 8
  %5 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %nports, align 1
  %conv = zext i8 %6 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %cmp1773.not = icmp eq i8 %6, 0
  br i1 %cmp1773.not, label %for.cond16.preheader.for.cond.loopexit_crit_edge, label %for.body19.lr.ph

for.cond16.preheader.for.cond.loopexit_crit_edge: ; preds = %for.cond16.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.loopexit

for.body19.lr.ph:                                 ; preds = %for.cond16.preheader
  %ports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev.077, i32 0, i32 3
  %7 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ports, align 4
  br label %for.body19

for.body19:                                       ; preds = %for.inc.for.body19_crit_edge, %for.body19.lr.ph
  %i.074 = phi i32 [ 0, %for.body19.lr.ph ], [ %inc, %for.inc.for.body19_crit_edge ]
  %arrayidx = getelementptr ptr, ptr %8, i32 %i.074
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 4
  %cmp20 = icmp eq ptr %ndev.addr.0, %10
  br i1 %cmp20, label %if.then22, label %for.inc

if.then22:                                        ; preds = %for.body19
  %hbas = getelementptr inbounds %struct.cxgbi_device, ptr %cdev.077, i32 0, i32 5
  %11 = ptrtoint ptr %hbas to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hbas, align 4
  %arrayidx23 = getelementptr ptr, ptr %12, i32 %i.074
  %13 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx23, align 4
  %vdev24 = getelementptr inbounds %struct.cxgbi_hba, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %vdev24 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %vdev.0, ptr %vdev24, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  %tobool25.not = icmp eq ptr %port, null
  br i1 %tobool25.not, label %if.then22.cleanup_crit_edge, label %if.then26

if.then22.cleanup_crit_edge:                      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then26:                                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #19
  %16 = ptrtoint ptr %port to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %i.074, ptr %port, align 4
  br label %cleanup

for.inc:                                          ; preds = %for.body19
  %inc = add nuw nsw i32 %i.074, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.inc.for.cond.loopexit_crit_edge, label %for.inc.for.body19_crit_edge

for.inc.for.body19_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body19

for.inc.for.cond.loopexit_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.loopexit

for.end35:                                        ; preds = %for.cond.loopexit.for.end35_crit_edge, %if.end10.for.end35_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  %17 = load i32, ptr @dbg_level, align 4
  %and37 = and i32 %17, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37)
  %tobool38.not = icmp eq i32 %and37, 0
  br i1 %tobool38.not, label %for.end35.cleanup_crit_edge, label %do.end42

for.end35.cleanup_crit_edge:                      ; preds = %for.end35
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end42:                                         ; preds = %for.end35
  call void @__sanitizer_cov_trace_pc() #19
  %call46 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.21, ptr noundef %ndev.addr.0, ptr noundef %ndev.addr.0) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end42, %for.end35.cleanup_crit_edge, %if.then26, %if.then22.cleanup_crit_edge
  %retval.0 = phi ptr [ %cdev.077, %if.then26 ], [ %cdev.077, %if.then22.cleanup_crit_edge ], [ null, %do.end42 ], [ null, %for.end35.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @vlan_dev_real_dev(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cxgbi_device_find_by_netdev_rcu(ptr noundef %ndev, ptr noundef writeonly %port) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %priv_flags.i = getelementptr inbounds %struct.net_device, ptr %ndev, i32 0, i32 15
  %0 = ptrtoint ptr %priv_flags.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %priv_flags.i, align 16
  %and.i = and i64 %1, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call1 = tail call ptr @vlan_dev_real_dev(ptr noundef %ndev) #17
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.25, ptr noundef %ndev, ptr noundef %call1) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %vdev.0 = phi ptr [ %ndev, %if.then ], [ null, %entry.if.end_crit_edge ]
  %ndev.addr.0 = phi ptr [ %call1, %if.then ], [ %ndev, %entry.if.end_crit_edge ]
  %2 = tail call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !891
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.242, i32 noundef 696, ptr noundef nonnull @.str.243) #17
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %call6 = tail call i32 @rcu_read_lock_any_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end14_crit_edge

rcu_read_lock.exit.do.end14_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end14

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call7 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true.do.end14_crit_edge, label %land.lhs.true9

land.lhs.true.do.end14_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end14

land.lhs.true9:                                   ; preds = %land.lhs.true
  %.b75 = load i1, ptr @cxgbi_device_find_by_netdev_rcu.__warned, align 1
  br i1 %.b75, label %land.lhs.true9.do.end14_crit_edge, label %if.then11

land.lhs.true9.do.end14_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end14

if.then11:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cxgbi_device_find_by_netdev_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.5, i32 noundef 267, ptr noundef nonnull @.str.26) #17
  br label %do.end14

do.end14:                                         ; preds = %if.then11, %land.lhs.true9.do.end14_crit_edge, %land.lhs.true.do.end14_crit_edge, %rcu_read_lock.exit.do.end14_crit_edge
  %.pn101 = load volatile ptr, ptr @cdev_rcu_list, align 4
  %cmp.not102 = icmp eq ptr %.pn101, @cdev_rcu_list
  br i1 %cmp.not102, label %do.end14.for.end42_crit_edge, label %do.end14.for.cond20.preheader_crit_edge

do.end14.for.cond20.preheader_crit_edge:          ; preds = %do.end14
  br label %for.cond20.preheader

do.end14.for.end42_crit_edge:                     ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end42

for.cond.loopexit:                                ; preds = %for.inc.for.cond.loopexit_crit_edge, %for.cond20.preheader.for.cond.loopexit_crit_edge
  %6 = ptrtoint ptr %.pn103 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn = load volatile ptr, ptr %.pn103, align 4
  %cmp.not = icmp eq ptr %.pn, @cdev_rcu_list
  br i1 %cmp.not, label %for.cond.loopexit.for.end42_crit_edge, label %for.cond.loopexit.for.cond20.preheader_crit_edge

for.cond.loopexit.for.cond20.preheader_crit_edge: ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond20.preheader

for.cond.loopexit.for.end42_crit_edge:            ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end42

for.cond20.preheader:                             ; preds = %for.cond.loopexit.for.cond20.preheader_crit_edge, %do.end14.for.cond20.preheader_crit_edge
  %.pn103 = phi ptr [ %.pn, %for.cond.loopexit.for.cond20.preheader_crit_edge ], [ %.pn101, %do.end14.for.cond20.preheader_crit_edge ]
  %nports = getelementptr i8, ptr %.pn103, i32 29
  %7 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %nports, align 1
  %conv = zext i8 %8 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %cmp2199.not = icmp eq i8 %8, 0
  br i1 %cmp2199.not, label %for.cond20.preheader.for.cond.loopexit_crit_edge, label %for.body23.lr.ph

for.cond20.preheader.for.cond.loopexit_crit_edge: ; preds = %for.cond20.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.loopexit

for.body23.lr.ph:                                 ; preds = %for.cond20.preheader
  %ports = getelementptr i8, ptr %.pn103, i32 12
  %9 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ports, align 4
  br label %for.body23

for.body23:                                       ; preds = %for.inc.for.body23_crit_edge, %for.body23.lr.ph
  %i.0100 = phi i32 [ 0, %for.body23.lr.ph ], [ %inc, %for.inc.for.body23_crit_edge ]
  %arrayidx = getelementptr ptr, ptr %10, i32 %i.0100
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx, align 4
  %cmp24 = icmp eq ptr %ndev.addr.0, %12
  br i1 %cmp24, label %if.then26, label %for.inc

if.then26:                                        ; preds = %for.body23
  %cdev.0.le = getelementptr i8, ptr %.pn103, i32 -8
  %hbas = getelementptr i8, ptr %.pn103, i32 20
  %13 = ptrtoint ptr %hbas to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hbas, align 4
  %arrayidx27 = getelementptr ptr, ptr %14, i32 %i.0100
  %15 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx27, align 4
  %vdev28 = getelementptr inbounds %struct.cxgbi_hba, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %vdev28 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %vdev.0, ptr %vdev28, align 4
  %call.i76 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i76, label %if.then26.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i79

if.then26.rcu_read_unlock.exit_crit_edge:         ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true.i79:                                ; preds = %if.then26
  %call1.i77 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i77)
  %tobool.not.i78 = icmp eq i32 %call1.i77, 0
  br i1 %tobool.not.i78, label %land.lhs.true.i79.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i81

land.lhs.true.i79.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i79
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true2.i81:                               ; preds = %land.lhs.true.i79
  %.b4.i80 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i80, label %land.lhs.true2.i81.rcu_read_unlock.exit_crit_edge, label %if.then.i82

land.lhs.true2.i81.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i81
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

if.then.i82:                                      ; preds = %land.lhs.true2.i81
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.242, i32 noundef 724, ptr noundef nonnull @.str.244) #17
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i82, %land.lhs.true2.i81.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i79.rcu_read_unlock.exit_crit_edge, %if.then26.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !892
  %18 = tail call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i.i.i83 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i.i83 to ptr
  %preempt_count.i.i.i.i84 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i.i.i84 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i.i.i84, align 4
  %sub.i.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i84, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  %tobool29.not = icmp eq ptr %port, null
  br i1 %tobool29.not, label %rcu_read_unlock.exit.cleanup_crit_edge, label %if.then30

rcu_read_unlock.exit.cleanup_crit_edge:           ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then30:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %port to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %i.0100, ptr %port, align 4
  br label %cleanup

for.inc:                                          ; preds = %for.body23
  %inc = add nuw nsw i32 %i.0100, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.inc.for.cond.loopexit_crit_edge, label %for.inc.for.body23_crit_edge

for.inc.for.body23_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body23

for.inc.for.cond.loopexit_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.loopexit

for.end42:                                        ; preds = %for.cond.loopexit.for.end42_crit_edge, %do.end14.for.end42_crit_edge
  %call.i85 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i85, label %for.end42.rcu_read_unlock.exit95_crit_edge, label %land.lhs.true.i88

for.end42.rcu_read_unlock.exit95_crit_edge:       ; preds = %for.end42
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit95

land.lhs.true.i88:                                ; preds = %for.end42
  %call1.i86 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i86)
  %tobool.not.i87 = icmp eq i32 %call1.i86, 0
  br i1 %tobool.not.i87, label %land.lhs.true.i88.rcu_read_unlock.exit95_crit_edge, label %land.lhs.true2.i90

land.lhs.true.i88.rcu_read_unlock.exit95_crit_edge: ; preds = %land.lhs.true.i88
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit95

land.lhs.true2.i90:                               ; preds = %land.lhs.true.i88
  %.b4.i89 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i89, label %land.lhs.true2.i90.rcu_read_unlock.exit95_crit_edge, label %if.then.i91

land.lhs.true2.i90.rcu_read_unlock.exit95_crit_edge: ; preds = %land.lhs.true2.i90
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit95

if.then.i91:                                      ; preds = %land.lhs.true2.i90
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.242, i32 noundef 724, ptr noundef nonnull @.str.244) #17
  br label %rcu_read_unlock.exit95

rcu_read_unlock.exit95:                           ; preds = %if.then.i91, %land.lhs.true2.i90.rcu_read_unlock.exit95_crit_edge, %land.lhs.true.i88.rcu_read_unlock.exit95_crit_edge, %for.end42.rcu_read_unlock.exit95_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !892
  %23 = tail call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i.i.i92 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i.i92 to ptr
  %preempt_count.i.i.i.i93 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i.i.i93 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i.i.i93, align 4
  %sub.i.i.i94 = add i32 %26, -1
  store volatile i32 %sub.i.i.i94, ptr %preempt_count.i.i.i.i93, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  %27 = load i32, ptr @dbg_level, align 4
  %and = and i32 %27, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool44.not = icmp eq i32 %and, 0
  br i1 %tobool44.not, label %rcu_read_unlock.exit95.cleanup_crit_edge, label %do.end48

rcu_read_unlock.exit95.cleanup_crit_edge:         ; preds = %rcu_read_unlock.exit95
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end48:                                         ; preds = %rcu_read_unlock.exit95
  call void @__sanitizer_cov_trace_pc() #19
  %call52 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.25, ptr noundef %ndev.addr.0, ptr noundef %ndev.addr.0) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end48, %rcu_read_unlock.exit95.cleanup_crit_edge, %if.then30, %rcu_read_unlock.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %cdev.0.le, %if.then30 ], [ %cdev.0.le, %rcu_read_unlock.exit.cleanup_crit_edge ], [ null, %do.end48 ], [ null, %rcu_read_unlock.exit95.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_hbas_remove(ptr noundef %cdev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %nports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 8
  %1 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %nports, align 1
  %conv = zext i8 %2 to i32
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, ptr noundef nonnull @.str.30, ptr noundef %cdev, i32 noundef %conv) #21
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  %nports4 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 8
  %3 = ptrtoint ptr %nports4 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %nports4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %cmp24.not = icmp eq i8 %4, 0
  br i1 %cmp24.not, label %do.end3.for.end_crit_edge, label %for.body.lr.ph

do.end3.for.end_crit_edge:                        ; preds = %do.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end3
  %hbas = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 5
  %pdev = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 9
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.025 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %5 = ptrtoint ptr %hbas to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hbas, align 4
  %arrayidx = getelementptr ptr, ptr %6, i32 %i.025
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %tobool7.not = icmp eq ptr %8, null
  br i1 %tobool7.not, label %for.body.for.inc_crit_edge, label %if.then8

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.then8:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %arrayidx, align 4
  %shost = getelementptr inbounds %struct.cxgbi_hba, ptr %8, i32 0, i32 2
  %10 = ptrtoint ptr %shost to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %shost, align 4
  tail call void @iscsi_host_remove(ptr noundef %11) #17
  %12 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev, align 4
  tail call void @pci_dev_put(ptr noundef %13) #17
  %14 = ptrtoint ptr %shost to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %shost, align 4
  tail call void @iscsi_host_free(ptr noundef %15) #17
  br label %for.inc

for.inc:                                          ; preds = %if.then8, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.025, 1
  %16 = ptrtoint ptr %nports4 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %nports4, align 1
  %conv5 = zext i8 %17 to i32
  %cmp = icmp ult i32 %inc, %conv5
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end3.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_host_remove(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_dev_put(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_host_free(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_hbas_add(ptr noundef %cdev, i64 noundef %max_lun, i32 noundef %max_conns, ptr noundef %sht, ptr noundef %stt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %nports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 8
  %1 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %nports, align 1
  %conv = zext i8 %2 to i32
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, ptr noundef nonnull @.str.31, ptr noundef %cdev, i32 noundef %conv) #21
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  %nports4 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 8
  %3 = ptrtoint ptr %nports4 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %nports4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %cmp110.not = icmp eq i8 %4, 0
  br i1 %cmp110.not, label %do.end3.cleanup_crit_edge, label %for.body.lr.ph

do.end3.cleanup_crit_edge:                        ; preds = %do.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body.lr.ph:                                   ; preds = %do.end3
  %sub = add i32 %max_conns, -1
  %ports19 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 3
  %can_queue = getelementptr inbounds %struct.scsi_host_template, ptr %sht, i32 0, i32 34
  %pdev = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 9
  %hbas = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %if.end55.for.body_crit_edge, %for.body.lr.ph
  %i.0111 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end55.for.body_crit_edge ]
  %call7 = tail call ptr @iscsi_host_alloc(ptr noundef %sht, i32 noundef 24, i1 noundef zeroext true) #17
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %do.end12, label %if.end15

do.end12:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %5 = ptrtoint ptr %ports19 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ports19, align 4
  %arrayidx = getelementptr ptr, ptr %6, i32 %i.0111
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, ptr noundef nonnull @.str.31, ptr noundef %cdev, i32 noundef %i.0111, ptr noundef %8) #21
  br label %err_out

if.end15:                                         ; preds = %for.body
  %transportt = getelementptr inbounds %struct.Scsi_Host, ptr %call7, i32 0, i32 12
  %9 = ptrtoint ptr %transportt to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %stt, ptr %transportt, align 4
  %max_lun16 = getelementptr inbounds %struct.Scsi_Host, ptr %call7, i32 0, i32 22
  %10 = ptrtoint ptr %max_lun16 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %max_lun, ptr %max_lun16, align 8
  %max_id = getelementptr inbounds %struct.Scsi_Host, ptr %call7, i32 0, i32 21
  %11 = ptrtoint ptr %max_id to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %sub, ptr %max_id, align 4
  %max_channel = getelementptr inbounds %struct.Scsi_Host, ptr %call7, i32 0, i32 20
  %12 = ptrtoint ptr %max_channel to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %max_channel, align 8
  %max_cmd_len = getelementptr inbounds %struct.Scsi_Host, ptr %call7, i32 0, i32 24
  %13 = ptrtoint ptr %max_cmd_len to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 260, ptr %max_cmd_len, align 4
  %add.ptr = getelementptr %struct.Scsi_Host, ptr %call7, i32 1, i32 5, i32 5, i32 1
  %cdev18 = getelementptr %struct.Scsi_Host, ptr %call7, i32 1, i32 5, i32 5, i32 3
  %14 = ptrtoint ptr %cdev18 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %cdev, ptr %cdev18, align 4
  %15 = ptrtoint ptr %ports19 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ports19, align 4
  %arrayidx20 = getelementptr ptr, ptr %16, i32 %i.0111
  %17 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx20, align 4
  %19 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %add.ptr, align 4
  %shost21 = getelementptr %struct.Scsi_Host, ptr %call7, i32 1, i32 5, i32 5, i32 2
  %20 = ptrtoint ptr %shost21 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call7, ptr %shost21, align 4
  %21 = ptrtoint ptr %can_queue to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %can_queue, align 8
  %sub22 = add i32 %22, -15
  %can_queue23 = getelementptr inbounds %struct.Scsi_Host, ptr %call7, i32 0, i32 26
  %23 = ptrtoint ptr %can_queue23 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %sub22, ptr %can_queue23, align 4
  %24 = load i32, ptr @dbg_level, align 4
  %and25 = and i32 %24, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %if.end15.do.end39_crit_edge, label %do.end30

if.end15.do.end39_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end39

do.end30:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  %25 = ptrtoint ptr %ports19 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ports19, align 4
  %arrayidx33 = getelementptr ptr, ptr %26, i32 %i.0111
  %27 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx33, align 4
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.31, ptr noundef %cdev, i32 noundef %i.0111, ptr noundef %28, ptr noundef %add.ptr) #21
  br label %do.end39

do.end39:                                         ; preds = %do.end30, %if.end15.do.end39_crit_edge
  %29 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pdev, align 4
  %call40 = tail call ptr @pci_dev_get(ptr noundef %30) #17
  %31 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %32, i32 0, i32 44
  %call42 = tail call i32 @iscsi_host_add(ptr noundef nonnull %call7, ptr noundef %dev) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %if.end55, label %do.end47

do.end47:                                         ; preds = %do.end39
  call void @__sanitizer_cov_trace_pc() #19
  %33 = ptrtoint ptr %ports19 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ports19, align 4
  %arrayidx50 = getelementptr ptr, ptr %34, i32 %i.0111
  %35 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx50, align 4
  %call53 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, ptr noundef nonnull @.str.31, ptr noundef %cdev, i32 noundef %i.0111, ptr noundef %36) #21
  %37 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pdev, align 4
  tail call void @pci_dev_put(ptr noundef %38) #17
  tail call void @scsi_host_put(ptr noundef nonnull %call7) #17
  br label %err_out

if.end55:                                         ; preds = %do.end39
  %39 = ptrtoint ptr %hbas to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %hbas, align 4
  %arrayidx56 = getelementptr ptr, ptr %40, i32 %i.0111
  %41 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %add.ptr, ptr %arrayidx56, align 4
  %inc = add nuw nsw i32 %i.0111, 1
  %42 = ptrtoint ptr %nports4 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %nports4, align 1
  %conv5 = zext i8 %43 to i32
  %cmp = icmp ult i32 %inc, %conv5
  br i1 %cmp, label %if.end55.for.body_crit_edge, label %if.end55.cleanup_crit_edge

if.end55.cleanup_crit_edge:                       ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end55.for.body_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

err_out:                                          ; preds = %do.end47, %do.end12
  %err.0 = phi i32 [ %call42, %do.end47 ], [ -12, %do.end12 ]
  %44 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %44, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %err_out.do.end3.i_crit_edge, label %do.end.i

err_out.do.end3.i_crit_edge:                      ; preds = %err_out
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i

do.end.i:                                         ; preds = %err_out
  call void @__sanitizer_cov_trace_pc() #19
  %45 = ptrtoint ptr %nports4 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %nports4, align 1
  %conv.i = zext i8 %46 to i32
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, ptr noundef nonnull @.str.30, ptr noundef %cdev, i32 noundef %conv.i) #21
  br label %do.end3.i

do.end3.i:                                        ; preds = %do.end.i, %err_out.do.end3.i_crit_edge
  %47 = ptrtoint ptr %nports4 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %nports4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %cmp24.not.i = icmp eq i8 %48, 0
  br i1 %cmp24.not.i, label %do.end3.i.cleanup_crit_edge, label %do.end3.i.for.body.i_crit_edge

do.end3.i.for.body.i_crit_edge:                   ; preds = %do.end3.i
  br label %for.body.i

do.end3.i.cleanup_crit_edge:                      ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end3.i.for.body.i_crit_edge
  %i.025.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %do.end3.i.for.body.i_crit_edge ]
  %49 = ptrtoint ptr %hbas to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hbas, align 4
  %arrayidx.i = getelementptr ptr, ptr %50, i32 %i.025.i
  %51 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %arrayidx.i, align 4
  %tobool7.not.i = icmp eq ptr %52, null
  br i1 %tobool7.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then8.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then8.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %53 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %arrayidx.i, align 4
  %shost.i = getelementptr inbounds %struct.cxgbi_hba, ptr %52, i32 0, i32 2
  %54 = ptrtoint ptr %shost.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %shost.i, align 4
  tail call void @iscsi_host_remove(ptr noundef %55) #17
  %56 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %pdev, align 4
  tail call void @pci_dev_put(ptr noundef %57) #17
  %58 = ptrtoint ptr %shost.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %shost.i, align 4
  tail call void @iscsi_host_free(ptr noundef %59) #17
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then8.i, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.025.i, 1
  %60 = ptrtoint ptr %nports4 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %nports4, align 1
  %conv5.i = zext i8 %61 to i32
  %cmp.i = icmp ult i32 %inc.i, %conv5.i
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.cleanup_crit_edge

for.inc.i.cleanup_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

cleanup:                                          ; preds = %for.inc.i.cleanup_crit_edge, %do.end3.i.cleanup_crit_edge, %if.end55.cleanup_crit_edge, %do.end3.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %do.end3.i.cleanup_crit_edge ], [ 0, %do.end3.cleanup_crit_edge ], [ %err.0, %for.inc.i.cleanup_crit_edge ], [ 0, %if.end55.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @iscsi_host_alloc(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_dev_get(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_host_add(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @scsi_host_put(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_free_cpl_skbs(ptr nocapture noundef %csk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %cpl_close = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 22
  %0 = ptrtoint ptr %cpl_close to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cpl_close, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kfree_skb_reason(ptr noundef nonnull %1, i32 noundef 0) #17
  %2 = ptrtoint ptr %cpl_close to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %cpl_close, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %cpl_abort_req = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 23
  %3 = ptrtoint ptr %cpl_abort_req to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %cpl_abort_req, align 4
  %tobool3.not = icmp eq ptr %4, null
  br i1 %tobool3.not, label %if.end.if.end7_crit_edge, label %if.then4

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kfree_skb_reason(ptr noundef nonnull %4, i32 noundef 0) #17
  %5 = ptrtoint ptr %cpl_abort_req to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %cpl_abort_req, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge
  %cpl_abort_rpl = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 24
  %6 = ptrtoint ptr %cpl_abort_rpl to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cpl_abort_rpl, align 4
  %tobool8.not = icmp eq ptr %7, null
  br i1 %tobool8.not, label %if.end7.if.end12_crit_edge, label %if.then9

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kfree_skb_reason(ptr noundef nonnull %7, i32 noundef 0) #17
  %8 = ptrtoint ptr %cpl_abort_rpl to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %cpl_abort_rpl, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %if.end7.if.end12_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_established(ptr noundef %csk, i32 noundef %snd_isn, i32 %opt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %snd_una = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 44
  %0 = ptrtoint ptr %snd_una to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %snd_isn, ptr %snd_una, align 4
  %snd_nxt = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 43
  %1 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %snd_isn, ptr %snd_nxt, align 4
  %write_seq = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 45
  %2 = ptrtoint ptr %write_seq to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %snd_isn, ptr %write_seq, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !893
  %3 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.cxgbi_sock_set_state.exit_crit_edge, label %do.end.i

entry.cxgbi_sock_set_state.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_state.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %state2.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %4 = ptrtoint ptr %state2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state2.i, align 4
  %flags.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %csk, i32 noundef %5, i32 noundef %7, i32 noundef 3) #21
  br label %cxgbi_sock_set_state.exit

cxgbi_sock_set_state.exit:                        ; preds = %do.end.i, %entry.cxgbi_sock_set_state.exit_crit_edge
  %state4.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %8 = ptrtoint ptr %state4.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 3, ptr %state4.i, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dst_release(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_fail_act_open(ptr noundef %csk, i32 noundef %errno) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %state, align 4
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %sin_addr = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 30, i32 0, i32 2
  %sin_port = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 30, i32 0, i32 1
  %4 = ptrtoint ptr %sin_port to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %sin_port, align 2
  %conv = zext i16 %5 to i32
  %sin_addr1 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 31, i32 0, i32 2
  %sin_port3 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 31, i32 0, i32 1
  %6 = ptrtoint ptr %sin_port3 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %sin_port3, align 2
  %conv4 = zext i16 %7 to i32
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.44, ptr noundef %csk, i32 noundef %1, i32 noundef %3, ptr noundef %sin_addr, i32 noundef %conv, ptr noundef %sin_addr1, i32 noundef %conv4, i32 noundef %errno) #21
  %8 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %8, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.cxgbi_sock_set_state.exit_crit_edge, label %do.end.i

entry.cxgbi_sock_set_state.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_state.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %9 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %state, align 4
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %csk, i32 noundef %10, i32 noundef %12, i32 noundef 1) #21
  br label %cxgbi_sock_set_state.exit

cxgbi_sock_set_state.exit:                        ; preds = %do.end.i, %entry.cxgbi_sock_set_state.exit_crit_edge
  %13 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1, ptr %state, align 4
  %err = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 37
  %14 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %errno, ptr %err, align 4
  tail call void @cxgbi_sock_closed(ptr noundef %csk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_act_open_req_arp_failure(ptr nocapture readnone %handle, ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 4
  %owner1 = getelementptr inbounds %struct.cxgbi_device, ptr %4, i32 0, i32 12
  %5 = ptrtoint ptr %owner1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %owner1, align 4
  %7 = load i32, ptr @dbg_level, align 4
  %and = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end4_crit_edge, label %do.end

entry.do.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end4

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 28
  %8 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %state, align 4
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 3
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 1
  %12 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tid, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41, ptr noundef nonnull @.str.45, ptr noundef %2, i32 noundef %9, i32 noundef %11, i32 noundef %13) #21
  br label %do.end4

do.end4:                                          ; preds = %do.end, %entry.do.end4_crit_edge
  %14 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %14, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end4.do.end3.i_crit_edge, label %do.end.i

do.end4.do.end3.i_crit_edge:                      ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i

do.end.i:                                         ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #19
  %refcnt.i = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 27
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #17
  %15 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %refcnt.i, align 4
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254, ptr noundef nonnull @.str.255, ptr noundef nonnull @.str.45, ptr noundef %2, i32 noundef %16) #21
  br label %do.end3.i

do.end3.i:                                        ; preds = %do.end.i, %do.end4.do.end3.i_crit_edge
  %refcnt4.i = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 27
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #17
  %17 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #17, !srcloc !894
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !895

do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %do.end3.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %18 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %.not.i.i.i.i.i = icmp sgt i32 %18, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__cxgbi_sock_get.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt4.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %__cxgbi_sock_get.exit

__cxgbi_sock_get.exit:                            ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge
  %lock = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 26
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #17
  %state5 = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 28
  %19 = ptrtoint ptr %state5 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %state5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %20)
  %cmp = icmp eq i32 %20, 2
  br i1 %cmp, label %if.then6, label %__cxgbi_sock_get.exit.if.end7_crit_edge

__cxgbi_sock_get.exit.if.end7_crit_edge:          ; preds = %__cxgbi_sock_get.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then6:                                         ; preds = %__cxgbi_sock_get.exit
  %flags.i = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 3
  %21 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags.i, align 4
  %sin_addr.i = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 30, i32 0, i32 2
  %sin_port.i = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 30, i32 0, i32 1
  %23 = ptrtoint ptr %sin_port.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %sin_port.i, align 2
  %conv.i = zext i16 %24 to i32
  %sin_addr1.i = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 31, i32 0, i32 2
  %sin_port3.i = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 31, i32 0, i32 1
  %25 = ptrtoint ptr %sin_port3.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %sin_port3.i, align 2
  %conv4.i = zext i16 %26 to i32
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.44, ptr noundef %2, i32 noundef 2, i32 noundef %22, ptr noundef %sin_addr.i, i32 noundef %conv.i, ptr noundef %sin_addr1.i, i32 noundef %conv4.i, i32 noundef -113) #21
  %27 = load i32, ptr @dbg_level, align 4
  %and.i.i = and i32 %27, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then6.cxgbi_sock_fail_act_open.exit_crit_edge, label %do.end.i.i

if.then6.cxgbi_sock_fail_act_open.exit_crit_edge: ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_fail_act_open.exit

do.end.i.i:                                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  %28 = ptrtoint ptr %state5 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %state5, align 4
  %30 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags.i, align 4
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %2, i32 noundef %29, i32 noundef %31, i32 noundef 1) #21
  br label %cxgbi_sock_fail_act_open.exit

cxgbi_sock_fail_act_open.exit:                    ; preds = %do.end.i.i, %if.then6.cxgbi_sock_fail_act_open.exit_crit_edge
  %32 = ptrtoint ptr %state5 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 1, ptr %state5, align 4
  %err.i = getelementptr inbounds %struct.cxgbi_sock, ptr %2, i32 0, i32 37
  %33 = ptrtoint ptr %err.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 -113, ptr %err.i, align 4
  tail call void @cxgbi_sock_closed(ptr noundef %2) #17
  br label %if.end7

if.end7:                                          ; preds = %cxgbi_sock_fail_act_open.exit, %__cxgbi_sock_get.exit.if.end7_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock) #17
  tail call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.45, ptr noundef %2)
  tail call void @__kfree_skb(ptr noundef %skb) #17
  tail call void @module_put(ptr noundef %6) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kfree_skb(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_rcv_abort_rpl(ptr noundef %csk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.do.end3.i_crit_edge, label %do.end.i

entry.do.end3.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %refcnt.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 27
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #17
  %1 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %refcnt.i, align 4
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254, ptr noundef nonnull @.str.255, ptr noundef nonnull @__func__.cxgbi_sock_rcv_abort_rpl, ptr noundef %csk, i32 noundef %2) #21
  br label %do.end3.i

do.end3.i:                                        ; preds = %do.end.i, %entry.do.end3.i_crit_edge
  %refcnt4.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 27
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #17
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #17, !srcloc !894
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !895

do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %do.end3.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %4 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %4)
  %.not.i.i.i.i.i = icmp sgt i32 %4, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__cxgbi_sock_get.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt4.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %__cxgbi_sock_get.exit

__cxgbi_sock_get.exit:                            ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge
  %lock = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 26
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #17
  %flags.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %5 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags.i, align 4
  %or.i.i = or i32 %6, 1
  store i32 %or.i.i, ptr %flags.i, align 4
  %7 = load i32, ptr @dbg_level, align 4
  %and.i19 = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i19)
  %tobool.not.i20 = icmp eq i32 %and.i19, 0
  br i1 %tobool.not.i20, label %__cxgbi_sock_get.exit.cxgbi_sock_set_flag.exit_crit_edge, label %do.end.i21

__cxgbi_sock_get.exit.cxgbi_sock_set_flag.exit_crit_edge: ; preds = %__cxgbi_sock_get.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_flag.exit

do.end.i21:                                       ; preds = %__cxgbi_sock_get.exit
  call void @__sanitizer_cov_trace_pc() #19
  %state.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %8 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %state.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.231, ptr noundef nonnull @.str.232, ptr noundef %csk, i32 noundef %9, i32 noundef %or.i.i, i32 noundef 0) #21
  br label %cxgbi_sock_set_flag.exit

cxgbi_sock_set_flag.exit:                         ; preds = %do.end.i21, %__cxgbi_sock_get.exit.cxgbi_sock_set_flag.exit_crit_edge
  %cmp.i = icmp eq ptr %csk, null
  br i1 %cmp.i, label %cxgbi_sock_set_flag.exit.if.end5_crit_edge, label %cxgbi_sock_flag.exit

cxgbi_sock_set_flag.exit.if.end5_crit_edge:       ; preds = %cxgbi_sock_set_flag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

cxgbi_sock_flag.exit:                             ; preds = %cxgbi_sock_set_flag.exit
  %10 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %flags.i, align 4
  %12 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not = icmp eq i32 %12, 0
  br i1 %tobool.not, label %cxgbi_sock_flag.exit.if.end5_crit_edge, label %if.then

cxgbi_sock_flag.exit.if.end5_crit_edge:           ; preds = %cxgbi_sock_flag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

if.then:                                          ; preds = %cxgbi_sock_flag.exit
  %13 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %14, -5
  store i32 %and.i.i, ptr %flags.i, align 4
  %15 = load i32, ptr @dbg_level, align 4
  %and.i25 = and i32 %15, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i25)
  %tobool.not.i26 = icmp eq i32 %and.i25, 0
  br i1 %tobool.not.i26, label %if.then.cxgbi_sock_flag.exit37_crit_edge, label %do.end.i29

if.then.cxgbi_sock_flag.exit37_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_flag.exit37

do.end.i29:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %state.i27 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %16 = ptrtoint ptr %state.i27 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %state.i27, align 4
  %call.i28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.231, ptr noundef nonnull @.str.256, ptr noundef nonnull %csk, i32 noundef %17, i32 noundef %and.i.i, i32 noundef 2) #21
  br label %cxgbi_sock_flag.exit37

cxgbi_sock_flag.exit37:                           ; preds = %do.end.i29, %if.then.cxgbi_sock_flag.exit37_crit_edge
  %18 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %flags.i, align 4
  %20 = and i32 %19, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool2.not = icmp eq i32 %20, 0
  br i1 %tobool2.not, label %cxgbi_sock_flag.exit37.if.end_crit_edge, label %do.end

cxgbi_sock_flag.exit37.if.end_crit_edge:          ; preds = %cxgbi_sock_flag.exit37
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.end:                                           ; preds = %cxgbi_sock_flag.exit37
  call void @__sanitizer_cov_trace_pc() #19
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %21 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %state, align 4
  %23 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags.i, align 4
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %25 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %tid, align 4
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.46, ptr noundef nonnull @__func__.cxgbi_sock_rcv_abort_rpl, ptr noundef nonnull %csk, i32 noundef %22, i32 noundef %24, i32 noundef %26) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %cxgbi_sock_flag.exit37.if.end_crit_edge
  tail call void @cxgbi_sock_closed(ptr noundef nonnull %csk)
  br label %if.end5

if.end5:                                          ; preds = %if.end, %cxgbi_sock_flag.exit.if.end5_crit_edge, %cxgbi_sock_set_flag.exit.if.end5_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock) #17
  tail call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @__func__.cxgbi_sock_rcv_abort_rpl, ptr noundef %csk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_rcv_peer_close(ptr noundef %csk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end2_crit_edge, label %do.end

entry.do.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end2

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %1 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %state, align 4
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %5 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tid, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41, ptr noundef nonnull @.str.47, ptr noundef %csk, i32 noundef %2, i32 noundef %4, i32 noundef %6) #21
  br label %do.end2

do.end2:                                          ; preds = %do.end, %entry.do.end2_crit_edge
  %7 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end2.do.end3.i_crit_edge, label %do.end.i

do.end2.do.end3.i_crit_edge:                      ; preds = %do.end2
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i

do.end.i:                                         ; preds = %do.end2
  call void @__sanitizer_cov_trace_pc() #19
  %refcnt.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 27
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #17
  %8 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %refcnt.i, align 4
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254, ptr noundef nonnull @.str.255, ptr noundef nonnull @.str.47, ptr noundef %csk, i32 noundef %9) #21
  br label %do.end3.i

do.end3.i:                                        ; preds = %do.end.i, %do.end2.do.end3.i_crit_edge
  %refcnt4.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 27
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #17
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #17, !srcloc !894
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !895

do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %do.end3.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %11 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %.not.i.i.i.i.i = icmp sgt i32 %11, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__cxgbi_sock_get.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt4.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %__cxgbi_sock_get.exit

__cxgbi_sock_get.exit:                            ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge
  %lock = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 26
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #17
  %cmp.i = icmp eq ptr %csk, null
  br i1 %cmp.i, label %__cxgbi_sock_get.exit.if.end6_crit_edge, label %cxgbi_sock_flag.exit

__cxgbi_sock_get.exit.if.end6_crit_edge:          ; preds = %__cxgbi_sock_get.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

cxgbi_sock_flag.exit:                             ; preds = %__cxgbi_sock_get.exit
  %flags.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %12 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %flags.i, align 4
  %14 = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool4.not = icmp eq i32 %14, 0
  br i1 %tobool4.not, label %cxgbi_sock_flag.exit.if.end6_crit_edge, label %cxgbi_sock_flag.exit.done_crit_edge

cxgbi_sock_flag.exit.done_crit_edge:              ; preds = %cxgbi_sock_flag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %done

cxgbi_sock_flag.exit.if.end6_crit_edge:           ; preds = %cxgbi_sock_flag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.end6:                                          ; preds = %cxgbi_sock_flag.exit.if.end6_crit_edge, %__cxgbi_sock_get.exit.if.end6_crit_edge
  %state7 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %15 = ptrtoint ptr %state7 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %state7, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.426)
  switch i32 %16, label %do.end11 [
    i32 3, label %sw.bb
    i32 4, label %sw.bb8
    i32 6, label %sw.bb9
    i32 8, label %if.end6.sw.epilog_crit_edge
  ]

if.end6.sw.epilog_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end6
  %18 = load i32, ptr @dbg_level, align 4
  %and.i35 = and i32 %18, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i35)
  %tobool.not.i36 = icmp eq i32 %and.i35, 0
  br i1 %tobool.not.i36, label %sw.bb.cxgbi_sock_set_state.exit_crit_edge, label %do.end.i38

sw.bb.cxgbi_sock_set_state.exit_crit_edge:        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_state.exit

do.end.i38:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  %flags.i37 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %19 = ptrtoint ptr %flags.i37 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i37, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %csk, i32 noundef 3, i32 noundef %20, i32 noundef 5) #21
  br label %cxgbi_sock_set_state.exit

cxgbi_sock_set_state.exit:                        ; preds = %do.end.i38, %sw.bb.cxgbi_sock_set_state.exit_crit_edge
  %21 = ptrtoint ptr %state7 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 5, ptr %state7, align 4
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.end6
  %22 = load i32, ptr @dbg_level, align 4
  %and.i40 = and i32 %22, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40)
  %tobool.not.i41 = icmp eq i32 %and.i40, 0
  br i1 %tobool.not.i41, label %sw.bb8.cxgbi_sock_set_state.exit48_crit_edge, label %do.end.i45

sw.bb8.cxgbi_sock_set_state.exit48_crit_edge:     ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_state.exit48

do.end.i45:                                       ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #19
  %flags.i43 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %23 = ptrtoint ptr %flags.i43 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags.i43, align 4
  %call.i44 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %csk, i32 noundef 4, i32 noundef %24, i32 noundef 7) #21
  br label %cxgbi_sock_set_state.exit48

cxgbi_sock_set_state.exit48:                      ; preds = %do.end.i45, %sw.bb8.cxgbi_sock_set_state.exit48_crit_edge
  %25 = ptrtoint ptr %state7 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 7, ptr %state7, align 4
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @cxgbi_sock_closed(ptr noundef %csk)
  br label %sw.epilog

do.end11:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %flags14 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %26 = ptrtoint ptr %flags14 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags14, align 4
  %tid15 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %28 = ptrtoint ptr %tid15 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %tid15, align 4
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.49, ptr noundef nonnull @.str.47, ptr noundef %csk, i32 noundef %16, i32 noundef %27, i32 noundef %29) #21
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end11, %sw.bb9, %cxgbi_sock_set_state.exit48, %cxgbi_sock_set_state.exit, %if.end6.sw.epilog_crit_edge
  %30 = load i32, ptr @dbg_level, align 4
  %and.i49 = and i32 %30, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i49)
  %tobool.not.i50 = icmp eq i32 %and.i49, 0
  br i1 %tobool.not.i50, label %sw.epilog.do.end2.i_crit_edge, label %do.end.i53

sw.epilog.do.end2.i_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end2.i

do.end.i53:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #19
  %31 = ptrtoint ptr %state7 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %state7, align 4
  %flags.i51 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %33 = ptrtoint ptr %flags.i51 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags.i51, align 4
  %user_data.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 39
  %35 = ptrtoint ptr %user_data.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %user_data.i, align 4
  %call.i52 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.252, ptr noundef nonnull @.str.253, ptr noundef %csk, i32 noundef %32, i32 noundef %34, ptr noundef %36) #21
  br label %do.end2.i

do.end2.i:                                        ; preds = %do.end.i53, %sw.epilog.do.end2.i_crit_edge
  %37 = ptrtoint ptr %state7 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %state7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %38)
  %cmp.not.i = icmp eq i32 %38, 3
  br i1 %cmp.not.i, label %do.end2.i.done_crit_edge, label %if.then4.i

do.end2.i.done_crit_edge:                         ; preds = %do.end2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %done

if.then4.i:                                       ; preds = %do.end2.i
  %callback_lock.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 38
  tail call void @_raw_read_lock_bh(ptr noundef %callback_lock.i) #17
  %user_data5.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 39
  %39 = ptrtoint ptr %user_data5.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %user_data5.i, align 4
  %tobool6.not.i = icmp eq ptr %40, null
  br i1 %tobool6.not.i, label %if.then4.i.if.end9.i_crit_edge, label %if.then7.i

if.then4.i.if.end9.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end9.i

if.then7.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @iscsi_conn_failure(ptr noundef nonnull %40, i32 noundef 1020) #17
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then7.i, %if.then4.i.if.end9.i_crit_edge
  tail call void @_raw_read_unlock_bh(ptr noundef %callback_lock.i) #17
  br label %done

done:                                             ; preds = %if.end9.i, %do.end2.i.done_crit_edge, %cxgbi_sock_flag.exit.done_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock) #17
  tail call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.47, ptr noundef %csk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_rcv_close_conn_rpl(ptr noundef %csk, i32 noundef %snd_nxt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end2_crit_edge, label %do.end

entry.do.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end2

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %1 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %state, align 4
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %5 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tid, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41, ptr noundef nonnull @.str.51, ptr noundef %csk, i32 noundef %2, i32 noundef %4, i32 noundef %6) #21
  br label %do.end2

do.end2:                                          ; preds = %do.end, %entry.do.end2_crit_edge
  %7 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end2.do.end3.i_crit_edge, label %do.end.i

do.end2.do.end3.i_crit_edge:                      ; preds = %do.end2
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i

do.end.i:                                         ; preds = %do.end2
  call void @__sanitizer_cov_trace_pc() #19
  %refcnt.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 27
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #17
  %8 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %refcnt.i, align 4
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254, ptr noundef nonnull @.str.255, ptr noundef nonnull @.str.51, ptr noundef %csk, i32 noundef %9) #21
  br label %do.end3.i

do.end3.i:                                        ; preds = %do.end.i, %do.end2.do.end3.i_crit_edge
  %refcnt4.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 27
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #17
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #17, !srcloc !894
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !895

do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %do.end3.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %11 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %.not.i.i.i.i.i = icmp sgt i32 %11, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__cxgbi_sock_get.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt4.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %__cxgbi_sock_get.exit

__cxgbi_sock_get.exit:                            ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge
  %lock = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 26
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #17
  %sub = add i32 %snd_nxt, -1
  %snd_una = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 44
  %12 = ptrtoint ptr %snd_una to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %sub, ptr %snd_una, align 4
  %cmp.i = icmp eq ptr %csk, null
  br i1 %cmp.i, label %__cxgbi_sock_get.exit.if.end6_crit_edge, label %cxgbi_sock_flag.exit

__cxgbi_sock_get.exit.if.end6_crit_edge:          ; preds = %__cxgbi_sock_get.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

cxgbi_sock_flag.exit:                             ; preds = %__cxgbi_sock_get.exit
  %flags.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %13 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %flags.i, align 4
  %15 = and i32 %14, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool4.not = icmp eq i32 %15, 0
  br i1 %tobool4.not, label %cxgbi_sock_flag.exit.if.end6_crit_edge, label %cxgbi_sock_flag.exit.done_crit_edge

cxgbi_sock_flag.exit.done_crit_edge:              ; preds = %cxgbi_sock_flag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %done

cxgbi_sock_flag.exit.if.end6_crit_edge:           ; preds = %cxgbi_sock_flag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.end6:                                          ; preds = %cxgbi_sock_flag.exit.if.end6_crit_edge, %__cxgbi_sock_get.exit.if.end6_crit_edge
  %state7 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %16 = ptrtoint ptr %state7 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %state7, align 4
  %18 = zext i32 %17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.427)
  switch i32 %17, label %do.end10 [
    i32 4, label %sw.bb
    i32 6, label %if.end6.sw.bb8_crit_edge
    i32 7, label %if.end6.sw.bb8_crit_edge40
    i32 8, label %if.end6.done_crit_edge
  ]

if.end6.done_crit_edge:                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %done

if.end6.sw.bb8_crit_edge40:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8

if.end6.sw.bb8_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8

sw.bb:                                            ; preds = %if.end6
  %19 = load i32, ptr @dbg_level, align 4
  %and.i33 = and i32 %19, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i33)
  %tobool.not.i34 = icmp eq i32 %and.i33, 0
  br i1 %tobool.not.i34, label %sw.bb.cxgbi_sock_set_state.exit_crit_edge, label %do.end.i36

sw.bb.cxgbi_sock_set_state.exit_crit_edge:        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_state.exit

do.end.i36:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  %flags.i35 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i35 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i35, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %csk, i32 noundef 4, i32 noundef %21, i32 noundef 6) #21
  br label %cxgbi_sock_set_state.exit

cxgbi_sock_set_state.exit:                        ; preds = %do.end.i36, %sw.bb.cxgbi_sock_set_state.exit_crit_edge
  %22 = ptrtoint ptr %state7 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 6, ptr %state7, align 4
  br label %done

sw.bb8:                                           ; preds = %if.end6.sw.bb8_crit_edge, %if.end6.sw.bb8_crit_edge40
  tail call void @cxgbi_sock_closed(ptr noundef %csk)
  br label %done

do.end10:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %flags13 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %23 = ptrtoint ptr %flags13 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags13, align 4
  %tid14 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %25 = ptrtoint ptr %tid14 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %tid14, align 4
  %call15 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.49, ptr noundef nonnull @.str.51, ptr noundef %csk, i32 noundef %17, i32 noundef %24, i32 noundef %26) #21
  br label %done

done:                                             ; preds = %do.end10, %sw.bb8, %cxgbi_sock_set_state.exit, %if.end6.done_crit_edge, %cxgbi_sock_flag.exit.done_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock) #17
  tail call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.51, ptr noundef %csk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_rcv_wr_ack(ptr noundef %csk, i32 noundef %credits, i32 noundef %snd_una, i32 noundef %seq_chk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end2_crit_edge, label %do.end

entry.do.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end2

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %1 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %state, align 4
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %5 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tid, align 4
  %wr_cred = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 14
  %7 = ptrtoint ptr %wr_cred to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %wr_cred, align 4
  %wr_una_cred = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 15
  %9 = ptrtoint ptr %wr_una_cred to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %wr_una_cred, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.54, ptr noundef nonnull @.str.55, ptr noundef %csk, i32 noundef %2, i32 noundef %4, i32 noundef %6, i32 noundef %credits, i32 noundef %8, i32 noundef %10, i32 noundef %snd_una, i32 noundef %seq_chk) #21
  br label %do.end2

do.end2:                                          ; preds = %do.end, %entry.do.end2_crit_edge
  %lock = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 26
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #17
  %wr_cred3 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 14
  %11 = ptrtoint ptr %wr_cred3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %wr_cred3, align 4
  %add = add i32 %12, %credits
  store i32 %add, ptr %wr_cred3, align 4
  %wr_una_cred4 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 15
  %13 = ptrtoint ptr %wr_una_cred4 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %wr_una_cred4, align 4
  %wr_max_cred = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 13
  %15 = ptrtoint ptr %wr_max_cred to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %wr_max_cred, align 4
  %sub = sub i32 %16, %add
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %sub)
  %cmp = icmp sgt i32 %14, %sub
  br i1 %cmp, label %if.then6, label %do.end2.if.end11_crit_edge

do.end2.if.end11_crit_edge:                       ; preds = %do.end2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

if.then6:                                         ; preds = %do.end2
  call void @__sanitizer_cov_trace_pc() #19
  %17 = ptrtoint ptr %wr_una_cred4 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %sub, ptr %wr_una_cred4, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then6, %do.end2.if.end11_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %credits)
  %tobool12.not167 = icmp eq i32 %credits, 0
  br i1 %tobool12.not167, label %if.end11.while.end_crit_edge, label %while.body.lr.ph

if.end11.while.end_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end11
  %wr_pending_head.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 20
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %credits.addr.0168 = phi i32 [ %credits, %while.body.lr.ph ], [ %sub49, %cleanup.while.body_crit_edge ]
  %18 = ptrtoint ptr %wr_pending_head.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %wr_pending_head.i, align 4
  %tobool14.not = icmp eq ptr %19, null
  br i1 %tobool14.not, label %do.end20, label %if.end28, !prof !895

do.end20:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  %state22 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %20 = ptrtoint ptr %state22 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %state22, align 4
  %flags23 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %22 = ptrtoint ptr %flags23 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags23, align 4
  %tid24 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %24 = ptrtoint ptr %tid24 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %tid24, align 4
  %26 = ptrtoint ptr %wr_cred3 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %wr_cred3, align 4
  %28 = ptrtoint ptr %wr_una_cred4 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %wr_una_cred4, align 4
  %call27 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.55, ptr noundef %csk, i32 noundef %21, i32 noundef %23, i32 noundef %25, i32 noundef %credits.addr.0168, i32 noundef %27, i32 noundef %29) #21
  br label %while.end

if.end28:                                         ; preds = %while.body
  %30 = getelementptr inbounds %struct.sk_buff, ptr %19, i32 0, i32 15, i32 0, i32 5
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %credits.addr.0168, i32 %32)
  %cmp29 = icmp ult i32 %credits.addr.0168, %32
  br i1 %cmp29, label %do.end39, label %cleanup, !prof !895

do.end39:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #19
  %state41 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %33 = ptrtoint ptr %state41 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %state41, align 4
  %flags42 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %35 = ptrtoint ptr %flags42 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %flags42, align 4
  %tid43 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %37 = ptrtoint ptr %tid43 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %tid43, align 4
  %39 = ptrtoint ptr %wr_cred3 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %wr_cred3, align 4
  %41 = ptrtoint ptr %wr_una_cred4 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %wr_una_cred4, align 4
  %call46 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.55, ptr noundef %csk, i32 noundef %34, i32 noundef %36, i32 noundef %38, i32 noundef %credits.addr.0168, i32 noundef %40, i32 noundef %42, i32 noundef %32) #21
  %43 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %30, align 8
  %sub47 = sub i32 %44, %credits.addr.0168
  store i32 %sub47, ptr %30, align 8
  br label %while.end

cleanup:                                          ; preds = %if.end28
  %wr_next.i = getelementptr inbounds %struct.sk_buff, ptr %19, i32 0, i32 3, i32 8
  %45 = ptrtoint ptr %wr_next.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %wr_next.i, align 8
  %47 = ptrtoint ptr %wr_pending_head.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %46, ptr %wr_pending_head.i, align 4
  store ptr null, ptr %wr_next.i, align 8
  %48 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %30, align 8
  %sub49 = sub i32 %credits.addr.0168, %49
  tail call void @kfree_skb_reason(ptr noundef nonnull %19, i32 noundef 0) #17
  %tobool12.not = icmp eq i32 %sub49, 0
  br i1 %tobool12.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %do.end39, %do.end20, %if.end11.while.end_crit_edge
  %wr_pending_head.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 20
  %50 = ptrtoint ptr %wr_pending_head.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %skb.04.i.i = load ptr, ptr %wr_pending_head.i.i, align 4
  %tobool.not5.i.i = icmp eq ptr %skb.04.i.i, null
  br i1 %tobool.not5.i.i, label %while.end.cxgbi_sock_count_pending_wrs.exit.i_crit_edge, label %while.end.while.body.i.i_crit_edge

while.end.while.body.i.i_crit_edge:               ; preds = %while.end
  br label %while.body.i.i

while.end.cxgbi_sock_count_pending_wrs.exit.i_crit_edge: ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_count_pending_wrs.exit.i

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %while.end.while.body.i.i_crit_edge
  %skb.07.i.i = phi ptr [ %skb.0.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ %skb.04.i.i, %while.end.while.body.i.i_crit_edge ]
  %n.06.i.i = phi i32 [ %add.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ 0, %while.end.while.body.i.i_crit_edge ]
  %51 = getelementptr inbounds %struct.sk_buff, ptr %skb.07.i.i, i32 0, i32 15, i32 0, i32 5
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %51, align 8
  %add.i.i = add i32 %53, %n.06.i.i
  %wr_next.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.07.i.i, i32 0, i32 3, i32 8
  %54 = ptrtoint ptr %wr_next.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %skb.0.i.i = load ptr, ptr %wr_next.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %skb.0.i.i, null
  br i1 %tobool.not.i.i, label %while.body.i.i.cxgbi_sock_count_pending_wrs.exit.i_crit_edge, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body.i.i

while.body.i.i.cxgbi_sock_count_pending_wrs.exit.i_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_count_pending_wrs.exit.i

cxgbi_sock_count_pending_wrs.exit.i:              ; preds = %while.body.i.i.cxgbi_sock_count_pending_wrs.exit.i_crit_edge, %while.end.cxgbi_sock_count_pending_wrs.exit.i_crit_edge
  %n.0.lcssa.i.i = phi i32 [ 0, %while.end.cxgbi_sock_count_pending_wrs.exit.i_crit_edge ], [ %add.i.i, %while.body.i.i.cxgbi_sock_count_pending_wrs.exit.i_crit_edge ]
  %55 = ptrtoint ptr %wr_cred3 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %wr_cred3, align 4
  %add.i = add i32 %56, %n.0.lcssa.i.i
  %57 = ptrtoint ptr %wr_max_cred to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %wr_max_cred, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %58)
  %cmp.not.i = icmp eq i32 %add.i, %58
  br i1 %cmp.not.i, label %cxgbi_sock_count_pending_wrs.exit.i.cxgbi_sock_check_wr_invariants.exit_crit_edge, label %do.end.i, !prof !888

cxgbi_sock_count_pending_wrs.exit.i.cxgbi_sock_check_wr_invariants.exit_crit_edge: ; preds = %cxgbi_sock_count_pending_wrs.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_check_wr_invariants.exit

do.end.i:                                         ; preds = %cxgbi_sock_count_pending_wrs.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %tid.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %59 = ptrtoint ptr %tid.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %tid.i, align 4
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.65, ptr noundef nonnull @.str.66, ptr noundef %csk, i32 noundef %60, i32 noundef %56, i32 noundef %n.0.lcssa.i.i, i32 noundef %58) #21
  br label %cxgbi_sock_check_wr_invariants.exit

cxgbi_sock_check_wr_invariants.exit:              ; preds = %do.end.i, %cxgbi_sock_count_pending_wrs.exit.i.cxgbi_sock_check_wr_invariants.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %seq_chk)
  %tobool51.not = icmp eq i32 %seq_chk, 0
  br i1 %tobool51.not, label %cxgbi_sock_check_wr_invariants.exit.if.end77_crit_edge, label %if.then52

cxgbi_sock_check_wr_invariants.exit.if.end77_crit_edge: ; preds = %cxgbi_sock_check_wr_invariants.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end77

if.then52:                                        ; preds = %cxgbi_sock_check_wr_invariants.exit
  %snd_una53 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 44
  %61 = ptrtoint ptr %snd_una53 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %snd_una53, align 4
  %sub.i = sub i32 %snd_una, %62
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %do.end64, label %if.end71, !prof !895

do.end64:                                         ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #19
  %state66 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %63 = ptrtoint ptr %state66 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %state66, align 4
  %flags67 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %65 = ptrtoint ptr %flags67 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %flags67, align 4
  %tid68 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %67 = ptrtoint ptr %tid68 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %tid68, align 4
  %call70 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.55, ptr noundef %csk, i32 noundef %64, i32 noundef %66, i32 noundef %68, i32 noundef %snd_una, i32 noundef %62) #21
  br label %done

if.end71:                                         ; preds = %if.then52
  call void @__sanitizer_cov_trace_cmp4(i32 %62, i32 %snd_una)
  %cmp73.not = icmp eq i32 %62, %snd_una
  br i1 %cmp73.not, label %if.end71.if.end77_crit_edge, label %if.then74

if.end71.if.end77_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end77

if.then74:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #19
  %69 = ptrtoint ptr %snd_una53 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %snd_una, ptr %snd_una53, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then74, %if.end71.if.end77_crit_edge, %cxgbi_sock_check_wr_invariants.exit.if.end77_crit_edge
  %qlen.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 34, i32 1
  %70 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %qlen.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool79.not = icmp eq i32 %71, 0
  br i1 %tobool79.not, label %if.else85, label %if.then80

if.then80:                                        ; preds = %if.end77
  %72 = ptrtoint ptr %csk to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %csk, align 4
  %csk_push_tx_frames = getelementptr inbounds %struct.cxgbi_device, ptr %73, i32 0, i32 31
  %74 = ptrtoint ptr %csk_push_tx_frames to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %csk_push_tx_frames, align 4
  %call81 = tail call i32 %75(ptr noundef %csk, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call81)
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %if.then80.done_crit_edge, label %if.then83

if.then80.done_crit_edge:                         ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #19
  br label %done

if.then83:                                        ; preds = %if.then80
  %user_data.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 39
  %76 = ptrtoint ptr %user_data.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %user_data.i, align 4
  %tobool.not.i149 = icmp eq ptr %77, null
  br i1 %tobool.not.i149, label %if.then83.done_crit_edge, label %do.body.i

if.then83.done_crit_edge:                         ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #19
  br label %done

do.body.i:                                        ; preds = %if.then83
  %78 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %78, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %do.body.i.do.end5.i_crit_edge, label %do.end.i150

do.body.i.do.end5.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end5.i

do.end.i150:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %id.i = getelementptr inbounds %struct.iscsi_conn, ptr %77, i32 0, i32 12
  %79 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %id.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.70, ptr noundef %csk, i32 noundef %80) #21
  br label %do.end5.i

do.end5.i:                                        ; preds = %do.end.i150, %do.body.i.do.end5.i_crit_edge
  tail call void @iscsi_conn_queue_work(ptr noundef nonnull %77) #17
  br label %done

if.else85:                                        ; preds = %if.end77
  %user_data.i151 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 39
  %81 = ptrtoint ptr %user_data.i151 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %user_data.i151, align 4
  %tobool.not.i152 = icmp eq ptr %82, null
  br i1 %tobool.not.i152, label %if.else85.done_crit_edge, label %do.body.i155

if.else85.done_crit_edge:                         ; preds = %if.else85
  call void @__sanitizer_cov_trace_pc() #19
  br label %done

do.body.i155:                                     ; preds = %if.else85
  %83 = load i32, ptr @dbg_level, align 4
  %and.i153 = and i32 %83, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i153)
  %tobool1.not.i154 = icmp eq i32 %and.i153, 0
  br i1 %tobool1.not.i154, label %do.body.i155.do.end5.i159_crit_edge, label %do.end.i158

do.body.i155.do.end5.i159_crit_edge:              ; preds = %do.body.i155
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end5.i159

do.end.i158:                                      ; preds = %do.body.i155
  call void @__sanitizer_cov_trace_pc() #19
  %id.i156 = getelementptr inbounds %struct.iscsi_conn, ptr %82, i32 0, i32 12
  %84 = ptrtoint ptr %id.i156 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %id.i156, align 4
  %call.i157 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.70, ptr noundef %csk, i32 noundef %85) #21
  br label %do.end5.i159

do.end5.i159:                                     ; preds = %do.end.i158, %do.body.i155.do.end5.i159_crit_edge
  tail call void @iscsi_conn_queue_work(ptr noundef nonnull %82) #17
  br label %done

done:                                             ; preds = %do.end5.i159, %if.else85.done_crit_edge, %do.end5.i, %if.then83.done_crit_edge, %if.then80.done_crit_edge, %do.end64
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_check_wr_invariants(ptr noundef %csk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %wr_pending_head.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 20
  %0 = ptrtoint ptr %wr_pending_head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %skb.04.i = load ptr, ptr %wr_pending_head.i, align 4
  %tobool.not5.i = icmp eq ptr %skb.04.i, null
  br i1 %tobool.not5.i, label %entry.cxgbi_sock_count_pending_wrs.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.cxgbi_sock_count_pending_wrs.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_count_pending_wrs.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %skb.07.i = phi ptr [ %skb.0.i, %while.body.i.while.body.i_crit_edge ], [ %skb.04.i, %entry.while.body.i_crit_edge ]
  %n.06.i = phi i32 [ %add.i, %while.body.i.while.body.i_crit_edge ], [ 0, %entry.while.body.i_crit_edge ]
  %1 = getelementptr inbounds %struct.sk_buff, ptr %skb.07.i, i32 0, i32 15, i32 0, i32 5
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 8
  %add.i = add i32 %3, %n.06.i
  %wr_next.i = getelementptr inbounds %struct.sk_buff, ptr %skb.07.i, i32 0, i32 3, i32 8
  %4 = ptrtoint ptr %wr_next.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %skb.0.i = load ptr, ptr %wr_next.i, align 4
  %tobool.not.i = icmp eq ptr %skb.0.i, null
  br i1 %tobool.not.i, label %while.body.i.cxgbi_sock_count_pending_wrs.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body.i

while.body.i.cxgbi_sock_count_pending_wrs.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_count_pending_wrs.exit

cxgbi_sock_count_pending_wrs.exit:                ; preds = %while.body.i.cxgbi_sock_count_pending_wrs.exit_crit_edge, %entry.cxgbi_sock_count_pending_wrs.exit_crit_edge
  %n.0.lcssa.i = phi i32 [ 0, %entry.cxgbi_sock_count_pending_wrs.exit_crit_edge ], [ %add.i, %while.body.i.cxgbi_sock_count_pending_wrs.exit_crit_edge ]
  %wr_cred = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 14
  %5 = ptrtoint ptr %wr_cred to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %wr_cred, align 4
  %add = add i32 %6, %n.0.lcssa.i
  %wr_max_cred = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 13
  %7 = ptrtoint ptr %wr_max_cred to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %wr_max_cred, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %8)
  %cmp.not = icmp eq i32 %add, %8
  br i1 %cmp.not, label %cxgbi_sock_count_pending_wrs.exit.if.end_crit_edge, label %do.end, !prof !888

cxgbi_sock_count_pending_wrs.exit.if.end_crit_edge: ; preds = %cxgbi_sock_count_pending_wrs.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.end:                                           ; preds = %cxgbi_sock_count_pending_wrs.exit
  call void @__sanitizer_cov_trace_pc() #19
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %9 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %tid, align 4
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.65, ptr noundef nonnull @.str.66, ptr noundef %csk, i32 noundef %10, i32 noundef %6, i32 noundef %n.0.lcssa.i, i32 noundef %8) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %cxgbi_sock_count_pending_wrs.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_conn_tx_open(ptr noundef %csk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %user_data = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 39
  %0 = ptrtoint ptr %user_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %user_data, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %do.body

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

do.body:                                          ; preds = %entry
  %2 = load i32, ptr @dbg_level, align 4
  %and = and i32 %2, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.do.end5_crit_edge, label %do.end

do.body.do.end5_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end5

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %id = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 12
  %3 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %id, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.70, ptr noundef %csk, i32 noundef %4) #21
  br label %do.end5

do.end5:                                          ; preds = %do.end, %do.body.do.end5_crit_edge
  tail call void @iscsi_conn_queue_work(ptr noundef nonnull %1) #17
  br label %if.end6

if.end6:                                          ; preds = %do.end5, %entry.if.end6_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_sock_select_mss(ptr nocapture noundef %csk, i32 noundef %pmtu) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dst1 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 32
  %0 = ptrtoint ptr %dst1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dst1, align 4
  %_metrics.i.i = getelementptr inbounds %struct.dst_entry, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %_metrics.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %_metrics.i.i, align 4
  %and.i.i = and i32 %3, -4
  %4 = inttoptr i32 %and.i.i to ptr
  %arrayidx.i.i = getelementptr i32, ptr %4, i32 7
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.dst_metric_advmss.exit_crit_edge

entry.dst_metric_advmss.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %dst_metric_advmss.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %ops.i = getelementptr inbounds %struct.dst_entry, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 4
  %default_advmss.i = getelementptr inbounds %struct.dst_ops, ptr %8, i32 0, i32 4
  %9 = ptrtoint ptr %default_advmss.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %default_advmss.i, align 16
  %call1.i = tail call i32 %10(ptr noundef %1) #17
  br label %dst_metric_advmss.exit

dst_metric_advmss.exit:                           ; preds = %if.then.i, %entry.dst_metric_advmss.exit_crit_edge
  %advmss.0.i = phi i32 [ %6, %entry.dst_metric_advmss.exit_crit_edge ], [ %call1.i, %if.then.i ]
  %advmss = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 7
  %conv3 = and i32 %advmss.0.i, 65535
  %sub = add i32 %pmtu, -40
  call void @__sanitizer_cov_trace_cmp4(i32 %conv3, i32 %sub)
  %cmp = icmp ugt i32 %conv3, %sub
  %spec.select = select i1 %cmp, i32 %sub, i32 %advmss.0.i
  %storemerge = trunc i32 %spec.select to i16
  %11 = ptrtoint ptr %advmss to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %storemerge, ptr %advmss, align 4
  %conv9 = and i32 %spec.select, 65535
  %12 = ptrtoint ptr %csk to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %csk, align 4
  %mtus = getelementptr inbounds %struct.cxgbi_device, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %mtus to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mtus, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %15, align 2
  %conv10 = zext i16 %17 to i32
  %sub11 = add nsw i32 %conv10, -40
  call void @__sanitizer_cov_trace_cmp4(i32 %sub11, i32 %conv9)
  %cmp12 = icmp sgt i32 %sub11, %conv9
  br i1 %cmp12, label %if.then14, label %dst_metric_advmss.exit.if.end22_crit_edge

dst_metric_advmss.exit.if.end22_crit_edge:        ; preds = %dst_metric_advmss.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end22

if.then14:                                        ; preds = %dst_metric_advmss.exit
  call void @__sanitizer_cov_trace_pc() #19
  %conv20 = trunc i32 %sub11 to i16
  %18 = ptrtoint ptr %advmss to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %conv20, ptr %advmss, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.then14, %dst_metric_advmss.exit.if.end22_crit_edge
  %19 = ptrtoint ptr %advmss to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %advmss, align 4
  %add = add i16 %20, 40
  %nmtus.i = getelementptr inbounds %struct.cxgbi_device, ptr %13, i32 0, i32 7
  %21 = ptrtoint ptr %nmtus.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %nmtus.i, align 4
  %conv.i = zext i8 %22 to i32
  %23 = tail call i32 @llvm.smax.i32(i32 %conv.i, i32 1) #17
  %smax.i = add nsw i32 %23, -1
  br label %while.cond.i

while.cond.i:                                     ; preds = %land.rhs.i.while.cond.i_crit_edge, %if.end22
  %i.0.i = phi i32 [ 0, %if.end22 ], [ %add.i, %land.rhs.i.while.cond.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.i, i32 %smax.i)
  %exitcond.not.i = icmp eq i32 %i.0.i, %smax.i
  br i1 %exitcond.not.i, label %while.cond.i.cxgbi_sock_find_best_mtu.exit_crit_edge, label %land.rhs.i

while.cond.i.cxgbi_sock_find_best_mtu.exit_crit_edge: ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_find_best_mtu.exit

land.rhs.i:                                       ; preds = %while.cond.i
  %24 = ptrtoint ptr %mtus to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mtus, align 4
  %add.i = add nuw nsw i32 %i.0.i, 1
  %arrayidx.i = getelementptr i16, ptr %25, i32 %add.i
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %arrayidx.i, align 2
  %cmp5.not.i = icmp ugt i16 %27, %add
  br i1 %cmp5.not.i, label %land.rhs.i.cxgbi_sock_find_best_mtu.exit_crit_edge, label %land.rhs.i.while.cond.i_crit_edge

land.rhs.i.while.cond.i_crit_edge:                ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond.i

land.rhs.i.cxgbi_sock_find_best_mtu.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_find_best_mtu.exit

cxgbi_sock_find_best_mtu.exit:                    ; preds = %land.rhs.i.cxgbi_sock_find_best_mtu.exit_crit_edge, %while.cond.i.cxgbi_sock_find_best_mtu.exit_crit_edge
  %i.0.lcssa.i = phi i32 [ %smax.i, %while.cond.i.cxgbi_sock_find_best_mtu.exit_crit_edge ], [ %i.0.i, %land.rhs.i.cxgbi_sock_find_best_mtu.exit_crit_edge ]
  ret i32 %i.0.lcssa.i
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_skb_entail(ptr noundef %csk, ptr noundef %skb) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %write_seq = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 45
  %0 = ptrtoint ptr %write_seq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %write_seq, align 4
  %seq = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 20
  %2 = ptrtoint ptr %seq to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %seq, align 4
  %write_queue = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 34
  %prev.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 34, i32 0, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %write_queue, ptr %skb, align 8
  %prev10.i.i.i = getelementptr inbounds %struct.anon.51, ptr %skb, i32 0, i32 1
  %6 = ptrtoint ptr %prev10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %4, ptr %prev10.i.i.i, align 4
  store volatile ptr %skb, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %skb, ptr %4, align 4
  %qlen.i.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 34, i32 1
  %8 = ptrtoint ptr %qlen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %qlen.i.i.i, align 4
  %add.i.i.i = add i32 %9, 1
  store volatile i32 %add.i.i.i, ptr %qlen.i.i.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_sock_purge_wr_queue(ptr nocapture noundef %csk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %wr_pending_head.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 20
  %0 = ptrtoint ptr %wr_pending_head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wr_pending_head.i, align 4
  %tobool.not.i1 = icmp eq ptr %1, null
  br i1 %tobool.not.i1, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge, !prof !895

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  %2 = phi ptr [ %7, %while.body.while.body_crit_edge ], [ %1, %entry.while.body_crit_edge ]
  %wr_next.i = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 3, i32 8
  %3 = ptrtoint ptr %wr_next.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wr_next.i, align 8
  %5 = ptrtoint ptr %wr_pending_head.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %wr_pending_head.i, align 4
  store ptr null, ptr %wr_next.i, align 8
  tail call void @kfree_skb_reason(ptr noundef nonnull %2, i32 noundef 0) #17
  %6 = ptrtoint ptr %wr_pending_head.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %wr_pending_head.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge, !prof !895

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_ddp_set_one_ppod(ptr nocapture noundef writeonly %ppod, ptr nocapture noundef readonly %ttinfo, ptr noundef %sg_pp, ptr noundef %sg_off) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %sg_pp, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %0 = ptrtoint ptr %sg_pp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sg_pp, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi ptr [ %1, %cond.true ], [ null, %entry.cond.end_crit_edge ]
  %tobool1.not = icmp eq ptr %sg_off, null
  br i1 %tobool1.not, label %cond.end.cond.end4_crit_edge, label %cond.true2

cond.end.cond.end4_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end4

cond.true2:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  %2 = ptrtoint ptr %sg_off to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sg_off, align 4
  br label %cond.end4

cond.end4:                                        ; preds = %cond.true2, %cond.end.cond.end4_crit_edge
  %cond5 = phi i32 [ %3, %cond.true2 ], [ 0, %cond.end.cond.end4_crit_edge ]
  %hdr = getelementptr inbounds %struct.cxgbi_task_tag_info, ptr %ttinfo, i32 0, i32 6
  %4 = call ptr @memcpy(ptr %ppod, ptr %hdr, i32 24)
  %tobool6.not = icmp eq ptr %cond, null
  br i1 %tobool6.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %cond.end4
  %dma_address = getelementptr inbounds %struct.scatterlist, ptr %cond, i32 0, i32 3
  %5 = ptrtoint ptr %dma_address to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %dma_address, align 4
  %dma_length = getelementptr inbounds %struct.scatterlist, ptr %cond, i32 0, i32 4
  %7 = ptrtoint ptr %dma_length to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %dma_length, align 4
  %add = add i32 %6, %cond5
  %conv = zext i32 %add to i64
  %arrayidx = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 0
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %conv, ptr %arrayidx, align 8
  %add10 = add i32 %cond5, 4096
  %offset11 = getelementptr inbounds %struct.scatterlist, ptr %cond, i32 0, i32 1
  %10 = ptrtoint ptr %offset11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %offset11, align 4
  %add12 = add i32 %11, %8
  call void @__sanitizer_cov_trace_cmp4(i32 %add10, i32 %add12)
  %cmp13 = icmp eq i32 %add10, %add12
  br i1 %cmp13, label %if.then15, label %if.then8.if.then8.1_crit_edge

if.then8.if.then8.1_crit_edge:                    ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then8.1

if.then15:                                        ; preds = %if.then8
  %call = tail call ptr @sg_next(ptr noundef nonnull %cond) #17
  %tobool16.not = icmp eq ptr %call, null
  br i1 %tobool16.not, label %if.then15.if.else.1_crit_edge, label %if.then17

if.then15.if.else.1_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.1

if.then17:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #19
  %dma_address18 = getelementptr inbounds %struct.scatterlist, ptr %call, i32 0, i32 3
  %12 = ptrtoint ptr %dma_address18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dma_address18, align 4
  %dma_length19 = getelementptr inbounds %struct.scatterlist, ptr %call, i32 0, i32 4
  %14 = ptrtoint ptr %dma_length19 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %dma_length19, align 4
  br label %if.then8.1

if.else:                                          ; preds = %cond.end4
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx23 = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 0
  %16 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 0, ptr %arrayidx23, align 8
  br label %if.else.1

if.then8.1:                                       ; preds = %if.then17, %if.then8.if.then8.1_crit_edge
  %sg.1 = phi ptr [ %call, %if.then17 ], [ %cond, %if.then8.if.then8.1_crit_edge ]
  %offset.1 = phi i32 [ 0, %if.then17 ], [ %add10, %if.then8.if.then8.1_crit_edge ]
  %addr.2 = phi i32 [ %13, %if.then17 ], [ %6, %if.then8.if.then8.1_crit_edge ]
  %len.2 = phi i32 [ %15, %if.then17 ], [ %8, %if.then8.if.then8.1_crit_edge ]
  %add.1 = add i32 %addr.2, %offset.1
  %conv.1 = zext i32 %add.1 to i64
  %arrayidx.1 = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 1
  %17 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %conv.1, ptr %arrayidx.1, align 8
  %add10.1 = add i32 %offset.1, 4096
  %offset11.1 = getelementptr inbounds %struct.scatterlist, ptr %sg.1, i32 0, i32 1
  %18 = ptrtoint ptr %offset11.1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %offset11.1, align 4
  %add12.1 = add i32 %19, %len.2
  call void @__sanitizer_cov_trace_cmp4(i32 %add10.1, i32 %add12.1)
  %cmp13.1 = icmp eq i32 %add10.1, %add12.1
  br i1 %cmp13.1, label %if.then15.1, label %if.then8.1.if.then8.2_crit_edge

if.then8.1.if.then8.2_crit_edge:                  ; preds = %if.then8.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then8.2

if.then15.1:                                      ; preds = %if.then8.1
  %call.1 = tail call ptr @sg_next(ptr noundef nonnull %sg.1) #17
  %tobool16.not.1 = icmp eq ptr %call.1, null
  br i1 %tobool16.not.1, label %if.then15.1.if.else.2_crit_edge, label %if.then17.1

if.then15.1.if.else.2_crit_edge:                  ; preds = %if.then15.1
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.2

if.then17.1:                                      ; preds = %if.then15.1
  call void @__sanitizer_cov_trace_pc() #19
  %dma_address18.1 = getelementptr inbounds %struct.scatterlist, ptr %call.1, i32 0, i32 3
  %20 = ptrtoint ptr %dma_address18.1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %dma_address18.1, align 4
  %dma_length19.1 = getelementptr inbounds %struct.scatterlist, ptr %call.1, i32 0, i32 4
  %22 = ptrtoint ptr %dma_length19.1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %dma_length19.1, align 4
  br label %if.then8.2

if.else.1:                                        ; preds = %if.else, %if.then15.if.else.1_crit_edge
  %offset.1.ph = phi i32 [ %cond5, %if.else ], [ 0, %if.then15.if.else.1_crit_edge ]
  %addr.2.ph = phi i32 [ 0, %if.else ], [ %6, %if.then15.if.else.1_crit_edge ]
  %len.2.ph = phi i32 [ 0, %if.else ], [ %8, %if.then15.if.else.1_crit_edge ]
  %arrayidx23.1 = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 1
  %24 = ptrtoint ptr %arrayidx23.1 to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 0, ptr %arrayidx23.1, align 8
  br label %if.else.2

if.then8.2:                                       ; preds = %if.then17.1, %if.then8.1.if.then8.2_crit_edge
  %sg.1.1 = phi ptr [ %call.1, %if.then17.1 ], [ %sg.1, %if.then8.1.if.then8.2_crit_edge ]
  %offset.1.1 = phi i32 [ 0, %if.then17.1 ], [ %add10.1, %if.then8.1.if.then8.2_crit_edge ]
  %addr.2.1 = phi i32 [ %21, %if.then17.1 ], [ %addr.2, %if.then8.1.if.then8.2_crit_edge ]
  %len.2.1 = phi i32 [ %23, %if.then17.1 ], [ %len.2, %if.then8.1.if.then8.2_crit_edge ]
  %add.2 = add i32 %addr.2.1, %offset.1.1
  %conv.2 = zext i32 %add.2 to i64
  %arrayidx.2 = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 2
  %25 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %conv.2, ptr %arrayidx.2, align 8
  %add10.2 = add i32 %offset.1.1, 4096
  %offset11.2 = getelementptr inbounds %struct.scatterlist, ptr %sg.1.1, i32 0, i32 1
  %26 = ptrtoint ptr %offset11.2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %offset11.2, align 4
  %add12.2 = add i32 %27, %len.2.1
  call void @__sanitizer_cov_trace_cmp4(i32 %add10.2, i32 %add12.2)
  %cmp13.2 = icmp eq i32 %add10.2, %add12.2
  br i1 %cmp13.2, label %if.then15.2, label %if.then8.2.if.then8.3_crit_edge

if.then8.2.if.then8.3_crit_edge:                  ; preds = %if.then8.2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then8.3

if.then15.2:                                      ; preds = %if.then8.2
  %call.2 = tail call ptr @sg_next(ptr noundef nonnull %sg.1.1) #17
  %tobool16.not.2 = icmp eq ptr %call.2, null
  br i1 %tobool16.not.2, label %if.then15.2.if.else.3_crit_edge, label %if.then17.2

if.then15.2.if.else.3_crit_edge:                  ; preds = %if.then15.2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.3

if.then17.2:                                      ; preds = %if.then15.2
  call void @__sanitizer_cov_trace_pc() #19
  %dma_address18.2 = getelementptr inbounds %struct.scatterlist, ptr %call.2, i32 0, i32 3
  %28 = ptrtoint ptr %dma_address18.2 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %dma_address18.2, align 4
  %dma_length19.2 = getelementptr inbounds %struct.scatterlist, ptr %call.2, i32 0, i32 4
  %30 = ptrtoint ptr %dma_length19.2 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %dma_length19.2, align 4
  br label %if.then8.3

if.else.2:                                        ; preds = %if.else.1, %if.then15.1.if.else.2_crit_edge
  %offset.1.1.ph = phi i32 [ %offset.1.ph, %if.else.1 ], [ 0, %if.then15.1.if.else.2_crit_edge ]
  %addr.2.1.ph = phi i32 [ %addr.2.ph, %if.else.1 ], [ %addr.2, %if.then15.1.if.else.2_crit_edge ]
  %len.2.1.ph = phi i32 [ %len.2.ph, %if.else.1 ], [ %len.2, %if.then15.1.if.else.2_crit_edge ]
  %arrayidx23.2 = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 2
  %32 = ptrtoint ptr %arrayidx23.2 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 0, ptr %arrayidx23.2, align 8
  br label %if.else.3

if.then8.3:                                       ; preds = %if.then17.2, %if.then8.2.if.then8.3_crit_edge
  %sg.1.2 = phi ptr [ %call.2, %if.then17.2 ], [ %sg.1.1, %if.then8.2.if.then8.3_crit_edge ]
  %offset.1.2 = phi i32 [ 0, %if.then17.2 ], [ %add10.2, %if.then8.2.if.then8.3_crit_edge ]
  %addr.2.2 = phi i32 [ %29, %if.then17.2 ], [ %addr.2.1, %if.then8.2.if.then8.3_crit_edge ]
  %len.2.2 = phi i32 [ %31, %if.then17.2 ], [ %len.2.1, %if.then8.2.if.then8.3_crit_edge ]
  %add.3 = add i32 %addr.2.2, %offset.1.2
  %conv.3 = zext i32 %add.3 to i64
  %arrayidx.3 = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 3
  %33 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %conv.3, ptr %arrayidx.3, align 8
  %add10.3 = add i32 %offset.1.2, 4096
  %offset11.3 = getelementptr inbounds %struct.scatterlist, ptr %sg.1.2, i32 0, i32 1
  %34 = ptrtoint ptr %offset11.3 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %offset11.3, align 4
  %add12.3 = add i32 %35, %len.2.2
  call void @__sanitizer_cov_trace_cmp4(i32 %add10.3, i32 %add12.3)
  %cmp13.3 = icmp eq i32 %add10.3, %add12.3
  br i1 %cmp13.3, label %if.then15.3, label %if.then8.3.for.inc.3_crit_edge

if.then8.3.for.inc.3_crit_edge:                   ; preds = %if.then8.3
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.3

if.then15.3:                                      ; preds = %if.then8.3
  %call.3 = tail call ptr @sg_next(ptr noundef nonnull %sg.1.2) #17
  %tobool16.not.3 = icmp eq ptr %call.3, null
  br i1 %tobool16.not.3, label %if.then15.3.for.inc.3_crit_edge, label %if.then17.3

if.then15.3.for.inc.3_crit_edge:                  ; preds = %if.then15.3
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.3

if.then17.3:                                      ; preds = %if.then15.3
  call void @__sanitizer_cov_trace_pc() #19
  %dma_address18.3 = getelementptr inbounds %struct.scatterlist, ptr %call.3, i32 0, i32 3
  %36 = ptrtoint ptr %dma_address18.3 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %dma_address18.3, align 4
  %dma_length19.3 = getelementptr inbounds %struct.scatterlist, ptr %call.3, i32 0, i32 4
  %38 = ptrtoint ptr %dma_length19.3 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %dma_length19.3, align 4
  br label %for.inc.3

if.else.3:                                        ; preds = %if.else.2, %if.then15.2.if.else.3_crit_edge
  %offset.1.2.ph = phi i32 [ %offset.1.1.ph, %if.else.2 ], [ 0, %if.then15.2.if.else.3_crit_edge ]
  %addr.2.2.ph = phi i32 [ %addr.2.1.ph, %if.else.2 ], [ %addr.2.1, %if.then15.2.if.else.3_crit_edge ]
  %len.2.2.ph = phi i32 [ %len.2.1.ph, %if.else.2 ], [ %len.2.1, %if.then15.2.if.else.3_crit_edge ]
  %arrayidx23.3 = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 3
  %40 = ptrtoint ptr %arrayidx23.3 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 0, ptr %arrayidx23.3, align 8
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.else.3, %if.then17.3, %if.then15.3.for.inc.3_crit_edge, %if.then8.3.for.inc.3_crit_edge
  %sg.1.3 = phi ptr [ %call.3, %if.then17.3 ], [ null, %if.then15.3.for.inc.3_crit_edge ], [ %sg.1.2, %if.then8.3.for.inc.3_crit_edge ], [ null, %if.else.3 ]
  %offset.1.3 = phi i32 [ 0, %if.then17.3 ], [ 0, %if.then15.3.for.inc.3_crit_edge ], [ %add10.3, %if.then8.3.for.inc.3_crit_edge ], [ %offset.1.2.ph, %if.else.3 ]
  %addr.2.3 = phi i32 [ %37, %if.then17.3 ], [ %addr.2.2, %if.then15.3.for.inc.3_crit_edge ], [ %addr.2.2, %if.then8.3.for.inc.3_crit_edge ], [ %addr.2.2.ph, %if.else.3 ]
  %len.2.3 = phi i32 [ %39, %if.then17.3 ], [ %len.2.2, %if.then15.3.for.inc.3_crit_edge ], [ %len.2.2, %if.then8.3.for.inc.3_crit_edge ], [ %len.2.2.ph, %if.else.3 ]
  br i1 %tobool.not, label %for.inc.3.if.end27_crit_edge, label %if.then26

for.inc.3.if.end27_crit_edge:                     ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end27

if.then26:                                        ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #19
  %41 = ptrtoint ptr %sg_pp to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %sg.1.3, ptr %sg_pp, align 4
  %42 = ptrtoint ptr %sg_off to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %offset.1.3, ptr %sg_off, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %for.inc.3.if.end27_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %offset.1.3, i32 %len.2.3)
  %cmp28 = icmp eq i32 %offset.1.3, %len.2.3
  br i1 %cmp28, label %if.then30, label %if.end27.if.end37_crit_edge

if.end27.if.end37_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.then30:                                        ; preds = %if.end27
  %call31 = tail call ptr @sg_next(ptr noundef %sg.1.3) #17
  %tobool32.not = icmp eq ptr %call31, null
  br i1 %tobool32.not, label %if.then30.if.end37_crit_edge, label %if.then33

if.then30.if.end37_crit_edge:                     ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.then33:                                        ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #19
  %dma_address34 = getelementptr inbounds %struct.scatterlist, ptr %call31, i32 0, i32 3
  %43 = ptrtoint ptr %dma_address34 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %dma_address34, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then33, %if.then30.if.end37_crit_edge, %if.end27.if.end37_crit_edge
  %sg.2 = phi ptr [ %call31, %if.then33 ], [ null, %if.then30.if.end37_crit_edge ], [ %sg.1.3, %if.end27.if.end37_crit_edge ]
  %offset.2 = phi i32 [ 0, %if.then33 ], [ 0, %if.then30.if.end37_crit_edge ], [ %offset.1.3, %if.end27.if.end37_crit_edge ]
  %addr.3 = phi i32 [ %44, %if.then33 ], [ %addr.2.3, %if.then30.if.end37_crit_edge ], [ %addr.2.3, %if.end27.if.end37_crit_edge ]
  %tobool38.not = icmp eq ptr %sg.2, null
  %add40 = add i32 %addr.3, %offset.2
  %conv41 = zext i32 %add40 to i64
  %cond44 = select i1 %tobool38.not, i64 0, i64 %conv41
  %arrayidx46 = getelementptr %struct.cxgbi_pagepod, ptr %ppod, i32 0, i32 1, i32 4
  %45 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %cond44, ptr %arrayidx46, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sg_next(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_ddp_ppm_setup(ptr noundef %ppm_pp, ptr nocapture noundef %cdev, ptr noundef %tformat, i32 noundef %iscsi_size, i32 noundef %llimit, i32 noundef %start, i32 noundef %rsvd_factor, i32 noundef %edram_start, i32 noundef %edram_size) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %ports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 3
  %0 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ports, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pdev = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 9
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %lldev = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 4
  %6 = ptrtoint ptr %lldev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %lldev, align 4
  %call = tail call i32 @cxgbi_ppm_init(ptr noundef %ppm_pp, ptr noundef %3, ptr noundef %5, ptr noundef %7, ptr noundef %tformat, i32 noundef %iscsi_size, i32 noundef %llimit, i32 noundef %start, i32 noundef %rsvd_factor, i32 noundef %edram_start, i32 noundef %edram_size) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)
  %cmp = icmp sgt i32 %call, -1
  br i1 %cmp, label %if.then, label %entry.if.end8.sink.split_crit_edge

entry.if.end8.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8.sink.split

if.then:                                          ; preds = %entry
  %8 = ptrtoint ptr %ppm_pp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ppm_pp, align 4
  %ppmax = getelementptr inbounds %struct.cxgbi_ppm, ptr %9, i32 0, i32 6
  %10 = ptrtoint ptr %ppmax to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ppmax, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %11)
  %cmp1 = icmp ult i32 %11, 1024
  br i1 %cmp1, label %if.then.if.end8.sink.split_crit_edge, label %lor.lhs.false

if.then.if.end8.sink.split_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8.sink.split

lor.lhs.false:                                    ; preds = %if.then
  %pgsz_idx_dflt = getelementptr inbounds %struct.cxgbi_ppm, ptr %9, i32 0, i32 5, i32 1
  %12 = ptrtoint ptr %pgsz_idx_dflt to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %pgsz_idx_dflt, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %13)
  %cmp3 = icmp ugt i8 %13, 3
  br i1 %cmp3, label %lor.lhs.false.if.end8.sink.split_crit_edge, label %lor.lhs.false.if.end8_crit_edge

lor.lhs.false.if.end8_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8

lor.lhs.false.if.end8.sink.split_crit_edge:       ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8.sink.split

if.end8.sink.split:                               ; preds = %lor.lhs.false.if.end8.sink.split_crit_edge, %if.then.if.end8.sink.split_crit_edge, %entry.if.end8.sink.split_crit_edge
  %err.0.ph = phi i32 [ 0, %lor.lhs.false.if.end8.sink.split_crit_edge ], [ 0, %if.then.if.end8.sink.split_crit_edge ], [ %call, %entry.if.end8.sink.split_crit_edge ]
  %flags6 = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 2
  %14 = ptrtoint ptr %flags6 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags6, align 4
  %or = or i32 %15, 256
  store i32 %or, ptr %flags6, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.end8.sink.split, %lor.lhs.false.if.end8_crit_edge
  %err.0 = phi i32 [ 0, %lor.lhs.false.if.end8_crit_edge ], [ %err.0.ph, %if.end8.sink.split ]
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cxgbi_ppm_init(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_parse_pdu_itt(ptr nocapture noundef readonly %conn, i32 noundef %itt, ptr noundef %idx, ptr noundef %age) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dd_data = getelementptr inbounds %struct.iscsi_conn, ptr %conn, i32 0, i32 1
  %0 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dd_data, align 4
  %dd_data1 = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dd_data1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dd_data1, align 4
  %chba = getelementptr inbounds %struct.cxgbi_conn, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %chba to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %chba, align 4
  %cdev2 = getelementptr inbounds %struct.cxgbi_hba, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cdev2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cdev2, align 4
  %cdev2ppm = getelementptr inbounds %struct.cxgbi_device, ptr %7, i32 0, i32 23
  %8 = ptrtoint ptr %cdev2ppm to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cdev2ppm, align 4
  %call = tail call ptr %9(ptr noundef %7) #17
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.if.end9_crit_edge, label %if.then

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end9

if.then:                                          ; preds = %entry
  %no_ddp_mask.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call, i32 0, i32 5, i32 5
  %10 = ptrtoint ptr %no_ddp_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %no_ddp_mask.i, align 4
  %and.i = and i32 %11, %itt
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i.not, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %shr.i.i = lshr i32 %itt, 6
  %idx_mask.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call, i32 0, i32 5, i32 6
  %12 = ptrtoint ptr %idx_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %idx_mask.i.i, align 4
  %and.i.i = and i32 %13, %shr.i.i
  %base_idx.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call, i32 0, i32 8
  %14 = ptrtoint ptr %base_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %base_idx.i.i, align 4
  %sub.i.i = sub i32 %and.i.i, %15
  %caller_data.i = getelementptr %struct.cxgbi_ppm, ptr %call, i32 0, i32 17, i32 %sub.i.i, i32 3
  %16 = ptrtoint ptr %caller_data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %caller_data.i, align 4
  br label %if.end9

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %idx_bits.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call, i32 0, i32 5, i32 3
  %18 = ptrtoint ptr %idx_bits.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %idx_bits.i, align 2
  %conv.i = zext i8 %19 to i32
  %color_bits.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call, i32 0, i32 5, i32 2
  %20 = ptrtoint ptr %color_bits.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %bf.load.i = load i8, ptr %color_bits.i, align 1
  %bf.clear.i = and i8 %bf.load.i, 15
  %conv2.i = zext i8 %bf.clear.i to i32
  %add.i = add nuw nsw i32 %conv2.i, %conv.i
  %idx_clr_mask.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call, i32 0, i32 5, i32 8
  %21 = ptrtoint ptr %idx_clr_mask.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %idx_clr_mask.i, align 4
  %and.i38 = and i32 %22, %itt
  %rsvd_bits.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call, i32 0, i32 5, i32 4
  %23 = ptrtoint ptr %rsvd_bits.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %rsvd_bits.i, align 1
  %conv3.i = zext i8 %24 to i32
  %shr.i = lshr i32 %itt, %conv3.i
  %shl.i = shl i32 %shr.i, %add.i
  %or.i = or i32 %shl.i, %and.i38
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5, %entry.if.end9_crit_edge
  %sw_bits.0 = phi i32 [ %17, %if.then5 ], [ %or.i, %if.else ], [ %itt, %entry.if.end9_crit_edge ]
  %tobool.not.i39 = icmp eq ptr %age, null
  br i1 %tobool.not.i39, label %if.end9.if.end.i_crit_edge, label %if.then.i

if.end9.if.end.i_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.then.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  %and.i40 = and i32 %sw_bits.0, 32767
  %25 = ptrtoint ptr %age to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %and.i40, ptr %age, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end9.if.end.i_crit_edge
  %tobool1.not.i = icmp eq ptr %idx, null
  br i1 %tobool1.not.i, label %cxgbi_decode_sw_tag.exit, label %cxgbi_decode_sw_tag.exit.thread

cxgbi_decode_sw_tag.exit:                         ; preds = %if.end.i
  %26 = load i32, ptr @dbg_level, align 4
  %and = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool10.not = icmp eq i32 %and, 0
  br i1 %tobool10.not, label %cxgbi_decode_sw_tag.exit.do.end22_crit_edge, label %cxgbi_decode_sw_tag.exit.cond.end_crit_edge

cxgbi_decode_sw_tag.exit.cond.end_crit_edge:      ; preds = %cxgbi_decode_sw_tag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cxgbi_decode_sw_tag.exit.do.end22_crit_edge:      ; preds = %cxgbi_decode_sw_tag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end22

cxgbi_decode_sw_tag.exit.thread:                  ; preds = %if.end.i
  %shr.i41 = lshr i32 %sw_bits.0, 16
  %and3.i = and i32 %shr.i41, 32767
  %27 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %and3.i, ptr %idx, align 4
  %28 = load i32, ptr @dbg_level, align 4
  %and42 = and i32 %28, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42)
  %tobool10.not43 = icmp eq i32 %and42, 0
  br i1 %tobool10.not43, label %cxgbi_decode_sw_tag.exit.thread.do.end22_crit_edge, label %cond.true

cxgbi_decode_sw_tag.exit.thread.do.end22_crit_edge: ; preds = %cxgbi_decode_sw_tag.exit.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end22

cond.true:                                        ; preds = %cxgbi_decode_sw_tag.exit.thread
  call void @__sanitizer_cov_trace_pc() #19
  %29 = ptrtoint ptr %idx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %idx, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %cxgbi_decode_sw_tag.exit.cond.end_crit_edge
  %cond = phi i32 [ %30, %cond.true ], [ 1048575, %cxgbi_decode_sw_tag.exit.cond.end_crit_edge ]
  br i1 %tobool.not.i39, label %cond.end.cond.end17_crit_edge, label %cond.true15

cond.end.cond.end17_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end17

cond.true15:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  %31 = ptrtoint ptr %age to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %age, align 4
  br label %cond.end17

cond.end17:                                       ; preds = %cond.true15, %cond.end.cond.end17_crit_edge
  %cond18 = phi i32 [ %32, %cond.true15 ], [ 255, %cond.end.cond.end17_crit_edge ]
  %call19 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67, ptr noundef nonnull @.str.68, ptr noundef %7, i32 noundef %itt, i32 noundef %itt, i32 noundef %sw_bits.0, i32 noundef %cond, i32 noundef %cond18) #21
  br label %do.end22

do.end22:                                         ; preds = %cond.end17, %cxgbi_decode_sw_tag.exit.thread.do.end22_crit_edge, %cxgbi_decode_sw_tag.exit.do.end22_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_conn_queue_work(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_conn_pdu_ready(ptr noundef %csk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %csk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %csk, align 4
  %user_data = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 39
  %2 = ptrtoint ptr %user_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %user_data, align 4
  %4 = load i32, ptr @dbg_level, align 4
  %and = and i32 %4, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end4_crit_edge, label %do.end

entry.do.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end4

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.71, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef %3) #21
  br label %do.end4

do.end4:                                          ; preds = %do.end, %entry.do.end4_crit_edge
  %tobool5.not = icmp eq ptr %3, null
  br i1 %tobool5.not, label %do.body10, label %lor.rhs, !prof !895

lor.rhs:                                          ; preds = %do.end4
  %suspend_rx = getelementptr inbounds %struct.iscsi_conn, ptr %3, i32 0, i32 22
  %5 = ptrtoint ptr %suspend_rx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %suspend_rx, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool6.not = icmp eq i32 %6, 0
  br i1 %tobool6.not, label %while.cond.preheader, label %do.body10.thread, !prof !888

while.cond.preheader:                             ; preds = %lor.rhs
  %receive_queue = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 33
  %qlen.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 33, i32 1
  %skb_rx_extra = getelementptr inbounds %struct.cxgbi_device, ptr %1, i32 0, i32 17
  br label %while.cond

do.body10:                                        ; preds = %do.end4
  %7 = load i32, ptr @dbg_level, align 4
  %and11 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %do.body10.cleanup197_crit_edge, label %do.body10.cond.end23_crit_edge

do.body10.cond.end23_crit_edge:                   ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end23

do.body10.cleanup197_crit_edge:                   ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup197

do.body10.thread:                                 ; preds = %lor.rhs
  %8 = load i32, ptr @dbg_level, align 4
  %and11311 = and i32 %8, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11311)
  %tobool12.not312 = icmp eq i32 %and11311, 0
  br i1 %tobool12.not312, label %do.body10.thread.cleanup197_crit_edge, label %cond.true20

do.body10.thread.cleanup197_crit_edge:            ; preds = %do.body10.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup197

cond.true20:                                      ; preds = %do.body10.thread
  call void @__sanitizer_cov_trace_pc() #19
  %id = getelementptr inbounds %struct.iscsi_conn, ptr %3, i32 0, i32 12
  %9 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %id, align 4
  %11 = ptrtoint ptr %suspend_rx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %suspend_rx, align 8
  br label %cond.end23

cond.end23:                                       ; preds = %cond.true20, %do.body10.cond.end23_crit_edge
  %cond315 = phi i32 [ %10, %cond.true20 ], [ 255, %do.body10.cond.end23_crit_edge ]
  %cond24 = phi i32 [ %12, %cond.true20 ], [ 255, %do.body10.cond.end23_crit_edge ]
  %call25 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.74, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef %3, i32 noundef %cond315, i32 noundef %cond24) #21
  br label %cleanup197

while.cond:                                       ; preds = %skb_done.while.cond_crit_edge, %while.cond.preheader
  %err.0 = phi i32 [ %err.2, %skb_done.while.cond_crit_edge ], [ 0, %while.cond.preheader ]
  %read.0 = phi i32 [ %add, %skb_done.while.cond_crit_edge ], [ 0, %while.cond.preheader ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool30.not = icmp eq i32 %err.0, 0
  br i1 %tobool30.not, label %while.body, label %while.cond.do.body171_crit_edge

while.cond.do.body171_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body171

while.body:                                       ; preds = %while.cond
  %13 = ptrtoint ptr %receive_queue to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %receive_queue, align 4
  %cmp.i = icmp eq ptr %14, %receive_queue
  %tobool34.not318 = icmp eq ptr %14, null
  %tobool34.not = or i1 %cmp.i, %tobool34.not318
  br i1 %tobool34.not, label %while.body.do.body171_crit_edge, label %lor.lhs.false

while.body.do.body171_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body171

lor.lhs.false:                                    ; preds = %while.body
  %flags.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 3, i32 16
  %15 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %flags.i, align 4
  %17 = and i32 %16, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool36.not = icmp eq i32 %17, 0
  br i1 %tobool36.not, label %do.body40.critedge, label %if.end53

do.body40.critedge:                               ; preds = %lor.lhs.false
  %18 = load i32, ptr @dbg_level, align 4
  %and41 = and i32 %18, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  br i1 %tobool42.not, label %do.body40.critedge.do.body171_crit_edge, label %do.end46

do.body40.critedge.do.body171_crit_edge:          ; preds = %do.body40.critedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body171

do.end46:                                         ; preds = %do.body40.critedge
  call void @__sanitizer_cov_trace_pc() #19
  %call48 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77, ptr noundef nonnull @.str.72, ptr noundef nonnull %14, i32 noundef %16) #21
  br label %do.body171

if.end53:                                         ; preds = %lor.lhs.false
  %19 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %qlen.i, align 4
  %sub.i = add i32 %20, -1
  store volatile i32 %sub.i, ptr %qlen.i, align 4
  %21 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %14, align 8
  %prev9.i = getelementptr inbounds %struct.anon.51, ptr %14, i32 0, i32 1
  %23 = ptrtoint ptr %prev9.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev9.i, align 4
  store ptr null, ptr %prev9.i, align 4
  store ptr null, ptr %14, align 8
  %prev17.i = getelementptr inbounds %struct.anon.51, ptr %22, i32 0, i32 1
  %25 = ptrtoint ptr %prev17.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %24, ptr %prev17.i, align 4
  %26 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %22, ptr %24, align 8
  %pdulen = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 3, i32 4
  %27 = ptrtoint ptr %pdulen to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %pdulen, align 4
  %add = add i32 %28, %read.0
  %29 = load i32, ptr @dbg_level, align 4
  %and58 = and i32 %29, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %if.end53.do.end74_crit_edge, label %do.end63

if.end53.do.end74_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end74

do.end63:                                         ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #19
  %len = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 6
  %30 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %len, align 4
  %32 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags.i, align 8
  %call71 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.80, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef nonnull %14, i32 noundef %31, i32 noundef %33, i32 noundef %28) #21
  br label %do.end74

do.end74:                                         ; preds = %do.end63, %if.end53.do.end74_crit_edge
  %34 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %flags.i, align 4
  %36 = and i32 %35, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool76.not = icmp eq i32 %36, 0
  %call110 = tail call fastcc i32 @skb_read_pdu_bhs(ptr noundef %csk, ptr noundef nonnull %3, ptr noundef nonnull %14)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call110)
  %cmp111 = icmp slt i32 %call110, 0
  br i1 %tobool76.not, label %if.else, label %if.then77

if.then77:                                        ; preds = %do.end74
  br i1 %cmp111, label %do.end82, label %if.end92

do.end82:                                         ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #19
  %len84 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 6
  %37 = ptrtoint ptr %len84 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %len84, align 4
  %39 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %flags.i, align 8
  %41 = ptrtoint ptr %pdulen to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %pdulen, align 4
  %call91 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.83, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef nonnull %14, i32 noundef %38, i32 noundef %40, i32 noundef %42) #21
  br label %skb_done.thread

if.end92:                                         ; preds = %if.then77
  %43 = ptrtoint ptr %skb_rx_extra to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %skb_rx_extra, align 4
  %add93 = add i32 %44, %call110
  %call94 = tail call fastcc i32 @skb_read_pdu_data(ptr noundef nonnull %3, ptr noundef nonnull %14, ptr noundef nonnull %14, i32 noundef %add93)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %cmp95 = icmp slt i32 %call94, 0
  br i1 %cmp95, label %do.end99, label %if.end92.skb_done_crit_edge

if.end92.skb_done_crit_edge:                      ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_done

do.end99:                                         ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #19
  %len101 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 6
  %45 = ptrtoint ptr %len101 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %len101, align 4
  %47 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %flags.i, align 8
  %49 = ptrtoint ptr %pdulen to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %pdulen, align 4
  %call108 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.86, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef nonnull %14, i32 noundef %46, i32 noundef %48, i32 noundef %50) #21
  br label %skb_done.thread

if.else:                                          ; preds = %do.end74
  br i1 %cmp111, label %do.end115, label %if.end125

do.end115:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %len117 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 6
  %51 = ptrtoint ptr %len117 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %len117, align 4
  %53 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %flags.i, align 8
  %55 = ptrtoint ptr %pdulen to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %pdulen, align 4
  %call124 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef nonnull %14, i32 noundef %52, i32 noundef %54, i32 noundef %56) #21
  br label %skb_done.thread

if.end125:                                        ; preds = %if.else
  %57 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %flags.i, align 4
  %59 = and i32 %58, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool127.not = icmp eq i32 %59, 0
  br i1 %tobool127.not, label %if.else164, label %if.then128

if.then128:                                       ; preds = %if.end125
  %60 = ptrtoint ptr %receive_queue to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %receive_queue, align 4
  %cmp.i303 = icmp eq ptr %61, %receive_queue
  %tobool131.not319 = icmp eq ptr %61, null
  %tobool131.not = or i1 %cmp.i303, %tobool131.not319
  br i1 %tobool131.not, label %do.end135, label %if.end145

do.end135:                                        ; preds = %if.then128
  call void @__sanitizer_cov_trace_pc() #19
  %len137 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 6
  %62 = ptrtoint ptr %len137 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %len137, align 4
  %64 = ptrtoint ptr %pdulen to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %pdulen, align 4
  %call144 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.92, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef nonnull %14, i32 noundef %63, i32 noundef %58, i32 noundef %65) #21
  br label %skb_done.thread

if.end145:                                        ; preds = %if.then128
  %66 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %qlen.i, align 4
  %sub.i306 = add i32 %67, -1
  store volatile i32 %sub.i306, ptr %qlen.i, align 4
  %68 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %61, align 8
  %prev9.i307 = getelementptr inbounds %struct.anon.51, ptr %61, i32 0, i32 1
  %70 = ptrtoint ptr %prev9.i307 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %prev9.i307, align 4
  store ptr null, ptr %prev9.i307, align 4
  store ptr null, ptr %61, align 8
  %prev17.i308 = getelementptr inbounds %struct.anon.51, ptr %69, i32 0, i32 1
  %72 = ptrtoint ptr %prev17.i308 to i32
  call void @__asan_store4_noabort(i32 %72)
  store volatile ptr %71, ptr %prev17.i308, align 4
  %73 = ptrtoint ptr %71 to i32
  call void @__asan_store4_noabort(i32 %73)
  store volatile ptr %69, ptr %71, align 8
  %call147 = tail call fastcc i32 @skb_read_pdu_data(ptr noundef nonnull %3, ptr noundef nonnull %14, ptr noundef nonnull %61, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call147)
  %cmp148 = icmp slt i32 %call147, 0
  br i1 %cmp148, label %do.end152, label %if.end145.if.end163_crit_edge

if.end145.if.end163_crit_edge:                    ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end163

do.end152:                                        ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #19
  %len154 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 6
  %74 = ptrtoint ptr %len154 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %len154, align 4
  %76 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %flags.i, align 8
  %78 = ptrtoint ptr %pdulen to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %pdulen, align 4
  %len161 = getelementptr inbounds %struct.sk_buff, ptr %61, i32 0, i32 6
  %80 = ptrtoint ptr %len161 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %len161, align 4
  %call162 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.95, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef nonnull %14, i32 noundef %75, i32 noundef %77, i32 noundef %79, ptr noundef nonnull %61, i32 noundef %81) #21
  br label %if.end163

if.end163:                                        ; preds = %do.end152, %if.end145.if.end163_crit_edge
  tail call void @__kfree_skb(ptr noundef nonnull %61) #17
  br label %skb_done

if.else164:                                       ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #19
  %call165 = tail call fastcc i32 @skb_read_pdu_data(ptr noundef nonnull %3, ptr noundef nonnull %14, ptr noundef nonnull %14, i32 noundef 0)
  br label %skb_done

skb_done.thread:                                  ; preds = %do.end135, %do.end115, %do.end99, %do.end82
  %err.2.ph = phi i32 [ -5, %do.end135 ], [ %call110, %do.end115 ], [ %call94, %do.end99 ], [ %call110, %do.end82 ]
  tail call void @__kfree_skb(ptr noundef nonnull %14) #17
  br label %do.body171

skb_done:                                         ; preds = %if.else164, %if.end163, %if.end92.skb_done_crit_edge
  %err.2 = phi i32 [ %call94, %if.end92.skb_done_crit_edge ], [ %call165, %if.else164 ], [ %call147, %if.end163 ]
  tail call void @__kfree_skb(ptr noundef nonnull %14) #17
  %cmp168 = icmp slt i32 %err.2, 0
  br i1 %cmp168, label %skb_done.do.body171_crit_edge, label %skb_done.while.cond_crit_edge

skb_done.while.cond_crit_edge:                    ; preds = %skb_done
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond

skb_done.do.body171_crit_edge:                    ; preds = %skb_done
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body171

do.body171:                                       ; preds = %skb_done.do.body171_crit_edge, %skb_done.thread, %do.end46, %do.body40.critedge.do.body171_crit_edge, %while.body.do.body171_crit_edge, %while.cond.do.body171_crit_edge
  %err.3 = phi i32 [ 0, %do.end46 ], [ 0, %do.body40.critedge.do.body171_crit_edge ], [ %err.2.ph, %skb_done.thread ], [ 0, %while.body.do.body171_crit_edge ], [ %err.0, %while.cond.do.body171_crit_edge ], [ %err.2, %skb_done.do.body171_crit_edge ]
  %read.1 = phi i32 [ %read.0, %do.end46 ], [ %read.0, %do.body40.critedge.do.body171_crit_edge ], [ %add, %skb_done.thread ], [ %read.0, %while.body.do.body171_crit_edge ], [ %read.0, %while.cond.do.body171_crit_edge ], [ %add, %skb_done.do.body171_crit_edge ]
  %82 = load i32, ptr @dbg_level, align 4
  %and172 = and i32 %82, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and172)
  %tobool173.not = icmp eq i32 %and172, 0
  br i1 %tobool173.not, label %do.body171.do.end182_crit_edge, label %do.end177

do.body171.do.end182_crit_edge:                   ; preds = %do.body171
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end182

do.end177:                                        ; preds = %do.body171
  call void @__sanitizer_cov_trace_pc() #19
  %call179 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.98, ptr noundef nonnull @.str.72, ptr noundef %csk, i32 noundef %read.1) #21
  br label %do.end182

do.end182:                                        ; preds = %do.end177, %do.body171.do.end182_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %read.1)
  %tobool183.not = icmp eq i32 %read.1, 0
  br i1 %tobool183.not, label %do.end182.if.end187_crit_edge, label %if.then184

do.end182.if.end187_crit_edge:                    ; preds = %do.end182
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end187

if.then184:                                       ; preds = %do.end182
  %copied_seq = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 41
  %83 = ptrtoint ptr %copied_seq to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %copied_seq, align 4
  %add185 = add i32 %84, %read.1
  store i32 %add185, ptr %copied_seq, align 4
  %85 = ptrtoint ptr %csk to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %csk, align 4
  %87 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %87, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then184.do.end4.i_crit_edge, label %do.end.i

if.then184.do.end4.i_crit_edge:                   ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end4.i

do.end.i:                                         ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #19
  %state.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %88 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %state.i, align 4
  %flags.i309 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 3
  %90 = ptrtoint ptr %flags.i309 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %flags.i309, align 4
  %tid.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 1
  %92 = ptrtoint ptr %tid.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %tid.i, align 4
  %rcv_wup.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 42
  %94 = ptrtoint ptr %rcv_wup.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %rcv_wup.i, align 4
  %rx_credit_thres.i = getelementptr inbounds %struct.cxgbi_device, ptr %86, i32 0, i32 14
  %96 = ptrtoint ptr %rx_credit_thres.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %rx_credit_thres.i, align 4
  %rcv_win.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 47
  %98 = ptrtoint ptr %rcv_win.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %rcv_win.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.291, ptr noundef nonnull @.str.292, ptr noundef %csk, i32 noundef %89, i32 noundef %91, i32 noundef %93, i32 noundef %add185, i32 noundef %95, i32 noundef %97, i32 noundef %99) #21
  br label %do.end4.i

do.end4.i:                                        ; preds = %do.end.i, %if.then184.do.end4.i_crit_edge
  %rx_credit_thres5.i = getelementptr inbounds %struct.cxgbi_device, ptr %86, i32 0, i32 14
  %100 = ptrtoint ptr %rx_credit_thres5.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %rx_credit_thres5.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %tobool6.not.i = icmp eq i32 %101, 0
  br i1 %tobool6.not.i, label %do.end4.i.csk_return_rx_credits.exit_crit_edge, label %if.end8.i

do.end4.i.csk_return_rx_credits.exit_crit_edge:   ; preds = %do.end4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %csk_return_rx_credits.exit

if.end8.i:                                        ; preds = %do.end4.i
  %state9.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 28
  %102 = ptrtoint ptr %state9.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %state9.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %103)
  %cmp.not.i = icmp eq i32 %103, 3
  br i1 %cmp.not.i, label %if.end11.i, label %if.end8.i.csk_return_rx_credits.exit_crit_edge

if.end8.i.csk_return_rx_credits.exit_crit_edge:   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %csk_return_rx_credits.exit

if.end11.i:                                       ; preds = %if.end8.i
  %104 = ptrtoint ptr %copied_seq to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %copied_seq, align 4
  %rcv_wup13.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 42
  %106 = ptrtoint ptr %rcv_wup13.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %rcv_wup13.i, align 4
  %sub.i310 = sub i32 %105, %107
  call void @__sanitizer_cov_trace_cmp4(i32 %105, i32 %107)
  %tobool14.not.i = icmp eq i32 %105, %107
  br i1 %tobool14.not.i, label %if.end11.i.csk_return_rx_credits.exit_crit_edge, label %if.end19.i, !prof !895

if.end11.i.csk_return_rx_credits.exit_crit_edge:  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %csk_return_rx_credits.exit

if.end19.i:                                       ; preds = %if.end11.i
  %add.i = add i32 %sub.i310, 16384
  %rcv_win20.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk, i32 0, i32 47
  %108 = ptrtoint ptr %rcv_win20.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %rcv_win20.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %109)
  %cmp21.not.i = icmp ult i32 %add.i, %109
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i310, i32 %101)
  %cmp24.not.i = icmp ult i32 %sub.i310, %101
  %or.cond.i = select i1 %cmp21.not.i, i1 %cmp24.not.i, i1 false
  br i1 %or.cond.i, label %if.end19.i.csk_return_rx_credits.exit_crit_edge, label %if.then26.i

if.end19.i.csk_return_rx_credits.exit_crit_edge:  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %csk_return_rx_credits.exit

if.then26.i:                                      ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #19
  %csk_send_rx_credits.i = getelementptr inbounds %struct.cxgbi_device, ptr %86, i32 0, i32 30
  %110 = ptrtoint ptr %csk_send_rx_credits.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %csk_send_rx_credits.i, align 4
  %call27.i = tail call i32 %111(ptr noundef %csk, i32 noundef %sub.i310) #17
  %112 = ptrtoint ptr %rcv_wup13.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %rcv_wup13.i, align 4
  %add29.i = add i32 %113, %call27.i
  store i32 %add29.i, ptr %rcv_wup13.i, align 4
  br label %csk_return_rx_credits.exit

csk_return_rx_credits.exit:                       ; preds = %if.then26.i, %if.end19.i.csk_return_rx_credits.exit_crit_edge, %if.end11.i.csk_return_rx_credits.exit_crit_edge, %if.end8.i.csk_return_rx_credits.exit_crit_edge, %do.end4.i.csk_return_rx_credits.exit_crit_edge
  %conv = zext i32 %read.1 to i64
  %rxdata_octets = getelementptr inbounds %struct.iscsi_conn, ptr %3, i32 0, i32 48
  %114 = ptrtoint ptr %rxdata_octets to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %rxdata_octets, align 8
  %add186 = add i64 %115, %conv
  store i64 %add186, ptr %rxdata_octets, align 8
  br label %if.end187

if.end187:                                        ; preds = %csk_return_rx_credits.exit, %do.end182.if.end187_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.3)
  %cmp188 = icmp slt i32 %err.3, 0
  br i1 %cmp188, label %do.end193, label %if.end187.cleanup197_crit_edge

if.end187.cleanup197_crit_edge:                   ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup197

do.end193:                                        ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #19
  %call195 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.101, ptr noundef nonnull @.str.72, ptr noundef %csk, ptr noundef nonnull %3, i32 noundef %err.3, i32 noundef %read.1) #21
  tail call void @iscsi_conn_failure(ptr noundef nonnull %3, i32 noundef 1011) #17
  br label %cleanup197

cleanup197:                                       ; preds = %do.end193, %if.end187.cleanup197_crit_edge, %cond.end23, %do.body10.thread.cleanup197_crit_edge, %do.body10.cleanup197_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @skb_read_pdu_bhs(ptr noundef %csk, ptr noundef %conn, ptr noundef %skb) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dd_data = getelementptr inbounds %struct.iscsi_conn, ptr %conn, i32 0, i32 1
  %0 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dd_data, align 4
  %2 = load i32, ptr @dbg_level, align 4
  %and = and i32 %2, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %3 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len, align 4
  %flags = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 16
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 8
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.257, ptr noundef nonnull @.str.258, ptr noundef %conn, ptr noundef %skb, i32 noundef %4, i32 noundef %6) #21
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  %call4 = tail call i32 @iscsi_tcp_recv_segment_is_hdr(ptr noundef %1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %do.end9, label %if.end12

do.end9:                                          ; preds = %do.end3
  call void @__sanitizer_cov_trace_pc() #19
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.260, ptr noundef nonnull @.str.258, ptr noundef %conn, ptr noundef %skb) #21
  tail call void @iscsi_conn_failure(ptr noundef %conn, i32 noundef 1008) #17
  br label %cleanup

if.end12:                                         ; preds = %do.end3
  %hdrdgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %conn, i32 0, i32 25
  %7 = ptrtoint ptr %hdrdgst_en to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %hdrdgst_en, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool13.not = icmp eq i32 %8, 0
  br i1 %tobool13.not, label %if.end12.if.end22_crit_edge, label %land.lhs.true

if.end12.if.end22_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end22

land.lhs.true:                                    ; preds = %if.end12
  %flags.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 16
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags.i, align 4
  %11 = and i32 %10, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool15.not = icmp eq i32 %11, 0
  br i1 %tobool15.not, label %land.lhs.true.if.end22_crit_edge, label %do.end19

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end22

do.end19:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.263, ptr noundef nonnull @.str.258, ptr noundef %conn, ptr noundef %skb) #21
  tail call void @iscsi_conn_failure(ptr noundef %conn, i32 noundef 1014) #17
  br label %cleanup

if.end22:                                         ; preds = %land.lhs.true.if.end22_crit_edge, %if.end12.if.end22_crit_edge
  %flags.i82 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 16
  %12 = ptrtoint ptr %flags.i82 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %flags.i82, align 4
  %14 = and i32 %13, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool24.not = icmp eq i32 %14, 0
  br i1 %tobool24.not, label %if.end22.if.end38_crit_edge, label %land.lhs.true25

if.end22.if.end38_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

land.lhs.true25:                                  ; preds = %if.end22
  %15 = ptrtoint ptr %flags.i82 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %flags.i82, align 4
  %17 = and i32 %16, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool27.not = icmp eq i32 %17, 0
  br i1 %tobool27.not, label %land.lhs.true25.if.end38_crit_edge, label %if.then28

land.lhs.true25.if.end38_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

if.then28:                                        ; preds = %land.lhs.true25
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %18 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %data, align 4
  %itt29 = getelementptr inbounds %struct.iscsi_data, ptr %19, i32 0, i32 6
  %20 = ptrtoint ptr %itt29 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %itt29, align 4
  %call30 = tail call ptr @iscsi_itt_to_ctask(ptr noundef %conn, i32 noundef %21) #17
  %22 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %data, align 4
  %datasn = getelementptr inbounds %struct.iscsi_data, ptr %23, i32 0, i32 11
  %24 = ptrtoint ptr %datasn to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %datasn, align 4
  %tobool32.not = icmp eq ptr %call30, null
  br i1 %tobool32.not, label %if.then28.if.end38_crit_edge, label %land.lhs.true33

if.then28.if.end38_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

land.lhs.true33:                                  ; preds = %if.then28
  %sc = getelementptr inbounds %struct.iscsi_task, ptr %call30, i32 0, i32 11
  %26 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %sc, align 4
  %tobool34.not = icmp eq ptr %27, null
  br i1 %tobool34.not, label %land.lhs.true33.if.end38_crit_edge, label %if.then35

land.lhs.true33.if.end38_crit_edge:               ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

if.then35:                                        ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #19
  %dd_data36 = getelementptr inbounds %struct.iscsi_task, ptr %call30, i32 0, i32 20
  %28 = ptrtoint ptr %dd_data36 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dd_data36, align 4
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %25, ptr %29, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then35, %land.lhs.true33.if.end38_crit_edge, %if.then28.if.end38_crit_edge, %land.lhs.true25.if.end38_crit_edge, %if.end22.if.end38_crit_edge
  %call39 = tail call fastcc i32 @read_pdu_skb(ptr noundef %conn, ptr noundef %skb, i32 noundef 0, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call39)
  %cmp = icmp sgt i32 %call39, -1
  br i1 %cmp, label %if.then42, label %if.end38.cleanup_crit_edge, !prof !888

if.end38.cleanup_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then42:                                        ; preds = %if.end38
  %data43 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %31 = ptrtoint ptr %data43 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %data43, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %32, align 4
  %35 = and i8 %34, 63
  call void @__sanitizer_cov_trace_const_cmp1(i8 38, i8 %35)
  %cmp48 = icmp eq i8 %35, 38
  br i1 %cmp48, label %if.then56, label %if.then42.cleanup_crit_edge, !prof !895

if.then42.cleanup_crit_edge:                      ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then56:                                        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @cxgbi_sock_set_flag(ptr noundef %csk, i32 noundef 8)
  br label %cleanup

cleanup:                                          ; preds = %if.then56, %if.then42.cleanup_crit_edge, %if.end38.cleanup_crit_edge, %do.end19, %do.end9
  %retval.0 = phi i32 [ -5, %do.end19 ], [ -5, %do.end9 ], [ %call39, %if.then42.cleanup_crit_edge ], [ %call39, %if.then56 ], [ %call39, %if.end38.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @skb_read_pdu_data(ptr noundef %conn, ptr noundef %lskb, ptr noundef %skb, i32 noundef %offset) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dd_data = getelementptr inbounds %struct.iscsi_conn, ptr %conn, i32 0, i32 1
  %0 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dd_data, align 4
  %in = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %in to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %in, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %3, align 4
  %6 = and i8 %5, 63
  %7 = load i32, ptr @dbg_level, align 4
  %and2 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool.not = icmp eq i32 %and2, 0
  br i1 %tobool.not, label %entry.do.end5_crit_edge, label %do.end

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end5

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  %flags = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 16
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 8
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.257, ptr noundef nonnull @.str.282, ptr noundef %conn, ptr noundef %skb, i32 noundef %9, i32 noundef %11) #21
  br label %do.end5

do.end5:                                          ; preds = %do.end, %entry.do.end5_crit_edge
  %datadgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %conn, i32 0, i32 26
  %12 = ptrtoint ptr %datadgst_en to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %datadgst_en, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool6.not = icmp eq i32 %13, 0
  br i1 %tobool6.not, label %do.end5.if.end18_crit_edge, label %land.lhs.true

do.end5.if.end18_crit_edge:                       ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

land.lhs.true:                                    ; preds = %do.end5
  %flags.i = getelementptr inbounds %struct.sk_buff, ptr %lskb, i32 0, i32 3, i32 16
  %14 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %flags.i, align 4
  %16 = and i32 %15, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool8.not = icmp eq i32 %16, 0
  br i1 %tobool8.not, label %land.lhs.true.if.end18_crit_edge, label %do.end12

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

do.end12:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.284, ptr noundef nonnull @.str.282, ptr noundef %conn, ptr noundef %lskb, i32 noundef %15) #21
  tail call void @iscsi_conn_failure(ptr noundef %conn, i32 noundef 1015) #17
  br label %cleanup

if.end18:                                         ; preds = %land.lhs.true.if.end18_crit_edge, %do.end5.if.end18_crit_edge
  %call19 = tail call i32 @iscsi_tcp_recv_segment_is_hdr(ptr noundef %1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end22, label %if.end18.cleanup_crit_edge

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end22:                                         ; preds = %if.end18
  %cmp = icmp eq ptr %lskb, %skb
  br i1 %cmp, label %land.lhs.true24, label %if.end22.if.end27_crit_edge

if.end22.if.end27_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end27

land.lhs.true24:                                  ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  %hdrdgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %conn, i32 0, i32 25
  %17 = ptrtoint ptr %hdrdgst_en to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %hdrdgst_en, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool25.not = icmp eq i32 %18, 0
  %add = add i32 %offset, 4
  %spec.select = select i1 %tobool25.not, i32 %offset, i32 %add
  br label %if.end27

if.end27:                                         ; preds = %land.lhs.true24, %if.end22.if.end27_crit_edge
  %offset.addr.0 = phi i32 [ %offset, %if.end22.if.end27_crit_edge ], [ %spec.select, %land.lhs.true24 ]
  %flags.i79 = getelementptr inbounds %struct.sk_buff, ptr %lskb, i32 0, i32 3, i32 16
  %19 = ptrtoint ptr %flags.i79 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %flags.i79, align 4
  %21 = and i32 %20, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool29.not = icmp eq i32 %21, 0
  %22 = xor i1 %tobool29.not, true
  call void @__sanitizer_cov_trace_const_cmp1(i8 37, i8 %6)
  %cmp32 = icmp eq i8 %6, 37
  br i1 %cmp32, label %do.body35, label %if.end27.if.end52_crit_edge

if.end27.if.end52_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end52

do.body35:                                        ; preds = %if.end27
  %23 = load i32, ptr @dbg_level, align 4
  %and36 = and i32 %23, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %do.body35.if.end52_crit_edge, label %do.end41

do.body35.if.end52_crit_edge:                     ; preds = %do.body35
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end52

do.end41:                                         ; preds = %do.body35
  call void @__sanitizer_cov_trace_pc() #19
  %24 = ptrtoint ptr %in to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %in, align 4
  %itt = getelementptr inbounds %struct.iscsi_hdr, ptr %25, i32 0, i32 6
  %26 = ptrtoint ptr %itt to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %itt, align 4
  %datalen = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %1, i32 0, i32 3, i32 3
  %28 = ptrtoint ptr %datalen to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %datalen, align 4
  %cond = select i1 %tobool29.not, ptr @.str.290, ptr @.str.289
  %call48 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.287, ptr noundef nonnull @.str.282, ptr noundef %skb, i32 noundef 37, i32 noundef %27, i32 noundef %29, ptr noundef nonnull %cond) #21
  br label %if.end52

if.end52:                                         ; preds = %do.end41, %do.body35.if.end52_crit_edge, %if.end27.if.end52_crit_edge
  %conv54 = zext i1 %22 to i32
  %call55 = tail call fastcc i32 @read_pdu_skb(ptr noundef %conn, ptr noundef %skb, i32 noundef %offset.addr.0, i32 noundef %conv54)
  br label %cleanup

cleanup:                                          ; preds = %if.end52, %if.end18.cleanup_crit_edge, %do.end12
  %retval.0 = phi i32 [ -5, %do.end12 ], [ %call55, %if.end52 ], [ 0, %if.end18.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_conn_failure(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_conn_alloc_pdu(ptr noundef %task, i8 noundef zeroext %op) #1 align 64 {
entry:
  %dlimit = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %conn1 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 12
  %0 = ptrtoint ptr %conn1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %conn1, align 4
  %session3 = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %session3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %session3, align 8
  %dd_data = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dd_data, align 4
  %dd_data4 = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %dd_data4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dd_data4, align 4
  %chba = getelementptr inbounds %struct.cxgbi_conn, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %chba to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %chba, align 4
  %cdev5 = getelementptr inbounds %struct.cxgbi_hba, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cdev5 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cdev5, align 4
  %12 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %7, align 4
  %tobool.not = icmp eq ptr %13, null
  br i1 %tobool.not, label %cond.end.thread, label %cond.end

cond.end:                                         ; preds = %entry
  %csk7 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %csk7 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %csk7, align 4
  %dd_data8 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 20
  %16 = ptrtoint ptr %dd_data8 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dd_data8, align 4
  %add.ptr = getelementptr i8, ptr %17, i32 152
  %sc10 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 11
  %18 = ptrtoint ptr %sc10 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sc10, align 4
  %max_xmit_dlength = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 24
  %tobool11.not = icmp eq ptr %17, null
  br i1 %tobool11.not, label %cond.end.do.end_crit_edge, label %if.end

cond.end.do.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

cond.end.thread:                                  ; preds = %entry
  %dd_data8375 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 20
  %20 = ptrtoint ptr %dd_data8375 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dd_data8375, align 4
  %add.ptr376 = getelementptr i8, ptr %21, i32 152
  %tobool11.not379 = icmp eq ptr %21, null
  br i1 %tobool11.not379, label %cond.end.thread.do.end_crit_edge, label %cond.end.thread.do.end16_crit_edge

cond.end.thread.do.end16_crit_edge:               ; preds = %cond.end.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end16

cond.end.thread.do.end_crit_edge:                 ; preds = %cond.end.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

do.end:                                           ; preds = %cond.end.thread.do.end_crit_edge, %cond.end.do.end_crit_edge
  %add.ptr383 = phi ptr [ %add.ptr376, %cond.end.thread.do.end_crit_edge ], [ %add.ptr, %cond.end.do.end_crit_edge ]
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.104, ptr noundef %task, ptr noundef null, ptr noundef %add.ptr383) #21
  br label %cleanup233

if.end:                                           ; preds = %cond.end
  %tobool12.not = icmp eq ptr %15, null
  br i1 %tobool12.not, label %if.end.do.end16_crit_edge, label %if.end19

if.end.do.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end16

do.end16:                                         ; preds = %if.end.do.end16_crit_edge, %cond.end.thread.do.end16_crit_edge
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.106, ptr noundef nonnull @.str.104, ptr noundef %task) #21
  br label %cleanup233

if.end19:                                         ; preds = %if.end
  %22 = and i8 %op, 63
  %dd_data21 = getelementptr inbounds %struct.iscsi_tcp_task, ptr %17, i32 0, i32 5
  %23 = ptrtoint ptr %dd_data21 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %add.ptr, ptr %dd_data21, align 4
  %24 = ptrtoint ptr %task to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %task, align 4
  %count = getelementptr i8, ptr %17, i32 304
  %25 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %count, align 8
  %offset = getelementptr i8, ptr %17, i32 300
  %27 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %offset, align 4
  %conv22 = zext i8 %22 to i32
  %trunc = trunc i8 %op to i6
  %29 = zext i6 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.428)
  switch i6 %trunc, label %if.end19.if.end173_crit_edge [
    i6 5, label %if.end19.if.then29_crit_edge
    i6 1, label %land.lhs.true
  ]

if.end19.if.then29_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29

if.end19.if.end173_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end173

land.lhs.true:                                    ; preds = %if.end19
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, ptr %19, i32 0, i32 15
  %30 = ptrtoint ptr %sc_data_direction to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sc_data_direction, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %31)
  %cmp27 = icmp eq i32 %31, 1
  br i1 %cmp27, label %land.lhs.true.if.then29_crit_edge, label %land.lhs.true.if.end173_crit_edge

land.lhs.true.if.end173_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end173

land.lhs.true.if.then29_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29

if.then29:                                        ; preds = %land.lhs.true.if.then29_crit_edge, %if.end19.if.then29_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dlimit) #17
  %32 = ptrtoint ptr %dlimit to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %dlimit, align 4
  %state = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 17
  %33 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %34)
  %cmp31 = icmp eq i32 %34, 2
  br i1 %cmp31, label %if.then33, label %if.then29.if.end36_crit_edge

if.then29.if.end36_crit_edge:                     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end36

if.then33:                                        ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #19
  %35 = ptrtoint ptr %max_xmit_dlength to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %max_xmit_dlength, align 8
  %max_xmit_dlength35 = getelementptr i8, ptr %17, i32 320
  %37 = ptrtoint ptr %max_xmit_dlength35 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %max_xmit_dlength35, align 8
  br label %if.end36

if.end36:                                         ; preds = %if.then33, %if.then29.if.end36_crit_edge
  %38 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %offset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool38.not = icmp eq i32 %39, 0
  br i1 %tobool38.not, label %if.then39, label %if.end36.if.end40_crit_edge

if.end36.if.end40_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

if.then39:                                        ; preds = %if.end36
  %40 = ptrtoint ptr %sc10 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %sc10, align 4
  %42 = ptrtoint ptr %dd_data8 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %dd_data8, align 4
  %add.ptr.i = getelementptr i8, ptr %43, i32 152
  %44 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 1, ptr %add.ptr.i, align 8
  %tobool.not.i = icmp eq ptr %41, null
  br i1 %tobool.not.i, label %if.then39.if.end40_crit_edge, label %if.end.i

if.then39.if.end40_crit_edge:                     ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

if.end.i:                                         ; preds = %if.then39
  %dlen.i = getelementptr i8, ptr %43, i32 296
  %sdb1.i.i = getelementptr inbounds %struct.scsi_cmnd, ptr %41, i32 0, i32 17
  %45 = ptrtoint ptr %sdb1.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %sdb1.i.i, align 4
  %nents.i.i = getelementptr inbounds %struct.scsi_cmnd, ptr %41, i32 0, i32 17, i32 0, i32 1
  %47 = ptrtoint ptr %nents.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %nents.i.i, align 4
  %length.i.i = getelementptr inbounds %struct.scsi_cmnd, ptr %41, i32 0, i32 17, i32 1
  %49 = ptrtoint ptr %length.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %length.i.i, align 4
  %51 = ptrtoint ptr %dlen.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %dlen.i, align 4
  %tobool2.not.i = icmp eq ptr %46, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool3.not.i = icmp eq i32 %48, 0
  %or.cond.i = select i1 %tobool2.not.i, i1 true, i1 %tobool3.not.i
  br i1 %or.cond.i, label %if.end.i.cleanup.sink.split.i_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.cleanup.sink.split.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.sink.split.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %i.036.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end.i.for.body.i_crit_edge ]
  %sg.035.i = phi ptr [ %call18.i, %for.inc.i.for.body.i_crit_edge ], [ %46, %if.end.i.for.body.i_crit_edge ]
  %52 = ptrtoint ptr %sg.035.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %sg.035.i, align 4
  %and.i.i.i = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %sg_page.exit.i, label %do.body2.i.i, !prof !888

do.body2.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #17, !srcloc !896
  unreachable

sg_page.exit.i:                                   ; preds = %for.body.i
  %and.i.i = and i32 %53, -4
  %54 = inttoptr i32 %and.i.i to ptr
  %55 = getelementptr inbounds %struct.page, ptr %54, i32 0, i32 1
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %55, align 4
  %and.i.i32.i = and i32 %57, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i32.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i32.i, 0
  br i1 %tobool.not.i.i.i, label %sg_page.exit.i.page_count.exit.i_crit_edge, label %if.then.i.i.i, !prof !888

sg_page.exit.i.page_count.exit.i_crit_edge:       ; preds = %sg_page.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %page_count.exit.i

if.then.i.i.i:                                    ; preds = %sg_page.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i.i = add i32 %57, -1
  %.pre.i = inttoptr i32 %sub.i.i.i to ptr
  br label %page_count.exit.i

page_count.exit.i:                                ; preds = %if.then.i.i.i, %sg_page.exit.i.page_count.exit.i_crit_edge
  %.pre-phi.i = phi ptr [ %54, %sg_page.exit.i.page_count.exit.i_crit_edge ], [ %.pre.i, %if.then.i.i.i ]
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %.pre-phi.i, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #17
  %58 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %59)
  %cmp10.i = icmp slt i32 %59, 1
  br i1 %cmp10.i, label %if.then12.i, label %for.inc.i

if.then12.i:                                      ; preds = %page_count.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %60 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %add.ptr.i, align 8
  %62 = or i8 %61, 2
  br label %cleanup.sink.split.i

for.inc.i:                                        ; preds = %page_count.exit.i
  %inc.i = add nuw i32 %i.036.i, 1
  %call18.i = tail call ptr @sg_next(ptr noundef %sg.035.i) #17
  %exitcond.not.i = icmp eq i32 %inc.i, %48
  br i1 %exitcond.not.i, label %for.inc.i.if.end40_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.inc.i.if.end40_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

cleanup.sink.split.i:                             ; preds = %if.then12.i, %if.end.i.cleanup.sink.split.i_crit_edge
  %.sink.i = phi i8 [ %62, %if.then12.i ], [ 3, %if.end.i.cleanup.sink.split.i_crit_edge ]
  %63 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %.sink.i, ptr %add.ptr.i, align 8
  br label %if.end40

if.end40:                                         ; preds = %cleanup.sink.split.i, %for.inc.i.if.end40_crit_edge, %if.then39.if.end40_crit_edge, %if.end36.if.end40_crit_edge
  %dlen = getelementptr i8, ptr %17, i32 296
  %64 = ptrtoint ptr %dlen to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %dlen, align 8
  %66 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %offset, align 4
  %68 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %count, align 8
  %70 = add i32 %67, %69
  %sub43 = sub i32 %65, %70
  %max_xmit_dlength44 = getelementptr i8, ptr %17, i32 320
  %skb_iso_txhdr = getelementptr inbounds %struct.cxgbi_device, ptr %11, i32 0, i32 16
  %disable_iso = getelementptr inbounds %struct.cxgbi_sock, ptr %15, i32 0, i32 48
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %22)
  %cmp71 = icmp eq i8 %22, 1
  %initial_r2t_en = getelementptr inbounds %struct.iscsi_session, ptr %3, i32 0, i32 14
  %advmss = getelementptr inbounds %struct.cxgbi_sock, ptr %15, i32 0, i32 7
  br label %recalculate_sgl

recalculate_sgl:                                  ; preds = %if.then137, %if.end40
  %iso_tx_rsvd.0 = phi i32 [ 0, %if.end40 ], [ %iso_tx_rsvd.2, %if.then137 ]
  %local_iso_info.0 = phi i32 [ 0, %if.end40 ], [ %local_iso_info.2, %if.then137 ]
  %remaining_data_tosend.0 = phi i32 [ %sub43, %if.end40 ], [ %spec.select358, %if.then137 ]
  %71 = ptrtoint ptr %max_xmit_dlength44 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %max_xmit_dlength44, align 8
  %73 = load i32, ptr @dbg_level, align 4
  %and46 = and i32 %73, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47.not = icmp eq i32 %and46, 0
  br i1 %tobool47.not, label %recalculate_sgl.do.end59_crit_edge, label %do.end51

recalculate_sgl.do.end59_crit_edge:               ; preds = %recalculate_sgl
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end59

do.end51:                                         ; preds = %recalculate_sgl
  call void @__sanitizer_cov_trace_pc() #19
  %74 = ptrtoint ptr %dlen to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %dlen, align 8
  %76 = ptrtoint ptr %max_xmit_dlength to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %max_xmit_dlength, align 8
  %call56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.109, ptr noundef nonnull @.str.104, i32 noundef %75, i32 noundef %remaining_data_tosend.0, i32 noundef %77, i32 noundef %72) #21
  br label %do.end59

do.end59:                                         ; preds = %do.end51, %recalculate_sgl.do.end59_crit_edge
  %78 = ptrtoint ptr %skb_iso_txhdr to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %skb_iso_txhdr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool60.not = icmp eq i32 %79, 0
  br i1 %tobool60.not, label %do.end59.no_iso_crit_edge, label %land.lhs.true61

do.end59.no_iso_crit_edge:                        ; preds = %do.end59
  call void @__sanitizer_cov_trace_pc() #19
  br label %no_iso

land.lhs.true61:                                  ; preds = %do.end59
  %80 = ptrtoint ptr %disable_iso to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %disable_iso, align 4, !range !897
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %tobool62.not = icmp eq i8 %81, 0
  br i1 %tobool62.not, label %land.lhs.true63, label %land.lhs.true61.no_iso_crit_edge

land.lhs.true61.no_iso_crit_edge:                 ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #19
  br label %no_iso

land.lhs.true63:                                  ; preds = %land.lhs.true61
  %82 = ptrtoint ptr %max_xmit_dlength44 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %max_xmit_dlength44, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %remaining_data_tosend.0, i32 %83)
  %cmp65 = icmp ugt i32 %remaining_data_tosend.0, %83
  %rem = and i32 %remaining_data_tosend.0, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %tobool68.not = icmp eq i32 %rem, 0
  %or.cond = and i1 %tobool68.not, %cmp65
  br i1 %or.cond, label %if.then69, label %land.lhs.true63.no_iso_crit_edge

land.lhs.true63.no_iso_crit_edge:                 ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #19
  br label %no_iso

if.then69:                                        ; preds = %land.lhs.true63
  br i1 %cmp71, label %land.lhs.true73, label %if.then69.if.end76_crit_edge

if.then69.if.end76_crit_edge:                     ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end76

land.lhs.true73:                                  ; preds = %if.then69
  %84 = ptrtoint ptr %initial_r2t_en to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %initial_r2t_en, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool74.not = icmp eq i32 %85, 0
  br i1 %tobool74.not, label %land.lhs.true73.if.end76_crit_edge, label %land.lhs.true73.no_iso_crit_edge

land.lhs.true73.no_iso_crit_edge:                 ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #19
  br label %no_iso

land.lhs.true73.if.end76_crit_edge:               ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end76

if.end76:                                         ; preds = %land.lhs.true73.if.end76_crit_edge, %if.then69.if.end76_crit_edge
  %add = add i32 %83, 312
  %86 = ptrtoint ptr %advmss to i32
  call void @__asan_load2_noabort(i32 %86)
  %87 = load i16, ptr %advmss, align 4
  %88 = urem i16 -1, %87
  %89 = xor i16 %88, -1
  %sub81 = zext i16 %89 to i32
  %div = udiv i32 %sub81, %add
  %add83 = add i32 %remaining_data_tosend.0, -1
  %sub84 = add i32 %add83, %83
  %div86 = udiv i32 %sub84, %83
  %90 = tail call i32 @llvm.umin.i32(i32 %div86, i32 %div)
  %mul = mul i32 %90, %83
  %91 = ptrtoint ptr %max_xmit_dlength to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %mul, ptr %max_xmit_dlength, align 8
  %92 = ptrtoint ptr %skb_iso_txhdr to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %skb_iso_txhdr, align 4
  %94 = load i32, ptr @dbg_level, align 4
  %and96 = and i32 %94, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96)
  %tobool97.not = icmp eq i32 %and96, 0
  br i1 %tobool97.not, label %if.end76.no_iso_crit_edge, label %do.end101

if.end76.no_iso_crit_edge:                        ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #19
  br label %no_iso

do.end101:                                        ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #19
  %call103 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.112, ptr noundef nonnull @.str.104, i32 noundef %add, i32 noundef %div, i32 noundef %mul, i32 noundef %90) #21
  br label %no_iso

no_iso:                                           ; preds = %do.end101, %if.end76.no_iso_crit_edge, %land.lhs.true73.no_iso_crit_edge, %land.lhs.true63.no_iso_crit_edge, %land.lhs.true61.no_iso_crit_edge, %do.end59.no_iso_crit_edge
  %iso_tx_rsvd.2 = phi i32 [ %iso_tx_rsvd.0, %land.lhs.true61.no_iso_crit_edge ], [ %iso_tx_rsvd.0, %land.lhs.true63.no_iso_crit_edge ], [ %iso_tx_rsvd.0, %do.end59.no_iso_crit_edge ], [ %iso_tx_rsvd.0, %land.lhs.true73.no_iso_crit_edge ], [ %93, %do.end101 ], [ %93, %if.end76.no_iso_crit_edge ]
  %local_iso_info.2 = phi i32 [ %local_iso_info.0, %land.lhs.true61.no_iso_crit_edge ], [ %local_iso_info.0, %land.lhs.true63.no_iso_crit_edge ], [ %local_iso_info.0, %do.end59.no_iso_crit_edge ], [ %local_iso_info.0, %land.lhs.true73.no_iso_crit_edge ], [ 28, %do.end101 ], [ 28, %if.end76.no_iso_crit_edge ]
  %max_txdata_len.1 = phi i32 [ %72, %land.lhs.true61.no_iso_crit_edge ], [ %72, %land.lhs.true63.no_iso_crit_edge ], [ %72, %do.end59.no_iso_crit_edge ], [ %72, %land.lhs.true73.no_iso_crit_edge ], [ %mul, %do.end101 ], [ %mul, %if.end76.no_iso_crit_edge ]
  %95 = tail call i32 @llvm.umin.i32(i32 %max_txdata_len.1, i32 %remaining_data_tosend.0)
  %96 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %offset, align 4
  %98 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %count, align 8
  %add117 = add i32 %99, %97
  %call118 = call fastcc i32 @cxgbi_task_data_sgl_read(ptr noundef %task, i32 noundef %add117, i32 noundef %95, ptr noundef nonnull %dlimit)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call118)
  %cmp119 = icmp slt i32 %call118, 0
  br i1 %cmp119, label %do.body124, label %if.end153, !prof !895

do.body124:                                       ; preds = %no_iso
  %100 = load i32, ptr @dbg_level, align 4
  %and125 = and i32 %100, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and125)
  %tobool126.not = icmp eq i32 %and125, 0
  %101 = ptrtoint ptr %dlimit to i32
  call void @__asan_load4_noabort(i32 %101)
  %.pr = load i32, ptr %dlimit, align 4
  br i1 %tobool126.not, label %do.body124.do.end135_crit_edge, label %do.end130

do.body124.do.end135_crit_edge:                   ; preds = %do.body124
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end135

do.end130:                                        ; preds = %do.body124
  call void @__sanitizer_cov_trace_pc() #19
  %call132 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.115, ptr noundef nonnull @.str.104, ptr noundef %task, ptr noundef nonnull %17, ptr noundef %add.ptr, i32 noundef %call118, i32 noundef %95, i32 noundef %.pr) #21
  br label %do.end135

do.end135:                                        ; preds = %do.end130, %do.body124.do.end135_crit_edge
  %tobool136.not = icmp eq i32 %.pr, 0
  br i1 %tobool136.not, label %cleanup165, label %if.then137

if.then137:                                       ; preds = %do.end135
  call void @__sanitizer_cov_trace_pc() #19
  %102 = ptrtoint ptr %max_xmit_dlength44 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %max_xmit_dlength44, align 8
  %rem141 = urem i32 %.pr, %103
  call void @__sanitizer_cov_trace_cmp4(i32 %.pr, i32 %rem141)
  %tobool143.not = icmp eq i32 %.pr, %rem141
  %sub142 = select i1 %tobool143.not, i32 0, i32 %rem141
  %spec.select358 = sub i32 %.pr, %sub142
  %104 = ptrtoint ptr %dlimit to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 0, ptr %dlimit, align 4
  %105 = ptrtoint ptr %max_xmit_dlength to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %spec.select358, ptr %max_xmit_dlength, align 8
  br label %recalculate_sgl

if.end153:                                        ; preds = %no_iso
  %106 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load1_noabort(i32 %106)
  %107 = load i8, ptr %add.ptr, align 8
  %108 = and i8 %107, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %108)
  %tobool156.not = icmp eq i8 %108, 0
  br i1 %tobool156.not, label %lor.lhs.false157, label %if.end153.if.then161_crit_edge

if.end153.if.then161_crit_edge:                   ; preds = %if.end153
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then161

lor.lhs.false157:                                 ; preds = %if.end153
  %nr_frags = getelementptr i8, ptr %17, i32 154
  %109 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load2_noabort(i32 %109)
  %110 = load i16, ptr %nr_frags, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 17, i16 %110)
  %cmp159 = icmp ugt i16 %110, 17
  br i1 %cmp159, label %lor.lhs.false157.if.then161_crit_edge, label %lor.lhs.false157.cleanup165.thread_crit_edge

lor.lhs.false157.cleanup165.thread_crit_edge:     ; preds = %lor.lhs.false157
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup165.thread

lor.lhs.false157.if.then161_crit_edge:            ; preds = %lor.lhs.false157
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then161

if.then161:                                       ; preds = %lor.lhs.false157.if.then161_crit_edge, %if.end153.if.then161_crit_edge
  %111 = ptrtoint ptr %max_xmit_dlength to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %max_xmit_dlength, align 8
  %add163 = add i32 %112, 304
  br label %cleanup165.thread

cleanup165.thread:                                ; preds = %if.then161, %lor.lhs.false157.cleanup165.thread_crit_edge
  %headroom.1.ph = phi i32 [ 304, %lor.lhs.false157.cleanup165.thread_crit_edge ], [ %add163, %if.then161 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dlimit) #17
  br label %if.end173

cleanup165:                                       ; preds = %do.end135
  call void @__sanitizer_cov_trace_pc() #19
  %call152 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.118, ptr noundef nonnull @.str.104, ptr noundef %task, ptr noundef nonnull %17, ptr noundef %add.ptr, i32 noundef %call118) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dlimit) #17
  br label %ret_err

if.end173:                                        ; preds = %cleanup165.thread, %land.lhs.true.if.end173_crit_edge, %if.end19.if.end173_crit_edge
  %iso_tx_rsvd.4 = phi i32 [ 0, %land.lhs.true.if.end173_crit_edge ], [ 0, %if.end19.if.end173_crit_edge ], [ %iso_tx_rsvd.2, %cleanup165.thread ]
  %local_iso_info.4 = phi i32 [ 0, %land.lhs.true.if.end173_crit_edge ], [ 0, %if.end19.if.end173_crit_edge ], [ %local_iso_info.2, %cleanup165.thread ]
  %headroom.2 = phi i32 [ 304, %land.lhs.true.if.end173_crit_edge ], [ 304, %if.end19.if.end173_crit_edge ], [ %headroom.1.ph, %cleanup165.thread ]
  %skb_tx_rsvd = getelementptr inbounds %struct.cxgbi_device, ptr %11, i32 0, i32 15
  %113 = ptrtoint ptr %skb_tx_rsvd to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %skb_tx_rsvd, align 4
  %add174 = add i32 %local_iso_info.4, %iso_tx_rsvd.4
  %add175 = add i32 %add174, %headroom.2
  %add176 = add i32 %add175, %114
  %call.i = tail call ptr @__alloc_skb(i32 noundef %add176, i32 noundef 2592, i32 noundef 0, i32 noundef -1) #17
  %skb = getelementptr i8, ptr %17, i32 292
  %115 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr %call.i, ptr %skb, align 4
  %tobool179.not = icmp eq ptr %call.i, null
  br i1 %tobool179.not, label %if.then180, label %if.end183

if.then180:                                       ; preds = %if.end173
  call void @__sanitizer_cov_trace_pc() #19
  %116 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %26, ptr %count, align 8
  %117 = ptrtoint ptr %offset to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 %28, ptr %offset, align 4
  br label %ret_err

if.end183:                                        ; preds = %if.end173
  %118 = ptrtoint ptr %skb_tx_rsvd to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %skb_tx_rsvd, align 4
  %add187 = add i32 %add174, %119
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 19
  %120 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %data.i, align 4
  %add.ptr.i359 = getelementptr i8, ptr %121, i32 %add187
  store ptr %add.ptr.i359, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 16
  %122 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %123, i32 %add187
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %124 = ptrtoint ptr %sc10 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %sc10, align 4
  %tobool189.not = icmp eq ptr %125, null
  br i1 %tobool189.not, label %if.else, label %if.then190

if.then190:                                       ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #19
  %126 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %skb, align 4
  %data = getelementptr inbounds %struct.sk_buff, ptr %127, i32 0, i32 19
  %128 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %data, align 4
  %130 = ptrtoint ptr %task to i32
  call void @__asan_store4_noabort(i32 %130)
  store ptr %129, ptr %task, align 4
  br label %if.end201

if.else:                                          ; preds = %if.end183
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %131 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %131, i32 noundef 2848, i32 noundef 304) #22
  %132 = ptrtoint ptr %task to i32
  call void @__asan_store4_noabort(i32 %132)
  store ptr %call7.i.i, ptr %task, align 4
  %tobool196.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool196.not, label %if.then197, label %if.else.if.end201_crit_edge

if.else.if.end201_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end201

if.then197:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %133 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %skb, align 4
  tail call void @__kfree_skb(ptr noundef %134) #17
  %135 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %135)
  store ptr null, ptr %skb, align 4
  br label %cleanup233

if.end201:                                        ; preds = %if.else.if.end201_crit_edge, %if.then190
  %hdr_max = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 1
  %136 = ptrtoint ptr %hdr_max to i32
  call void @__asan_store2_noabort(i32 %136)
  store i16 304, ptr %hdr_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %iso_tx_rsvd.4)
  %tobool202.not = icmp eq i32 %iso_tx_rsvd.4, 0
  br i1 %tobool202.not, label %if.end201.if.end205_crit_edge, label %if.then203

if.end201.if.end205_crit_edge:                    ; preds = %if.end201
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end205

if.then203:                                       ; preds = %if.end201
  call void @__sanitizer_cov_trace_pc() #19
  %137 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %skb, align 4
  %flags.i = getelementptr inbounds %struct.sk_buff, ptr %138, i32 0, i32 3, i32 16
  %139 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %flags.i, align 4
  %or.i.i = or i32 %140, 4096
  store i32 %or.i.i, ptr %flags.i, align 4
  br label %if.end205

if.end205:                                        ; preds = %if.then203, %if.end201.if.end205_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %22)
  %cmp207.not = icmp eq i8 %22, 5
  br i1 %cmp207.not, label %if.end205.do.body213_crit_edge, label %if.then209

if.end205.do.body213_crit_edge:                   ; preds = %if.end205
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body213

if.then209:                                       ; preds = %if.end205
  %141 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %task, align 4
  %itt = getelementptr inbounds %struct.iscsi_hdr, ptr %142, i32 0, i32 6
  %143 = ptrtoint ptr %sc10 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %sc10, align 4
  %145 = ptrtoint ptr %conn1 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %conn1, align 4
  %session.i = getelementptr inbounds %struct.iscsi_conn, ptr %146, i32 0, i32 2
  %147 = ptrtoint ptr %session.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %session.i, align 8
  %dd_data.i361 = getelementptr inbounds %struct.iscsi_conn, ptr %146, i32 0, i32 1
  %149 = ptrtoint ptr %dd_data.i361 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %dd_data.i361, align 4
  %dd_data3.i = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %150, i32 0, i32 1
  %151 = ptrtoint ptr %dd_data3.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %dd_data3.i, align 4
  %chba.i = getelementptr inbounds %struct.cxgbi_conn, ptr %152, i32 0, i32 2
  %153 = ptrtoint ptr %chba.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %chba.i, align 4
  %cdev4.i = getelementptr inbounds %struct.cxgbi_hba, ptr %154, i32 0, i32 3
  %155 = ptrtoint ptr %cdev4.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %cdev4.i, align 4
  %cdev2ppm.i = getelementptr inbounds %struct.cxgbi_device, ptr %156, i32 0, i32 23
  %157 = ptrtoint ptr %cdev2ppm.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %cdev2ppm.i, align 4
  %call.i362 = tail call ptr %158(ptr noundef %156) #17
  %itt.i = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 6
  %159 = ptrtoint ptr %itt.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %itt.i, align 4
  %age.i = getelementptr inbounds %struct.iscsi_session, ptr %148, i32 0, i32 55
  %161 = ptrtoint ptr %age.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %age.i, align 4
  %shl.i.i = shl i32 %160, 16
  %or.i.i363 = or i32 %shl.i.i, %162
  %tobool.not.i364 = icmp eq ptr %144, null
  br i1 %tobool.not.i364, label %if.then209.if.then24.i_crit_edge, label %land.lhs.true.i

if.then209.if.then24.i_crit_edge:                 ; preds = %if.then209
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then24.i

land.lhs.true.i:                                  ; preds = %if.then209
  %sc_data_direction.i = getelementptr inbounds %struct.scsi_cmnd, ptr %144, i32 0, i32 15
  %163 = ptrtoint ptr %sc_data_direction.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %sc_data_direction.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %164)
  %cmp.i = icmp eq i32 %164, 2
  br i1 %cmp.i, label %if.then.i, label %land.lhs.true.i.if.then24.i_crit_edge

land.lhs.true.i.if.then24.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then24.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %165 = ptrtoint ptr %dd_data8 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %dd_data8, align 4
  %sgl.i = getelementptr i8, ptr %166, i32 376
  %nents.i = getelementptr i8, ptr %166, i32 368
  %dlen.i365 = getelementptr i8, ptr %166, i32 296
  %sdb1.i.i366 = getelementptr inbounds %struct.scsi_cmnd, ptr %144, i32 0, i32 17
  %167 = ptrtoint ptr %sdb1.i.i366 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %sdb1.i.i366, align 4
  %169 = ptrtoint ptr %sgl.i to i32
  call void @__asan_store4_noabort(i32 %169)
  store ptr %168, ptr %sgl.i, align 4
  %nents.i.i367 = getelementptr inbounds %struct.scsi_cmnd, ptr %144, i32 0, i32 17, i32 0, i32 1
  %170 = ptrtoint ptr %nents.i.i367 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %nents.i.i367, align 4
  %172 = ptrtoint ptr %nents.i to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %171, ptr %nents.i, align 4
  %length.i.i368 = getelementptr inbounds %struct.scsi_cmnd, ptr %144, i32 0, i32 17, i32 1
  %173 = ptrtoint ptr %length.i.i368 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %length.i.i368, align 4
  %175 = ptrtoint ptr %dlen.i365 to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 %174, ptr %dlen.i365, align 4
  %176 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %152, align 4
  %csk1.i.i = getelementptr inbounds %struct.cxgbi_endpoint, ptr %177, i32 0, i32 2
  %178 = ptrtoint ptr %csk1.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %csk1.i.i, align 4
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %179, align 4
  %cdev2ppm.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %181, i32 0, i32 23
  %182 = ptrtoint ptr %cdev2ppm.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %cdev2ppm.i.i, align 4
  %call.i.i = tail call ptr %183(ptr noundef %181) #17
  %ttinfo3.i.i = getelementptr i8, ptr %166, i32 328
  %184 = ptrtoint ptr %sgl.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %sgl.i, align 8
  %186 = ptrtoint ptr %nents.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %nents.i, align 8
  %offset.i.i = getelementptr inbounds %struct.scatterlist, ptr %185, i32 0, i32 1
  %188 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %offset.i.i, align 4
  %flags.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %181, i32 0, i32 2
  %190 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %flags.i.i, align 4
  %and.i.i369 = and i32 %191, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i369)
  %tobool.not.i.i = icmp eq i32 %and.i.i369, 0
  br i1 %tobool.not.i.i, label %if.end12.i.i, label %do.body.i.i

do.body.i.i:                                      ; preds = %if.then.i
  %192 = load i32, ptr @dbg_level, align 4
  %and5.i.i = and i32 %192, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %do.body.i.i.do.body.i_crit_edge, label %do.end.i.i

do.body.i.i.do.body.i_crit_edge:                  ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i

do.end.i.i:                                       ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call9.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.311, ptr noundef nonnull @.str.312, ptr noundef %181) #21
  br label %do.body.i

if.end12.i.i:                                     ; preds = %if.then.i
  %tobool13.not.i.i = icmp eq ptr %call.i.i, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %174)
  %cmp.i.i = icmp ult i32 %174, 512
  %or.cond.i.i = or i1 %cmp.i.i, %tobool13.not.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %187)
  %tobool15.not.i.i = icmp eq i32 %187, 0
  %or.cond181.i.i = select i1 %or.cond.i.i, i1 true, i1 %tobool15.not.i.i
  br i1 %or.cond181.i.i, label %if.end12.i.i.do.body20.i.i_crit_edge, label %lor.lhs.false16.i.i

if.end12.i.i.do.body20.i.i_crit_edge:             ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body20.i.i

lor.lhs.false16.i.i:                              ; preds = %if.end12.i.i
  %pgsz_idx_dflt.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i.i, i32 0, i32 5, i32 1
  %193 = ptrtoint ptr %pgsz_idx_dflt.i.i to i32
  call void @__asan_load1_noabort(i32 %193)
  %194 = load i8, ptr %pgsz_idx_dflt.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %194)
  %cmp17.i.i = icmp ugt i8 %194, 3
  br i1 %cmp17.i.i, label %lor.lhs.false16.i.i.do.body20.i.i_crit_edge, label %if.end37.i.i

lor.lhs.false16.i.i.do.body20.i.i_crit_edge:      ; preds = %lor.lhs.false16.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body20.i.i

do.body20.i.i:                                    ; preds = %lor.lhs.false16.i.i.do.body20.i.i_crit_edge, %if.end12.i.i.do.body20.i.i_crit_edge
  %195 = load i32, ptr @dbg_level, align 4
  %and21.i.i = and i32 %195, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i)
  %tobool22.not.i.i = icmp eq i32 %and21.i.i, 0
  br i1 %tobool22.not.i.i, label %do.body20.i.i.do.body.i_crit_edge, label %do.end26.i.i

do.body20.i.i.do.body.i_crit_edge:                ; preds = %do.body20.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i

do.end26.i.i:                                     ; preds = %do.body20.i.i
  br i1 %tobool13.not.i.i, label %do.end26.i.i.cond.end.i.i_crit_edge, label %cond.true.i.i

do.end26.i.i.cond.end.i.i_crit_edge:              ; preds = %do.end26.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end.i.i

cond.true.i.i:                                    ; preds = %do.end26.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %pgsz_idx_dflt30.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i.i, i32 0, i32 5, i32 1
  %196 = ptrtoint ptr %pgsz_idx_dflt30.i.i to i32
  call void @__asan_load1_noabort(i32 %196)
  %197 = load i8, ptr %pgsz_idx_dflt30.i.i, align 4
  %conv31.i.i = zext i8 %197 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.true.i.i, %do.end26.i.i.cond.end.i.i_crit_edge
  %cond.i.i = phi i32 [ %conv31.i.i, %cond.true.i.i ], [ 4, %do.end26.i.i.cond.end.i.i_crit_edge ]
  %call33.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.314, ptr noundef nonnull @.str.312, ptr noundef %call.i.i, i32 noundef %cond.i.i, i32 noundef %174, i32 noundef %187) #21
  br label %do.body.i

if.end37.i.i:                                     ; preds = %lor.lhs.false16.i.i
  %sub.i.i.i370 = add i32 %187, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %187)
  %cmp39.i.i.i = icmp sgt i32 %187, 0
  br i1 %cmp39.i.i.i, label %if.end37.i.i.for.body.i.i.i_crit_edge, label %if.end37.i.i.if.end42.i.i_crit_edge

if.end37.i.i.if.end42.i.i_crit_edge:              ; preds = %if.end37.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end42.i.i

if.end37.i.i.for.body.i.i.i_crit_edge:            ; preds = %if.end37.i.i
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.end37.i.i.for.body.i.i.i_crit_edge
  %sg.041.i.i.i = phi ptr [ %call18.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ %185, %if.end37.i.i.for.body.i.i.i_crit_edge ]
  %i.040.i.i.i = phi i32 [ %inc.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %if.end37.i.i.for.body.i.i.i_crit_edge ]
  %length.i.i.i = getelementptr inbounds %struct.scatterlist, ptr %sg.041.i.i.i, i32 0, i32 2
  %198 = ptrtoint ptr %length.i.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %length.i.i.i, align 4
  %offset.i.i.i = getelementptr inbounds %struct.scatterlist, ptr %sg.041.i.i.i, i32 0, i32 1
  %200 = ptrtoint ptr %offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %offset.i.i.i, align 4
  %add.i.i.i = add i32 %201, %199
  %and.i.i.i371 = and i32 %201, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i371)
  %tobool.not.i.i.i372 = icmp eq i32 %and.i.i.i371, 0
  br i1 %tobool.not.i.i.i372, label %lor.lhs.false.i.i.i, label %for.body.i.i.i.do.body.i.i.i_crit_edge

for.body.i.i.i.do.body.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.040.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %i.040.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %201)
  %tobool4.not.i.i.i = icmp eq i32 %201, 0
  %or.cond.i.i.i = select i1 %tobool2.not.i.i.i, i1 true, i1 %tobool4.not.i.i.i
  br i1 %or.cond.i.i.i, label %lor.lhs.false5.i.i.i, label %lor.lhs.false.i.i.i.do.body.i.i.i_crit_edge

lor.lhs.false.i.i.i.do.body.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i

lor.lhs.false5.i.i.i:                             ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %i.040.i.i.i, i32 %sub.i.i.i370)
  %cmp6.not.i.i.i = icmp eq i32 %i.040.i.i.i, %sub.i.i.i370
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add.i.i.i)
  %cmp8.not.i.i.i = icmp eq i32 %add.i.i.i, 4096
  %or.cond34.i.i.i = select i1 %cmp6.not.i.i.i, i1 true, i1 %cmp8.not.i.i.i
  br i1 %or.cond34.i.i.i, label %for.inc.i.i.i, label %lor.lhs.false5.i.i.i.do.body.i.i.i_crit_edge

lor.lhs.false5.i.i.i.do.body.i.i.i_crit_edge:     ; preds = %lor.lhs.false5.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %lor.lhs.false5.i.i.i.do.body.i.i.i_crit_edge, %lor.lhs.false.i.i.i.do.body.i.i.i_crit_edge, %for.body.i.i.i.do.body.i.i.i_crit_edge
  %202 = load i32, ptr @dbg_level, align 4
  %and9.i.i.i = and i32 %202, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i.i.i)
  %tobool10.not.i.i.i = icmp eq i32 %and9.i.i.i, 0
  br i1 %tobool10.not.i.i.i, label %do.body.i.i.i.do.body.i_crit_edge, label %do.end.i.i.i

do.body.i.i.i.do.body.i_crit_edge:                ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i

do.end.i.i.i:                                     ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.322, ptr noundef nonnull @.str.323, i32 noundef %i.040.i.i.i, i32 noundef %187, i32 noundef %201, i32 noundef %199) #21
  br label %do.body.i

for.inc.i.i.i:                                    ; preds = %lor.lhs.false5.i.i.i
  %inc.i.i.i = add nuw nsw i32 %i.040.i.i.i, 1
  %call18.i.i.i = tail call ptr @sg_next(ptr noundef %sg.041.i.i.i) #17
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, %187
  br i1 %exitcond.not.i.i.i, label %for.inc.i.i.i.if.end42.i.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i.i.i

for.inc.i.i.i.if.end42.i.i_crit_edge:             ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end42.i.i

if.end42.i.i:                                     ; preds = %for.inc.i.i.i.if.end42.i.i_crit_edge, %if.end37.i.i.if.end42.i.i_crit_edge
  %203 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %offset.i.i, align 4
  %add.i.i = add i32 %174, 4095
  %sub.i.i = add i32 %add.i.i, %204
  %shr.i.i = lshr i32 %sub.i.i, 12
  %nr_pages.i.i = getelementptr i8, ptr %166, i32 372
  %205 = ptrtoint ptr %nr_pages.i.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %shr.i.i, ptr %nr_pages.i.i, align 4
  %conv46.i.i = trunc i32 %shr.i.i to i16
  %idx.i.i = getelementptr i8, ptr %166, i32 336
  %tag.i.i = getelementptr i8, ptr %166, i32 340
  %call47.i.i = tail call i32 @cxgbi_ppm_ppods_reserve(ptr noundef nonnull %call.i.i, i16 noundef zeroext %conv46.i.i, i32 noundef 0, ptr noundef %idx.i.i, ptr noundef %tag.i.i, i32 noundef %or.i.i363) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47.i.i)
  %cmp48.i.i = icmp slt i32 %call47.i.i, 0
  br i1 %cmp48.i.i, label %if.then50.i.i, label %if.end51.i.i

if.then50.i.i:                                    ; preds = %if.end42.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %ddp_full.i.i = getelementptr inbounds %struct.cxgbi_conn, ptr %152, i32 0, i32 4
  %206 = ptrtoint ptr %ddp_full.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %ddp_full.i.i, align 4
  %inc.i.i = add i32 %207, 1
  store i32 %inc.i.i, ptr %ddp_full.i.i, align 4
  br label %do.body.i

if.end51.i.i:                                     ; preds = %if.end42.i.i
  %npods.i.i = getelementptr i8, ptr %166, i32 332
  %208 = ptrtoint ptr %npods.i.i to i32
  call void @__asan_store4_noabort(i32 %208)
  store i32 %call47.i.i, ptr %npods.i.i, align 4
  %209 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_store4_noabort(i32 %209)
  store i32 0, ptr %offset.i.i, align 4
  %pdev.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i.i, i32 0, i32 2
  %210 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %pdev.i.i, align 4
  %dev.i.i = getelementptr inbounds %struct.pci_dev, ptr %211, i32 0, i32 44
  %call53.i.i = tail call i32 @dma_map_sg_attrs(ptr noundef %dev.i.i, ptr noundef %185, i32 noundef %187, i32 noundef 2, i32 noundef 0) #17
  %212 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_store4_noabort(i32 %212)
  store i32 %189, ptr %offset.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53.i.i)
  %cmp55.i.i = icmp eq i32 %call53.i.i, 0
  br i1 %cmp55.i.i, label %do.end60.i.i, label %if.end63.i.i

do.end60.i.i:                                     ; preds = %if.end51.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call62.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.317, ptr noundef nonnull @.str.312, ptr noundef nonnull @.str.312, i32 noundef %or.i.i363, i32 noundef %174, i32 noundef %187) #21
  br label %rel_ppods.i.i

if.end63.i.i:                                     ; preds = %if.end51.i.i
  %213 = ptrtoint ptr %nr_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %nr_pages.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call53.i.i, i32 %214)
  %cmp65.not.i.i = icmp eq i32 %call53.i.i, %214
  br i1 %cmp65.not.i.i, label %if.end63.i.i.if.end80.i.i_crit_edge, label %do.body68.i.i

if.end63.i.i.if.end80.i.i_crit_edge:              ; preds = %if.end63.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end80.i.i

do.body68.i.i:                                    ; preds = %if.end63.i.i
  %215 = load i32, ptr @dbg_level, align 4
  %and69.i.i = and i32 %215, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69.i.i)
  %tobool70.not.i.i = icmp eq i32 %and69.i.i, 0
  br i1 %tobool70.not.i.i, label %do.body68.i.i.if.end80.i.i_crit_edge, label %do.end74.i.i

do.body68.i.i.if.end80.i.i_crit_edge:             ; preds = %do.body68.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end80.i.i

do.end74.i.i:                                     ; preds = %do.body68.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call76.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.320, ptr noundef nonnull @.str.312, ptr noundef nonnull @.str.312, i32 noundef %or.i.i363, i32 noundef %174, i32 noundef %187, i32 noundef %call53.i.i) #21
  br label %if.end80.i.i

if.end80.i.i:                                     ; preds = %do.end74.i.i, %do.body68.i.i.if.end80.i.i_crit_edge, %if.end63.i.i.if.end80.i.i_crit_edge
  %216 = ptrtoint ptr %ttinfo3.i.i to i32
  call void @__asan_load1_noabort(i32 %216)
  %217 = load i8, ptr %ttinfo3.i.i, align 8
  %218 = or i8 %217, 2
  store i8 %218, ptr %ttinfo3.i.i, align 8
  %port_id.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %179, i32 0, i32 12
  %219 = ptrtoint ptr %port_id.i.i to i32
  call void @__asan_load1_noabort(i32 %219)
  %220 = load i8, ptr %port_id.i.i, align 4
  %cid.i.i = getelementptr i8, ptr %166, i32 329
  %221 = ptrtoint ptr %cid.i.i to i32
  call void @__asan_store1_noabort(i32 %221)
  store i8 %220, ptr %cid.i.i, align 1
  %222 = ptrtoint ptr %tag.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %tag.i.i, align 4
  %tid.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %179, i32 0, i32 1
  %224 = ptrtoint ptr %tid.i.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %tid.i.i, align 4
  %226 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %offset.i.i, align 4
  %hdr.i.i = getelementptr i8, ptr %166, i32 344
  tail call void @cxgbi_ppm_make_ppod_hdr(ptr noundef nonnull %call.i.i, i32 noundef %223, i32 noundef %225, i32 noundef %227, i32 noundef %174, ptr noundef %hdr.i.i) #17
  %228 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %flags.i.i, align 4
  %and87.i.i = and i32 %229, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and87.i.i)
  %tobool88.not.i.i = icmp eq i32 %and87.i.i, 0
  br i1 %tobool88.not.i.i, label %if.else.i.i, label %if.then89.i.i

if.then89.i.i:                                    ; preds = %if.end80.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %230 = ptrtoint ptr %ttinfo3.i.i to i32
  call void @__asan_load1_noabort(i32 %230)
  %231 = load i8, ptr %ttinfo3.i.i, align 8
  %232 = or i8 %231, 1
  store i8 %232, ptr %ttinfo3.i.i, align 8
  br label %if.end21.i

if.else.i.i:                                      ; preds = %if.end80.i.i
  %csk_ddp_set_map.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %181, i32 0, i32 24
  %233 = ptrtoint ptr %csk_ddp_set_map.i.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %csk_ddp_set_map.i.i, align 4
  %call94.i.i = tail call i32 %234(ptr noundef nonnull %call.i.i, ptr noundef %179, ptr noundef %ttinfo3.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94.i.i)
  %cmp95.i.i = icmp slt i32 %call94.i.i, 0
  br i1 %cmp95.i.i, label %if.else.i.i.rel_ppods.i.i_crit_edge, label %if.else.i.i.if.end21.i_crit_edge

if.else.i.i.if.end21.i_crit_edge:                 ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end21.i

if.else.i.i.rel_ppods.i.i_crit_edge:              ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rel_ppods.i.i

rel_ppods.i.i:                                    ; preds = %if.else.i.i.rel_ppods.i.i_crit_edge, %do.end60.i.i
  %235 = ptrtoint ptr %idx.i.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %idx.i.i, align 8
  tail call void @cxgbi_ppm_ppod_release(ptr noundef nonnull %call.i.i, i32 noundef %236) #17
  %237 = ptrtoint ptr %ttinfo3.i.i to i32
  call void @__asan_load1_noabort(i32 %237)
  %238 = load i8, ptr %ttinfo3.i.i, align 8
  %239 = and i8 %238, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %239)
  %tobool104.not.i.i = icmp eq i8 %239, 0
  br i1 %tobool104.not.i.i, label %rel_ppods.i.i.do.body.i_crit_edge, label %if.then105.i.i

rel_ppods.i.i.do.body.i_crit_edge:                ; preds = %rel_ppods.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i

if.then105.i.i:                                   ; preds = %rel_ppods.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %and108.i.i = and i8 %238, -3
  %240 = ptrtoint ptr %ttinfo3.i.i to i32
  call void @__asan_store1_noabort(i32 %240)
  store i8 %and108.i.i, ptr %ttinfo3.i.i, align 8
  %241 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %pdev.i.i, align 4
  %dev111.i.i = getelementptr inbounds %struct.pci_dev, ptr %242, i32 0, i32 44
  tail call void @dma_unmap_sg_attrs(ptr noundef %dev111.i.i, ptr noundef %185, i32 noundef %187, i32 noundef 2, i32 noundef 0) #17
  br label %do.body.i

do.body.i:                                        ; preds = %if.then105.i.i, %rel_ppods.i.i.do.body.i_crit_edge, %if.then50.i.i, %do.end.i.i.i, %do.body.i.i.i.do.body.i_crit_edge, %cond.end.i.i, %do.body20.i.i.do.body.i_crit_edge, %do.end.i.i, %do.body.i.i.do.body.i_crit_edge
  %243 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %243, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool13.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool13.not.i, label %do.body.i.if.then24.i_crit_edge, label %do.end.i

do.body.i.if.then24.i_crit_edge:                  ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then24.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %244 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %152, align 4
  %csk.i = getelementptr inbounds %struct.cxgbi_endpoint, ptr %245, i32 0, i32 2
  %246 = ptrtoint ptr %csk.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %csk.i, align 4
  %248 = ptrtoint ptr %dlen.i365 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %dlen.i365, align 8
  %250 = ptrtoint ptr %nents.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %nents.i, align 8
  %call18.i373 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.306, ptr noundef nonnull @.str.307, ptr noundef %247, ptr noundef %task, i32 noundef %249, i32 noundef %251) #21
  br label %if.then24.i

if.end21.i:                                       ; preds = %if.else.i.i.if.end21.i_crit_edge, %if.then89.i.i
  %252 = ptrtoint ptr %tag.i.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %tag.i.i, align 4
  br label %if.end29.i

if.then24.i:                                      ; preds = %do.end.i, %do.body.i.if.then24.i_crit_edge, %land.lhs.true.i.if.then24.i_crit_edge, %if.then209.if.then24.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i363)
  %tobool.not.i3.i = icmp slt i32 %or.i.i363, 0
  br i1 %tobool.not.i3.i, label %cxgbi_ppm_make_non_ddp_tag.exit.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i363)
  %tobool3.not.i.i = icmp eq i32 %or.i.i363, 0
  br i1 %tobool3.not.i.i, label %if.then4.i.i, label %if.else.i10.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %no_ddp_mask.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i362, i32 0, i32 5, i32 5
  %254 = ptrtoint ptr %no_ddp_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %no_ddp_mask.i.i, align 4
  br label %if.end29.i

if.else.i10.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %idx_bits.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i362, i32 0, i32 5, i32 3
  %256 = ptrtoint ptr %idx_bits.i.i to i32
  call void @__asan_load1_noabort(i32 %256)
  %257 = load i8, ptr %idx_bits.i.i, align 2
  %conv.i.i = zext i8 %257 to i32
  %color_bits.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i362, i32 0, i32 5, i32 2
  %258 = ptrtoint ptr %color_bits.i.i to i32
  call void @__asan_load1_noabort(i32 %258)
  %bf.load.i.i = load i8, ptr %color_bits.i.i, align 1
  %bf.clear.i.i = and i8 %bf.load.i.i, 15
  %conv5.i.i = zext i8 %bf.clear.i.i to i32
  %add.i5.i = add nuw nsw i32 %conv5.i.i, %conv.i.i
  %idx_clr_mask.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i362, i32 0, i32 5, i32 8
  %259 = ptrtoint ptr %idx_clr_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %idx_clr_mask.i.i, align 4
  %and.i6.i = and i32 %260, %or.i.i363
  %shr.i7.i = lshr i32 %or.i.i363, %add.i5.i
  %add6.i.i = add nuw nsw i32 %add.i5.i, 1
  %shl.i8.i = shl i32 %shr.i7.i, %add6.i.i
  %no_ddp_mask7.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i362, i32 0, i32 5, i32 5
  %261 = ptrtoint ptr %no_ddp_mask7.i.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load i32, ptr %no_ddp_mask7.i.i, align 4
  %or.i9.i = or i32 %and.i6.i, %262
  %or8.i.i = or i32 %or.i9.i, %shl.i8.i
  br label %if.end29.i

cxgbi_ppm_make_non_ddp_tag.exit.i:                ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #19
  %call2.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.324, ptr noundef nonnull @.str.325, i32 noundef %or.i.i363) #21
  br label %do.body213

if.end29.i:                                       ; preds = %if.else.i10.i, %if.then4.i.i, %if.end21.i
  %tag.3.i = phi i32 [ %253, %if.end21.i ], [ %or8.i.i, %if.else.i10.i ], [ %255, %if.then4.i.i ]
  %263 = ptrtoint ptr %itt to i32
  call void @__asan_store4_noabort(i32 %263)
  store i32 %tag.3.i, ptr %itt, align 4
  %264 = load i32, ptr @dbg_level, align 4
  %and31.i = and i32 %264, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31.i)
  %tobool32.not.i = icmp eq i32 %and31.i, 0
  br i1 %tobool32.not.i, label %if.end29.i.do.body213_crit_edge, label %do.end36.i

if.end29.i.do.body213_crit_edge:                  ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body213

do.end36.i:                                       ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #19
  %265 = ptrtoint ptr %itt.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load i32, ptr %itt.i, align 4
  %267 = ptrtoint ptr %age.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %age.i, align 4
  %call40.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.309, ptr noundef nonnull @.str.307, ptr noundef %156, ptr noundef %task, i32 noundef %or.i.i363, i32 noundef %266, i32 noundef %268, i32 noundef %tag.3.i, i32 noundef %tag.3.i) #21
  br label %do.body213

do.body213:                                       ; preds = %do.end36.i, %if.end29.i.do.body213_crit_edge, %cxgbi_ppm_make_non_ddp_tag.exit.i, %if.end205.do.body213_crit_edge
  %269 = load i32, ptr @dbg_level, align 4
  %and214 = and i32 %269, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and214)
  %tobool215.not = icmp eq i32 %and214, 0
  br i1 %tobool215.not, label %do.body213.cleanup233_crit_edge, label %do.end219

do.body213.cleanup233_crit_edge:                  ; preds = %do.body213
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup233

do.end219:                                        ; preds = %do.body213
  call void @__sanitizer_cov_trace_pc() #19
  %270 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %skb, align 4
  %272 = ptrtoint ptr %skb_tx_rsvd to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %skb_tx_rsvd, align 4
  %274 = ptrtoint ptr %max_xmit_dlength to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %max_xmit_dlength, align 8
  %276 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %task, align 4
  %itt226 = getelementptr inbounds %struct.iscsi_hdr, ptr %277, i32 0, i32 6
  %278 = ptrtoint ptr %itt226 to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %itt226, align 4
  %call227 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.121, ptr noundef nonnull @.str.104, ptr noundef %task, i32 noundef %conv22, ptr noundef %271, i32 noundef %273, i32 noundef %headroom.2, i32 noundef %275, i32 noundef %279) #21
  br label %cleanup233

ret_err:                                          ; preds = %if.then180, %cleanup165
  %err.2 = phi i32 [ %call118, %cleanup165 ], [ -12, %if.then180 ]
  %max_xmit_dlength231 = getelementptr i8, ptr %17, i32 320
  %280 = ptrtoint ptr %max_xmit_dlength231 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %max_xmit_dlength231, align 8
  %282 = ptrtoint ptr %max_xmit_dlength to i32
  call void @__asan_store4_noabort(i32 %282)
  store i32 %281, ptr %max_xmit_dlength, align 8
  br label %cleanup233

cleanup233:                                       ; preds = %ret_err, %do.end219, %do.body213.cleanup233_crit_edge, %if.then197, %do.end16, %do.end
  %retval.0 = phi i32 [ %err.2, %ret_err ], [ -12, %if.then197 ], [ -32, %do.end16 ], [ -12, %do.end ], [ 0, %do.end219 ], [ 0, %do.body213.cleanup233_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cxgbi_task_data_sgl_read(ptr nocapture noundef readonly %task, i32 noundef %offset, i32 noundef %count, ptr nocapture noundef %dlimit) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sc1 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 11
  %0 = ptrtoint ptr %sc1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sc1, align 4
  %dd_data = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 20
  %2 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dd_data, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %sdb1.i = getelementptr inbounds %struct.scsi_cmnd, ptr %1, i32 0, i32 17
  %4 = ptrtoint ptr %sdb1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sdb1.i, align 4
  %nents.i = getelementptr inbounds %struct.scsi_cmnd, ptr %1, i32 0, i32 17, i32 0, i32 1
  %6 = ptrtoint ptr %nents.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nents.i, align 4
  %tobool2.not = icmp eq ptr %5, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.not = icmp eq i32 %7, 0
  %or.cond = select i1 %tobool2.not, i1 true, i1 %tobool3.not
  br i1 %or.cond, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %sgoffset = getelementptr i8, ptr %3, i32 308
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %if.end5
  %sg.015.i = phi ptr [ %call.i, %if.end.i.for.body.i_crit_edge ], [ %5, %if.end5 ]
  %i.014.i = phi i32 [ %inc.i, %if.end.i.for.body.i_crit_edge ], [ 0, %if.end5 ]
  %offset.addr.013.i = phi i32 [ %sub.i, %if.end.i.for.body.i_crit_edge ], [ %offset, %if.end5 ]
  %length.i79 = getelementptr inbounds %struct.scatterlist, ptr %sg.015.i, i32 0, i32 2
  %8 = ptrtoint ptr %length.i79 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %length.i79, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %offset.addr.013.i, i32 %9)
  %cmp1.i = icmp ult i32 %offset.addr.013.i, %9
  br i1 %cmp1.i, label %if.end9, label %if.end.i

if.end.i:                                         ; preds = %for.body.i
  %sub.i = sub i32 %offset.addr.013.i, %9
  %inc.i = add nuw i32 %i.014.i, 1
  %call.i = tail call ptr @sg_next(ptr noundef %sg.015.i) #17
  %exitcond.not.i = icmp eq i32 %inc.i, %7
  br i1 %exitcond.not.i, label %do.end, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

do.end:                                           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %dlen7 = getelementptr i8, ptr %3, i32 296
  %10 = ptrtoint ptr %dlen7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dlen7, align 8
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.293, ptr noundef nonnull @.str.294, i32 noundef %7, i32 noundef %offset, i32 noundef %11) #21
  br label %cleanup

if.end9:                                          ; preds = %for.body.i
  %12 = ptrtoint ptr %sgoffset to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %offset.addr.013.i, ptr %sgoffset, align 4
  %frags = getelementptr i8, ptr %3, i32 156
  %13 = ptrtoint ptr %sg.015.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sg.015.i, align 4
  %and.i.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %sg_page.exit.i, label %do.body2.i.i, !prof !888

do.body2.i.i:                                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #17, !srcloc !896
  unreachable

sg_page.exit.i:                                   ; preds = %if.end9
  %length.i79.le = getelementptr inbounds %struct.scatterlist, ptr %sg.015.i, i32 0, i32 2
  %15 = ptrtoint ptr %sgoffset to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sgoffset, align 4
  %17 = ptrtoint ptr %length.i79.le to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %length.i79.le, align 4
  %sub.i81 = sub i32 %18, %16
  %and.i.i = and i32 %14, -4
  %19 = inttoptr i32 %and.i.i to ptr
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond55.i.do.body.i_crit_edge, %sg_page.exit.i
  %datalen.0.i = phi i32 [ %count, %sg_page.exit.i ], [ %sub52.i, %do.cond55.i.do.body.i_crit_edge ]
  %sglen.0.i = phi i32 [ %sub.i81, %sg_page.exit.i ], [ %sub54.i, %do.cond55.i.do.body.i_crit_edge ]
  %page.0.i = phi ptr [ %19, %sg_page.exit.i ], [ %page.1.i, %do.cond55.i.do.body.i_crit_edge ]
  %i.0.i = phi i32 [ 0, %sg_page.exit.i ], [ %i.1.i, %do.cond55.i.do.body.i_crit_edge ]
  %sgoffset.addr.0.i = phi i32 [ %16, %sg_page.exit.i ], [ %add53.i, %do.cond55.i.do.body.i_crit_edge ]
  %sg.addr.0.i = phi ptr [ %sg.015.i, %sg_page.exit.i ], [ %sg.addr.1.i, %do.cond55.i.do.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sglen.0.i)
  %tobool.not.i = icmp eq i32 %sglen.0.i, 0
  br i1 %tobool.not.i, label %if.then.i82, label %do.body.i.if.end8.i_crit_edge

do.body.i.if.end8.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8.i

if.then.i82:                                      ; preds = %do.body.i
  %call1.i = tail call ptr @sg_next(ptr noundef %sg.addr.0.i) #17
  %tobool2.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool2.not.i, label %do.end.i, label %if.end.i83

do.end.i:                                         ; preds = %if.then.i82
  call void @__sanitizer_cov_trace_pc() #19
  %call5.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.301, ptr noundef nonnull @.str.302, i32 noundef %i.0.i, i32 noundef %datalen.0.i, i32 noundef %count) #21
  br label %do.body14

if.end.i83:                                       ; preds = %if.then.i82
  %20 = ptrtoint ptr %call1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %call1.i, align 4
  %and.i.i1.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1.i)
  %tobool.i.not.i2.i = icmp eq i32 %and.i.i1.i, 0
  br i1 %tobool.i.not.i2.i, label %sg_page.exit5.i, label %do.body2.i3.i, !prof !888

do.body2.i3.i:                                    ; preds = %if.end.i83
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #17, !srcloc !896
  unreachable

sg_page.exit5.i:                                  ; preds = %if.end.i83
  call void @__sanitizer_cov_trace_pc() #19
  %length6.i = getelementptr inbounds %struct.scatterlist, ptr %call1.i, i32 0, i32 2
  %22 = ptrtoint ptr %length6.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %length6.i, align 4
  %and.i4.i = and i32 %21, -4
  %24 = inttoptr i32 %and.i4.i to ptr
  br label %if.end8.i

if.end8.i:                                        ; preds = %sg_page.exit5.i, %do.body.i.if.end8.i_crit_edge
  %sglen.1.i = phi i32 [ %sglen.0.i, %do.body.i.if.end8.i_crit_edge ], [ %23, %sg_page.exit5.i ]
  %page.1.i = phi ptr [ %page.0.i, %do.body.i.if.end8.i_crit_edge ], [ %24, %sg_page.exit5.i ]
  %sgoffset.addr.1.i = phi i32 [ %sgoffset.addr.0.i, %do.body.i.if.end8.i_crit_edge ], [ 0, %sg_page.exit5.i ]
  %sg.addr.1.i = phi ptr [ %sg.addr.0.i, %do.body.i.if.end8.i_crit_edge ], [ %call1.i, %sg_page.exit5.i ]
  %25 = tail call i32 @llvm.umin.i32(i32 %datalen.0.i, i32 %sglen.1.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0.i)
  %tobool10.not.i = icmp eq i32 %i.0.i, 0
  br i1 %tobool10.not.i, label %if.end8.i.if.end40.i_crit_edge, label %land.lhs.true.i

if.end8.i.if.end40.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40.i

land.lhs.true.i:                                  ; preds = %if.end8.i
  %sub11.i = add i32 %i.0.i, -1
  %arrayidx.i = getelementptr %struct.page_frag, ptr %frags, i32 %sub11.i
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx.i, align 4
  %cmp13.i = icmp eq ptr %page.1.i, %27
  br i1 %cmp13.i, label %land.lhs.true14.i, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i

land.lhs.true14.i:                                ; preds = %land.lhs.true.i
  %offset.i = getelementptr inbounds %struct.scatterlist, ptr %sg.addr.1.i, i32 0, i32 1
  %28 = ptrtoint ptr %offset.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %offset.i, align 4
  %add.i = add i32 %29, %sgoffset.addr.1.i
  %offset17.i = getelementptr %struct.page_frag, ptr %frags, i32 %sub11.i, i32 1
  %30 = ptrtoint ptr %offset17.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %offset17.i, align 4
  %conv.i = zext i16 %31 to i32
  %size.i = getelementptr %struct.page_frag, ptr %frags, i32 %sub11.i, i32 2
  %32 = ptrtoint ptr %size.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %size.i, align 2
  %conv20.i = zext i16 %33 to i32
  %add21.i = add nuw nsw i32 %conv20.i, %conv.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %add21.i)
  %cmp22.i = icmp eq i32 %add.i, %add21.i
  br i1 %cmp22.i, label %if.then24.i, label %land.lhs.true14.i.if.else.i_crit_edge

land.lhs.true14.i.if.else.i_crit_edge:            ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i

if.then24.i:                                      ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #19
  %34 = trunc i32 %25 to i16
  %conv30.i = add i16 %33, %34
  %35 = ptrtoint ptr %size.i to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %conv30.i, ptr %size.i, align 2
  br label %do.cond55.i

if.else.i:                                        ; preds = %land.lhs.true14.i.if.else.i_crit_edge, %land.lhs.true.i.if.else.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %i.0.i)
  %cmp31.i = icmp sgt i32 %i.0.i, 16
  br i1 %cmp31.i, label %do.end36.i, label %if.else.i.if.end40.i_crit_edge

if.else.i.if.end40.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40.i

do.end36.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #19
  %call38.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.304, ptr noundef nonnull @.str.302, i32 noundef 17, i32 noundef %count) #21
  %sub39.i = sub i32 %count, %datalen.0.i
  %36 = ptrtoint ptr %dlimit to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %sub39.i, ptr %dlimit, align 4
  br label %do.body14

if.end40.i:                                       ; preds = %if.else.i.if.end40.i_crit_edge, %if.end8.i.if.end40.i_crit_edge
  %arrayidx41.i = getelementptr %struct.page_frag, ptr %frags, i32 %i.0.i
  %37 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %page.1.i, ptr %arrayidx41.i, align 4
  %offset43.i = getelementptr inbounds %struct.scatterlist, ptr %sg.addr.1.i, i32 0, i32 1
  %38 = ptrtoint ptr %offset43.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %offset43.i, align 4
  %add44.i = add i32 %39, %sgoffset.addr.1.i
  %conv45.i = trunc i32 %add44.i to i16
  %offset47.i = getelementptr %struct.page_frag, ptr %frags, i32 %i.0.i, i32 1
  %40 = ptrtoint ptr %offset47.i to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %conv45.i, ptr %offset47.i, align 4
  %conv48.i = trunc i32 %25 to i16
  %size50.i = getelementptr %struct.page_frag, ptr %frags, i32 %i.0.i, i32 2
  %41 = ptrtoint ptr %size50.i to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %conv48.i, ptr %size50.i, align 2
  %inc.i84 = add nsw i32 %i.0.i, 1
  br label %do.cond55.i

do.cond55.i:                                      ; preds = %if.end40.i, %if.then24.i
  %i.1.i = phi i32 [ %i.0.i, %if.then24.i ], [ %inc.i84, %if.end40.i ]
  %sub52.i = sub i32 %datalen.0.i, %25
  %add53.i = add i32 %sgoffset.addr.1.i, %25
  %sub54.i = sub i32 %sglen.1.i, %25
  %tobool56.not.i = icmp eq i32 %sub52.i, 0
  br i1 %tobool56.not.i, label %sgl_read_to_frags.exit, label %do.cond55.i.do.body.i_crit_edge

do.cond55.i.do.body.i_crit_edge:                  ; preds = %do.cond55.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i

sgl_read_to_frags.exit:                           ; preds = %do.cond55.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.1.i)
  %cmp12 = icmp slt i32 %i.1.i, 0
  br i1 %cmp12, label %sgl_read_to_frags.exit.do.body14_crit_edge, label %if.end26

sgl_read_to_frags.exit.do.body14_crit_edge:       ; preds = %sgl_read_to_frags.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body14

do.body14:                                        ; preds = %sgl_read_to_frags.exit.do.body14_crit_edge, %do.end36.i, %do.end.i
  %retval.2.i93 = phi i32 [ %i.1.i, %sgl_read_to_frags.exit.do.body14_crit_edge ], [ -22, %do.end36.i ], [ -22, %do.end.i ]
  %42 = load i32, ptr @dbg_level, align 4
  %and = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %do.body14.cleanup_crit_edge, label %do.end19

do.body14.cleanup_crit_edge:                      ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end19:                                         ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #19
  %dlen21 = getelementptr i8, ptr %3, i32 296
  %43 = ptrtoint ptr %dlen21 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %dlen21, align 8
  %45 = ptrtoint ptr %dlimit to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %dlimit, align 4
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.296, ptr noundef nonnull @.str.294, i32 noundef %7, i32 noundef %offset, i32 noundef %count, i32 noundef %44, i32 noundef %46) #21
  br label %cleanup

if.end26:                                         ; preds = %sgl_read_to_frags.exit
  %offset27 = getelementptr i8, ptr %3, i32 300
  %47 = ptrtoint ptr %offset27 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %offset, ptr %offset27, align 4
  %count28 = getelementptr i8, ptr %3, i32 304
  %48 = ptrtoint ptr %count28 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %count, ptr %count28, align 8
  %conv = trunc i32 %i.1.i to i16
  %nr_frags = getelementptr i8, ptr %3, i32 154
  %49 = ptrtoint ptr %nr_frags to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %conv, ptr %nr_frags, align 2
  %total_count = getelementptr i8, ptr %3, i32 312
  %50 = ptrtoint ptr %total_count to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %count, ptr %total_count, align 8
  %total_offset = getelementptr i8, ptr %3, i32 316
  %51 = ptrtoint ptr %total_offset to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %offset, ptr %total_offset, align 4
  %52 = load i32, ptr @dbg_level, align 4
  %and30 = and i32 %52, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %if.end26.cleanup_crit_edge, label %do.end35

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end35:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #19
  %call39 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.299, ptr noundef nonnull @.str.294, ptr noundef nonnull @.str.294, i32 noundef %offset, i32 noundef %count, i32 noundef %i.1.i, i32 noundef %count, i32 noundef %offset) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end35, %if.end26.cleanup_crit_edge, %do.end19, %do.body14.cleanup_crit_edge, %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -14, %do.end ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %retval.2.i93, %do.end19 ], [ %retval.2.i93, %do.body14.cleanup_crit_edge ], [ 0, %do.end35 ], [ 0, %if.end26.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_conn_init_pdu(ptr noundef %task, i32 noundef %offset, i32 noundef %count) #1 align 64 {
entry:
  %dlimit = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %conn1 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 12
  %0 = ptrtoint ptr %conn1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %conn1, align 4
  %dd_data = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 20
  %2 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dd_data, align 4
  %add.ptr = getelementptr i8, ptr %3, i32 152
  %sc3 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 11
  %4 = ptrtoint ptr %sc3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sc3, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dlimit) #17
  %6 = ptrtoint ptr %dlimit to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %dlimit, align 4
  %and.i = and i32 %count, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %sub.i = sub nuw nsw i32 4, %and.i
  %spec.select.i = select i1 %tobool.not.i, i32 0, i32 %sub.i
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %lor.lhs.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

lor.lhs.false:                                    ; preds = %entry
  %dd_data4 = getelementptr inbounds %struct.iscsi_tcp_task, ptr %3, i32 0, i32 5
  %7 = ptrtoint ptr %dd_data4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dd_data4, align 4
  %cmp.not = icmp eq ptr %8, %add.ptr
  br i1 %cmp.not, label %if.end, label %cond.true

cond.true:                                        ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  %9 = ptrtoint ptr %dd_data4 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dd_data4, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi ptr [ %10, %cond.true ], [ null, %entry.cond.end_crit_edge ]
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.123, ptr noundef nonnull @.str.124, ptr noundef %task, ptr noundef %5, ptr noundef %3, ptr noundef %cond, ptr noundef %add.ptr) #21
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %skb9 = getelementptr i8, ptr %3, i32 292
  %11 = ptrtoint ptr %skb9 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %skb9, align 4
  %13 = load i32, ptr @dbg_level, align 4
  %and = and i32 %13, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool11.not = icmp eq i32 %and, 0
  br i1 %tobool11.not, label %if.end.do.end22_crit_edge, label %do.end15

if.end.do.end22_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end22

do.end15:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %data = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 19
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %data, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %15, align 1
  %18 = and i8 %17, 63
  %and18 = zext i8 %18 to i32
  %cmdsn = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 4
  %19 = ptrtoint ptr %cmdsn to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cmdsn, align 4
  %21 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task, align 4
  %itt = getelementptr inbounds %struct.iscsi_hdr, ptr %22, i32 0, i32 6
  %23 = ptrtoint ptr %itt to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %itt, align 4
  %call19 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.126, ptr noundef nonnull @.str.124, ptr noundef %task, ptr noundef %5, ptr noundef %12, i32 noundef %and18, i32 noundef %20, i32 noundef %24, i32 noundef %offset, i32 noundef %count) #21
  br label %do.end22

do.end22:                                         ; preds = %do.end15, %if.end.do.end22_crit_edge
  %hdr_len = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 2
  %25 = ptrtoint ptr %hdr_len to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %hdr_len, align 2
  %conv23 = zext i16 %26 to i32
  %call24 = tail call ptr @skb_put(ptr noundef %12, i32 noundef %conv23) #17
  %hdrdgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 25
  %27 = ptrtoint ptr %hdrdgst_en to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %hdrdgst_en, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count)
  %tobool25.not = icmp eq i32 %count, 0
  br i1 %tobool25.not, label %if.then31.critedge, label %cond.true26

cond.true26:                                      ; preds = %do.end22
  %datadgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 26
  %29 = ptrtoint ptr %datadgst_en to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %datadgst_en, align 8
  %31 = or i32 %30, %28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %cond.true26.tx_skb_setmode.exit_crit_edge, label %if.then.i

cond.true26.tx_skb_setmode.exit_crit_edge:        ; preds = %cond.true26
  call void @__sanitizer_cov_trace_pc() #19
  br label %tx_skb_setmode.exit

if.then.i:                                        ; preds = %cond.true26
  call void @__sanitizer_cov_trace_pc() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool1.not.i = icmp eq i32 %30, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i308 = icmp ne i32 %28, 0
  %spec.select.i309 = zext i1 %tobool.not.i308 to i8
  %33 = or i8 %spec.select.i309, 2
  %submode.1.i = select i1 %tobool1.not.i, i8 %spec.select.i309, i8 %33
  %34 = or i8 %submode.1.i, 32
  br label %tx_skb_setmode.exit

tx_skb_setmode.exit:                              ; preds = %if.then.i, %cond.true26.tx_skb_setmode.exit_crit_edge
  %.sink.i = phi i8 [ %34, %if.then.i ], [ 0, %cond.true26.tx_skb_setmode.exit_crit_edge ]
  %35 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 14
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %.sink.i, ptr %35, align 2
  %37 = load i32, ptr @dbg_level, align 4
  %and41 = and i32 %37, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  br i1 %tobool42.not, label %tx_skb_setmode.exit.do.end53_crit_edge, label %do.end46

tx_skb_setmode.exit.do.end53_crit_edge:           ; preds = %tx_skb_setmode.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end53

if.then31.critedge:                               ; preds = %do.end22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %38 = icmp eq i32 %28, 0
  %spec.select = select i1 %38, i8 0, i8 33
  %39 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 14
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %spec.select, ptr %39, align 2
  %count32 = getelementptr i8, ptr %3, i32 304
  %41 = ptrtoint ptr %count32 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %count32, align 8
  %offset33 = getelementptr i8, ptr %3, i32 300
  %42 = ptrtoint ptr %offset33 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %offset, ptr %offset33, align 4
  %nr_frags = getelementptr i8, ptr %3, i32 154
  %43 = ptrtoint ptr %nr_frags to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 0, ptr %nr_frags, align 2
  %total_offset = getelementptr i8, ptr %3, i32 316
  %44 = ptrtoint ptr %total_offset to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %total_offset, align 4
  %total_count = getelementptr i8, ptr %3, i32 312
  %45 = ptrtoint ptr %total_count to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 0, ptr %total_count, align 8
  %max_xmit_dlength = getelementptr i8, ptr %3, i32 320
  %46 = ptrtoint ptr %max_xmit_dlength to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %max_xmit_dlength, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool34.not = icmp eq i32 %47, 0
  br i1 %tobool34.not, label %if.then31.critedge.if.end38_crit_edge, label %if.then35

if.then31.critedge.if.end38_crit_edge:            ; preds = %if.then31.critedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

if.then35:                                        ; preds = %if.then31.critedge
  call void @__sanitizer_cov_trace_pc() #19
  %max_xmit_dlength37 = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 24
  %48 = ptrtoint ptr %max_xmit_dlength37 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %max_xmit_dlength37, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.then35, %if.then31.critedge.if.end38_crit_edge
  %flags.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 16
  %49 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %50, -4097
  store i32 %and.i.i, ptr %flags.i, align 4
  br label %cleanup

do.end46:                                         ; preds = %tx_skb_setmode.exit
  call void @__sanitizer_cov_trace_pc() #19
  %total_count48 = getelementptr i8, ptr %3, i32 312
  %51 = ptrtoint ptr %total_count48 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %total_count48, align 8
  %total_offset49 = getelementptr i8, ptr %3, i32 316
  %53 = ptrtoint ptr %total_offset49 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %total_offset49, align 4
  %call50 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.129, ptr noundef nonnull @.str.124, i32 noundef %52, i32 noundef %54) #21
  br label %do.end53

do.end53:                                         ; preds = %do.end46, %tx_skb_setmode.exit.do.end53_crit_edge
  %total_count54 = getelementptr i8, ptr %3, i32 312
  %55 = ptrtoint ptr %total_count54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %total_count54, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %count)
  %cmp56.not = icmp eq i32 %56, %count
  br i1 %cmp56.not, label %lor.lhs.false58, label %do.end53.if.then61_crit_edge

do.end53.if.then61_crit_edge:                     ; preds = %do.end53
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then61

lor.lhs.false58:                                  ; preds = %do.end53
  %total_offset55 = getelementptr i8, ptr %3, i32 316
  %57 = ptrtoint ptr %total_offset55 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %total_offset55, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %58, i32 %offset)
  %cmp59.not = icmp eq i32 %58, %offset
  br i1 %cmp59.not, label %lor.lhs.false58.if.end79_crit_edge, label %lor.lhs.false58.if.then61_crit_edge

lor.lhs.false58.if.then61_crit_edge:              ; preds = %lor.lhs.false58
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then61

lor.lhs.false58.if.end79_crit_edge:               ; preds = %lor.lhs.false58
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end79

if.then61:                                        ; preds = %lor.lhs.false58.if.then61_crit_edge, %do.end53.if.then61_crit_edge
  %call62 = call fastcc i32 @cxgbi_task_data_sgl_read(ptr noundef %task, i32 noundef %offset, i32 noundef %count, ptr noundef nonnull %dlimit)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %cmp63 = icmp slt i32 %call62, 0
  br i1 %cmp63, label %do.end68, label %if.then61.if.end79_crit_edge

if.then61.if.end79_crit_edge:                     ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end79

do.end68:                                         ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #19
  %59 = ptrtoint ptr %sc3 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %sc3, align 4
  %61 = ptrtoint ptr %dd_data4 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %dd_data4, align 4
  %63 = ptrtoint ptr %dlimit to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %dlimit, align 4
  %call77 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132, ptr noundef nonnull @.str.124, ptr noundef %task, ptr noundef %60, ptr noundef nonnull %3, ptr noundef %62, ptr noundef %add.ptr, i32 noundef %64, i32 noundef %call62) #21
  br label %cleanup

if.end79:                                         ; preds = %if.then61.if.end79_crit_edge, %lor.lhs.false58.if.end79_crit_edge
  %max_xmit_dlength80 = getelementptr i8, ptr %3, i32 320
  %65 = ptrtoint ptr %max_xmit_dlength80 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %max_xmit_dlength80, align 8
  %max_xmit_dlength81 = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 24
  %67 = ptrtoint ptr %max_xmit_dlength81 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %max_xmit_dlength81, align 8
  %tobool82.not = icmp eq ptr %5, null
  br i1 %tobool82.not, label %if.else145, label %if.then83

if.then83:                                        ; preds = %if.end79
  %frags = getelementptr i8, ptr %3, i32 156
  %68 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %add.ptr, align 8
  %70 = and i8 %69, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool86.not = icmp eq i8 %70, 0
  br i1 %tobool86.not, label %lor.lhs.false87, label %if.then83.if.then98_crit_edge

if.then83.if.then98_crit_edge:                    ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then98

lor.lhs.false87:                                  ; preds = %if.then83
  %nr_frags88 = getelementptr i8, ptr %3, i32 154
  %71 = ptrtoint ptr %nr_frags88 to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %nr_frags88, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 17, i16 %72)
  %cmp90 = icmp ugt i16 %72, 17
  br i1 %cmp90, label %lor.lhs.false87.if.then98_crit_edge, label %lor.lhs.false92

lor.lhs.false87.if.then98_crit_edge:              ; preds = %lor.lhs.false87
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then98

lor.lhs.false92:                                  ; preds = %lor.lhs.false87
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i)
  %tobool93.not = icmp ne i32 %spec.select.i, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 17, i16 %72)
  %cmp96 = icmp eq i16 %72, 17
  %or.cond = select i1 %tobool93.not, i1 %cmp96, i1 false
  br i1 %or.cond, label %lor.lhs.false92.if.then98_crit_edge, label %for.cond125.preheader

lor.lhs.false92.if.then98_crit_edge:              ; preds = %lor.lhs.false92
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then98

for.cond125.preheader:                            ; preds = %lor.lhs.false92
  %73 = ptrtoint ptr %nr_frags88 to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %nr_frags88, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %74)
  %cmp128405.not = icmp eq i16 %74, 0
  br i1 %cmp128405.not, label %for.cond125.preheader.if.end156_crit_edge, label %for.body130.lr.ph

for.cond125.preheader.if.end156_crit_edge:        ; preds = %for.cond125.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end156

for.body130.lr.ph:                                ; preds = %for.cond125.preheader
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 17
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 12
  br label %for.body130

if.then98:                                        ; preds = %lor.lhs.false92.if.then98_crit_edge, %lor.lhs.false87.if.then98_crit_edge, %if.then83.if.then98_crit_edge
  %data99 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 19
  %75 = ptrtoint ptr %data99 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %data99, align 4
  %77 = ptrtoint ptr %hdr_len to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %hdr_len, align 2
  %conv101 = zext i16 %78 to i32
  %add.ptr102 = getelementptr i8, ptr %76, i32 %conv101
  %nr_frags103 = getelementptr i8, ptr %3, i32 154
  %79 = ptrtoint ptr %nr_frags103 to i32
  call void @__asan_load2_noabort(i32 %79)
  %80 = load i16, ptr %nr_frags103, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %80)
  %cmp105409.not = icmp eq i16 %80, 0
  br i1 %cmp105409.not, label %if.then98.for.end_crit_edge, label %if.then98.for.body_crit_edge

if.then98.for.body_crit_edge:                     ; preds = %if.then98
  br label %for.body

if.then98.for.end_crit_edge:                      ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then98.for.body_crit_edge
  %dst.0412 = phi ptr [ %add.ptr114, %for.body.for.body_crit_edge ], [ %add.ptr102, %if.then98.for.body_crit_edge ]
  %frag.0411 = phi ptr [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %frags, %if.then98.for.body_crit_edge ]
  %i.0410 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.then98.for.body_crit_edge ]
  %81 = ptrtoint ptr %frag.0411 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %frag.0411, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %83 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %83, 512
  %84 = tail call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i.i.i = and i32 %84, -16384
  %85 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %87, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !898
  %88 = tail call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i1.i.i = and i32 %88, -16384
  %89 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %89, i32 0, i32 2
  %90 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %91, i32 0, i32 213
  %92 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %93, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !899
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %82, i32 noundef %or.i) #17
  %offset108 = getelementptr inbounds %struct.page_frag, ptr %frag.0411, i32 0, i32 1
  %94 = ptrtoint ptr %offset108 to i32
  call void @__asan_load2_noabort(i32 %94)
  %95 = load i16, ptr %offset108, align 4
  %conv109 = zext i16 %95 to i32
  %add.ptr110 = getelementptr i8, ptr %call.i.i, i32 %conv109
  %size = getelementptr inbounds %struct.page_frag, ptr %frag.0411, i32 0, i32 2
  %96 = ptrtoint ptr %size to i32
  call void @__asan_load2_noabort(i32 %96)
  %97 = load i16, ptr %size, align 2
  %conv111 = zext i16 %97 to i32
  %98 = call ptr @memcpy(ptr %dst.0412, ptr %add.ptr110, i32 %conv111)
  %99 = load i16, ptr %size, align 2
  %conv113 = zext i16 %99 to i32
  %add.ptr114 = getelementptr i8, ptr %dst.0412, i32 %conv113
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i) #17
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !900
  %100 = tail call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i1.i = and i32 %100, -16384
  %101 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %101, i32 0, i32 2
  %102 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %103, i32 0, i32 213
  %104 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %105, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !901
  %106 = tail call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i.i = and i32 %106, -16384
  %107 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %107, i32 0, i32 1
  %108 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %109, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %inc = add nuw nsw i32 %i.0410, 1
  %incdec.ptr = getelementptr %struct.page_frag, ptr %frag.0411, i32 1
  %110 = ptrtoint ptr %nr_frags103 to i32
  call void @__asan_load2_noabort(i32 %110)
  %111 = load i16, ptr %nr_frags103, align 2
  %conv104 = zext i16 %111 to i32
  %cmp105 = icmp ult i32 %inc, %conv104
  br i1 %cmp105, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.then98.for.end_crit_edge
  %dst.0.lcssa = phi ptr [ %add.ptr102, %if.then98.for.end_crit_edge ], [ %add.ptr114, %for.body.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i)
  %tobool121.not = icmp eq i32 %spec.select.i, 0
  br i1 %tobool121.not, label %for.end.if.end156.thread_crit_edge, label %if.then122

for.end.if.end156.thread_crit_edge:               ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end156.thread

if.then122:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  %112 = call ptr @memset(ptr %dst.0.lcssa, i32 0, i32 %spec.select.i)
  br label %if.end156.thread

if.end156.thread:                                 ; preds = %if.then122, %for.end.if.end156.thread_crit_edge
  %call124 = tail call ptr @skb_put(ptr noundef %12, i32 noundef %count) #17
  br label %if.end168

for.body130:                                      ; preds = %skb_fill_page_desc.exit.for.body130_crit_edge, %for.body130.lr.ph
  %frag.1407 = phi ptr [ %frags, %for.body130.lr.ph ], [ %incdec.ptr139, %skb_fill_page_desc.exit.for.body130_crit_edge ]
  %i.1406 = phi i32 [ 0, %for.body130.lr.ph ], [ %inc138, %skb_fill_page_desc.exit.for.body130_crit_edge ]
  %113 = ptrtoint ptr %frag.1407 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %frag.1407, align 4
  %115 = getelementptr inbounds %struct.page, ptr %114, i32 0, i32 1
  %116 = ptrtoint ptr %115 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load volatile i32, ptr %115, align 4
  %and.i.i315 = and i32 %117, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i315)
  %tobool.not.i.i = icmp eq i32 %and.i.i315, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !888

if.then.i.i:                                      ; preds = %for.body130
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i316 = add i32 %117, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %for.body130
  call void @__sanitizer_cov_trace_pc() #19
  %118 = ptrtoint ptr %114 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i316, %if.then.i.i ], [ %118, %if.end.i.i ]
  %119 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %119, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #17
  %120 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %121, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !895

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %122 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %122, ptr noundef nonnull @.str.327) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #17, !srcloc !902
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #17
  %123 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #17, !srcloc !903
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@cxgbi_conn_init_pdu, %if.then.i.i.i.i)) #17
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !904

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__page_ref_mod(ptr noundef %119, i32 noundef 1) #17
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %124 = ptrtoint ptr %frag.1407 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %frag.1407, align 4
  %offset133 = getelementptr inbounds %struct.page_frag, ptr %frag.1407, i32 0, i32 1
  %126 = ptrtoint ptr %offset133 to i32
  call void @__asan_load2_noabort(i32 %126)
  %127 = load i16, ptr %offset133, align 4
  %conv134 = zext i16 %127 to i32
  %size135 = getelementptr inbounds %struct.page_frag, ptr %frag.1407, i32 0, i32 2
  %128 = ptrtoint ptr %size135 to i32
  call void @__asan_load2_noabort(i32 %128)
  %129 = load i16, ptr %size135, align 2
  %conv136 = zext i16 %129 to i32
  %130 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %end.i.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.skb_shared_info, ptr %131, i32 0, i32 12, i32 %i.1406
  %132 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %132)
  store ptr %125, ptr %arrayidx.i.i, align 4
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %131, i32 0, i32 12, i32 %i.1406, i32 2
  %133 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %conv134, ptr %bv_offset.i.i, align 4
  %bv_len.i.i.i = getelementptr %struct.skb_shared_info, ptr %131, i32 0, i32 12, i32 %i.1406, i32 1
  %134 = ptrtoint ptr %bv_len.i.i.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %conv136, ptr %bv_len.i.i.i, align 4
  %135 = getelementptr inbounds %struct.page, ptr %125, i32 0, i32 1
  %136 = ptrtoint ptr %135 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load volatile i32, ptr %135, align 4
  %and.i.i.i = and i32 %137, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !888

if.then.i.i.i:                                    ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i.i = add i32 %137, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #19
  %138 = ptrtoint ptr %125 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %138, %if.end.i.i.i ]
  %139 = inttoptr i32 %retval.0.i.i.i to ptr
  %140 = getelementptr inbounds %struct.page, ptr %139, i32 0, i32 1
  %141 = ptrtoint ptr %140 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %140, align 4
  %143 = ptrtoint ptr %142 to i32
  %and.i8.i.i = and i32 %143, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i8.i.i, 0
  br i1 %tobool.i.not.i.i, label %_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge, label %if.then.i.i317

_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge: ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_fill_page_desc.exit

if.then.i.i317:                                   ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %144 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %144)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %bf.set.i.i = or i8 %bf.load.i.i, 2
  store i8 %bf.set.i.i, ptr %pfmemalloc.i.i, align 2
  br label %skb_fill_page_desc.exit

skb_fill_page_desc.exit:                          ; preds = %if.then.i.i317, %_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge
  %145 = trunc i32 %i.1406 to i8
  %conv.i = add i8 %145, 1
  %146 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %end.i.i.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %147, i32 0, i32 2
  %148 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_store1_noabort(i32 %148)
  store i8 %conv.i, ptr %nr_frags.i, align 2
  %inc138 = add nuw nsw i32 %i.1406, 1
  %incdec.ptr139 = getelementptr %struct.page_frag, ptr %frag.1407, i32 1
  %149 = ptrtoint ptr %nr_frags88 to i32
  call void @__asan_load2_noabort(i32 %149)
  %150 = load i16, ptr %nr_frags88, align 2
  %conv127 = zext i16 %150 to i32
  %cmp128 = icmp ult i32 %inc138, %conv127
  br i1 %cmp128, label %skb_fill_page_desc.exit.for.body130_crit_edge, label %skb_fill_page_desc.exit.if.end156_crit_edge

skb_fill_page_desc.exit.if.end156_crit_edge:      ; preds = %skb_fill_page_desc.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end156

skb_fill_page_desc.exit.for.body130_crit_edge:    ; preds = %skb_fill_page_desc.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body130

if.else145:                                       ; preds = %if.end79
  %data146 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 9
  %151 = ptrtoint ptr %data146 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %data146, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %153 = load ptr, ptr @mem_map, align 4
  %154 = ptrtoint ptr %152 to i32
  %sub.i318 = add i32 %154, 1073741824
  %shr.i = lshr i32 %sub.i318, 12
  %155 = getelementptr %struct.page, ptr %153, i32 %shr.i, i32 1
  %156 = ptrtoint ptr %155 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load volatile i32, ptr %155, align 4
  %and.i.i319 = and i32 %157, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i319)
  %tobool.not.i.i320 = icmp eq i32 %and.i.i319, 0
  br i1 %tobool.not.i.i320, label %if.end.i.i323, label %if.then.i.i322, !prof !888

if.then.i.i322:                                   ; preds = %if.else145
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i321 = add i32 %157, -1
  br label %virt_to_head_page.exit

if.end.i.i323:                                    ; preds = %if.else145
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr.i = getelementptr %struct.page, ptr %153, i32 %shr.i
  %158 = ptrtoint ptr %add.ptr.i to i32
  br label %virt_to_head_page.exit

virt_to_head_page.exit:                           ; preds = %if.end.i.i323, %if.then.i.i322
  %retval.0.i.i324 = phi i32 [ %sub.i.i321, %if.then.i.i322 ], [ %158, %if.end.i.i323 ]
  %159 = inttoptr i32 %retval.0.i.i324 to ptr
  %160 = getelementptr inbounds %struct.page, ptr %159, i32 0, i32 1
  %161 = ptrtoint ptr %160 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load volatile i32, ptr %160, align 4
  %and.i.i326 = and i32 %162, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i326)
  %tobool.not.i.i327 = icmp eq i32 %and.i.i326, 0
  br i1 %tobool.not.i.i327, label %virt_to_head_page.exit._compound_head.exit.i336_crit_edge, label %if.then.i.i329, !prof !888

virt_to_head_page.exit._compound_head.exit.i336_crit_edge: ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %_compound_head.exit.i336

if.then.i.i329:                                   ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i328 = add i32 %162, -1
  %.pre = inttoptr i32 %sub.i.i328 to ptr
  br label %_compound_head.exit.i336

_compound_head.exit.i336:                         ; preds = %if.then.i.i329, %virt_to_head_page.exit._compound_head.exit.i336_crit_edge
  %.pre-phi = phi ptr [ %159, %virt_to_head_page.exit._compound_head.exit.i336_crit_edge ], [ %.pre, %if.then.i.i329 ]
  %_refcount.i.i.i.i332 = getelementptr inbounds %struct.page, ptr %.pre-phi, i32 0, i32 3
  %call.i.i.i.i.i.i333 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i332, i32 noundef 4) #17
  %163 = ptrtoint ptr %_refcount.i.i.i.i332 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load volatile i32, ptr %_refcount.i.i.i.i332, align 4
  %add.i.i334 = add i32 %164, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i334)
  %cmp.i.i335 = icmp ult i32 %add.i.i334, 128
  br i1 %cmp.i.i335, label %if.then.i1.i337, label %do.end5.i.i339, !prof !895

if.then.i1.i337:                                  ; preds = %_compound_head.exit.i336
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @dump_page(ptr noundef %.pre-phi, ptr noundef nonnull @.str.327) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #17, !srcloc !902
  unreachable

do.end5.i.i339:                                   ; preds = %_compound_head.exit.i336
  %call.i.i.i.i9.i.i338 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i332, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i332, i32 1, i32 3, i32 1) #17
  %165 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i332, ptr %_refcount.i.i.i.i332, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i332) #17, !srcloc !903
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@cxgbi_conn_init_pdu, %if.then.i.i.i.i340)) #17
          to label %get_page.exit341 [label %if.then.i.i.i.i340], !srcloc !904

if.then.i.i.i.i340:                               ; preds = %do.end5.i.i339
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__page_ref_mod(ptr noundef %.pre-phi, i32 noundef 1) #17
  br label %get_page.exit341

get_page.exit341:                                 ; preds = %if.then.i.i.i.i340, %do.end5.i.i339
  %166 = ptrtoint ptr %data146 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %data146, align 4
  %call149 = tail call ptr @page_address(ptr noundef %159) #17
  %sub.ptr.lhs.cast = ptrtoint ptr %167 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %call149 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %end.i.i.i342 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 17
  %168 = ptrtoint ptr %end.i.i.i342 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %end.i.i.i342, align 4
  %arrayidx.i.i343 = getelementptr %struct.skb_shared_info, ptr %169, i32 0, i32 12, i32 0
  %170 = ptrtoint ptr %arrayidx.i.i343 to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr %159, ptr %arrayidx.i.i343, align 4
  %bv_offset.i.i344 = getelementptr %struct.skb_shared_info, ptr %169, i32 0, i32 12, i32 0, i32 2
  %171 = ptrtoint ptr %bv_offset.i.i344 to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %sub.ptr.sub, ptr %bv_offset.i.i344, align 4
  %bv_len.i.i.i345 = getelementptr %struct.skb_shared_info, ptr %169, i32 0, i32 12, i32 0, i32 1
  %172 = ptrtoint ptr %bv_len.i.i.i345 to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %count, ptr %bv_len.i.i.i345, align 4
  %173 = ptrtoint ptr %160 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile i32, ptr %160, align 4
  %and.i.i.i346 = and i32 %174, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i346)
  %tobool.not.i.i.i347 = icmp eq i32 %and.i.i.i346, 0
  br i1 %tobool.not.i.i.i347, label %get_page.exit341._compound_head.exit.i.i354_crit_edge, label %if.then.i.i.i349, !prof !888

get_page.exit341._compound_head.exit.i.i354_crit_edge: ; preds = %get_page.exit341
  call void @__sanitizer_cov_trace_pc() #19
  br label %_compound_head.exit.i.i354

if.then.i.i.i349:                                 ; preds = %get_page.exit341
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i.i348 = add i32 %174, -1
  %.pre414 = inttoptr i32 %sub.i.i.i348 to ptr
  br label %_compound_head.exit.i.i354

_compound_head.exit.i.i354:                       ; preds = %if.then.i.i.i349, %get_page.exit341._compound_head.exit.i.i354_crit_edge
  %.pre-phi415 = phi ptr [ %159, %get_page.exit341._compound_head.exit.i.i354_crit_edge ], [ %.pre414, %if.then.i.i.i349 ]
  %175 = getelementptr inbounds %struct.page, ptr %.pre-phi415, i32 0, i32 1
  %176 = ptrtoint ptr %175 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %175, align 4
  %178 = ptrtoint ptr %177 to i32
  %and.i8.i.i352 = and i32 %178, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i.i352)
  %tobool.i.not.i.i353 = icmp eq i32 %and.i8.i.i352, 0
  br i1 %tobool.i.not.i.i353, label %_compound_head.exit.i.i354.skb_fill_page_desc.exit360_crit_edge, label %if.then.i.i358

_compound_head.exit.i.i354.skb_fill_page_desc.exit360_crit_edge: ; preds = %_compound_head.exit.i.i354
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_fill_page_desc.exit360

if.then.i.i358:                                   ; preds = %_compound_head.exit.i.i354
  call void @__sanitizer_cov_trace_pc() #19
  %pfmemalloc.i.i355 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 12
  %179 = ptrtoint ptr %pfmemalloc.i.i355 to i32
  call void @__asan_load1_noabort(i32 %179)
  %bf.load.i.i356 = load i8, ptr %pfmemalloc.i.i355, align 2
  %bf.set.i.i357 = or i8 %bf.load.i.i356, 2
  store i8 %bf.set.i.i357, ptr %pfmemalloc.i.i355, align 2
  br label %skb_fill_page_desc.exit360

skb_fill_page_desc.exit360:                       ; preds = %if.then.i.i358, %_compound_head.exit.i.i354.skb_fill_page_desc.exit360_crit_edge
  %180 = ptrtoint ptr %end.i.i.i342 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %end.i.i.i342, align 4
  %nr_frags.i359 = getelementptr inbounds %struct.skb_shared_info, ptr %181, i32 0, i32 2
  %182 = ptrtoint ptr %nr_frags.i359 to i32
  call void @__asan_store1_noabort(i32 %182)
  store i8 1, ptr %nr_frags.i359, align 2
  br label %if.end156

if.end156:                                        ; preds = %skb_fill_page_desc.exit360, %skb_fill_page_desc.exit.if.end156_crit_edge, %for.cond125.preheader.if.end156_crit_edge
  %len = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 6
  %183 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %len, align 4
  %add141 = add i32 %184, %count
  store i32 %add141, ptr %len, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 7
  %185 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %data_len, align 8
  %add142 = add i32 %186, %count
  store i32 %add142, ptr %data_len, align 8
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 20
  %187 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %truesize, align 8
  %add143 = add i32 %188, %count
  store i32 %add143, ptr %truesize, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i)
  %tobool157.not = icmp eq i32 %spec.select.i, 0
  br i1 %tobool157.not, label %if.end156.if.end168_crit_edge, label %if.then158

if.end156.if.end168_crit_edge:                    ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end168

if.then158:                                       ; preds = %if.end156
  %189 = load ptr, ptr @rsvd_page, align 4
  %190 = getelementptr inbounds %struct.page, ptr %189, i32 0, i32 1
  %191 = ptrtoint ptr %190 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load volatile i32, ptr %190, align 4
  %and.i.i361 = and i32 %192, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i361)
  %tobool.not.i.i362 = icmp eq i32 %and.i.i361, 0
  br i1 %tobool.not.i.i362, label %if.end.i.i365, label %if.then.i.i364, !prof !888

if.then.i.i364:                                   ; preds = %if.then158
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i363 = add i32 %192, -1
  br label %_compound_head.exit.i371

if.end.i.i365:                                    ; preds = %if.then158
  call void @__sanitizer_cov_trace_pc() #19
  %193 = ptrtoint ptr %189 to i32
  br label %_compound_head.exit.i371

_compound_head.exit.i371:                         ; preds = %if.end.i.i365, %if.then.i.i364
  %retval.0.i.i366 = phi i32 [ %sub.i.i363, %if.then.i.i364 ], [ %193, %if.end.i.i365 ]
  %194 = inttoptr i32 %retval.0.i.i366 to ptr
  %_refcount.i.i.i.i367 = getelementptr inbounds %struct.page, ptr %194, i32 0, i32 3
  %call.i.i.i.i.i.i368 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i367, i32 noundef 4) #17
  %195 = ptrtoint ptr %_refcount.i.i.i.i367 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load volatile i32, ptr %_refcount.i.i.i.i367, align 4
  %add.i.i369 = add i32 %196, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i369)
  %cmp.i.i370 = icmp ult i32 %add.i.i369, 128
  br i1 %cmp.i.i370, label %if.then.i1.i372, label %do.end5.i.i374, !prof !895

if.then.i1.i372:                                  ; preds = %_compound_head.exit.i371
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @dump_page(ptr noundef %194, ptr noundef nonnull @.str.327) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #17, !srcloc !902
  unreachable

do.end5.i.i374:                                   ; preds = %_compound_head.exit.i371
  %call.i.i.i.i9.i.i373 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i367, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i367, i32 1, i32 3, i32 1) #17
  %197 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i367, ptr %_refcount.i.i.i.i367, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i367) #17, !srcloc !903
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@cxgbi_conn_init_pdu, %if.then.i.i.i.i375)) #17
          to label %get_page.exit376 [label %if.then.i.i.i.i375], !srcloc !904

if.then.i.i.i.i375:                               ; preds = %do.end5.i.i374
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__page_ref_mod(ptr noundef %194, i32 noundef 1) #17
  br label %get_page.exit376

get_page.exit376:                                 ; preds = %if.then.i.i.i.i375, %do.end5.i.i374
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 17
  %198 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %end.i, align 4
  %nr_frags160 = getelementptr inbounds %struct.skb_shared_info, ptr %199, i32 0, i32 2
  %200 = ptrtoint ptr %nr_frags160 to i32
  call void @__asan_load1_noabort(i32 %200)
  %201 = load i8, ptr %nr_frags160, align 2
  %conv161 = zext i8 %201 to i32
  %202 = load ptr, ptr @rsvd_page, align 4
  %arrayidx.i.i378 = getelementptr %struct.skb_shared_info, ptr %199, i32 0, i32 12, i32 %conv161
  %203 = ptrtoint ptr %arrayidx.i.i378 to i32
  call void @__asan_store4_noabort(i32 %203)
  store ptr %202, ptr %arrayidx.i.i378, align 4
  %bv_offset.i.i379 = getelementptr %struct.skb_shared_info, ptr %199, i32 0, i32 12, i32 %conv161, i32 2
  %204 = ptrtoint ptr %bv_offset.i.i379 to i32
  call void @__asan_store4_noabort(i32 %204)
  store i32 0, ptr %bv_offset.i.i379, align 4
  %bv_len.i.i.i380 = getelementptr %struct.skb_shared_info, ptr %199, i32 0, i32 12, i32 %conv161, i32 1
  %205 = ptrtoint ptr %bv_len.i.i.i380 to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %spec.select.i, ptr %bv_len.i.i.i380, align 4
  %206 = getelementptr inbounds %struct.page, ptr %202, i32 0, i32 1
  %207 = ptrtoint ptr %206 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load volatile i32, ptr %206, align 4
  %and.i.i.i381 = and i32 %208, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i381)
  %tobool.not.i.i.i382 = icmp eq i32 %and.i.i.i381, 0
  br i1 %tobool.not.i.i.i382, label %if.end.i.i.i385, label %if.then.i.i.i384, !prof !888

if.then.i.i.i384:                                 ; preds = %get_page.exit376
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i.i383 = add i32 %208, -1
  br label %_compound_head.exit.i.i389

if.end.i.i.i385:                                  ; preds = %get_page.exit376
  call void @__sanitizer_cov_trace_pc() #19
  %209 = ptrtoint ptr %202 to i32
  br label %_compound_head.exit.i.i389

_compound_head.exit.i.i389:                       ; preds = %if.end.i.i.i385, %if.then.i.i.i384
  %retval.0.i.i.i386 = phi i32 [ %sub.i.i.i383, %if.then.i.i.i384 ], [ %209, %if.end.i.i.i385 ]
  %210 = inttoptr i32 %retval.0.i.i.i386 to ptr
  %211 = getelementptr inbounds %struct.page, ptr %210, i32 0, i32 1
  %212 = ptrtoint ptr %211 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %211, align 4
  %214 = ptrtoint ptr %213 to i32
  %and.i8.i.i387 = and i32 %214, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i.i387)
  %tobool.i.not.i.i388 = icmp eq i32 %and.i8.i.i387, 0
  br i1 %tobool.i.not.i.i388, label %_compound_head.exit.i.i389.skb_fill_page_desc.exit396_crit_edge, label %if.then.i.i393

_compound_head.exit.i.i389.skb_fill_page_desc.exit396_crit_edge: ; preds = %_compound_head.exit.i.i389
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_fill_page_desc.exit396

if.then.i.i393:                                   ; preds = %_compound_head.exit.i.i389
  call void @__sanitizer_cov_trace_pc() #19
  %pfmemalloc.i.i390 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 12
  %215 = ptrtoint ptr %pfmemalloc.i.i390 to i32
  call void @__asan_load1_noabort(i32 %215)
  %bf.load.i.i391 = load i8, ptr %pfmemalloc.i.i390, align 2
  %bf.set.i.i392 = or i8 %bf.load.i.i391, 2
  store i8 %bf.set.i.i392, ptr %pfmemalloc.i.i390, align 2
  br label %skb_fill_page_desc.exit396

skb_fill_page_desc.exit396:                       ; preds = %if.then.i.i393, %_compound_head.exit.i.i389.skb_fill_page_desc.exit396_crit_edge
  %conv.i394 = add i8 %201, 1
  %216 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %end.i, align 4
  %nr_frags.i395 = getelementptr inbounds %struct.skb_shared_info, ptr %217, i32 0, i32 2
  %218 = ptrtoint ptr %nr_frags.i395 to i32
  call void @__asan_store1_noabort(i32 %218)
  store i8 %conv.i394, ptr %nr_frags.i395, align 2
  %data_len162 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 7
  %219 = ptrtoint ptr %data_len162 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %data_len162, align 8
  %add163 = add i32 %220, %spec.select.i
  store i32 %add163, ptr %data_len162, align 8
  %truesize164 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 20
  %221 = ptrtoint ptr %truesize164 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %truesize164, align 8
  %add165 = add i32 %222, %spec.select.i
  store i32 %add165, ptr %truesize164, align 8
  %len166 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 6
  %223 = ptrtoint ptr %len166 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %len166, align 4
  %add167 = add i32 %224, %spec.select.i
  store i32 %add167, ptr %len166, align 4
  br label %if.end168

if.end168:                                        ; preds = %skb_fill_page_desc.exit396, %if.end156.if.end168_crit_edge, %if.end156.thread
  %225 = ptrtoint ptr %max_xmit_dlength80 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %max_xmit_dlength80, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %226, i32 %count)
  %cmp170 = icmp ult i32 %226, %count
  br i1 %cmp170, label %if.then174, label %if.else176, !prof !888

if.then174:                                       ; preds = %if.end168
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 18
  %227 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %head.i, align 8
  %229 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %dd_data, align 4
  %231 = ptrtoint ptr %conn1 to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %conn1, align 4
  %session2.i = getelementptr inbounds %struct.iscsi_conn, ptr %232, i32 0, i32 2
  %233 = ptrtoint ptr %session2.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %session2.i, align 8
  %max_xmit_dlength.i = getelementptr i8, ptr %230, i32 320
  %235 = ptrtoint ptr %max_xmit_dlength.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %max_xmit_dlength.i, align 8
  %flags.i.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 16
  %237 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load volatile i32, ptr %flags.i.i, align 4
  %239 = and i32 %238, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %239)
  %tobool.not.i397 = icmp eq i32 %239, 0
  br i1 %tobool.not.i397, label %if.then174.cleanup_crit_edge, label %if.end.i, !prof !895

if.then174.cleanup_crit_edge:                     ; preds = %if.then174
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i:                                         ; preds = %if.then174
  %240 = call ptr @memset(ptr %228, i32 0, i32 28)
  %241 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %task, align 4
  %243 = ptrtoint ptr %242 to i32
  call void @__asan_load1_noabort(i32 %243)
  %244 = load i8, ptr %242, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %244)
  %cmp.i = icmp eq i8 %244, 1
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i.if.end12.i_crit_edge

if.end.i.if.end12.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %imm_data_en.i = getelementptr inbounds %struct.iscsi_session, ptr %234, i32 0, i32 16
  %245 = ptrtoint ptr %imm_data_en.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %imm_data_en.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %246)
  %tobool8.not.i = icmp eq i32 %246, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i.if.end12.i_crit_edge, label %if.then9.i

land.lhs.true.i.if.end12.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i

if.then9.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  %247 = ptrtoint ptr %228 to i32
  call void @__asan_load1_noabort(i32 %247)
  %248 = load i8, ptr %228, align 4
  %249 = or i8 %248, 4
  store i8 %249, ptr %228, align 4
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then9.i, %land.lhs.true.i.if.end12.i_crit_edge, %if.end.i.if.end12.i_crit_edge
  %burst_size.0.i = phi i32 [ %count, %if.then9.i ], [ 0, %land.lhs.true.i.if.end12.i_crit_edge ], [ 0, %if.end.i.if.end12.i_crit_edge ]
  %250 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %task, align 4
  %dlength14.i = getelementptr inbounds %struct.iscsi_hdr, ptr %251, i32 0, i32 4
  %252 = ptrtoint ptr %dlength14.i to i32
  call void @__asan_load1_noabort(i32 %252)
  %253 = load i8, ptr %dlength14.i, align 1
  %conv15.i = zext i8 %253 to i32
  %shl.i = shl nuw nsw i32 %conv15.i, 16
  %arrayidx18.i = getelementptr %struct.iscsi_hdr, ptr %251, i32 0, i32 4, i32 1
  %254 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load1_noabort(i32 %254)
  %255 = load i8, ptr %arrayidx18.i, align 1
  %conv19.i = zext i8 %255 to i32
  %shl20.i = shl nuw nsw i32 %conv19.i, 8
  %or21.i = or i32 %shl20.i, %shl.i
  %arrayidx24.i = getelementptr %struct.iscsi_hdr, ptr %251, i32 0, i32 4, i32 2
  %256 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load1_noabort(i32 %256)
  %257 = load i8, ptr %arrayidx24.i, align 1
  %conv25.i = zext i8 %257 to i32
  %or26.i = or i32 %or21.i, %conv25.i
  %258 = tail call i32 @llvm.umin.i32(i32 %or26.i, i32 %236) #17
  %shr.i398 = lshr i32 %258, 16
  %conv29.i = trunc i32 %shr.i398 to i8
  %259 = ptrtoint ptr %dlength14.i to i32
  call void @__asan_store1_noabort(i32 %259)
  store i8 %conv29.i, ptr %dlength14.i, align 1
  %shr33.i = lshr i32 %258, 8
  %conv35.i = trunc i32 %shr33.i to i8
  %260 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %task, align 4
  %arrayidx38.i = getelementptr %struct.iscsi_hdr, ptr %261, i32 0, i32 4, i32 1
  %262 = ptrtoint ptr %arrayidx38.i to i32
  call void @__asan_store1_noabort(i32 %262)
  store i8 %conv35.i, ptr %arrayidx38.i, align 1
  %conv40.i = trunc i32 %258 to i8
  %263 = load ptr, ptr %task, align 4
  %arrayidx43.i = getelementptr %struct.iscsi_hdr, ptr %263, i32 0, i32 4, i32 2
  %264 = ptrtoint ptr %arrayidx43.i to i32
  call void @__asan_store1_noabort(i32 %264)
  store i8 %conv40.i, ptr %arrayidx43.i, align 1
  %add.i = add i32 %count, -1
  %sub.i399 = add i32 %add.i, %236
  %div.i = udiv i32 %sub.i399, %236
  %data_length.i.i = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 8, i32 2
  %265 = ptrtoint ptr %data_length.i.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load i32, ptr %data_length.i.i, align 4
  %sent.i.i = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 8, i32 6
  %267 = ptrtoint ptr %sent.i.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %sent.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %266, i32 %268)
  %cmp.i.not.i = icmp ugt i32 %266, %268
  br i1 %cmp.i.not.i, label %if.then46.i, label %if.else.i

if.then46.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  %unsol_r2t.i = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 8
  br label %if.end48.i

if.else.i:                                        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #19
  %r2t47.i = getelementptr inbounds %struct.iscsi_tcp_task, ptr %230, i32 0, i32 2
  %269 = ptrtoint ptr %r2t47.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %r2t47.i, align 4
  br label %if.end48.i

if.end48.i:                                       ; preds = %if.else.i, %if.then46.i
  %r2t.0.i = phi ptr [ %unsol_r2t.i, %if.then46.i ], [ %270, %if.else.i ]
  %tobool49.not.i = icmp eq ptr %r2t.0.i, null
  br i1 %tobool49.not.i, label %if.end48.i.if.then72.i_crit_edge, label %do.body.i

if.end48.i.if.then72.i_crit_edge:                 ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then72.i

do.body.i:                                        ; preds = %if.end48.i
  %271 = load i32, ptr @dbg_level, align 4
  %and51.i = and i32 %271, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and51.i)
  %tobool52.not.i = icmp eq i32 %and51.i, 0
  br i1 %tobool52.not.i, label %do.body.i.lor.lhs.false.i_crit_edge, label %do.end.i

do.body.i.lor.lhs.false.i_crit_edge:              ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %count56.i = getelementptr i8, ptr %230, i32 304
  %272 = ptrtoint ptr %count56.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %count56.i, align 8
  %274 = ptrtoint ptr %hdr_len to i32
  call void @__asan_load2_noabort(i32 %274)
  %275 = load i16, ptr %hdr_len, align 2
  %conv57.i = zext i16 %275 to i32
  %data_length.i = getelementptr inbounds %struct.iscsi_r2t_info, ptr %r2t.0.i, i32 0, i32 2
  %276 = ptrtoint ptr %data_length.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %data_length.i, align 4
  %sent.i = getelementptr inbounds %struct.iscsi_r2t_info, ptr %r2t.0.i, i32 0, i32 6
  %278 = ptrtoint ptr %sent.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %sent.i, align 4
  %call58.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.328, ptr noundef nonnull @.str.329, i32 noundef %count, i32 noundef %273, i32 noundef %div.i, i32 noundef %conv57.i, i32 noundef %277, i32 noundef %279) #21
  br label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %do.end.i, %do.body.i.lor.lhs.false.i_crit_edge
  %data_length62.i = getelementptr inbounds %struct.iscsi_r2t_info, ptr %r2t.0.i, i32 0, i32 2
  %280 = ptrtoint ptr %data_length62.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %data_length62.i, align 4
  %sent63.i = getelementptr inbounds %struct.iscsi_r2t_info, ptr %r2t.0.i, i32 0, i32 6
  %282 = ptrtoint ptr %sent63.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %sent63.i, align 4
  %sub64.i = sub i32 %281, %283
  %sub66.i = add i32 %div.i, -1
  %datasn.i = getelementptr inbounds %struct.iscsi_r2t_info, ptr %r2t.0.i, i32 0, i32 5
  %284 = ptrtoint ptr %datasn.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %datasn.i, align 4
  %add67.i = add i32 %sub66.i, %285
  store i32 %add67.i, ptr %datasn.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %283)
  %tobool71.not.i = icmp eq i32 %283, 0
  br i1 %tobool71.not.i, label %lor.lhs.false.i.if.then72.i_crit_edge, label %lor.lhs.false.i.if.end77.i_crit_edge

lor.lhs.false.i.if.end77.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end77.i

lor.lhs.false.i.if.then72.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then72.i

if.then72.i:                                      ; preds = %lor.lhs.false.i.if.then72.i_crit_edge, %if.end48.i.if.then72.i_crit_edge
  %r2t_dlength.04.i = phi i32 [ %sub64.i, %lor.lhs.false.i.if.then72.i_crit_edge ], [ 0, %if.end48.i.if.then72.i_crit_edge ]
  %286 = ptrtoint ptr %228 to i32
  call void @__asan_load1_noabort(i32 %286)
  %287 = load i8, ptr %228, align 4
  %288 = or i8 %287, 1
  store i8 %288, ptr %228, align 4
  br label %if.end77.i

if.end77.i:                                       ; preds = %if.then72.i, %lor.lhs.false.i.if.end77.i_crit_edge
  %segment_offset.05.i = phi i32 [ 0, %if.then72.i ], [ %283, %lor.lhs.false.i.if.end77.i_crit_edge ]
  %r2t_dlength.03.i = phi i32 [ %r2t_dlength.04.i, %if.then72.i ], [ %sub64.i, %lor.lhs.false.i.if.end77.i_crit_edge ]
  %289 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %task, align 4
  %flags79.i = getelementptr inbounds %struct.iscsi_hdr, ptr %290, i32 0, i32 1
  %291 = ptrtoint ptr %flags79.i to i32
  call void @__asan_load1_noabort(i32 %291)
  %292 = load i8, ptr %flags79.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %292)
  %tobool82.not.i = icmp sgt i8 %292, -1
  br i1 %tobool82.not.i, label %if.end77.i.if.end88.i_crit_edge, label %if.then83.i

if.end77.i.if.end88.i_crit_edge:                  ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end88.i

if.then83.i:                                      ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #19
  %293 = ptrtoint ptr %228 to i32
  call void @__asan_load1_noabort(i32 %293)
  %294 = load i8, ptr %228, align 4
  %295 = or i8 %294, 2
  store i8 %295, ptr %228, align 4
  br label %if.end88.i

if.end88.i:                                       ; preds = %if.then83.i, %if.end77.i.if.end88.i_crit_edge
  %296 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %task, align 4
  %flags90.i = getelementptr inbounds %struct.iscsi_hdr, ptr %297, i32 0, i32 1
  %298 = ptrtoint ptr %flags90.i to i32
  call void @__asan_load1_noabort(i32 %298)
  %299 = load i8, ptr %flags90.i, align 1
  %300 = and i8 %299, 127
  store i8 %300, ptr %flags90.i, align 1
  %301 = load ptr, ptr %task, align 4
  %302 = ptrtoint ptr %301 to i32
  call void @__asan_load1_noabort(i32 %302)
  %303 = load i8, ptr %301, align 4
  %op.i = getelementptr inbounds %struct.cxgbi_iso_info, ptr %228, i32 0, i32 1
  %304 = ptrtoint ptr %op.i to i32
  call void @__asan_store1_noabort(i32 %304)
  store i8 %303, ptr %op.i, align 1
  %305 = load ptr, ptr %task, align 4
  %hlength.i = getelementptr inbounds %struct.iscsi_hdr, ptr %305, i32 0, i32 3
  %306 = ptrtoint ptr %hlength.i to i32
  call void @__asan_load1_noabort(i32 %306)
  %307 = load i8, ptr %hlength.i, align 4
  %ahs.i = getelementptr inbounds %struct.cxgbi_iso_info, ptr %228, i32 0, i32 2
  %308 = ptrtoint ptr %ahs.i to i32
  call void @__asan_store1_noabort(i32 %308)
  store i8 %307, ptr %ahs.i, align 2
  %conv97.i = trunc i32 %div.i to i8
  %num_pdu98.i = getelementptr inbounds %struct.cxgbi_iso_info, ptr %228, i32 0, i32 3
  %309 = ptrtoint ptr %num_pdu98.i to i32
  call void @__asan_store1_noabort(i32 %309)
  store i8 %conv97.i, ptr %num_pdu98.i, align 1
  %mpdu.i = getelementptr inbounds %struct.cxgbi_iso_info, ptr %228, i32 0, i32 4
  %310 = ptrtoint ptr %mpdu.i to i32
  call void @__asan_store4_noabort(i32 %310)
  store i32 %236, ptr %mpdu.i, align 4
  %add99.i = add i32 %r2t_dlength.03.i, %burst_size.0.i
  %shr100.i = lshr i32 %add99.i, 2
  %burst_size101.i = getelementptr inbounds %struct.cxgbi_iso_info, ptr %228, i32 0, i32 5
  %311 = ptrtoint ptr %burst_size101.i to i32
  call void @__asan_store4_noabort(i32 %311)
  store i32 %shr100.i, ptr %burst_size101.i, align 4
  %312 = ptrtoint ptr %hdr_len to i32
  call void @__asan_load2_noabort(i32 %312)
  %313 = load i16, ptr %hdr_len, align 2
  %conv103.i = zext i16 %313 to i32
  %add104.i = add i32 %conv103.i, %count
  %len.i = getelementptr inbounds %struct.cxgbi_iso_info, ptr %228, i32 0, i32 6
  %314 = ptrtoint ptr %len.i to i32
  call void @__asan_store4_noabort(i32 %314)
  store i32 %add104.i, ptr %len.i, align 4
  %segment_offset105.i = getelementptr inbounds %struct.cxgbi_iso_info, ptr %228, i32 0, i32 7
  %315 = ptrtoint ptr %segment_offset105.i to i32
  call void @__asan_store4_noabort(i32 %315)
  store i32 %segment_offset.05.i, ptr %segment_offset105.i, align 4
  %316 = load i16, ptr %hdr_len, align 2
  %iscsi_hdr_len.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 12
  %317 = ptrtoint ptr %iscsi_hdr_len.i to i32
  call void @__asan_store2_noabort(i32 %317)
  store i16 %316, ptr %iscsi_hdr_len.i, align 4
  br label %cleanup

if.else176:                                       ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #19
  %flags.i400 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 16
  %318 = ptrtoint ptr %flags.i400 to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load i32, ptr %flags.i400, align 4
  %and.i.i401 = and i32 %319, -4097
  store i32 %and.i.i401, ptr %flags.i400, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else176, %if.end88.i, %if.then174.cleanup_crit_edge, %do.end68, %if.end38, %cond.end
  %retval.0 = phi i32 [ -22, %cond.end ], [ %call62, %do.end68 ], [ 0, %if.end38 ], [ 0, %if.else176 ], [ 0, %if.then174.cleanup_crit_edge ], [ 0, %if.end88.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dlimit) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_conn_xmit_pdu(ptr noundef %task) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %conn = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 12
  %0 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %conn, align 4
  %dd_data = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dd_data, align 4
  %dd_data1 = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %dd_data1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dd_data1, align 4
  %dd_data2 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 20
  %6 = ptrtoint ptr %dd_data2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dd_data2, align 4
  %add.ptr = getelementptr i8, ptr %7, i32 152
  %ttinfo4 = getelementptr i8, ptr %7, i32 328
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %lor.lhs.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

lor.lhs.false:                                    ; preds = %entry
  %dd_data5 = getelementptr inbounds %struct.iscsi_tcp_task, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %dd_data5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dd_data5, align 4
  %cmp.not = icmp eq ptr %9, %add.ptr
  br i1 %cmp.not, label %if.end, label %cond.true

cond.true:                                        ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  %10 = ptrtoint ptr %dd_data5 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dd_data5, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi ptr [ %11, %cond.true ], [ null, %entry.cond.end_crit_edge ]
  %.in = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 11
  %12 = ptrtoint ptr %.in to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %.in, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.123, ptr noundef nonnull @.str.134, ptr noundef %task, ptr noundef %13, ptr noundef %7, ptr noundef %cond, ptr noundef %add.ptr) #21
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %skb8 = getelementptr i8, ptr %7, i32 292
  %14 = ptrtoint ptr %skb8 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %skb8, align 4
  %tobool9.not = icmp eq ptr %15, null
  br i1 %tobool9.not, label %do.body11, label %if.end22

do.body11:                                        ; preds = %if.end
  %16 = load i32, ptr @dbg_level, align 4
  %and = and i32 %16, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool12.not = icmp eq i32 %and, 0
  br i1 %tobool12.not, label %do.body11.cleanup_crit_edge, label %do.end16

do.body11.cleanup_crit_edge:                      ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end16:                                         ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #19
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.136, ptr noundef nonnull @.str.134, ptr noundef %task) #21
  br label %cleanup

if.end22:                                         ; preds = %if.end
  %tobool23.not = icmp eq ptr %5, null
  br i1 %tobool23.not, label %if.end22.do.body31_crit_edge, label %land.lhs.true

if.end22.do.body31_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body31

land.lhs.true:                                    ; preds = %if.end22
  %17 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %5, align 4
  %tobool24.not = icmp eq ptr %18, null
  br i1 %tobool24.not, label %land.lhs.true.do.body31_crit_edge, label %if.end28

land.lhs.true.do.body31_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body31

if.end28:                                         ; preds = %land.lhs.true
  %csk27 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %csk27 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %csk27, align 4
  %tobool29.not = icmp eq ptr %20, null
  br i1 %tobool29.not, label %if.end28.do.body31_crit_edge, label %if.end43

if.end28.do.body31_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body31

do.body31:                                        ; preds = %if.end28.do.body31_crit_edge, %land.lhs.true.do.body31_crit_edge, %if.end22.do.body31_crit_edge
  %21 = load i32, ptr @dbg_level, align 4
  %and32 = and i32 %21, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %do.body31.cleanup_crit_edge, label %do.end37

do.body31.cleanup_crit_edge:                      ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end37:                                         ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #19
  %call39 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef nonnull @.str.134, ptr noundef %task) #21
  br label %cleanup

if.end43:                                         ; preds = %if.end28
  %22 = ptrtoint ptr %skb8 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %skb8, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 7
  %23 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %data_len, align 8
  %25 = ptrtoint ptr %ttinfo4 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %ttinfo4, align 8
  %27 = and i8 %26, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool46.not = icmp eq i8 %27, 0
  br i1 %tobool46.not, label %if.end43.if.end65_crit_edge, label %if.then47

if.end43.if.end65_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end65

if.then47:                                        ; preds = %if.end43
  %28 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %20, align 4
  %cdev2ppm = getelementptr inbounds %struct.cxgbi_device, ptr %29, i32 0, i32 23
  %30 = ptrtoint ptr %cdev2ppm to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cdev2ppm, align 4
  %call49 = tail call ptr %31(ptr noundef %29) #17
  %32 = ptrtoint ptr %ttinfo4 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %ttinfo4, align 8
  %34 = and i8 %33, -2
  store i8 %34, ptr %ttinfo4, align 8
  %35 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %20, align 4
  %csk_ddp_set_map = getelementptr inbounds %struct.cxgbi_device, ptr %36, i32 0, i32 24
  %37 = ptrtoint ptr %csk_ddp_set_map to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %csk_ddp_set_map, align 4
  %call55 = tail call i32 %38(ptr noundef %call49, ptr noundef nonnull %20, ptr noundef %ttinfo4) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %cmp56 = icmp slt i32 %call55, 0
  br i1 %cmp56, label %do.end61, label %if.then47.if.end65_crit_edge

if.then47.if.end65_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end65

do.end61:                                         ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #19
  %call63 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.142, ptr noundef nonnull @.str.134, ptr noundef %task) #21
  br label %if.end65

if.end65:                                         ; preds = %do.end61, %if.then47.if.end65_crit_edge, %if.end43.if.end65_crit_edge
  %sc66 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 11
  %39 = ptrtoint ptr %sc66 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sc66, align 4
  %tobool67.not = icmp eq ptr %40, null
  br i1 %tobool67.not, label %if.then68, label %if.end65.if.end69_crit_edge

if.end65.if.end69_crit_edge:                      ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

if.then68:                                        ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #19
  %data = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 19
  %41 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %data, align 4
  %43 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task, align 4
  %45 = call ptr @memcpy(ptr %42, ptr %44, i32 304)
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %if.end65.if.end69_crit_edge
  %46 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %20, align 4
  %len2.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 6
  %48 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %len2.i, align 4
  %lock.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 26
  tail call void @_raw_spin_lock_bh(ptr noundef %lock.i) #17
  %50 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %20, align 4
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 17
  %52 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %end.i.i.i, align 4
  %nr_frags.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %nr_frags.i.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %nr_frags.i.i, align 2
  %conv.i.i = zext i8 %55 to i32
  %state.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 28
  %56 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %57)
  %cmp.not.i.i = icmp eq i32 %57, 3
  br i1 %cmp.not.i.i, label %if.end9.i.i, label %do.body.i.i

do.body.i.i:                                      ; preds = %if.end69
  %58 = load i32, ptr @dbg_level, align 4
  %and.i.i = and i32 %58, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.body.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge, label %do.end.i.i

do.body.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge: ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_send_skb.exit.thread

do.end.i.i:                                       ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %flags.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 3
  %59 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %flags.i.i, align 4
  %tid.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 1
  %61 = ptrtoint ptr %tid.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %tid.i.i, align 4
  %call6.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.330, ptr noundef nonnull @.str.331, ptr noundef nonnull %20, i32 noundef %57, i32 noundef %60, i32 noundef %62) #21
  br label %cxgbi_sock_send_skb.exit.thread

if.end9.i.i:                                      ; preds = %if.end69
  %err.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 37
  %63 = ptrtoint ptr %err.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %err.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool10.not.i.i = icmp eq i32 %64, 0
  br i1 %tobool10.not.i.i, label %if.end28.i.i, label %do.body12.i.i

do.body12.i.i:                                    ; preds = %if.end9.i.i
  %65 = load i32, ptr @dbg_level, align 4
  %and13.i.i = and i32 %65, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i.i)
  %tobool14.not.i.i = icmp eq i32 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %do.body12.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge, label %do.end18.i.i

do.body12.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge: ; preds = %do.body12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_send_skb.exit.thread

do.end18.i.i:                                     ; preds = %do.body12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %flags21.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 3
  %66 = ptrtoint ptr %flags21.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %flags21.i.i, align 4
  %tid22.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 1
  %68 = ptrtoint ptr %tid22.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %tid22.i.i, align 4
  %call24.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.333, ptr noundef nonnull @.str.331, ptr noundef nonnull %20, i32 noundef 3, i32 noundef %67, i32 noundef %69, i32 noundef %64) #21
  br label %cxgbi_sock_send_skb.exit.thread

if.end28.i.i:                                     ; preds = %if.end9.i.i
  %flags29.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %51, i32 0, i32 2
  %70 = ptrtoint ptr %flags29.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %flags29.i.i, align 4
  %and30.i.i = and i32 %71, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30.i.i)
  %tobool31.not.i.i = icmp eq i32 %and30.i.i, 0
  br i1 %tobool31.not.i.i, label %if.end28.i.i.if.end53.i.i_crit_edge, label %land.lhs.true.i.i

if.end28.i.i.if.end53.i.i_crit_edge:              ; preds = %if.end28.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end53.i.i

land.lhs.true.i.i:                                ; preds = %if.end28.i.i
  %snd_win.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 46
  %72 = ptrtoint ptr %snd_win.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %snd_win.i.i, align 4
  %snd_una.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 44
  %74 = ptrtoint ptr %snd_una.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %snd_una.i.i, align 4
  %add.i.i = add i32 %75, %73
  %write_seq.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 45
  %76 = ptrtoint ptr %write_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %write_seq.i.i, align 4
  %sub.i.i.i = sub i32 %add.i.i, %77
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp slt i32 %sub.i.i.i, 0
  br i1 %cmp.i.i.i, label %do.body35.i.i, label %land.lhs.true.i.i.if.end53.i.i_crit_edge

land.lhs.true.i.i.if.end53.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end53.i.i

do.body35.i.i:                                    ; preds = %land.lhs.true.i.i
  %78 = load i32, ptr @dbg_level, align 4
  %and36.i.i = and i32 %78, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36.i.i)
  %tobool37.not.i.i = icmp eq i32 %and36.i.i, 0
  br i1 %tobool37.not.i.i, label %do.body35.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge, label %do.end41.i.i

do.body35.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge: ; preds = %do.body35.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_send_skb.exit.thread

do.end41.i.i:                                     ; preds = %do.body35.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %flags44.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 3
  %79 = ptrtoint ptr %flags44.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %flags44.i.i, align 4
  %tid45.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 1
  %81 = ptrtoint ptr %tid45.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %tid45.i.i, align 4
  %call49.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.336, ptr noundef nonnull @.str.331, ptr noundef nonnull %20, i32 noundef 3, i32 noundef %80, i32 noundef %82, i32 noundef %77, i32 noundef %75, i32 noundef %73) #21
  br label %cxgbi_sock_send_skb.exit.thread

if.end53.i.i:                                     ; preds = %land.lhs.true.i.i.if.end53.i.i_crit_edge, %if.end28.i.i.if.end53.i.i_crit_edge
  %flags.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 3, i32 16
  %83 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %flags.i.i.i, align 4
  %85 = and i32 %84, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool55.not.i.i = icmp eq i32 %85, 0
  br i1 %tobool55.not.i.i, label %if.end53.i.i.if.end57.i.i_crit_edge, label %if.then56.i.i

if.end53.i.i.if.end57.i.i_crit_edge:              ; preds = %if.end53.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end57.i.i

if.then56.i.i:                                    ; preds = %if.end53.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %skb_iso_txhdr.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %51, i32 0, i32 16
  %86 = ptrtoint ptr %skb_iso_txhdr.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %skb_iso_txhdr.i.i, align 4
  br label %if.end57.i.i

if.end57.i.i:                                     ; preds = %if.then56.i.i, %if.end53.i.i.if.end57.i.i_crit_edge
  %iso_tx_rsvd.0.i.i = phi i32 [ %87, %if.then56.i.i ], [ 0, %if.end53.i.i.if.end57.i.i_crit_edge ]
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 19
  %88 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %data.i.i.i, align 4
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 18
  %90 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %head.i.i.i, align 8
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %89 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %91 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %skb_tx_rsvd.i.i = getelementptr inbounds %struct.cxgbi_device, ptr %51, i32 0, i32 15
  %92 = ptrtoint ptr %skb_tx_rsvd.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %skb_tx_rsvd.i.i, align 4
  %add59.i.i = add i32 %93, %iso_tx_rsvd.0.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i.i.i, i32 %add59.i.i)
  %cmp60.i.i = icmp ult i32 %sub.ptr.sub.i.i.i, %add59.i.i
  br i1 %cmp60.i.i, label %do.end67.i.i, label %if.end72.i.i, !prof !895

do.end67.i.i:                                     ; preds = %if.end57.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call71.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.339, ptr noundef nonnull @.str.331, ptr noundef nonnull %20, i32 noundef %sub.ptr.sub.i.i.i, i32 noundef %93) #21
  br label %cxgbi_sock_send_skb.exit.thread

if.end72.i.i:                                     ; preds = %if.end57.i.i
  %94 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %len2.i, align 4
  %96 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %data_len, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %95, i32 %97)
  %cmp73.not.i.i = icmp ne i32 %95, %97
  %inc.i.i = zext i1 %cmp73.not.i.i to i32
  %spec.select.i.i = add nuw nsw i32 %inc.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %spec.select.i.i)
  %cmp77.i.i = icmp ugt i32 %spec.select.i.i, 18
  br i1 %cmp77.i.i, label %do.end82.i.i, label %if.end90.i.i

do.end82.i.i:                                     ; preds = %if.end72.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call89.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.342, ptr noundef nonnull @.str.331, ptr noundef nonnull %20, i32 noundef %conv.i.i, i32 noundef %95, i32 noundef %97, i32 noundef 19) #21
  br label %cxgbi_sock_send_skb.exit.thread

if.end90.i.i:                                     ; preds = %if.end72.i.i
  %or.i.i.i.i = or i32 %84, 1
  %98 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %or.i.i.i.i, ptr %flags.i.i.i, align 4
  %conv.i.i.i = trunc i32 %sub.ptr.sub.i.i.i to i16
  %transport_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 15, i32 0, i32 19
  %99 = ptrtoint ptr %transport_header.i.i.i to i32
  call void @__asan_store2_noabort(i32 %99)
  store i16 %conv.i.i.i, ptr %transport_header.i.i.i, align 2
  %write_seq.i.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 45
  %100 = ptrtoint ptr %write_seq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %write_seq.i.i.i, align 4
  %seq.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 3, i32 20
  %102 = ptrtoint ptr %seq.i.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %101, ptr %seq.i.i.i, align 4
  %write_queue.i.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 34
  %prev.i.i.i.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 34, i32 0, i32 0, i32 1
  %103 = ptrtoint ptr %prev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %prev.i.i.i.i.i, align 4
  %105 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %105)
  store volatile ptr %write_queue.i.i.i, ptr %15, align 8
  %prev10.i.i.i.i.i.i = getelementptr inbounds %struct.anon.51, ptr %15, i32 0, i32 1
  %106 = ptrtoint ptr %prev10.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store volatile ptr %104, ptr %prev10.i.i.i.i.i.i, align 4
  store volatile ptr %15, ptr %prev.i.i.i.i.i, align 4
  %107 = ptrtoint ptr %104 to i32
  call void @__asan_store4_noabort(i32 %107)
  store volatile ptr %15, ptr %104, align 4
  %qlen.i.i.i.i.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 34, i32 1
  %108 = ptrtoint ptr %qlen.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %qlen.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %109, 1
  store volatile i32 %add.i.i.i.i.i.i, ptr %qlen.i.i.i.i.i.i, align 4
  %ulp_mode.i.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 3, i32 14
  %110 = ptrtoint ptr %ulp_mode.i.i to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %ulp_mode.i.i, align 2
  %112 = and i8 %111, 3
  %and.i.i.i = zext i8 %112 to i32
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @ulp2_extra_len, i32 0, i32 %and.i.i.i
  %113 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %arrayidx.i.i.i, align 4
  %115 = load volatile i32, ptr %flags.i.i.i, align 4
  %116 = and i32 %115, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %116)
  %tobool94.not.i.i = icmp eq i32 %116, 0
  br i1 %tobool94.not.i.i, label %if.end90.i.i.if.end.i_crit_edge, label %if.then101.i.i, !prof !895

if.end90.i.i.if.end.i_crit_edge:                  ; preds = %if.end90.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.then101.i.i:                                   ; preds = %if.end90.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %117 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %head.i.i.i, align 8
  %num_pdu102.i.i = getelementptr inbounds %struct.cxgbi_iso_info, ptr %118, i32 0, i32 3
  %119 = ptrtoint ptr %num_pdu102.i.i to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %num_pdu102.i.i, align 1
  %conv103.i.i = zext i8 %120 to i32
  %iscsi_hdr_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 3, i32 12
  %121 = ptrtoint ptr %iscsi_hdr_len.i.i to i32
  call void @__asan_load2_noabort(i32 %121)
  %122 = load i16, ptr %iscsi_hdr_len.i.i, align 4
  %conv106.i.i = zext i16 %122 to i32
  %mul.i.i = mul i32 %114, %conv103.i.i
  %sub.i.i = add nsw i32 %conv103.i.i, -1
  %mul112.i.i = mul nsw i32 %sub.i.i, %conv106.i.i
  %add113.i.i = add i32 %mul112.i.i, %mul.i.i
  br label %if.end.i

if.end.i:                                         ; preds = %if.then101.i.i, %if.end90.i.i.if.end.i_crit_edge
  %extra_len.0.i.i = phi i32 [ %add113.i.i, %if.then101.i.i ], [ %114, %if.end90.i.i.if.end.i_crit_edge ]
  %123 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %len2.i, align 4
  %add116.i.i = add i32 %124, %extra_len.0.i.i
  %125 = ptrtoint ptr %write_seq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %write_seq.i.i.i, align 4
  %add118.i.i = add i32 %add116.i.i, %126
  store i32 %add118.i.i, ptr %write_seq.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.i.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %add.i.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %if.end.i.cxgbi_sock_send_skb.exit_crit_edge, label %if.then7.i, !prof !895

if.end.i.cxgbi_sock_send_skb.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_send_skb.exit

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %csk_push_tx_frames.i = getelementptr inbounds %struct.cxgbi_device, ptr %47, i32 0, i32 31
  %127 = ptrtoint ptr %csk_push_tx_frames.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %csk_push_tx_frames.i, align 4
  %call8.i = tail call i32 %128(ptr noundef nonnull %20, i32 noundef 0) #17
  br label %cxgbi_sock_send_skb.exit

cxgbi_sock_send_skb.exit.thread:                  ; preds = %do.end82.i.i, %do.end67.i.i, %do.end41.i.i, %do.body35.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge, %do.end18.i.i, %do.body12.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge, %do.end.i.i, %do.body.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ -22, %do.end67.i.i ], [ -22, %do.end82.i.i ], [ -32, %do.end.i.i ], [ -32, %do.body.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge ], [ -32, %do.end18.i.i ], [ -32, %do.body12.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge ], [ -105, %do.end41.i.i ], [ -105, %do.body35.i.i.cxgbi_sock_send_skb.exit.thread_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  br label %if.end129

cxgbi_sock_send_skb.exit:                         ; preds = %if.then7.i, %if.end.i.cxgbi_sock_send_skb.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp71 = icmp sgt i32 %49, 0
  br i1 %cmp71, label %if.then73, label %cxgbi_sock_send_skb.exit.if.end129_crit_edge

cxgbi_sock_send_skb.exit.if.end129_crit_edge:     ; preds = %cxgbi_sock_send_skb.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end129

if.then73:                                        ; preds = %cxgbi_sock_send_skb.exit
  %129 = load i32, ptr @dbg_level, align 4
  %and75 = and i32 %129, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool76.not = icmp eq i32 %and75, 0
  br i1 %tobool76.not, label %if.then73.do.end86_crit_edge, label %do.end80

if.then73.do.end86_crit_edge:                     ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end86

do.end80:                                         ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #19
  %130 = ptrtoint ptr %sc66 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %sc66, align 4
  %call83 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef nonnull @.str.134, ptr noundef %task, ptr noundef %131, i32 noundef %49) #21
  br label %do.end86

do.end86:                                         ; preds = %do.end80, %if.then73.do.end86_crit_edge
  %132 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %conn, align 4
  %hdrdgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %133, i32 0, i32 25
  %134 = ptrtoint ptr %hdrdgst_en to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %hdrdgst_en, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %135)
  %tobool88.not = icmp eq i32 %135, 0
  %add90 = add nuw i32 %49, 4
  %spec.select = select i1 %tobool88.not, i32 %49, i32 %add90
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool92.not = icmp eq i32 %24, 0
  br i1 %tobool92.not, label %do.end86.if.end98_crit_edge, label %land.lhs.true93

do.end86.if.end98_crit_edge:                      ; preds = %do.end86
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end98

land.lhs.true93:                                  ; preds = %do.end86
  call void @__sanitizer_cov_trace_pc() #19
  %datadgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %133, i32 0, i32 26
  %136 = ptrtoint ptr %datadgst_en to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %datadgst_en, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %137)
  %tobool95.not = icmp eq i32 %137, 0
  %add97 = add nuw i32 %spec.select, 4
  %spec.select280 = select i1 %tobool95.not, i32 %spec.select, i32 %add97
  br label %if.end98

if.end98:                                         ; preds = %land.lhs.true93, %do.end86.if.end98_crit_edge
  %pdulen.1 = phi i32 [ %spec.select, %do.end86.if.end98_crit_edge ], [ %spec.select280, %land.lhs.true93 ]
  %conv99 = zext i32 %pdulen.1 to i64
  %txdata_octets = getelementptr inbounds %struct.iscsi_conn, ptr %133, i32 0, i32 47
  %138 = ptrtoint ptr %txdata_octets to i32
  call void @__asan_load8_noabort(i32 %138)
  %139 = load i64, ptr %txdata_octets, align 8
  %add101 = add i64 %139, %conv99
  store i64 %add101, ptr %txdata_octets, align 8
  %140 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %20, align 4
  %skb_iso_txhdr = getelementptr inbounds %struct.cxgbi_device, ptr %141, i32 0, i32 16
  %142 = ptrtoint ptr %skb_iso_txhdr to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %skb_iso_txhdr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %143)
  %tobool103.not = icmp eq i32 %143, 0
  br i1 %tobool103.not, label %if.end98.cleanup_crit_edge, label %land.rhs

if.end98.cleanup_crit_edge:                       ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.rhs:                                         ; preds = %if.end98
  %disable_iso = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 48
  %144 = ptrtoint ptr %disable_iso to i32
  call void @__asan_load1_noabort(i32 %144)
  %145 = load i8, ptr %disable_iso, align 4, !range !897
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %145)
  %tobool104.not = icmp eq i8 %145, 0
  br i1 %tobool104.not, label %land.rhs.cleanup_crit_edge, label %if.then108, !prof !888

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then108:                                       ; preds = %land.rhs
  %prev_iso_ts = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 50
  %146 = ptrtoint ptr %prev_iso_ts to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %prev_iso_ts, align 4
  %add109 = add i32 %147, 100
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %148 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add109, %148
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp110 = icmp slt i32 %sub, 0
  br i1 %cmp110, label %if.then112, label %if.then108.cleanup_crit_edge

if.then108.cleanup_crit_edge:                     ; preds = %if.then108
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then112:                                       ; preds = %if.then108
  %149 = ptrtoint ptr %disable_iso to i32
  call void @__asan_store1_noabort(i32 %149)
  store i8 0, ptr %disable_iso, align 4
  %150 = ptrtoint ptr %prev_iso_ts to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 0, ptr %prev_iso_ts, align 4
  %151 = load i32, ptr @dbg_level, align 4
  %and116 = and i32 %151, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and116)
  %tobool117.not = icmp eq i32 %and116, 0
  br i1 %tobool117.not, label %if.then112.cleanup_crit_edge, label %do.end121

if.then112.cleanup_crit_edge:                     ; preds = %if.then112
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end121:                                        ; preds = %if.then112
  call void @__sanitizer_cov_trace_pc() #19
  %call123 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.148, ptr noundef nonnull @.str.134, ptr noundef nonnull %20) #21
  br label %cleanup

if.end129:                                        ; preds = %cxgbi_sock_send_skb.exit.if.end129_crit_edge, %cxgbi_sock_send_skb.exit.thread
  %retval.0.i286 = phi i32 [ %retval.0.i.ph, %cxgbi_sock_send_skb.exit.thread ], [ %49, %cxgbi_sock_send_skb.exit.if.end129_crit_edge ]
  %152 = zext i32 %retval.0.i286 to i64
  call void @__sanitizer_cov_trace_switch(i64 %152, ptr @__sancov_gen_cov_switch_values.429)
  switch i32 %retval.0.i286, label %do.body177 [
    i32 -11, label %if.end129.do.body136_crit_edge
    i32 -105, label %if.end129.do.body136_crit_edge288
  ]

if.end129.do.body136_crit_edge288:                ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body136

if.end129.do.body136_crit_edge:                   ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body136

do.body136:                                       ; preds = %if.end129.do.body136_crit_edge, %if.end129.do.body136_crit_edge288
  %153 = load i32, ptr @dbg_level, align 4
  %and137 = and i32 %153, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and137)
  %tobool138.not = icmp eq i32 %and137, 0
  br i1 %tobool138.not, label %do.body136.do.end148_crit_edge, label %do.end142

do.body136.do.end148_crit_edge:                   ; preds = %do.body136
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end148

do.end142:                                        ; preds = %do.body136
  call void @__sanitizer_cov_trace_pc() #19
  %154 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %len2.i, align 4
  %156 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %data_len, align 8
  %call145 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.151, ptr noundef nonnull @.str.134, ptr noundef %task, ptr noundef nonnull %15, i32 noundef %155, i32 noundef %157, i32 noundef %retval.0.i286) #21
  br label %do.end148

do.end148:                                        ; preds = %do.end142, %do.body136.do.end148_crit_edge
  %158 = ptrtoint ptr %skb8 to i32
  call void @__asan_store4_noabort(i32 %158)
  store ptr %15, ptr %skb8, align 4
  %159 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %20, align 4
  %skb_iso_txhdr151 = getelementptr inbounds %struct.cxgbi_device, ptr %160, i32 0, i32 16
  %161 = ptrtoint ptr %skb_iso_txhdr151 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %skb_iso_txhdr151, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %162)
  %tobool152.not = icmp eq i32 %162, 0
  br i1 %tobool152.not, label %do.end148.cleanup_crit_edge, label %land.lhs.true153

do.end148.cleanup_crit_edge:                      ; preds = %do.end148
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true153:                                 ; preds = %do.end148
  %disable_iso154 = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 48
  %163 = ptrtoint ptr %disable_iso154 to i32
  call void @__asan_load1_noabort(i32 %163)
  %164 = load i8, ptr %disable_iso154, align 4, !range !897
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %164)
  %tobool155.not = icmp eq i8 %164, 0
  br i1 %tobool155.not, label %land.lhs.true156, label %land.lhs.true153.cleanup_crit_edge

land.lhs.true153.cleanup_crit_edge:               ; preds = %land.lhs.true153
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true156:                                 ; preds = %land.lhs.true153
  %no_tx_credits = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 49
  %165 = ptrtoint ptr %no_tx_credits to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %no_tx_credits, align 4
  %inc = add i32 %166, 1
  store i32 %inc, ptr %no_tx_credits, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %166)
  %cmp157 = icmp ugt i32 %166, 1
  br i1 %cmp157, label %if.then159, label %land.lhs.true156.cleanup_crit_edge

land.lhs.true156.cleanup_crit_edge:               ; preds = %land.lhs.true156
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then159:                                       ; preds = %land.lhs.true156
  %167 = ptrtoint ptr %disable_iso154 to i32
  call void @__asan_store1_noabort(i32 %167)
  store i8 1, ptr %disable_iso154, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %168 = load volatile i32, ptr @jiffies, align 128
  %prev_iso_ts161 = getelementptr inbounds %struct.cxgbi_sock, ptr %20, i32 0, i32 50
  %169 = ptrtoint ptr %prev_iso_ts161 to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 %168, ptr %prev_iso_ts161, align 4
  %170 = load i32, ptr @dbg_level, align 4
  %and163 = and i32 %170, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and163)
  %tobool164.not = icmp eq i32 %and163, 0
  br i1 %tobool164.not, label %if.then159.cleanup_crit_edge, label %do.end168

if.then159.cleanup_crit_edge:                     ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end168:                                        ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #19
  %call171 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.154, ptr noundef nonnull @.str.134, ptr noundef nonnull %20, i32 noundef %168) #21
  br label %cleanup

do.body177:                                       ; preds = %if.end129
  %171 = load i32, ptr @dbg_level, align 4
  %and178 = and i32 %171, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and178)
  %tobool179.not = icmp eq i32 %and178, 0
  br i1 %tobool179.not, label %do.body177.do.end190_crit_edge, label %do.end183

do.body177.do.end190_crit_edge:                   ; preds = %do.body177
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end190

do.end183:                                        ; preds = %do.body177
  call void @__sanitizer_cov_trace_pc() #19
  %itt = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 6
  %172 = ptrtoint ptr %itt to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %itt, align 4
  %174 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %len2.i, align 4
  %176 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %data_len, align 8
  %call187 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.157, ptr noundef nonnull @.str.134, i32 noundef %173, ptr noundef nonnull %15, i32 noundef %175, i32 noundef %177, i32 noundef %retval.0.i286) #21
  br label %do.end190

do.end190:                                        ; preds = %do.end183, %do.body177.do.end190_crit_edge
  tail call void @__kfree_skb(ptr noundef nonnull %15) #17
  %178 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %conn, align 4
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %179, align 8
  %dev = getelementptr inbounds %struct.iscsi_cls_conn, ptr %181, i32 0, i32 8
  tail call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.161, ptr noundef %dev, ptr noundef nonnull @.str.160, i32 noundef %retval.0.i286) #21
  %182 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %conn, align 4
  tail call void @iscsi_conn_failure(ptr noundef %183, i32 noundef 1019) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end190, %do.end168, %if.then159.cleanup_crit_edge, %land.lhs.true156.cleanup_crit_edge, %land.lhs.true153.cleanup_crit_edge, %do.end148.cleanup_crit_edge, %do.end121, %if.then112.cleanup_crit_edge, %if.then108.cleanup_crit_edge, %land.rhs.cleanup_crit_edge, %if.end98.cleanup_crit_edge, %do.end37, %do.body31.cleanup_crit_edge, %do.end16, %do.body11.cleanup_crit_edge, %cond.end
  %retval.0 = phi i32 [ -22, %cond.end ], [ %retval.0.i286, %do.end190 ], [ 0, %do.end16 ], [ 0, %do.body11.cleanup_crit_edge ], [ -32, %do.end37 ], [ -32, %do.body31.cleanup_crit_edge ], [ 0, %if.end98.cleanup_crit_edge ], [ 0, %if.then108.cleanup_crit_edge ], [ 0, %do.end121 ], [ 0, %if.then112.cleanup_crit_edge ], [ 0, %land.rhs.cleanup_crit_edge ], [ %retval.0.i286, %if.then159.cleanup_crit_edge ], [ %retval.0.i286, %do.end168 ], [ %retval.0.i286, %land.lhs.true156.cleanup_crit_edge ], [ %retval.0.i286, %land.lhs.true153.cleanup_crit_edge ], [ %retval.0.i286, %do.end148.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_printk(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_cleanup_task(ptr noundef %task) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dd_data = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 20
  %0 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dd_data, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 152
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %lor.lhs.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

lor.lhs.false:                                    ; preds = %entry
  %dd_data2 = getelementptr inbounds %struct.iscsi_tcp_task, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %dd_data2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dd_data2, align 4
  %cmp.not = icmp eq ptr %3, %add.ptr
  br i1 %cmp.not, label %do.body5, label %cond.true

cond.true:                                        ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  %4 = ptrtoint ptr %dd_data2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dd_data2, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi ptr [ %5, %cond.true ], [ null, %entry.cond.end_crit_edge ]
  %.in = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 11
  %6 = ptrtoint ptr %.in to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %.in, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.164, ptr noundef nonnull @.str.165, ptr noundef %task, ptr noundef %7, ptr noundef %1, ptr noundef %cond, ptr noundef %add.ptr) #21
  br label %cleanup

do.body5:                                         ; preds = %lor.lhs.false
  %8 = load i32, ptr @dbg_level, align 4
  %and = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %do.body5.do.end15_crit_edge, label %do.end10

do.body5.do.end15_crit_edge:                      ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end15

do.end10:                                         ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #19
  %skb = getelementptr i8, ptr %1, i32 292
  %9 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %skb, align 4
  %hdr_itt = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 3
  %11 = ptrtoint ptr %hdr_itt to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %hdr_itt, align 4
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.167, ptr noundef nonnull @.str.165, ptr noundef %task, ptr noundef %10, i32 noundef %12) #21
  br label %do.end15

do.end15:                                         ; preds = %do.end10, %do.body5.do.end15_crit_edge
  %13 = ptrtoint ptr %dd_data2 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %dd_data2, align 4
  %sc17 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 11
  %14 = ptrtoint ptr %sc17 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sc17, align 4
  %tobool18.not = icmp eq ptr %15, null
  br i1 %tobool18.not, label %if.then19, label %do.end15.if.end20_crit_edge

do.end15.if.end20_crit_edge:                      ; preds = %do.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end20

if.then19:                                        ; preds = %do.end15
  call void @__sanitizer_cov_trace_pc() #19
  %16 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task, align 4
  tail call void @kfree(ptr noundef %17) #17
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %do.end15.if.end20_crit_edge
  %18 = ptrtoint ptr %task to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %task, align 4
  %skb22 = getelementptr i8, ptr %1, i32 292
  %19 = ptrtoint ptr %skb22 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %skb22, align 4
  %tobool23.not = icmp eq ptr %20, null
  br i1 %tobool23.not, label %if.end20.if.end27_crit_edge, label %if.then24

if.end20.if.end27_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end27

if.then24:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__kfree_skb(ptr noundef nonnull %20) #17
  %21 = ptrtoint ptr %skb22 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %skb22, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then24, %if.end20.if.end27_crit_edge
  %hdr_itt28 = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 3
  %22 = ptrtoint ptr %hdr_itt28 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %hdr_itt28, align 4
  %24 = ptrtoint ptr %sc17 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sc17, align 4
  %conn.i = getelementptr inbounds %struct.iscsi_task, ptr %task, i32 0, i32 12
  %26 = ptrtoint ptr %conn.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %conn.i, align 4
  %dd_data.i = getelementptr inbounds %struct.iscsi_conn, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %dd_data.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dd_data.i, align 4
  %dd_data2.i = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %dd_data2.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dd_data2.i, align 4
  %chba.i = getelementptr inbounds %struct.cxgbi_conn, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %chba.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %chba.i, align 4
  %cdev3.i = getelementptr inbounds %struct.cxgbi_hba, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %cdev3.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %cdev3.i, align 4
  %cdev2ppm.i = getelementptr inbounds %struct.cxgbi_device, ptr %35, i32 0, i32 23
  %36 = ptrtoint ptr %cdev2ppm.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %cdev2ppm.i, align 4
  %call.i = tail call ptr %37(ptr noundef %35) #17
  %38 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %38, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end27.do.end7.i_crit_edge, label %do.end.i

if.end27.do.end7.i_crit_edge:                     ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7.i

do.end.i:                                         ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #19
  %call5.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.344, ptr noundef nonnull @.str.345, ptr noundef %35, ptr noundef %task, i32 noundef %23) #21
  br label %do.end7.i

do.end7.i:                                        ; preds = %do.end.i, %if.end27.do.end7.i_crit_edge
  %tobool8.not.i = icmp eq ptr %25, null
  br i1 %tobool8.not.i, label %do.end7.i.task_release_itt.exit_crit_edge, label %land.lhs.true.i

do.end7.i.task_release_itt.exit_crit_edge:        ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_release_itt.exit

land.lhs.true.i:                                  ; preds = %do.end7.i
  %sc_data_direction.i = getelementptr inbounds %struct.scsi_cmnd, ptr %25, i32 0, i32 15
  %39 = ptrtoint ptr %sc_data_direction.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sc_data_direction.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %40)
  %cmp.i = icmp eq i32 %40, 2
  br i1 %cmp.i, label %land.lhs.true9.i, label %land.lhs.true.i.task_release_itt.exit_crit_edge

land.lhs.true.i.task_release_itt.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_release_itt.exit

land.lhs.true9.i:                                 ; preds = %land.lhs.true.i
  %no_ddp_mask.i.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i, i32 0, i32 5, i32 5
  %41 = ptrtoint ptr %no_ddp_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %no_ddp_mask.i.i, align 4
  %and.i.i = and i32 %42, %23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.not.i, label %if.then12.i, label %land.lhs.true9.i.task_release_itt.exit_crit_edge

land.lhs.true9.i.task_release_itt.exit_crit_edge: ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_release_itt.exit

if.then12.i:                                      ; preds = %land.lhs.true9.i
  %43 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %dd_data, align 4
  %flags.i = getelementptr inbounds %struct.cxgbi_device, ptr %35, i32 0, i32 2
  %45 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %flags.i, align 4
  %and15.i = and i32 %46, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i)
  %tobool16.not.i = icmp eq i32 %and15.i, 0
  br i1 %tobool16.not.i, label %if.then17.i, label %if.then12.i.if.end18.i_crit_edge

if.then12.i.if.end18.i_crit_edge:                 ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18.i

if.then17.i:                                      ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #19
  %ttinfo14.i = getelementptr i8, ptr %44, i32 328
  %csk_ddp_clear_map.i = getelementptr inbounds %struct.cxgbi_device, ptr %35, i32 0, i32 25
  %47 = ptrtoint ptr %csk_ddp_clear_map.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %csk_ddp_clear_map.i, align 4
  tail call void %48(ptr noundef %35, ptr noundef %call.i, ptr noundef %ttinfo14.i) #17
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then17.i, %if.then12.i.if.end18.i_crit_edge
  %idx.i = getelementptr i8, ptr %44, i32 336
  %49 = ptrtoint ptr %idx.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %idx.i, align 8
  tail call void @cxgbi_ppm_ppod_release(ptr noundef %call.i, i32 noundef %50) #17
  %pdev.i = getelementptr inbounds %struct.cxgbi_ppm, ptr %call.i, i32 0, i32 2
  %51 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %pdev.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %52, i32 0, i32 44
  %sgl.i = getelementptr i8, ptr %44, i32 376
  %53 = ptrtoint ptr %sgl.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %sgl.i, align 8
  %nents.i = getelementptr i8, ptr %44, i32 368
  %55 = ptrtoint ptr %nents.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %nents.i, align 8
  tail call void @dma_unmap_sg_attrs(ptr noundef %dev.i, ptr noundef %54, i32 noundef %56, i32 noundef 2, i32 noundef 0) #17
  br label %task_release_itt.exit

task_release_itt.exit:                            ; preds = %if.end18.i, %land.lhs.true9.i.task_release_itt.exit_crit_edge, %land.lhs.true.i.task_release_itt.exit_crit_edge, %do.end7.i.task_release_itt.exit_crit_edge
  %57 = call ptr @memset(ptr %add.ptr, i32 0, i32 232)
  tail call void @iscsi_tcp_cleanup_task(ptr noundef %task) #17
  br label %cleanup

cleanup:                                          ; preds = %task_release_itt.exit, %cond.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_tcp_cleanup_task(ptr noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @cxgbi_get_conn_stats(ptr nocapture noundef readonly %cls_conn, ptr nocapture noundef writeonly %stats) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dd_data = getelementptr inbounds %struct.iscsi_cls_conn, ptr %cls_conn, i32 0, i32 1
  %0 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dd_data, align 8
  %txdata_octets = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 47
  %2 = ptrtoint ptr %txdata_octets to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %txdata_octets, align 8
  %4 = ptrtoint ptr %stats to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %stats, align 8
  %rxdata_octets = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 48
  %5 = ptrtoint ptr %rxdata_octets to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %rxdata_octets, align 8
  %rxdata_octets2 = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 1
  %7 = ptrtoint ptr %rxdata_octets2 to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %6, ptr %rxdata_octets2, align 8
  %scsicmd_pdus_cnt = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 49
  %8 = ptrtoint ptr %scsicmd_pdus_cnt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %scsicmd_pdus_cnt, align 8
  %scsicmd_pdus = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 3
  %10 = ptrtoint ptr %scsicmd_pdus to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %scsicmd_pdus, align 4
  %dataout_pdus_cnt = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 50
  %11 = ptrtoint ptr %dataout_pdus_cnt to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %dataout_pdus_cnt, align 4
  %dataout_pdus = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 7
  %13 = ptrtoint ptr %dataout_pdus to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %dataout_pdus, align 4
  %scsirsp_pdus_cnt = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 51
  %14 = ptrtoint ptr %scsirsp_pdus_cnt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %scsirsp_pdus_cnt, align 8
  %scsirsp_pdus = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 11
  %16 = ptrtoint ptr %scsirsp_pdus to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %scsirsp_pdus, align 4
  %datain_pdus_cnt = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 52
  %17 = ptrtoint ptr %datain_pdus_cnt to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %datain_pdus_cnt, align 4
  %datain_pdus = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 14
  %19 = ptrtoint ptr %datain_pdus to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %datain_pdus, align 8
  %r2t_pdus_cnt = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 53
  %20 = ptrtoint ptr %r2t_pdus_cnt to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %r2t_pdus_cnt, align 8
  %r2t_pdus = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 16
  %22 = ptrtoint ptr %r2t_pdus to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %r2t_pdus, align 8
  %tmfcmd_pdus_cnt = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 54
  %23 = ptrtoint ptr %tmfcmd_pdus_cnt to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %tmfcmd_pdus_cnt, align 4
  %tmfcmd_pdus = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 4
  %25 = ptrtoint ptr %tmfcmd_pdus to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %tmfcmd_pdus, align 8
  %tmfrsp_pdus_cnt = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 55
  %26 = ptrtoint ptr %tmfrsp_pdus_cnt to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %tmfrsp_pdus_cnt, align 8
  %tmfrsp_pdus = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 12
  %28 = ptrtoint ptr %tmfrsp_pdus to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %tmfrsp_pdus, align 8
  %digest_err = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 19
  %29 = ptrtoint ptr %digest_err to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %digest_err, align 4
  %timeout_err = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 20
  %30 = ptrtoint ptr %timeout_err to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %timeout_err, align 8
  %custom_length = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 21
  %31 = ptrtoint ptr %custom_length to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 1, ptr %custom_length, align 4
  %custom = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 0, i32 22
  %32 = call ptr @memcpy(ptr %custom, ptr @.str.169, i32 13)
  %eh_abort_cnt = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 56
  %33 = ptrtoint ptr %eh_abort_cnt to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %eh_abort_cnt, align 4
  %conv = zext i32 %34 to i64
  %value = getelementptr inbounds %struct.iscsi_stats, ptr %stats, i32 1, i32 14
  %35 = ptrtoint ptr %value to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %conv, ptr %value, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_set_conn_param(ptr noundef %cls_conn, i32 noundef %param, ptr noundef %buf, i32 noundef %buflen) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dd_data = getelementptr inbounds %struct.iscsi_cls_conn, ptr %cls_conn, i32 0, i32 1
  %0 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dd_data, align 8
  %dd_data1 = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dd_data1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dd_data1, align 4
  %dd_data2 = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %dd_data2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dd_data2, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %csk3 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %csk3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %csk3, align 4
  %10 = load i32, ptr @dbg_level, align 4
  %and = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end6_crit_edge, label %do.end

entry.do.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end6

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.170, ptr noundef nonnull @.str.171, ptr noundef %cls_conn, i32 noundef %param, i32 noundef %buflen, ptr noundef %buf) #21
  br label %do.end6

do.end6:                                          ; preds = %do.end, %entry.do.end6_crit_edge
  %11 = zext i32 %param to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.430)
  switch i32 %param, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb14
    i32 5, label %sw.bb28
    i32 0, label %sw.bb30
    i32 1, label %sw.bb36
  ]

sw.bb:                                            ; preds = %do.end6
  %call7 = tail call i32 @iscsi_set_param(ptr noundef %cls_conn, i32 noundef 2, ptr noundef %buf, i32 noundef %buflen) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true:                                    ; preds = %sw.bb
  %hdrdgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 25
  %12 = ptrtoint ptr %hdrdgst_en to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %hdrdgst_en, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool9.not = icmp eq i32 %13, 0
  br i1 %tobool9.not, label %land.lhs.true.cleanup_crit_edge, label %if.then10

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then10:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %14 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %9, align 4
  %csk_ddp_setup_digest = getelementptr inbounds %struct.cxgbi_device, ptr %15, i32 0, i32 26
  %16 = ptrtoint ptr %csk_ddp_setup_digest to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %csk_ddp_setup_digest, align 4
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %9, i32 0, i32 1
  %18 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tid, align 4
  %datadgst_en = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 26
  %20 = ptrtoint ptr %datadgst_en to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %datadgst_en, align 8
  %call12 = tail call i32 %17(ptr noundef %9, i32 noundef %19, i32 noundef %13, i32 noundef %21) #17
  br label %cleanup

sw.bb14:                                          ; preds = %do.end6
  %call15 = tail call i32 @iscsi_set_param(ptr noundef %cls_conn, i32 noundef 3, ptr noundef %buf, i32 noundef %buflen) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %land.lhs.true17, label %sw.bb14.cleanup_crit_edge

sw.bb14.cleanup_crit_edge:                        ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true17:                                  ; preds = %sw.bb14
  %datadgst_en18 = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 26
  %22 = ptrtoint ptr %datadgst_en18 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %datadgst_en18, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool19.not = icmp eq i32 %23, 0
  br i1 %tobool19.not, label %land.lhs.true17.cleanup_crit_edge, label %if.then20

land.lhs.true17.cleanup_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then20:                                        ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #19
  %24 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %9, align 4
  %csk_ddp_setup_digest22 = getelementptr inbounds %struct.cxgbi_device, ptr %25, i32 0, i32 26
  %26 = ptrtoint ptr %csk_ddp_setup_digest22 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %csk_ddp_setup_digest22, align 4
  %tid23 = getelementptr inbounds %struct.cxgbi_sock, ptr %9, i32 0, i32 1
  %28 = ptrtoint ptr %tid23 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %tid23, align 4
  %hdrdgst_en24 = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 25
  %30 = ptrtoint ptr %hdrdgst_en24 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %hdrdgst_en24, align 4
  %call26 = tail call i32 %27(ptr noundef %9, i32 noundef %29, i32 noundef %31, i32 noundef %23) #17
  br label %cleanup

sw.bb28:                                          ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #19
  %call29 = tail call i32 @iscsi_tcp_set_max_r2t(ptr noundef %1, ptr noundef %buf) #17
  br label %cleanup

sw.bb30:                                          ; preds = %do.end6
  %call31 = tail call i32 @iscsi_set_param(ptr noundef %cls_conn, i32 noundef 0, ptr noundef %buf, i32 noundef %buflen) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then33, label %sw.bb30.cleanup_crit_edge

sw.bb30.cleanup_crit_edge:                        ; preds = %sw.bb30
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then33:                                        ; preds = %sw.bb30
  %32 = ptrtoint ptr %dd_data1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dd_data1, align 4
  %dd_data1.i = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %dd_data1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dd_data1.i, align 4
  %chba.i = getelementptr inbounds %struct.cxgbi_conn, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %chba.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %chba.i, align 4
  %cdev.i = getelementptr inbounds %struct.cxgbi_hba, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %cdev.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %cdev.i, align 4
  %rx_max_size.i = getelementptr inbounds %struct.cxgbi_device, ptr %39, i32 0, i32 19
  %40 = ptrtoint ptr %rx_max_size.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rx_max_size.i, align 4
  %and.i = and i32 %41, -512
  %max_recv_dlength.i = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 23
  %42 = ptrtoint ptr %max_recv_dlength.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %max_recv_dlength.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i = icmp eq i32 %43, 0
  br i1 %tobool.not.i, label %if.then33.if.end19.i_crit_edge, label %if.then.i

if.then33.if.end19.i_crit_edge:                   ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19.i

if.then.i:                                        ; preds = %if.then33
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %and.i)
  %cmp.i = icmp ugt i32 %43, %and.i
  br i1 %cmp.i, label %do.end6.i, label %if.end.i

do.end6.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.346, ptr noundef nonnull @.str.347, i32 noundef %43, i32 noundef %and.i) #21
  br label %cleanup

if.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %and14.i = and i32 %43, -512
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.end.i, %if.then33.if.end19.i_crit_edge
  %storemerge.i = phi i32 [ %and14.i, %if.end.i ], [ %and.i, %if.then33.if.end19.i_crit_edge ]
  %44 = ptrtoint ptr %max_recv_dlength.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %storemerge.i, ptr %max_recv_dlength.i, align 4
  br label %cleanup

sw.bb36:                                          ; preds = %do.end6
  %call37 = tail call i32 @iscsi_set_param(ptr noundef %cls_conn, i32 noundef 1, ptr noundef %buf, i32 noundef %buflen) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.then39, label %sw.bb36.cleanup_crit_edge

sw.bb36.cleanup_crit_edge:                        ; preds = %sw.bb36
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then39:                                        ; preds = %sw.bb36
  call void @__sanitizer_cov_trace_pc() #19
  %45 = ptrtoint ptr %dd_data1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dd_data1, align 4
  %dd_data1.i90 = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %dd_data1.i90 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %dd_data1.i90, align 4
  %chba.i91 = getelementptr inbounds %struct.cxgbi_conn, ptr %48, i32 0, i32 2
  %49 = ptrtoint ptr %chba.i91 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %chba.i91, align 4
  %cdev2.i = getelementptr inbounds %struct.cxgbi_hba, ptr %50, i32 0, i32 3
  %51 = ptrtoint ptr %cdev2.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %cdev2.i, align 4
  %skb_tx_rsvd.i = getelementptr inbounds %struct.cxgbi_device, ptr %52, i32 0, i32 15
  %53 = ptrtoint ptr %skb_tx_rsvd.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %skb_tx_rsvd.i, align 4
  %sub3.i = sub i32 3840, %54
  %55 = tail call i32 @llvm.umax.i32(i32 %sub3.i, i32 8704) #17
  %tx_max_size.i = getelementptr inbounds %struct.cxgbi_device, ptr %52, i32 0, i32 18
  %56 = ptrtoint ptr %tx_max_size.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %tx_max_size.i, align 4
  %58 = tail call i32 @llvm.umin.i32(i32 %57, i32 %55) #17
  %max_xmit_dlength.i = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 24
  %59 = ptrtoint ptr %max_xmit_dlength.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %max_xmit_dlength.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.not.i92 = icmp eq i32 %60, 0
  %61 = tail call i32 @llvm.umin.i32(i32 %60, i32 %58) #17
  %storemerge.i93 = select i1 %tobool.not.i92, i32 %58, i32 %61
  %and.i94 = and i32 %storemerge.i93, -512
  %62 = ptrtoint ptr %max_xmit_dlength.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %and.i94, ptr %max_xmit_dlength.i, align 8
  br label %cleanup

sw.default:                                       ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #19
  %call42 = tail call i32 @iscsi_set_param(ptr noundef %cls_conn, i32 noundef %param, ptr noundef %buf, i32 noundef %buflen) #17
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %if.then39, %sw.bb36.cleanup_crit_edge, %if.end19.i, %do.end6.i, %sw.bb30.cleanup_crit_edge, %sw.bb28, %if.then20, %land.lhs.true17.cleanup_crit_edge, %sw.bb14.cleanup_crit_edge, %if.then10, %land.lhs.true.cleanup_crit_edge, %sw.bb.cleanup_crit_edge
  %retval.0 = phi i32 [ %call42, %sw.default ], [ %call29, %sw.bb28 ], [ %call37, %sw.bb36.cleanup_crit_edge ], [ 0, %if.then39 ], [ %call31, %sw.bb30.cleanup_crit_edge ], [ %call15, %sw.bb14.cleanup_crit_edge ], [ %call26, %if.then20 ], [ 0, %land.lhs.true17.cleanup_crit_edge ], [ %call7, %sw.bb.cleanup_crit_edge ], [ %call12, %if.then10 ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ -22, %do.end6.i ], [ 0, %if.end19.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_set_param(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_tcp_set_max_r2t(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_get_ep_param(ptr noundef %ep, i32 noundef %param, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ep to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ep, align 8
  %2 = load i32, ptr @dbg_level, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.172, ptr noundef nonnull @.str.173, ptr noundef %ep, i32 noundef %param) #21
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  %3 = and i32 %param, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %3)
  %switch = icmp eq i32 %3, 20
  br i1 %switch, label %sw.bb, label %do.end3.cleanup_crit_edge

do.end3.cleanup_crit_edge:                        ; preds = %do.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb:                                            ; preds = %do.end3
  %tobool4.not = icmp eq ptr %1, null
  br i1 %tobool4.not, label %sw.bb.cleanup_crit_edge, label %if.end6

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end6:                                          ; preds = %sw.bb
  %csk7 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %csk7 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %csk7, align 4
  %tobool8.not = icmp eq ptr %5, null
  br i1 %tobool8.not, label %if.end6.cleanup_crit_edge, label %if.end10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %6 = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 31
  %call11 = tail call i32 @iscsi_conn_get_addr_param(ptr noundef %6, i32 noundef %param, ptr noundef %buf) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.end6.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %do.end3.cleanup_crit_edge
  %retval.0 = phi i32 [ %call11, %if.end10 ], [ -107, %sw.bb.cleanup_crit_edge ], [ -107, %if.end6.cleanup_crit_edge ], [ -38, %do.end3.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_conn_get_addr_param(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cxgbi_create_conn(ptr noundef %cls_session, i32 noundef %cid) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @iscsi_tcp_conn_setup(ptr noundef %cls_session, i32 noundef 24, i32 noundef %cid) #17
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %dd_data = getelementptr inbounds %struct.iscsi_cls_conn, ptr %call, i32 0, i32 1
  %0 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dd_data, align 8
  %dd_data1 = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dd_data1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dd_data1, align 4
  %dd_data2 = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %dd_data2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dd_data2, align 4
  %iconn = getelementptr inbounds %struct.cxgbi_conn, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %iconn to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %1, ptr %iconn, align 4
  %7 = load i32, ptr @dbg_level, align 4
  %and = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %do.end

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.174, ptr noundef nonnull @.str.175, i32 noundef %cid, i32 noundef %cid, ptr noundef %cls_session, ptr noundef nonnull %call, ptr noundef %1, ptr noundef %3, ptr noundef %5) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @iscsi_tcp_conn_setup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_bind_conn(ptr noundef %cls_session, ptr noundef %cls_conn, i64 noundef %transport_eph, i32 noundef %is_leading) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dd_data = getelementptr inbounds %struct.iscsi_cls_conn, ptr %cls_conn, i32 0, i32 1
  %0 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dd_data, align 8
  %dd_data1 = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dd_data1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dd_data1, align 4
  %dd_data2 = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %dd_data2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dd_data2, align 4
  %call = tail call ptr @iscsi_lookup_endpoint(i64 noundef %transport_eph) #17
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %call, align 8
  %csk4 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %csk4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %csk4, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %cdev2ppm = getelementptr inbounds %struct.cxgbi_device, ptr %11, i32 0, i32 23
  %12 = ptrtoint ptr %cdev2ppm to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cdev2ppm, align 4
  %call6 = tail call ptr %13(ptr noundef %11) #17
  %14 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %9, align 4
  %csk_ddp_setup_pgidx = getelementptr inbounds %struct.cxgbi_device, ptr %15, i32 0, i32 27
  %16 = ptrtoint ptr %csk_ddp_setup_pgidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %csk_ddp_setup_pgidx, align 4
  %tid = getelementptr inbounds %struct.cxgbi_sock, ptr %9, i32 0, i32 1
  %18 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tid, align 4
  %pgsz_idx_dflt = getelementptr inbounds %struct.cxgbi_ppm, ptr %call6, i32 0, i32 5, i32 1
  %20 = ptrtoint ptr %pgsz_idx_dflt to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %pgsz_idx_dflt, align 4
  %conv = zext i8 %21 to i32
  %call8 = tail call i32 %17(ptr noundef %9, i32 noundef %19, i32 noundef %conv) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp = icmp slt i32 %call8, 0
  br i1 %cmp, label %if.end.put_ep_crit_edge, label %if.end11

if.end.put_ep_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %put_ep

if.end11:                                         ; preds = %if.end
  %call12 = tail call i32 @iscsi_conn_bind(ptr noundef %cls_session, ptr noundef %cls_conn, i32 noundef %is_leading) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %if.end11.put_ep_crit_edge

if.end11.put_ep_crit_edge:                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %put_ep

if.end15:                                         ; preds = %if.end11
  %session = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 2
  %22 = ptrtoint ptr %session to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %session, align 8
  %cmds_max = getelementptr inbounds %struct.iscsi_session, ptr %23, i32 0, i32 57
  %24 = ptrtoint ptr %cmds_max to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cmds_max, align 4
  %sub = add i32 %25, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %tobool.not.i.i = icmp eq i32 %sub, 0
  %26 = tail call i32 @llvm.ctlz.i32(i32 %sub, i1 true) #17, !range !905
  %sub.i.op.i.op = sub nuw nsw i32 32, %26
  %add = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.op.i.op
  %task_idx_bits = getelementptr inbounds %struct.cxgbi_conn, ptr %5, i32 0, i32 3
  %27 = ptrtoint ptr %task_idx_bits to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %add, ptr %task_idx_bits, align 4
  %callback_lock = getelementptr inbounds %struct.cxgbi_sock, ptr %9, i32 0, i32 38
  tail call void @_raw_write_lock_bh(ptr noundef %callback_lock) #17
  %user_data = getelementptr inbounds %struct.cxgbi_sock, ptr %9, i32 0, i32 39
  %28 = ptrtoint ptr %user_data to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %1, ptr %user_data, align 4
  %chba = getelementptr inbounds %struct.cxgbi_endpoint, ptr %7, i32 0, i32 1
  %29 = ptrtoint ptr %chba to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %chba, align 4
  %chba17 = getelementptr inbounds %struct.cxgbi_conn, ptr %5, i32 0, i32 2
  %31 = ptrtoint ptr %chba17 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %30, ptr %chba17, align 4
  %32 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %7, ptr %5, align 4
  %33 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %5, ptr %7, align 4
  tail call void @_raw_write_unlock_bh(ptr noundef %callback_lock) #17
  %34 = ptrtoint ptr %dd_data1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dd_data1, align 4
  %dd_data1.i = getelementptr inbounds %struct.iscsi_tcp_conn, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %dd_data1.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dd_data1.i, align 4
  %chba.i = getelementptr inbounds %struct.cxgbi_conn, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %chba.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %chba.i, align 4
  %cdev2.i = getelementptr inbounds %struct.cxgbi_hba, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %cdev2.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %cdev2.i, align 4
  %skb_tx_rsvd.i = getelementptr inbounds %struct.cxgbi_device, ptr %41, i32 0, i32 15
  %42 = ptrtoint ptr %skb_tx_rsvd.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %skb_tx_rsvd.i, align 4
  %sub3.i = sub i32 3840, %43
  %44 = tail call i32 @llvm.umax.i32(i32 %sub3.i, i32 8704) #17
  %tx_max_size.i = getelementptr inbounds %struct.cxgbi_device, ptr %41, i32 0, i32 18
  %45 = ptrtoint ptr %tx_max_size.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %tx_max_size.i, align 4
  %47 = tail call i32 @llvm.umin.i32(i32 %46, i32 %44) #17
  %max_xmit_dlength.i = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 24
  %48 = ptrtoint ptr %max_xmit_dlength.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %max_xmit_dlength.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.not.i = icmp eq i32 %49, 0
  %50 = tail call i32 @llvm.umin.i32(i32 %49, i32 %47) #17
  %storemerge.i = select i1 %tobool.not.i, i32 %47, i32 %50
  %and.i = and i32 %storemerge.i, -512
  %51 = ptrtoint ptr %max_xmit_dlength.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %and.i, ptr %max_xmit_dlength.i, align 8
  %52 = ptrtoint ptr %dd_data1.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %dd_data1.i, align 4
  %chba.i67 = getelementptr inbounds %struct.cxgbi_conn, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %chba.i67 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %chba.i67, align 4
  %cdev.i = getelementptr inbounds %struct.cxgbi_hba, ptr %55, i32 0, i32 3
  %56 = ptrtoint ptr %cdev.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %cdev.i, align 4
  %rx_max_size.i = getelementptr inbounds %struct.cxgbi_device, ptr %57, i32 0, i32 19
  %58 = ptrtoint ptr %rx_max_size.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %rx_max_size.i, align 4
  %and.i68 = and i32 %59, -512
  %max_recv_dlength.i = getelementptr inbounds %struct.iscsi_conn, ptr %1, i32 0, i32 23
  %60 = ptrtoint ptr %max_recv_dlength.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %max_recv_dlength.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool.not.i69 = icmp eq i32 %61, 0
  br i1 %tobool.not.i69, label %if.end15.if.end19.i_crit_edge, label %if.then.i

if.end15.if.end19.i_crit_edge:                    ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19.i

if.then.i:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_cmp4(i32 %61, i32 %and.i68)
  %cmp.i = icmp ugt i32 %61, %and.i68
  br i1 %cmp.i, label %do.end6.i, label %if.end.i

do.end6.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.346, ptr noundef nonnull @.str.347, i32 noundef %61, i32 noundef %and.i68) #21
  br label %cxgbi_conn_max_recv_dlength.exit

if.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %and14.i = and i32 %61, -512
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.end.i, %if.end15.if.end19.i_crit_edge
  %storemerge.i70 = phi i32 [ %and14.i, %if.end.i ], [ %and.i68, %if.end15.if.end19.i_crit_edge ]
  %62 = ptrtoint ptr %max_recv_dlength.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %storemerge.i70, ptr %max_recv_dlength.i, align 4
  br label %cxgbi_conn_max_recv_dlength.exit

cxgbi_conn_max_recv_dlength.exit:                 ; preds = %if.end19.i, %do.end6.i
  %63 = load i32, ptr @dbg_level, align 4
  %and = and i32 %63, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool23.not = icmp eq i32 %and, 0
  br i1 %tobool23.not, label %cxgbi_conn_max_recv_dlength.exit.do.end29_crit_edge, label %do.end

cxgbi_conn_max_recv_dlength.exit.do.end29_crit_edge: ; preds = %cxgbi_conn_max_recv_dlength.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end29

do.end:                                           ; preds = %cxgbi_conn_max_recv_dlength.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call26 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.176, ptr noundef nonnull @.str.177, ptr noundef %cls_session, ptr noundef %cls_conn, ptr noundef nonnull %call, ptr noundef %5, ptr noundef %9) #21
  br label %do.end29

do.end29:                                         ; preds = %do.end, %cxgbi_conn_max_recv_dlength.exit.do.end29_crit_edge
  tail call void @iscsi_tcp_hdr_recv_prep(ptr noundef %3) #17
  br label %put_ep

put_ep:                                           ; preds = %do.end29, %if.end11.put_ep_crit_edge, %if.end.put_ep_crit_edge
  %err.0 = phi i32 [ %call8, %if.end.put_ep_crit_edge ], [ 0, %do.end29 ], [ -22, %if.end11.put_ep_crit_edge ]
  tail call void @iscsi_put_endpoint(ptr noundef nonnull %call) #17
  br label %cleanup

cleanup:                                          ; preds = %put_ep, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %put_ep ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @iscsi_lookup_endpoint(i64 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_conn_bind(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock_bh(ptr noundef) local_unnamed_addr #0 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock_bh(ptr noundef) local_unnamed_addr #0 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_tcp_hdr_recv_prep(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_put_endpoint(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cxgbi_create_session(ptr noundef %ep, i16 noundef zeroext %cmds_max, i16 zeroext %qdepth, i32 noundef %initial_cmdsn) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %ep, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.178, ptr noundef nonnull @.str.179) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %ep to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ep, align 8
  %chba1 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %chba1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chba1, align 4
  %shost2 = getelementptr inbounds %struct.cxgbi_hba, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %shost2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %shost2, align 4
  %add.ptr = getelementptr %struct.Scsi_Host, ptr %5, i32 1, i32 5, i32 5, i32 1
  %cmp.not = icmp eq ptr %3, %add.ptr
  br i1 %cmp.not, label %do.end16, label %do.body8, !prof !888

do.body8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/scsi/cxgbi/libcxgbi.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2745, 0\0A.popsection", ""() #17, !srcloc !906
  unreachable

do.end16:                                         ; preds = %if.end
  %cdev = getelementptr inbounds %struct.cxgbi_hba, ptr %3, i32 0, i32 3
  %6 = ptrtoint ptr %cdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cdev, align 4
  %itp = getelementptr inbounds %struct.cxgbi_device, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %itp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %itp, align 4
  %call17 = tail call ptr @iscsi_session_setup(ptr noundef %9, ptr noundef %5, i16 noundef zeroext %cmds_max, i32 noundef 0, i32 noundef 384, i32 noundef %initial_cmdsn, i32 noundef -1) #17
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %do.end16.cleanup_crit_edge, label %if.end20

do.end16.cleanup_crit_edge:                       ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end20:                                         ; preds = %do.end16
  %dd_data21 = getelementptr inbounds %struct.iscsi_cls_session, ptr %call17, i32 0, i32 16
  %10 = ptrtoint ptr %dd_data21 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dd_data21, align 4
  %call22 = tail call i32 @iscsi_tcp_r2tpool_alloc(ptr noundef %11) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %do.body26, label %remove_session

do.body26:                                        ; preds = %if.end20
  %12 = load i32, ptr @dbg_level, align 4
  %and = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool27.not = icmp eq i32 %and, 0
  br i1 %tobool27.not, label %do.body26.cleanup_crit_edge, label %do.end31

do.body26.cleanup_crit_edge:                      ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end31:                                         ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #19
  %call33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.181, ptr noundef nonnull @.str.179, ptr noundef nonnull %ep, ptr noundef nonnull %call17) #21
  br label %cleanup

remove_session:                                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @iscsi_session_teardown(ptr noundef nonnull %call17) #17
  br label %cleanup

cleanup:                                          ; preds = %remove_session, %do.end31, %do.body26.cleanup_crit_edge, %do.end16.cleanup_crit_edge, %do.end
  %retval.0 = phi ptr [ null, %remove_session ], [ null, %do.end ], [ null, %do.end16.cleanup_crit_edge ], [ %call17, %do.end31 ], [ %call17, %do.body26.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @iscsi_session_setup(ptr noundef, ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_tcp_r2tpool_alloc(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_session_teardown(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_destroy_session(ptr noundef %cls_session) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end2_crit_edge, label %do.end

entry.do.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end2

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.183, ptr noundef nonnull @.str.184, ptr noundef %cls_session) #21
  br label %do.end2

do.end2:                                          ; preds = %do.end, %entry.do.end2_crit_edge
  %dd_data = getelementptr inbounds %struct.iscsi_cls_session, ptr %cls_session, i32 0, i32 16
  %1 = ptrtoint ptr %dd_data to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dd_data, align 4
  tail call void @iscsi_tcp_r2tpool_free(ptr noundef %2) #17
  tail call void @iscsi_session_teardown(ptr noundef %cls_session) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_tcp_r2tpool_free(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_set_host_param(ptr noundef %shost, i32 noundef %param, ptr noundef %buf, i32 noundef %buflen) #1 align 64 {
entry:
  %addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr %struct.Scsi_Host, ptr %shost, i32 1, i32 5, i32 5, i32 1
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.end, label %do.body1

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, ptr %shost, i32 0, i32 49
  tail call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.161, ptr noundef %shost_gendev, ptr noundef nonnull @.str.185) #21
  br label %cleanup

do.body1:                                         ; preds = %entry
  %2 = load i32, ptr @dbg_level, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %do.body1.do.end11_crit_edge, label %do.end6

do.body1.do.end11_crit_edge:                      ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end11

do.end6:                                          ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #19
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.188, ptr noundef nonnull @.str.186, ptr noundef %shost, ptr noundef %add.ptr, ptr noundef nonnull %1, i32 noundef %param, i32 noundef %buflen, ptr noundef %buf) #21
  br label %do.end11

do.end11:                                         ; preds = %do.end6, %do.body1.do.end11_crit_edge
  %3 = zext i32 %param to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.431)
  switch i32 %param, label %sw.default [
    i32 3, label %sw.bb
    i32 0, label %do.end11.cleanup_crit_edge
    i32 2, label %do.end11.cleanup_crit_edge42
  ]

do.end11.cleanup_crit_edge42:                     ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end11.cleanup_crit_edge:                       ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb:                                            ; preds = %do.end11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %addr) #17
  %call12 = tail call i32 @in_aton(ptr noundef %buf) #17
  %4 = ptrtoint ptr %addr to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %call12, ptr %addr, align 4
  %5 = load i32, ptr @dbg_level, align 4
  %and14 = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %sw.bb.do.end27_crit_edge, label %do.end19

sw.bb.do.end27_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end27

do.end19:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  %6 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr, align 4
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.191, ptr noundef nonnull @.str.186, ptr noundef %7, ptr noundef nonnull %addr) #21
  br label %do.end27

do.end27:                                         ; preds = %do.end19, %sw.bb.do.end27_crit_edge
  %cdev.i = getelementptr %struct.Scsi_Host, ptr %shost, i32 1, i32 5, i32 5, i32 3
  %8 = ptrtoint ptr %cdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cdev.i, align 4
  %flags.i = getelementptr inbounds %struct.cxgbi_device, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %11, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.then.i

if.then.i:                                        ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #19
  %12 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %addr, align 4
  %ipv4addr.i = getelementptr %struct.Scsi_Host, ptr %shost, i32 1, i32 5, i32 5, i32 6
  %14 = ptrtoint ptr %ipv4addr.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %ipv4addr.i, align 4
  br label %cxgbi_set_iscsi_ipv4.exit

do.end.i:                                         ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #19
  %15 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %add.ptr, align 4
  %call.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.348, ptr noundef nonnull @.str.349, ptr noundef %16) #21
  br label %cxgbi_set_iscsi_ipv4.exit

cxgbi_set_iscsi_ipv4.exit:                        ; preds = %do.end.i, %if.then.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %addr) #17
  br label %cleanup

sw.default:                                       ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #19
  %call29 = tail call i32 @iscsi_host_set_param(ptr noundef %shost, i32 noundef %param, ptr noundef %buf, i32 noundef %buflen) #17
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %cxgbi_set_iscsi_ipv4.exit, %do.end11.cleanup_crit_edge, %do.end11.cleanup_crit_edge42, %do.end
  %retval.0 = phi i32 [ %call29, %sw.default ], [ 0, %cxgbi_set_iscsi_ipv4.exit ], [ -19, %do.end ], [ 0, %do.end11.cleanup_crit_edge ], [ 0, %do.end11.cleanup_crit_edge42 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @in_aton(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_host_set_param(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_get_host_param(ptr noundef %shost, i32 noundef %param, ptr noundef %buf) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr %struct.Scsi_Host, ptr %shost, i32 1, i32 5, i32 5, i32 1
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.end, label %do.body1

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %shost_gendev = getelementptr inbounds %struct.Scsi_Host, ptr %shost, i32 0, i32 49
  tail call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.161, ptr noundef %shost_gendev, ptr noundef nonnull @.str.185) #21
  br label %cleanup

do.body1:                                         ; preds = %entry
  %2 = load i32, ptr @dbg_level, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %do.body1.do.end11_crit_edge, label %do.end6

do.body1.do.end11_crit_edge:                      ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end11

do.end6:                                          ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #19
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.193, ptr noundef %shost, ptr noundef %add.ptr, ptr noundef nonnull %1, i32 noundef %param) #21
  br label %do.end11

do.end11:                                         ; preds = %do.end6, %do.body1.do.end11_crit_edge
  %3 = zext i32 %param to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.432)
  switch i32 %param, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb14
    i32 3, label %sw.bb19
  ]

sw.bb:                                            ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #19
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr, align 4
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 86
  %6 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev_addr, align 64
  %call13 = tail call i32 @sysfs_format_mac(ptr noundef %buf, ptr noundef %7, i32 noundef 6) #17
  br label %cleanup

sw.bb14:                                          ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr, align 4
  %call18 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.197, ptr noundef %9)
  br label %cleanup

sw.bb19:                                          ; preds = %do.end11
  %cdev = getelementptr %struct.Scsi_Host, ptr %shost, i32 1, i32 5, i32 5, i32 3
  %10 = ptrtoint ptr %cdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cdev, align 4
  %port_id = getelementptr %struct.Scsi_Host, ptr %shost, i32 1, i32 5, i32 5, i32 7
  %12 = ptrtoint ptr %port_id to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %port_id, align 4
  %pmap1.i = getelementptr inbounds %struct.cxgbi_device, ptr %11, i32 0, i32 21
  %14 = ptrtoint ptr %pmap1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pmap1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i = icmp eq i32 %15, 0
  br i1 %tobool.not.i, label %sw.bb19.do.body25_crit_edge, label %lor.lhs.false.i

sw.bb19.do.body25_crit_edge:                      ; preds = %sw.bb19
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body25

lor.lhs.false.i:                                  ; preds = %sw.bb19
  %used2.i = getelementptr inbounds %struct.cxgbi_device, ptr %11, i32 0, i32 21, i32 1
  %16 = ptrtoint ptr %used2.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %used2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool3.not.i = icmp eq i32 %17, 0
  br i1 %tobool3.not.i, label %lor.lhs.false.i.do.body25_crit_edge, label %if.end.i

lor.lhs.false.i.do.body25_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body25

if.end.i:                                         ; preds = %lor.lhs.false.i
  %lock.i = getelementptr inbounds %struct.cxgbi_device, ptr %11, i32 0, i32 21, i32 3
  tail call void @_raw_spin_lock_bh(ptr noundef %lock.i) #17
  %18 = ptrtoint ptr %used2.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %used2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool5.not38.i = icmp eq i32 %19, 0
  br i1 %tobool5.not38.i, label %if.end.i.find_sock_on_port.exit.thread62_crit_edge, label %land.rhs.lr.ph.i

if.end.i.find_sock_on_port.exit.thread62_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %find_sock_on_port.exit.thread62

land.rhs.lr.ph.i:                                 ; preds = %if.end.i
  %20 = ptrtoint ptr %pmap1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %pmap1.i, align 4
  %port_csk.i = getelementptr inbounds %struct.cxgbi_device, ptr %11, i32 0, i32 21, i32 5
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.inc.i.land.rhs.i_crit_edge, %land.rhs.lr.ph.i
  %used.040.i = phi i32 [ %19, %land.rhs.lr.ph.i ], [ %used.2.ph.i, %for.inc.i.land.rhs.i_crit_edge ]
  %i.039.i = phi i32 [ 0, %land.rhs.lr.ph.i ], [ %inc.i, %for.inc.i.land.rhs.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.039.i, i32 %21)
  %exitcond.not.i = icmp eq i32 %i.039.i, %21
  br i1 %exitcond.not.i, label %land.rhs.i.find_sock_on_port.exit.thread62_crit_edge, label %for.body.i

land.rhs.i.find_sock_on_port.exit.thread62_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %find_sock_on_port.exit.thread62

for.body.i:                                       ; preds = %land.rhs.i
  %22 = ptrtoint ptr %port_csk.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %port_csk.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %23, i32 %i.039.i
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx.i, align 4
  %tobool7.not.i = icmp eq ptr %25, null
  br i1 %tobool7.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then8.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc.i

if.then8.i:                                       ; preds = %for.body.i
  %port_id9.i = getelementptr inbounds %struct.cxgbi_sock, ptr %25, i32 0, i32 12
  %26 = ptrtoint ptr %port_id9.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %port_id9.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %27, i8 %13)
  %cmp11.i = icmp eq i8 %27, %13
  br i1 %cmp11.i, label %if.then22, label %if.end15.i

if.end15.i:                                       ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #19
  %dec.i = add i32 %used.040.i, -1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end15.i, %for.body.i.for.inc.i_crit_edge
  %used.2.ph.i = phi i32 [ %used.040.i, %for.body.i.for.inc.i_crit_edge ], [ %dec.i, %if.end15.i ]
  %inc.i = add i32 %i.039.i, 1
  %tobool5.not.i = icmp eq i32 %used.2.ph.i, 0
  br i1 %tobool5.not.i, label %for.inc.i.find_sock_on_port.exit.thread62_crit_edge, label %for.inc.i.land.rhs.i_crit_edge

for.inc.i.land.rhs.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs.i

for.inc.i.find_sock_on_port.exit.thread62_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %find_sock_on_port.exit.thread62

find_sock_on_port.exit.thread62:                  ; preds = %for.inc.i.find_sock_on_port.exit.thread62_crit_edge, %land.rhs.i.find_sock_on_port.exit.thread62_crit_edge, %if.end.i.find_sock_on_port.exit.thread62_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  br label %do.body25

if.then22:                                        ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  %28 = getelementptr inbounds %struct.cxgbi_sock, ptr %25, i32 0, i32 30
  %call23 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.198, ptr noundef %28)
  br label %do.body25

do.body25:                                        ; preds = %if.then22, %find_sock_on_port.exit.thread62, %lor.lhs.false.i.do.body25_crit_edge, %sw.bb19.do.body25_crit_edge
  %len.0 = phi i32 [ %call23, %if.then22 ], [ 0, %find_sock_on_port.exit.thread62 ], [ 0, %lor.lhs.false.i.do.body25_crit_edge ], [ 0, %sw.bb19.do.body25_crit_edge ]
  %29 = load i32, ptr @dbg_level, align 4
  %and26 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %do.body25.cleanup_crit_edge, label %do.end31

do.body25.cleanup_crit_edge:                      ; preds = %do.body25
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end31:                                         ; preds = %do.body25
  call void @__sanitizer_cov_trace_pc() #19
  %30 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %add.ptr, align 4
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.200, ptr noundef nonnull @.str.193, ptr noundef %31, ptr noundef %buf) #21
  br label %cleanup

sw.default:                                       ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #19
  %call40 = tail call i32 @iscsi_host_get_param(ptr noundef %shost, i32 noundef %param, ptr noundef %buf) #17
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %do.end31, %do.body25.cleanup_crit_edge, %sw.bb14, %sw.bb, %do.end
  %retval.0 = phi i32 [ %call40, %sw.default ], [ -19, %do.end ], [ %call18, %sw.bb14 ], [ %call13, %sw.bb ], [ %len.0, %do.end31 ], [ %len.0, %do.body25.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_format_mac(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_host_get_param(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cxgbi_ep_connect(ptr noundef %shost, ptr noundef %dst_addr, i32 noundef %non_blocking) #1 align 64 {
entry:
  %fl.i.i = alloca %struct.flowi6, align 8
  %pref_saddr.i = alloca %struct.in6_addr, align 4
  %port.i166 = alloca i32, align 4
  %fl4.i = alloca %struct.flowi4, align 8
  %port.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dbg_level, align 4
  %and = and i32 %0, 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.202, ptr noundef nonnull @.str.203, ptr noundef %shost, i32 noundef %non_blocking, ptr noundef %dst_addr) #21
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  %tobool4.not = icmp eq ptr %shost, null
  br i1 %tobool4.not, label %do.end3.if.end15_crit_edge, label %if.then5

do.end3.if.end15_crit_edge:                       ; preds = %do.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15

if.then5:                                         ; preds = %do.end3
  %add.ptr = getelementptr %struct.Scsi_Host, ptr %shost, i32 1, i32 5, i32 5, i32 1
  %tobool7.not = icmp eq ptr %add.ptr, null
  br i1 %tobool7.not, label %do.end11, label %if.then5.if.end15_crit_edge

if.then5.if.end15_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15

do.end11:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.205, ptr noundef nonnull @.str.203, ptr noundef nonnull %shost) #21
  br label %err_out

if.end15:                                         ; preds = %if.then5.if.end15_crit_edge, %do.end3.if.end15_crit_edge
  %hba.0 = phi ptr [ %add.ptr, %if.then5.if.end15_crit_edge ], [ null, %do.end3.if.end15_crit_edge ]
  %1 = getelementptr inbounds [4 x i32], ptr %pref_saddr.i, i32 0, i32 1
  %2 = getelementptr inbounds [4 x i32], ptr %pref_saddr.i, i32 0, i32 2
  %3 = getelementptr inbounds [4 x i32], ptr %pref_saddr.i, i32 0, i32 3
  %sin6_addr.i = getelementptr inbounds %struct.sockaddr_in6, ptr %dst_addr, i32 0, i32 3
  %daddr4.i.i = getelementptr inbounds %struct.flowi6, ptr %fl.i.i, i32 0, i32 1
  %sin6_port74.i = getelementptr inbounds %struct.sockaddr_in6, ptr %dst_addr, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %fl4.i, i32 32
  %sin_addr.i = getelementptr inbounds %struct.sockaddr_in, ptr %dst_addr, i32 0, i32 2
  %flowic_iif.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 1
  %flowic_mark.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 2
  %flowic_tos.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 3
  %flowic_scope.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 4
  %flowic_proto.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 5
  %flowic_flags.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 6
  %flowic_secid.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 7
  %flowic_tun_key.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 9
  %flowic_uid.i.i.i.i = getelementptr inbounds %struct.flowi_common, ptr %fl4.i, i32 0, i32 8
  %daddr10.i.i.i.i = getelementptr inbounds %struct.flowi4, ptr %fl4.i, i32 0, i32 2
  %saddr11.i.i.i.i = getelementptr inbounds %struct.flowi4, ptr %fl4.i, i32 0, i32 1
  %uli.i.i.i.i = getelementptr inbounds %struct.flowi4, ptr %fl4.i, i32 0, i32 3
  %sport14.i.i.i.i = getelementptr inbounds %struct.anon.123, ptr %uli.i.i.i.i, i32 0, i32 1
  %tobool39.not = icmp eq ptr %hba.0, null
  br label %check_route

check_route:                                      ; preds = %if.then53, %if.end15
  %ifindex.0 = phi i32 [ 0, %if.end15 ], [ %183, %if.then53 ]
  %5 = ptrtoint ptr %dst_addr to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %dst_addr, align 2
  %7 = zext i16 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.433)
  switch i16 %6, label %do.end28 [
    i16 2, label %if.then17
    i16 10, label %if.then23
  ]

if.then17:                                        ; preds = %check_route
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %fl4.i) #17
  %8 = call ptr @memset(ptr %4, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %port.i) #17
  %9 = ptrtoint ptr %port.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 65535, ptr %port.i, align 4
  %10 = ptrtoint ptr %sin_addr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sin_addr.i, align 4
  %12 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %sin6_port74.i, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 11) to i32))
  %14 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 11), align 4
  %call.i.i.i.i = call i32 @make_kuid(ptr noundef %14, i32 noundef 0) #17
  %15 = ptrtoint ptr %fl4.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %ifindex.0, ptr %fl4.i, align 8
  %16 = ptrtoint ptr %flowic_iif.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %flowic_iif.i.i.i.i, align 4
  %17 = ptrtoint ptr %flowic_mark.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %flowic_mark.i.i.i.i, align 8
  %18 = ptrtoint ptr %flowic_tos.i.i.i.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %flowic_tos.i.i.i.i, align 4
  %19 = ptrtoint ptr %flowic_scope.i.i.i.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 0, ptr %flowic_scope.i.i.i.i, align 1
  %20 = ptrtoint ptr %flowic_proto.i.i.i.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 6, ptr %flowic_proto.i.i.i.i, align 2
  %21 = ptrtoint ptr %flowic_flags.i.i.i.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %flowic_flags.i.i.i.i, align 1
  %22 = ptrtoint ptr %flowic_secid.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %flowic_secid.i.i.i.i, align 8
  %23 = ptrtoint ptr %flowic_tun_key.i.i.i.i to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 0, ptr %flowic_tun_key.i.i.i.i, align 8
  %24 = ptrtoint ptr %flowic_uid.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %call.i.i.i.i, ptr %flowic_uid.i.i.i.i, align 4
  %25 = ptrtoint ptr %daddr10.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %11, ptr %daddr10.i.i.i.i, align 4
  %26 = ptrtoint ptr %saddr11.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %saddr11.i.i.i.i, align 8
  %27 = ptrtoint ptr %uli.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %13, ptr %uli.i.i.i.i, align 8
  %28 = ptrtoint ptr %sport14.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 0, ptr %sport14.i.i.i.i, align 2
  %29 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %4, align 8
  %call11.i.i.i = call ptr @ip_route_output_flow(ptr noundef nonnull @init_net, ptr noundef nonnull %fl4.i, ptr noundef null) #17
  %cmp.i.i.i = icmp ugt ptr %call11.i.i.i, inttoptr (i32 -4096 to ptr)
  %tobool.not186.i = icmp eq ptr %call11.i.i.i, null
  %tobool.not.i = or i1 %cmp.i.i.i, %tobool.not186.i
  br i1 %tobool.not.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #19
  %30 = ptrtoint ptr %sin_addr.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sin_addr.i, align 4
  %32 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %sin6_port74.i, align 2
  %conv.i = zext i16 %33 to i32
  %call4.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.350, ptr noundef nonnull @.str.351, i32 noundef %31, i32 noundef %conv.i) #21
  br label %err_out.i

if.end.i:                                         ; preds = %if.then17
  %ops.i.i = getelementptr inbounds %struct.dst_entry, ptr %call11.i.i.i, i32 0, i32 1
  %34 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ops.i.i, align 4
  %neigh_lookup.i.i = getelementptr inbounds %struct.dst_ops, ptr %35, i32 0, i32 14
  %36 = ptrtoint ptr %neigh_lookup.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %neigh_lookup.i.i, align 8
  %call.i.i = call ptr %37(ptr noundef nonnull %call11.i.i.i, ptr noundef null, ptr noundef %sin_addr.i) #17
  %cmp.i.i172.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  %tobool9.not187.i = icmp eq ptr %call.i.i, null
  %tobool9.not.i = or i1 %cmp.i.i172.i, %tobool9.not187.i
  br i1 %tobool9.not.i, label %if.end.i.rel_rt.i_crit_edge, label %if.end11.i

if.end.i.rel_rt.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rel_rt.i

if.end11.i:                                       ; preds = %if.end.i
  %dev.i = getelementptr inbounds %struct.neighbour, ptr %call.i.i, i32 0, i32 25
  %38 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %dev.i, align 4
  %rt_flags.i = getelementptr inbounds %struct.rtable, ptr %call11.i.i.i, i32 0, i32 2
  %40 = ptrtoint ptr %rt_flags.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rt_flags.i, align 4
  %and.i = and i32 %41, 805306368
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool12.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool12.not.i, label %if.end23.i, label %do.end16.i

do.end16.i:                                       ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #19
  %42 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %sin6_port74.i, align 2
  %conv21.i = zext i16 %43 to i32
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.353, ptr noundef nonnull @.str.351, ptr noundef %sin_addr.i, i32 noundef %conv21.i, ptr noundef %39) #21
  br label %rel_neigh.i

if.end23.i:                                       ; preds = %if.end11.i
  %flags.i = getelementptr inbounds %struct.net_device, ptr %39, i32 0, i32 14
  %44 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %flags.i, align 8
  %and24.i = and i32 %45, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24.i)
  %tobool25.not.i = icmp eq i32 %and24.i, 0
  br i1 %tobool25.not.i, label %if.end23.i.if.end44.i_crit_edge, label %if.then26.i

if.end23.i.if.end44.i_crit_edge:                  ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44.i

if.then26.i:                                      ; preds = %if.end23.i
  %46 = ptrtoint ptr %sin_addr.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sin_addr.i, align 4
  %call.i173.i = call ptr @__ip_dev_find(ptr noundef nonnull @init_net, i32 noundef %47, i1 noundef zeroext true) #17
  %tobool30.not.i = icmp eq ptr %call.i173.i, null
  br i1 %tobool30.not.i, label %if.then26.i.rel_neigh.i_crit_edge, label %if.end32.i

if.then26.i.rel_neigh.i_crit_edge:                ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rel_neigh.i

if.end32.i:                                       ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #19
  %mtu33.i = getelementptr inbounds %struct.net_device, ptr %call.i173.i, i32 0, i32 20
  %48 = ptrtoint ptr %mtu33.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %mtu33.i, align 4
  %50 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %dev.i, align 4
  %call43.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.356, ptr noundef nonnull @.str.351, ptr noundef %51, ptr noundef nonnull %call.i173.i, i32 noundef %49) #21
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.end32.i, %if.end23.i.if.end44.i_crit_edge
  %mtu.0.i = phi i32 [ %49, %if.end32.i ], [ 0, %if.end23.i.if.end44.i_crit_edge ]
  %ndev.0.i = phi ptr [ %call.i173.i, %if.end32.i ], [ %39, %if.end23.i.if.end44.i_crit_edge ]
  %flags45.i = getelementptr inbounds %struct.net_device, ptr %ndev.0.i, i32 0, i32 14
  %52 = ptrtoint ptr %flags45.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %flags45.i, align 8
  %and46.i = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46.i)
  %tobool47.not.i = icmp eq i32 %and46.i, 0
  br i1 %tobool47.not.i, label %if.end44.i.do.end52.i_crit_edge, label %lor.lhs.false.i

if.end44.i.do.end52.i_crit_edge:                  ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end52.i

lor.lhs.false.i:                                  ; preds = %if.end44.i
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %ndev.0.i, i32 0, i32 6
  %54 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %state.i.i, align 4
  %56 = and i32 %55, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.not.i.i = icmp eq i32 %56, 0
  br i1 %tobool.not.i.i, label %if.end57.i, label %lor.lhs.false.i.do.end52.i_crit_edge

lor.lhs.false.i.do.end52.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end52.i

do.end52.i:                                       ; preds = %lor.lhs.false.i.do.end52.i_crit_edge, %if.end44.i.do.end52.i_crit_edge
  %call56.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.359, ptr noundef nonnull @.str.351, ptr noundef %ndev.0.i) #21
  br label %rel_neigh.i

if.end57.i:                                       ; preds = %lor.lhs.false.i
  %call58.i = call ptr @cxgbi_device_find_by_netdev(ptr noundef %ndev.0.i, ptr noundef nonnull %port.i) #17
  %tobool59.not.i = icmp eq ptr %call58.i, null
  br i1 %tobool59.not.i, label %if.end62.i, label %if.end57.i.do.body75.i_crit_edge

if.end57.i.do.body75.i_crit_edge:                 ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body75.i

if.end62.i:                                       ; preds = %if.end57.i
  %call61.i = call fastcc ptr @cxgbi_device_find_by_mac(ptr noundef %ndev.0.i, ptr noundef nonnull %port.i) #17
  %tobool63.not.i = icmp eq ptr %call61.i, null
  br i1 %tobool63.not.i, label %do.end67.i, label %if.end62.i.do.body75.i_crit_edge

if.end62.i.do.body75.i_crit_edge:                 ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body75.i

do.end67.i:                                       ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #19
  %call73.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.362, ptr noundef nonnull @.str.351, ptr noundef %sin_addr.i, ptr noundef %ndev.0.i) #21
  br label %rel_neigh.i

do.body75.i:                                      ; preds = %if.end62.i.do.body75.i_crit_edge, %if.end57.i.do.body75.i_crit_edge
  %cdev.0185.i = phi ptr [ %call61.i, %if.end62.i.do.body75.i_crit_edge ], [ %call58.i, %if.end57.i.do.body75.i_crit_edge ]
  %57 = load i32, ptr @dbg_level, align 4
  %and76.i = and i32 %57, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and76.i)
  %tobool77.not.i = icmp eq i32 %and76.i, 0
  br i1 %tobool77.not.i, label %do.body75.i.do.end92.i_crit_edge, label %do.end81.i

do.body75.i.do.end92.i_crit_edge:                 ; preds = %do.body75.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end92.i

do.end81.i:                                       ; preds = %do.body75.i
  call void @__sanitizer_cov_trace_pc() #19
  %58 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %sin6_port74.i, align 2
  %conv86.i = zext i16 %59 to i32
  %60 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %port.i, align 4
  %call89.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.365, ptr noundef nonnull @.str.351, ptr noundef %sin_addr.i, i32 noundef %conv86.i, i32 noundef %61, ptr noundef %ndev.0.i, ptr noundef nonnull %cdev.0185.i) #21
  br label %do.end92.i

do.end92.i:                                       ; preds = %do.end81.i, %do.body75.i.do.end92.i_crit_edge
  %call93.i = call fastcc ptr @cxgbi_sock_create(ptr noundef nonnull %cdev.0185.i) #17
  %tobool94.not.i = icmp eq ptr %call93.i, null
  br i1 %tobool94.not.i, label %do.end92.i.rel_neigh.i_crit_edge, label %if.end96.i

do.end92.i.rel_neigh.i_crit_edge:                 ; preds = %do.end92.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rel_neigh.i

if.end96.i:                                       ; preds = %do.end92.i
  %62 = ptrtoint ptr %call93.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %cdev.0185.i, ptr %call93.i, align 4
  %63 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %port.i, align 4
  %conv98.i = trunc i32 %64 to i8
  %port_id.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 12
  %65 = ptrtoint ptr %port_id.i to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 %conv98.i, ptr %port_id.i, align 4
  %mtu99.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 4
  %66 = ptrtoint ptr %mtu99.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %mtu.0.i, ptr %mtu99.i, align 4
  %dst100.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 32
  %67 = ptrtoint ptr %dst100.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %call11.i.i.i, ptr %dst100.i, align 4
  %csk_family.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 29
  %68 = ptrtoint ptr %csk_family.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 2, ptr %csk_family.i, align 4
  %69 = ptrtoint ptr %sin_addr.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %sin_addr.i, align 4
  %71 = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 31
  %sin_addr103.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 31, i32 0, i32 2
  %72 = ptrtoint ptr %sin_addr103.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %70, ptr %sin_addr103.i, align 4
  %73 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %sin6_port74.i, align 2
  %sin_port106.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 31, i32 0, i32 1
  %75 = ptrtoint ptr %sin_port106.i to i32
  call void @__asan_store2_noabort(i32 %75)
  store i16 %74, ptr %sin_port106.i, align 2
  %76 = ptrtoint ptr %dst_addr to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %dst_addr, align 4
  %78 = ptrtoint ptr %71 to i32
  call void @__asan_store2_noabort(i32 %78)
  store i16 %77, ptr %71, align 4
  %79 = load i16, ptr %dst_addr, align 4
  %80 = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 30
  %81 = ptrtoint ptr %80 to i32
  call void @__asan_store2_noabort(i32 %81)
  store i16 %79, ptr %80, align 4
  %82 = ptrtoint ptr %saddr11.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %saddr11.i.i.i.i, align 8
  %sin_addr110.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call93.i, i32 0, i32 30, i32 0, i32 2
  %84 = ptrtoint ptr %sin_addr110.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %83, ptr %sin_addr110.i, align 4
  %refcnt.i.i = getelementptr inbounds %struct.neighbour, ptr %call.i.i, i32 0, i32 6
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !886
  call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #17
  %85 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #17, !srcloc !887
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %85, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.cxgbi_check_route.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !888

if.end5.i.i.i.i.i.cxgbi_check_route.exit_crit_edge: ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_check_route.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef 3) #17
  br label %cxgbi_check_route.exit

if.then.i.i:                                      ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !889
  call void @neigh_destroy(ptr noundef nonnull %call.i.i) #17
  br label %cxgbi_check_route.exit

rel_neigh.i:                                      ; preds = %do.end92.i.rel_neigh.i_crit_edge, %do.end67.i, %do.end52.i, %if.then26.i.rel_neigh.i_crit_edge, %do.end16.i
  %err.0.i = phi i32 [ -101, %do.end16.i ], [ -101, %do.end67.i ], [ -100, %do.end52.i ], [ -101, %if.then26.i.rel_neigh.i_crit_edge ], [ -12, %do.end92.i.rel_neigh.i_crit_edge ]
  %refcnt.i174.i = getelementptr inbounds %struct.neighbour, ptr %call.i.i, i32 0, i32 6
  %call.i.i.i.i.i.i175.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i174.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !886
  call void @llvm.prefetch.p0(ptr %refcnt.i174.i, i32 1, i32 3, i32 1) #17
  %86 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i174.i, ptr %refcnt.i174.i, i32 1, ptr elementtype(i32) %refcnt.i174.i) #17, !srcloc !887
  %asmresult.i.i.i.i.i.i.i176.i = extractvalue { i32, i32, i32 } %86, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i176.i)
  %cmp.i.i.i.i177.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i176.i, 1
  br i1 %cmp.i.i.i.i177.i, label %if.then.i181.i, label %if.end5.i.i.i.i179.i

if.end5.i.i.i.i179.i:                             ; preds = %rel_neigh.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i176.i)
  %.not.i.i.i.i178.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i176.i, 0
  br i1 %.not.i.i.i.i178.i, label %if.end5.i.i.i.i179.i.rel_rt.i_crit_edge, label %if.then10.i.i.i.i180.i, !prof !888

if.end5.i.i.i.i179.i.rel_rt.i_crit_edge:          ; preds = %if.end5.i.i.i.i179.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rel_rt.i

if.then10.i.i.i.i180.i:                           ; preds = %if.end5.i.i.i.i179.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %refcnt.i174.i, i32 noundef 3) #17
  br label %rel_rt.i

if.then.i181.i:                                   ; preds = %rel_neigh.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !889
  call void @neigh_destroy(ptr noundef nonnull %call.i.i) #17
  br label %rel_rt.i

rel_rt.i:                                         ; preds = %if.then.i181.i, %if.then10.i.i.i.i180.i, %if.end5.i.i.i.i179.i.rel_rt.i_crit_edge, %if.end.i.rel_rt.i_crit_edge
  %err.1.i = phi i32 [ -19, %if.end.i.rel_rt.i_crit_edge ], [ %err.0.i, %if.end5.i.i.i.i179.i.rel_rt.i_crit_edge ], [ %err.0.i, %if.then10.i.i.i.i180.i ], [ %err.0.i, %if.then.i181.i ]
  call void @dst_release(ptr noundef nonnull %call11.i.i.i) #17
  br label %err_out.i

err_out.i:                                        ; preds = %rel_rt.i, %do.end.i
  %err.2.i = phi i32 [ %err.1.i, %rel_rt.i ], [ -101, %do.end.i ]
  %87 = inttoptr i32 %err.2.i to ptr
  br label %cxgbi_check_route.exit

cxgbi_check_route.exit:                           ; preds = %err_out.i, %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.cxgbi_check_route.exit_crit_edge
  %retval.0.i = phi ptr [ %87, %err_out.i ], [ %call93.i, %if.end5.i.i.i.i.i.cxgbi_check_route.exit_crit_edge ], [ %call93.i, %if.then10.i.i.i.i.i ], [ %call93.i, %if.then.i.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %port.i) #17
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %fl4.i) #17
  br label %if.end35

if.then23:                                        ; preds = %check_route
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pref_saddr.i) #17
  %88 = call ptr @memset(ptr %pref_saddr.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %port.i166) #17
  %89 = ptrtoint ptr %port.i166 to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 65535, ptr %port.i166, align 4
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %fl.i.i) #17
  %90 = call ptr @memset(ptr %fl.i.i, i32 0, i32 88)
  %91 = ptrtoint ptr %fl.i.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %ifindex.0, ptr %fl.i.i, align 8
  %92 = call ptr @memcpy(ptr %daddr4.i.i, ptr %sin6_addr.i, i32 16)
  %call.i.i.i = call ptr @ip6_route_output_flags(ptr noundef nonnull @init_net, ptr noundef null, ptr noundef nonnull %fl.i.i, i32 noundef 0) #17
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %fl.i.i) #17
  %tobool.not.i167 = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i167, label %do.end.i169, label %if.end.i174

do.end.i169:                                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #19
  %93 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %93)
  %94 = load i16, ptr %sin6_port74.i, align 2
  %conv.i168 = zext i16 %94 to i32
  %call2.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.386, ptr noundef nonnull @.str.387, ptr noundef %sin6_addr.i, i32 noundef %conv.i168) #21
  br label %err_out.i196

if.end.i174:                                      ; preds = %if.then23
  %ops.i.i170 = getelementptr inbounds %struct.dst_entry, ptr %call.i.i.i, i32 0, i32 1
  %95 = ptrtoint ptr %ops.i.i170 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %ops.i.i170, align 4
  %neigh_lookup.i.i171 = getelementptr inbounds %struct.dst_ops, ptr %96, i32 0, i32 14
  %97 = ptrtoint ptr %neigh_lookup.i.i171 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %neigh_lookup.i.i171, align 8
  %call.i.i172 = call ptr %98(ptr noundef nonnull %call.i.i.i, ptr noundef null, ptr noundef %sin6_addr.i) #17
  %cmp.i.i.i173 = icmp ugt ptr %call.i.i172, inttoptr (i32 -4096 to ptr)
  %tobool6.not212.i = icmp eq ptr %call.i.i172, null
  %tobool6.not.i = or i1 %cmp.i.i.i173, %tobool6.not212.i
  br i1 %tobool6.not.i, label %if.end117.thread.i, label %if.end18.i

if.end18.i:                                       ; preds = %if.end.i174
  %dev.i175 = getelementptr inbounds %struct.neighbour, ptr %call.i.i172, i32 0, i32 25
  %99 = ptrtoint ptr %dev.i175 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %dev.i175, align 4
  %flags.i176 = getelementptr inbounds %struct.net_device, ptr %100, i32 0, i32 14
  %101 = ptrtoint ptr %flags.i176 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %flags.i176, align 8
  %and.i177 = and i32 %102, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i177)
  %tobool19.not.i = icmp eq i32 %and.i177, 0
  br i1 %tobool19.not.i, label %if.end18.i.do.end24.i_crit_edge, label %lor.lhs.false.i180

if.end18.i.do.end24.i_crit_edge:                  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end24.i

lor.lhs.false.i180:                               ; preds = %if.end18.i
  %state.i.i178 = getelementptr inbounds %struct.net_device, ptr %100, i32 0, i32 6
  %103 = ptrtoint ptr %state.i.i178 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %state.i.i178, align 4
  %105 = and i32 %104, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %105)
  %tobool.not.i.i179 = icmp eq i32 %105, 0
  br i1 %tobool.not.i.i179, label %if.end28.i, label %lor.lhs.false.i180.do.end24.i_crit_edge

lor.lhs.false.i180.do.end24.i_crit_edge:          ; preds = %lor.lhs.false.i180
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end24.i

do.end24.i:                                       ; preds = %lor.lhs.false.i180.do.end24.i_crit_edge, %if.end18.i.do.end24.i_crit_edge
  %call27.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.359, ptr noundef nonnull @.str.387, ptr noundef %100) #21
  br label %if.then116.i

if.end28.i:                                       ; preds = %lor.lhs.false.i180
  %106 = ptrtoint ptr %sin6_addr.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %sin6_addr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16777217, i32 %107)
  %cmp.i.i = icmp ugt i32 %107, -16777217
  br i1 %cmp.i.i, label %do.end34.i, label %if.end44.i182

do.end34.i:                                       ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #19
  %108 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %108)
  %109 = load i16, ptr %sin6_port74.i, align 2
  %conv40.i = zext i16 %109 to i32
  %call43.i181 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.394, ptr noundef nonnull @.str.387, ptr noundef %sin6_addr.i, i32 noundef %conv40.i, ptr noundef %100) #21
  br label %if.then116.i

if.end44.i182:                                    ; preds = %if.end28.i
  %call45.i = call ptr @cxgbi_device_find_by_netdev(ptr noundef %100, ptr noundef nonnull %port.i166) #17
  %tobool46.not.i = icmp eq ptr %call45.i, null
  br i1 %tobool46.not.i, label %if.end49.i, label %if.end44.i182.do.body63.i_crit_edge

if.end44.i182.do.body63.i_crit_edge:              ; preds = %if.end44.i182
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body63.i

if.end49.i:                                       ; preds = %if.end44.i182
  %call48.i = call fastcc ptr @cxgbi_device_find_by_mac(ptr noundef %100, ptr noundef nonnull %port.i166) #17
  %tobool50.not.i = icmp eq ptr %call48.i, null
  br i1 %tobool50.not.i, label %do.end54.i, label %if.end49.i.do.body63.i_crit_edge

if.end49.i.do.body63.i_crit_edge:                 ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body63.i

do.end54.i:                                       ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #19
  %call61.i183 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.397, ptr noundef nonnull @.str.387, ptr noundef %sin6_addr.i, ptr noundef %100) #21
  br label %if.then116.i

do.body63.i:                                      ; preds = %if.end49.i.do.body63.i_crit_edge, %if.end44.i182.do.body63.i_crit_edge
  %cdev.0201.i = phi ptr [ %call48.i, %if.end49.i.do.body63.i_crit_edge ], [ %call45.i, %if.end44.i182.do.body63.i_crit_edge ]
  %110 = load i32, ptr @dbg_level, align 4
  %and64.i = and i32 %110, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and64.i)
  %tobool65.not.i = icmp eq i32 %and64.i, 0
  br i1 %tobool65.not.i, label %do.body63.i.do.end81.i184_crit_edge, label %do.end69.i

do.body63.i.do.end81.i184_crit_edge:              ; preds = %do.body63.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end81.i184

do.end69.i:                                       ; preds = %do.body63.i
  call void @__sanitizer_cov_trace_pc() #19
  %111 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %sin6_port74.i, align 2
  %conv75.i = zext i16 %112 to i32
  %113 = ptrtoint ptr %port.i166 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %port.i166, align 4
  %call78.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.400, ptr noundef nonnull @.str.387, ptr noundef %sin6_addr.i, i32 noundef %conv75.i, i32 noundef %114, ptr noundef %100, ptr noundef nonnull %cdev.0201.i) #21
  br label %do.end81.i184

do.end81.i184:                                    ; preds = %do.end69.i, %do.body63.i.do.end81.i184_crit_edge
  %call82.i = call fastcc ptr @cxgbi_sock_create(ptr noundef nonnull %cdev.0201.i) #17
  %tobool83.not.i = icmp eq ptr %call82.i, null
  br i1 %tobool83.not.i, label %do.end81.i184.if.then116.i_crit_edge, label %if.end85.i

do.end81.i184.if.then116.i_crit_edge:             ; preds = %do.end81.i184
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then116.i

if.end85.i:                                       ; preds = %do.end81.i184
  %115 = ptrtoint ptr %call82.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr %cdev.0201.i, ptr %call82.i, align 4
  %116 = ptrtoint ptr %port.i166 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %port.i166, align 4
  %conv87.i = trunc i32 %117 to i8
  %port_id.i185 = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 12
  %118 = ptrtoint ptr %port_id.i185 to i32
  call void @__asan_store1_noabort(i32 %118)
  store i8 %conv87.i, ptr %port_id.i185, align 4
  %mtu88.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 4
  %119 = ptrtoint ptr %mtu88.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 0, ptr %mtu88.i, align 4
  %dst89.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 32
  %120 = ptrtoint ptr %dst89.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr %call.i.i.i, ptr %dst89.i, align 4
  %121 = call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i.i.i.i.i = and i32 %121, -16384
  %122 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %122, i32 0, i32 1
  %123 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %124, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #17, !srcloc !891
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i.i185.i = call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i.i185.i, label %if.end85.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end85.i.rcu_read_lock.exit.i.i_crit_edge:      ; preds = %if.end85.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end85.i
  %call1.i.i.i = call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b4.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i, label %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.242, i32 noundef 696, ptr noundef nonnull @.str.243) #17
  br label %rcu_read_lock.exit.i.i

rcu_read_lock.exit.i.i:                           ; preds = %if.then.i.i.i, %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %if.end85.i.rcu_read_lock.exit.i.i_crit_edge
  %from1.i.i = getelementptr inbounds %struct.rt6_info, ptr %call.i.i.i, i32 0, i32 1
  %125 = ptrtoint ptr %from1.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile ptr, ptr %from1.i.i, align 4
  %call.i186.i = call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i186.i)
  %tobool.not.i187.i = icmp eq i32 %call.i186.i, 0
  br i1 %tobool.not.i187.i, label %land.lhs.true.i.i, label %rcu_read_lock.exit.i.i.do.end8.i.i_crit_edge

rcu_read_lock.exit.i.i.do.end8.i.i_crit_edge:     ; preds = %rcu_read_lock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end8.i.i

land.lhs.true.i.i:                                ; preds = %rcu_read_lock.exit.i.i
  %call3.i.i = call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i.do.end8.i.i_crit_edge, label %land.lhs.true5.i.i

land.lhs.true.i.i.do.end8.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end8.i.i

land.lhs.true5.i.i:                               ; preds = %land.lhs.true.i.i
  %.b16.i.i = load i1, ptr @rt6_get_prefsrc.__warned, align 1
  br i1 %.b16.i.i, label %land.lhs.true5.i.i.do.end8.i.i_crit_edge, label %if.then.i.i186

land.lhs.true5.i.i.do.end8.i.i_crit_edge:         ; preds = %land.lhs.true5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end8.i.i

if.then.i.i186:                                   ; preds = %land.lhs.true5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rt6_get_prefsrc.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.405, i32 noundef 475, ptr noundef nonnull @.str.406) #17
  br label %do.end8.i.i

do.end8.i.i:                                      ; preds = %if.then.i.i186, %land.lhs.true5.i.i.do.end8.i.i_crit_edge, %land.lhs.true.i.i.do.end8.i.i_crit_edge, %rcu_read_lock.exit.i.i.do.end8.i.i_crit_edge
  %tobool10.not.i.i = icmp eq ptr %126, null
  br i1 %tobool10.not.i.i, label %if.else.i.i, label %if.then11.i.i

if.then11.i.i:                                    ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %fib6_prefsrc.i.i = getelementptr inbounds %struct.fib6_info, ptr %126, i32 0, i32 11
  %127 = call ptr @memcpy(ptr %pref_saddr.i, ptr %fib6_prefsrc.i.i, i32 16)
  br label %if.end13.i.i

if.else.i.i:                                      ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %128 = call ptr @memset(ptr %pref_saddr.i, i32 0, i32 16)
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %if.else.i.i, %if.then11.i.i
  %call.i17.i.i = call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i17.i.i, label %if.end13.i.i.rt6_get_prefsrc.exit.i_crit_edge, label %land.lhs.true.i20.i.i

if.end13.i.i.rt6_get_prefsrc.exit.i_crit_edge:    ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rt6_get_prefsrc.exit.i

land.lhs.true.i20.i.i:                            ; preds = %if.end13.i.i
  %call1.i18.i.i = call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i18.i.i)
  %tobool.not.i19.i.i = icmp eq i32 %call1.i18.i.i, 0
  br i1 %tobool.not.i19.i.i, label %land.lhs.true.i20.i.i.rt6_get_prefsrc.exit.i_crit_edge, label %land.lhs.true2.i22.i.i

land.lhs.true.i20.i.i.rt6_get_prefsrc.exit.i_crit_edge: ; preds = %land.lhs.true.i20.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rt6_get_prefsrc.exit.i

land.lhs.true2.i22.i.i:                           ; preds = %land.lhs.true.i20.i.i
  %.b4.i21.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i21.i.i, label %land.lhs.true2.i22.i.i.rt6_get_prefsrc.exit.i_crit_edge, label %if.then.i23.i.i

land.lhs.true2.i22.i.i.rt6_get_prefsrc.exit.i_crit_edge: ; preds = %land.lhs.true2.i22.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rt6_get_prefsrc.exit.i

if.then.i23.i.i:                                  ; preds = %land.lhs.true2.i22.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.242, i32 noundef 724, ptr noundef nonnull @.str.244) #17
  br label %rt6_get_prefsrc.exit.i

rt6_get_prefsrc.exit.i:                           ; preds = %if.then.i23.i.i, %land.lhs.true2.i22.i.i.rt6_get_prefsrc.exit.i_crit_edge, %land.lhs.true.i20.i.i.rt6_get_prefsrc.exit.i_crit_edge, %if.end13.i.i.rt6_get_prefsrc.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #17, !srcloc !892
  %129 = call i32 @llvm.read_register.i32(metadata !876) #17
  %and.i.i.i.i.i24.i.i = and i32 %129, -16384
  %130 = inttoptr i32 %and.i.i.i.i.i24.i.i to ptr
  %preempt_count.i.i.i.i25.i.i = getelementptr inbounds %struct.thread_info, ptr %130, i32 0, i32 1
  %131 = ptrtoint ptr %preempt_count.i.i.i.i25.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load volatile i32, ptr %preempt_count.i.i.i.i25.i.i, align 4
  %sub.i.i.i.i.i = add i32 %132, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i.i.i25.i.i, align 4
  call void @rcu_read_unlock_strict() #17
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  %133 = ptrtoint ptr %pref_saddr.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %pref_saddr.i, align 4
  %135 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %1, align 4
  %or.i.i = or i32 %136, %134
  %137 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %2, align 4
  %or5.i.i = or i32 %or.i.i, %138
  %139 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %3, align 4
  %or8.i.i = or i32 %or5.i.i, %140
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or8.i.i)
  %cmp.i188.i = icmp eq i32 %or8.i.i, 0
  br i1 %cmp.i188.i, label %if.then91.i, label %rt6_get_prefsrc.exit.i.if.end106.i_crit_edge

rt6_get_prefsrc.exit.i.if.end106.i_crit_edge:     ; preds = %rt6_get_prefsrc.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end106.i

if.then91.i:                                      ; preds = %rt6_get_prefsrc.exit.i
  %rt6i_idev.i.i = getelementptr inbounds %struct.rt6_info, ptr %call.i.i.i, i32 0, i32 6
  %141 = ptrtoint ptr %rt6i_idev.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %rt6i_idev.i.i, align 4
  %tobool93.not.i = icmp eq ptr %142, null
  br i1 %tobool93.not.i, label %if.then91.i.cond.end.i_crit_edge, label %cond.true.i

if.then91.i.cond.end.i_crit_edge:                 ; preds = %if.then91.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end.i

cond.true.i:                                      ; preds = %if.then91.i
  call void @__sanitizer_cov_trace_pc() #19
  %143 = ptrtoint ptr %142 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %142, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then91.i.cond.end.i_crit_edge
  %cond.i = phi ptr [ %144, %cond.true.i ], [ null, %if.then91.i.cond.end.i_crit_edge ]
  %call96.i = call i32 @ipv6_dev_get_saddr(ptr noundef nonnull @init_net, ptr noundef %cond.i, ptr noundef %sin6_addr.i, i32 noundef 0, ptr noundef nonnull %pref_saddr.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call96.i)
  %tobool97.not.i = icmp eq i32 %call96.i, 0
  br i1 %tobool97.not.i, label %cond.end.i.if.end106.i_crit_edge, label %cleanup.i

cond.end.i.if.end106.i_crit_edge:                 ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end106.i

cleanup.i:                                        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %call104.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.403, ptr noundef nonnull @.str.387, ptr noundef %sin6_addr.i) #21
  br label %if.then116.i

if.end106.i:                                      ; preds = %cond.end.i.if.end106.i_crit_edge, %rt6_get_prefsrc.exit.i.if.end106.i_crit_edge
  %csk_family.i187 = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 29
  %145 = ptrtoint ptr %csk_family.i187 to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 10, ptr %csk_family.i187, align 4
  %146 = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 31
  %sin6_addr107.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 31, i32 0, i32 3
  %147 = call ptr @memcpy(ptr %sin6_addr107.i, ptr %sin6_addr.i, i32 16)
  %148 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %148)
  %149 = load i16, ptr %sin6_port74.i, align 2
  %sin6_port110.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 31, i32 0, i32 1
  %150 = ptrtoint ptr %sin6_port110.i to i32
  call void @__asan_store2_noabort(i32 %150)
  store i16 %149, ptr %sin6_port110.i, align 2
  %151 = ptrtoint ptr %dst_addr to i32
  call void @__asan_load2_noabort(i32 %151)
  %152 = load i16, ptr %dst_addr, align 4
  %153 = ptrtoint ptr %146 to i32
  call void @__asan_store2_noabort(i32 %153)
  store i16 %152, ptr %146, align 4
  %154 = load i16, ptr %dst_addr, align 4
  %155 = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 30
  %156 = ptrtoint ptr %155 to i32
  call void @__asan_store2_noabort(i32 %156)
  store i16 %154, ptr %155, align 4
  %sin6_addr114.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call82.i, i32 0, i32 30, i32 0, i32 3
  %157 = call ptr @memcpy(ptr %sin6_addr114.i, ptr %pref_saddr.i, i32 16)
  %refcnt.i.i188 = getelementptr inbounds %struct.neighbour, ptr %call.i.i172, i32 0, i32 6
  %call.i.i.i.i.i.i.i189 = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i188, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !886
  call void @llvm.prefetch.p0(ptr %refcnt.i.i188, i32 1, i32 3, i32 1) #17
  %158 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i188, ptr %refcnt.i.i188, i32 1, ptr elementtype(i32) %refcnt.i.i188) #17, !srcloc !887
  %asmresult.i.i.i.i.i.i.i.i190 = extractvalue { i32, i32, i32 } %158, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i190)
  %cmp.i.i.i.i.i191 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i190, 1
  br i1 %cmp.i.i.i.i.i191, label %if.then.i189.i, label %if.end5.i.i.i.i.i193

if.end5.i.i.i.i.i193:                             ; preds = %if.end106.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i190)
  %.not.i.i.i.i.i192 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i190, 0
  br i1 %.not.i.i.i.i.i192, label %if.end5.i.i.i.i.i193.cxgbi_check_route6.exit_crit_edge, label %if.then10.i.i.i.i.i194, !prof !888

if.end5.i.i.i.i.i193.cxgbi_check_route6.exit_crit_edge: ; preds = %if.end5.i.i.i.i.i193
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_check_route6.exit

if.then10.i.i.i.i.i194:                           ; preds = %if.end5.i.i.i.i.i193
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %refcnt.i.i188, i32 noundef 3) #17
  br label %cxgbi_check_route6.exit

if.then.i189.i:                                   ; preds = %if.end106.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !889
  call void @neigh_destroy(ptr noundef nonnull %call.i.i172) #17
  br label %cxgbi_check_route6.exit

if.end117.thread.i:                               ; preds = %if.end.i174
  call void @__sanitizer_cov_trace_pc() #19
  %159 = ptrtoint ptr %sin6_port74.i to i32
  call void @__asan_load2_noabort(i32 %159)
  %160 = load i16, ptr %sin6_port74.i, align 2
  %conv16.i = zext i16 %160 to i32
  %call17.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.389, ptr noundef nonnull @.str.387, ptr noundef %sin6_addr.i, i32 noundef %conv16.i) #21
  call void @dst_release(ptr noundef nonnull %call.i.i.i) #17
  br label %err_out.i196

if.then116.i:                                     ; preds = %cleanup.i, %do.end81.i184.if.then116.i_crit_edge, %do.end54.i, %do.end34.i, %do.end24.i
  %csk.0.ph.i = phi ptr [ null, %do.end81.i184.if.then116.i_crit_edge ], [ null, %do.end24.i ], [ null, %do.end54.i ], [ %call82.i, %cleanup.i ], [ null, %do.end34.i ]
  %err.0.ph.i = phi i32 [ -12, %do.end81.i184.if.then116.i_crit_edge ], [ -100, %do.end24.i ], [ -101, %do.end54.i ], [ %call96.i, %cleanup.i ], [ -101, %do.end34.i ]
  %refcnt.i190.i = getelementptr inbounds %struct.neighbour, ptr %call.i.i172, i32 0, i32 6
  %call.i.i.i.i.i.i191.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i190.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !886
  call void @llvm.prefetch.p0(ptr %refcnt.i190.i, i32 1, i32 3, i32 1) #17
  %161 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i190.i, ptr %refcnt.i190.i, i32 1, ptr elementtype(i32) %refcnt.i190.i) #17, !srcloc !887
  %asmresult.i.i.i.i.i.i.i192.i = extractvalue { i32, i32, i32 } %161, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i192.i)
  %cmp.i.i.i.i193.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i192.i, 1
  br i1 %cmp.i.i.i.i193.i, label %if.then.i197.i, label %if.end5.i.i.i.i195.i

if.end5.i.i.i.i195.i:                             ; preds = %if.then116.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i192.i)
  %.not.i.i.i.i194.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i192.i, 0
  br i1 %.not.i.i.i.i194.i, label %if.end5.i.i.i.i195.i.if.end117.i_crit_edge, label %if.then10.i.i.i.i196.i, !prof !888

if.end5.i.i.i.i195.i.if.end117.i_crit_edge:       ; preds = %if.end5.i.i.i.i195.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end117.i

if.then10.i.i.i.i196.i:                           ; preds = %if.end5.i.i.i.i195.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %refcnt.i190.i, i32 noundef 3) #17
  br label %if.end117.i

if.then.i197.i:                                   ; preds = %if.then116.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !889
  call void @neigh_destroy(ptr noundef nonnull %call.i.i172) #17
  br label %if.end117.i

if.end117.i:                                      ; preds = %if.then.i197.i, %if.then10.i.i.i.i196.i, %if.end5.i.i.i.i195.i.if.end117.i_crit_edge
  call void @dst_release(ptr noundef nonnull %call.i.i.i) #17
  %tobool118.not.i = icmp eq ptr %csk.0.ph.i, null
  br i1 %tobool118.not.i, label %if.end117.i.err_out.i196_crit_edge, label %if.then119.i

if.end117.i.err_out.i196_crit_edge:               ; preds = %if.end117.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_out.i196

if.then119.i:                                     ; preds = %if.end117.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @cxgbi_sock_closed(ptr noundef nonnull %csk.0.ph.i) #17
  br label %err_out.i196

err_out.i196:                                     ; preds = %if.then119.i, %if.end117.i.err_out.i196_crit_edge, %if.end117.thread.i, %do.end.i169
  %err.1.i195 = phi i32 [ %err.0.ph.i, %if.then119.i ], [ %err.0.ph.i, %if.end117.i.err_out.i196_crit_edge ], [ -101, %do.end.i169 ], [ -101, %if.end117.thread.i ]
  %162 = inttoptr i32 %err.1.i195 to ptr
  br label %cxgbi_check_route6.exit

cxgbi_check_route6.exit:                          ; preds = %err_out.i196, %if.then.i189.i, %if.then10.i.i.i.i.i194, %if.end5.i.i.i.i.i193.cxgbi_check_route6.exit_crit_edge
  %retval.0.i197 = phi ptr [ %162, %err_out.i196 ], [ %call82.i, %if.end5.i.i.i.i.i193.cxgbi_check_route6.exit_crit_edge ], [ %call82.i, %if.then10.i.i.i.i.i194 ], [ %call82.i, %if.then.i189.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %port.i166) #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pref_saddr.i) #17
  br label %if.end35

do.end28:                                         ; preds = %check_route
  call void @__sanitizer_cov_trace_pc() #19
  %conv = zext i16 %6 to i32
  %call32 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.208, ptr noundef nonnull @.str.203, i32 noundef %conv) #21
  br label %cleanup

if.end35:                                         ; preds = %cxgbi_check_route6.exit, %cxgbi_check_route.exit
  %csk.0 = phi ptr [ %retval.0.i, %cxgbi_check_route.exit ], [ %retval.0.i197, %cxgbi_check_route6.exit ]
  %cmp.i = icmp ugt ptr %csk.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end35.cleanup_crit_edge, label %if.end38

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end38:                                         ; preds = %if.end35
  %163 = load i32, ptr @dbg_level, align 4
  %and.i198 = and i32 %163, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i198)
  %tobool.not.i199 = icmp eq i32 %and.i198, 0
  br i1 %tobool.not.i199, label %if.end38.do.end3.i_crit_edge, label %do.end.i201

if.end38.do.end3.i_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i

do.end.i201:                                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #19
  %refcnt.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 27
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #17
  %164 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load volatile i32, ptr %refcnt.i, align 4
  %call2.i200 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254, ptr noundef nonnull @.str.255, ptr noundef nonnull @.str.203, ptr noundef %csk.0, i32 noundef %165) #21
  br label %do.end3.i

do.end3.i:                                        ; preds = %do.end.i201, %if.end38.do.end3.i_crit_edge
  %refcnt4.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 27
  %call.i.i.i.i.i.i.i202 = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #17
  %166 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #17, !srcloc !894
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %166, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !895

do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %do.end3.i
  %add.i.i.i.i.i203 = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %167 = or i32 %add.i.i.i.i.i203, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %167)
  %.not.i.i.i.i.i204 = icmp sgt i32 %167, -1
  br i1 %.not.i.i.i.i.i204, label %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__cxgbi_sock_get.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %do.end3.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcnt4.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %__cxgbi_sock_get.exit

__cxgbi_sock_get.exit:                            ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.__cxgbi_sock_get.exit_crit_edge
  %168 = ptrtoint ptr %csk.0 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %csk.0, align 4
  %hbas = getelementptr inbounds %struct.cxgbi_device, ptr %169, i32 0, i32 5
  %170 = ptrtoint ptr %hbas to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %hbas, align 4
  %port_id = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 12
  %172 = ptrtoint ptr %port_id to i32
  call void @__asan_load1_noabort(i32 %172)
  %173 = load i8, ptr %port_id, align 4
  %idxprom = zext i8 %173 to i32
  %arrayidx = getelementptr ptr, ptr %171, i32 %idxprom
  %174 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %arrayidx, align 4
  br i1 %tobool39.not, label %__cxgbi_sock_get.exit.if.end70_crit_edge, label %if.else41

__cxgbi_sock_get.exit.if.end70_crit_edge:         ; preds = %__cxgbi_sock_get.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end70

if.else41:                                        ; preds = %__cxgbi_sock_get.exit
  %cmp47.not = icmp eq ptr %hba.0, %175
  br i1 %cmp47.not, label %if.else41.if.end70_crit_edge, label %if.then49

if.else41.if.end70_crit_edge:                     ; preds = %if.else41
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end70

if.then49:                                        ; preds = %if.else41
  %176 = ptrtoint ptr %hba.0 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %hba.0, align 4
  %ifindex50 = getelementptr inbounds %struct.net_device, ptr %177, i32 0, i32 17
  %178 = ptrtoint ptr %ifindex50 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %ifindex50, align 4
  %cmp51.not = icmp eq i32 %ifindex.0, %179
  br i1 %cmp51.not, label %do.end59, label %if.then53

if.then53:                                        ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.203, ptr noundef %csk.0)
  call void @cxgbi_sock_closed(ptr noundef %csk.0)
  %180 = ptrtoint ptr %hba.0 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %hba.0, align 4
  %ifindex55 = getelementptr inbounds %struct.net_device, ptr %181, i32 0, i32 17
  %182 = ptrtoint ptr %ifindex55 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %ifindex55, align 4
  br label %check_route

do.end59:                                         ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #19
  %idxprom45.le = zext i8 %173 to i32
  %host_no = getelementptr inbounds %struct.Scsi_Host, ptr %shost, i32 0, i32 17
  %184 = ptrtoint ptr %host_no to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %host_no, align 4
  %call68 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.211, ptr noundef nonnull @.str.203, i32 noundef %185, ptr noundef nonnull %hba.0, ptr noundef %175, i32 noundef %idxprom45.le) #21
  br label %release_conn

if.end70:                                         ; preds = %if.else41.if.end70_crit_edge, %__cxgbi_sock_get.exit.if.end70_crit_edge
  %hba.1 = phi ptr [ %175, %__cxgbi_sock_get.exit.if.end70_crit_edge ], [ %hba.0, %if.else41.if.end70_crit_edge ]
  %186 = ptrtoint ptr %csk.0 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %csk.0, align 4
  %pmap2.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 21
  %188 = ptrtoint ptr %pmap2.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %pmap2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %189)
  %tobool.not.i205 = icmp eq i32 %189, 0
  br i1 %tobool.not.i205, label %do.end.i208, label %if.end6.i

do.end.i208:                                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #19
  %port_id.i206 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 12
  %190 = ptrtoint ptr %port_id.i206 to i32
  call void @__asan_load1_noabort(i32 %190)
  %191 = load i8, ptr %port_id.i206, align 4
  %conv.i207 = zext i8 %191 to i32
  %ports.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 3
  %192 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %ports.i, align 4
  %arrayidx.i = getelementptr ptr, ptr %193, i32 %conv.i207
  %194 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %arrayidx.i, align 4
  %call.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.407, ptr noundef nonnull @.str.408, ptr noundef %187, i32 noundef %conv.i207, ptr noundef %195) #21
  br label %release_conn

if.end6.i:                                        ; preds = %if.end70
  %port.0.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 30, i32 0, i32 1
  %196 = ptrtoint ptr %port.0.i to i32
  call void @__asan_load2_noabort(i32 %196)
  %197 = load i16, ptr %port.0.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %197)
  %tobool7.not.i = icmp eq i16 %197, 0
  br i1 %tobool7.not.i, label %if.end15.i, label %do.end11.i

do.end11.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv13.i = zext i16 %197 to i32
  %call14.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.410, ptr noundef nonnull @.str.408, i32 noundef %conv13.i) #21
  br label %release_conn

if.end15.i:                                       ; preds = %if.end6.i
  %lock.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 21, i32 3
  call void @_raw_spin_lock_bh(ptr noundef %lock.i) #17
  %used.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 21, i32 1
  %198 = ptrtoint ptr %used.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %used.i, align 4
  %200 = ptrtoint ptr %pmap2.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %pmap2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %199, i32 %201)
  %cmp17.not.i = icmp ult i32 %199, %201
  br i1 %cmp17.not.i, label %if.end34.i, label %if.then19.i

if.then19.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  %port_id25.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 12
  %202 = ptrtoint ptr %port_id25.i to i32
  call void @__asan_load1_noabort(i32 %202)
  %203 = load i8, ptr %port_id25.i, align 4
  %conv26.i = zext i8 %203 to i32
  %ports27.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 3
  %204 = ptrtoint ptr %ports27.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %ports27.i, align 4
  %arrayidx30.i = getelementptr ptr, ptr %205, i32 %conv26.i
  %206 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %arrayidx30.i, align 4
  %call33.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.413, ptr noundef nonnull @.str.408, ptr noundef %187, i32 noundef %conv26.i, ptr noundef %207) #21
  br label %release_conn

if.end34.i:                                       ; preds = %if.end15.i
  %next.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 21, i32 4
  %208 = ptrtoint ptr %next.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %next.i, align 4
  %port_csk.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 21, i32 5
  %210 = ptrtoint ptr %port_csk.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %port_csk.i, align 4
  br label %do.body35.i

do.body35.i:                                      ; preds = %do.cond76.i.do.body35.i_crit_edge, %if.end34.i
  %idx.0.i = phi i32 [ %209, %if.end34.i ], [ %spec.store.select.i, %do.cond76.i.do.body35.i_crit_edge ]
  %inc.i = add i32 %idx.0.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %201)
  %cmp37.not.i = icmp ult i32 %inc.i, %201
  %spec.store.select.i = select i1 %cmp37.not.i, i32 %inc.i, i32 0
  %arrayidx41.i = getelementptr ptr, ptr %211, i32 %spec.store.select.i
  %212 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %arrayidx41.i, align 4
  %tobool42.not.i = icmp eq ptr %213, null
  br i1 %tobool42.not.i, label %if.then43.i, label %do.cond76.i

if.then43.i:                                      ; preds = %do.body35.i
  %inc45.i = add i32 %199, 1
  %214 = ptrtoint ptr %used.i to i32
  call void @__asan_store4_noabort(i32 %214)
  store i32 %inc45.i, ptr %used.i, align 4
  %sport_base.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 21, i32 2
  %215 = ptrtoint ptr %sport_base.i to i32
  call void @__asan_load2_noabort(i32 %215)
  %216 = load i16, ptr %sport_base.i, align 4
  %217 = trunc i32 %spec.store.select.i to i16
  %conv47.i = add i16 %216, %217
  %218 = ptrtoint ptr %port.0.i to i32
  call void @__asan_store2_noabort(i32 %218)
  store i16 %conv47.i, ptr %port.0.i, align 2
  %219 = ptrtoint ptr %next.i to i32
  call void @__asan_store4_noabort(i32 %219)
  store i32 %spec.store.select.i, ptr %next.i, align 4
  %220 = ptrtoint ptr %port_csk.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %port_csk.i, align 4
  %arrayidx50.i = getelementptr ptr, ptr %221, i32 %spec.store.select.i
  %222 = ptrtoint ptr %arrayidx50.i to i32
  call void @__asan_store4_noabort(i32 %222)
  store ptr %csk.0, ptr %arrayidx50.i, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  %223 = load i32, ptr @dbg_level, align 4
  %and.i.i = and i32 %223, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i209 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i209, label %if.then43.i.do.end3.i.i_crit_edge, label %do.end.i.i

if.then43.i.do.end3.i.i_crit_edge:                ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i.i

do.end.i.i:                                       ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt4.i, i32 noundef 4) #17
  %224 = ptrtoint ptr %refcnt4.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load volatile i32, ptr %refcnt4.i, align 4
  %call2.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254, ptr noundef nonnull @.str.255, ptr noundef nonnull @.str.408, ptr noundef %csk.0, i32 noundef %225) #21
  br label %do.end3.i.i

do.end3.i.i:                                      ; preds = %do.end.i.i, %if.then43.i.do.end3.i.i_crit_edge
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #17
  %226 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #17, !srcloc !894
  %asmresult.i.i.i.i.i.i.i.i211 = extractvalue { i32, i32, i32 } %226, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i211)
  %tobool1.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i211, 0
  br i1 %tobool1.not.i.i.i.i.i.i, label %do.end3.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i.i, !prof !895

do.end3.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %do.end3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i:                              ; preds = %do.end3.i.i
  %add.i.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i.i211, 1
  %227 = or i32 %add.i.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i.i211
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %227)
  %.not.i.i.i.i.i.i = icmp sgt i32 %227, -1
  br i1 %.not.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.__cxgbi_sock_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i.__cxgbi_sock_get.exit.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__cxgbi_sock_get.exit.i

if.end15.sink.split.i.i.i.i.i.i:                  ; preds = %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, %do.end3.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i.i = phi i32 [ 2, %do.end3.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcnt4.i, i32 noundef %.sink.i.i.i.i.i.i) #17
  br label %__cxgbi_sock_get.exit.i

__cxgbi_sock_get.exit.i:                          ; preds = %if.end15.sink.split.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.__cxgbi_sock_get.exit.i_crit_edge
  %228 = load i32, ptr @dbg_level, align 4
  %and.i212 = and i32 %228, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i212)
  %tobool53.not.i = icmp eq i32 %and.i212, 0
  br i1 %tobool53.not.i, label %__cxgbi_sock_get.exit.i.if.end74_crit_edge, label %do.end57.i

__cxgbi_sock_get.exit.i.if.end74_crit_edge:       ; preds = %__cxgbi_sock_get.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end74

do.end57.i:                                       ; preds = %__cxgbi_sock_get.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %port_id59.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 12
  %229 = ptrtoint ptr %port_id59.i to i32
  call void @__asan_load1_noabort(i32 %229)
  %230 = load i8, ptr %port_id59.i, align 4
  %conv60.i = zext i8 %230 to i32
  %ports61.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 3
  %231 = ptrtoint ptr %ports61.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %ports61.i, align 4
  %arrayidx64.i = getelementptr ptr, ptr %232, i32 %conv60.i
  %233 = ptrtoint ptr %arrayidx64.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %arrayidx64.i, align 4
  %235 = ptrtoint ptr %sport_base.i to i32
  call void @__asan_load2_noabort(i32 %235)
  %236 = load i16, ptr %sport_base.i, align 4
  %conv68.i = zext i16 %236 to i32
  %add69.i = add i32 %spec.store.select.i, %conv68.i
  %237 = ptrtoint ptr %next.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %next.i, align 4
  %call71.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.416, ptr noundef nonnull @.str.408, ptr noundef %187, i32 noundef %conv60.i, ptr noundef %234, i32 noundef %add69.i, i32 noundef %238) #21
  br label %if.end74

do.cond76.i:                                      ; preds = %do.body35.i
  %cmp77.not.i = icmp eq i32 %spec.store.select.i, %209
  br i1 %cmp77.not.i, label %do.end79.i, label %do.cond76.i.do.body35.i_crit_edge

do.cond76.i.do.body35.i_crit_edge:                ; preds = %do.cond76.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body35.i

do.end79.i:                                       ; preds = %do.cond76.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  %port_id85.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 12
  %239 = ptrtoint ptr %port_id85.i to i32
  call void @__asan_load1_noabort(i32 %239)
  %240 = load i8, ptr %port_id85.i, align 4
  %conv86.i213 = zext i8 %240 to i32
  %ports87.i = getelementptr inbounds %struct.cxgbi_device, ptr %187, i32 0, i32 3
  %241 = ptrtoint ptr %ports87.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %ports87.i, align 4
  %arrayidx90.i = getelementptr ptr, ptr %242, i32 %conv86.i213
  %243 = ptrtoint ptr %arrayidx90.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %arrayidx90.i, align 4
  %245 = ptrtoint ptr %next.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %next.i, align 4
  %call94.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.419, ptr noundef nonnull @.str.408, ptr noundef %187, i32 noundef %conv86.i213, ptr noundef %244, i32 noundef %246) #21
  br label %release_conn

if.end74:                                         ; preds = %do.end57.i, %__cxgbi_sock_get.exit.i.if.end74_crit_edge
  %247 = load i32, ptr @dbg_level, align 4
  %and.i216 = and i32 %247, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i216)
  %tobool.not.i217 = icmp eq i32 %and.i216, 0
  br i1 %tobool.not.i217, label %if.end74.cxgbi_sock_set_state.exit_crit_edge, label %do.end.i220

if.end74.cxgbi_sock_set_state.exit_crit_edge:     ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_state.exit

do.end.i220:                                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #19
  %state2.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 28
  %248 = ptrtoint ptr %state2.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %state2.i, align 4
  %flags.i218 = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 3
  %250 = ptrtoint ptr %flags.i218 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %flags.i218, align 4
  %call.i219 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %csk.0, i32 noundef %249, i32 noundef %251, i32 noundef 1) #21
  br label %cxgbi_sock_set_state.exit

cxgbi_sock_set_state.exit:                        ; preds = %do.end.i220, %if.end74.cxgbi_sock_set_state.exit_crit_edge
  %state4.i = getelementptr inbounds %struct.cxgbi_sock, ptr %csk.0, i32 0, i32 28
  %252 = ptrtoint ptr %state4.i to i32
  call void @__asan_store4_noabort(i32 %252)
  store i32 1, ptr %state4.i, align 4
  %253 = ptrtoint ptr %csk.0 to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %csk.0, align 4
  %csk_init_act_open = getelementptr inbounds %struct.cxgbi_device, ptr %254, i32 0, i32 35
  %255 = ptrtoint ptr %csk_init_act_open to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %csk_init_act_open, align 4
  %call76 = call i32 %256(ptr noundef %csk.0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call76)
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %if.end79, label %cxgbi_sock_set_state.exit.release_conn_crit_edge

cxgbi_sock_set_state.exit.release_conn_crit_edge: ; preds = %cxgbi_sock_set_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %release_conn

if.end79:                                         ; preds = %cxgbi_sock_set_state.exit
  %257 = ptrtoint ptr %state4.i to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %state4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %258)
  %cmp.i222 = icmp ult i32 %258, 4
  br i1 %cmp.i222, label %if.end88, label %if.then82

if.then82:                                        ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #19
  %call87 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.214, ptr noundef nonnull @.str.203, ptr noundef %csk.0) #21
  br label %release_conn

if.end88:                                         ; preds = %if.end79
  %call89 = call ptr @iscsi_create_endpoint(i32 noundef 12) #17
  %tobool90.not = icmp eq ptr %call89, null
  br i1 %tobool90.not, label %if.then91, label %if.end97

if.then91:                                        ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #19
  %call96 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.217, ptr noundef nonnull @.str.203) #21
  br label %release_conn

if.end97:                                         ; preds = %if.end88
  %259 = ptrtoint ptr %call89 to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load ptr, ptr %call89, align 8
  %csk98 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %260, i32 0, i32 2
  %261 = ptrtoint ptr %csk98 to i32
  call void @__asan_store4_noabort(i32 %261)
  store ptr %csk.0, ptr %csk98, align 4
  %chba = getelementptr inbounds %struct.cxgbi_endpoint, ptr %260, i32 0, i32 1
  %262 = ptrtoint ptr %chba to i32
  call void @__asan_store4_noabort(i32 %262)
  store ptr %hba.1, ptr %chba, align 4
  %263 = load i32, ptr @dbg_level, align 4
  %and100 = and i32 %263, 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and100)
  %tobool101.not = icmp eq i32 %and100, 0
  br i1 %tobool101.not, label %if.end97.cleanup_crit_edge, label %do.end105

if.end97.cleanup_crit_edge:                       ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end105:                                        ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #19
  %264 = ptrtoint ptr %hba.1 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %hba.1, align 4
  %call108 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.220, ptr noundef nonnull @.str.203, ptr noundef nonnull %call89, ptr noundef %260, ptr noundef %csk.0, ptr noundef %hba.1, ptr noundef %265) #21
  br label %cleanup

release_conn:                                     ; preds = %if.then91, %if.then82, %cxgbi_sock_set_state.exit.release_conn_crit_edge, %do.end79.i, %if.then19.i, %do.end11.i, %do.end.i208, %do.end59
  %err.0 = phi i32 [ -28, %do.end59 ], [ %call76, %cxgbi_sock_set_state.exit.release_conn_crit_edge ], [ -28, %if.then82 ], [ -12, %if.then91 ], [ -99, %do.end.i208 ], [ -99, %do.end79.i ], [ -99, %if.then19.i ], [ -98, %do.end11.i ]
  call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.203, ptr noundef %csk.0)
  call void @cxgbi_sock_closed(ptr noundef %csk.0)
  br label %err_out

err_out:                                          ; preds = %release_conn, %do.end11
  %err.1 = phi i32 [ %err.0, %release_conn ], [ -22, %do.end11 ]
  %266 = inttoptr i32 %err.1 to ptr
  br label %cleanup

cleanup:                                          ; preds = %err_out, %do.end105, %if.end97.cleanup_crit_edge, %if.end35.cleanup_crit_edge, %do.end28
  %retval.0 = phi ptr [ %266, %err_out ], [ inttoptr (i32 -97 to ptr), %do.end28 ], [ %call89, %do.end105 ], [ %call89, %if.end97.cleanup_crit_edge ], [ %csk.0, %if.end35.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @iscsi_create_endpoint(i32 noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @cxgbi_ep_poll(ptr nocapture noundef readonly %ep, i32 %timeout_ms) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ep to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ep, align 8
  %csk1 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %csk1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %csk1, align 4
  %state.i = getelementptr inbounds %struct.cxgbi_sock, ptr %3, i32 0, i32 28
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %5)
  %cmp.i.not = icmp eq i32 %5, 3
  %. = zext i1 %cmp.i.not to i32
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_ep_disconnect(ptr noundef %ep) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ep to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ep, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %csk2 = getelementptr inbounds %struct.cxgbi_endpoint, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %csk2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %csk2, align 4
  %6 = load i32, ptr @dbg_level, align 4
  %and = and i32 %6, 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end5_crit_edge, label %do.end

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end5

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %state = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 28
  %7 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %state, align 4
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 3
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.222, ptr noundef nonnull @.str.223, ptr noundef %ep, ptr noundef %1, ptr noundef %3, ptr noundef %5, i32 noundef %8, i32 noundef %10) #21
  br label %do.end5

do.end5:                                          ; preds = %do.end, %entry.do.end5_crit_edge
  %tobool6.not = icmp eq ptr %3, null
  br i1 %tobool6.not, label %do.end5.if.end12_crit_edge, label %land.lhs.true

do.end5.if.end12_crit_edge:                       ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

land.lhs.true:                                    ; preds = %do.end5
  %iconn = getelementptr inbounds %struct.cxgbi_conn, ptr %3, i32 0, i32 1
  %11 = ptrtoint ptr %iconn to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %iconn, align 4
  %tobool7.not = icmp eq ptr %12, null
  br i1 %tobool7.not, label %land.lhs.true.if.end12_crit_edge, label %if.then8

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then8:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %callback_lock = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 38
  tail call void @_raw_write_lock_bh(ptr noundef %callback_lock) #17
  %13 = ptrtoint ptr %csk2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %csk2, align 4
  %user_data = getelementptr inbounds %struct.cxgbi_sock, ptr %14, i32 0, i32 39
  %15 = ptrtoint ptr %user_data to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %user_data, align 4
  %16 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %3, align 4
  tail call void @_raw_write_unlock_bh(ptr noundef %callback_lock) #17
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %land.lhs.true.if.end12_crit_edge, %do.end5.if.end12_crit_edge
  tail call void @iscsi_destroy_endpoint(ptr noundef %ep) #17
  %state13 = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 28
  %17 = ptrtoint ptr %state13 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %state13, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %18)
  %cmp = icmp ugt i32 %18, 2
  br i1 %cmp, label %if.then16, label %if.else, !prof !888

if.then16:                                        ; preds = %if.end12
  %19 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %19, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then16.do.end3.i_crit_edge, label %do.end.i

if.then16.do.end3.i_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end3.i

do.end.i:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #19
  %flags.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i, align 4
  %tid.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 1
  %22 = ptrtoint ptr %tid.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %tid.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41, ptr noundef nonnull @.str.421, ptr noundef %5, i32 noundef %18, i32 noundef %21, i32 noundef %23) #21
  br label %do.end3.i

do.end3.i:                                        ; preds = %do.end.i, %if.then16.do.end3.i_crit_edge
  %lock.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 26
  tail call void @_raw_spin_lock_bh(ptr noundef %lock.i) #17
  %receive_queue.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 33
  %qlen.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 33, i32 1
  %24 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %qlen.i.i, align 4
  %26 = ptrtoint ptr %receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %receive_queue.i, align 4
  %cmp.i.i2.i.i = icmp eq ptr %27, %receive_queue.i
  %tobool.not.i13.i.i = icmp eq ptr %27, null
  %tobool.not.i4.i.i = or i1 %cmp.i.i2.i.i, %tobool.not.i13.i.i
  br i1 %tobool.not.i4.i.i, label %do.end3.i.__skb_queue_purge.exit.i_crit_edge, label %do.end3.i.while.body.i.i_crit_edge

do.end3.i.while.body.i.i_crit_edge:               ; preds = %do.end3.i
  br label %while.body.i.i

do.end3.i.__skb_queue_purge.exit.i_crit_edge:     ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__skb_queue_purge.exit.i

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %do.end3.i.while.body.i.i_crit_edge
  %28 = phi ptr [ %38, %while.body.i.i.while.body.i.i_crit_edge ], [ %27, %do.end3.i.while.body.i.i_crit_edge ]
  %29 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %qlen.i.i, align 4
  %sub.i.i.i.i = add i32 %30, -1
  store volatile i32 %sub.i.i.i.i, ptr %qlen.i.i, align 4
  %31 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %28, align 8
  %prev9.i.i.i.i = getelementptr inbounds %struct.anon.51, ptr %28, i32 0, i32 1
  %33 = ptrtoint ptr %prev9.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %prev9.i.i.i.i, align 4
  store ptr null, ptr %prev9.i.i.i.i, align 4
  store ptr null, ptr %28, align 8
  %prev17.i.i.i.i = getelementptr inbounds %struct.anon.51, ptr %32, i32 0, i32 1
  %35 = ptrtoint ptr %prev17.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %34, ptr %prev17.i.i.i.i, align 4
  %36 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %32, ptr %34, align 8
  tail call void @kfree_skb_reason(ptr noundef nonnull %28, i32 noundef 0) #17
  %37 = ptrtoint ptr %receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %receive_queue.i, align 4
  %cmp.i.i.i.i = icmp eq ptr %38, %receive_queue.i
  %tobool.not.i1.i.i = icmp eq ptr %38, null
  %tobool.not.i.i.i = or i1 %cmp.i.i.i.i, %tobool.not.i1.i.i
  br i1 %tobool.not.i.i.i, label %while.body.i.i.__skb_queue_purge.exit.i_crit_edge, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body.i.i

while.body.i.i.__skb_queue_purge.exit.i_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__skb_queue_purge.exit.i

__skb_queue_purge.exit.i:                         ; preds = %while.body.i.i.__skb_queue_purge.exit.i_crit_edge, %do.end3.i.__skb_queue_purge.exit.i_crit_edge
  %39 = ptrtoint ptr %state13 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %state13, align 4
  %41 = zext i32 %40 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.434)
  switch i32 %40, label %__skb_queue_purge.exit.i.need_active_close.exit_crit_edge [
    i32 2, label %if.then11.i
    i32 3, label %if.then14.i
    i32 5, label %if.then18.i
  ]

__skb_queue_purge.exit.i.need_active_close.exit_crit_edge: ; preds = %__skb_queue_purge.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %need_active_close.exit

if.then11.i:                                      ; preds = %__skb_queue_purge.exit.i
  %flags.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 3
  %42 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags.i.i, align 4
  %or.i.i.i = or i32 %43, 16
  store i32 %or.i.i.i, ptr %flags.i.i, align 4
  %44 = load i32, ptr @dbg_level, align 4
  %and.i.i = and i32 %44, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then11.i.need_active_close.exit_crit_edge, label %do.end.i.i

if.then11.i.need_active_close.exit_crit_edge:     ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %need_active_close.exit

do.end.i.i:                                       ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.231, ptr noundef nonnull @.str.232, ptr noundef %5, i32 noundef 2, i32 noundef %or.i.i.i, i32 noundef 4) #21
  br label %need_active_close.exit

if.then14.i:                                      ; preds = %__skb_queue_purge.exit.i
  %45 = load i32, ptr @dbg_level, align 4
  %and.i55.i = and i32 %45, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i55.i)
  %tobool.not.i56.i = icmp eq i32 %and.i55.i, 0
  br i1 %tobool.not.i56.i, label %if.then14.i.if.then23.i_crit_edge, label %do.end.i59.i

if.then14.i.if.then23.i_crit_edge:                ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then23.i

do.end.i59.i:                                     ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #19
  %flags.i57.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 3
  %46 = ptrtoint ptr %flags.i57.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %flags.i57.i, align 4
  %call.i58.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %5, i32 noundef 3, i32 noundef %47, i32 noundef 4) #21
  br label %if.then23.i

if.then18.i:                                      ; preds = %__skb_queue_purge.exit.i
  %48 = load i32, ptr @dbg_level, align 4
  %and.i60.i = and i32 %48, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i60.i)
  %tobool.not.i61.i = icmp eq i32 %and.i60.i, 0
  br i1 %tobool.not.i61.i, label %if.then18.i.if.then23.i_crit_edge, label %do.end.i65.i

if.then18.i.if.then23.i_crit_edge:                ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then23.i

do.end.i65.i:                                     ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #19
  %flags.i63.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 3
  %49 = ptrtoint ptr %flags.i63.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %flags.i63.i, align 4
  %call.i64.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef %5, i32 noundef 5, i32 noundef %50, i32 noundef 7) #21
  br label %if.then23.i

if.then23.i:                                      ; preds = %do.end.i65.i, %if.then18.i.if.then23.i_crit_edge, %do.end.i59.i, %if.then14.i.if.then23.i_crit_edge
  %storemerge.i = phi i32 [ 4, %if.then14.i.if.then23.i_crit_edge ], [ 4, %do.end.i59.i ], [ 7, %if.then18.i.if.then23.i_crit_edge ], [ 7, %do.end.i65.i ]
  %51 = ptrtoint ptr %state13 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %storemerge.i, ptr %state13, align 4
  %cmp.i.i = icmp eq ptr %5, null
  br i1 %cmp.i.i, label %if.then23.i.if.then27.i_crit_edge, label %cxgbi_sock_flag.exit.i

if.then23.i.if.then27.i_crit_edge:                ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27.i

cxgbi_sock_flag.exit.i:                           ; preds = %if.then23.i
  %flags.i68.i = getelementptr inbounds %struct.cxgbi_sock, ptr %5, i32 0, i32 3
  %52 = ptrtoint ptr %flags.i68.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %flags.i68.i, align 4
  %54 = and i32 %53, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool25.not.i = icmp ne i32 %54, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool26.not.i = icmp eq i32 %25, 0
  %or.cond.i = select i1 %tobool25.not.i, i1 %tobool26.not.i, i1 false
  br i1 %or.cond.i, label %if.else28.i, label %cxgbi_sock_flag.exit.i.if.then27.i_crit_edge

cxgbi_sock_flag.exit.i.if.then27.i_crit_edge:     ; preds = %cxgbi_sock_flag.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27.i

if.then27.i:                                      ; preds = %cxgbi_sock_flag.exit.i.if.then27.i_crit_edge, %if.then23.i.if.then27.i_crit_edge
  %55 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %5, align 4
  %csk_send_abort_req.i = getelementptr inbounds %struct.cxgbi_device, ptr %56, i32 0, i32 32
  %57 = ptrtoint ptr %csk_send_abort_req.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %csk_send_abort_req.i, align 4
  tail call void %58(ptr noundef %5) #17
  br label %need_active_close.exit

if.else28.i:                                      ; preds = %cxgbi_sock_flag.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %59 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %5, align 4
  %csk_send_close_req.i = getelementptr inbounds %struct.cxgbi_device, ptr %60, i32 0, i32 33
  %61 = ptrtoint ptr %csk_send_close_req.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %csk_send_close_req.i, align 4
  tail call void %62(ptr noundef nonnull %5) #17
  br label %need_active_close.exit

need_active_close.exit:                           ; preds = %if.else28.i, %if.then27.i, %do.end.i.i, %if.then11.i.need_active_close.exit_crit_edge, %__skb_queue_purge.exit.i.need_active_close.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #17
  br label %if.end17

if.else:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @cxgbi_sock_closed(ptr noundef %5)
  br label %if.end17

if.end17:                                         ; preds = %if.else, %need_active_close.exit
  tail call fastcc void @__cxgbi_sock_put(ptr noundef nonnull @.str.223, ptr noundef %5)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iscsi_destroy_endpoint(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cxgbi_iscsi_init(ptr noundef %itp, ptr noundef %stt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @iscsi_register_transport(ptr noundef %itp) #17
  %0 = ptrtoint ptr %stt to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %stt, align 4
  %cmp = icmp eq ptr %call, null
  br i1 %cmp, label %do.end, label %do.body2

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %name = getelementptr inbounds %struct.iscsi_transport, ptr %itp, i32 0, i32 1
  %1 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %name, align 4
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.224, ptr noundef nonnull @.str.225, ptr noundef %2, ptr noundef %itp) #21
  br label %return

do.body2:                                         ; preds = %entry
  %3 = load i32, ptr @dbg_level, align 4
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body2.return_crit_edge, label %do.end5

do.body2.return_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

do.end5:                                          ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  %name7 = getelementptr inbounds %struct.iscsi_transport, ptr %itp, i32 0, i32 1
  %4 = ptrtoint ptr %name7 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %name7, align 4
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.227, ptr noundef nonnull @.str.225, ptr noundef %5, ptr noundef %stt) #21
  br label %return

return:                                           ; preds = %do.end5, %do.body2.return_crit_edge, %do.end
  %retval.0 = phi i32 [ -19, %do.end ], [ 0, %do.body2.return_crit_edge ], [ 0, %do.end5 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @iscsi_register_transport(ptr noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cxgbi_iscsi_cleanup(ptr noundef %itp, ptr nocapture noundef %stt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %stt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stt, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %do.body

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

do.body:                                          ; preds = %entry
  %2 = load i32, ptr @dbg_level, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.do.end4_crit_edge, label %do.end

do.body.do.end4_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end4

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %name = getelementptr inbounds %struct.iscsi_transport, ptr %itp, i32 0, i32 1
  %3 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.229, ptr noundef nonnull @.str.230, ptr noundef %itp, ptr noundef %4, ptr noundef nonnull %1) #21
  br label %do.end4

do.end4:                                          ; preds = %do.end, %do.body.do.end4_crit_edge
  %5 = ptrtoint ptr %stt to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %stt, align 4
  %call5 = tail call i32 @iscsi_unregister_transport(ptr noundef %itp) #17
  br label %if.end6

if.end6:                                          ; preds = %do.end4, %entry.if.end6_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_unregister_transport(ptr noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @cxgbi_attr_is_visible(i32 noundef %param_type, i32 noundef %param) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %param_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.435)
  switch i32 %param_type, label %entry.return_crit_edge [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
  ]

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %param)
  %switch = icmp ult i32 %param, 4
  %. = select i1 %switch, i16 292, i16 0
  br label %return

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %param)
  %1 = icmp ult i32 %param, 36
  br i1 %1, label %switch.lookup, label %sw.bb2.return_crit_edge

sw.bb2.return_crit_edge:                          ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

switch.lookup:                                    ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #19
  %switch.gep = getelementptr inbounds [36 x i16], ptr @switch.table.cxgbi_attr_is_visible, i32 0, i32 %param
  %2 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %2)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %return

return:                                           ; preds = %switch.lookup, %sw.bb2.return_crit_edge, %sw.bb, %entry.return_crit_edge
  %retval.0 = phi i16 [ %., %sw.bb ], [ 0, %entry.return_crit_edge ], [ %switch.load, %switch.lookup ], [ 0, %sw.bb2.return_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @libcxgbi_exit_module() #10 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @cxgbi_device_unregister_all(i32 noundef 255)
  %0 = load ptr, ptr @rsvd_page, align 4
  %1 = getelementptr inbounds %struct.page, ptr %0, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %1, align 4
  %and.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !888

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i = add i32 %3, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %4 = ptrtoint ptr %0 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %4, %if.end.i.i ]
  %5 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %5, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #17
  %6 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.i.i.i.i = icmp eq i32 %7, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !895

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @dump_page(ptr noundef %5, ptr noundef nonnull @.str.422) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #17, !srcloc !907
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #17
  %8 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %8, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@libcxgbi_exit_module, %if.then.i.i.i.i.i)) #17
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !904

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %5, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #17
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__put_page(ptr noundef %5) #17
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @libcxgbi_init_module() #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.423, ptr noundef nonnull @.str.424, ptr noundef nonnull @version) #21
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 3520, i32 noundef 0, i32 noundef 0, ptr noundef null) #17
  store ptr %call38.i.i.i, ptr @rsvd_page, align 4
  %tobool.not = icmp eq ptr %call38.i.i.i, null
  %. = select i1 %tobool.not, i32 -12, i32 0
  ret i32 %.
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #0 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #0 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #12

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #0 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #0 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cxgbi_ppm_release(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #0

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #0

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #15

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock_bh(ptr noundef) local_unnamed_addr #0 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock_bh(ptr noundef) local_unnamed_addr #0 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_tcp_recv_segment_is_hdr(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @iscsi_itt_to_ctask(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @read_pdu_skb(ptr noundef %conn, ptr noundef %skb, i32 noundef %offset, i32 noundef %offloaded) unnamed_addr #4 align 64 {
entry:
  %status = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status) #17
  %0 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %offloaded)
  %tobool = icmp ne i32 %offloaded, 0
  %call = call i32 @iscsi_tcp_recv_skb(ptr noundef %conn, ptr noundef %skb, i32 noundef %offset, i1 noundef zeroext %tobool, ptr noundef nonnull %status) #17
  %1 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %status, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.436)
  switch i32 %2, label %do.end36 [
    i32 2, label %do.end
    i32 3, label %do.body3
    i32 1, label %do.end15
    i32 0, label %do.body22
  ]

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call1 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.265, ptr noundef nonnull @.str.266, ptr noundef %skb, i32 noundef %offset, i32 noundef %offloaded) #21
  br label %cleanup

do.body3:                                         ; preds = %entry
  %4 = load i32, ptr @dbg_level, align 4
  %and = and i32 %4, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %do.body3.cleanup_crit_edge, label %do.end7

do.body3.cleanup_crit_edge:                       ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end7:                                          ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #19
  %call9 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.268, ptr noundef nonnull @.str.266, ptr noundef %skb, i32 noundef %offset, i32 noundef %offloaded, i32 noundef %call) #21
  br label %cleanup

do.end15:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call17 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.271, ptr noundef nonnull @.str.266, ptr noundef %skb, i32 noundef %offset, i32 noundef %offloaded) #21
  %5 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %conn, align 8
  %dev = getelementptr inbounds %struct.iscsi_cls_conn, ptr %6, i32 0, i32 8
  call void (ptr, ptr, ptr, ...) @_dev_printk(ptr noundef nonnull @.str.161, ptr noundef %dev, ptr noundef nonnull @.str.274) #21
  br label %cleanup

do.body22:                                        ; preds = %entry
  %7 = load i32, ptr @dbg_level, align 4
  %and23 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %do.body22.cleanup_crit_edge, label %do.end28

do.body22.cleanup_crit_edge:                      ; preds = %do.body22
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end28:                                         ; preds = %do.body22
  call void @__sanitizer_cov_trace_pc() #19
  %call30 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.277, ptr noundef nonnull @.str.266, ptr noundef %skb, i32 noundef %offset, i32 noundef %offloaded, i32 noundef %call) #21
  br label %cleanup

do.end36:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call38 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.280, ptr noundef nonnull @.str.266, ptr noundef %skb, i32 noundef %offset, i32 noundef %offloaded, i32 noundef %2) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end36, %do.end28, %do.body22.cleanup_crit_edge, %do.end15, %do.end7, %do.body3.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -22, %do.end36 ], [ -14, %do.end15 ], [ -5, %do.end ], [ %call, %do.end7 ], [ %call, %do.body3.cleanup_crit_edge ], [ %call, %do.end28 ], [ %call, %do.body22.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iscsi_tcp_recv_skb(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_skb(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cxgbi_ppm_ppods_reserve(ptr noundef, i16 noundef zeroext, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_map_sg_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @cxgbi_ppm_make_ppod_hdr(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @cxgbi_ppm_ppod_release(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_unmap_sg_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_local_page_prot(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_local_indexed(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @cxgbi_device_find_by_mac(ptr noundef %ndev, ptr noundef writeonly %port) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %priv_flags.i = getelementptr inbounds %struct.net_device, ptr %ndev, i32 0, i32 15
  %0 = ptrtoint ptr %priv_flags.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %priv_flags.i, align 16
  %and.i = and i64 %1, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call1 = tail call ptr @vlan_dev_real_dev(ptr noundef %ndev) #17
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.367, ptr noundef %ndev, ptr noundef %call1) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %vdev.0 = phi ptr [ %ndev, %if.then ], [ null, %entry.if.end_crit_edge ]
  %ndev.addr.0 = phi ptr [ %call1, %if.then ], [ %ndev, %entry.if.end_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @cdev_mutex, i32 noundef 0) #17
  %2 = load ptr, ptr @cdev_list, align 4
  %cmp.not70 = icmp eq ptr %2, @cdev_list
  br i1 %cmp.not70, label %if.end.for.end30_crit_edge, label %for.cond11.preheader.lr.ph

if.end.for.end30_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end30

for.cond11.preheader.lr.ph:                       ; preds = %if.end
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %ndev.addr.0, i32 0, i32 86
  br label %for.cond11.preheader

for.cond.loopexit:                                ; preds = %for.inc.for.cond.loopexit_crit_edge, %for.cond11.preheader.for.cond.loopexit_crit_edge
  %cmp.not = icmp eq ptr %tmp.072, @cdev_list
  br i1 %cmp.not, label %for.cond.loopexit.for.end30_crit_edge, label %for.cond.loopexit.for.cond11.preheader_crit_edge

for.cond.loopexit.for.cond11.preheader_crit_edge: ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond11.preheader

for.cond.loopexit.for.end30_crit_edge:            ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end30

for.cond11.preheader:                             ; preds = %for.cond.loopexit.for.cond11.preheader_crit_edge, %for.cond11.preheader.lr.ph
  %cdev.071 = phi ptr [ %2, %for.cond11.preheader.lr.ph ], [ %tmp.072, %for.cond.loopexit.for.cond11.preheader_crit_edge ]
  %3 = ptrtoint ptr %cdev.071 to i32
  call void @__asan_load4_noabort(i32 %3)
  %tmp.072 = load ptr, ptr %cdev.071, align 4
  %nports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev.071, i32 0, i32 8
  %4 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %nports, align 1
  %conv = zext i8 %5 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp1267.not = icmp eq i8 %5, 0
  br i1 %cmp1267.not, label %for.cond11.preheader.for.cond.loopexit_crit_edge, label %for.body14.lr.ph

for.cond11.preheader.for.cond.loopexit_crit_edge: ; preds = %for.cond11.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.loopexit

for.body14.lr.ph:                                 ; preds = %for.cond11.preheader
  %6 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev_addr, align 64
  %ports = getelementptr inbounds %struct.cxgbi_device, ptr %cdev.071, i32 0, i32 3
  %8 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ports, align 4
  br label %for.body14

for.body14:                                       ; preds = %for.inc.for.body14_crit_edge, %for.body14.lr.ph
  %i.068 = phi i32 [ 0, %for.body14.lr.ph ], [ %inc, %for.inc.for.body14_crit_edge ]
  %arrayidx = getelementptr ptr, ptr %9, i32 %i.068
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 4
  %dev_addr15 = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 86
  %12 = ptrtoint ptr %dev_addr15 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev_addr15, align 64
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(32) %7, ptr noundef dereferenceable(32) %13, i32 32) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool.not = icmp eq i32 %bcmp, 0
  br i1 %tobool.not, label %if.then17, label %for.inc

if.then17:                                        ; preds = %for.body14
  %hbas = getelementptr inbounds %struct.cxgbi_device, ptr %cdev.071, i32 0, i32 5
  %14 = ptrtoint ptr %hbas to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hbas, align 4
  %arrayidx18 = getelementptr ptr, ptr %15, i32 %i.068
  %16 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx18, align 4
  %vdev19 = getelementptr inbounds %struct.cxgbi_hba, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %vdev19 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %vdev.0, ptr %vdev19, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  %tobool20.not = icmp eq ptr %port, null
  br i1 %tobool20.not, label %if.then17.cleanup_crit_edge, label %if.then21

if.then17.cleanup_crit_edge:                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then21:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #19
  %19 = ptrtoint ptr %port to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %i.068, ptr %port, align 4
  br label %cleanup

for.inc:                                          ; preds = %for.body14
  %inc = add nuw nsw i32 %i.068, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.inc.for.cond.loopexit_crit_edge, label %for.inc.for.body14_crit_edge

for.inc.for.body14_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body14

for.inc.for.cond.loopexit_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.loopexit

for.end30:                                        ; preds = %for.cond.loopexit.for.end30_crit_edge, %if.end.for.end30_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @cdev_mutex) #17
  %20 = load i32, ptr @dbg_level, align 4
  %and = and i32 %20, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool32.not = icmp eq i32 %and, 0
  br i1 %tobool32.not, label %for.end30.cleanup_crit_edge, label %do.end36

for.end30.cleanup_crit_edge:                      ; preds = %for.end30
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end36:                                         ; preds = %for.end30
  call void @__sanitizer_cov_trace_pc() #19
  %call40 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.369, ptr noundef nonnull @.str.367, ptr noundef %ndev.addr.0, ptr noundef %ndev.addr.0) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end36, %for.end30.cleanup_crit_edge, %if.then21, %if.then17.cleanup_crit_edge
  %retval.0 = phi ptr [ %cdev.071, %if.then21 ], [ %cdev.071, %if.then17.cleanup_crit_edge ], [ null, %do.end36 ], [ null, %for.end30.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @cxgbi_sock_create(ptr noundef %cdev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3328, i32 noundef 520) #22
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.371, ptr noundef nonnull @.str.372, i32 noundef 520) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %csk_alloc_cpls = getelementptr inbounds %struct.cxgbi_device, ptr %cdev, i32 0, i32 34
  %1 = ptrtoint ptr %csk_alloc_cpls to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %csk_alloc_cpls, align 4
  %call2 = tail call i32 %2(ptr noundef nonnull %call7.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %do.end6, label %do.body10

do.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.374, ptr noundef nonnull @.str.372, ptr noundef nonnull %call7.i.i) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #17
  br label %cleanup

do.body10:                                        ; preds = %if.end
  %lock = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 26
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.376, ptr noundef nonnull @cxgbi_sock_create.__key, i16 noundef signext 3) #17
  %refcnt = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 27
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #17
  %3 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 1, ptr %refcnt, align 8
  %receive_queue = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 33
  %lock.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 33, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i, ptr noundef nonnull @.str.384, ptr noundef nonnull @skb_queue_head_init.__key, i16 noundef signext 3) #17
  %4 = ptrtoint ptr %receive_queue to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %receive_queue, ptr %receive_queue, align 8
  %prev.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 33, i32 0, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %receive_queue, ptr %prev.i.i, align 4
  %qlen.i.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 33, i32 1
  %6 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %qlen.i.i, align 8
  %write_queue = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 34
  %lock.i49 = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 34, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i49, ptr noundef nonnull @.str.384, ptr noundef nonnull @skb_queue_head_init.__key, i16 noundef signext 3) #17
  %7 = ptrtoint ptr %write_queue to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %write_queue, ptr %write_queue, align 8
  %prev.i.i50 = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 34, i32 0, i32 0, i32 1
  %8 = ptrtoint ptr %prev.i.i50 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %write_queue, ptr %prev.i.i50, align 4
  %qlen.i.i51 = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 34, i32 1
  %9 = ptrtoint ptr %qlen.i.i51 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %qlen.i.i51, align 8
  %retry_timer = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 35
  tail call void @init_timer_key(ptr noundef %retry_timer, ptr noundef null, i32 noundef 0, ptr noundef nonnull @.str.378, ptr noundef nonnull @cxgbi_sock_create.__key.377) #17
  %cmpl = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 36
  %10 = ptrtoint ptr %cmpl to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %cmpl, align 8
  %wait.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 36, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.385, ptr noundef nonnull @init_completion.__key) #17
  %callback_lock = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 38
  tail call void @__rwlock_init(ptr noundef %callback_lock, ptr noundef nonnull @.str.380, ptr noundef nonnull @cxgbi_sock_create.__key.379) #17
  %11 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %cdev, ptr %call7.i.i, align 8
  %flags = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 3
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %flags, align 4
  %13 = load i32, ptr @dbg_level, align 4
  %and.i = and i32 %13, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.body10.cxgbi_sock_set_state.exit_crit_edge, label %do.end.i

do.body10.cxgbi_sock_set_state.exit_crit_edge:    ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #19
  br label %cxgbi_sock_set_state.exit

do.end.i:                                         ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #19
  %state2.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 28
  %14 = ptrtoint ptr %state2.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %state2.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245, ptr noundef nonnull @.str.246, ptr noundef nonnull %call7.i.i, i32 noundef %15, i32 noundef 0, i32 noundef 0) #21
  br label %cxgbi_sock_set_state.exit

cxgbi_sock_set_state.exit:                        ; preds = %do.end.i, %do.body10.cxgbi_sock_set_state.exit_crit_edge
  %state4.i = getelementptr inbounds %struct.cxgbi_sock, ptr %call7.i.i, i32 0, i32 28
  %16 = ptrtoint ptr %state4.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %state4.i, align 4
  %17 = load i32, ptr @dbg_level, align 4
  %and = and i32 %17, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool22.not = icmp eq i32 %and, 0
  br i1 %tobool22.not, label %cxgbi_sock_set_state.exit.cleanup_crit_edge, label %do.end26

cxgbi_sock_set_state.exit.cleanup_crit_edge:      ; preds = %cxgbi_sock_set_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end26:                                         ; preds = %cxgbi_sock_set_state.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.382, ptr noundef nonnull @.str.372, ptr noundef %cdev, ptr noundef nonnull %call7.i.i) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end26, %cxgbi_sock_set_state.exit.cleanup_crit_edge, %do.end6, %do.end
  %retval.0 = phi ptr [ null, %do.end6 ], [ null, %do.end ], [ %call7.i.i, %do.end26 ], [ %call7.i.i, %cxgbi_sock_set_state.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ip_route_output_flow(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kuid(ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__ip_dev_find(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rwlock_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @neigh_destroy(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ipv6_dev_get_saddr(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ip6_route_output_flags(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #12

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #17

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #18 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 413)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #18 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 413)
  ret void
}

attributes #0 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #14 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nounwind readonly }
attributes #16 = { argmemonly nofree nounwind readonly willreturn }
attributes #17 = { nounwind }
attributes #18 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #19 = { nomerge }
attributes #20 = { nounwind allocsize(0) }
attributes #21 = { cold nounwind }
attributes #22 = { nounwind allocsize(2) }
attributes #23 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !8, !9, !10, !12, !13, !15, !16, !18, !20, !21, !22, !23, !24, !26, !27, !29, !31, !32, !33, !34, !36, !38, !39, !40, !41, !43, !44, !46, !47, !48, !50, !52, !53, !54, !55, !56, !58, !60, !62, !63, !64, !65, !67, !69, !70, !71, !72, !74, !75, !76, !78, !80, !81, !82, !84, !85, !87, !88, !90, !92, !93, !94, !95, !97, !99, !100, !101, !103, !104, !105, !107, !108, !109, !111, !112, !113, !115, !117, !119, !121, !122, !123, !124, !126, !128, !129, !130, !131, !133, !135, !136, !137, !139, !141, !143, !144, !145, !147, !149, !150, !151, !153, !154, !155, !157, !159, !160, !161, !163, !164, !166, !168, !169, !170, !171, !173, !174, !175, !177, !178, !179, !181, !182, !183, !185, !187, !189, !191, !193, !194, !195, !196, !198, !200, !202, !204, !205, !206, !207, !209, !211, !212, !213, !214, !216, !218, !219, !220, !221, !223, !224, !225, !227, !228, !229, !231, !232, !233, !235, !236, !237, !239, !240, !241, !243, !244, !245, !247, !248, !249, !251, !252, !253, !255, !256, !257, !259, !260, !261, !263, !265, !266, !267, !268, !270, !271, !272, !274, !275, !276, !278, !279, !280, !282, !283, !284, !286, !287, !288, !290, !291, !292, !294, !296, !297, !298, !299, !301, !302, !303, !305, !306, !307, !309, !310, !311, !313, !315, !316, !317, !319, !320, !321, !323, !324, !325, !327, !328, !329, !331, !332, !333, !335, !336, !337, !339, !340, !341, !343, !344, !345, !347, !348, !349, !351, !352, !353, !354, !355, !357, !359, !360, !361, !362, !364, !365, !366, !368, !370, !372, !374, !375, !376, !377, !379, !381, !382, !383, !384, !386, !388, !389, !390, !391, !393, !395, !396, !397, !398, !400, !402, !403, !404, !405, !407, !408, !409, !411, !413, !414, !415, !416, !418, !420, !421, !422, !423, !425, !426, !427, !429, !430, !431, !433, !435, !436, !437, !439, !440, !441, !443, !445, !447, !448, !449, !451, !453, !454, !455, !456, !458, !459, !460, !462, !463, !464, !466, !467, !468, !470, !471, !472, !474, !475, !476, !478, !479, !480, !482, !484, !486, !487, !488, !489, !491, !493, !494, !495, !496, !498, !499, !500, !502, !504, !505, !506, !507, !509, !511, !513, !515, !517, !519, !520, !522, !523, !524, !525, !526, !528, !529, !530, !531, !533, !534, !535, !536, !538, !539, !540, !542, !544, !545, !547, !549, !550, !551, !553, !554, !555, !557, !558, !560, !561, !562, !563, !565, !566, !567, !568, !570, !571, !572, !574, !575, !576, !577, !579, !580, !581, !582, !584, !585, !586, !588, !589, !590, !591, !593, !594, !595, !597, !598, !599, !601, !602, !603, !604, !606, !607, !608, !610, !611, !612, !614, !615, !616, !618, !619, !620, !622, !623, !624, !626, !627, !628, !630, !631, !632, !634, !635, !636, !637, !638, !640, !641, !642, !643, !645, !646, !647, !648, !650, !651, !652, !654, !655, !656, !658, !659, !660, !661, !663, !664, !665, !667, !668, !669, !670, !672, !673, !674, !676, !677, !678, !679, !681, !682, !683, !685, !686, !687, !689, !690, !691, !693, !694, !695, !696, !698, !699, !700, !701, !702, !704, !706, !707, !708, !709, !711, !712, !713, !714, !716, !717, !718, !720, !721, !722, !724, !725, !726, !728, !729, !730, !732, !734, !735, !736, !737, !739, !740, !741, !742, !744, !745, !746, !747, !749, !750, !751, !752, !754, !755, !756, !758, !759, !760, !762, !763, !764, !766, !767, !768, !770, !771, !772, !774, !775, !776, !778, !779, !780, !782, !783, !784, !785, !787, !788, !789, !791, !792, !794, !795, !797, !798, !800, !801, !802, !804, !805, !807, !808, !810, !811, !812, !813, !815, !816, !817, !819, !820, !822, !823, !824, !826, !827, !828, !830, !831, !832, !834, !835, !836, !838, !839, !840, !842, !843, !844, !845, !847, !848, !849, !851, !852, !853, !855, !856, !857, !859, !860, !861, !863, !864, !865, !867, !869, !870, !871, !872, !874}
!llvm.named.register.sp = !{!876}
!llvm.module.flags = !{!877, !878, !879, !880, !881, !882, !883, !884}
!llvm.ident = !{!885}

!0 = !{ptr @__UNIQUE_ID_author691, !1, !"__UNIQUE_ID_author691", i1 false, i1 false}
!1 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 48, i32 1}
!2 = !{ptr @__UNIQUE_ID_description692, !3, !"__UNIQUE_ID_description692", i1 false, i1 false}
!3 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 49, i32 1}
!4 = !{ptr @__UNIQUE_ID_version693, !5, !"__UNIQUE_ID_version693", i1 false, i1 false}
!5 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 50, i32 1}
!6 = !{ptr @.str, !5, !"<string literal>", i1 false, i1 false}
!7 = !{ptr @.str.1, !5, !"<string literal>", i1 false, i1 false}
!8 = !{ptr @.str.2, !5, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @__modver_attr, !5, !"__modver_attr", i1 false, i1 false}
!10 = !{ptr @__UNIQUE_ID_file694, !11, !"__UNIQUE_ID_file694", i1 false, i1 false}
!11 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 51, i32 1}
!12 = !{ptr @__UNIQUE_ID_license695, !11, !"__UNIQUE_ID_license695", i1 false, i1 false}
!13 = !{ptr @__param_dbg_level, !14, !"__param_dbg_level", i1 false, i1 false}
!14 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 53, i32 1}
!15 = !{ptr @__UNIQUE_ID_dbg_leveltype696, !14, !"__UNIQUE_ID_dbg_leveltype696", i1 false, i1 false}
!16 = !{ptr @__UNIQUE_ID_dbg_level697, !17, !"__UNIQUE_ID_dbg_level697", i1 false, i1 false}
!17 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 54, i32 1}
!18 = !{ptr @.str.3, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 84, i32 3}
!20 = !{ptr @.str.4, !19, !"<string literal>", i1 false, i1 false}
!21 = !{ptr @.str.5, !19, !"<string literal>", i1 false, i1 false}
!22 = !{ptr @cxgbi_device_portmap_create._entry, !19, !"_entry", i1 false, i1 false}
!23 = !{ptr @cxgbi_device_portmap_create._entry_ptr, !19, !"_entry_ptr", i1 false, i1 false}
!24 = !{ptr @cxgbi_device_portmap_create.__key, !25, !"__key", i1 false, i1 false}
!25 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 90, i32 2}
!26 = !{ptr @.str.6, !25, !"<string literal>", i1 false, i1 false}
!27 = !{ptr @__ksymtab_cxgbi_device_portmap_create, !28, !"__ksymtab_cxgbi_device_portmap_create", i1 false, i1 false}
!28 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 93, i32 1}
!29 = !{ptr @.str.7, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 105, i32 4}
!31 = !{ptr @.str.8, !30, !"<string literal>", i1 false, i1 false}
!32 = !{ptr @cxgbi_device_portmap_cleanup._entry, !30, !"_entry", i1 false, i1 false}
!33 = !{ptr @cxgbi_device_portmap_cleanup._entry_ptr, !30, !"_entry_ptr", i1 false, i1 false}
!34 = !{ptr @__ksymtab_cxgbi_device_portmap_cleanup, !35, !"__ksymtab_cxgbi_device_portmap_cleanup", i1 false, i1 false}
!35 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 116, i32 1}
!36 = !{ptr @.str.9, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 141, i32 3}
!38 = !{ptr @.str.10, !37, !"<string literal>", i1 false, i1 false}
!39 = !{ptr @cxgbi_device_register._entry, !37, !"_entry", i1 false, i1 false}
!40 = !{ptr @cxgbi_device_register._entry_ptr, !37, !"_entry_ptr", i1 false, i1 false}
!41 = !{ptr @cxgbi_device_register.__key, !42, !"__key", i1 false, i1 false}
!42 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 150, i32 2}
!43 = !{ptr @.str.11, !42, !"<string literal>", i1 false, i1 false}
!44 = !{ptr @.str.13, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 160, i32 2}
!46 = !{ptr @cxgbi_device_register._entry.12, !45, !"_entry", i1 false, i1 false}
!47 = !{ptr @cxgbi_device_register._entry_ptr.14, !45, !"_entry_ptr", i1 false, i1 false}
!48 = !{ptr @__ksymtab_cxgbi_device_register, !49, !"__ksymtab_cxgbi_device_register", i1 false, i1 false}
!49 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 164, i32 1}
!50 = !{ptr @.str.15, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 168, i32 2}
!52 = !{ptr @.str.16, !51, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @cxgbi_device_unregister._entry, !51, !"_entry", i1 false, i1 false}
!54 = !{ptr @cxgbi_device_unregister._entry_ptr, !51, !"_entry_ptr", i1 false, i1 false}
!55 = !{ptr @.str.17, !51, !"<string literal>", i1 false, i1 false}
!56 = !{ptr @__ksymtab_cxgbi_device_unregister, !57, !"__ksymtab_cxgbi_device_unregister", i1 false, i1 false}
!57 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 183, i32 1}
!58 = !{ptr @__ksymtab_cxgbi_device_unregister_all, !59, !"__ksymtab_cxgbi_device_unregister_all", i1 false, i1 false}
!59 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 199, i32 1}
!60 = !{ptr @.str.18, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 214, i32 2}
!62 = !{ptr @.str.19, !61, !"<string literal>", i1 false, i1 false}
!63 = !{ptr @cxgbi_device_find_by_lldev._entry, !61, !"_entry", i1 false, i1 false}
!64 = !{ptr @cxgbi_device_find_by_lldev._entry_ptr, !61, !"_entry_ptr", i1 false, i1 false}
!65 = !{ptr @__ksymtab_cxgbi_device_find_by_lldev, !66, !"__ksymtab_cxgbi_device_find_by_lldev", i1 false, i1 false}
!66 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 218, i32 1}
!67 = !{ptr @.str.20, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 230, i32 3}
!69 = !{ptr @.str.21, !68, !"<string literal>", i1 false, i1 false}
!70 = !{ptr @cxgbi_device_find_by_netdev._entry, !68, !"_entry", i1 false, i1 false}
!71 = !{ptr @cxgbi_device_find_by_netdev._entry_ptr, !68, !"_entry_ptr", i1 false, i1 false}
!72 = !{ptr @.str.23, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 247, i32 2}
!74 = !{ptr @cxgbi_device_find_by_netdev._entry.22, !73, !"_entry", i1 false, i1 false}
!75 = !{ptr @cxgbi_device_find_by_netdev._entry_ptr.24, !73, !"_entry_ptr", i1 false, i1 false}
!76 = !{ptr @__ksymtab_cxgbi_device_find_by_netdev, !77, !"__ksymtab_cxgbi_device_find_by_netdev", i1 false, i1 false}
!77 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 251, i32 1}
!78 = !{ptr @.str.25, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 263, i32 3}
!80 = !{ptr @cxgbi_device_find_by_netdev_rcu._entry, !79, !"_entry", i1 false, i1 false}
!81 = !{ptr @cxgbi_device_find_by_netdev_rcu._entry_ptr, !79, !"_entry_ptr", i1 false, i1 false}
!82 = distinct !{null, !83, !"__warned", i1 false, i1 false}
!83 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 267, i32 2}
!84 = !{ptr @.str.26, !83, !"<string literal>", i1 false, i1 false}
!85 = !{ptr @cxgbi_device_find_by_netdev_rcu._entry.27, !86, !"_entry", i1 false, i1 false}
!86 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 280, i32 2}
!87 = !{ptr @cxgbi_device_find_by_netdev_rcu._entry_ptr.28, !86, !"_entry_ptr", i1 false, i1 false}
!88 = !{ptr @__ksymtab_cxgbi_device_find_by_netdev_rcu, !89, !"__ksymtab_cxgbi_device_find_by_netdev_rcu", i1 false, i1 false}
!89 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 284, i32 1}
!90 = !{ptr @.str.29, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 324, i32 2}
!92 = !{ptr @.str.30, !91, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @cxgbi_hbas_remove._entry, !91, !"_entry", i1 false, i1 false}
!94 = !{ptr @cxgbi_hbas_remove._entry_ptr, !91, !"_entry_ptr", i1 false, i1 false}
!95 = !{ptr @__ksymtab_cxgbi_hbas_remove, !96, !"__ksymtab_cxgbi_hbas_remove", i1 false, i1 false}
!96 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 337, i32 1}
!97 = !{ptr @.str.31, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 347, i32 2}
!99 = !{ptr @cxgbi_hbas_add._entry, !98, !"_entry", i1 false, i1 false}
!100 = !{ptr @cxgbi_hbas_add._entry_ptr, !98, !"_entry_ptr", i1 false, i1 false}
!101 = !{ptr @.str.33, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 352, i32 4}
!103 = !{ptr @cxgbi_hbas_add._entry.32, !102, !"_entry", i1 false, i1 false}
!104 = !{ptr @cxgbi_hbas_add._entry_ptr.34, !102, !"_entry_ptr", i1 false, i1 false}
!105 = !{ptr @.str.36, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 371, i32 3}
!107 = !{ptr @cxgbi_hbas_add._entry.35, !106, !"_entry", i1 false, i1 false}
!108 = !{ptr @cxgbi_hbas_add._entry_ptr.37, !106, !"_entry_ptr", i1 false, i1 false}
!109 = !{ptr @.str.39, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 378, i32 4}
!111 = !{ptr @cxgbi_hbas_add._entry.38, !110, !"_entry", i1 false, i1 false}
!112 = !{ptr @cxgbi_hbas_add._entry_ptr.40, !110, !"_entry_ptr", i1 false, i1 false}
!113 = !{ptr @__ksymtab_cxgbi_hbas_add, !114, !"__ksymtab_cxgbi_hbas_add", i1 false, i1 false}
!114 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 394, i32 1}
!115 = !{ptr @__ksymtab_cxgbi_sock_free_cpl_skbs, !116, !"__ksymtab_cxgbi_sock_free_cpl_skbs", i1 false, i1 false}
!116 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 555, i32 1}
!117 = !{ptr @__ksymtab_cxgbi_sock_established, !118, !"__ksymtab_cxgbi_sock_established", i1 false, i1 false}
!118 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 838, i32 1}
!119 = !{ptr @.str.41, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 857, i32 2}
!121 = !{ptr @.str.42, !120, !"<string literal>", i1 false, i1 false}
!122 = !{ptr @cxgbi_sock_closed._entry, !120, !"_entry", i1 false, i1 false}
!123 = !{ptr @cxgbi_sock_closed._entry_ptr, !120, !"_entry_ptr", i1 false, i1 false}
!124 = !{ptr @__ksymtab_cxgbi_sock_closed, !125, !"__ksymtab_cxgbi_sock_closed", i1 false, i1 false}
!125 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 871, i32 1}
!126 = !{ptr @.str.43, !127, !"<string literal>", i1 false, i1 false}
!127 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 909, i32 2}
!128 = !{ptr @.str.44, !127, !"<string literal>", i1 false, i1 false}
!129 = !{ptr @cxgbi_sock_fail_act_open._entry, !127, !"_entry", i1 false, i1 false}
!130 = !{ptr @cxgbi_sock_fail_act_open._entry_ptr, !127, !"_entry_ptr", i1 false, i1 false}
!131 = !{ptr @__ksymtab_cxgbi_sock_fail_act_open, !132, !"__ksymtab_cxgbi_sock_fail_act_open", i1 false, i1 false}
!132 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 919, i32 1}
!133 = !{ptr @.str.45, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 926, i32 2}
!135 = !{ptr @cxgbi_sock_act_open_req_arp_failure._entry, !134, !"_entry", i1 false, i1 false}
!136 = !{ptr @cxgbi_sock_act_open_req_arp_failure._entry_ptr, !134, !"_entry_ptr", i1 false, i1 false}
!137 = !{ptr @__ksymtab_cxgbi_sock_act_open_req_arp_failure, !138, !"__ksymtab_cxgbi_sock_act_open_req_arp_failure", i1 false, i1 false}
!138 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 938, i32 1}
!139 = !{ptr @__func__.cxgbi_sock_rcv_abort_rpl, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 942, i32 2}
!141 = !{ptr @.str.46, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 949, i32 4}
!143 = !{ptr @cxgbi_sock_rcv_abort_rpl._entry, !142, !"_entry", i1 false, i1 false}
!144 = !{ptr @cxgbi_sock_rcv_abort_rpl._entry_ptr, !142, !"_entry_ptr", i1 false, i1 false}
!145 = !{ptr @__ksymtab_cxgbi_sock_rcv_abort_rpl, !146, !"__ksymtab_cxgbi_sock_rcv_abort_rpl", i1 false, i1 false}
!146 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 957, i32 1}
!147 = !{ptr @.str.47, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 961, i32 2}
!149 = !{ptr @cxgbi_sock_rcv_peer_close._entry, !148, !"_entry", i1 false, i1 false}
!150 = !{ptr @cxgbi_sock_rcv_peer_close._entry_ptr, !148, !"_entry_ptr", i1 false, i1 false}
!151 = !{ptr @.str.49, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 982, i32 3}
!153 = !{ptr @cxgbi_sock_rcv_peer_close._entry.48, !152, !"_entry", i1 false, i1 false}
!154 = !{ptr @cxgbi_sock_rcv_peer_close._entry_ptr.50, !152, !"_entry_ptr", i1 false, i1 false}
!155 = !{ptr @__ksymtab_cxgbi_sock_rcv_peer_close, !156, !"__ksymtab_cxgbi_sock_rcv_peer_close", i1 false, i1 false}
!156 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 990, i32 1}
!157 = !{ptr @.str.51, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 994, i32 2}
!159 = !{ptr @cxgbi_sock_rcv_close_conn_rpl._entry, !158, !"_entry", i1 false, i1 false}
!160 = !{ptr @cxgbi_sock_rcv_close_conn_rpl._entry_ptr, !158, !"_entry_ptr", i1 false, i1 false}
!161 = !{ptr @cxgbi_sock_rcv_close_conn_rpl._entry.52, !162, !"_entry", i1 false, i1 false}
!162 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1014, i32 3}
!163 = !{ptr @cxgbi_sock_rcv_close_conn_rpl._entry_ptr.53, !162, !"_entry_ptr", i1 false, i1 false}
!164 = !{ptr @__ksymtab_cxgbi_sock_rcv_close_conn_rpl, !165, !"__ksymtab_cxgbi_sock_rcv_close_conn_rpl", i1 false, i1 false}
!165 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1021, i32 1}
!166 = !{ptr @.str.54, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1026, i32 2}
!168 = !{ptr @.str.55, !167, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @cxgbi_sock_rcv_wr_ack._entry, !167, !"_entry", i1 false, i1 false}
!170 = !{ptr @cxgbi_sock_rcv_wr_ack._entry_ptr, !167, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @.str.57, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1041, i32 4}
!173 = !{ptr @cxgbi_sock_rcv_wr_ack._entry.56, !172, !"_entry", i1 false, i1 false}
!174 = !{ptr @cxgbi_sock_rcv_wr_ack._entry_ptr.58, !172, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @.str.60, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1048, i32 4}
!177 = !{ptr @cxgbi_sock_rcv_wr_ack._entry.59, !176, !"_entry", i1 false, i1 false}
!178 = !{ptr @cxgbi_sock_rcv_wr_ack._entry_ptr.61, !176, !"_entry_ptr", i1 false, i1 false}
!179 = !{ptr @.str.63, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1065, i32 4}
!181 = !{ptr @cxgbi_sock_rcv_wr_ack._entry.62, !180, !"_entry", i1 false, i1 false}
!182 = !{ptr @cxgbi_sock_rcv_wr_ack._entry_ptr.64, !180, !"_entry_ptr", i1 false, i1 false}
!183 = !{ptr @__ksymtab_cxgbi_sock_rcv_wr_ack, !184, !"__ksymtab_cxgbi_sock_rcv_wr_ack", i1 false, i1 false}
!184 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1085, i32 1}
!185 = !{ptr @__ksymtab_cxgbi_sock_select_mss, !186, !"__ksymtab_cxgbi_sock_select_mss", i1 false, i1 false}
!186 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1113, i32 1}
!187 = !{ptr @__ksymtab_cxgbi_sock_skb_entail, !188, !"__ksymtab_cxgbi_sock_skb_entail", i1 false, i1 false}
!188 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1120, i32 1}
!189 = !{ptr @__ksymtab_cxgbi_sock_purge_wr_queue, !190, !"__ksymtab_cxgbi_sock_purge_wr_queue", i1 false, i1 false}
!190 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1129, i32 1}
!191 = !{ptr @.str.65, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1136, i32 3}
!193 = !{ptr @.str.66, !192, !"<string literal>", i1 false, i1 false}
!194 = !{ptr @cxgbi_sock_check_wr_invariants._entry, !192, !"_entry", i1 false, i1 false}
!195 = !{ptr @cxgbi_sock_check_wr_invariants._entry_ptr, !192, !"_entry_ptr", i1 false, i1 false}
!196 = !{ptr @__ksymtab_cxgbi_sock_check_wr_invariants, !197, !"__ksymtab_cxgbi_sock_check_wr_invariants", i1 false, i1 false}
!197 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1139, i32 1}
!198 = !{ptr @__ksymtab_cxgbi_ddp_set_one_ppod, !199, !"__ksymtab_cxgbi_ddp_set_one_ppod", i1 false, i1 false}
!199 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1207, i32 1}
!200 = !{ptr @__ksymtab_cxgbi_ddp_ppm_setup, !201, !"__ksymtab_cxgbi_ddp_ppm_setup", i1 false, i1 false}
!201 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1236, i32 1}
!202 = !{ptr @.str.67, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1444, i32 2}
!204 = !{ptr @.str.68, !203, !"<string literal>", i1 false, i1 false}
!205 = !{ptr @cxgbi_parse_pdu_itt._entry, !203, !"_entry", i1 false, i1 false}
!206 = !{ptr @cxgbi_parse_pdu_itt._entry_ptr, !203, !"_entry_ptr", i1 false, i1 false}
!207 = !{ptr @__ksymtab_cxgbi_parse_pdu_itt, !208, !"__ksymtab_cxgbi_parse_pdu_itt", i1 false, i1 false}
!208 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1449, i32 1}
!209 = !{ptr @.str.69, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1456, i32 3}
!211 = !{ptr @.str.70, !210, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @cxgbi_conn_tx_open._entry, !210, !"_entry", i1 false, i1 false}
!213 = !{ptr @cxgbi_conn_tx_open._entry_ptr, !210, !"_entry_ptr", i1 false, i1 false}
!214 = !{ptr @__ksymtab_cxgbi_conn_tx_open, !215, !"__ksymtab_cxgbi_conn_tx_open", i1 false, i1 false}
!215 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1461, i32 1}
!216 = !{ptr @.str.71, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1634, i32 2}
!218 = !{ptr @.str.72, !217, !"<string literal>", i1 false, i1 false}
!219 = !{ptr @cxgbi_conn_pdu_ready._entry, !217, !"_entry", i1 false, i1 false}
!220 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr, !217, !"_entry_ptr", i1 false, i1 false}
!221 = !{ptr @.str.74, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1638, i32 3}
!223 = !{ptr @cxgbi_conn_pdu_ready._entry.73, !222, !"_entry", i1 false, i1 false}
!224 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.75, !222, !"_entry_ptr", i1 false, i1 false}
!225 = !{ptr @.str.77, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1650, i32 5}
!227 = !{ptr @cxgbi_conn_pdu_ready._entry.76, !226, !"_entry", i1 false, i1 false}
!228 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.78, !226, !"_entry_ptr", i1 false, i1 false}
!229 = !{ptr @.str.80, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1658, i32 3}
!231 = !{ptr @cxgbi_conn_pdu_ready._entry.79, !230, !"_entry", i1 false, i1 false}
!232 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.81, !230, !"_entry_ptr", i1 false, i1 false}
!233 = !{ptr @.str.83, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1666, i32 5}
!235 = !{ptr @cxgbi_conn_pdu_ready._entry.82, !234, !"_entry", i1 false, i1 false}
!236 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.84, !234, !"_entry_ptr", i1 false, i1 false}
!237 = !{ptr @.str.86, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1676, i32 5}
!239 = !{ptr @cxgbi_conn_pdu_ready._entry.85, !238, !"_entry", i1 false, i1 false}
!240 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.87, !238, !"_entry_ptr", i1 false, i1 false}
!241 = !{ptr @.str.89, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1684, i32 5}
!243 = !{ptr @cxgbi_conn_pdu_ready._entry.88, !242, !"_entry", i1 false, i1 false}
!244 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.90, !242, !"_entry_ptr", i1 false, i1 false}
!245 = !{ptr @.str.92, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1697, i32 6}
!247 = !{ptr @cxgbi_conn_pdu_ready._entry.91, !246, !"_entry", i1 false, i1 false}
!248 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.93, !246, !"_entry_ptr", i1 false, i1 false}
!249 = !{ptr @.str.95, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1709, i32 6}
!251 = !{ptr @cxgbi_conn_pdu_ready._entry.94, !250, !"_entry", i1 false, i1 false}
!252 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.96, !250, !"_entry_ptr", i1 false, i1 false}
!253 = !{ptr @.str.98, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1727, i32 2}
!255 = !{ptr @cxgbi_conn_pdu_ready._entry.97, !254, !"_entry", i1 false, i1 false}
!256 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.99, !254, !"_entry_ptr", i1 false, i1 false}
!257 = !{ptr @.str.101, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1735, i32 3}
!259 = !{ptr @cxgbi_conn_pdu_ready._entry.100, !258, !"_entry", i1 false, i1 false}
!260 = !{ptr @cxgbi_conn_pdu_ready._entry_ptr.102, !258, !"_entry_ptr", i1 false, i1 false}
!261 = !{ptr @__ksymtab_cxgbi_conn_pdu_ready, !262, !"__ksymtab_cxgbi_conn_pdu_ready", i1 false, i1 false}
!262 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1740, i32 1}
!263 = !{ptr @.str.103, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1903, i32 3}
!265 = !{ptr @.str.104, !264, !"<string literal>", i1 false, i1 false}
!266 = !{ptr @cxgbi_conn_alloc_pdu._entry, !264, !"_entry", i1 false, i1 false}
!267 = !{ptr @cxgbi_conn_alloc_pdu._entry_ptr, !264, !"_entry_ptr", i1 false, i1 false}
!268 = !{ptr @.str.106, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1908, i32 3}
!270 = !{ptr @cxgbi_conn_alloc_pdu._entry.105, !269, !"_entry", i1 false, i1 false}
!271 = !{ptr @cxgbi_conn_alloc_pdu._entry_ptr.107, !269, !"_entry_ptr", i1 false, i1 false}
!272 = !{ptr @.str.109, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1941, i32 3}
!274 = !{ptr @cxgbi_conn_alloc_pdu._entry.108, !273, !"_entry", i1 false, i1 false}
!275 = !{ptr @cxgbi_conn_alloc_pdu._entry_ptr.110, !273, !"_entry_ptr", i1 false, i1 false}
!276 = !{ptr @.str.112, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1975, i32 4}
!278 = !{ptr @cxgbi_conn_alloc_pdu._entry.111, !277, !"_entry", i1 false, i1 false}
!279 = !{ptr @cxgbi_conn_alloc_pdu._entry_ptr.113, !277, !"_entry_ptr", i1 false, i1 false}
!280 = !{ptr @.str.115, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1987, i32 4}
!282 = !{ptr @cxgbi_conn_alloc_pdu._entry.114, !281, !"_entry", i1 false, i1 false}
!283 = !{ptr @cxgbi_conn_alloc_pdu._entry_ptr.116, !281, !"_entry_ptr", i1 false, i1 false}
!284 = !{ptr @.str.118, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2004, i32 4}
!286 = !{ptr @cxgbi_conn_alloc_pdu._entry.117, !285, !"_entry", i1 false, i1 false}
!287 = !{ptr @cxgbi_conn_alloc_pdu._entry_ptr.119, !285, !"_entry_ptr", i1 false, i1 false}
!288 = !{ptr @.str.121, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2047, i32 2}
!290 = !{ptr @cxgbi_conn_alloc_pdu._entry.120, !289, !"_entry", i1 false, i1 false}
!291 = !{ptr @cxgbi_conn_alloc_pdu._entry_ptr.122, !289, !"_entry_ptr", i1 false, i1 false}
!292 = !{ptr @__ksymtab_cxgbi_conn_alloc_pdu, !293, !"__ksymtab_cxgbi_conn_alloc_pdu", i1 false, i1 false}
!293 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2058, i32 1}
!294 = !{ptr @.str.123, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2159, i32 3}
!296 = !{ptr @.str.124, !295, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @cxgbi_conn_init_pdu._entry, !295, !"_entry", i1 false, i1 false}
!298 = !{ptr @cxgbi_conn_init_pdu._entry_ptr, !295, !"_entry_ptr", i1 false, i1 false}
!299 = !{ptr @.str.126, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2166, i32 2}
!301 = !{ptr @cxgbi_conn_init_pdu._entry.125, !300, !"_entry", i1 false, i1 false}
!302 = !{ptr @cxgbi_conn_init_pdu._entry_ptr.127, !300, !"_entry_ptr", i1 false, i1 false}
!303 = !{ptr @.str.129, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2185, i32 2}
!305 = !{ptr @cxgbi_conn_init_pdu._entry.128, !304, !"_entry", i1 false, i1 false}
!306 = !{ptr @cxgbi_conn_init_pdu._entry_ptr.130, !304, !"_entry_ptr", i1 false, i1 false}
!307 = !{ptr @.str.132, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2196, i32 4}
!309 = !{ptr @cxgbi_conn_init_pdu._entry.131, !308, !"_entry", i1 false, i1 false}
!310 = !{ptr @cxgbi_conn_init_pdu._entry_ptr.133, !308, !"_entry_ptr", i1 false, i1 false}
!311 = !{ptr @__ksymtab_cxgbi_conn_init_pdu, !312, !"__ksymtab_cxgbi_conn_init_pdu", i1 false, i1 false}
!312 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2271, i32 1}
!313 = !{ptr @.str.134, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2375, i32 3}
!315 = !{ptr @cxgbi_conn_xmit_pdu._entry, !314, !"_entry", i1 false, i1 false}
!316 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr, !314, !"_entry_ptr", i1 false, i1 false}
!317 = !{ptr @.str.136, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2383, i32 3}
!319 = !{ptr @cxgbi_conn_xmit_pdu._entry.135, !318, !"_entry", i1 false, i1 false}
!320 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.137, !318, !"_entry_ptr", i1 false, i1 false}
!321 = !{ptr @.str.139, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2392, i32 3}
!323 = !{ptr @cxgbi_conn_xmit_pdu._entry.138, !322, !"_entry", i1 false, i1 false}
!324 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.140, !322, !"_entry_ptr", i1 false, i1 false}
!325 = !{ptr @.str.142, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2406, i32 4}
!327 = !{ptr @cxgbi_conn_xmit_pdu._entry.141, !326, !"_entry", i1 false, i1 false}
!328 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.143, !326, !"_entry_ptr", i1 false, i1 false}
!329 = !{ptr @.str.145, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2418, i32 3}
!331 = !{ptr @cxgbi_conn_xmit_pdu._entry.144, !330, !"_entry", i1 false, i1 false}
!332 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.146, !330, !"_entry_ptr", i1 false, i1 false}
!333 = !{ptr @.str.148, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2433, i32 5}
!335 = !{ptr @cxgbi_conn_xmit_pdu._entry.147, !334, !"_entry", i1 false, i1 false}
!336 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.149, !334, !"_entry_ptr", i1 false, i1 false}
!337 = !{ptr @.str.151, !338, !"<string literal>", i1 false, i1 false}
!338 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2442, i32 3}
!339 = !{ptr @cxgbi_conn_xmit_pdu._entry.150, !338, !"_entry", i1 false, i1 false}
!340 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.152, !338, !"_entry_ptr", i1 false, i1 false}
!341 = !{ptr @.str.154, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2452, i32 4}
!343 = !{ptr @cxgbi_conn_xmit_pdu._entry.153, !342, !"_entry", i1 false, i1 false}
!344 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.155, !342, !"_entry_ptr", i1 false, i1 false}
!345 = !{ptr @.str.157, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2460, i32 2}
!347 = !{ptr @cxgbi_conn_xmit_pdu._entry.156, !346, !"_entry", i1 false, i1 false}
!348 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.158, !346, !"_entry_ptr", i1 false, i1 false}
!349 = !{ptr @.str.160, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2464, i32 2}
!351 = !{ptr @.str.161, !350, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @.str.162, !350, !"<string literal>", i1 false, i1 false}
!353 = !{ptr @cxgbi_conn_xmit_pdu._entry.159, !350, !"_entry", i1 false, i1 false}
!354 = !{ptr @cxgbi_conn_xmit_pdu._entry_ptr.163, !350, !"_entry_ptr", i1 false, i1 false}
!355 = !{ptr @__ksymtab_cxgbi_conn_xmit_pdu, !356, !"__ksymtab_cxgbi_conn_xmit_pdu", i1 false, i1 false}
!356 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2468, i32 1}
!357 = !{ptr @.str.164, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2476, i32 3}
!359 = !{ptr @.str.165, !358, !"<string literal>", i1 false, i1 false}
!360 = !{ptr @cxgbi_cleanup_task._entry, !358, !"_entry", i1 false, i1 false}
!361 = !{ptr @cxgbi_cleanup_task._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!362 = !{ptr @.str.167, !363, !"<string literal>", i1 false, i1 false}
!363 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2482, i32 2}
!364 = !{ptr @cxgbi_cleanup_task._entry.166, !363, !"_entry", i1 false, i1 false}
!365 = !{ptr @cxgbi_cleanup_task._entry_ptr.168, !363, !"_entry_ptr", i1 false, i1 false}
!366 = !{ptr @__ksymtab_cxgbi_cleanup_task, !367, !"__ksymtab_cxgbi_cleanup_task", i1 false, i1 false}
!367 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2503, i32 1}
!368 = !{ptr @.str.169, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2522, i32 32}
!370 = !{ptr @__ksymtab_cxgbi_get_conn_stats, !371, !"__ksymtab_cxgbi_get_conn_stats", i1 false, i1 false}
!371 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2525, i32 1}
!372 = !{ptr @.str.170, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2577, i32 2}
!374 = !{ptr @.str.171, !373, !"<string literal>", i1 false, i1 false}
!375 = !{ptr @cxgbi_set_conn_param._entry, !373, !"_entry", i1 false, i1 false}
!376 = !{ptr @cxgbi_set_conn_param._entry_ptr, !373, !"_entry_ptr", i1 false, i1 false}
!377 = !{ptr @__ksymtab_cxgbi_set_conn_param, !378, !"__ksymtab_cxgbi_set_conn_param", i1 false, i1 false}
!378 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2613, i32 1}
!379 = !{ptr @.str.172, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2621, i32 2}
!381 = !{ptr @.str.173, !380, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @cxgbi_get_ep_param._entry, !380, !"_entry", i1 false, i1 false}
!383 = !{ptr @cxgbi_get_ep_param._entry_ptr, !380, !"_entry_ptr", i1 false, i1 false}
!384 = !{ptr @__ksymtab_cxgbi_get_ep_param, !385, !"__ksymtab_cxgbi_get_ep_param", i1 false, i1 false}
!385 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2641, i32 1}
!386 = !{ptr @.str.174, !387, !"<string literal>", i1 false, i1 false}
!387 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2660, i32 2}
!388 = !{ptr @.str.175, !387, !"<string literal>", i1 false, i1 false}
!389 = !{ptr @cxgbi_create_conn._entry, !387, !"_entry", i1 false, i1 false}
!390 = !{ptr @cxgbi_create_conn._entry_ptr, !387, !"_entry_ptr", i1 false, i1 false}
!391 = !{ptr @__ksymtab_cxgbi_create_conn, !392, !"__ksymtab_cxgbi_create_conn", i1 false, i1 false}
!392 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2666, i32 1}
!393 = !{ptr @.str.176, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2714, i32 2}
!395 = !{ptr @.str.177, !394, !"<string literal>", i1 false, i1 false}
!396 = !{ptr @cxgbi_bind_conn._entry, !394, !"_entry", i1 false, i1 false}
!397 = !{ptr @cxgbi_bind_conn._entry_ptr, !394, !"_entry_ptr", i1 false, i1 false}
!398 = !{ptr @__ksymtab_cxgbi_bind_conn, !399, !"__ksymtab_cxgbi_bind_conn", i1 false, i1 false}
!399 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2724, i32 1}
!400 = !{ptr @.str.178, !401, !"<string literal>", i1 false, i1 false}
!401 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2737, i32 3}
!402 = !{ptr @.str.179, !401, !"<string literal>", i1 false, i1 false}
!403 = !{ptr @cxgbi_create_session._entry, !401, !"_entry", i1 false, i1 false}
!404 = !{ptr @cxgbi_create_session._entry_ptr, !401, !"_entry_ptr", i1 false, i1 false}
!405 = !{ptr @.str.181, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2759, i32 2}
!407 = !{ptr @cxgbi_create_session._entry.180, !406, !"_entry", i1 false, i1 false}
!408 = !{ptr @cxgbi_create_session._entry_ptr.182, !406, !"_entry_ptr", i1 false, i1 false}
!409 = !{ptr @__ksymtab_cxgbi_create_session, !410, !"__ksymtab_cxgbi_create_session", i1 false, i1 false}
!410 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2767, i32 1}
!411 = !{ptr @.str.183, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2771, i32 2}
!413 = !{ptr @.str.184, !412, !"<string literal>", i1 false, i1 false}
!414 = !{ptr @cxgbi_destroy_session._entry, !412, !"_entry", i1 false, i1 false}
!415 = !{ptr @cxgbi_destroy_session._entry_ptr, !412, !"_entry_ptr", i1 false, i1 false}
!416 = !{ptr @__ksymtab_cxgbi_destroy_session, !417, !"__ksymtab_cxgbi_destroy_session", i1 false, i1 false}
!417 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2777, i32 1}
!418 = !{ptr @.str.185, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2785, i32 3}
!420 = !{ptr @.str.186, !419, !"<string literal>", i1 false, i1 false}
!421 = !{ptr @cxgbi_set_host_param._entry, !419, !"_entry", i1 false, i1 false}
!422 = !{ptr @cxgbi_set_host_param._entry_ptr, !419, !"_entry_ptr", i1 false, i1 false}
!423 = !{ptr @.str.188, !424, !"<string literal>", i1 false, i1 false}
!424 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2790, i32 2}
!425 = !{ptr @cxgbi_set_host_param._entry.187, !424, !"_entry", i1 false, i1 false}
!426 = !{ptr @cxgbi_set_host_param._entry_ptr.189, !424, !"_entry_ptr", i1 false, i1 false}
!427 = !{ptr @.str.191, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2798, i32 3}
!429 = !{ptr @cxgbi_set_host_param._entry.190, !428, !"_entry", i1 false, i1 false}
!430 = !{ptr @cxgbi_set_host_param._entry_ptr.192, !428, !"_entry_ptr", i1 false, i1 false}
!431 = !{ptr @__ksymtab_cxgbi_set_host_param, !432, !"__ksymtab_cxgbi_set_host_param", i1 false, i1 false}
!432 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2810, i32 1}
!433 = !{ptr @.str.193, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2819, i32 3}
!435 = !{ptr @cxgbi_get_host_param._entry, !434, !"_entry", i1 false, i1 false}
!436 = !{ptr @cxgbi_get_host_param._entry_ptr, !434, !"_entry_ptr", i1 false, i1 false}
!437 = !{ptr @.str.195, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2824, i32 2}
!439 = !{ptr @cxgbi_get_host_param._entry.194, !438, !"_entry", i1 false, i1 false}
!440 = !{ptr @cxgbi_get_host_param._entry_ptr.196, !438, !"_entry_ptr", i1 false, i1 false}
!441 = !{ptr @.str.197, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2833, i32 22}
!443 = !{ptr @.str.198, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2840, i32 23}
!445 = !{ptr @.str.200, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2843, i32 3}
!447 = !{ptr @cxgbi_get_host_param._entry.199, !446, !"_entry", i1 false, i1 false}
!448 = !{ptr @cxgbi_get_host_param._entry_ptr.201, !446, !"_entry_ptr", i1 false, i1 false}
!449 = !{ptr @__ksymtab_cxgbi_get_host_param, !450, !"__ksymtab_cxgbi_get_host_param", i1 false, i1 false}
!450 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2853, i32 1}
!451 = !{ptr @.str.202, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2866, i32 2}
!453 = !{ptr @.str.203, !452, !"<string literal>", i1 false, i1 false}
!454 = !{ptr @cxgbi_ep_connect._entry, !452, !"_entry", i1 false, i1 false}
!455 = !{ptr @cxgbi_ep_connect._entry_ptr, !452, !"_entry_ptr", i1 false, i1 false}
!456 = !{ptr @.str.205, !457, !"<string literal>", i1 false, i1 false}
!457 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2873, i32 4}
!458 = !{ptr @cxgbi_ep_connect._entry.204, !457, !"_entry", i1 false, i1 false}
!459 = !{ptr @cxgbi_ep_connect._entry_ptr.206, !457, !"_entry_ptr", i1 false, i1 false}
!460 = !{ptr @.str.208, !461, !"<string literal>", i1 false, i1 false}
!461 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2886, i32 3}
!462 = !{ptr @cxgbi_ep_connect._entry.207, !461, !"_entry", i1 false, i1 false}
!463 = !{ptr @cxgbi_ep_connect._entry_ptr.209, !461, !"_entry_ptr", i1 false, i1 false}
!464 = !{ptr @.str.211, !465, !"<string literal>", i1 false, i1 false}
!465 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2906, i32 3}
!466 = !{ptr @cxgbi_ep_connect._entry.210, !465, !"_entry", i1 false, i1 false}
!467 = !{ptr @cxgbi_ep_connect._entry_ptr.212, !465, !"_entry_ptr", i1 false, i1 false}
!468 = !{ptr @.str.214, !469, !"<string literal>", i1 false, i1 false}
!469 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2925, i32 3}
!470 = !{ptr @cxgbi_ep_connect._entry.213, !469, !"_entry", i1 false, i1 false}
!471 = !{ptr @cxgbi_ep_connect._entry_ptr.215, !469, !"_entry_ptr", i1 false, i1 false}
!472 = !{ptr @.str.217, !473, !"<string literal>", i1 false, i1 false}
!473 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2932, i32 3}
!474 = !{ptr @cxgbi_ep_connect._entry.216, !473, !"_entry", i1 false, i1 false}
!475 = !{ptr @cxgbi_ep_connect._entry_ptr.218, !473, !"_entry_ptr", i1 false, i1 false}
!476 = !{ptr @.str.220, !477, !"<string literal>", i1 false, i1 false}
!477 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2940, i32 2}
!478 = !{ptr @cxgbi_ep_connect._entry.219, !477, !"_entry", i1 false, i1 false}
!479 = !{ptr @cxgbi_ep_connect._entry_ptr.221, !477, !"_entry_ptr", i1 false, i1 false}
!480 = !{ptr @__ksymtab_cxgbi_ep_connect, !481, !"__ksymtab_cxgbi_ep_connect", i1 false, i1 false}
!481 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2951, i32 1}
!482 = !{ptr @__ksymtab_cxgbi_ep_poll, !483, !"__ksymtab_cxgbi_ep_poll", i1 false, i1 false}
!483 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2962, i32 1}
!484 = !{ptr @.str.222, !485, !"<string literal>", i1 false, i1 false}
!485 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2970, i32 2}
!486 = !{ptr @.str.223, !485, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @cxgbi_ep_disconnect._entry, !485, !"_entry", i1 false, i1 false}
!488 = !{ptr @cxgbi_ep_disconnect._entry_ptr, !485, !"_entry_ptr", i1 false, i1 false}
!489 = !{ptr @__ksymtab_cxgbi_ep_disconnect, !490, !"__ksymtab_cxgbi_ep_disconnect", i1 false, i1 false}
!490 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2989, i32 1}
!491 = !{ptr @.str.224, !492, !"<string literal>", i1 false, i1 false}
!492 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2996, i32 3}
!493 = !{ptr @.str.225, !492, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @cxgbi_iscsi_init._entry, !492, !"_entry", i1 false, i1 false}
!495 = !{ptr @cxgbi_iscsi_init._entry_ptr, !492, !"_entry_ptr", i1 false, i1 false}
!496 = !{ptr @.str.227, !497, !"<string literal>", i1 false, i1 false}
!497 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 3000, i32 2}
!498 = !{ptr @cxgbi_iscsi_init._entry.226, !497, !"_entry", i1 false, i1 false}
!499 = !{ptr @cxgbi_iscsi_init._entry_ptr.228, !497, !"_entry_ptr", i1 false, i1 false}
!500 = !{ptr @__ksymtab_cxgbi_iscsi_init, !501, !"__ksymtab_cxgbi_iscsi_init", i1 false, i1 false}
!501 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 3005, i32 1}
!502 = !{ptr @.str.229, !503, !"<string literal>", i1 false, i1 false}
!503 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 3011, i32 3}
!504 = !{ptr @.str.230, !503, !"<string literal>", i1 false, i1 false}
!505 = !{ptr @cxgbi_iscsi_cleanup._entry, !503, !"_entry", i1 false, i1 false}
!506 = !{ptr @cxgbi_iscsi_cleanup._entry_ptr, !503, !"_entry_ptr", i1 false, i1 false}
!507 = !{ptr @__ksymtab_cxgbi_iscsi_cleanup, !508, !"__ksymtab_cxgbi_iscsi_cleanup", i1 false, i1 false}
!508 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 3018, i32 1}
!509 = !{ptr @__ksymtab_cxgbi_attr_is_visible, !510, !"__ksymtab_cxgbi_attr_is_visible", i1 false, i1 false}
!510 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 3074, i32 1}
!511 = !{ptr @__initcall__kmod_libcxgbi__718_3096_libcxgbi_init_module6, !512, !"__initcall__kmod_libcxgbi__718_3096_libcxgbi_init_module6", i1 false, i1 false}
!512 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 3096, i32 1}
!513 = !{ptr @__exitcall_libcxgbi_exit_module, !514, !"__exitcall_libcxgbi_exit_module", i1 false, i1 false}
!514 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 3097, i32 1}
!515 = !{ptr @dbg_level, !516, !"dbg_level", i1 false, i1 false}
!516 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 35, i32 21}
!517 = !{ptr @rsvd_page, !518, !"rsvd_page", i1 false, i1 false}
!518 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2142, i32 21}
!519 = !{ptr @__param_str_dbg_level, !14, !"__param_str_dbg_level", i1 false, i1 false}
!520 = !{ptr @.str.231, !521, !"<string literal>", i1 false, i1 false}
!521 = !{!"../drivers/scsi/cxgbi/libcxgbi.h", i32 278, i32 2}
!522 = !{ptr @.str.232, !521, !"<string literal>", i1 false, i1 false}
!523 = !{ptr @.str.233, !521, !"<string literal>", i1 false, i1 false}
!524 = !{ptr @cxgbi_sock_set_flag._entry, !521, !"_entry", i1 false, i1 false}
!525 = !{ptr @cxgbi_sock_set_flag._entry_ptr, !521, !"_entry_ptr", i1 false, i1 false}
!526 = !{ptr @.str.234, !527, !"<string literal>", i1 false, i1 false}
!527 = !{!"../drivers/scsi/cxgbi/libcxgbi.h", i32 323, i32 2}
!528 = !{ptr @.str.235, !527, !"<string literal>", i1 false, i1 false}
!529 = !{ptr @__cxgbi_sock_put._entry, !527, !"_entry", i1 false, i1 false}
!530 = !{ptr @__cxgbi_sock_put._entry_ptr, !527, !"_entry_ptr", i1 false, i1 false}
!531 = !{ptr @.str.236, !532, !"<string literal>", i1 false, i1 false}
!532 = !{!"../drivers/scsi/cxgbi/libcxgbi.h", i32 314, i32 3}
!533 = !{ptr @.str.237, !532, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @cxgbi_sock_free._entry, !532, !"_entry", i1 false, i1 false}
!535 = !{ptr @cxgbi_sock_free._entry_ptr, !532, !"_entry_ptr", i1 false, i1 false}
!536 = !{ptr @.str.238, !537, !"<string literal>", i1 false, i1 false}
!537 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 62, i32 8}
!538 = !{ptr @.str.239, !537, !"<string literal>", i1 false, i1 false}
!539 = !{ptr @cdev_mutex, !537, !"cdev_mutex", i1 false, i1 false}
!540 = !{ptr @cdev_list, !541, !"cdev_list", i1 false, i1 false}
!541 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 61, i32 8}
!542 = !{ptr @.str.240, !543, !"<string literal>", i1 false, i1 false}
!543 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 65, i32 8}
!544 = !{ptr @cdev_rcu_lock, !543, !"cdev_rcu_lock", i1 false, i1 false}
!545 = !{ptr @cdev_rcu_list, !546, !"cdev_rcu_list", i1 false, i1 false}
!546 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 64, i32 8}
!547 = !{ptr @.str.241, !548, !"<string literal>", i1 false, i1 false}
!548 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 120, i32 2}
!549 = !{ptr @cxgbi_device_destroy._entry, !548, !"_entry", i1 false, i1 false}
!550 = !{ptr @cxgbi_device_destroy._entry_ptr, !548, !"_entry_ptr", i1 false, i1 false}
!551 = distinct !{null, !552, !"__warned", i1 false, i1 false}
!552 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!553 = !{ptr @.str.242, !552, !"<string literal>", i1 false, i1 false}
!554 = !{ptr @.str.243, !552, !"<string literal>", i1 false, i1 false}
!555 = distinct !{null, !556, !"__warned", i1 false, i1 false}
!556 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!557 = !{ptr @.str.244, !556, !"<string literal>", i1 false, i1 false}
!558 = !{ptr @.str.245, !559, !"<string literal>", i1 false, i1 false}
!559 = !{!"../drivers/scsi/cxgbi/libcxgbi.h", i32 302, i32 2}
!560 = !{ptr @.str.246, !559, !"<string literal>", i1 false, i1 false}
!561 = !{ptr @cxgbi_sock_set_state._entry, !559, !"_entry", i1 false, i1 false}
!562 = !{ptr @cxgbi_sock_set_state._entry_ptr, !559, !"_entry_ptr", i1 false, i1 false}
!563 = !{ptr @.str.247, !564, !"<string literal>", i1 false, i1 false}
!564 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 516, i32 4}
!565 = !{ptr @.str.248, !564, !"<string literal>", i1 false, i1 false}
!566 = !{ptr @sock_put_port._entry, !564, !"_entry", i1 false, i1 false}
!567 = !{ptr @sock_put_port._entry_ptr, !564, !"_entry_ptr", i1 false, i1 false}
!568 = !{ptr @.str.250, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 528, i32 3}
!570 = !{ptr @sock_put_port._entry.249, !569, !"_entry", i1 false, i1 false}
!571 = !{ptr @sock_put_port._entry_ptr.251, !569, !"_entry_ptr", i1 false, i1 false}
!572 = !{ptr @.str.252, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 842, i32 2}
!574 = !{ptr @.str.253, !573, !"<string literal>", i1 false, i1 false}
!575 = !{ptr @cxgbi_inform_iscsi_conn_closing._entry, !573, !"_entry", i1 false, i1 false}
!576 = !{ptr @cxgbi_inform_iscsi_conn_closing._entry_ptr, !573, !"_entry_ptr", i1 false, i1 false}
!577 = !{ptr @.str.254, !578, !"<string literal>", i1 false, i1 false}
!578 = !{!"../drivers/scsi/cxgbi/libcxgbi.h", i32 332, i32 2}
!579 = !{ptr @.str.255, !578, !"<string literal>", i1 false, i1 false}
!580 = !{ptr @__cxgbi_sock_get._entry, !578, !"_entry", i1 false, i1 false}
!581 = !{ptr @__cxgbi_sock_get._entry_ptr, !578, !"_entry_ptr", i1 false, i1 false}
!582 = !{ptr @.str.256, !583, !"<string literal>", i1 false, i1 false}
!583 = !{!"../drivers/scsi/cxgbi/libcxgbi.h", i32 287, i32 2}
!584 = !{ptr @cxgbi_sock_clear_flag._entry, !583, !"_entry", i1 false, i1 false}
!585 = !{ptr @cxgbi_sock_clear_flag._entry_ptr, !583, !"_entry_ptr", i1 false, i1 false}
!586 = !{ptr @.str.257, !587, !"<string literal>", i1 false, i1 false}
!587 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1514, i32 2}
!588 = !{ptr @.str.258, !587, !"<string literal>", i1 false, i1 false}
!589 = !{ptr @skb_read_pdu_bhs._entry, !587, !"_entry", i1 false, i1 false}
!590 = !{ptr @skb_read_pdu_bhs._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!591 = !{ptr @.str.260, !592, !"<string literal>", i1 false, i1 false}
!592 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1519, i32 3}
!593 = !{ptr @skb_read_pdu_bhs._entry.259, !592, !"_entry", i1 false, i1 false}
!594 = !{ptr @skb_read_pdu_bhs._entry_ptr.261, !592, !"_entry_ptr", i1 false, i1 false}
!595 = !{ptr @.str.263, !596, !"<string literal>", i1 false, i1 false}
!596 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1526, i32 3}
!597 = !{ptr @skb_read_pdu_bhs._entry.262, !596, !"_entry", i1 false, i1 false}
!598 = !{ptr @skb_read_pdu_bhs._entry_ptr.264, !596, !"_entry_ptr", i1 false, i1 false}
!599 = !{ptr @.str.265, !600, !"<string literal>", i1 false, i1 false}
!600 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1477, i32 3}
!601 = !{ptr @.str.266, !600, !"<string literal>", i1 false, i1 false}
!602 = !{ptr @read_pdu_skb._entry, !600, !"_entry", i1 false, i1 false}
!603 = !{ptr @read_pdu_skb._entry_ptr, !600, !"_entry_ptr", i1 false, i1 false}
!604 = !{ptr @.str.268, !605, !"<string literal>", i1 false, i1 false}
!605 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1481, i32 3}
!606 = !{ptr @read_pdu_skb._entry.267, !605, !"_entry", i1 false, i1 false}
!607 = !{ptr @read_pdu_skb._entry_ptr.269, !605, !"_entry_ptr", i1 false, i1 false}
!608 = !{ptr @.str.271, !609, !"<string literal>", i1 false, i1 false}
!609 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1487, i32 3}
!610 = !{ptr @read_pdu_skb._entry.270, !609, !"_entry", i1 false, i1 false}
!611 = !{ptr @read_pdu_skb._entry_ptr.272, !609, !"_entry_ptr", i1 false, i1 false}
!612 = !{ptr @.str.274, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1493, i32 3}
!614 = !{ptr @read_pdu_skb._entry.273, !613, !"_entry", i1 false, i1 false}
!615 = !{ptr @read_pdu_skb._entry_ptr.275, !613, !"_entry_ptr", i1 false, i1 false}
!616 = !{ptr @.str.277, !617, !"<string literal>", i1 false, i1 false}
!617 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1496, i32 3}
!618 = !{ptr @read_pdu_skb._entry.276, !617, !"_entry", i1 false, i1 false}
!619 = !{ptr @read_pdu_skb._entry_ptr.278, !617, !"_entry_ptr", i1 false, i1 false}
!620 = !{ptr @.str.280, !621, !"<string literal>", i1 false, i1 false}
!621 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1501, i32 3}
!622 = !{ptr @read_pdu_skb._entry.279, !621, !"_entry", i1 false, i1 false}
!623 = !{ptr @read_pdu_skb._entry_ptr.281, !621, !"_entry_ptr", i1 false, i1 false}
!624 = !{ptr @.str.282, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1569, i32 2}
!626 = !{ptr @skb_read_pdu_data._entry, !625, !"_entry", i1 false, i1 false}
!627 = !{ptr @skb_read_pdu_data._entry_ptr, !625, !"_entry_ptr", i1 false, i1 false}
!628 = !{ptr @.str.284, !629, !"<string literal>", i1 false, i1 false}
!629 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1575, i32 3}
!630 = !{ptr @skb_read_pdu_data._entry.283, !629, !"_entry", i1 false, i1 false}
!631 = !{ptr @skb_read_pdu_data._entry_ptr.285, !629, !"_entry_ptr", i1 false, i1 false}
!632 = !{ptr @.str.287, !633, !"<string literal>", i1 false, i1 false}
!633 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1592, i32 3}
!634 = !{ptr @skb_read_pdu_data._entry.286, !633, !"_entry", i1 false, i1 false}
!635 = !{ptr @skb_read_pdu_data._entry_ptr.288, !633, !"_entry_ptr", i1 false, i1 false}
!636 = !{ptr @.str.289, !633, !"<string literal>", i1 false, i1 false}
!637 = !{ptr @.str.290, !633, !"<string literal>", i1 false, i1 false}
!638 = !{ptr @.str.291, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1606, i32 2}
!640 = !{ptr @.str.292, !639, !"<string literal>", i1 false, i1 false}
!641 = !{ptr @csk_return_rx_credits._entry, !639, !"_entry", i1 false, i1 false}
!642 = !{ptr @csk_return_rx_credits._entry_ptr, !639, !"_entry_ptr", i1 false, i1 false}
!643 = !{ptr @.str.293, !644, !"<string literal>", i1 false, i1 false}
!644 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1859, i32 3}
!645 = !{ptr @.str.294, !644, !"<string literal>", i1 false, i1 false}
!646 = !{ptr @cxgbi_task_data_sgl_read._entry, !644, !"_entry", i1 false, i1 false}
!647 = !{ptr @cxgbi_task_data_sgl_read._entry_ptr, !644, !"_entry_ptr", i1 false, i1 false}
!648 = !{ptr @.str.296, !649, !"<string literal>", i1 false, i1 false}
!649 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1866, i32 3}
!650 = !{ptr @cxgbi_task_data_sgl_read._entry.295, !649, !"_entry", i1 false, i1 false}
!651 = !{ptr @cxgbi_task_data_sgl_read._entry_ptr.297, !649, !"_entry_ptr", i1 false, i1 false}
!652 = !{ptr @.str.299, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1877, i32 2}
!654 = !{ptr @cxgbi_task_data_sgl_read._entry.298, !653, !"_entry", i1 false, i1 false}
!655 = !{ptr @cxgbi_task_data_sgl_read._entry_ptr.300, !653, !"_entry_ptr", i1 false, i1 false}
!656 = !{ptr @.str.301, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1777, i32 5}
!658 = !{ptr @.str.302, !657, !"<string literal>", i1 false, i1 false}
!659 = !{ptr @sgl_read_to_frags._entry, !657, !"_entry", i1 false, i1 false}
!660 = !{ptr @sgl_read_to_frags._entry_ptr, !657, !"_entry_ptr", i1 false, i1 false}
!661 = !{ptr @.str.304, !662, !"<string literal>", i1 false, i1 false}
!662 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1793, i32 5}
!663 = !{ptr @sgl_read_to_frags._entry.303, !662, !"_entry", i1 false, i1 false}
!664 = !{ptr @sgl_read_to_frags._entry_ptr.305, !662, !"_entry_ptr", i1 false, i1 false}
!665 = !{ptr @.str.306, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1405, i32 5}
!667 = !{ptr @.str.307, !666, !"<string literal>", i1 false, i1 false}
!668 = !{ptr @task_reserve_itt._entry, !666, !"_entry", i1 false, i1 false}
!669 = !{ptr @task_reserve_itt._entry_ptr, !666, !"_entry_ptr", i1 false, i1 false}
!670 = !{ptr @.str.309, !671, !"<string literal>", i1 false, i1 false}
!671 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1419, i32 2}
!672 = !{ptr @task_reserve_itt._entry.308, !671, !"_entry", i1 false, i1 false}
!673 = !{ptr @task_reserve_itt._entry_ptr.310, !671, !"_entry_ptr", i1 false, i1 false}
!674 = !{ptr @.str.311, !675, !"<string literal>", i1 false, i1 false}
!675 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1274, i32 3}
!676 = !{ptr @.str.312, !675, !"<string literal>", i1 false, i1 false}
!677 = !{ptr @cxgbi_ddp_reserve._entry, !675, !"_entry", i1 false, i1 false}
!678 = !{ptr @cxgbi_ddp_reserve._entry_ptr, !675, !"_entry_ptr", i1 false, i1 false}
!679 = !{ptr @.str.314, !680, !"<string literal>", i1 false, i1 false}
!680 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1281, i32 3}
!681 = !{ptr @cxgbi_ddp_reserve._entry.313, !680, !"_entry", i1 false, i1 false}
!682 = !{ptr @cxgbi_ddp_reserve._entry_ptr.315, !680, !"_entry_ptr", i1 false, i1 false}
!683 = !{ptr @.str.317, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1313, i32 3}
!685 = !{ptr @cxgbi_ddp_reserve._entry.316, !684, !"_entry", i1 false, i1 false}
!686 = !{ptr @cxgbi_ddp_reserve._entry_ptr.318, !684, !"_entry_ptr", i1 false, i1 false}
!687 = !{ptr @.str.320, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1318, i32 3}
!689 = !{ptr @cxgbi_ddp_reserve._entry.319, !688, !"_entry", i1 false, i1 false}
!690 = !{ptr @cxgbi_ddp_reserve._entry_ptr.321, !688, !"_entry_ptr", i1 false, i1 false}
!691 = !{ptr @.str.322, !692, !"<string literal>", i1 false, i1 false}
!692 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1249, i32 4}
!693 = !{ptr @.str.323, !692, !"<string literal>", i1 false, i1 false}
!694 = !{ptr @cxgbi_ddp_sgl_check._entry, !692, !"_entry", i1 false, i1 false}
!695 = !{ptr @cxgbi_ddp_sgl_check._entry_ptr, !692, !"_entry_ptr", i1 false, i1 false}
!696 = !{ptr @.str.324, !697, !"<string literal>", i1 false, i1 false}
!697 = !{!"../drivers/net/ethernet/chelsio/libcxgb/libcxgb_ppm.h", i32 216, i32 3}
!698 = !{ptr @.str.325, !697, !"<string literal>", i1 false, i1 false}
!699 = !{ptr @.str.326, !697, !"<string literal>", i1 false, i1 false}
!700 = !{ptr @cxgbi_ppm_make_non_ddp_tag._entry, !697, !"_entry", i1 false, i1 false}
!701 = !{ptr @cxgbi_ppm_make_non_ddp_tag._entry_ptr, !697, !"_entry_ptr", i1 false, i1 false}
!702 = !{ptr @.str.327, !703, !"<string literal>", i1 false, i1 false}
!703 = !{!"../include/linux/mm.h", i32 1160, i32 2}
!704 = !{ptr @.str.328, !705, !"<string literal>", i1 false, i1 false}
!705 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2097, i32 3}
!706 = !{ptr @.str.329, !705, !"<string literal>", i1 false, i1 false}
!707 = !{ptr @cxgbi_prep_iso_info._entry, !705, !"_entry", i1 false, i1 false}
!708 = !{ptr @cxgbi_prep_iso_info._entry_ptr, !705, !"_entry_ptr", i1 false, i1 false}
!709 = !{ptr @.str.330, !710, !"<string literal>", i1 false, i1 false}
!710 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2282, i32 3}
!711 = !{ptr @.str.331, !710, !"<string literal>", i1 false, i1 false}
!712 = !{ptr @cxgbi_sock_tx_queue_up._entry, !710, !"_entry", i1 false, i1 false}
!713 = !{ptr @cxgbi_sock_tx_queue_up._entry_ptr, !710, !"_entry_ptr", i1 false, i1 false}
!714 = !{ptr @.str.333, !715, !"<string literal>", i1 false, i1 false}
!715 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2289, i32 3}
!716 = !{ptr @cxgbi_sock_tx_queue_up._entry.332, !715, !"_entry", i1 false, i1 false}
!717 = !{ptr @cxgbi_sock_tx_queue_up._entry_ptr.334, !715, !"_entry_ptr", i1 false, i1 false}
!718 = !{ptr @.str.336, !719, !"<string literal>", i1 false, i1 false}
!719 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2297, i32 3}
!720 = !{ptr @cxgbi_sock_tx_queue_up._entry.335, !719, !"_entry", i1 false, i1 false}
!721 = !{ptr @cxgbi_sock_tx_queue_up._entry_ptr.337, !719, !"_entry_ptr", i1 false, i1 false}
!722 = !{ptr @.str.339, !723, !"<string literal>", i1 false, i1 false}
!723 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2308, i32 3}
!724 = !{ptr @cxgbi_sock_tx_queue_up._entry.338, !723, !"_entry", i1 false, i1 false}
!725 = !{ptr @cxgbi_sock_tx_queue_up._entry_ptr.340, !723, !"_entry_ptr", i1 false, i1 false}
!726 = !{ptr @.str.342, !727, !"<string literal>", i1 false, i1 false}
!727 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2317, i32 3}
!728 = !{ptr @cxgbi_sock_tx_queue_up._entry.341, !727, !"_entry", i1 false, i1 false}
!729 = !{ptr @cxgbi_sock_tx_queue_up._entry_ptr.343, !727, !"_entry_ptr", i1 false, i1 false}
!730 = !{ptr @ulp2_extra_len, !731, !"ulp2_extra_len", i1 false, i1 false}
!731 = !{!"../drivers/scsi/cxgbi/libcxgbi.h", i32 92, i32 27}
!732 = !{ptr @.str.344, !733, !"<string literal>", i1 false, i1 false}
!733 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 1360, i32 2}
!734 = !{ptr @.str.345, !733, !"<string literal>", i1 false, i1 false}
!735 = !{ptr @task_release_itt._entry, !733, !"_entry", i1 false, i1 false}
!736 = !{ptr @task_release_itt._entry_ptr, !733, !"_entry_ptr", i1 false, i1 false}
!737 = !{ptr @.str.346, !738, !"<string literal>", i1 false, i1 false}
!738 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 2556, i32 4}
!739 = !{ptr @.str.347, !738, !"<string literal>", i1 false, i1 false}
!740 = !{ptr @cxgbi_conn_max_recv_dlength._entry, !738, !"_entry", i1 false, i1 false}
!741 = !{ptr @cxgbi_conn_max_recv_dlength._entry_ptr, !738, !"_entry_ptr", i1 false, i1 false}
!742 = !{ptr @.str.348, !743, !"<string literal>", i1 false, i1 false}
!743 = !{!"../drivers/scsi/cxgbi/libcxgbi.h", i32 583, i32 3}
!744 = !{ptr @.str.349, !743, !"<string literal>", i1 false, i1 false}
!745 = !{ptr @cxgbi_set_iscsi_ipv4._entry, !743, !"_entry", i1 false, i1 false}
!746 = !{ptr @cxgbi_set_iscsi_ipv4._entry_ptr, !743, !"_entry_ptr", i1 false, i1 false}
!747 = !{ptr @.str.350, !748, !"<string literal>", i1 false, i1 false}
!748 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 621, i32 3}
!749 = !{ptr @.str.351, !748, !"<string literal>", i1 false, i1 false}
!750 = !{ptr @cxgbi_check_route._entry, !748, !"_entry", i1 false, i1 false}
!751 = !{ptr @cxgbi_check_route._entry_ptr, !748, !"_entry_ptr", i1 false, i1 false}
!752 = !{ptr @.str.353, !753, !"<string literal>", i1 false, i1 false}
!753 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 636, i32 3}
!754 = !{ptr @cxgbi_check_route._entry.352, !753, !"_entry", i1 false, i1 false}
!755 = !{ptr @cxgbi_check_route._entry_ptr.354, !753, !"_entry_ptr", i1 false, i1 false}
!756 = !{ptr @.str.356, !757, !"<string literal>", i1 false, i1 false}
!757 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 650, i32 3}
!758 = !{ptr @cxgbi_check_route._entry.355, !757, !"_entry", i1 false, i1 false}
!759 = !{ptr @cxgbi_check_route._entry_ptr.357, !757, !"_entry_ptr", i1 false, i1 false}
!760 = !{ptr @.str.359, !761, !"<string literal>", i1 false, i1 false}
!761 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 655, i32 3}
!762 = !{ptr @cxgbi_check_route._entry.358, !761, !"_entry", i1 false, i1 false}
!763 = !{ptr @cxgbi_check_route._entry_ptr.360, !761, !"_entry_ptr", i1 false, i1 false}
!764 = !{ptr @.str.362, !765, !"<string literal>", i1 false, i1 false}
!765 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 664, i32 3}
!766 = !{ptr @cxgbi_check_route._entry.361, !765, !"_entry", i1 false, i1 false}
!767 = !{ptr @cxgbi_check_route._entry_ptr.363, !765, !"_entry_ptr", i1 false, i1 false}
!768 = !{ptr @.str.365, !769, !"<string literal>", i1 false, i1 false}
!769 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 669, i32 2}
!770 = !{ptr @cxgbi_check_route._entry.364, !769, !"_entry", i1 false, i1 false}
!771 = !{ptr @cxgbi_check_route._entry_ptr.366, !769, !"_entry_ptr", i1 false, i1 false}
!772 = !{ptr @.str.367, !773, !"<string literal>", i1 false, i1 false}
!773 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 296, i32 3}
!774 = !{ptr @cxgbi_device_find_by_mac._entry, !773, !"_entry", i1 false, i1 false}
!775 = !{ptr @cxgbi_device_find_by_mac._entry_ptr, !773, !"_entry_ptr", i1 false, i1 false}
!776 = !{ptr @.str.369, !777, !"<string literal>", i1 false, i1 false}
!777 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 313, i32 2}
!778 = !{ptr @cxgbi_device_find_by_mac._entry.368, !777, !"_entry", i1 false, i1 false}
!779 = !{ptr @cxgbi_device_find_by_mac._entry_ptr.370, !777, !"_entry_ptr", i1 false, i1 false}
!780 = !{ptr @.str.371, !781, !"<string literal>", i1 false, i1 false}
!781 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 562, i32 3}
!782 = !{ptr @.str.372, !781, !"<string literal>", i1 false, i1 false}
!783 = !{ptr @cxgbi_sock_create._entry, !781, !"_entry", i1 false, i1 false}
!784 = !{ptr @cxgbi_sock_create._entry_ptr, !781, !"_entry_ptr", i1 false, i1 false}
!785 = !{ptr @.str.374, !786, !"<string literal>", i1 false, i1 false}
!786 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 567, i32 3}
!787 = !{ptr @cxgbi_sock_create._entry.373, !786, !"_entry", i1 false, i1 false}
!788 = !{ptr @cxgbi_sock_create._entry_ptr.375, !786, !"_entry_ptr", i1 false, i1 false}
!789 = !{ptr @cxgbi_sock_create.__key, !790, !"__key", i1 false, i1 false}
!790 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 572, i32 2}
!791 = !{ptr @.str.376, !790, !"<string literal>", i1 false, i1 false}
!792 = !{ptr @cxgbi_sock_create.__key.377, !793, !"__key", i1 false, i1 false}
!793 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 576, i32 2}
!794 = !{ptr @.str.378, !793, !"<string literal>", i1 false, i1 false}
!795 = !{ptr @cxgbi_sock_create.__key.379, !796, !"__key", i1 false, i1 false}
!796 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 578, i32 2}
!797 = !{ptr @.str.380, !796, !"<string literal>", i1 false, i1 false}
!798 = !{ptr @.str.382, !799, !"<string literal>", i1 false, i1 false}
!799 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 583, i32 2}
!800 = !{ptr @cxgbi_sock_create._entry.381, !799, !"_entry", i1 false, i1 false}
!801 = !{ptr @cxgbi_sock_create._entry_ptr.383, !799, !"_entry_ptr", i1 false, i1 false}
!802 = !{ptr @skb_queue_head_init.__key, !803, !"__key", i1 false, i1 false}
!803 = !{!"../include/linux/skbuff.h", i32 1984, i32 2}
!804 = !{ptr @.str.384, !803, !"<string literal>", i1 false, i1 false}
!805 = !{ptr @init_completion.__key, !806, !"__key", i1 false, i1 false}
!806 = !{!"../include/linux/completion.h", i32 87, i32 2}
!807 = !{ptr @.str.385, !806, !"<string literal>", i1 false, i1 false}
!808 = !{ptr @.str.386, !809, !"<string literal>", i1 false, i1 false}
!809 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 737, i32 3}
!810 = !{ptr @.str.387, !809, !"<string literal>", i1 false, i1 false}
!811 = !{ptr @cxgbi_check_route6._entry, !809, !"_entry", i1 false, i1 false}
!812 = !{ptr @cxgbi_check_route6._entry_ptr, !809, !"_entry_ptr", i1 false, i1 false}
!813 = !{ptr @.str.389, !814, !"<string literal>", i1 false, i1 false}
!814 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 749, i32 3}
!815 = !{ptr @cxgbi_check_route6._entry.388, !814, !"_entry", i1 false, i1 false}
!816 = !{ptr @cxgbi_check_route6._entry_ptr.390, !814, !"_entry_ptr", i1 false, i1 false}
!817 = !{ptr @cxgbi_check_route6._entry.391, !818, !"_entry", i1 false, i1 false}
!818 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 758, i32 3}
!819 = !{ptr @cxgbi_check_route6._entry_ptr.392, !818, !"_entry_ptr", i1 false, i1 false}
!820 = !{ptr @.str.394, !821, !"<string literal>", i1 false, i1 false}
!821 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 764, i32 3}
!822 = !{ptr @cxgbi_check_route6._entry.393, !821, !"_entry", i1 false, i1 false}
!823 = !{ptr @cxgbi_check_route6._entry_ptr.395, !821, !"_entry_ptr", i1 false, i1 false}
!824 = !{ptr @.str.397, !825, !"<string literal>", i1 false, i1 false}
!825 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 775, i32 3}
!826 = !{ptr @cxgbi_check_route6._entry.396, !825, !"_entry", i1 false, i1 false}
!827 = !{ptr @cxgbi_check_route6._entry_ptr.398, !825, !"_entry_ptr", i1 false, i1 false}
!828 = !{ptr @.str.400, !829, !"<string literal>", i1 false, i1 false}
!829 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 780, i32 2}
!830 = !{ptr @cxgbi_check_route6._entry.399, !829, !"_entry", i1 false, i1 false}
!831 = !{ptr @cxgbi_check_route6._entry_ptr.401, !829, !"_entry_ptr", i1 false, i1 false}
!832 = !{ptr @.str.403, !833, !"<string literal>", i1 false, i1 false}
!833 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 802, i32 4}
!834 = !{ptr @cxgbi_check_route6._entry.402, !833, !"_entry", i1 false, i1 false}
!835 = !{ptr @cxgbi_check_route6._entry_ptr.404, !833, !"_entry_ptr", i1 false, i1 false}
!836 = distinct !{null, !837, !"__warned", i1 false, i1 false}
!837 = !{!"../include/net/ip6_fib.h", i32 475, i32 9}
!838 = !{ptr @.str.405, !837, !"<string literal>", i1 false, i1 false}
!839 = !{ptr @.str.406, !837, !"<string literal>", i1 false, i1 false}
!840 = !{ptr @.str.407, !841, !"<string literal>", i1 false, i1 false}
!841 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 448, i32 3}
!842 = !{ptr @.str.408, !841, !"<string literal>", i1 false, i1 false}
!843 = !{ptr @sock_get_port._entry, !841, !"_entry", i1 false, i1 false}
!844 = !{ptr @sock_get_port._entry_ptr, !841, !"_entry_ptr", i1 false, i1 false}
!845 = !{ptr @.str.410, !846, !"<string literal>", i1 false, i1 false}
!846 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 459, i32 3}
!847 = !{ptr @sock_get_port._entry.409, !846, !"_entry", i1 false, i1 false}
!848 = !{ptr @sock_get_port._entry_ptr.411, !846, !"_entry_ptr", i1 false, i1 false}
!849 = !{ptr @.str.413, !850, !"<string literal>", i1 false, i1 false}
!850 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 467, i32 3}
!851 = !{ptr @sock_get_port._entry.412, !850, !"_entry", i1 false, i1 false}
!852 = !{ptr @sock_get_port._entry_ptr.414, !850, !"_entry_ptr", i1 false, i1 false}
!853 = !{ptr @.str.416, !854, !"<string literal>", i1 false, i1 false}
!854 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 483, i32 4}
!855 = !{ptr @sock_get_port._entry.415, !854, !"_entry", i1 false, i1 false}
!856 = !{ptr @sock_get_port._entry_ptr.417, !854, !"_entry_ptr", i1 false, i1 false}
!857 = !{ptr @.str.419, !858, !"<string literal>", i1 false, i1 false}
!858 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 494, i32 2}
!859 = !{ptr @sock_get_port._entry.418, !858, !"_entry", i1 false, i1 false}
!860 = !{ptr @sock_get_port._entry_ptr.420, !858, !"_entry_ptr", i1 false, i1 false}
!861 = !{ptr @.str.421, !862, !"<string literal>", i1 false, i1 false}
!862 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 878, i32 2}
!863 = !{ptr @need_active_close._entry, !862, !"_entry", i1 false, i1 false}
!864 = !{ptr @need_active_close._entry_ptr, !862, !"_entry_ptr", i1 false, i1 false}
!865 = !{ptr @.str.422, !866, !"<string literal>", i1 false, i1 false}
!866 = !{!"../include/linux/mm.h", i32 717, i32 2}
!867 = !{ptr @.str.423, !868, !"<string literal>", i1 false, i1 false}
!868 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 3078, i32 2}
!869 = !{ptr @.str.424, !868, !"<string literal>", i1 false, i1 false}
!870 = !{ptr @libcxgbi_init_module._entry, !868, !"_entry", i1 false, i1 false}
!871 = !{ptr @libcxgbi_init_module._entry_ptr, !868, !"_entry_ptr", i1 false, i1 false}
!872 = !{ptr @version, !873, !"version", i1 false, i1 false}
!873 = !{!"../drivers/scsi/cxgbi/libcxgbi.c", i32 44, i32 13}
!874 = distinct !{null, !875, !"<string literal>", i1 false, i1 false}
!875 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!876 = !{!"sp"}
!877 = !{i32 1, !"wchar_size", i32 2}
!878 = !{i32 1, !"min_enum_size", i32 4}
!879 = !{i32 8, !"branch-target-enforcement", i32 0}
!880 = !{i32 8, !"sign-return-address", i32 0}
!881 = !{i32 8, !"sign-return-address-all", i32 0}
!882 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!883 = !{i32 7, !"uwtable", i32 1}
!884 = !{i32 7, !"frame-pointer", i32 2}
!885 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!886 = !{i64 2148516183}
!887 = !{i64 2148430647, i64 2148430679, i64 2148430708, i64 2148430742, i64 2148430773, i64 2148430796}
!888 = !{!"branch_weights", i32 2000, i32 1}
!889 = !{i64 2150597836}
!890 = !{i64 2149748681}
!891 = !{i64 2149723289}
!892 = !{i64 2149723555}
!893 = !{i64 2159939907}
!894 = !{i64 2148428182, i64 2148428214, i64 2148428243, i64 2148428277, i64 2148428308, i64 2148428331}
!895 = !{!"branch_weights", i32 1, i32 2000}
!896 = !{i64 2154409749, i64 2154410241, i64 2154409786, i64 2154409842, i64 2154409876, i64 2154409900, i64 2154409941, i64 2154409962, i64 2154409990, i64 2154410024}
!897 = !{i8 0, i8 2}
!898 = !{i64 2153858848}
!899 = !{i64 2152402488}
!900 = !{i64 2152402695}
!901 = !{i64 2153861619}
!902 = !{i64 2153386631, i64 2153387115, i64 2153386668, i64 2153386724, i64 2153386758, i64 2153386782, i64 2153386823, i64 2153386844, i64 2153386872, i64 2153386906}
!903 = !{i64 2148426652, i64 2148426678, i64 2148426707, i64 2148426741, i64 2148426772, i64 2148426795}
!904 = !{i64 2148908467, i64 2148908472, i64 2148908485, i64 2148908529, i64 2148908563, i64 2148908584}
!905 = !{i32 0, i32 33}
!906 = !{i64 2160206514, i64 2160207009, i64 2160206551, i64 2160206607, i64 2160206641, i64 2160206665, i64 2160206706, i64 2160206727, i64 2160206755, i64 2160206789}
!907 = !{i64 2153362658, i64 2153363141, i64 2153362695, i64 2153362751, i64 2153362785, i64 2153362809, i64 2153362850, i64 2153362871, i64 2153362899, i64 2153362933}
!908 = !{i64 2148515104}
!909 = !{i64 2148429837, i64 2148429869, i64 2148429898, i64 2148429932, i64 2148429963, i64 2148429986}
!910 = !{i64 2148515333}
