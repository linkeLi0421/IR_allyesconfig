; ModuleID = '/llk/IR_all_yes/drivers/soc/samsung/exynos5422-asv.c_pt.bc'
source_filename = "../drivers/soc/samsung/exynos5422-asv.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+exynos5422_asv_init\22, \22a\22\09"
module asm "\09.weak\09__crc_exynos5422_asv_init\09\09\09\09"
module asm "\09.long\09__crc_exynos5422_asv_init\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_exynos5422_asv_init:\09\09\09\09\09"
module asm "\09.asciz \09\22exynos5422_asv_init\22\09\09\09\09\09"
module asm "__kstrtabns_exynos5422_asv_init:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.exynos_asv = type { ptr, ptr, [2 x %struct.exynos_asv_subsys], ptr, i32, i32, i8, i32 }
%struct.exynos_asv_subsys = type { ptr, ptr, i32, %struct.exynos_asv_table, i32, i32, i32 }
%struct.exynos_asv_table = type { i32, i32, ptr }

@.str = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"arm,cortex-a15\00", [17 x i8] zeroinitializer }, align 32
@asv_arm_table = internal constant { [4 x [20 x [15 x i32]]], [1184 x i8] } { [4 x [20 x [15 x i32]]] [[20 x [15 x i32]] [[15 x i32] [i32 2100, i32 1362500, i32 1362500, i32 1350000, i32 1337500, i32 1325000, i32 1312500, i32 1300000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000], [15 x i32] [i32 2000, i32 1312500, i32 1312500, i32 1300000, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1900, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500], [15 x i32] [i32 1800, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1700, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000], [15 x i32] [i32 1600, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500], [15 x i32] [i32 1500, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000], [15 x i32] [i32 1400, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000], [15 x i32] [i32 1300, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500], [15 x i32] [i32 1200, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000], [15 x i32] [i32 1100, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 1000, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 900, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 800, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [20 x [15 x i32]] [[15 x i32] [i32 2100, i32 1362500, i32 1362500, i32 1350000, i32 1337500, i32 1325000, i32 1312500, i32 1300000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000], [15 x i32] [i32 2000, i32 1312500, i32 1312500, i32 1312500, i32 1300000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1900, i32 1262500, i32 1250000, i32 1250000, i32 1237500, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000], [15 x i32] [i32 1800, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000], [15 x i32] [i32 1700, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500], [15 x i32] [i32 1600, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000], [15 x i32] [i32 1500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500], [15 x i32] [i32 1400, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 1300, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500], [15 x i32] [i32 1200, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000], [15 x i32] [i32 1100, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 1000, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 900, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 800, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [20 x [15 x i32]] [[15 x i32] [i32 2100, i32 1362500, i32 1362500, i32 1350000, i32 1337500, i32 1325000, i32 1312500, i32 1300000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000], [15 x i32] [i32 2000, i32 1312500, i32 1312500, i32 1300000, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1900, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000], [15 x i32] [i32 1800, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000], [15 x i32] [i32 1700, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500], [15 x i32] [i32 1600, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000], [15 x i32] [i32 1500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500], [15 x i32] [i32 1400, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 1300, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500], [15 x i32] [i32 1200, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000], [15 x i32] [i32 1100, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 1000, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 900, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 800, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [20 x [15 x i32]] [[15 x i32] [i32 1800, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000], [15 x i32] [i32 1700, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1600, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000], [15 x i32] [i32 1500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500], [15 x i32] [i32 1400, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500], [15 x i32] [i32 1300, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000], [15 x i32] [i32 1200, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000], [15 x i32] [i32 1100, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000], [15 x i32] [i32 1000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 900, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 800, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] zeroinitializer, [15 x i32] zeroinitializer, [15 x i32] zeroinitializer]], [1184 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"arm,cortex-a7\00", [18 x i8] zeroinitializer }, align 32
@asv_kfc_table = internal constant { [4 x [14 x [15 x i32]]], [832 x i8] } { [4 x [14 x [15 x i32]]] [[14 x [15 x i32]] [[15 x i32] [i32 1500000, i32 1300000, i32 1300000, i32 1300000, i32 1287500, i32 1287500, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1400000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500], [15 x i32] [i32 1300000, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1200000, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500], [15 x i32] [i32 1100000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000], [15 x i32] [i32 1000000, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 900000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000], [15 x i32] [i32 800000, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600000, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [14 x [15 x i32]] [[15 x i32] [i32 1500, i32 1300000, i32 1300000, i32 1300000, i32 1287500, i32 1287500, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1400, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500], [15 x i32] [i32 1300, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1200, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500], [15 x i32] [i32 1100, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000], [15 x i32] [i32 1000, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 900, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000], [15 x i32] [i32 800, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [14 x [15 x i32]] [[15 x i32] [i32 1500, i32 1300000, i32 1300000, i32 1300000, i32 1287500, i32 1287500, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1400, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500], [15 x i32] [i32 1300, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1200, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500], [15 x i32] [i32 1100, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000], [15 x i32] [i32 1000, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 900, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000], [15 x i32] [i32 800, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [14 x [15 x i32]] [[15 x i32] [i32 1300, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500], [15 x i32] [i32 1200, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500], [15 x i32] [i32 1100, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000], [15 x i32] [i32 1000, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500], [15 x i32] [i32 900, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000], [15 x i32] [i32 800, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000], [15 x i32] [i32 700, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] zeroinitializer, [15 x i32] zeroinitializer]], [832 x i8] zeroinitializer }, align 32
@__kstrtab_exynos5422_asv_init = external dso_local constant [0 x i8], align 1
@__kstrtabns_exynos5422_asv_init = external dso_local constant [0 x i8], align 1
@__ksymtab_exynos5422_asv_init = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @exynos5422_asv_init to i32), ptr @__kstrtab_exynos5422_asv_init, ptr @__kstrtabns_exynos5422_asv_init }, section "___ksymtab_gpl+exynos5422_asv_init", align 4
@switch.table.exynos5422_asv_init = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 12500, i32 50000, i32 25000], [20 x i8] zeroinitializer }, align 32
@switch.table.exynos5422_asv_init.2 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 12500, i32 50000, i32 25000], [20 x i8] zeroinitializer }, align 32
@switch.table.exynos5422_asv_init.3 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 12500, i32 50000, i32 25000], [20 x i8] zeroinitializer }, align 32
@switch.table.exynos5422_asv_init.4 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 12500, i32 50000, i32 25000], [20 x i8] zeroinitializer }, align 32
@___asan_gen_.7 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.15, i32 485, i32 26 }
@___asan_gen_.8 = private unnamed_addr constant [14 x i8] c"asv_arm_table\00", align 1
@___asan_gen_.10 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.15, i32 35, i32 18 }
@___asan_gen_.11 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.13 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.15, i32 494, i32 26 }
@___asan_gen_.14 = private unnamed_addr constant [14 x i8] c"asv_kfc_table\00", align 1
@___asan_gen_.15 = private constant [40 x i8] c"../drivers/soc/samsung/exynos5422-asv.c\00", align 1
@___asan_gen_.16 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.15, i32 201, i32 18 }
@___asan_gen_.17 = private unnamed_addr constant [33 x i8] c"switch.table.exynos5422_asv_init\00", align 1
@___asan_gen_.18 = private unnamed_addr constant [35 x i8] c"switch.table.exynos5422_asv_init.2\00", align 1
@___asan_gen_.19 = private unnamed_addr constant [35 x i8] c"switch.table.exynos5422_asv_init.3\00", align 1
@___asan_gen_.20 = private unnamed_addr constant [35 x i8] c"switch.table.exynos5422_asv_init.4\00", align 1
@llvm.compiler.used = appending global [9 x ptr] [ptr @__ksymtab_exynos5422_asv_init, ptr @.str, ptr @asv_arm_table, ptr @.str.1, ptr @asv_kfc_table, ptr @switch.table.exynos5422_asv_init, ptr @switch.table.exynos5422_asv_init.2, ptr @switch.table.exynos5422_asv_init.3, ptr @switch.table.exynos5422_asv_init.4], section "llvm.metadata"
@0 = internal global [8 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.11 to i32), i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.7 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asv_arm_table to i32), i32 4800, i32 5984, i32 ptrtoint (ptr @___asan_gen_.8 to i32), i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.10 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.11 to i32), i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.13 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @asv_kfc_table to i32), i32 3360, i32 4192, i32 ptrtoint (ptr @___asan_gen_.14 to i32), i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.16 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.exynos5422_asv_init to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.17 to i32), i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.exynos5422_asv_init.2 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.18 to i32), i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.exynos5422_asv_init.3 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.19 to i32), i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.exynos5422_asv_init.4 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.20 to i32), i32 ptrtoint (ptr @___asan_gen_.15 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @exynos5422_asv_init(ptr noundef %asv) #0 align 64 {
entry:
  %reg.i = alloca i32, align 4
  %pkgid_reg.i = alloca i32, align 4
  %auxi_reg.i = alloca i32, align 4
  %pkg_id = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #6
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pkg_id) #4
  %0 = ptrtoint ptr %pkg_id to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pkg_id, align 4, !annotation !21
  %chipid_regmap = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 1
  %1 = ptrtoint ptr %chipid_regmap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %chipid_regmap, align 4
  %call = call i32 @regmap_read(ptr noundef %2, i32 noundef 4, ptr noundef nonnull %pkg_id) #4
  %of_bin = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 7
  %3 = ptrtoint ptr %of_bin to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %of_bin, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %cmp = icmp eq i32 %4, 2
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.else

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #6
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #6
  %5 = ptrtoint ptr %pkg_id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pkg_id, align 4
  %7 = trunc i32 %6 to i8
  %8 = lshr i8 %7, 3
  %9 = and i8 %8, 1
  %10 = and i32 %6, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.i75 = icmp ne i32 %10, 0
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %.sink = phi i8 [ %9, %if.else ], [ 0, %entry.if.end_crit_edge ]
  %bin2.0.off0 = phi i1 [ %tobool.i75, %if.else ], [ true, %entry.if.end_crit_edge ]
  %11 = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 6
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %.sink, ptr %11, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pkgid_reg.i) #4
  %13 = ptrtoint ptr %pkgid_reg.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %pkgid_reg.i, align 4, !annotation !21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %auxi_reg.i) #4
  %14 = ptrtoint ptr %auxi_reg.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -1, ptr %auxi_reg.i, align 4, !annotation !21
  %15 = ptrtoint ptr %chipid_regmap to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %chipid_regmap, align 4
  %call.i = call i32 @regmap_read(ptr noundef %16, i32 noundef 4, ptr noundef nonnull %pkgid_reg.i) #4
  %17 = ptrtoint ptr %chipid_regmap to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %chipid_regmap, align 4
  %call2.i = call i32 @regmap_read(ptr noundef %18, i32 noundef 28, ptr noundef nonnull %auxi_reg.i) #4
  %19 = ptrtoint ptr %11 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %11, align 4, !range !22
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i = icmp eq i8 %20, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #6
  %21 = ptrtoint ptr %pkgid_reg.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %pkgid_reg.i, align 4
  %shr.i = lshr i32 %22, 17
  %and.i = and i32 %shr.i, 15
  %shr3.i = lshr i32 %22, 21
  %and4.i = and i32 %shr3.i, 3
  %23 = and i32 %22, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool7.not.i = icmp eq i32 %23, 0
  %24 = sub nsw i32 0, %and4.i
  %retval.0.p.i = select i1 %tobool7.not.i, i32 %24, i32 %and4.i
  %retval.0.i = add nsw i32 %retval.0.p.i, %and.i
  br label %exynos5422_asv_get_group.exit

if.end.i:                                         ; preds = %if.end
  %25 = ptrtoint ptr %auxi_reg.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %auxi_reg.i, align 4
  %and11.i = and i32 %26, 127
  %27 = ptrtoint ptr %pkgid_reg.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %pkgid_reg.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 939524095, i32 %28)
  %cmp15.not.i = icmp ugt i32 %28, 939524095
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %and11.i)
  %cmp20.not.i = icmp ugt i32 %and11.i, 13
  %or.cond.i = select i1 %cmp15.not.i, i1 %cmp20.not.i, i1 false
  br i1 %or.cond.i, label %for.inc.i, label %if.end.i.exynos5422_asv_get_group.exit_crit_edge

if.end.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1107296255, i32 %28)
  %cmp15.not.1.i = icmp ugt i32 %28, 1107296255
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %and11.i)
  %cmp20.not.1.i = icmp ugt i32 %and11.i, 21
  %or.cond41.i = select i1 %cmp15.not.1.i, i1 %cmp20.not.1.i, i1 false
  br i1 %or.cond41.i, label %for.inc.1.i, label %for.inc.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.1.i:                                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1174405119, i32 %28)
  %cmp15.not.2.i = icmp ugt i32 %28, 1174405119
  call void @__sanitizer_cov_trace_const_cmp4(i32 25, i32 %and11.i)
  %cmp20.not.2.i = icmp ugt i32 %and11.i, 25
  %or.cond42.i = select i1 %cmp15.not.2.i, i1 %cmp20.not.2.i, i1 false
  br i1 %or.cond42.i, label %for.inc.2.i, label %for.inc.1.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.1.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.2.i:                                      ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1224736767, i32 %28)
  %cmp15.not.3.i = icmp ugt i32 %28, 1224736767
  call void @__sanitizer_cov_trace_const_cmp4(i32 30, i32 %and11.i)
  %cmp20.not.3.i = icmp ugt i32 %and11.i, 30
  %or.cond43.i = select i1 %cmp15.not.3.i, i1 %cmp20.not.3.i, i1 false
  br i1 %or.cond43.i, label %for.inc.3.i, label %for.inc.2.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.2.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.3.i:                                      ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1258291199, i32 %28)
  %cmp15.not.4.i = icmp ugt i32 %28, 1258291199
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %and11.i)
  %cmp20.not.4.i = icmp ugt i32 %and11.i, 36
  %or.cond44.i = select i1 %cmp15.not.4.i, i1 %cmp20.not.4.i, i1 false
  br i1 %or.cond44.i, label %for.inc.4.i, label %for.inc.3.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.3.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.4.i:                                      ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1291845631, i32 %28)
  %cmp15.not.5.i = icmp ugt i32 %28, 1291845631
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %and11.i)
  %cmp20.not.5.i = icmp ugt i32 %and11.i, 43
  %or.cond45.i = select i1 %cmp15.not.5.i, i1 %cmp20.not.5.i, i1 false
  br i1 %or.cond45.i, label %for.inc.5.i, label %for.inc.4.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.4.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.5.i:                                      ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1325400063, i32 %28)
  %cmp15.not.6.i = icmp ugt i32 %28, 1325400063
  call void @__sanitizer_cov_trace_const_cmp4(i32 51, i32 %and11.i)
  %cmp20.not.6.i = icmp ugt i32 %and11.i, 51
  %or.cond46.i = select i1 %cmp15.not.6.i, i1 %cmp20.not.6.i, i1 false
  br i1 %or.cond46.i, label %for.inc.6.i, label %for.inc.5.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.5.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.5.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.6.i:                                      ; preds = %for.inc.5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1358954495, i32 %28)
  %cmp15.not.7.i = icmp ugt i32 %28, 1358954495
  call void @__sanitizer_cov_trace_const_cmp4(i32 65, i32 %and11.i)
  %cmp20.not.7.i = icmp ugt i32 %and11.i, 65
  %or.cond47.i = select i1 %cmp15.not.7.i, i1 %cmp20.not.7.i, i1 false
  br i1 %or.cond47.i, label %for.inc.7.i, label %for.inc.6.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.6.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.6.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.7.i:                                      ; preds = %for.inc.6.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1392508927, i32 %28)
  %cmp15.not.8.i = icmp ugt i32 %28, 1392508927
  call void @__sanitizer_cov_trace_const_cmp4(i32 81, i32 %and11.i)
  %cmp20.not.8.i = icmp ugt i32 %and11.i, 81
  %or.cond48.i = select i1 %cmp15.not.8.i, i1 %cmp20.not.8.i, i1 false
  br i1 %or.cond48.i, label %for.inc.8.i, label %for.inc.7.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.7.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.7.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.8.i:                                      ; preds = %for.inc.7.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1426063359, i32 %28)
  %cmp15.not.9.i = icmp ugt i32 %28, 1426063359
  call void @__sanitizer_cov_trace_const_cmp4(i32 98, i32 %and11.i)
  %cmp20.not.9.i = icmp ugt i32 %and11.i, 98
  %or.cond49.i = select i1 %cmp15.not.9.i, i1 %cmp20.not.9.i, i1 false
  br i1 %or.cond49.i, label %for.inc.9.i, label %for.inc.8.i.exynos5422_asv_get_group.exit_crit_edge

for.inc.8.i.exynos5422_asv_get_group.exit_crit_edge: ; preds = %for.inc.8.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_get_group.exit

for.inc.9.i:                                      ; preds = %for.inc.8.i
  call void @__sanitizer_cov_trace_pc() #6
  call void @__sanitizer_cov_trace_const_cmp4(i32 1476395007, i32 %28)
  %cmp15.not.10.i = icmp ugt i32 %28, 1476395007
  call void @__sanitizer_cov_trace_const_cmp4(i32 119, i32 %and11.i)
  %cmp20.not.10.i = icmp ugt i32 %and11.i, 119
  %or.cond50.i = select i1 %cmp15.not.10.i, i1 %cmp20.not.10.i, i1 false
  %spec.select.i = select i1 %or.cond50.i, i32 11, i32 10
  br label %exynos5422_asv_get_group.exit

exynos5422_asv_get_group.exit:                    ; preds = %for.inc.9.i, %for.inc.8.i.exynos5422_asv_get_group.exit_crit_edge, %for.inc.7.i.exynos5422_asv_get_group.exit_crit_edge, %for.inc.6.i.exynos5422_asv_get_group.exit_crit_edge, %for.inc.5.i.exynos5422_asv_get_group.exit_crit_edge, %for.inc.4.i.exynos5422_asv_get_group.exit_crit_edge, %for.inc.3.i.exynos5422_asv_get_group.exit_crit_edge, %for.inc.2.i.exynos5422_asv_get_group.exit_crit_edge, %for.inc.1.i.exynos5422_asv_get_group.exit_crit_edge, %for.inc.i.exynos5422_asv_get_group.exit_crit_edge, %if.end.i.exynos5422_asv_get_group.exit_crit_edge, %if.then.i
  %retval.1.i = phi i32 [ %retval.0.i, %if.then.i ], [ 0, %if.end.i.exynos5422_asv_get_group.exit_crit_edge ], [ 1, %for.inc.i.exynos5422_asv_get_group.exit_crit_edge ], [ 2, %for.inc.1.i.exynos5422_asv_get_group.exit_crit_edge ], [ 3, %for.inc.2.i.exynos5422_asv_get_group.exit_crit_edge ], [ 4, %for.inc.3.i.exynos5422_asv_get_group.exit_crit_edge ], [ 5, %for.inc.4.i.exynos5422_asv_get_group.exit_crit_edge ], [ 6, %for.inc.5.i.exynos5422_asv_get_group.exit_crit_edge ], [ 7, %for.inc.6.i.exynos5422_asv_get_group.exit_crit_edge ], [ 8, %for.inc.7.i.exynos5422_asv_get_group.exit_crit_edge ], [ 9, %for.inc.8.i.exynos5422_asv_get_group.exit_crit_edge ], [ %spec.select.i, %for.inc.9.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %auxi_reg.i) #4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pkgid_reg.i) #4
  %group = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 4
  %29 = ptrtoint ptr %group to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %retval.1.i, ptr %group, align 4
  %30 = ptrtoint ptr %pkg_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pkg_id, align 4
  %shr.i76 = lshr i32 %31, 8
  %and.i77 = and i32 %shr.i76, 3
  %table = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 5
  %32 = ptrtoint ptr %table to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %and.i77, ptr %table, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %reg.i) #4
  %33 = ptrtoint ptr %reg.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 -1, ptr %reg.i, align 4, !annotation !21
  %34 = ptrtoint ptr %chipid_regmap to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %chipid_regmap, align 4
  %call.i79 = call i32 @regmap_read(ptr noundef %35, i32 noundef 28, ptr noundef nonnull %reg.i) #4
  %base_volt.i = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 0, i32 4
  %36 = ptrtoint ptr %base_volt.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 1000000, ptr %base_volt.i, align 4
  %37 = ptrtoint ptr %reg.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %reg.i, align 4
  %shr.i80 = lshr i32 %38, 8
  %and.i81 = and i32 %shr.i80, 3
  %switch.tableidx = add nsw i32 %and.i81, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %39 = icmp ult i32 %switch.tableidx, 3
  br i1 %39, label %switch.lookup, label %exynos5422_asv_get_group.exit.__asv_offset_voltage.exit.i_crit_edge

exynos5422_asv_get_group.exit.__asv_offset_voltage.exit.i_crit_edge: ; preds = %exynos5422_asv_get_group.exit
  call void @__sanitizer_cov_trace_pc() #6
  br label %__asv_offset_voltage.exit.i

switch.lookup:                                    ; preds = %exynos5422_asv_get_group.exit
  call void @__sanitizer_cov_trace_pc() #6
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.exynos5422_asv_init, i32 0, i32 %switch.tableidx
  %40 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %40)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %__asv_offset_voltage.exit.i

__asv_offset_voltage.exit.i:                      ; preds = %switch.lookup, %exynos5422_asv_get_group.exit.__asv_offset_voltage.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %switch.load, %switch.lookup ], [ 0, %exynos5422_asv_get_group.exit.__asv_offset_voltage.exit.i_crit_edge ]
  %offset_volt_h.i = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 0, i32 5
  %41 = ptrtoint ptr %offset_volt_h.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %retval.0.i.i, ptr %offset_volt_h.i, align 4
  %shr3.i82 = lshr i32 %38, 10
  %and4.i83 = and i32 %shr3.i82, 3
  %switch.tableidx91 = add nsw i32 %and4.i83, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx91)
  %42 = icmp ult i32 %switch.tableidx91, 3
  br i1 %42, label %switch.lookup90, label %__asv_offset_voltage.exit.i.__asv_offset_voltage.exit31.i_crit_edge

__asv_offset_voltage.exit.i.__asv_offset_voltage.exit31.i_crit_edge: ; preds = %__asv_offset_voltage.exit.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %__asv_offset_voltage.exit31.i

switch.lookup90:                                  ; preds = %__asv_offset_voltage.exit.i
  call void @__sanitizer_cov_trace_pc() #6
  %switch.gep92 = getelementptr inbounds [3 x i32], ptr @switch.table.exynos5422_asv_init.2, i32 0, i32 %switch.tableidx91
  %43 = ptrtoint ptr %switch.gep92 to i32
  call void @__asan_load4_noabort(i32 %43)
  %switch.load93 = load i32, ptr %switch.gep92, align 4
  br label %__asv_offset_voltage.exit31.i

__asv_offset_voltage.exit31.i:                    ; preds = %switch.lookup90, %__asv_offset_voltage.exit.i.__asv_offset_voltage.exit31.i_crit_edge
  %retval.0.i30.i = phi i32 [ %switch.load93, %switch.lookup90 ], [ 0, %__asv_offset_voltage.exit.i.__asv_offset_voltage.exit31.i_crit_edge ]
  %offset_volt_l.i = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 0, i32 6
  %44 = ptrtoint ptr %offset_volt_l.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %retval.0.i30.i, ptr %offset_volt_l.i, align 4
  %base_volt8.i = getelementptr %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 1, i32 4
  %45 = ptrtoint ptr %base_volt8.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 1000000, ptr %base_volt8.i, align 4
  %shr9.i = lshr i32 %38, 12
  %and10.i = and i32 %shr9.i, 3
  %switch.tableidx95 = add nsw i32 %and10.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx95)
  %46 = icmp ult i32 %switch.tableidx95, 3
  br i1 %46, label %switch.lookup94, label %__asv_offset_voltage.exit31.i.__asv_offset_voltage.exit36.i_crit_edge

__asv_offset_voltage.exit31.i.__asv_offset_voltage.exit36.i_crit_edge: ; preds = %__asv_offset_voltage.exit31.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %__asv_offset_voltage.exit36.i

switch.lookup94:                                  ; preds = %__asv_offset_voltage.exit31.i
  call void @__sanitizer_cov_trace_pc() #6
  %switch.gep96 = getelementptr inbounds [3 x i32], ptr @switch.table.exynos5422_asv_init.3, i32 0, i32 %switch.tableidx95
  %47 = ptrtoint ptr %switch.gep96 to i32
  call void @__asan_load4_noabort(i32 %47)
  %switch.load97 = load i32, ptr %switch.gep96, align 4
  br label %__asv_offset_voltage.exit36.i

__asv_offset_voltage.exit36.i:                    ; preds = %switch.lookup94, %__asv_offset_voltage.exit31.i.__asv_offset_voltage.exit36.i_crit_edge
  %retval.0.i35.i = phi i32 [ %switch.load97, %switch.lookup94 ], [ 0, %__asv_offset_voltage.exit31.i.__asv_offset_voltage.exit36.i_crit_edge ]
  %offset_volt_h12.i = getelementptr %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 1, i32 5
  %48 = ptrtoint ptr %offset_volt_h12.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %retval.0.i35.i, ptr %offset_volt_h12.i, align 4
  %shr13.i = lshr i32 %38, 14
  %and14.i = and i32 %shr13.i, 3
  %switch.tableidx99 = add nsw i32 %and14.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx99)
  %49 = icmp ult i32 %switch.tableidx99, 3
  br i1 %49, label %switch.lookup98, label %__asv_offset_voltage.exit36.i.exynos5422_asv_offset_voltage_setup.exit_crit_edge

__asv_offset_voltage.exit36.i.exynos5422_asv_offset_voltage_setup.exit_crit_edge: ; preds = %__asv_offset_voltage.exit36.i
  call void @__sanitizer_cov_trace_pc() #6
  br label %exynos5422_asv_offset_voltage_setup.exit

switch.lookup98:                                  ; preds = %__asv_offset_voltage.exit36.i
  call void @__sanitizer_cov_trace_pc() #6
  %switch.gep100 = getelementptr inbounds [3 x i32], ptr @switch.table.exynos5422_asv_init.4, i32 0, i32 %switch.tableidx99
  %50 = ptrtoint ptr %switch.gep100 to i32
  call void @__asan_load4_noabort(i32 %50)
  %switch.load101 = load i32, ptr %switch.gep100, align 4
  br label %exynos5422_asv_offset_voltage_setup.exit

exynos5422_asv_offset_voltage_setup.exit:         ; preds = %switch.lookup98, %__asv_offset_voltage.exit36.i.exynos5422_asv_offset_voltage_setup.exit_crit_edge
  %retval.0.i40.i = phi i32 [ %switch.load101, %switch.lookup98 ], [ 0, %__asv_offset_voltage.exit36.i.exynos5422_asv_offset_voltage_setup.exit_crit_edge ]
  %offset_volt_l16.i = getelementptr %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 1, i32 6
  %51 = ptrtoint ptr %offset_volt_l16.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %retval.0.i40.i, ptr %offset_volt_l16.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %reg.i) #4
  br i1 %bin2.0.off0, label %exynos5422_asv_offset_voltage_setup.exit.if.end39_crit_edge, label %if.else8

exynos5422_asv_offset_voltage_setup.exit.if.end39_crit_edge: ; preds = %exynos5422_asv_offset_voltage_setup.exit
  call void @__sanitizer_cov_trace_pc() #6
  br label %if.end39

if.else8:                                         ; preds = %exynos5422_asv_offset_voltage_setup.exit
  call void @__sanitizer_cov_trace_pc() #6
  %52 = ptrtoint ptr %table to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %table, align 4
  %54 = and i32 %53, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %54)
  %switch = icmp eq i32 %54, 2
  %sub = add nsw i32 %53, -1
  %spec.select = select i1 %switch, i32 %sub, i32 0
  %arrayidx27.c = getelementptr [4 x [20 x [15 x i32]]], ptr @asv_arm_table, i32 0, i32 %spec.select
  br label %if.end39

if.end39:                                         ; preds = %if.else8, %exynos5422_asv_offset_voltage_setup.exit.if.end39_crit_edge
  %.sink89 = phi i32 [ 20, %if.else8 ], [ 17, %exynos5422_asv_offset_voltage_setup.exit.if.end39_crit_edge ]
  %arrayidx27.c.sink = phi ptr [ %arrayidx27.c, %if.else8 ], [ getelementptr inbounds ([4 x [20 x [15 x i32]]], ptr @asv_arm_table, i32 0, i32 3), %exynos5422_asv_offset_voltage_setup.exit.if.end39_crit_edge ]
  %.sink88 = phi i32 [ 14, %if.else8 ], [ 12, %exynos5422_asv_offset_voltage_setup.exit.if.end39_crit_edge ]
  %table_index.086 = phi i32 [ %spec.select, %if.else8 ], [ 3, %exynos5422_asv_offset_voltage_setup.exit.if.end39_crit_edge ]
  %55 = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 0, i32 1
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr @.str, ptr %55, align 4
  %57 = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 0, i32 3
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %.sink89, ptr %57, align 4
  %59 = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 0, i32 3, i32 1
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 15, ptr %59, align 4
  %61 = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 0, i32 3, i32 2
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %arrayidx27.c.sink, ptr %61, align 4
  %63 = getelementptr %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 1, i32 1
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr @.str.1, ptr %63, align 4
  %65 = getelementptr %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 1, i32 3
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %.sink88, ptr %65, align 4
  %num_cols41 = getelementptr %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 1, i32 3, i32 1
  %67 = ptrtoint ptr %num_cols41 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 15, ptr %num_cols41, align 4
  %arrayidx42 = getelementptr [4 x [14 x [15 x i32]]], ptr @asv_kfc_table, i32 0, i32 %table_index.086
  %buf45 = getelementptr %struct.exynos_asv, ptr %asv, i32 0, i32 2, i32 1, i32 3, i32 2
  %68 = ptrtoint ptr %buf45 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %arrayidx42, ptr %buf45, align 4
  %opp_get_voltage = getelementptr inbounds %struct.exynos_asv, ptr %asv, i32 0, i32 3
  %69 = ptrtoint ptr %opp_get_voltage to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr @exynos5422_asv_opp_get_voltage, ptr %opp_get_voltage, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pkg_id) #4
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regmap_read(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @exynos5422_asv_opp_get_voltage(ptr nocapture noundef readonly %subsys, i32 noundef %level, i32 noundef %volt) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #6
  call void @llvm.arm.gnu.eabi.mcount()
  %table = getelementptr inbounds %struct.exynos_asv_subsys, ptr %subsys, i32 0, i32 3
  %0 = ptrtoint ptr %table to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %table, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %level)
  %cmp.not = icmp ugt i32 %1, %level
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #6
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #6
  %2 = ptrtoint ptr %subsys to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %subsys, align 4
  %group = getelementptr inbounds %struct.exynos_asv, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %group, align 4
  %add.i = add i32 %5, 1
  %buf.i.i = getelementptr inbounds %struct.exynos_asv_subsys, ptr %subsys, i32 0, i32 3, i32 2
  %6 = ptrtoint ptr %buf.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %buf.i.i, align 4
  %num_cols.i.i = getelementptr inbounds %struct.exynos_asv_subsys, ptr %subsys, i32 0, i32 3, i32 1
  %8 = ptrtoint ptr %num_cols.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_cols.i.i, align 4
  %mul.i.i = mul i32 %9, %level
  %add.i.i = add i32 %add.i, %mul.i.i
  %arrayidx.i.i = getelementptr i32, ptr %7, i32 %add.i.i
  %10 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i.i, align 4
  %base_volt = getelementptr inbounds %struct.exynos_asv_subsys, ptr %subsys, i32 0, i32 4
  %12 = ptrtoint ptr %base_volt to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %base_volt, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %volt)
  %cmp1 = icmp ult i32 %13, %volt
  %offset_volt_h = getelementptr inbounds %struct.exynos_asv_subsys, ptr %subsys, i32 0, i32 5
  %offset_volt_l = getelementptr inbounds %struct.exynos_asv_subsys, ptr %subsys, i32 0, i32 6
  %.pn.in = select i1 %cmp1, ptr %offset_volt_h, ptr %offset_volt_l
  %14 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn = load i32, ptr %.pn.in, align 4
  %asv_volt.0 = add i32 %.pn, %11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %asv_volt.0, %if.end ], [ %volt, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #4

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #5 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 8)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #5 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 8)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { nounwind }
attributes #5 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #6 = { nomerge }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10}
!llvm.module.flags = !{!12, !13, !14, !15, !16, !17, !18, !19}
!llvm.ident = !{!20}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../drivers/soc/samsung/exynos5422-asv.c", i32 485, i32 26}
!2 = !{ptr @.str.1, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../drivers/soc/samsung/exynos5422-asv.c", i32 494, i32 26}
!4 = !{ptr @__ksymtab_exynos5422_asv_init, !5, !"__ksymtab_exynos5422_asv_init", i1 false, i1 false}
!5 = !{!"../drivers/soc/samsung/exynos5422-asv.c", i32 506, i32 1}
!6 = distinct !{null, !7, !"__asv_limits", i1 false, i1 false}
!7 = !{!"../drivers/soc/samsung/exynos5422-asv.c", i32 321, i32 37}
!8 = !{ptr @asv_arm_table, !9, !"asv_arm_table", i1 false, i1 false}
!9 = !{!"../drivers/soc/samsung/exynos5422-asv.c", i32 35, i32 18}
!10 = !{ptr @asv_kfc_table, !11, !"asv_kfc_table", i1 false, i1 false}
!11 = !{!"../drivers/soc/samsung/exynos5422-asv.c", i32 201, i32 18}
!12 = !{i32 1, !"wchar_size", i32 2}
!13 = !{i32 1, !"min_enum_size", i32 4}
!14 = !{i32 8, !"branch-target-enforcement", i32 0}
!15 = !{i32 8, !"sign-return-address", i32 0}
!16 = !{i32 8, !"sign-return-address-all", i32 0}
!17 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!18 = !{i32 7, !"uwtable", i32 1}
!19 = !{i32 7, !"frame-pointer", i32 2}
!20 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!21 = !{!"auto-init"}
!22 = !{i8 0, i8 2}
